context,query,challenge,completion
"/*
 * Copyright (c) 1999, Oracle and/or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Oracle designates this
 * particular file as subject to the ""Classpath"" exception as provided
 * by Oracle in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 */

package krb.javax.naming;

/**
  * This interface is implemented by an object that can provide a
  * Reference to itself.
  *<p>
  * A Reference represents a way of recording address information about
  * objects which themselves are not directly bound to the naming system.
  * Such objects can implement the Referenceable interface as a way
  * for programs that use that object to determine what its Reference is.
  * For example, when binding a object, if an object implements the
  * Referenceable interface, getReference() can be invoked on the object to
  * get its Reference to use for binding.
  *
  * @author Rosanna Lee
  * @author Scott Seligman
  * @author R. Vasudevan
  *
  * @see Context#bind
  * @see krb.javax.naming.spi.NamingManager#getObjectInstance
  * @see Reference
  * @since 1.3
  */
public interface Referenceable {
    /**
      * Retrieves the Reference of this object.
      *
      * @return The non-null Reference of this object.
      * @exception NamingException If a naming exception was encountered
      *         while retrieving the reference.
      */
    Reference getReference() throws NamingException;
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '(c)', '1999,', 'Oracle', 'and/or', 'its', 'affiliates.', 'All', 'rights', 'reserved.', '*', 'DO', 'NOT', 'ALTER', 'OR', 'REMOVE', 'COPYRIGHT', 'NOTICES', 'OR', 'THIS', 'FILE', 'HEADER.', '*', '*', 'This', 'code', 'is', 'free', 'software;', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', 'it', '*', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'version', '2', 'only,', 'as', '*', 'published', 'by', 'the', 'Free', 'Software', 'Foundation.', 'Oracle', 'designates', 'this', '*', 'particular', 'file', 'as', 'subject', 'to', 'the', '""Classpath""', 'exception', 'as', 'provided', '*', 'by', 'Oracle', 'in', 'the', 'LICENSE', 'file', 'that', 'accompanied', 'this', 'code.', '*', '*', 'This', 'code', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', 'but', 'WITHOUT', '*', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', 'MERCHANTABILITY', 'or', '*', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', 'GNU', 'General', 'Public', 'License', '*', 'version', '2', 'for', 'more', 'details', '(a', 'copy', 'is', 'included', 'in', 'the', 'LICENSE', 'file', 'that', '*', 'accompanied', 'this', 'code).', '*', '*', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'version', '*', '2', 'along', 'with', 'this', 'work;', 'if', 'not,', 'write', 'to', 'the', 'Free', 'Software', 'Foundation,', '*', 'Inc.,', '51', 'Franklin', 'St,', 'Fifth', 'Floor,', 'Boston,', 'MA', '02110-1301', 'USA.', '*', '*', 'Please', 'contact', 'Oracle,', '500', 'Oracle', 'Parkway,', 'Redwood', 'Shores,', 'CA', '94065', 'USA', '*', 'or', 'visit', 'www.oracle.com', 'if', 'you', 'need', 'additional', 'information', 'or', 'have', 'any', '*', 'questions.', '*/', 'package', 'krb.javax.naming;', '/**', '*', 'This', 'interface', 'is', 'implemented', 'by', 'an', 'object', 'that', 'can', 'provide', 'a', '*', 'Reference', 'to', 'itself.', '*<p>', '*', 'A', 'Reference', 'represents', 'a', 'way', 'of', 'recording', 'address', 'information', 'about', '*', 'objects', 'which', 'themselves', 'are', 'not', 'directly', 'bound', 'to', 'the', 'naming', 'system.', '*', 'Such', 'objects', 'can', 'implement', 'the', 'Referenceable', 'interface', 'as', 'a', 'way', '*', 'for', 'programs', 'that', 'use', 'that', 'object', 'to', 'determine', 'what', 'its', 'Reference', 'is.', '*', 'For', 'example,', 'when', 'binding', 'a', 'object,', 'if', 'an', 'object', 'implements', 'the', '*', 'Referenceable', 'interface,', 'getReference()', 'can', 'be', 'invoked', 'on', 'the', 'object', 'to', '*', 'get', 'its', 'Reference', 'to', 'use', 'for', 'binding.', '*', '*', '@author', 'Rosanna', 'Lee', '*', '@author', 'Scott', 'Seligman', '*', '@author', 'R.', 'Vasudevan', '*', '*', '@see', 'Context#bind', '*', '@see', 'krb.javax.naming.spi.NamingManager#getObjectInstance', '*', '@see', 'Reference', '*', '@since', '1.3', '*/', 'public', 'interface', 'Referenceable', '{', '/**', '*', 'Retrieves', 'the', 'Reference', 'of', 'this', 'object.', '*', '*', '@return', 'The', 'non-null', 'Reference', 'of', 'this', 'object.', '*', '@exception', 'NamingException', 'If', 'a', 'naming', 'exception', 'was', 'encountered', '*', 'while', 'retrieving', 'the', 'reference.', '*/', 'Reference', 'getReference()', 'throws', 'NamingException;', '}', '```']",challenge not surrounded by ''': ,
"package seal.haku.empirical.logProcessing;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.HashSet;

/**
 * @Author Lisa
 * @Date: Jan 21, 2015
 */
public class AnomalyCalculator {
	private String[] keyword = { ""fix"", ""error"", ""bug"", ""issue"", ""mistake"",
			""incorrect"", ""fault"", ""defect"", ""flaw"" };
	private HashSet<String> dictBuggy = new HashSet<String>(
			Arrays.asList(keyword));

	/**
	 * read upi file
	 */
	public void readFile(String file) {
		String commitNo = """";
		int buggy = 0;
		boolean isMsg = false;
		String fileName = """";
		int addedLine = 0;
		int deletedLine = 0;
		try {
			BufferedReader reader = new BufferedReader(new FileReader(file));
			PrintWriter writer = new PrintWriter(file + "".msg"");
			String line = """";
			while ((line = reader.readLine()) != null) {
				if (line.equals(""""))
					continue;
				if (line.startsWith(""commit "")) {
					if (fileName.length() > 0)
						writer.println(commitNo + "","" + fileName + "","" + buggy+"",""+addedLine+"",""+deletedLine);
					fileName = """";
					commitNo = line.split(""commit "")[1].trim().substring(0, 10);
					buggy = 0;

				} else if (line.startsWith(""Date: ""))
					isMsg = true;
				else if (line.startsWith(""diff ""))
					isMsg = false;
				else if (isMsg && buggy == 0) {

					for (String s : dictBuggy) {
						if (line.contains(s))
							buggy = 1;
					}
				} else if (line.startsWith(""+++"")) {
					if (!fileName.equals(""""))
						writer.println(commitNo + "","" + fileName + "",""
								+ buggy+"",""+addedLine+"",""+deletedLine);
					fileName = line.substring(6);
					addedLine =0;
					deletedLine = 0;
					
				} else if (line.startsWith(""+ ""))
					addedLine++;
				else if (line.startsWith(""- ""))
					deletedLine++;
			}
			writer.println(commitNo + "","" + fileName + "",""
					+ buggy+"",""+addedLine+"",""+deletedLine);
			reader.close();
			writer.close();
			System.out.println(""finish ""+file+"".msg"");
		} catch (Exception e) {
//			e.printStackTrace();
		}
	}

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'seal.haku.empirical.logProcessing;', 'import', 'java.io.BufferedReader;', 'import', 'java.io.FileReader;', 'import', 'java.io.PrintWriter;', 'import', 'java.util.Arrays;', 'import', 'java.util.HashSet;', '/**', '*', '@Author', 'Lisa', '*', '@Date:', 'Jan', '21,', '2015', '*/', 'public', 'class', 'AnomalyCalculator', '{', 'private', 'String[]', 'keyword', '=', '{', '""fix"",', '""error"",', '""bug"",', '""issue"",', '""mistake"",', '""incorrect"",', '""fault"",', '""defect"",', '""flaw""', '};', 'private', 'HashSet<String>', 'dictBuggy', '=', 'new', 'HashSet<String>(', 'Arrays.asList(keyword));', '/**', '*', 'read', 'upi', 'file', '*/', 'public', 'void', 'readFile(String', 'file)', '{', 'String', 'commitNo', '=', '"""";', 'int', 'buggy', '=', '0;', 'boolean', 'isMsg', '=', 'false;', 'String', 'fileName', '=', '"""";', 'int', 'addedLine', '=', '0;', 'int', 'deletedLine', '=', '0;', 'try', '{', 'BufferedReader', 'reader', '=', 'new', 'BufferedReader(new', 'FileReader(file));', 'PrintWriter', 'writer', '=', 'new', 'PrintWriter(file', '+', '"".msg"");', 'String', 'line', '=', '"""";', 'while', '((line', '=', 'reader.readLine())', '!=', 'null)', '{', 'if', '(line.equals(""""))', 'continue;', 'if', '(line.startsWith(""commit', '""))', '{', 'if', '(fileName.length()', '>', '0)', 'writer.println(commitNo', '+', '"",""', '+', 'fileName', '+', '"",""', '+', 'buggy+"",""+addedLine+"",""+deletedLine);', 'fileName', '=', '"""";', 'commitNo', '=', 'line.split(""commit', '"")[1].trim().substring(0,', '10);', 'buggy', '=', '0;', '}', 'else', 'if', '(line.startsWith(""Date:', '""))', 'isMsg', '=', 'true;', 'else', 'if', '(line.startsWith(""diff', '""))', 'isMsg', '=', 'false;', 'else', 'if', '(isMsg', '&&', 'buggy', '==', '0)', '{', 'for', '(String', 's', ':', 'dictBuggy)', '{', 'if', '(line.contains(s))', 'buggy', '=', '1;', '}', '}', 'else', 'if', '(line.startsWith(""+++""))', '{', 'if', '(!fileName.equals(""""))', 'writer.println(commitNo', '+', '"",""', '+', 'fileName', '+', '"",""', '+', 'buggy+"",""+addedLine+"",""+deletedLine);', 'fileName', '=', 'line.substring(6);', 'addedLine', '=0;', 'deletedLine', '=', '0;', '}', 'else', 'if', '(line.startsWith(""+', '""))', 'addedLine++;', 'else', 'if', '(line.startsWith(""-', '""))', 'deletedLine++;', '}', 'writer.println(commitNo', '+', '"",""', '+', 'fileName', '+', '"",""', '+', 'buggy+"",""+addedLine+"",""+deletedLine);', 'reader.close();', 'writer.close();', 'System.out.println(""finish', '""+file+"".msg"");', '}', 'catch', '(Exception', 'e)', '{', '//', 'e.printStackTrace();', '}', '}', '}', '```']",challenge not surrounded by ''': ,
"/*
 * SonarQube, open source software quality management tool.
 * Copyright (C) 2008-2014 SonarSource
 * mailto:contact AT sonarsource DOT com
 *
 * SonarQube is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * SonarQube is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */
package org.sonar.xoo.rule;

import org.sonar.api.batch.Sensor;
import org.sonar.api.batch.SensorContext;
import org.sonar.api.batch.fs.FileSystem;
import org.sonar.api.batch.fs.InputFile;
import org.sonar.api.batch.rule.ActiveRules;
import org.sonar.api.resources.File;
import org.sonar.api.resources.Project;
import org.sonar.api.rule.RuleKey;
import org.sonar.xoo.Xoo;

/**
 * @deprecated to be replaced by {@link org.sonar.api.batch.sensor.Sensor}
 */
public abstract class AbstractDeprecatedXooRuleSensor implements Sensor {

  private final FileSystem fs;
  private final ActiveRules activeRules;

  public AbstractDeprecatedXooRuleSensor(FileSystem fs, ActiveRules activeRules) {
    this.fs = fs;
    this.activeRules = activeRules;
  }

  protected abstract String getRuleKey();

  @Override
  public boolean shouldExecuteOnProject(Project project) {
    return fs.hasFiles(fs.predicates().hasLanguages(Xoo.KEY))
      && (activeRules.find(RuleKey.of(XooRulesDefinition.XOO_REPOSITORY, getRuleKey())) != null);
  }

  @Override
  public final void analyse(Project project, SensorContext context) {
    doAnalyse(context, Xoo.KEY);
  }

  private void doAnalyse(SensorContext context, String languageKey) {
    RuleKey ruleKey = RuleKey.of(XooRulesDefinition.XOO_REPOSITORY, getRuleKey());
    if (activeRules.find(ruleKey) == null) {
      return;
    }
    for (InputFile inputFile : fs.inputFiles(fs.predicates().hasLanguage(languageKey))) {
      File sonarFile = File.create(inputFile.relativePath());
      sonarFile = context.getResource(sonarFile);
      processFile(inputFile, sonarFile, context, ruleKey, languageKey);
    }
  }

  protected abstract void processFile(InputFile inputFile, File sonarFile, SensorContext context, RuleKey ruleKey, String languageKey);
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'SonarQube,', 'open', 'source', 'software', 'quality', 'management', 'tool.', '*', 'Copyright', '(C)', '2008-2014', 'SonarSource', '*', 'mailto:contact', 'AT', 'sonarsource', 'DOT', 'com', '*', '*', 'SonarQube', 'is', 'free', 'software;', 'you', 'can', 'redistribute', 'it', 'and/or', '*', 'modify', 'it', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'Lesser', 'General', 'Public', '*', 'License', 'as', 'published', 'by', 'the', 'Free', 'Software', 'Foundation;', 'either', '*', 'version', '3', 'of', 'the', 'License,', 'or', '(at', 'your', 'option)', 'any', 'later', 'version.', '*', '*', 'SonarQube', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', '*', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', '*', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', 'GNU', '*', 'Lesser', 'General', 'Public', 'License', 'for', 'more', 'details.', '*', '*', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'Lesser', 'General', 'Public', 'License', '*', 'along', 'with', 'this', 'program;', 'if', 'not,', 'write', 'to', 'the', 'Free', 'Software', 'Foundation,', '*', 'Inc.,', '51', 'Franklin', 'Street,', 'Fifth', 'Floor,', 'Boston,', 'MA', '02110-1301,', 'USA.', '*/', 'package', 'org.sonar.xoo.rule;', 'import', 'org.sonar.api.batch.Sensor;', 'import', 'org.sonar.api.batch.SensorContext;', 'import', 'org.sonar.api.batch.fs.FileSystem;', 'import', 'org.sonar.api.batch.fs.InputFile;', 'import', 'org.sonar.api.batch.rule.ActiveRules;', 'import', 'org.sonar.api.resources.File;', 'import', 'org.sonar.api.resources.Project;', 'import', 'org.sonar.api.rule.RuleKey;', 'import', 'org.sonar.xoo.Xoo;', '/**', '*', '@deprecated', 'to', 'be', 'replaced', 'by', '{@link', 'org.sonar.api.batch.sensor.Sensor}', '*/', 'public', 'abstract', 'class', 'AbstractDeprecatedXooRuleSensor', 'implements', 'Sensor', '{', 'private', 'final', 'FileSystem', 'fs;', 'private', 'final', 'ActiveRules', 'activeRules;', 'public', 'AbstractDeprecatedXooRuleSensor(FileSystem', 'fs,', 'ActiveRules', 'activeRules)', '{', 'this.fs', '=', 'fs;', 'this.activeRules', '=', 'activeRules;', '}', 'protected', 'abstract', 'String', 'getRuleKey();', '@Override', 'public', 'boolean', 'shouldExecuteOnProject(Project', 'project)', '{', 'return', 'fs.hasFiles(fs.predicates().hasLanguages(Xoo.KEY))', '&&', '(activeRules.find(RuleKey.of(XooRulesDefinition.XOO_REPOSITORY,', 'getRuleKey()))', '!=', 'null);', '}', '@Override', 'public', 'final', 'void', 'analyse(Project', 'project,', 'SensorContext', 'context)', '{', 'doAnalyse(context,', 'Xoo.KEY);', '}', 'private', 'void', 'doAnalyse(SensorContext', 'context,', 'String', 'languageKey)', '{', 'RuleKey', 'ruleKey', '=', 'RuleKey.of(XooRulesDefinition.XOO_REPOSITORY,', 'getRuleKey());', 'if', '(activeRules.find(ruleKey)', '==', 'null)', '{', 'return;', '}', 'for', '(InputFile', 'inputFile', ':', 'fs.inputFiles(fs.predicates().hasLanguage(languageKey)))', '{', 'File', 'sonarFile', '=', 'File.create(inputFile.relativePath());', 'sonarFile', '=', 'context.getResource(sonarFile);', 'processFile(inputFile,', 'sonarFile,', 'context,', 'ruleKey,', 'languageKey);', '}', '}', 'protected', 'abstract', 'void', 'processFile(InputFile', 'inputFile,', 'File', 'sonarFile,', 'SensorContext', 'context,', 'RuleKey', 'ruleKey,', 'String', 'languageKey);', '}', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright (c) 2015 The Ontario Institute for Cancer Research. All rights reserved.                             
 *                                                                                                               
 * This program and the accompanying materials are made available under the terms of the GNU Public License v3.0.
 * You should have received a copy of the GNU General Public License along with                                  
 * this program. If not, see <http://www.gnu.org/licenses/>.                                                     
 *                                                                                                               
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" AND ANY                           
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES                          
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT                           
 * SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,                                
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED                          
 * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;                               
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER                              
 * IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN                         
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package org.icgc.dcc.release.core.function;

import java.util.Map;

import lombok.NonNull;
import lombok.val;

import org.apache.spark.api.java.function.Function;

import com.fasterxml.jackson.databind.node.ObjectNode;
import com.google.common.collect.Maps;

public class RenameFields implements Function<ObjectNode, ObjectNode> {

  @NonNull
  private final Map<String, String> mappings;

  public RenameFields(Map<String, String> values) {
    this.mappings = values;
  }

  public RenameFields(String... values) {
    val mappings = Maps.<String, String> newHashMap();
    for (int i = 0; i < values.length; i += 2) {
      val fieldName = values[i];
      val path = values[i + 1];
      mappings.put(fieldName, path);
    }
    this.mappings = mappings;
  }

  @Override
  public ObjectNode call(ObjectNode row) {
    for (val entry : mappings.entrySet()) {
      val oldFieldName = entry.getKey();
      val newFieldName = entry.getValue();
      val value = row.get(oldFieldName);
      row.remove(oldFieldName);
      row.set(newFieldName, value);
    }

    return row;
  }

}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '(c)', '2015', 'The', 'Ontario', 'Institute', 'for', 'Cancer', 'Research.', 'All', 'rights', 'reserved.', '*', '*', 'This', 'program', 'and', 'the', 'accompanying', 'materials', 'are', 'made', 'available', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'Public', 'License', 'v3.0.', '*', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'along', 'with', '*', 'this', 'program.', 'If', 'not,', 'see', '<http://www.gnu.org/licenses/>.', '*', '*', 'THIS', 'SOFTWARE', 'IS', 'PROVIDED', 'BY', 'THE', 'COPYRIGHT', 'HOLDERS', 'AND', 'CONTRIBUTORS', '""AS', 'IS""', 'AND', 'ANY', '*', 'EXPRESS', 'OR', 'IMPLIED', 'WARRANTIES,', 'INCLUDING,', 'BUT', 'NOT', 'LIMITED', 'TO,', 'THE', 'IMPLIED', 'WARRANTIES', '*', 'OF', 'MERCHANTABILITY', 'AND', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE', 'ARE', 'DISCLAIMED.', 'IN', 'NO', 'EVENT', '*', 'SHALL', 'THE', 'COPYRIGHT', 'HOLDER', 'OR', 'CONTRIBUTORS', 'BE', 'LIABLE', 'FOR', 'ANY', 'DIRECT,', 'INDIRECT,', '*', 'INCIDENTAL,', 'SPECIAL,', 'EXEMPLARY,', 'OR', 'CONSEQUENTIAL', 'DAMAGES', '(INCLUDING,', 'BUT', 'NOT', 'LIMITED', '*', 'TO,', 'PROCUREMENT', 'OF', 'SUBSTITUTE', 'GOODS', 'OR', 'SERVICES;', 'LOSS', 'OF', 'USE,', 'DATA,', 'OR', 'PROFITS;', '*', 'OR', 'BUSINESS', 'INTERRUPTION)', 'HOWEVER', 'CAUSED', 'AND', 'ON', 'ANY', 'THEORY', 'OF', 'LIABILITY,', 'WHETHER', '*', 'IN', 'CONTRACT,', 'STRICT', 'LIABILITY,', 'OR', 'TORT', '(INCLUDING', 'NEGLIGENCE', 'OR', 'OTHERWISE)', 'ARISING', 'IN', '*', 'ANY', 'WAY', 'OUT', 'OF', 'THE', 'USE', 'OF', 'THIS', 'SOFTWARE,', 'EVEN', 'IF', 'ADVISED', 'OF', 'THE', 'POSSIBILITY', 'OF', 'SUCH', 'DAMAGE.', '*/', 'package', 'org.icgc.dcc.release.core.function;', 'import', 'java.util.Map;', 'import', 'lombok.NonNull;', 'import', 'lombok.val;', 'import', 'org.apache.spark.api.java.function.Function;', 'import', 'com.fasterxml.jackson.databind.node.ObjectNode;', 'import', 'com.google.common.collect.Maps;', 'public', 'class', 'RenameFields', 'implements', 'Function<ObjectNode,', 'ObjectNode>', '{', '@NonNull', 'private', 'final', 'Map<String,', 'String>', 'mappings;', 'public', 'RenameFields(Map<String,', 'String>', 'values)', '{', 'this.mappings', '=', 'values;', '}', 'public', 'RenameFields(String...', 'values)', '{', 'val', 'mappings', '=', 'Maps.<String,', 'String>', 'newHashMap();', 'for', '(int', 'i', '=', '0;', 'i', '<', 'values.length;', 'i', '+=', '2)', '{', 'val', 'fieldName', '=', 'values[i];', 'val', 'path', '=', 'values[i', '+', '1];', 'mappings.put(fieldName,', 'path);', '}', 'this.mappings', '=', 'mappings;', '}', '@Override', 'public', 'ObjectNode', 'call(ObjectNode', 'row)', '{', 'for', '(val', 'entry', ':', 'mappings.entrySet())', '{', 'val', 'oldFieldName', '=', 'entry.getKey();', 'val', 'newFieldName', '=', 'entry.getValue();', 'val', 'value', '=', 'row.get(oldFieldName);', 'row.remove(oldFieldName);', 'row.set(newFieldName,', 'value);', '}', 'return', 'row;', '}', '}```']",challenge not surrounded by ''': ,
"<!doctype html>
<html>
<head>
    <title>Please Upgrade Your Bowser</title>
    <link rel=""stylesheet"" href=""{{style.css}}""/>
    <link rel=""stylesheet"" href=""{{windows.css}}""/>
</head>
<body>
<div id=""browser-upgrade"">
    <h2>You Need to Update Your Browser</h2>
    <p class=""desc"">This page uses cutting-edge features your browser doesn't support</p>

    <small>Don't panic! It's simple.</small>

    <div class=""col-left"">
        <h3>Why should I upgrade?</h3>
        <ul>
            <li><strong>Crash Less & Stay Safer</strong>
                <p>Newer browsers crash less often, and have better defenses
                    against internet miscreants.</p>
            </li>

            <li><strong>Load Pages Faster</strong>
                <p>Sometimes up to twice as fast as older browsers!</p>
            </li>

            <li><strong>Take the Easy Road</strong>
                <p>Browsers are easier to use than ever before & you can easily transfer
                    your bookmarks and settings!</p>
            </li>

            <li><strong>Make Pages Prettier</strong>
                <p>In new browsers, pages look clean, smooth, and beautiful.</p>
            </li>
        </ul>
    </div>

    <div class=""col-right"">
        <h3>We Recommend</h3>
        <ul>
            <li>
                <a href=""https://www.google.com/intl/en/chrome/browser/""><img src=""{{chrome.png}}"" /><span>Chrome</span></a>
            </li>
            <li>
                <a href=""http://www.mozilla.org/en-US/firefox/new/?from=getfirefox""><img src=""{{firefox.png}}"" /><span>Firefox</span></a>
            </li>
            <li class=""separator win-only""></li>
            <li class=""win-only"">
                <a href=""http://windows.microsoft.com/en-US/internet-explorer/download-ie""><img src=""{{ie.png}}"" /><span>Internet Explorer <strong>10</strong></span></a>
            </li>
        </ul>
    </div>

    <div style=""clear: both""></div>

    {{footer}}

</div>
</body>

","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!doctype', 'html>', '<html>', '<head>', '<title>Please', 'Upgrade', 'Your', 'Bowser</title>', '<link', 'rel=""stylesheet""', 'href=""{{style.css}}""/>', '<link', 'rel=""stylesheet""', 'href=""{{windows.css}}""/>', '</head>', '<body>', '<div', 'id=""browser-upgrade"">', '<h2>You', 'Need', 'to', 'Update', 'Your', 'Browser</h2>', '<p', 'class=""desc"">This', 'page', 'uses', 'cutting-edge', 'features', 'your', 'browser', ""doesn't"", 'support</p>', ""<small>Don't"", 'panic!', ""It's"", 'simple.</small>', '<div', 'class=""col-left"">', '<h3>Why', 'should', 'I', 'upgrade?</h3>', '<ul>', '<li><strong>Crash', 'Less', '&', 'Stay', 'Safer</strong>', '<p>Newer', 'browsers', 'crash', 'less', 'often,', 'and', 'have', 'better', 'defenses', 'against', 'internet', 'miscreants.</p>', '</li>', '<li><strong>Load', 'Pages', 'Faster</strong>', '<p>Sometimes', 'up', 'to', 'twice', 'as', 'fast', 'as', 'older', 'browsers!</p>', '</li>', '<li><strong>Take', 'the', 'Easy', 'Road</strong>', '<p>Browsers', 'are', 'easier', 'to', 'use', 'than', 'ever', 'before', '&', 'you', 'can', 'easily', 'transfer', 'your', 'bookmarks', 'and', 'settings!</p>', '</li>', '<li><strong>Make', 'Pages', 'Prettier</strong>', '<p>In', 'new', 'browsers,', 'pages', 'look', 'clean,', 'smooth,', 'and', 'beautiful.</p>', '</li>', '</ul>', '</div>', '<div', 'class=""col-right"">', '<h3>We', 'Recommend</h3>', '<ul>', '<li>', '<a', 'href=""https://www.google.com/intl/en/chrome/browser/""><img', 'src=""{{chrome.png}}""', '/><span>Chrome</span></a>', '</li>', '<li>', '<a', 'href=""http://www.mozilla.org/en-US/firefox/new/?from=getfirefox""><img', 'src=""{{firefox.png}}""', '/><span>Firefox</span></a>', '</li>', '<li', 'class=""separator', 'win-only""></li>', '<li', 'class=""win-only"">', '<a', 'href=""http://windows.microsoft.com/en-US/internet-explorer/download-ie""><img', 'src=""{{ie.png}}""', '/><span>Internet', 'Explorer', '<strong>10</strong></span></a>', '</li>', '</ul>', '</div>', '<div', 'style=""clear:', 'both""></div>', '{{footer}}', '</div>', '</body>', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE html>
<html>
<head>
  <meta http-equiv=""Content-Type"" content=""text/html; charset=utf-8"" />
  <title>The source code</title>
  <link href=""../prettify/prettify.css"" type=""text/css"" rel=""stylesheet"" />
  <script type=""text/javascript"" src=""../prettify/prettify.js""></script>
  <style type=""text/css"">
    .highlight { display: block; background-color: #ddd; }
  </style>
  <script type=""text/javascript"">
    function highlight() {
      document.getElementById(location.hash.replace(/#/, """")).className = ""highlight"";
    }
  </script>
</head>
<body onload=""prettyPrint(); highlight();"">
  <pre class=""prettyprint lang-js""><span id='Ext-ShadowPool'>/**
</span> * @class Ext.ShadowPool
 * @extends Object
 * Private utility class that manages the internal Shadow cache
 * @private
 */
Ext.define('Ext.ShadowPool', {
    singleton: true,
    requires: ['Ext.core.DomHelper'],

    markup: function() {
        if (Ext.supports.CSS3BoxShadow) {
            return '&lt;div class=&quot;' + Ext.baseCSSPrefix + 'css-shadow&quot; role=&quot;presentation&quot;&gt;&lt;/div&gt;';
        } else if (Ext.isIE) {
            return '&lt;div class=&quot;' + Ext.baseCSSPrefix + 'ie-shadow&quot; role=&quot;presentation&quot;&gt;&lt;/div&gt;';
        } else {
            return '&lt;div class=&quot;' + Ext.baseCSSPrefix + 'frame-shadow&quot; role=&quot;presentation&quot;&gt;' +
                '&lt;div class=&quot;xst&quot; role=&quot;presentation&quot;&gt;' +
                    '&lt;div class=&quot;xstl&quot; role=&quot;presentation&quot;&gt;&lt;/div&gt;' +
                    '&lt;div class=&quot;xstc&quot; role=&quot;presentation&quot;&gt;&lt;/div&gt;' +
                    '&lt;div class=&quot;xstr&quot; role=&quot;presentation&quot;&gt;&lt;/div&gt;' +
                '&lt;/div&gt;' +
                '&lt;div class=&quot;xsc&quot; role=&quot;presentation&quot;&gt;' +
                    '&lt;div class=&quot;xsml&quot; role=&quot;presentation&quot;&gt;&lt;/div&gt;' +
                    '&lt;div class=&quot;xsmc&quot; role=&quot;presentation&quot;&gt;&lt;/div&gt;' +
                    '&lt;div class=&quot;xsmr&quot; role=&quot;presentation&quot;&gt;&lt;/div&gt;' +
                '&lt;/div&gt;' +
                '&lt;div class=&quot;xsb&quot; role=&quot;presentation&quot;&gt;' +
                    '&lt;div class=&quot;xsbl&quot; role=&quot;presentation&quot;&gt;&lt;/div&gt;' +
                    '&lt;div class=&quot;xsbc&quot; role=&quot;presentation&quot;&gt;&lt;/div&gt;' +
                    '&lt;div class=&quot;xsbr&quot; role=&quot;presentation&quot;&gt;&lt;/div&gt;' +
                '&lt;/div&gt;' +
            '&lt;/div&gt;';
        }
    }(),

    shadows: [],

    pull: function() {
        var sh = this.shadows.shift();
        if (!sh) {
            sh = Ext.get(Ext.core.DomHelper.insertHtml(&quot;beforeBegin&quot;, document.body.firstChild, this.markup));
            sh.autoBoxAdjust = false;
        }
        return sh;
    },

    push: function(sh) {
        this.shadows.push(sh);
    },
    
    reset: function() {
        Ext.Array.each(this.shadows, function(shadow) {
            shadow.remove();
        });
        this.shadows = [];
    }
});</pre>
</body>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'html>', '<html>', '<head>', '<meta', 'http-equiv=""Content-Type""', 'content=""text/html;', 'charset=utf-8""', '/>', '<title>The', 'source', 'code</title>', '<link', 'href=""../prettify/prettify.css""', 'type=""text/css""', 'rel=""stylesheet""', '/>', '<script', 'type=""text/javascript""', 'src=""../prettify/prettify.js""></script>', '<style', 'type=""text/css"">', '.highlight', '{', 'display:', 'block;', 'background-color:', '#ddd;', '}', '</style>', '<script', 'type=""text/javascript"">', 'function', 'highlight()', '{', 'document.getElementById(location.hash.replace(/#/,', '"""")).className', '=', '""highlight"";', '}', '</script>', '</head>', '<body', 'onload=""prettyPrint();', 'highlight();"">', '<pre', 'class=""prettyprint', 'lang-js""><span', ""id='Ext-ShadowPool'>/**"", '</span>', '*', '@class', 'Ext.ShadowPool', '*', '@extends', 'Object', '*', 'Private', 'utility', 'class', 'that', 'manages', 'the', 'internal', 'Shadow', 'cache', '*', '@private', '*/', ""Ext.define('Ext.ShadowPool',"", '{', 'singleton:', 'true,', 'requires:', ""['Ext.core.DomHelper'],"", 'markup:', 'function()', '{', 'if', '(Ext.supports.CSS3BoxShadow)', '{', 'return', ""'&lt;div"", ""class=&quot;'"", '+', 'Ext.baseCSSPrefix', '+', ""'css-shadow&quot;"", ""role=&quot;presentation&quot;&gt;&lt;/div&gt;';"", '}', 'else', 'if', '(Ext.isIE)', '{', 'return', ""'&lt;div"", ""class=&quot;'"", '+', 'Ext.baseCSSPrefix', '+', ""'ie-shadow&quot;"", ""role=&quot;presentation&quot;&gt;&lt;/div&gt;';"", '}', 'else', '{', 'return', ""'&lt;div"", ""class=&quot;'"", '+', 'Ext.baseCSSPrefix', '+', ""'frame-shadow&quot;"", ""role=&quot;presentation&quot;&gt;'"", '+', ""'&lt;div"", 'class=&quot;xst&quot;', ""role=&quot;presentation&quot;&gt;'"", '+', ""'&lt;div"", 'class=&quot;xstl&quot;', ""role=&quot;presentation&quot;&gt;&lt;/div&gt;'"", '+', ""'&lt;div"", 'class=&quot;xstc&quot;', ""role=&quot;presentation&quot;&gt;&lt;/div&gt;'"", '+', ""'&lt;div"", 'class=&quot;xstr&quot;', ""role=&quot;presentation&quot;&gt;&lt;/div&gt;'"", '+', ""'&lt;/div&gt;'"", '+', ""'&lt;div"", 'class=&quot;xsc&quot;', ""role=&quot;presentation&quot;&gt;'"", '+', ""'&lt;div"", 'class=&quot;xsml&quot;', ""role=&quot;presentation&quot;&gt;&lt;/div&gt;'"", '+', ""'&lt;div"", 'class=&quot;xsmc&quot;', ""role=&quot;presentation&quot;&gt;&lt;/div&gt;'"", '+', ""'&lt;div"", 'class=&quot;xsmr&quot;', ""role=&quot;presentation&quot;&gt;&lt;/div&gt;'"", '+', ""'&lt;/div&gt;'"", '+', ""'&lt;div"", 'class=&quot;xsb&quot;', ""role=&quot;presentation&quot;&gt;'"", '+', ""'&lt;div"", 'class=&quot;xsbl&quot;', ""role=&quot;presentation&quot;&gt;&lt;/div&gt;'"", '+', ""'&lt;div"", 'class=&quot;xsbc&quot;', ""role=&quot;presentation&quot;&gt;&lt;/div&gt;'"", '+', ""'&lt;div"", 'class=&quot;xsbr&quot;', ""role=&quot;presentation&quot;&gt;&lt;/div&gt;'"", '+', ""'&lt;/div&gt;'"", '+', ""'&lt;/div&gt;';"", '}', '}(),', 'shadows:', '[],', 'pull:', 'function()', '{', 'var', 'sh', '=', 'this.shadows.shift();', 'if', '(!sh)', '{', 'sh', '=', 'Ext.get(Ext.core.DomHelper.insertHtml(&quot;beforeBegin&quot;,', 'document.body.firstChild,', 'this.markup));', 'sh.autoBoxAdjust', '=', 'false;', '}', 'return', 'sh;', '},', 'push:', 'function(sh)', '{', 'this.shadows.push(sh);', '},', 'reset:', 'function()', '{', 'Ext.Array.each(this.shadows,', 'function(shadow)', '{', 'shadow.remove();', '});', 'this.shadows', '=', '[];', '}', '});</pre>', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"from flask import request

from redash import models
from redash.handlers.base import BaseResource, get_object_or_404
from redash.serializers import serialize_visualization
from redash.permissions import (require_object_modify_permission,
                                require_permission)
from redash.utils import json_dumps


class VisualizationListResource(BaseResource):
    @require_permission('edit_query')
    def post(self):
        kwargs = request.get_json(force=True)

        query = get_object_or_404(models.Query.get_by_id_and_org, kwargs.pop('query_id'), self.current_org)
        require_object_modify_permission(query, self.current_user)

        kwargs['options'] = json_dumps(kwargs['options'])
        kwargs['query_rel'] = query

        vis = models.Visualization(**kwargs)
        models.db.session.add(vis)
        models.db.session.commit()
        return serialize_visualization(vis, with_query=False)


class VisualizationResource(BaseResource):
    @require_permission('edit_query')
    def post(self, visualization_id):
        vis = get_object_or_404(models.Visualization.get_by_id_and_org, visualization_id, self.current_org)
        require_object_modify_permission(vis.query_rel, self.current_user)

        kwargs = request.get_json(force=True)
        if 'options' in kwargs:
            kwargs['options'] = json_dumps(kwargs['options'])

        kwargs.pop('id', None)
        kwargs.pop('query_id', None)

        self.update_model(vis, kwargs)
        d = serialize_visualization(vis, with_query=False)
        models.db.session.commit()
        return d

    @require_permission('edit_query')
    def delete(self, visualization_id):
        vis = get_object_or_404(models.Visualization.get_by_id_and_org, visualization_id, self.current_org)
        require_object_modify_permission(vis.query_rel, self.current_user)
        self.record_event({
            'action': 'delete',
            'object_id': visualization_id,
            'object_type': 'Visualization'
        })
        models.db.session.delete(vis)
        models.db.session.commit()
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```from', 'flask', 'import', 'request', 'from', 'redash', 'import', 'models', 'from', 'redash.handlers.base', 'import', 'BaseResource,', 'get_object_or_404', 'from', 'redash.serializers', 'import', 'serialize_visualization', 'from', 'redash.permissions', 'import', '(require_object_modify_permission,', 'require_permission)', 'from', 'redash.utils', 'import', 'json_dumps', 'class', 'VisualizationListResource(BaseResource):', ""@require_permission('edit_query')"", 'def', 'post(self):', 'kwargs', '=', 'request.get_json(force=True)', 'query', '=', 'get_object_or_404(models.Query.get_by_id_and_org,', ""kwargs.pop('query_id'),"", 'self.current_org)', 'require_object_modify_permission(query,', 'self.current_user)', ""kwargs['options']"", '=', ""json_dumps(kwargs['options'])"", ""kwargs['query_rel']"", '=', 'query', 'vis', '=', 'models.Visualization(**kwargs)', 'models.db.session.add(vis)', 'models.db.session.commit()', 'return', 'serialize_visualization(vis,', 'with_query=False)', 'class', 'VisualizationResource(BaseResource):', ""@require_permission('edit_query')"", 'def', 'post(self,', 'visualization_id):', 'vis', '=', 'get_object_or_404(models.Visualization.get_by_id_and_org,', 'visualization_id,', 'self.current_org)', 'require_object_modify_permission(vis.query_rel,', 'self.current_user)', 'kwargs', '=', 'request.get_json(force=True)', 'if', ""'options'"", 'in', 'kwargs:', ""kwargs['options']"", '=', ""json_dumps(kwargs['options'])"", ""kwargs.pop('id',"", 'None)', ""kwargs.pop('query_id',"", 'None)', 'self.update_model(vis,', 'kwargs)', 'd', '=', 'serialize_visualization(vis,', 'with_query=False)', 'models.db.session.commit()', 'return', 'd', ""@require_permission('edit_query')"", 'def', 'delete(self,', 'visualization_id):', 'vis', '=', 'get_object_or_404(models.Visualization.get_by_id_and_org,', 'visualization_id,', 'self.current_org)', 'require_object_modify_permission(vis.query_rel,', 'self.current_user)', 'self.record_event({', ""'action':"", ""'delete',"", ""'object_id':"", 'visualization_id,', ""'object_type':"", ""'Visualization'"", '})', 'models.db.session.delete(vis)', 'models.db.session.commit()', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"" ""http://www.w3.org/TR/html4/loose.dtd"">
<!-- NewPage -->
<html lang=""en"">
<head>
<!-- Generated by javadoc (version 1.7.0_25) on Thu Jun 19 07:55:29 BST 2014 -->
<title>org.vertx.java.core.file</title>
<meta name=""date"" content=""2014-06-19"">
<link rel=""stylesheet"" type=""text/css"" href=""../../../../../stylesheet.css"" title=""Style"">
</head>
<body>
<h1 class=""bar""><a href=""../../../../../org/vertx/java/core/file/package-summary.html"" target=""classFrame"">org.vertx.java.core.file</a></h1>
<div class=""indexContainer"">
<h2 title=""Interfaces"">Interfaces</h2>
<ul title=""Interfaces"">
<li><a href=""AsyncFile.html"" title=""interface in org.vertx.java.core.file"" target=""classFrame""><i>AsyncFile</i></a></li>
<li><a href=""FileProps.html"" title=""interface in org.vertx.java.core.file"" target=""classFrame""><i>FileProps</i></a></li>
<li><a href=""FileSystem.html"" title=""interface in org.vertx.java.core.file"" target=""classFrame""><i>FileSystem</i></a></li>
<li><a href=""FileSystemProps.html"" title=""interface in org.vertx.java.core.file"" target=""classFrame""><i>FileSystemProps</i></a></li>
</ul>
<h2 title=""Exceptions"">Exceptions</h2>
<ul title=""Exceptions"">
<li><a href=""FileSystemException.html"" title=""class in org.vertx.java.core.file"" target=""classFrame"">FileSystemException</a></li>
</ul>
</div>
</body>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'HTML', 'PUBLIC', '""-//W3C//DTD', 'HTML', '4.01', 'Transitional//EN""', '""http://www.w3.org/TR/html4/loose.dtd"">', '<!--', 'NewPage', '-->', '<html', 'lang=""en"">', '<head>', '<!--', 'Generated', 'by', 'javadoc', '(version', '1.7.0_25)', 'on', 'Thu', 'Jun', '19', '07:55:29', 'BST', '2014', '-->', '<title>org.vertx.java.core.file</title>', '<meta', 'name=""date""', 'content=""2014-06-19"">', '<link', 'rel=""stylesheet""', 'type=""text/css""', 'href=""../../../../../stylesheet.css""', 'title=""Style"">', '</head>', '<body>', '<h1', 'class=""bar""><a', 'href=""../../../../../org/vertx/java/core/file/package-summary.html""', 'target=""classFrame"">org.vertx.java.core.file</a></h1>', '<div', 'class=""indexContainer"">', '<h2', 'title=""Interfaces"">Interfaces</h2>', '<ul', 'title=""Interfaces"">', '<li><a', 'href=""AsyncFile.html""', 'title=""interface', 'in', 'org.vertx.java.core.file""', 'target=""classFrame""><i>AsyncFile</i></a></li>', '<li><a', 'href=""FileProps.html""', 'title=""interface', 'in', 'org.vertx.java.core.file""', 'target=""classFrame""><i>FileProps</i></a></li>', '<li><a', 'href=""FileSystem.html""', 'title=""interface', 'in', 'org.vertx.java.core.file""', 'target=""classFrame""><i>FileSystem</i></a></li>', '<li><a', 'href=""FileSystemProps.html""', 'title=""interface', 'in', 'org.vertx.java.core.file""', 'target=""classFrame""><i>FileSystemProps</i></a></li>', '</ul>', '<h2', 'title=""Exceptions"">Exceptions</h2>', '<ul', 'title=""Exceptions"">', '<li><a', 'href=""FileSystemException.html""', 'title=""class', 'in', 'org.vertx.java.core.file""', 'target=""classFrame"">FileSystemException</a></li>', '</ul>', '</div>', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"package com.netflix.evcache.pool;

import com.netflix.appinfo.InstanceInfo;
import com.netflix.discovery.EurekaClient;
import com.netflix.discovery.shared.Application;
import net.spy.memcached.MemcachedNode;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.net.InetSocketAddress;
import java.net.SocketAddress;
import java.util.List;

public class DIEVCacheKetamaNodeLocatorConfiguration extends EVCacheKetamaNodeLocatorConfiguration {

    private static final Logger log = LoggerFactory.getLogger(DIEVCacheKetamaNodeLocatorConfiguration.class);
    private final EurekaClient eurekaClient;

    public DIEVCacheKetamaNodeLocatorConfiguration(EVCacheClient client, EurekaClient eurekaClient) {
        super(client);
        this.eurekaClient = eurekaClient;
    }

    /**
     * Returns the socket address of a given MemcachedNode.
     *
     * @param node - The MemcachedNode which we're interested in
     * @return The socket address of the given node format is of the following
     * format ""publicHostname/privateIp:port"" (ex -
     ec2-174-129-159-31.compute-1.amazonaws.com/10.125.47.114:11211)
     */
    @Override
    public String getKeyForNode(MemcachedNode node, int repetition) {
        String result = socketAddresses.get(node);
        if(result == null) {
            final SocketAddress socketAddress = node.getSocketAddress();
            if(socketAddress instanceof InetSocketAddress) {
                final InetSocketAddress isa = (InetSocketAddress)socketAddress;
                if(eurekaClient != null ) {
                    final Application app = eurekaClient.getApplication(client.getAppName());
                    if(app != null) {
                        final List<InstanceInfo> instances = app.getInstances();
                        for(InstanceInfo info : instances) {
                            final String hostName = info.getHostName();
                            if(hostName.equalsIgnoreCase(isa.getHostName())) {
                                final String ip = info.getIPAddr();
                                result = hostName + '/' + ip + "":11211"";
                                break;
                            }
                        }
                    } else {
                        result = ((InetSocketAddress)socketAddress).getHostName() + '/' + ((InetSocketAddress)socketAddress).getAddress().getHostAddress() + "":11211"";
                    }
                } else {
                    result = isa.getHostName() + '/' + isa.getAddress().getHostAddress() + "":11211"";
                }
            } else {
                result=String.valueOf(socketAddress);
                if (result.startsWith(""/"")) {
                    result = result.substring(1);
                }
            }
            socketAddresses.put(node, result);
        }
        if(log.isDebugEnabled()) log.debug(""Returning : "" + (result + ""-"" + repetition));
        return result + ""-"" + repetition;
    }

    @Override
    public String toString() {
        return ""DIEVCacheKetamaNodeLocatorConfiguration ["" + super.toString() + "", EurekaClient="" + eurekaClient + ""]"";
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.netflix.evcache.pool;', 'import', 'com.netflix.appinfo.InstanceInfo;', 'import', 'com.netflix.discovery.EurekaClient;', 'import', 'com.netflix.discovery.shared.Application;', 'import', 'net.spy.memcached.MemcachedNode;', 'import', 'org.slf4j.Logger;', 'import', 'org.slf4j.LoggerFactory;', 'import', 'java.net.InetSocketAddress;', 'import', 'java.net.SocketAddress;', 'import', 'java.util.List;', 'public', 'class', 'DIEVCacheKetamaNodeLocatorConfiguration', 'extends', 'EVCacheKetamaNodeLocatorConfiguration', '{', 'private', 'static', 'final', 'Logger', 'log', '=', 'LoggerFactory.getLogger(DIEVCacheKetamaNodeLocatorConfiguration.class);', 'private', 'final', 'EurekaClient', 'eurekaClient;', 'public', 'DIEVCacheKetamaNodeLocatorConfiguration(EVCacheClient', 'client,', 'EurekaClient', 'eurekaClient)', '{', 'super(client);', 'this.eurekaClient', '=', 'eurekaClient;', '}', '/**', '*', 'Returns', 'the', 'socket', 'address', 'of', 'a', 'given', 'MemcachedNode.', '*', '*', '@param', 'node', '-', 'The', 'MemcachedNode', 'which', ""we're"", 'interested', 'in', '*', '@return', 'The', 'socket', 'address', 'of', 'the', 'given', 'node', 'format', 'is', 'of', 'the', 'following', '*', 'format', '""publicHostname/privateIp:port""', '(ex', '-', 'ec2-174-129-159-31.compute-1.amazonaws.com/10.125.47.114:11211)', '*/', '@Override', 'public', 'String', 'getKeyForNode(MemcachedNode', 'node,', 'int', 'repetition)', '{', 'String', 'result', '=', 'socketAddresses.get(node);', 'if(result', '==', 'null)', '{', 'final', 'SocketAddress', 'socketAddress', '=', 'node.getSocketAddress();', 'if(socketAddress', 'instanceof', 'InetSocketAddress)', '{', 'final', 'InetSocketAddress', 'isa', '=', '(InetSocketAddress)socketAddress;', 'if(eurekaClient', '!=', 'null', ')', '{', 'final', 'Application', 'app', '=', 'eurekaClient.getApplication(client.getAppName());', 'if(app', '!=', 'null)', '{', 'final', 'List<InstanceInfo>', 'instances', '=', 'app.getInstances();', 'for(InstanceInfo', 'info', ':', 'instances)', '{', 'final', 'String', 'hostName', '=', 'info.getHostName();', 'if(hostName.equalsIgnoreCase(isa.getHostName()))', '{', 'final', 'String', 'ip', '=', 'info.getIPAddr();', 'result', '=', 'hostName', '+', ""'/'"", '+', 'ip', '+', '"":11211"";', 'break;', '}', '}', '}', 'else', '{', 'result', '=', '((InetSocketAddress)socketAddress).getHostName()', '+', ""'/'"", '+', '((InetSocketAddress)socketAddress).getAddress().getHostAddress()', '+', '"":11211"";', '}', '}', 'else', '{', 'result', '=', 'isa.getHostName()', '+', ""'/'"", '+', 'isa.getAddress().getHostAddress()', '+', '"":11211"";', '}', '}', 'else', '{', 'result=String.valueOf(socketAddress);', 'if', '(result.startsWith(""/""))', '{', 'result', '=', 'result.substring(1);', '}', '}', 'socketAddresses.put(node,', 'result);', '}', 'if(log.isDebugEnabled())', 'log.debug(""Returning', ':', '""', '+', '(result', '+', '""-""', '+', 'repetition));', 'return', 'result', '+', '""-""', '+', 'repetition;', '}', '@Override', 'public', 'String', 'toString()', '{', 'return', '""DIEVCacheKetamaNodeLocatorConfiguration', '[""', '+', 'super.toString()', '+', '"",', 'EurekaClient=""', '+', 'eurekaClient', '+', '""]"";', '}', '}', '```']",challenge not surrounded by ''': ,
"# AUTOGENERATED FILE
FROM balenalib/ts4900-ubuntu:disco-build

# remove several traces of debian python
RUN apt-get purge -y python.*

# http://bugs.python.org/issue19846
# > At the moment, setting ""LANG=C"" on a Linux system *fundamentally breaks Python 3*, and that's not OK.
ENV LANG C.UTF-8

# key 63C7CC90: public key ""Simon McVittie <smcv@pseudorandom.co.uk>"" imported
# key 3372DCFA: public key ""Donald Stufft (dstufft) <donald@stufft.io>"" imported
RUN gpg --keyserver keyring.debian.org --recv-keys 4DE8FF2A63C7CC90 \
	&& gpg --keyserver keyserver.ubuntu.com --recv-key 6E3CBCE93372DCFA \
	&& gpg --keyserver keyserver.ubuntu.com --recv-keys 0x52a43a1e4b77b059

ENV PYTHON_VERSION 3.9.1

# if this is called ""PIP_VERSION"", pip explodes with ""ValueError: invalid truth value '<VERSION>'""
ENV PYTHON_PIP_VERSION 20.3.1

ENV SETUPTOOLS_VERSION 51.0.0

RUN set -x \
	&& curl -SLO ""http://resin-packages.s3.amazonaws.com/python/v$PYTHON_VERSION/Python-$PYTHON_VERSION.linux-armv7hf-openssl1.1.tar.gz"" \
	&& echo ""14d708685cc8d0cfe988048490bf33abd2e4422683bccfbbdee0081278ca7948  Python-$PYTHON_VERSION.linux-armv7hf-openssl1.1.tar.gz"" | sha256sum -c - \
	&& tar -xzf ""Python-$PYTHON_VERSION.linux-armv7hf-openssl1.1.tar.gz"" --strip-components=1 \
	&& rm -rf ""Python-$PYTHON_VERSION.linux-armv7hf-openssl1.1.tar.gz"" \
	&& ldconfig \
	&& if [ ! -e /usr/local/bin/pip3 ]; then : \
		&& curl -SLO ""https://raw.githubusercontent.com/pypa/get-pip/430ba37776ae2ad89f794c7a43b90dc23bac334c/get-pip.py"" \
		&& echo ""19dae841a150c86e2a09d475b5eb0602861f2a5b7761ec268049a662dbd2bd0c  get-pip.py"" | sha256sum -c - \
		&& python3 get-pip.py \
		&& rm get-pip.py \
	; fi \
	&& pip3 install --no-cache-dir --upgrade --force-reinstall pip==""$PYTHON_PIP_VERSION"" setuptools==""$SETUPTOOLS_VERSION"" \
	&& find /usr/local \
		\( -type d -a -name test -o -name tests \) \
		-o \( -type f -a -name '*.pyc' -o -name '*.pyo' \) \
		-exec rm -rf '{}' + \
	&& cd / \
	&& rm -rf /usr/src/python ~/.cache

# install ""virtualenv"", since the vast majority of users of this image will want it
RUN pip3 install --no-cache-dir virtualenv

ENV PYTHON_DBUS_VERSION 1.2.8

# install dbus-python dependencies 
RUN apt-get update && apt-get install -y --no-install-recommends \
		libdbus-1-dev \
		libdbus-glib-1-dev \
	&& rm -rf /var/lib/apt/lists/* \
	&& apt-get -y autoremove

# install dbus-python
RUN set -x \
	&& mkdir -p /usr/src/dbus-python \
	&& curl -SL ""http://dbus.freedesktop.org/releases/dbus-python/dbus-python-$PYTHON_DBUS_VERSION.tar.gz"" -o dbus-python.tar.gz \
	&& curl -SL ""http://dbus.freedesktop.org/releases/dbus-python/dbus-python-$PYTHON_DBUS_VERSION.tar.gz.asc"" -o dbus-python.tar.gz.asc \
	&& gpg --verify dbus-python.tar.gz.asc \
	&& tar -xzC /usr/src/dbus-python --strip-components=1 -f dbus-python.tar.gz \
	&& rm dbus-python.tar.gz* \
	&& cd /usr/src/dbus-python \
	&& PYTHON_VERSION=$(expr match ""$PYTHON_VERSION"" '\([0-9]*\.[0-9]*\)') ./configure \
	&& make -j$(nproc) \
	&& make install -j$(nproc) \
	&& cd / \
	&& rm -rf /usr/src/dbus-python

# make some useful symlinks that are expected to exist
RUN cd /usr/local/bin \
	&& ln -sf pip3 pip \
	&& { [ -e easy_install ] || ln -s easy_install-* easy_install; } \
	&& ln -sf idle3 idle \
	&& ln -sf pydoc3 pydoc \
	&& ln -sf python3 python \
	&& ln -sf python3-config python-config

# set PYTHONPATH to point to dist-packages
ENV PYTHONPATH /usr/lib/python3/dist-packages:$PYTHONPATH

CMD [""echo"",""'No CMD command was set in Dockerfile! Details about CMD command could be found in Dockerfile Guide section in our Docs. Here's the link: https://balena.io/docs""]

 RUN curl -SLO ""https://raw.githubusercontent.com/balena-io-library/base-images/8accad6af708fca7271c5c65f18a86782e19f877/scripts/assets/tests/test-stack@python.sh"" \
  && echo ""Running test-stack@python"" \
  && chmod +x test-stack@python.sh \
  && bash test-stack@python.sh \
  && rm -rf test-stack@python.sh 

RUN [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \nArchitecture: ARM v7 \nOS: Ubuntu disco \nVariant: build variant \nDefault variable(s): UDEV=off \nThe following software stack is preinstalled: \nPython v3.9.1, Pip v20.3.1, Setuptools v51.0.0 \nExtra features: \n- Easy way to install packages with `install_packages <package-name>` command \n- Run anywhere with cross-build feature  (for ARM only) \n- Keep the container idling with `balena-idle` command \n- Show base image details with `balena-info` command' > /.balena/messages/image-info

RUN echo '#!/bin/sh.real\nbalena-info\nrm -f /bin/sh\ncp /bin/sh.real /bin/sh\n/bin/sh ""$@""' > /bin/sh-shim \
	&& chmod +x /bin/sh-shim \
	&& cp /bin/sh /bin/sh.real \
	&& mv /bin/sh-shim /bin/sh","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', 'AUTOGENERATED', 'FILE', 'FROM', 'balenalib/ts4900-ubuntu:disco-build', '#', 'remove', 'several', 'traces', 'of', 'debian', 'python', 'RUN', 'apt-get', 'purge', '-y', 'python.*', '#', 'http://bugs.python.org/issue19846', '#', '>', 'At', 'the', 'moment,', 'setting', '""LANG=C""', 'on', 'a', 'Linux', 'system', '*fundamentally', 'breaks', 'Python', '3*,', 'and', ""that's"", 'not', 'OK.', 'ENV', 'LANG', 'C.UTF-8', '#', 'key', '63C7CC90:', 'public', 'key', '""Simon', 'McVittie', '<smcv@pseudorandom.co.uk>""', 'imported', '#', 'key', '3372DCFA:', 'public', 'key', '""Donald', 'Stufft', '(dstufft)', '<donald@stufft.io>""', 'imported', 'RUN', 'gpg', '--keyserver', 'keyring.debian.org', '--recv-keys', '4DE8FF2A63C7CC90', '\\', '&&', 'gpg', '--keyserver', 'keyserver.ubuntu.com', '--recv-key', '6E3CBCE93372DCFA', '\\', '&&', 'gpg', '--keyserver', 'keyserver.ubuntu.com', '--recv-keys', '0x52a43a1e4b77b059', 'ENV', 'PYTHON_VERSION', '3.9.1', '#', 'if', 'this', 'is', 'called', '""PIP_VERSION"",', 'pip', 'explodes', 'with', '""ValueError:', 'invalid', 'truth', 'value', '\'<VERSION>\'""', 'ENV', 'PYTHON_PIP_VERSION', '20.3.1', 'ENV', 'SETUPTOOLS_VERSION', '51.0.0', 'RUN', 'set', '-x', '\\', '&&', 'curl', '-SLO', '""http://resin-packages.s3.amazonaws.com/python/v$PYTHON_VERSION/Python-$PYTHON_VERSION.linux-armv7hf-openssl1.1.tar.gz""', '\\', '&&', 'echo', '""14d708685cc8d0cfe988048490bf33abd2e4422683bccfbbdee0081278ca7948', 'Python-$PYTHON_VERSION.linux-armv7hf-openssl1.1.tar.gz""', '|', 'sha256sum', '-c', '-', '\\', '&&', 'tar', '-xzf', '""Python-$PYTHON_VERSION.linux-armv7hf-openssl1.1.tar.gz""', '--strip-components=1', '\\', '&&', 'rm', '-rf', '""Python-$PYTHON_VERSION.linux-armv7hf-openssl1.1.tar.gz""', '\\', '&&', 'ldconfig', '\\', '&&', 'if', '[', '!', '-e', '/usr/local/bin/pip3', '];', 'then', ':', '\\', '&&', 'curl', '-SLO', '""https://raw.githubusercontent.com/pypa/get-pip/430ba37776ae2ad89f794c7a43b90dc23bac334c/get-pip.py""', '\\', '&&', 'echo', '""19dae841a150c86e2a09d475b5eb0602861f2a5b7761ec268049a662dbd2bd0c', 'get-pip.py""', '|', 'sha256sum', '-c', '-', '\\', '&&', 'python3', 'get-pip.py', '\\', '&&', 'rm', 'get-pip.py', '\\', ';', 'fi', '\\', '&&', 'pip3', 'install', '--no-cache-dir', '--upgrade', '--force-reinstall', 'pip==""$PYTHON_PIP_VERSION""', 'setuptools==""$SETUPTOOLS_VERSION""', '\\', '&&', 'find', '/usr/local', '\\', '\\(', '-type', 'd', '-a', '-name', 'test', '-o', '-name', 'tests', '\\)', '\\', '-o', '\\(', '-type', 'f', '-a', '-name', ""'*.pyc'"", '-o', '-name', ""'*.pyo'"", '\\)', '\\', '-exec', 'rm', '-rf', ""'{}'"", '+', '\\', '&&', 'cd', '/', '\\', '&&', 'rm', '-rf', '/usr/src/python', '~/.cache', '#', 'install', '""virtualenv"",', 'since', 'the', 'vast', 'majority', 'of', 'users', 'of', 'this', 'image', 'will', 'want', 'it', 'RUN', 'pip3', 'install', '--no-cache-dir', 'virtualenv', 'ENV', 'PYTHON_DBUS_VERSION', '1.2.8', '#', 'install', 'dbus-python', 'dependencies', 'RUN', 'apt-get', 'update', '&&', 'apt-get', 'install', '-y', '--no-install-recommends', '\\', 'libdbus-1-dev', '\\', 'libdbus-glib-1-dev', '\\', '&&', 'rm', '-rf', '/var/lib/apt/lists/*', '\\', '&&', 'apt-get', '-y', 'autoremove', '#', 'install', 'dbus-python', 'RUN', 'set', '-x', '\\', '&&', 'mkdir', '-p', '/usr/src/dbus-python', '\\', '&&', 'curl', '-SL', '""http://dbus.freedesktop.org/releases/dbus-python/dbus-python-$PYTHON_DBUS_VERSION.tar.gz""', '-o', 'dbus-python.tar.gz', '\\', '&&', 'curl', '-SL', '""http://dbus.freedesktop.org/releases/dbus-python/dbus-python-$PYTHON_DBUS_VERSION.tar.gz.asc""', '-o', 'dbus-python.tar.gz.asc', '\\', '&&', 'gpg', '--verify', 'dbus-python.tar.gz.asc', '\\', '&&', 'tar', '-xzC', '/usr/src/dbus-python', '--strip-components=1', '-f', 'dbus-python.tar.gz', '\\', '&&', 'rm', 'dbus-python.tar.gz*', '\\', '&&', 'cd', '/usr/src/dbus-python', '\\', '&&', 'PYTHON_VERSION=$(expr', 'match', '""$PYTHON_VERSION""', ""'\\([0-9]*\\.[0-9]*\\)')"", './configure', '\\', '&&', 'make', '-j$(nproc)', '\\', '&&', 'make', 'install', '-j$(nproc)', '\\', '&&', 'cd', '/', '\\', '&&', 'rm', '-rf', '/usr/src/dbus-python', '#', 'make', 'some', 'useful', 'symlinks', 'that', 'are', 'expected', 'to', 'exist', 'RUN', 'cd', '/usr/local/bin', '\\', '&&', 'ln', '-sf', 'pip3', 'pip', '\\', '&&', '{', '[', '-e', 'easy_install', ']', '||', 'ln', '-s', 'easy_install-*', 'easy_install;', '}', '\\', '&&', 'ln', '-sf', 'idle3', 'idle', '\\', '&&', 'ln', '-sf', 'pydoc3', 'pydoc', '\\', '&&', 'ln', '-sf', 'python3', 'python', '\\', '&&', 'ln', '-sf', 'python3-config', 'python-config', '#', 'set', 'PYTHONPATH', 'to', 'point', 'to', 'dist-packages', 'ENV', 'PYTHONPATH', '/usr/lib/python3/dist-packages:$PYTHONPATH', 'CMD', '[""echo"",""\'No', 'CMD', 'command', 'was', 'set', 'in', 'Dockerfile!', 'Details', 'about', 'CMD', 'command', 'could', 'be', 'found', 'in', 'Dockerfile', 'Guide', 'section', 'in', 'our', 'Docs.', ""Here's"", 'the', 'link:', 'https://balena.io/docs""]', 'RUN', 'curl', '-SLO', '""https://raw.githubusercontent.com/balena-io-library/base-images/8accad6af708fca7271c5c65f18a86782e19f877/scripts/assets/tests/test-stack@python.sh""', '\\', '&&', 'echo', '""Running', 'test-stack@python""', '\\', '&&', 'chmod', '+x', 'test-stack@python.sh', '\\', '&&', 'bash', 'test-stack@python.sh', '\\', '&&', 'rm', '-rf', 'test-stack@python.sh', 'RUN', '[', '!', '-d', '/.balena/messages', ']', '&&', 'mkdir', '-p', '/.balena/messages;', 'echo', ""'Here"", 'are', 'a', 'few', 'details', 'about', 'this', 'Docker', 'image', '(For', 'more', 'information', 'please', 'visit', 'https://www.balena.io/docs/reference/base-images/base-images/):', '\\nArchitecture:', 'ARM', 'v7', '\\nOS:', 'Ubuntu', 'disco', '\\nVariant:', 'build', 'variant', '\\nDefault', 'variable(s):', 'UDEV=off', '\\nThe', 'following', 'software', 'stack', 'is', 'preinstalled:', '\\nPython', 'v3.9.1,', 'Pip', 'v20.3.1,', 'Setuptools', 'v51.0.0', '\\nExtra', 'features:', '\\n-', 'Easy', 'way', 'to', 'install', 'packages', 'with', '`install_packages', '<package-name>`', 'command', '\\n-', 'Run', 'anywhere', 'with', 'cross-build', 'feature', '(for', 'ARM', 'only)', '\\n-', 'Keep', 'the', 'container', 'idling', 'with', '`balena-idle`', 'command', '\\n-', 'Show', 'base', 'image', 'details', 'with', '`balena-info`', ""command'"", '>', '/.balena/messages/image-info', 'RUN', 'echo', ""'#!/bin/sh.real\\nbalena-info\\nrm"", '-f', '/bin/sh\\ncp', '/bin/sh.real', '/bin/sh\\n/bin/sh', '""$@""\'', '>', '/bin/sh-shim', '\\', '&&', 'chmod', '+x', '/bin/sh-shim', '\\', '&&', 'cp', '/bin/sh', '/bin/sh.real', '\\', '&&', 'mv', '/bin/sh-shim', '/bin/sh```']",challenge not surrounded by ''': ,
"let React = require('react/addons');
let App = require('./App');

let injectTapEventPlugin = require('react-tap-event-plugin');

//Needed for React Developer Tools
window.React = React;

//Needed for onTouchTap
//Can go away when react 1.0 release
//Check this repo:
//https://github.com/zilverline/react-tap-event-plugin
injectTapEventPlugin();

React.render(<App />, document.getElementById('root'));
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```let', 'React', '=', ""require('react/addons');"", 'let', 'App', '=', ""require('./App');"", 'let', 'injectTapEventPlugin', '=', ""require('react-tap-event-plugin');"", '//Needed', 'for', 'React', 'Developer', 'Tools', 'window.React', '=', 'React;', '//Needed', 'for', 'onTouchTap', '//Can', 'go', 'away', 'when', 'react', '1.0', 'release', '//Check', 'this', 'repo:', '//https://github.com/zilverline/react-tap-event-plugin', 'injectTapEventPlugin();', 'React.render(<App', '/>,', ""document.getElementById('root'));"", '```']",challenge not surrounded by ''': ,
"import sys

def addPlanetSpawns(core, planet):

	stcSvc = core.staticService
########################################################	
# DO NOT ADD ANYTHING ELSE TO THIS SCRIPT, PLEASE USE THE
# SUBFOLDERS FOR EACH PLANET AND CREATE NEW SCRIPTS FOR
# EACH AREA OF A PLANET.  - LEVARRIS	
	
	return","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'sys', 'def', 'addPlanetSpawns(core,', 'planet):', 'stcSvc', '=', 'core.staticService', '########################################################', '#', 'DO', 'NOT', 'ADD', 'ANYTHING', 'ELSE', 'TO', 'THIS', 'SCRIPT,', 'PLEASE', 'USE', 'THE', '#', 'SUBFOLDERS', 'FOR', 'EACH', 'PLANET', 'AND', 'CREATE', 'NEW', 'SCRIPTS', 'FOR', '#', 'EACH', 'AREA', 'OF', 'A', 'PLANET.', '-', 'LEVARRIS', 'return```']",challenge not surrounded by ''': ,
"import { useRouter } from 'next/router'

export async function getStaticProps() {
  return {
    props: { time: new Date() },
  }
}

export async function getStaticPaths() {
  return { paths: [], fallback: true }
}

const Page = ({ time }) => {
  const { isFallback } = useRouter()

  if (isFallback) return null

  return <p>hello {time.toString()}</p>
}

export default Page
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', '{', 'useRouter', '}', 'from', ""'next/router'"", 'export', 'async', 'function', 'getStaticProps()', '{', 'return', '{', 'props:', '{', 'time:', 'new', 'Date()', '},', '}', '}', 'export', 'async', 'function', 'getStaticPaths()', '{', 'return', '{', 'paths:', '[],', 'fallback:', 'true', '}', '}', 'const', 'Page', '=', '({', 'time', '})', '=>', '{', 'const', '{', 'isFallback', '}', '=', 'useRouter()', 'if', '(isFallback)', 'return', 'null', 'return', '<p>hello', '{time.toString()}</p>', '}', 'export', 'default', 'Page', '```']",challenge not surrounded by ''': ,
"/*
 * exists.cpp
 *
 *  Created on: Apr 16, 2011
 *      Author: leden
 */

#include ""formula.h""
#include ""interpretation.h""
#include ""variable.h""

#include ""exists.h""

namespace logic {

namespace predicate {

Exists::Exists(const Variable& var, const Formula& formula)
: super(var, formula) {}

bool Exists::operator()(const Interpretation& semantics,
                        VariableValues* interpretation) const {
  for (Domain::const_iterator it = semantics.domain().begin(),
      end = semantics.domain().end(); it != end; ++it) {
    (*interpretation)[variable()] = *it;
    if (formula().operator()(semantics, interpretation)) {
      interpretation->erase(variable());
      return true;
    }
  }
  interpretation->erase(variable());
  return false;
}

std::ostream& Exists::operator<<(std::ostream& os) const {
  os << ""E"" << variable() << ' ' << formula();
  return os;
}

ExistsVariable::ExistsVariable(const Variable& variable) : var_(variable) {}

Exists ExistsVariable::operator()(const Formula& formula) const {
  return Exists(var_, formula);
}

}  // namespace predicate

}  // namespace logic
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'exists.cpp', '*', '*', 'Created', 'on:', 'Apr', '16,', '2011', '*', 'Author:', 'leden', '*/', '#include', '""formula.h""', '#include', '""interpretation.h""', '#include', '""variable.h""', '#include', '""exists.h""', 'namespace', 'logic', '{', 'namespace', 'predicate', '{', 'Exists::Exists(const', 'Variable&', 'var,', 'const', 'Formula&', 'formula)', ':', 'super(var,', 'formula)', '{}', 'bool', 'Exists::operator()(const', 'Interpretation&', 'semantics,', 'VariableValues*', 'interpretation)', 'const', '{', 'for', '(Domain::const_iterator', 'it', '=', 'semantics.domain().begin(),', 'end', '=', 'semantics.domain().end();', 'it', '!=', 'end;', '++it)', '{', '(*interpretation)[variable()]', '=', '*it;', 'if', '(formula().operator()(semantics,', 'interpretation))', '{', 'interpretation->erase(variable());', 'return', 'true;', '}', '}', 'interpretation->erase(variable());', 'return', 'false;', '}', 'std::ostream&', 'Exists::operator<<(std::ostream&', 'os)', 'const', '{', 'os', '<<', '""E""', '<<', 'variable()', '<<', ""'"", ""'"", '<<', 'formula();', 'return', 'os;', '}', 'ExistsVariable::ExistsVariable(const', 'Variable&', 'variable)', ':', 'var_(variable)', '{}', 'Exists', 'ExistsVariable::operator()(const', 'Formula&', 'formula)', 'const', '{', 'return', 'Exists(var_,', 'formula);', '}', '}', '//', 'namespace', 'predicate', '}', '//', 'namespace', 'logic', '```']",challenge not surrounded by ''': ,
"/* This file is part of Dragon Wars.
 *
 * Dragon Wars is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Dragon Wars is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Dragon Wars. If not, see <http://www.gnu.org/licenses/>.
 */

package uk.co.fuuzetsu.turnofwar;

import android.app.Activity;
import android.os.Bundle;

/* Class stub */
public class HelpActivity extends Activity {
    @Override
    protected final void onCreate(final Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_help);
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', 'This', 'file', 'is', 'part', 'of', 'Dragon', 'Wars.', '*', '*', 'Dragon', 'Wars', 'is', 'free', 'software:', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', '*', 'it', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'as', 'published', 'by', '*', 'the', 'Free', 'Software', 'Foundation,', 'either', 'version', '3', 'of', 'the', 'License,', 'or', '*', '(at', 'your', 'option)', 'any', 'later', 'version.', '*', '*', 'Dragon', 'Wars', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', '*', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', '*', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', '*', 'GNU', 'General', 'Public', 'License', 'for', 'more', 'details.', '*', '*', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'General', 'Public', 'License', '*', 'along', 'with', 'Dragon', 'Wars.', 'If', 'not,', 'see', '<http://www.gnu.org/licenses/>.', '*/', 'package', 'uk.co.fuuzetsu.turnofwar;', 'import', 'android.app.Activity;', 'import', 'android.os.Bundle;', '/*', 'Class', 'stub', '*/', 'public', 'class', 'HelpActivity', 'extends', 'Activity', '{', '@Override', 'protected', 'final', 'void', 'onCreate(final', 'Bundle', 'savedInstanceState)', '{', 'super.onCreate(savedInstanceState);', 'setContentView(R.layout.activity_help);', '}', '}', '```']",challenge not surrounded by ''': ,
"/*
    Copyright (C) 2012-2016 Carl Hetherington <cth@carlh.net>

    This file is part of DCP-o-matic.

    DCP-o-matic is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    DCP-o-matic is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with DCP-o-matic.  If not, see <http://www.gnu.org/licenses/>.

*/

#include ""gain_calculator_dialog.h""
#include ""wx_util.h""
#include ""lib/util.h""

GainCalculatorDialog::GainCalculatorDialog (wxWindow* parent)
	: TableDialog (parent, _(""Gain Calculator""), 2, 1, true)
{
	add (_(""I want to play this back at fader""), true);
	_wanted = add (new wxTextCtrl (this, wxID_ANY, wxT (""""), wxDefaultPosition, wxDefaultSize, 0, wxTextValidator (wxFILTER_NUMERIC)));

	add (_(""But I have to use fader""), true);
	_actual = add (new wxTextCtrl (this, wxID_ANY, wxT (""""), wxDefaultPosition, wxDefaultSize, 0, wxTextValidator (wxFILTER_NUMERIC)));

	layout ();
}

float
GainCalculatorDialog::wanted_fader () const
{
	if (_wanted->GetValue().IsEmpty()) {
		return 0;
	}

	return relaxed_string_to_float (wx_to_std (_wanted->GetValue ()));
}

float
GainCalculatorDialog::actual_fader () const
{
	if (_actual->GetValue().IsEmpty()) {
		return 0;
	}

	return relaxed_string_to_float (wx_to_std (_actual->GetValue ()));
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', 'Copyright', '(C)', '2012-2016', 'Carl', 'Hetherington', '<cth@carlh.net>', 'This', 'file', 'is', 'part', 'of', 'DCP-o-matic.', 'DCP-o-matic', 'is', 'free', 'software;', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', 'it', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'as', 'published', 'by', 'the', 'Free', 'Software', 'Foundation;', 'either', 'version', '2', 'of', 'the', 'License,', 'or', '(at', 'your', 'option)', 'any', 'later', 'version.', 'DCP-o-matic', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', 'GNU', 'General', 'Public', 'License', 'for', 'more', 'details.', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'along', 'with', 'DCP-o-matic.', 'If', 'not,', 'see', '<http://www.gnu.org/licenses/>.', '*/', '#include', '""gain_calculator_dialog.h""', '#include', '""wx_util.h""', '#include', '""lib/util.h""', 'GainCalculatorDialog::GainCalculatorDialog', '(wxWindow*', 'parent)', ':', 'TableDialog', '(parent,', '_(""Gain', 'Calculator""),', '2,', '1,', 'true)', '{', 'add', '(_(""I', 'want', 'to', 'play', 'this', 'back', 'at', 'fader""),', 'true);', '_wanted', '=', 'add', '(new', 'wxTextCtrl', '(this,', 'wxID_ANY,', 'wxT', '(""""),', 'wxDefaultPosition,', 'wxDefaultSize,', '0,', 'wxTextValidator', '(wxFILTER_NUMERIC)));', 'add', '(_(""But', 'I', 'have', 'to', 'use', 'fader""),', 'true);', '_actual', '=', 'add', '(new', 'wxTextCtrl', '(this,', 'wxID_ANY,', 'wxT', '(""""),', 'wxDefaultPosition,', 'wxDefaultSize,', '0,', 'wxTextValidator', '(wxFILTER_NUMERIC)));', 'layout', '();', '}', 'float', 'GainCalculatorDialog::wanted_fader', '()', 'const', '{', 'if', '(_wanted->GetValue().IsEmpty())', '{', 'return', '0;', '}', 'return', 'relaxed_string_to_float', '(wx_to_std', '(_wanted->GetValue', '()));', '}', 'float', 'GainCalculatorDialog::actual_fader', '()', 'const', '{', 'if', '(_actual->GetValue().IsEmpty())', '{', 'return', '0;', '}', 'return', 'relaxed_string_to_float', '(wx_to_std', '(_actual->GetValue', '()));', '}', '```']",challenge not surrounded by ''': ,
"// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#include ""components/autofill/content/browser/webauthn/internal_authenticator_impl.h""

#include <string>
#include <utility>

#include ""base/timer/timer.h""
#include ""content/browser/webauth/authenticator_common.h""
#include ""content/public/browser/navigation_handle.h""
#include ""content/public/browser/render_frame_host.h""
#include ""content/public/browser/web_contents.h""
#include ""url/origin.h""

namespace content {

InternalAuthenticatorImpl::InternalAuthenticatorImpl(
    RenderFrameHost* render_frame_host)
    : InternalAuthenticatorImpl(render_frame_host,
                                std::make_unique<AuthenticatorCommon>(
                                    render_frame_host,
                                    std::make_unique<base::OneShotTimer>())) {}

InternalAuthenticatorImpl::InternalAuthenticatorImpl(
    RenderFrameHost* render_frame_host,
    std::unique_ptr<AuthenticatorCommon> authenticator_common)
    : WebContentsObserver(WebContents::FromRenderFrameHost(render_frame_host)),
      render_frame_host_(render_frame_host),
      effective_origin_(render_frame_host->GetLastCommittedOrigin()),
      authenticator_common_(std::move(authenticator_common)) {
  DCHECK(render_frame_host_);
  DCHECK(authenticator_common_);
  // Disabling WebAuthn modal dialogs to avoid conflict with Autofill's own
  // modal dialogs. Since WebAuthn is designed for websites, rather than browser
  // components, the UI can be confusing for users in the case for Autofill.
  // Autofill only ever uses platform authenticators and can take place
  // on any webpage.
  authenticator_common_->DisableUI();
}

InternalAuthenticatorImpl::~InternalAuthenticatorImpl() {
  // This call exists to assert that |render_frame_host_| outlives this object.
  // If this is violated, ASAN should notice.
  render_frame_host_->GetRoutingID();
}

void InternalAuthenticatorImpl::SetEffectiveOrigin(const url::Origin& origin) {
  effective_origin_ = url::Origin(origin);
  DCHECK(!effective_origin_.opaque());
}

void InternalAuthenticatorImpl::MakeCredential(
    blink::mojom::PublicKeyCredentialCreationOptionsPtr options,
    blink::mojom::Authenticator::MakeCredentialCallback callback) {
  authenticator_common_->MakeCredential(effective_origin_, std::move(options),
                                        std::move(callback));
}

void InternalAuthenticatorImpl::GetAssertion(
    blink::mojom::PublicKeyCredentialRequestOptionsPtr options,
    blink::mojom::Authenticator::GetAssertionCallback callback) {
  authenticator_common_->GetAssertion(effective_origin_, std::move(options),
                                      std::move(callback));
}

void InternalAuthenticatorImpl::IsUserVerifyingPlatformAuthenticatorAvailable(
    blink::mojom::Authenticator::
        IsUserVerifyingPlatformAuthenticatorAvailableCallback callback) {
  authenticator_common_->IsUserVerifyingPlatformAuthenticatorAvailable(
      std::move(callback));
}

void InternalAuthenticatorImpl::Cancel() {
  authenticator_common_->Cancel();
}

void InternalAuthenticatorImpl::DidFinishNavigation(
    NavigationHandle* navigation_handle) {
  // If the RenderFrameHost itself is navigated then this function will cause
  // request state to be cleaned up. It's also possible for a navigation in the
  // same frame to use a fresh RenderFrameHost. In this case,
  // |render_frame_host_->IsCurrent()| will start returning false, causing all
  // focus checks to fail if any Mojo requests are made in that state.
  if (!navigation_handle->HasCommitted() ||
      navigation_handle->IsSameDocument() ||
      navigation_handle->GetRenderFrameHost() != render_frame_host_) {
    return;
  }

  authenticator_common_->Cleanup();
}

}  // namespace content
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//', 'Copyright', '2019', 'The', 'Chromium', 'Authors.', 'All', 'rights', 'reserved.', '//', 'Use', 'of', 'this', 'source', 'code', 'is', 'governed', 'by', 'a', 'BSD-style', 'license', 'that', 'can', 'be', '//', 'found', 'in', 'the', 'LICENSE', 'file.', '#include', '""components/autofill/content/browser/webauthn/internal_authenticator_impl.h""', '#include', '<string>', '#include', '<utility>', '#include', '""base/timer/timer.h""', '#include', '""content/browser/webauth/authenticator_common.h""', '#include', '""content/public/browser/navigation_handle.h""', '#include', '""content/public/browser/render_frame_host.h""', '#include', '""content/public/browser/web_contents.h""', '#include', '""url/origin.h""', 'namespace', 'content', '{', 'InternalAuthenticatorImpl::InternalAuthenticatorImpl(', 'RenderFrameHost*', 'render_frame_host)', ':', 'InternalAuthenticatorImpl(render_frame_host,', 'std::make_unique<AuthenticatorCommon>(', 'render_frame_host,', 'std::make_unique<base::OneShotTimer>()))', '{}', 'InternalAuthenticatorImpl::InternalAuthenticatorImpl(', 'RenderFrameHost*', 'render_frame_host,', 'std::unique_ptr<AuthenticatorCommon>', 'authenticator_common)', ':', 'WebContentsObserver(WebContents::FromRenderFrameHost(render_frame_host)),', 'render_frame_host_(render_frame_host),', 'effective_origin_(render_frame_host->GetLastCommittedOrigin()),', 'authenticator_common_(std::move(authenticator_common))', '{', 'DCHECK(render_frame_host_);', 'DCHECK(authenticator_common_);', '//', 'Disabling', 'WebAuthn', 'modal', 'dialogs', 'to', 'avoid', 'conflict', 'with', ""Autofill's"", 'own', '//', 'modal', 'dialogs.', 'Since', 'WebAuthn', 'is', 'designed', 'for', 'websites,', 'rather', 'than', 'browser', '//', 'components,', 'the', 'UI', 'can', 'be', 'confusing', 'for', 'users', 'in', 'the', 'case', 'for', 'Autofill.', '//', 'Autofill', 'only', 'ever', 'uses', 'platform', 'authenticators', 'and', 'can', 'take', 'place', '//', 'on', 'any', 'webpage.', 'authenticator_common_->DisableUI();', '}', 'InternalAuthenticatorImpl::~InternalAuthenticatorImpl()', '{', '//', 'This', 'call', 'exists', 'to', 'assert', 'that', '|render_frame_host_|', 'outlives', 'this', 'object.', '//', 'If', 'this', 'is', 'violated,', 'ASAN', 'should', 'notice.', 'render_frame_host_->GetRoutingID();', '}', 'void', 'InternalAuthenticatorImpl::SetEffectiveOrigin(const', 'url::Origin&', 'origin)', '{', 'effective_origin_', '=', 'url::Origin(origin);', 'DCHECK(!effective_origin_.opaque());', '}', 'void', 'InternalAuthenticatorImpl::MakeCredential(', 'blink::mojom::PublicKeyCredentialCreationOptionsPtr', 'options,', 'blink::mojom::Authenticator::MakeCredentialCallback', 'callback)', '{', 'authenticator_common_->MakeCredential(effective_origin_,', 'std::move(options),', 'std::move(callback));', '}', 'void', 'InternalAuthenticatorImpl::GetAssertion(', 'blink::mojom::PublicKeyCredentialRequestOptionsPtr', 'options,', 'blink::mojom::Authenticator::GetAssertionCallback', 'callback)', '{', 'authenticator_common_->GetAssertion(effective_origin_,', 'std::move(options),', 'std::move(callback));', '}', 'void', 'InternalAuthenticatorImpl::IsUserVerifyingPlatformAuthenticatorAvailable(', 'blink::mojom::Authenticator::', 'IsUserVerifyingPlatformAuthenticatorAvailableCallback', 'callback)', '{', 'authenticator_common_->IsUserVerifyingPlatformAuthenticatorAvailable(', 'std::move(callback));', '}', 'void', 'InternalAuthenticatorImpl::Cancel()', '{', 'authenticator_common_->Cancel();', '}', 'void', 'InternalAuthenticatorImpl::DidFinishNavigation(', 'NavigationHandle*', 'navigation_handle)', '{', '//', 'If', 'the', 'RenderFrameHost', 'itself', 'is', 'navigated', 'then', 'this', 'function', 'will', 'cause', '//', 'request', 'state', 'to', 'be', 'cleaned', 'up.', ""It's"", 'also', 'possible', 'for', 'a', 'navigation', 'in', 'the', '//', 'same', 'frame', 'to', 'use', 'a', 'fresh', 'RenderFrameHost.', 'In', 'this', 'case,', '//', '|render_frame_host_->IsCurrent()|', 'will', 'start', 'returning', 'false,', 'causing', 'all', '//', 'focus', 'checks', 'to', 'fail', 'if', 'any', 'Mojo', 'requests', 'are', 'made', 'in', 'that', 'state.', 'if', '(!navigation_handle->HasCommitted()', '||', 'navigation_handle->IsSameDocument()', '||', 'navigation_handle->GetRenderFrameHost()', '!=', 'render_frame_host_)', '{', 'return;', '}', 'authenticator_common_->Cleanup();', '}', '}', '//', 'namespace', 'content', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the ""License""); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

package org.wso2.carbon.certificate.mgt.core.dao;

/**
 * Custom exception class for data access related exceptions.
 */
public class CertificateManagementDAOException extends Exception {

    private String message;
    private static final long serialVersionUID = 2021891706072918864L;

    /**
     * Constructs a new exception with the specified detail message and nested exception.
     *
     * @param message         error message
     * @param nestedException exception
     */
    public CertificateManagementDAOException(String message, Exception nestedException) {
        super(message, nestedException);
        setErrorMessage(message);
    }

    /**
     * Constructs a new exception with the specified detail message and cause.
     *
     * @param message the detail message.
     * @param cause   the cause of this exception.
     */
    public CertificateManagementDAOException(String message, Throwable cause) {
        super(message, cause);
        setErrorMessage(message);
    }

    /**
     * Constructs a new exception with the specified detail message
     *
     * @param message the detail message.
     */
    public CertificateManagementDAOException(String message) {
        super(message);
        setErrorMessage(message);
    }

    /**
     * Constructs a new exception with the specified and cause.
     *
     * @param cause the cause of this exception.
     */
    public CertificateManagementDAOException(Throwable cause) {
        super(cause);
    }

    public String getMessage() {
        return message;
    }

    public void setErrorMessage(String errorMessage) {
        this.message = errorMessage;
    }

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '(c)', '2015,', 'WSO2', 'Inc.', '(http://www.wso2.org)', 'All', 'Rights', 'Reserved.', '*', '*', 'WSO2', 'Inc.', 'licenses', 'this', 'file', 'to', 'you', 'under', 'the', 'Apache', 'License,', '*', 'Version', '2.0', '(the', '""License"");', 'you', 'may', 'not', 'use', 'this', 'file', 'except', '*', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', '*', 'software', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '*', '""AS', 'IS""', 'BASIS,', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', '*', 'KIND,', 'either', 'express', 'or', 'implied.', 'See', 'the', 'License', 'for', 'the', '*', 'specific', 'language', 'governing', 'permissions', 'and', 'limitations', '*', 'under', 'the', 'License.', '*/', 'package', 'org.wso2.carbon.certificate.mgt.core.dao;', '/**', '*', 'Custom', 'exception', 'class', 'for', 'data', 'access', 'related', 'exceptions.', '*/', 'public', 'class', 'CertificateManagementDAOException', 'extends', 'Exception', '{', 'private', 'String', 'message;', 'private', 'static', 'final', 'long', 'serialVersionUID', '=', '2021891706072918864L;', '/**', '*', 'Constructs', 'a', 'new', 'exception', 'with', 'the', 'specified', 'detail', 'message', 'and', 'nested', 'exception.', '*', '*', '@param', 'message', 'error', 'message', '*', '@param', 'nestedException', 'exception', '*/', 'public', 'CertificateManagementDAOException(String', 'message,', 'Exception', 'nestedException)', '{', 'super(message,', 'nestedException);', 'setErrorMessage(message);', '}', '/**', '*', 'Constructs', 'a', 'new', 'exception', 'with', 'the', 'specified', 'detail', 'message', 'and', 'cause.', '*', '*', '@param', 'message', 'the', 'detail', 'message.', '*', '@param', 'cause', 'the', 'cause', 'of', 'this', 'exception.', '*/', 'public', 'CertificateManagementDAOException(String', 'message,', 'Throwable', 'cause)', '{', 'super(message,', 'cause);', 'setErrorMessage(message);', '}', '/**', '*', 'Constructs', 'a', 'new', 'exception', 'with', 'the', 'specified', 'detail', 'message', '*', '*', '@param', 'message', 'the', 'detail', 'message.', '*/', 'public', 'CertificateManagementDAOException(String', 'message)', '{', 'super(message);', 'setErrorMessage(message);', '}', '/**', '*', 'Constructs', 'a', 'new', 'exception', 'with', 'the', 'specified', 'and', 'cause.', '*', '*', '@param', 'cause', 'the', 'cause', 'of', 'this', 'exception.', '*/', 'public', 'CertificateManagementDAOException(Throwable', 'cause)', '{', 'super(cause);', '}', 'public', 'String', 'getMessage()', '{', 'return', 'message;', '}', 'public', 'void', 'setErrorMessage(String', 'errorMessage)', '{', 'this.message', '=', 'errorMessage;', '}', '}', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright 2020 Red Hat, Inc. and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.kie.pmml.compiler.commons.mocks;

import java.util.Map;

import org.kie.memorycompiler.KieMemoryCompiler;
import org.kie.pmml.commons.model.HasClassLoader;

public class HasClassLoaderMock implements HasClassLoader {

    private final ClassLoader classLoader;

    public HasClassLoaderMock() {
        this.classLoader = Thread.currentThread().getContextClassLoader();
    }

    @Override
    public ClassLoader getClassLoader() {
        return classLoader;
    }

    @Override
    public Class<?> compileAndLoadClass(Map<String, String> sourcesMap, String fullClassName) {
        Map<String, Class<?>> compiled = KieMemoryCompiler.compile(sourcesMap, classLoader);
        return compiled.get(fullClassName);
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '2020', 'Red', 'Hat,', 'Inc.', 'and/or', 'its', 'affiliates.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'org.kie.pmml.compiler.commons.mocks;', 'import', 'java.util.Map;', 'import', 'org.kie.memorycompiler.KieMemoryCompiler;', 'import', 'org.kie.pmml.commons.model.HasClassLoader;', 'public', 'class', 'HasClassLoaderMock', 'implements', 'HasClassLoader', '{', 'private', 'final', 'ClassLoader', 'classLoader;', 'public', 'HasClassLoaderMock()', '{', 'this.classLoader', '=', 'Thread.currentThread().getContextClassLoader();', '}', '@Override', 'public', 'ClassLoader', 'getClassLoader()', '{', 'return', 'classLoader;', '}', '@Override', 'public', 'Class<?>', 'compileAndLoadClass(Map<String,', 'String>', 'sourcesMap,', 'String', 'fullClassName)', '{', 'Map<String,', 'Class<?>>', 'compiled', '=', 'KieMemoryCompiler.compile(sourcesMap,', 'classLoader);', 'return', 'compiled.get(fullClassName);', '}', '}', '```']",challenge not surrounded by ''': ,
"""""""Contain a simple zone class""""""
from time import time

from game import Game
import maths

class Zone(object):
    """"""
    A Zone class for the game
    contain a generator callable throught run()
    """"""
    def __init__(self, team_name, position, radius, id_):
        self._team_name = team_name
        self._gen = self._generator()
        self.position = position
        self.radius = radius
        self. id_ = id_
        self.timer = int()

    def run(self):
        """"""run the internal generator once""""""
        return self._gen.__next__()

    def _generator(self):
        foe_in_zone = False
        while True:
            yield
            foe = self.check_foe_in_zone()

            if foe:
                if foe_in_zone:
                    if self.need_change_team():
                        self.team_name = foe.getTeam()
                else:
                    self.timer = time()
                    foe_in_zone = True
            else:
                foe_in_zone = False


    def check_foe_in_zone(self):
        """"""Check if any foe is in zone and return the firt one found""""""
        for player in Game().get_players_not_in_team(self.team_name):
            if maths.distance(self.position, player.position) < self.radius:
                return player

    def need_change_team(self):
        """"""return True if a player is in zone more than timeout""""""
        return time() - self.timer > Game().params.zone_timeout

","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```""""""Contain', 'a', 'simple', 'zone', 'class""""""', 'from', 'time', 'import', 'time', 'from', 'game', 'import', 'Game', 'import', 'maths', 'class', 'Zone(object):', '""""""', 'A', 'Zone', 'class', 'for', 'the', 'game', 'contain', 'a', 'generator', 'callable', 'throught', 'run()', '""""""', 'def', '__init__(self,', 'team_name,', 'position,', 'radius,', 'id_):', 'self._team_name', '=', 'team_name', 'self._gen', '=', 'self._generator()', 'self.position', '=', 'position', 'self.radius', '=', 'radius', 'self.', 'id_', '=', 'id_', 'self.timer', '=', 'int()', 'def', 'run(self):', '""""""run', 'the', 'internal', 'generator', 'once""""""', 'return', 'self._gen.__next__()', 'def', '_generator(self):', 'foe_in_zone', '=', 'False', 'while', 'True:', 'yield', 'foe', '=', 'self.check_foe_in_zone()', 'if', 'foe:', 'if', 'foe_in_zone:', 'if', 'self.need_change_team():', 'self.team_name', '=', 'foe.getTeam()', 'else:', 'self.timer', '=', 'time()', 'foe_in_zone', '=', 'True', 'else:', 'foe_in_zone', '=', 'False', 'def', 'check_foe_in_zone(self):', '""""""Check', 'if', 'any', 'foe', 'is', 'in', 'zone', 'and', 'return', 'the', 'firt', 'one', 'found""""""', 'for', 'player', 'in', 'Game().get_players_not_in_team(self.team_name):', 'if', 'maths.distance(self.position,', 'player.position)', '<', 'self.radius:', 'return', 'player', 'def', 'need_change_team(self):', '""""""return', 'True', 'if', 'a', 'player', 'is', 'in', 'zone', 'more', 'than', 'timeout""""""', 'return', 'time()', '-', 'self.timer', '>', 'Game().params.zone_timeout', '```']",challenge not surrounded by ''': ,
"
'use strict';

module.exports = function () {
  return function (exception) {
    throw exception;
  };
};
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```', ""'use"", ""strict';"", 'module.exports', '=', 'function', '()', '{', 'return', 'function', '(exception)', '{', 'throw', 'exception;', '};', '};', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright 2014-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the ""License""). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 * 
 * http://aws.amazon.com/apache2.0
 * 
 * or in the ""license"" file accompanying this file. This file is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */
package com.amazonaws.services.codecommit.model.transform;

import java.math.*;

import javax.annotation.Generated;

import com.amazonaws.services.codecommit.model.*;
import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
import com.amazonaws.transform.*;

import com.fasterxml.jackson.core.JsonToken;
import static com.fasterxml.jackson.core.JsonToken.*;

/**
 * SymbolicLink JSON Unmarshaller
 */
@Generated(""com.amazonaws:aws-java-sdk-code-generator"")
public class SymbolicLinkJsonUnmarshaller implements Unmarshaller<SymbolicLink, JsonUnmarshallerContext> {

    public SymbolicLink unmarshall(JsonUnmarshallerContext context) throws Exception {
        SymbolicLink symbolicLink = new SymbolicLink();

        int originalDepth = context.getCurrentDepth();
        String currentParentElement = context.getCurrentParentElement();
        int targetDepth = originalDepth + 1;

        JsonToken token = context.getCurrentToken();
        if (token == null)
            token = context.nextToken();
        if (token == VALUE_NULL) {
            return null;
        }

        while (true) {
            if (token == null)
                break;

            if (token == FIELD_NAME || token == START_OBJECT) {
                if (context.testExpression(""blobId"", targetDepth)) {
                    context.nextToken();
                    symbolicLink.setBlobId(context.getUnmarshaller(String.class).unmarshall(context));
                }
                if (context.testExpression(""absolutePath"", targetDepth)) {
                    context.nextToken();
                    symbolicLink.setAbsolutePath(context.getUnmarshaller(String.class).unmarshall(context));
                }
                if (context.testExpression(""relativePath"", targetDepth)) {
                    context.nextToken();
                    symbolicLink.setRelativePath(context.getUnmarshaller(String.class).unmarshall(context));
                }
                if (context.testExpression(""fileMode"", targetDepth)) {
                    context.nextToken();
                    symbolicLink.setFileMode(context.getUnmarshaller(String.class).unmarshall(context));
                }
            } else if (token == END_ARRAY || token == END_OBJECT) {
                if (context.getLastParsedParentElement() == null || context.getLastParsedParentElement().equals(currentParentElement)) {
                    if (context.getCurrentDepth() <= originalDepth)
                        break;
                }
            }
            token = context.nextToken();
        }

        return symbolicLink;
    }

    private static SymbolicLinkJsonUnmarshaller instance;

    public static SymbolicLinkJsonUnmarshaller getInstance() {
        if (instance == null)
            instance = new SymbolicLinkJsonUnmarshaller();
        return instance;
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '2014-2019', 'Amazon.com,', 'Inc.', 'or', 'its', 'affiliates.', 'All', 'Rights', 'Reserved.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"").', 'You', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', '*', 'the', 'License.', 'A', 'copy', 'of', 'the', 'License', 'is', 'located', 'at', '*', '*', 'http://aws.amazon.com/apache2.0', '*', '*', 'or', 'in', 'the', '""license""', 'file', 'accompanying', 'this', 'file.', 'This', 'file', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', 'WITHOUT', 'WARRANTIES', 'OR', '*', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', '*', 'and', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'com.amazonaws.services.codecommit.model.transform;', 'import', 'java.math.*;', 'import', 'javax.annotation.Generated;', 'import', 'com.amazonaws.services.codecommit.model.*;', 'import', 'com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;', 'import', 'com.amazonaws.transform.*;', 'import', 'com.fasterxml.jackson.core.JsonToken;', 'import', 'static', 'com.fasterxml.jackson.core.JsonToken.*;', '/**', '*', 'SymbolicLink', 'JSON', 'Unmarshaller', '*/', '@Generated(""com.amazonaws:aws-java-sdk-code-generator"")', 'public', 'class', 'SymbolicLinkJsonUnmarshaller', 'implements', 'Unmarshaller<SymbolicLink,', 'JsonUnmarshallerContext>', '{', 'public', 'SymbolicLink', 'unmarshall(JsonUnmarshallerContext', 'context)', 'throws', 'Exception', '{', 'SymbolicLink', 'symbolicLink', '=', 'new', 'SymbolicLink();', 'int', 'originalDepth', '=', 'context.getCurrentDepth();', 'String', 'currentParentElement', '=', 'context.getCurrentParentElement();', 'int', 'targetDepth', '=', 'originalDepth', '+', '1;', 'JsonToken', 'token', '=', 'context.getCurrentToken();', 'if', '(token', '==', 'null)', 'token', '=', 'context.nextToken();', 'if', '(token', '==', 'VALUE_NULL)', '{', 'return', 'null;', '}', 'while', '(true)', '{', 'if', '(token', '==', 'null)', 'break;', 'if', '(token', '==', 'FIELD_NAME', '||', 'token', '==', 'START_OBJECT)', '{', 'if', '(context.testExpression(""blobId"",', 'targetDepth))', '{', 'context.nextToken();', 'symbolicLink.setBlobId(context.getUnmarshaller(String.class).unmarshall(context));', '}', 'if', '(context.testExpression(""absolutePath"",', 'targetDepth))', '{', 'context.nextToken();', 'symbolicLink.setAbsolutePath(context.getUnmarshaller(String.class).unmarshall(context));', '}', 'if', '(context.testExpression(""relativePath"",', 'targetDepth))', '{', 'context.nextToken();', 'symbolicLink.setRelativePath(context.getUnmarshaller(String.class).unmarshall(context));', '}', 'if', '(context.testExpression(""fileMode"",', 'targetDepth))', '{', 'context.nextToken();', 'symbolicLink.setFileMode(context.getUnmarshaller(String.class).unmarshall(context));', '}', '}', 'else', 'if', '(token', '==', 'END_ARRAY', '||', 'token', '==', 'END_OBJECT)', '{', 'if', '(context.getLastParsedParentElement()', '==', 'null', '||', 'context.getLastParsedParentElement().equals(currentParentElement))', '{', 'if', '(context.getCurrentDepth()', '<=', 'originalDepth)', 'break;', '}', '}', 'token', '=', 'context.nextToken();', '}', 'return', 'symbolicLink;', '}', 'private', 'static', 'SymbolicLinkJsonUnmarshaller', 'instance;', 'public', 'static', 'SymbolicLinkJsonUnmarshaller', 'getInstance()', '{', 'if', '(instance', '==', 'null)', 'instance', '=', 'new', 'SymbolicLinkJsonUnmarshaller();', 'return', 'instance;', '}', '}', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright 2017 Daniel Nilsson
 *
 * Licensed under the Apache License, Version 2.0 (the ""License""); you may not use this
 * file except in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

package com.github.dannil.scbjavaclient.client.environment.localitiesareasandpopulation.population;

import static org.junit.jupiter.api.Assertions.assertEquals;

import java.util.Locale;

import com.github.dannil.scbjavaclient.communication.URLEndpoint;
import com.github.dannil.scbjavaclient.test.extensions.Suite;

import org.junit.jupiter.api.Test;

@Suite
public class EnvironmentLocalitiesAreasAndPopulationPopulationClientTest {

    @Test
    public void createWithLocaleConstructor() {
        Locale locale = new Locale(""sv"", ""SE"");
        EnvironmentLocalitiesAreasAndPopulationPopulationClient client = new EnvironmentLocalitiesAreasAndPopulationPopulationClient(
                locale);

        assertEquals(locale, client.getLocale());
    }

    @Test
    public void getUrl() {
        // Check with a locale that isn't the fallback locale; results in a more specific
        // test with harder constraints
        Locale locale = new Locale(""en"", ""US"");
        EnvironmentLocalitiesAreasAndPopulationPopulationClient client = new EnvironmentLocalitiesAreasAndPopulationPopulationClient(
                locale);

        assertEquals(URLEndpoint.getRootUrl(locale).append(""MI/MI0810/MI0810A""), client.getUrl());
    }

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '2017', 'Daniel', 'Nilsson', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', 'you', 'may', 'not', 'use', 'this', '*', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', 'distributed', 'under', '*', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', '*', 'KIND,', 'either', 'express', 'or', 'implied.', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', '*', 'permissions', 'and', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'com.github.dannil.scbjavaclient.client.environment.localitiesareasandpopulation.population;', 'import', 'static', 'org.junit.jupiter.api.Assertions.assertEquals;', 'import', 'java.util.Locale;', 'import', 'com.github.dannil.scbjavaclient.communication.URLEndpoint;', 'import', 'com.github.dannil.scbjavaclient.test.extensions.Suite;', 'import', 'org.junit.jupiter.api.Test;', '@Suite', 'public', 'class', 'EnvironmentLocalitiesAreasAndPopulationPopulationClientTest', '{', '@Test', 'public', 'void', 'createWithLocaleConstructor()', '{', 'Locale', 'locale', '=', 'new', 'Locale(""sv"",', '""SE"");', 'EnvironmentLocalitiesAreasAndPopulationPopulationClient', 'client', '=', 'new', 'EnvironmentLocalitiesAreasAndPopulationPopulationClient(', 'locale);', 'assertEquals(locale,', 'client.getLocale());', '}', '@Test', 'public', 'void', 'getUrl()', '{', '//', 'Check', 'with', 'a', 'locale', 'that', ""isn't"", 'the', 'fallback', 'locale;', 'results', 'in', 'a', 'more', 'specific', '//', 'test', 'with', 'harder', 'constraints', 'Locale', 'locale', '=', 'new', 'Locale(""en"",', '""US"");', 'EnvironmentLocalitiesAreasAndPopulationPopulationClient', 'client', '=', 'new', 'EnvironmentLocalitiesAreasAndPopulationPopulationClient(', 'locale);', 'assertEquals(URLEndpoint.getRootUrl(locale).append(""MI/MI0810/MI0810A""),', 'client.getUrl());', '}', '}', '```']",challenge not surrounded by ''': ,
"package net.floodlightcontroller.packet.gtp;

import net.floodlightcontroller.packet.IPacket;


public abstract class AbstractGTPHeader implements IGTPHeader {
	
	public static final short GTP_FLAG_MASK = (1 << AbstractGTP.GTP_VERSION_SHIFT) - 1;
	protected byte version;	
	protected byte[] sequenceNumber;
	protected short totalLength;

	
	protected byte[] createHeaderDataArray() {
		byte[] data = new byte[getSizeInBytes()];
		return data;
	}

	@Override
	public byte getVersion() {
		return this.version;
	}

	public abstract int getSizeInBytes();
	
	public abstract byte[] getNextSequenceNumber();
	
	@Override
	public IGTPHeader setSequenceNumber(byte[] sequenceNumber) {
		this.sequenceNumber = sequenceNumber;
		return this;
	}
	
	@Override
	public void updateLength(IPacket oldPayload, IPacket newPayload) {
		// TODO review this!
		// Seems to be this fixed size but this may be excluding ext headers
		this.totalLength = (short)(4 + newPayload.serialize().length);
	}
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'net.floodlightcontroller.packet.gtp;', 'import', 'net.floodlightcontroller.packet.IPacket;', 'public', 'abstract', 'class', 'AbstractGTPHeader', 'implements', 'IGTPHeader', '{', 'public', 'static', 'final', 'short', 'GTP_FLAG_MASK', '=', '(1', '<<', 'AbstractGTP.GTP_VERSION_SHIFT)', '-', '1;', 'protected', 'byte', 'version;', 'protected', 'byte[]', 'sequenceNumber;', 'protected', 'short', 'totalLength;', 'protected', 'byte[]', 'createHeaderDataArray()', '{', 'byte[]', 'data', '=', 'new', 'byte[getSizeInBytes()];', 'return', 'data;', '}', '@Override', 'public', 'byte', 'getVersion()', '{', 'return', 'this.version;', '}', 'public', 'abstract', 'int', 'getSizeInBytes();', 'public', 'abstract', 'byte[]', 'getNextSequenceNumber();', '@Override', 'public', 'IGTPHeader', 'setSequenceNumber(byte[]', 'sequenceNumber)', '{', 'this.sequenceNumber', '=', 'sequenceNumber;', 'return', 'this;', '}', '@Override', 'public', 'void', 'updateLength(IPacket', 'oldPayload,', 'IPacket', 'newPayload)', '{', '//', 'TODO', 'review', 'this!', '//', 'Seems', 'to', 'be', 'this', 'fixed', 'size', 'but', 'this', 'may', 'be', 'excluding', 'ext', 'headers', 'this.totalLength', '=', '(short)(4', '+', 'newPayload.serialize().length);', '}', '}', '```']",challenge not surrounded by ''': ,
"package org.wso2.carbon.bam.toolbox.deployer.util;

/**
 * Copyright (c) 2009, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 * <p/>
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * <p/>
 * http://www.apache.org/licenses/LICENSE-2.0
 * <p/>
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
public class JaggeryTabDTO {
    private String displayName;
    private String url;

    public JaggeryTabDTO() {
        displayName = """";
        url = """";
    }

    public JaggeryTabDTO(String displayName, String url) {
        this.displayName = displayName;
        this.url = url;
    }

    public String getDisplayName() {
        return displayName;
    }

    public void setDisplayName(String displayName) {
        this.displayName = displayName;
    }

    public String getUrl() {
        return url;
    }

    public void setUrl(String url) {
        this.url = url;
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'org.wso2.carbon.bam.toolbox.deployer.util;', '/**', '*', 'Copyright', '(c)', '2009,', 'WSO2', 'Inc.', '(http://www.wso2.org)', 'All', 'Rights', 'Reserved.', '*', '<p/>', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '<p/>', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '<p/>', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'public', 'class', 'JaggeryTabDTO', '{', 'private', 'String', 'displayName;', 'private', 'String', 'url;', 'public', 'JaggeryTabDTO()', '{', 'displayName', '=', '"""";', 'url', '=', '"""";', '}', 'public', 'JaggeryTabDTO(String', 'displayName,', 'String', 'url)', '{', 'this.displayName', '=', 'displayName;', 'this.url', '=', 'url;', '}', 'public', 'String', 'getDisplayName()', '{', 'return', 'displayName;', '}', 'public', 'void', 'setDisplayName(String', 'displayName)', '{', 'this.displayName', '=', 'displayName;', '}', 'public', 'String', 'getUrl()', '{', 'return', 'url;', '}', 'public', 'void', 'setUrl(String', 'url)', '{', 'this.url', '=', 'url;', '}', '}', '```']",challenge not surrounded by ''': ,
"package helios.samples.jdk.validators;

import static org.junit.Assert.assertEquals;

import static helios.Helios.validate;
import static helios.Validators.min;
import static helios.Validators.required;
import static helios.Validators.minOfString;

import helios.ValidatorError;

import java.util.List;
import org.junit.Test;

public class ValidatorsTest {

    static class Product {
        final Long id;
        final String desc;
        final Double amount;

        public Product(final Long id, final String desc, final Double amount) {
            this.id = id;
            this.desc = desc;
            this.amount = amount;
        }
    }

    @Test public void testData() {
        Product product = new Product(1L, ""Bike 600cc"", 100d);
        List<ValidatorError> errors = validate(""product"", product,
            (Product p) -> validate(""id"", p.id, required()),
            (Product p) -> validate(""desc"", p.desc, required(), minOfString(4)),
            (Product p) -> validate(""amount"", p.amount, required(), min(1000d)));

        assertEquals(errors.size(), 1);
        assertEquals(errors.get(0).key, ""min.notmet"");
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'helios.samples.jdk.validators;', 'import', 'static', 'org.junit.Assert.assertEquals;', 'import', 'static', 'helios.Helios.validate;', 'import', 'static', 'helios.Validators.min;', 'import', 'static', 'helios.Validators.required;', 'import', 'static', 'helios.Validators.minOfString;', 'import', 'helios.ValidatorError;', 'import', 'java.util.List;', 'import', 'org.junit.Test;', 'public', 'class', 'ValidatorsTest', '{', 'static', 'class', 'Product', '{', 'final', 'Long', 'id;', 'final', 'String', 'desc;', 'final', 'Double', 'amount;', 'public', 'Product(final', 'Long', 'id,', 'final', 'String', 'desc,', 'final', 'Double', 'amount)', '{', 'this.id', '=', 'id;', 'this.desc', '=', 'desc;', 'this.amount', '=', 'amount;', '}', '}', '@Test', 'public', 'void', 'testData()', '{', 'Product', 'product', '=', 'new', 'Product(1L,', '""Bike', '600cc"",', '100d);', 'List<ValidatorError>', 'errors', '=', 'validate(""product"",', 'product,', '(Product', 'p)', '->', 'validate(""id"",', 'p.id,', 'required()),', '(Product', 'p)', '->', 'validate(""desc"",', 'p.desc,', 'required(),', 'minOfString(4)),', '(Product', 'p)', '->', 'validate(""amount"",', 'p.amount,', 'required(),', 'min(1000d)));', 'assertEquals(errors.size(),', '1);', 'assertEquals(errors.get(0).key,', '""min.notmet"");', '}', '}', '```']",challenge not surrounded by ''': ,
"package com.alanloi.springmvc.wadl.mapper;

import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Set;

/**
 * A WADL Type Mapper which is based on JSON data types.
 * 
 * The mappings are based on the JSON data types as per:
 * {@link http://www.json.org/fatfree.html}
 * 
 * @author Alan Loi
 */
public class JsonBasedWadlTypeMapper extends AbstractWadlTypeMapper {
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	protected List<JavaWadlTypePair> createJavaWadlTypeBindings() {
		List<JavaWadlTypePair> bindings = new ArrayList<JavaWadlTypePair>();
		addBinding(bindings, String.class, ""string"");
		addBinding(bindings, BigInteger.class, ""number"");
		addBinding(bindings, Integer.class, ""number"");
		addBinding(bindings, Long.class, ""number"");
		addBinding(bindings, Short.class, ""number"");
		addBinding(bindings, BigDecimal.class, ""number"");
		addBinding(bindings, Float.class, ""number"");
		addBinding(bindings, Double.class, ""number"");
		addBinding(bindings, Boolean.class, ""boolean"");
		addBinding(bindings, List.class, ""array"");
		addBinding(bindings, Set.class, ""array"");
		addBinding(bindings, Map.class, ""object"");
		addBinding(bindings, Object.class, ""object"");
		return bindings;
	}
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.alanloi.springmvc.wadl.mapper;', 'import', 'java.math.BigDecimal;', 'import', 'java.math.BigInteger;', 'import', 'java.util.ArrayList;', 'import', 'java.util.List;', 'import', 'java.util.Map;', 'import', 'java.util.Set;', '/**', '*', 'A', 'WADL', 'Type', 'Mapper', 'which', 'is', 'based', 'on', 'JSON', 'data', 'types.', '*', '*', 'The', 'mappings', 'are', 'based', 'on', 'the', 'JSON', 'data', 'types', 'as', 'per:', '*', '{@link', 'http://www.json.org/fatfree.html}', '*', '*', '@author', 'Alan', 'Loi', '*/', 'public', 'class', 'JsonBasedWadlTypeMapper', 'extends', 'AbstractWadlTypeMapper', '{', '/**', '*', '{@inheritDoc}', '*/', '@Override', 'protected', 'List<JavaWadlTypePair>', 'createJavaWadlTypeBindings()', '{', 'List<JavaWadlTypePair>', 'bindings', '=', 'new', 'ArrayList<JavaWadlTypePair>();', 'addBinding(bindings,', 'String.class,', '""string"");', 'addBinding(bindings,', 'BigInteger.class,', '""number"");', 'addBinding(bindings,', 'Integer.class,', '""number"");', 'addBinding(bindings,', 'Long.class,', '""number"");', 'addBinding(bindings,', 'Short.class,', '""number"");', 'addBinding(bindings,', 'BigDecimal.class,', '""number"");', 'addBinding(bindings,', 'Float.class,', '""number"");', 'addBinding(bindings,', 'Double.class,', '""number"");', 'addBinding(bindings,', 'Boolean.class,', '""boolean"");', 'addBinding(bindings,', 'List.class,', '""array"");', 'addBinding(bindings,', 'Set.class,', '""array"");', 'addBinding(bindings,', 'Map.class,', '""object"");', 'addBinding(bindings,', 'Object.class,', '""object"");', 'return', 'bindings;', '}', '}', '```']",challenge not surrounded by ''': ,
"/**
 * File ./src/main/java/de/lemo/dms/connectors/ConnectorDummy.java
 * Lemo-Data-Management-Server for learning analytics.
 * Copyright (C) 2015
 * Leonard Kappe, Andreas Pursian, Sebastian Schwarzrock, Boris Wenzlaff
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
**/

/**
 * File ./main/java/de/lemo/dms/connectors/ConnectorDummy.java
 * Date 2013-01-24
 * Project Lemo Learning Analytics
 */

package de.lemo.dms.connectors;

import org.apache.log4j.Logger;

/**
 * dummy connector with sleep function for connector tests
 * 
 * @author Boris Wenzlaff
 */
public class ConnectorDummy extends AbstractConnector {

	private final int sleep = (60 * 1000);
	private final Logger logger = Logger.getLogger(this.getClass());

	@Override
	public boolean testConnections() {
		return true;
	}

	@Override
	public void getData() {
		try {
			this.logger.info(""connector dummy will load whole database"");
			Thread.sleep(this.sleep);
		} catch (final InterruptedException e) {

			this.logger.warn(""connector dummy throws exception at getData()"");
		}
	}

	@Override
	public void updateData(final long fromTimestamp) {
		try {
			this.logger.info(""connector dummy will update whole database"");
			Thread.sleep(this.sleep);
		} catch (final InterruptedException e) {
			this.logger.warn(""connector dummy throws exception at updateData()"");
		}
	}
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', 'File', './src/main/java/de/lemo/dms/connectors/ConnectorDummy.java', '*', 'Lemo-Data-Management-Server', 'for', 'learning', 'analytics.', '*', 'Copyright', '(C)', '2015', '*', 'Leonard', 'Kappe,', 'Andreas', 'Pursian,', 'Sebastian', 'Schwarzrock,', 'Boris', 'Wenzlaff', '*', '*', 'This', 'program', 'is', 'free', 'software:', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', '*', 'it', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'as', 'published', 'by', '*', 'the', 'Free', 'Software', 'Foundation,', 'either', 'version', '3', 'of', 'the', 'License,', 'or', '*', 'any', 'later', 'version.', '*', '*', 'This', 'program', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', '*', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', '*', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', '*', 'GNU', 'General', 'Public', 'License', 'for', 'more', 'details.', '*', '*', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'General', 'Public', 'License', '*', 'along', 'with', 'this', 'program.', 'If', 'not,', 'see', '<http://www.gnu.org/licenses/>.', '**/', '/**', '*', 'File', './main/java/de/lemo/dms/connectors/ConnectorDummy.java', '*', 'Date', '2013-01-24', '*', 'Project', 'Lemo', 'Learning', 'Analytics', '*/', 'package', 'de.lemo.dms.connectors;', 'import', 'org.apache.log4j.Logger;', '/**', '*', 'dummy', 'connector', 'with', 'sleep', 'function', 'for', 'connector', 'tests', '*', '*', '@author', 'Boris', 'Wenzlaff', '*/', 'public', 'class', 'ConnectorDummy', 'extends', 'AbstractConnector', '{', 'private', 'final', 'int', 'sleep', '=', '(60', '*', '1000);', 'private', 'final', 'Logger', 'logger', '=', 'Logger.getLogger(this.getClass());', '@Override', 'public', 'boolean', 'testConnections()', '{', 'return', 'true;', '}', '@Override', 'public', 'void', 'getData()', '{', 'try', '{', 'this.logger.info(""connector', 'dummy', 'will', 'load', 'whole', 'database"");', 'Thread.sleep(this.sleep);', '}', 'catch', '(final', 'InterruptedException', 'e)', '{', 'this.logger.warn(""connector', 'dummy', 'throws', 'exception', 'at', 'getData()"");', '}', '}', '@Override', 'public', 'void', 'updateData(final', 'long', 'fromTimestamp)', '{', 'try', '{', 'this.logger.info(""connector', 'dummy', 'will', 'update', 'whole', 'database"");', 'Thread.sleep(this.sleep);', '}', 'catch', '(final', 'InterruptedException', 'e)', '{', 'this.logger.warn(""connector', 'dummy', 'throws', 'exception', 'at', 'updateData()"");', '}', '}', '}', '```']",challenge not surrounded by ''': ,
"#!/usr/bin/env python
# -*- cpy-indent-level: 4; indent-tabs-mode: nil -*-
# ex: set expandtab softtabstop=4 shiftwidth=4:
#
# Copyright (C) 2009,2010,2011,2012,2013,2014,2015,2016  Contributor
#
# Licensed under the Apache License, Version 2.0 (the ""License"");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an ""AS IS"" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
""""""Module for testing the add vendor command.""""""

import unittest

if __name__ == ""__main__"":
    import utils
    utils.import_depends()

from brokertest import TestBrokerCommand


class TestAddVendor(TestBrokerCommand):

    def test_100_add_utvendor(self):
        command = [""add"", ""vendor"", ""--vendor"", ""utvendor"",
                   ""--comments"", ""Some vendor comments""]
        self.noouttest(command)

    def test_105_show_utvendor(self):
        command = ""show vendor --vendor utvendor""
        out = self.commandtest(command.split("" ""))
        self.matchoutput(out, ""Vendor: utvendor"", command)
        self.matchoutput(out, ""Comments: Some vendor comments"", command)

    def test_110_add_utvirt(self):
        command = [""add"", ""vendor"", ""--vendor"", ""utvirt""]
        self.noouttest(command)

    def test_200_add_existing(self):
        command = ""add vendor --vendor intel""
        out = self.badrequesttest(command.split("" ""))
        self.matchoutput(out, ""Vendor intel already exists"", command)

    def test_200_add_bad_name(self):
        command = ""add vendor --vendor oops@!""
        out = self.badrequesttest(command.split("" ""))
        self.matchoutput(out, ""'oops@!' is not a valid value for --vendor."",
                         command)

    def test_200_show_nonexistant(self):
        command = ""show vendor --vendor vendor-does-not-exist""
        self.notfoundtest(command.split("" ""))

    def test_300_show_all(self):
        command = ""show vendor --all""
        out = self.commandtest(command.split("" ""))
        self.matchoutput(out, ""Vendor: utvendor"", command)
        self.matchoutput(out, ""Vendor: intel"", command)

    def test_400_update_comments(self):
        self.noouttest([""update_vendor"", ""--vendor"", ""utvendor"",
                        ""--comments"", ""New vendor comments""])

    def test_400_verify_update(self):
        command = ""show vendor --vendor utvendor""
        out = self.commandtest(command.split("" ""))
        self.matchoutput(out, ""Vendor: utvendor"", command)
        self.matchoutput(out, ""Comments: New vendor comments"", command)

    def test_410_clear_comments(self):
        self.noouttest([""update_vendor"", ""--vendor"", ""utvendor"", ""--comments"", """"])

    def test_415_verify_comments(self):
        command = ""show vendor --vendor utvendor""
        out = self.commandtest(command.split("" ""))
        self.matchclean(out, ""Comments"", command)

if __name__ == '__main__':
    suite = unittest.TestLoader().loadTestsFromTestCase(TestAddVendor)
    unittest.TextTestRunner(verbosity=2).run(suite)
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/usr/bin/env', 'python', '#', '-*-', 'cpy-indent-level:', '4;', 'indent-tabs-mode:', 'nil', '-*-', '#', 'ex:', 'set', 'expandtab', 'softtabstop=4', 'shiftwidth=4:', '#', '#', 'Copyright', '(C)', '2009,2010,2011,2012,2013,2014,2015,2016', 'Contributor', '#', '#', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '#', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '#', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '#', '#', 'http://www.apache.org/licenses/LICENSE-2.0', '#', '#', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '#', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '#', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '#', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '#', 'limitations', 'under', 'the', 'License.', '""""""Module', 'for', 'testing', 'the', 'add', 'vendor', 'command.""""""', 'import', 'unittest', 'if', '__name__', '==', '""__main__"":', 'import', 'utils', 'utils.import_depends()', 'from', 'brokertest', 'import', 'TestBrokerCommand', 'class', 'TestAddVendor(TestBrokerCommand):', 'def', 'test_100_add_utvendor(self):', 'command', '=', '[""add"",', '""vendor"",', '""--vendor"",', '""utvendor"",', '""--comments"",', '""Some', 'vendor', 'comments""]', 'self.noouttest(command)', 'def', 'test_105_show_utvendor(self):', 'command', '=', '""show', 'vendor', '--vendor', 'utvendor""', 'out', '=', 'self.commandtest(command.split(""', '""))', 'self.matchoutput(out,', '""Vendor:', 'utvendor"",', 'command)', 'self.matchoutput(out,', '""Comments:', 'Some', 'vendor', 'comments"",', 'command)', 'def', 'test_110_add_utvirt(self):', 'command', '=', '[""add"",', '""vendor"",', '""--vendor"",', '""utvirt""]', 'self.noouttest(command)', 'def', 'test_200_add_existing(self):', 'command', '=', '""add', 'vendor', '--vendor', 'intel""', 'out', '=', 'self.badrequesttest(command.split(""', '""))', 'self.matchoutput(out,', '""Vendor', 'intel', 'already', 'exists"",', 'command)', 'def', 'test_200_add_bad_name(self):', 'command', '=', '""add', 'vendor', '--vendor', 'oops@!""', 'out', '=', 'self.badrequesttest(command.split(""', '""))', 'self.matchoutput(out,', '""\'oops@!\'', 'is', 'not', 'a', 'valid', 'value', 'for', '--vendor."",', 'command)', 'def', 'test_200_show_nonexistant(self):', 'command', '=', '""show', 'vendor', '--vendor', 'vendor-does-not-exist""', 'self.notfoundtest(command.split(""', '""))', 'def', 'test_300_show_all(self):', 'command', '=', '""show', 'vendor', '--all""', 'out', '=', 'self.commandtest(command.split(""', '""))', 'self.matchoutput(out,', '""Vendor:', 'utvendor"",', 'command)', 'self.matchoutput(out,', '""Vendor:', 'intel"",', 'command)', 'def', 'test_400_update_comments(self):', 'self.noouttest([""update_vendor"",', '""--vendor"",', '""utvendor"",', '""--comments"",', '""New', 'vendor', 'comments""])', 'def', 'test_400_verify_update(self):', 'command', '=', '""show', 'vendor', '--vendor', 'utvendor""', 'out', '=', 'self.commandtest(command.split(""', '""))', 'self.matchoutput(out,', '""Vendor:', 'utvendor"",', 'command)', 'self.matchoutput(out,', '""Comments:', 'New', 'vendor', 'comments"",', 'command)', 'def', 'test_410_clear_comments(self):', 'self.noouttest([""update_vendor"",', '""--vendor"",', '""utvendor"",', '""--comments"",', '""""])', 'def', 'test_415_verify_comments(self):', 'command', '=', '""show', 'vendor', '--vendor', 'utvendor""', 'out', '=', 'self.commandtest(command.split(""', '""))', 'self.matchclean(out,', '""Comments"",', 'command)', 'if', '__name__', '==', ""'__main__':"", 'suite', '=', 'unittest.TestLoader().loadTestsFromTestCase(TestAddVendor)', 'unittest.TextTestRunner(verbosity=2).run(suite)', '```']",challenge not surrounded by ''': ,
"/*
 * japa-eigen
 * https://github.com/japa-studios/japa-eigen
 *
 * Copyright (c) 2014 Guilherme Ando de Toledo
 * Licensed under the MIT license.
 */

'use strict';

exports.awesome = function() {
  return 'awesome';
};

exports.gyp = function(num) {
	var addon = require('../build/Release/addon');
	var obj = new addon.MyObject(num);
	return obj.plusOne();
};

exports.matrix = function(num) {
	var addon = require('../build/Release/addon');
	var obj = new addon.MyObject(num);
	return obj.matrix();
};
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'japa-eigen', '*', 'https://github.com/japa-studios/japa-eigen', '*', '*', 'Copyright', '(c)', '2014', 'Guilherme', 'Ando', 'de', 'Toledo', '*', 'Licensed', 'under', 'the', 'MIT', 'license.', '*/', ""'use"", ""strict';"", 'exports.awesome', '=', 'function()', '{', 'return', ""'awesome';"", '};', 'exports.gyp', '=', 'function(num)', '{', 'var', 'addon', '=', ""require('../build/Release/addon');"", 'var', 'obj', '=', 'new', 'addon.MyObject(num);', 'return', 'obj.plusOne();', '};', 'exports.matrix', '=', 'function(num)', '{', 'var', 'addon', '=', ""require('../build/Release/addon');"", 'var', 'obj', '=', 'new', 'addon.MyObject(num);', 'return', 'obj.matrix();', '};', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright (c) 2016 Juniper Networks, Inc. All rights reserved.
 */

#include ""config_db_client.h""

#include <boost/tokenizer.hpp>

#include ""base/string_util.h""
#include ""config_client_options.h""

using namespace std;

ConfigDbClient::ConfigDbClient(const ConfigClientOptions &options)
    : config_db_user_(options.config_db_username),
      config_db_password_(options.config_db_password) {

    for (vector<string>::const_iterator iter =
                options.config_db_server_list.begin();
         iter != options.config_db_server_list.end(); iter++) {
        string server_info(*iter);
        typedef boost::tokenizer<boost::char_separator<char> > tokenizer;
        boost::char_separator<char> sep("":"");
        tokenizer tokens(server_info, sep);
        tokenizer::iterator tit = tokens.begin();
        string ip(*tit);
        config_db_ips_.push_back(ip);
        ++tit;
        string port_str(*tit);
        int port;
        stringToInteger(port_str, port);
        config_db_ports_.push_back(port);
    }
}

ConfigDbClient::~ConfigDbClient() {
}

string ConfigDbClient::config_db_user() const {
    return config_db_user_;
}

string ConfigDbClient::config_db_password() const {
    return config_db_password_;
}

vector<string> ConfigDbClient::config_db_ips() const {
    return config_db_ips_;
}

int ConfigDbClient::GetFirstConfigDbPort() const {
    return !config_db_ports_.empty() ? config_db_ports_[0] : 0;
}

","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '(c)', '2016', 'Juniper', 'Networks,', 'Inc.', 'All', 'rights', 'reserved.', '*/', '#include', '""config_db_client.h""', '#include', '<boost/tokenizer.hpp>', '#include', '""base/string_util.h""', '#include', '""config_client_options.h""', 'using', 'namespace', 'std;', 'ConfigDbClient::ConfigDbClient(const', 'ConfigClientOptions', '&options)', ':', 'config_db_user_(options.config_db_username),', 'config_db_password_(options.config_db_password)', '{', 'for', '(vector<string>::const_iterator', 'iter', '=', 'options.config_db_server_list.begin();', 'iter', '!=', 'options.config_db_server_list.end();', 'iter++)', '{', 'string', 'server_info(*iter);', 'typedef', 'boost::tokenizer<boost::char_separator<char>', '>', 'tokenizer;', 'boost::char_separator<char>', 'sep("":"");', 'tokenizer', 'tokens(server_info,', 'sep);', 'tokenizer::iterator', 'tit', '=', 'tokens.begin();', 'string', 'ip(*tit);', 'config_db_ips_.push_back(ip);', '++tit;', 'string', 'port_str(*tit);', 'int', 'port;', 'stringToInteger(port_str,', 'port);', 'config_db_ports_.push_back(port);', '}', '}', 'ConfigDbClient::~ConfigDbClient()', '{', '}', 'string', 'ConfigDbClient::config_db_user()', 'const', '{', 'return', 'config_db_user_;', '}', 'string', 'ConfigDbClient::config_db_password()', 'const', '{', 'return', 'config_db_password_;', '}', 'vector<string>', 'ConfigDbClient::config_db_ips()', 'const', '{', 'return', 'config_db_ips_;', '}', 'int', 'ConfigDbClient::GetFirstConfigDbPort()', 'const', '{', 'return', '!config_db_ports_.empty()', '?', 'config_db_ports_[0]', ':', '0;', '}', '```']",challenge not surrounded by ''': ,
"/**
 * skylarkjs - An Elegant JavaScript Library and HTML5 Application Framework.
 * @author Hudaokeji Co.,Ltd
 * @version v0.9.8-beta
 * @link www.skylarkjs.org
 * @license MIT
 */
define([""./skylark"",""./router"",""./spa"",""./langx""],function(n){return n});
//# sourceMappingURL=sourcemaps/core.js.map
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', 'skylarkjs', '-', 'An', 'Elegant', 'JavaScript', 'Library', 'and', 'HTML5', 'Application', 'Framework.', '*', '@author', 'Hudaokeji', 'Co.,Ltd', '*', '@version', 'v0.9.8-beta', '*', '@link', 'www.skylarkjs.org', '*', '@license', 'MIT', '*/', 'define([""./skylark"",""./router"",""./spa"",""./langx""],function(n){return', 'n});', '//#', 'sourceMappingURL=sourcemaps/core.js.map', '```']",challenge not surrounded by ''': ,
"package info.u_team.u_team_core.intern.command.uteamcore;

import com.mojang.brigadier.builder.ArgumentBuilder;
import com.mojang.brigadier.exceptions.CommandSyntaxException;

import net.minecraft.commands.CommandSourceStack;
import net.minecraft.commands.Commands;
import net.minecraft.commands.SharedSuggestionProvider;
import net.minecraft.commands.arguments.ResourceLocationArgument;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.server.commands.LocateCommand;
import net.minecraft.world.level.levelgen.feature.StructureFeature;
import net.minecraftforge.registries.ForgeRegistries;

public class LocateStructureSubCommand {
	
	public static ArgumentBuilder<CommandSourceStack, ?> register() {
		return Commands.literal(""locatestructure"") //
				.requires(source -> source.hasPermission(2)) //
				.then(Commands.argument(""structure"", ResourceLocationArgument.id()) //
						.suggests((context, builder) -> SharedSuggestionProvider.suggest(ForgeRegistries.STRUCTURE_FEATURES.getKeys().stream().map(ResourceLocation::toString), builder)) //
						.executes(context -> locateStructure(context.getSource(), ForgeRegistries.STRUCTURE_FEATURES.getValue(context.getArgument(""structure"", ResourceLocation.class)))));
	}
	
	private static int locateStructure(CommandSourceStack source, StructureFeature<?> structure) throws CommandSyntaxException {
		return LocateCommand.locate(source, structure);
	}
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'info.u_team.u_team_core.intern.command.uteamcore;', 'import', 'com.mojang.brigadier.builder.ArgumentBuilder;', 'import', 'com.mojang.brigadier.exceptions.CommandSyntaxException;', 'import', 'net.minecraft.commands.CommandSourceStack;', 'import', 'net.minecraft.commands.Commands;', 'import', 'net.minecraft.commands.SharedSuggestionProvider;', 'import', 'net.minecraft.commands.arguments.ResourceLocationArgument;', 'import', 'net.minecraft.resources.ResourceLocation;', 'import', 'net.minecraft.server.commands.LocateCommand;', 'import', 'net.minecraft.world.level.levelgen.feature.StructureFeature;', 'import', 'net.minecraftforge.registries.ForgeRegistries;', 'public', 'class', 'LocateStructureSubCommand', '{', 'public', 'static', 'ArgumentBuilder<CommandSourceStack,', '?>', 'register()', '{', 'return', 'Commands.literal(""locatestructure"")', '//', '.requires(source', '->', 'source.hasPermission(2))', '//', '.then(Commands.argument(""structure"",', 'ResourceLocationArgument.id())', '//', '.suggests((context,', 'builder)', '->', 'SharedSuggestionProvider.suggest(ForgeRegistries.STRUCTURE_FEATURES.getKeys().stream().map(ResourceLocation::toString),', 'builder))', '//', '.executes(context', '->', 'locateStructure(context.getSource(),', 'ForgeRegistries.STRUCTURE_FEATURES.getValue(context.getArgument(""structure"",', 'ResourceLocation.class)))));', '}', 'private', 'static', 'int', 'locateStructure(CommandSourceStack', 'source,', 'StructureFeature<?>', 'structure)', 'throws', 'CommandSyntaxException', '{', 'return', 'LocateCommand.locate(source,', 'structure);', '}', '}', '```']",challenge not surrounded by ''': ,
"/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * ""License""); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package org.apache.wss4j.policy.tests;

import org.apache.neethi.*;
import org.apache.wss4j.policy.SP12Constants;
import org.apache.wss4j.policy.model.RelToken;
import org.junit.Test;

import java.util.Iterator;
import java.util.List;

public class RelTokenTest extends AbstractTestBase {

    @Test
    public void testRelToken() throws Exception {
        String fileName = ""RelToken.xml"";
        String policyFile = loadPolicyFile(""policy/model/sp12/"" + fileName);
        String serializedPolicyReferenceFile = loadPolicyFile(""policy/model/sp12/serialized/"" + fileName);
        String normalizedPolicyReferenceFile = loadPolicyFile(""policy/model/sp12/normalized/"" + fileName);
        Policy policy = loadPolicy(policyFile);
        String serializedPolicy = serializePolicy(policy);
        assertXMLisEqual(serializedPolicy, serializedPolicyReferenceFile);

        Iterator<List<Assertion>> alternativeIterator = policy.getAlternatives();
        int count = 0;
        while (alternativeIterator.hasNext()) {
            List<Assertion> alternative = alternativeIterator.next();
            assertEquals(1, alternative.size());
            assertTrue(alternative.get(0) instanceof RelToken);
            RelToken relToken = (RelToken) alternative.get(0);
            assertFalse(relToken.isNormalized());
            assertTrue(relToken.isIgnorable());
            assertTrue(relToken.isOptional());
            assertEquals(Constants.TYPE_ASSERTION, relToken.getType());
            assertEquals(SP12Constants.REL_TOKEN, relToken.getName());
            assertEquals(RelToken.RelTokenType.WssRelV20Token10, relToken.getRelTokenType());
            assertTrue(relToken.isRequireKeyIdentifierReference());
            count++;
        }
        assertEquals(1, count);

        policy = policy.normalize(true);
        serializedPolicy = serializePolicy(policy);
        assertXMLisEqual(serializedPolicy, normalizedPolicyReferenceFile);

        alternativeIterator = policy.getAlternatives();
        List<Assertion> alternative = alternativeIterator.next();
        assertEquals(0, alternative.size());

        List<PolicyComponent> policyComponents = policy.getPolicyComponents();
        assertEquals(1, policyComponents.size());
        PolicyOperator policyOperator = (PolicyOperator) policyComponents.get(0);
        policyComponents = policyOperator.getPolicyComponents();
        assertEquals(2, policyComponents.size());
        All all = (All) policyComponents.get(0);
        List<PolicyComponent> policyComponentsAll = all.getAssertions();
        assertEquals(0, policyComponentsAll.size());

        all = (All) policyComponents.get(1);
        policyComponentsAll = all.getAssertions();
        assertEquals(1, policyComponentsAll.size());

        Iterator<PolicyComponent> policyComponentIterator = policyComponentsAll.iterator();
        RelToken relToken = (RelToken) policyComponentIterator.next();
        assertTrue(relToken.isNormalized());
        assertTrue(relToken.isIgnorable());
        assertFalse(relToken.isOptional());
        assertEquals(Constants.TYPE_ASSERTION, relToken.getType());
        assertEquals(SP12Constants.REL_TOKEN, relToken.getName());
        assertEquals(RelToken.RelTokenType.WssRelV20Token10, relToken.getRelTokenType());
        assertTrue(relToken.isRequireKeyIdentifierReference());
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', 'Licensed', 'to', 'the', 'Apache', 'Software', 'Foundation', '(ASF)', 'under', 'one', '*', 'or', 'more', 'contributor', 'license', 'agreements.', 'See', 'the', 'NOTICE', 'file', '*', 'distributed', 'with', 'this', 'work', 'for', 'additional', 'information', '*', 'regarding', 'copyright', 'ownership.', 'The', 'ASF', 'licenses', 'this', 'file', '*', 'to', 'you', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '*', '""License"");', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', '*', 'with', 'the', 'License.', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', '*', 'software', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '*', '""AS', 'IS""', 'BASIS,', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', '*', 'KIND,', 'either', 'express', 'or', 'implied.', 'See', 'the', 'License', 'for', 'the', '*', 'specific', 'language', 'governing', 'permissions', 'and', 'limitations', '*', 'under', 'the', 'License.', '*/', 'package', 'org.apache.wss4j.policy.tests;', 'import', 'org.apache.neethi.*;', 'import', 'org.apache.wss4j.policy.SP12Constants;', 'import', 'org.apache.wss4j.policy.model.RelToken;', 'import', 'org.junit.Test;', 'import', 'java.util.Iterator;', 'import', 'java.util.List;', 'public', 'class', 'RelTokenTest', 'extends', 'AbstractTestBase', '{', '@Test', 'public', 'void', 'testRelToken()', 'throws', 'Exception', '{', 'String', 'fileName', '=', '""RelToken.xml"";', 'String', 'policyFile', '=', 'loadPolicyFile(""policy/model/sp12/""', '+', 'fileName);', 'String', 'serializedPolicyReferenceFile', '=', 'loadPolicyFile(""policy/model/sp12/serialized/""', '+', 'fileName);', 'String', 'normalizedPolicyReferenceFile', '=', 'loadPolicyFile(""policy/model/sp12/normalized/""', '+', 'fileName);', 'Policy', 'policy', '=', 'loadPolicy(policyFile);', 'String', 'serializedPolicy', '=', 'serializePolicy(policy);', 'assertXMLisEqual(serializedPolicy,', 'serializedPolicyReferenceFile);', 'Iterator<List<Assertion>>', 'alternativeIterator', '=', 'policy.getAlternatives();', 'int', 'count', '=', '0;', 'while', '(alternativeIterator.hasNext())', '{', 'List<Assertion>', 'alternative', '=', 'alternativeIterator.next();', 'assertEquals(1,', 'alternative.size());', 'assertTrue(alternative.get(0)', 'instanceof', 'RelToken);', 'RelToken', 'relToken', '=', '(RelToken)', 'alternative.get(0);', 'assertFalse(relToken.isNormalized());', 'assertTrue(relToken.isIgnorable());', 'assertTrue(relToken.isOptional());', 'assertEquals(Constants.TYPE_ASSERTION,', 'relToken.getType());', 'assertEquals(SP12Constants.REL_TOKEN,', 'relToken.getName());', 'assertEquals(RelToken.RelTokenType.WssRelV20Token10,', 'relToken.getRelTokenType());', 'assertTrue(relToken.isRequireKeyIdentifierReference());', 'count++;', '}', 'assertEquals(1,', 'count);', 'policy', '=', 'policy.normalize(true);', 'serializedPolicy', '=', 'serializePolicy(policy);', 'assertXMLisEqual(serializedPolicy,', 'normalizedPolicyReferenceFile);', 'alternativeIterator', '=', 'policy.getAlternatives();', 'List<Assertion>', 'alternative', '=', 'alternativeIterator.next();', 'assertEquals(0,', 'alternative.size());', 'List<PolicyComponent>', 'policyComponents', '=', 'policy.getPolicyComponents();', 'assertEquals(1,', 'policyComponents.size());', 'PolicyOperator', 'policyOperator', '=', '(PolicyOperator)', 'policyComponents.get(0);', 'policyComponents', '=', 'policyOperator.getPolicyComponents();', 'assertEquals(2,', 'policyComponents.size());', 'All', 'all', '=', '(All)', 'policyComponents.get(0);', 'List<PolicyComponent>', 'policyComponentsAll', '=', 'all.getAssertions();', 'assertEquals(0,', 'policyComponentsAll.size());', 'all', '=', '(All)', 'policyComponents.get(1);', 'policyComponentsAll', '=', 'all.getAssertions();', 'assertEquals(1,', 'policyComponentsAll.size());', 'Iterator<PolicyComponent>', 'policyComponentIterator', '=', 'policyComponentsAll.iterator();', 'RelToken', 'relToken', '=', '(RelToken)', 'policyComponentIterator.next();', 'assertTrue(relToken.isNormalized());', 'assertTrue(relToken.isIgnorable());', 'assertFalse(relToken.isOptional());', 'assertEquals(Constants.TYPE_ASSERTION,', 'relToken.getType());', 'assertEquals(SP12Constants.REL_TOKEN,', 'relToken.getName());', 'assertEquals(RelToken.RelTokenType.WssRelV20Token10,', 'relToken.getRelTokenType());', 'assertTrue(relToken.isRequireKeyIdentifierReference());', '}', '}', '```']",challenge not surrounded by ''': ,
"// Copyright 2011 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// Flags: --allow-natives-syntax

function store(a, x, y) {
  var f1 = 0.1 * y;
  var f2 = 0.2 * y;
  var f3 = 0.3 * y;
  var f4 = 0.4 * y;
  var f5 = 0.5 * y;
  var f6 = 0.6 * y;
  var f7 = 0.7 * y;
  var f8 = 0.8 * y;
  a[0] = x;
  var sum = (f1 + f2 + f3 + f4 + f5 + f6 + f7 + f8);
  assertEquals(1, y);
  var expected = 3.6;
  if (Math.abs(expected - sum) > 0.01) {
    assertEquals(expected, sum);
  }
}

// Generate TransitionElementsKindStub.
store([1], 1, 1);
store([1], 1.1, 1);
store([1], 1.1, 1);
%OptimizeFunctionOnNextCall(store);
// This will trap on allocation site in TransitionElementsKindStub.
store([1], 1, 1)
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//', 'Copyright', '2011', 'the', 'V8', 'project', 'authors.', 'All', 'rights', 'reserved.', '//', 'Redistribution', 'and', 'use', 'in', 'source', 'and', 'binary', 'forms,', 'with', 'or', 'without', '//', 'modification,', 'are', 'permitted', 'provided', 'that', 'the', 'following', 'conditions', 'are', '//', 'met:', '//', '//', '*', 'Redistributions', 'of', 'source', 'code', 'must', 'retain', 'the', 'above', 'copyright', '//', 'notice,', 'this', 'list', 'of', 'conditions', 'and', 'the', 'following', 'disclaimer.', '//', '*', 'Redistributions', 'in', 'binary', 'form', 'must', 'reproduce', 'the', 'above', '//', 'copyright', 'notice,', 'this', 'list', 'of', 'conditions', 'and', 'the', 'following', '//', 'disclaimer', 'in', 'the', 'documentation', 'and/or', 'other', 'materials', 'provided', '//', 'with', 'the', 'distribution.', '//', '*', 'Neither', 'the', 'name', 'of', 'Google', 'Inc.', 'nor', 'the', 'names', 'of', 'its', '//', 'contributors', 'may', 'be', 'used', 'to', 'endorse', 'or', 'promote', 'products', 'derived', '//', 'from', 'this', 'software', 'without', 'specific', 'prior', 'written', 'permission.', '//', '//', 'THIS', 'SOFTWARE', 'IS', 'PROVIDED', 'BY', 'THE', 'COPYRIGHT', 'HOLDERS', 'AND', 'CONTRIBUTORS', '//', '""AS', 'IS""', 'AND', 'ANY', 'EXPRESS', 'OR', 'IMPLIED', 'WARRANTIES,', 'INCLUDING,', 'BUT', 'NOT', '//', 'LIMITED', 'TO,', 'THE', 'IMPLIED', 'WARRANTIES', 'OF', 'MERCHANTABILITY', 'AND', 'FITNESS', 'FOR', '//', 'A', 'PARTICULAR', 'PURPOSE', 'ARE', 'DISCLAIMED.', 'IN', 'NO', 'EVENT', 'SHALL', 'THE', 'COPYRIGHT', '//', 'OWNER', 'OR', 'CONTRIBUTORS', 'BE', 'LIABLE', 'FOR', 'ANY', 'DIRECT,', 'INDIRECT,', 'INCIDENTAL,', '//', 'SPECIAL,', 'EXEMPLARY,', 'OR', 'CONSEQUENTIAL', 'DAMAGES', '(INCLUDING,', 'BUT', 'NOT', '//', 'LIMITED', 'TO,', 'PROCUREMENT', 'OF', 'SUBSTITUTE', 'GOODS', 'OR', 'SERVICES;', 'LOSS', 'OF', 'USE,', '//', 'DATA,', 'OR', 'PROFITS;', 'OR', 'BUSINESS', 'INTERRUPTION)', 'HOWEVER', 'CAUSED', 'AND', 'ON', 'ANY', '//', 'THEORY', 'OF', 'LIABILITY,', 'WHETHER', 'IN', 'CONTRACT,', 'STRICT', 'LIABILITY,', 'OR', 'TORT', '//', '(INCLUDING', 'NEGLIGENCE', 'OR', 'OTHERWISE)', 'ARISING', 'IN', 'ANY', 'WAY', 'OUT', 'OF', 'THE', 'USE', '//', 'OF', 'THIS', 'SOFTWARE,', 'EVEN', 'IF', 'ADVISED', 'OF', 'THE', 'POSSIBILITY', 'OF', 'SUCH', 'DAMAGE.', '//', '//', 'Flags:', '--allow-natives-syntax', 'function', 'store(a,', 'x,', 'y)', '{', 'var', 'f1', '=', '0.1', '*', 'y;', 'var', 'f2', '=', '0.2', '*', 'y;', 'var', 'f3', '=', '0.3', '*', 'y;', 'var', 'f4', '=', '0.4', '*', 'y;', 'var', 'f5', '=', '0.5', '*', 'y;', 'var', 'f6', '=', '0.6', '*', 'y;', 'var', 'f7', '=', '0.7', '*', 'y;', 'var', 'f8', '=', '0.8', '*', 'y;', 'a[0]', '=', 'x;', 'var', 'sum', '=', '(f1', '+', 'f2', '+', 'f3', '+', 'f4', '+', 'f5', '+', 'f6', '+', 'f7', '+', 'f8);', 'assertEquals(1,', 'y);', 'var', 'expected', '=', '3.6;', 'if', '(Math.abs(expected', '-', 'sum)', '>', '0.01)', '{', 'assertEquals(expected,', 'sum);', '}', '}', '//', 'Generate', 'TransitionElementsKindStub.', 'store([1],', '1,', '1);', 'store([1],', '1.1,', '1);', 'store([1],', '1.1,', '1);', '%OptimizeFunctionOnNextCall(store);', '//', 'This', 'will', 'trap', 'on', 'allocation', 'site', 'in', 'TransitionElementsKindStub.', 'store([1],', '1,', '1)', '```']",challenge not surrounded by ''': ,
"myApp.onPageAfterBack('editProfile', function (page) {
  $$('.toolbar').show();
});

myApp.onPageInit('editProfile', function (page) {
  $$('.toolbar').hide();
  var userData = JSON.parse(storage.getItem('user'));

  $$('#editEmail').val(userData.email);
  if(userData.birth.substring(0,4) > 1000){
    $$('#editBirth').val(userData.birth);
  }else{
    $$('#editBirth').val(serverBirth(userData.birth));
  }
  $('#editPhone').val(userData.phone).mask('+00 00 00000-0000');
  $$('#editName').val(userData.name);
  $$('#editPosition').val(userData.position);
  $$('#editProfession').val(userData.profession);

  $$('#updateProfile').on('click', function() {
    var formUser = myApp.formToData('#editProfile-form');
    if(formUser) {
      formUser.cim = userData.cim;
      formUser.type = userData.type;
      formUser.store = userData.store;
      formUser.id = userData.id;
      formUser.admin_store = userData.admin_store;
      updateProfile(JSON.stringify(formUser));
    }
    else {
      console.log(JSON.stringify(formUser));
    }
  });
});

function serverBirth(dataServer){
	return dataServer.substring(6,10) + '-' + dataServer.substring(3,5) + '-' + dataServer.substring(0,2);
}

function updateProfile(formUser){
  $$.post(apiUrl + 'user_update.php', formUser, function (data) {
    var objeto = JSON.parse(data);
    if(objeto.success == 0){
      iziToast.warning({
    		title: 'ERRO',
    		message: objeto.message,
        backgroundColor: '#EFEFEF',
        titleColor: '#F1C40F',
        timeout: 2500,
        animateInside: true,
        position: 'center'
			});
    }else{
      iziToast.success({
    		message: objeto.message,
        backgroundColor: '#EFEFEF',
        titleColor: 'blue',
        timeout: 2500,
        animateInside: true,
        position: 'center'
			});
      storage.setItem('user', formUser);
      setProfile();
      $$.getJSON(apiUrl + 'user.php', function (data) {
				storage.setItem('userAll', JSON.stringify(data));
			});
      profileView.router.back();
    }
  });
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', ""```myApp.onPageAfterBack('editProfile',"", 'function', '(page)', '{', ""$$('.toolbar').show();"", '});', ""myApp.onPageInit('editProfile',"", 'function', '(page)', '{', ""$$('.toolbar').hide();"", 'var', 'userData', '=', ""JSON.parse(storage.getItem('user'));"", ""$$('#editEmail').val(userData.email);"", 'if(userData.birth.substring(0,4)', '>', '1000){', ""$$('#editBirth').val(userData.birth);"", '}else{', ""$$('#editBirth').val(serverBirth(userData.birth));"", '}', ""$('#editPhone').val(userData.phone).mask('+00"", '00', ""00000-0000');"", ""$$('#editName').val(userData.name);"", ""$$('#editPosition').val(userData.position);"", ""$$('#editProfession').val(userData.profession);"", ""$$('#updateProfile').on('click',"", 'function()', '{', 'var', 'formUser', '=', ""myApp.formToData('#editProfile-form');"", 'if(formUser)', '{', 'formUser.cim', '=', 'userData.cim;', 'formUser.type', '=', 'userData.type;', 'formUser.store', '=', 'userData.store;', 'formUser.id', '=', 'userData.id;', 'formUser.admin_store', '=', 'userData.admin_store;', 'updateProfile(JSON.stringify(formUser));', '}', 'else', '{', 'console.log(JSON.stringify(formUser));', '}', '});', '});', 'function', 'serverBirth(dataServer){', 'return', 'dataServer.substring(6,10)', '+', ""'-'"", '+', 'dataServer.substring(3,5)', '+', ""'-'"", '+', 'dataServer.substring(0,2);', '}', 'function', 'updateProfile(formUser){', '$$.post(apiUrl', '+', ""'user_update.php',"", 'formUser,', 'function', '(data)', '{', 'var', 'objeto', '=', 'JSON.parse(data);', 'if(objeto.success', '==', '0){', 'iziToast.warning({', 'title:', ""'ERRO',"", 'message:', 'objeto.message,', 'backgroundColor:', ""'#EFEFEF',"", 'titleColor:', ""'#F1C40F',"", 'timeout:', '2500,', 'animateInside:', 'true,', 'position:', ""'center'"", '});', '}else{', 'iziToast.success({', 'message:', 'objeto.message,', 'backgroundColor:', ""'#EFEFEF',"", 'titleColor:', ""'blue',"", 'timeout:', '2500,', 'animateInside:', 'true,', 'position:', ""'center'"", '});', ""storage.setItem('user',"", 'formUser);', 'setProfile();', '$$.getJSON(apiUrl', '+', ""'user.php',"", 'function', '(data)', '{', ""storage.setItem('userAll',"", 'JSON.stringify(data));', '});', 'profileView.router.back();', '}', '});', '}', '```']",challenge not surrounded by ''': ,
"# -*- coding: utf-8 -*-
##############################################################################
#
#    Copyright (c) 2017 Praxya (http://praxya.com/)
#                       Daniel Rodriguez Lijo <drl.9319@gmail.com>
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as published
#    by the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
##############################################################################
from openerp import models, fields


class L10nEsVatBookReceivedLines(models.Model):
    _inherit = 'l10n.es.vat.book.issued.lines'
    _name = 'l10n.es.vat.book.received.lines'
    _order = 'invoice_id desc'

    tax_lines_received_ids = fields.One2many(
        comodel_name='l10n.es.vat.book.invoice.tax.lines',
        inverse_name='received_invoice_line_id',
        string=""Tax Lines"")
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', '-*-', 'coding:', 'utf-8', '-*-', '##############################################################################', '#', '#', 'Copyright', '(c)', '2017', 'Praxya', '(http://praxya.com/)', '#', 'Daniel', 'Rodriguez', 'Lijo', '<drl.9319@gmail.com>', '#', '#', 'This', 'program', 'is', 'free', 'software:', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', '#', 'it', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'Affero', 'General', 'Public', 'License', 'as', 'published', '#', 'by', 'the', 'Free', 'Software', 'Foundation,', 'either', 'version', '3', 'of', 'the', 'License,', 'or', '#', '(at', 'your', 'option)', 'any', 'later', 'version.', '#', '#', 'This', 'program', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', '#', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', '#', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', '#', 'GNU', 'Affero', 'General', 'Public', 'License', 'for', 'more', 'details.', '#', '#', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'Affero', 'General', 'Public', 'License', '#', 'along', 'with', 'this', 'program.', 'If', 'not,', 'see', '<http://www.gnu.org/licenses/>.', '#', '##############################################################################', 'from', 'openerp', 'import', 'models,', 'fields', 'class', 'L10nEsVatBookReceivedLines(models.Model):', '_inherit', '=', ""'l10n.es.vat.book.issued.lines'"", '_name', '=', ""'l10n.es.vat.book.received.lines'"", '_order', '=', ""'invoice_id"", ""desc'"", 'tax_lines_received_ids', '=', 'fields.One2many(', ""comodel_name='l10n.es.vat.book.invoice.tax.lines',"", ""inverse_name='received_invoice_line_id',"", 'string=""Tax', 'Lines"")', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright 2014-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the ""License""). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 * 
 * http://aws.amazon.com/apache2.0
 * 
 * or in the ""license"" file accompanying this file. This file is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */
package com.amazonaws.services.ec2.model;

import java.io.Serializable;
import javax.annotation.Generated;

import com.amazonaws.AmazonWebServiceResult;

/**
 * 
 */
@Generated(""com.amazonaws:aws-java-sdk-code-generator"")
public class DisassociateRouteTableResult extends com.amazonaws.AmazonWebServiceResult<com.amazonaws.ResponseMetadata> implements Serializable, Cloneable {

    /**
     * Returns a string representation of this object. This is useful for testing and debugging. Sensitive data will be
     * redacted from this string using a placeholder value.
     *
     * @return A string representation of this object.
     *
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(""{"");
        sb.append(""}"");
        return sb.toString();
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;

        if (obj instanceof DisassociateRouteTableResult == false)
            return false;
        DisassociateRouteTableResult other = (DisassociateRouteTableResult) obj;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int hashCode = 1;

        return hashCode;
    }

    @Override
    public DisassociateRouteTableResult clone() {
        try {
            return (DisassociateRouteTableResult) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new IllegalStateException(""Got a CloneNotSupportedException from Object.clone() "" + ""even though we're Cloneable!"", e);
        }
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '2014-2019', 'Amazon.com,', 'Inc.', 'or', 'its', 'affiliates.', 'All', 'Rights', 'Reserved.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"").', 'You', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', '*', 'the', 'License.', 'A', 'copy', 'of', 'the', 'License', 'is', 'located', 'at', '*', '*', 'http://aws.amazon.com/apache2.0', '*', '*', 'or', 'in', 'the', '""license""', 'file', 'accompanying', 'this', 'file.', 'This', 'file', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', 'WITHOUT', 'WARRANTIES', 'OR', '*', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', '*', 'and', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'com.amazonaws.services.ec2.model;', 'import', 'java.io.Serializable;', 'import', 'javax.annotation.Generated;', 'import', 'com.amazonaws.AmazonWebServiceResult;', '/**', '*', '*/', '@Generated(""com.amazonaws:aws-java-sdk-code-generator"")', 'public', 'class', 'DisassociateRouteTableResult', 'extends', 'com.amazonaws.AmazonWebServiceResult<com.amazonaws.ResponseMetadata>', 'implements', 'Serializable,', 'Cloneable', '{', '/**', '*', 'Returns', 'a', 'string', 'representation', 'of', 'this', 'object.', 'This', 'is', 'useful', 'for', 'testing', 'and', 'debugging.', 'Sensitive', 'data', 'will', 'be', '*', 'redacted', 'from', 'this', 'string', 'using', 'a', 'placeholder', 'value.', '*', '*', '@return', 'A', 'string', 'representation', 'of', 'this', 'object.', '*', '*', '@see', 'java.lang.Object#toString()', '*/', '@Override', 'public', 'String', 'toString()', '{', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder();', 'sb.append(""{"");', 'sb.append(""}"");', 'return', 'sb.toString();', '}', '@Override', 'public', 'boolean', 'equals(Object', 'obj)', '{', 'if', '(this', '==', 'obj)', 'return', 'true;', 'if', '(obj', '==', 'null)', 'return', 'false;', 'if', '(obj', 'instanceof', 'DisassociateRouteTableResult', '==', 'false)', 'return', 'false;', 'DisassociateRouteTableResult', 'other', '=', '(DisassociateRouteTableResult)', 'obj;', 'return', 'true;', '}', '@Override', 'public', 'int', 'hashCode()', '{', 'final', 'int', 'prime', '=', '31;', 'int', 'hashCode', '=', '1;', 'return', 'hashCode;', '}', '@Override', 'public', 'DisassociateRouteTableResult', 'clone()', '{', 'try', '{', 'return', '(DisassociateRouteTableResult)', 'super.clone();', '}', 'catch', '(CloneNotSupportedException', 'e)', '{', 'throw', 'new', 'IllegalStateException(""Got', 'a', 'CloneNotSupportedException', 'from', 'Object.clone()', '""', '+', '""even', 'though', ""we're"", 'Cloneable!"",', 'e);', '}', '}', '}', '```']",challenge not surrounded by ''': ,
"/**
 * Copyright 2016 Nikita Koksharov
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.redisson.config;

/**
 * 
 * @author Nikita Koksharov
 *
 */
public enum ReadMode {

    /**
     * Read from slave nodes
     */
    SLAVE,

    /**
     * Read from master node
     */
    MASTER,

    /**
     * Read from master and slave nodes
     */
    MASTER_SLAVE,

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', 'Copyright', '2016', 'Nikita', 'Koksharov', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'org.redisson.config;', '/**', '*', '*', '@author', 'Nikita', 'Koksharov', '*', '*/', 'public', 'enum', 'ReadMode', '{', '/**', '*', 'Read', 'from', 'slave', 'nodes', '*/', 'SLAVE,', '/**', '*', 'Read', 'from', 'master', 'node', '*/', 'MASTER,', '/**', '*', 'Read', 'from', 'master', 'and', 'slave', 'nodes', '*/', 'MASTER_SLAVE,', '}', '```']",challenge not surrounded by ''': ,
"package com.klogicapps.tv.misc;

import android.os.Handler;
import android.os.Looper;
import android.view.View;
import android.view.animation.AnimationUtils;
import android.widget.AbsListView;

public class ScrollTriggeredAnimator {
  private final Handler mHandler = new Handler(Looper.getMainLooper());
  private int mInDuration;
  private int mOutDuration;
  private View mAnimationTarget;
  private boolean mGlowing = false;
  private final Runnable mBackgroundDimmerFadeRunnable = new Runnable() {
    @Override
    public void run() {
      mGlowing = false;
      mAnimationTarget.animate().setDuration(mOutDuration).alpha(1);
    }
  };

  public ScrollTriggeredAnimator(AbsListView absListView, View animationTarget) {
    super();

    mAnimationTarget = animationTarget;

    int scrollBarPanelFadeDuration = 250; // ViewConfiguration.getScrollBarFadeDuration();
    mInDuration = scrollBarPanelFadeDuration;
    mOutDuration = scrollBarPanelFadeDuration * 4;

    absListView.setOnScrollListener(setupListener());
  }

  private AbsListView.OnScrollListener setupListener() {
    // listen for scroll, animate glow effect
    AbsListView.OnScrollListener listener = new AbsListView.OnScrollListener() {

      @Override
      public void onScrollStateChanged(AbsListView view, int scrollState) {
        switch (scrollState) {
          case SCROLL_STATE_IDLE:
            if (mGlowing) {
              mHandler.removeCallbacks(mBackgroundDimmerFadeRunnable);
              mHandler.postAtTime(mBackgroundDimmerFadeRunnable, AnimationUtils.currentAnimationTimeMillis());
            }
            break;
          case SCROLL_STATE_TOUCH_SCROLL:
            // kill any animation waiting to happen
            mHandler.removeCallbacks(mBackgroundDimmerFadeRunnable);

            // make it glow bright
            if (!mGlowing) {
              mGlowing = true;
              mAnimationTarget.animate().setDuration(mInDuration).alpha(0);
            }

            break;
          case SCROLL_STATE_FLING:
            break;
          default:
            break;
        }
      }

      @Override
      public void onScroll(AbsListView view, int firstVisibleItem, int visibleItemCount, int totalItemCount) {
      }
    };

    return listener;
  }
}


","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.klogicapps.tv.misc;', 'import', 'android.os.Handler;', 'import', 'android.os.Looper;', 'import', 'android.view.View;', 'import', 'android.view.animation.AnimationUtils;', 'import', 'android.widget.AbsListView;', 'public', 'class', 'ScrollTriggeredAnimator', '{', 'private', 'final', 'Handler', 'mHandler', '=', 'new', 'Handler(Looper.getMainLooper());', 'private', 'int', 'mInDuration;', 'private', 'int', 'mOutDuration;', 'private', 'View', 'mAnimationTarget;', 'private', 'boolean', 'mGlowing', '=', 'false;', 'private', 'final', 'Runnable', 'mBackgroundDimmerFadeRunnable', '=', 'new', 'Runnable()', '{', '@Override', 'public', 'void', 'run()', '{', 'mGlowing', '=', 'false;', 'mAnimationTarget.animate().setDuration(mOutDuration).alpha(1);', '}', '};', 'public', 'ScrollTriggeredAnimator(AbsListView', 'absListView,', 'View', 'animationTarget)', '{', 'super();', 'mAnimationTarget', '=', 'animationTarget;', 'int', 'scrollBarPanelFadeDuration', '=', '250;', '//', 'ViewConfiguration.getScrollBarFadeDuration();', 'mInDuration', '=', 'scrollBarPanelFadeDuration;', 'mOutDuration', '=', 'scrollBarPanelFadeDuration', '*', '4;', 'absListView.setOnScrollListener(setupListener());', '}', 'private', 'AbsListView.OnScrollListener', 'setupListener()', '{', '//', 'listen', 'for', 'scroll,', 'animate', 'glow', 'effect', 'AbsListView.OnScrollListener', 'listener', '=', 'new', 'AbsListView.OnScrollListener()', '{', '@Override', 'public', 'void', 'onScrollStateChanged(AbsListView', 'view,', 'int', 'scrollState)', '{', 'switch', '(scrollState)', '{', 'case', 'SCROLL_STATE_IDLE:', 'if', '(mGlowing)', '{', 'mHandler.removeCallbacks(mBackgroundDimmerFadeRunnable);', 'mHandler.postAtTime(mBackgroundDimmerFadeRunnable,', 'AnimationUtils.currentAnimationTimeMillis());', '}', 'break;', 'case', 'SCROLL_STATE_TOUCH_SCROLL:', '//', 'kill', 'any', 'animation', 'waiting', 'to', 'happen', 'mHandler.removeCallbacks(mBackgroundDimmerFadeRunnable);', '//', 'make', 'it', 'glow', 'bright', 'if', '(!mGlowing)', '{', 'mGlowing', '=', 'true;', 'mAnimationTarget.animate().setDuration(mInDuration).alpha(0);', '}', 'break;', 'case', 'SCROLL_STATE_FLING:', 'break;', 'default:', 'break;', '}', '}', '@Override', 'public', 'void', 'onScroll(AbsListView', 'view,', 'int', 'firstVisibleItem,', 'int', 'visibleItemCount,', 'int', 'totalItemCount)', '{', '}', '};', 'return', 'listener;', '}', '}', '```']",challenge not surrounded by ''': ,
"/*
 * Licensed to Crate.io GmbH (""Crate"") under one or more contributor
 * license agreements.  See the NOTICE file distributed with this work for
 * additional information regarding copyright ownership.  Crate licenses
 * this file to you under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.  You may
 * obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations
 * under the License.
 *
 * However, if you have executed another commercial license agreement
 * with Crate these terms will supersede the license and you may use the
 * software solely pursuant to the terms of the relevant commercial agreement.
 */

package io.crate.execution.engine.export;

import com.fasterxml.jackson.core.JsonGenerator;
import io.crate.metadata.ColumnIdent;
import org.elasticsearch.test.ESTestCase;
import org.elasticsearch.common.xcontent.XContentBuilder;
import org.junit.Test;

import java.io.FileOutputStream;
import java.io.OutputStream;
import java.nio.file.Path;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

import static org.hamcrest.core.Is.is;

public class FileWriterCountCollectorTest extends ESTestCase {

    @Test
    public void testToNestedStringObjectMap() {
        Map<ColumnIdent, Object> columnIdentMap = new HashMap<>();
        columnIdentMap.put(new ColumnIdent(""some"", Arrays.asList(""nested"", ""column"")), ""foo"");
        Map<String, Object> convertedMap = FileWriterCountCollector.toNestedStringObjectMap(columnIdentMap);

        Map someMap = (Map) convertedMap.get(""some"");
        Map nestedMap = (Map) someMap.get(""nested"");
        assertThat(nestedMap.get(""column""), is(""foo""));
    }

    @Test
    public void testJsonBuilderDoesNotPassFlushToStream() throws Exception {
        Path file = createTempFile(""out"", ""json"");
        try (OutputStream os = new FileOutputStream(file.toFile())) {
            XContentBuilder xContentBuilder = FileWriterCountCollector.createJsonBuilder(os);
            assertThat(xContentBuilder.generator().isEnabled(JsonGenerator.Feature.FLUSH_PASSED_TO_STREAM),
                is(false));
        }
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Licensed', 'to', 'Crate.io', 'GmbH', '(""Crate"")', 'under', 'one', 'or', 'more', 'contributor', '*', 'license', 'agreements.', 'See', 'the', 'NOTICE', 'file', 'distributed', 'with', 'this', 'work', 'for', '*', 'additional', 'information', 'regarding', 'copyright', 'ownership.', 'Crate', 'licenses', '*', 'this', 'file', 'to', 'you', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', 'You', 'may', '*', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', 'WITHOUT', '*', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', 'See', 'the', '*', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', 'limitations', '*', 'under', 'the', 'License.', '*', '*', 'However,', 'if', 'you', 'have', 'executed', 'another', 'commercial', 'license', 'agreement', '*', 'with', 'Crate', 'these', 'terms', 'will', 'supersede', 'the', 'license', 'and', 'you', 'may', 'use', 'the', '*', 'software', 'solely', 'pursuant', 'to', 'the', 'terms', 'of', 'the', 'relevant', 'commercial', 'agreement.', '*/', 'package', 'io.crate.execution.engine.export;', 'import', 'com.fasterxml.jackson.core.JsonGenerator;', 'import', 'io.crate.metadata.ColumnIdent;', 'import', 'org.elasticsearch.test.ESTestCase;', 'import', 'org.elasticsearch.common.xcontent.XContentBuilder;', 'import', 'org.junit.Test;', 'import', 'java.io.FileOutputStream;', 'import', 'java.io.OutputStream;', 'import', 'java.nio.file.Path;', 'import', 'java.util.Arrays;', 'import', 'java.util.HashMap;', 'import', 'java.util.Map;', 'import', 'static', 'org.hamcrest.core.Is.is;', 'public', 'class', 'FileWriterCountCollectorTest', 'extends', 'ESTestCase', '{', '@Test', 'public', 'void', 'testToNestedStringObjectMap()', '{', 'Map<ColumnIdent,', 'Object>', 'columnIdentMap', '=', 'new', 'HashMap<>();', 'columnIdentMap.put(new', 'ColumnIdent(""some"",', 'Arrays.asList(""nested"",', '""column"")),', '""foo"");', 'Map<String,', 'Object>', 'convertedMap', '=', 'FileWriterCountCollector.toNestedStringObjectMap(columnIdentMap);', 'Map', 'someMap', '=', '(Map)', 'convertedMap.get(""some"");', 'Map', 'nestedMap', '=', '(Map)', 'someMap.get(""nested"");', 'assertThat(nestedMap.get(""column""),', 'is(""foo""));', '}', '@Test', 'public', 'void', 'testJsonBuilderDoesNotPassFlushToStream()', 'throws', 'Exception', '{', 'Path', 'file', '=', 'createTempFile(""out"",', '""json"");', 'try', '(OutputStream', 'os', '=', 'new', 'FileOutputStream(file.toFile()))', '{', 'XContentBuilder', 'xContentBuilder', '=', 'FileWriterCountCollector.createJsonBuilder(os);', 'assertThat(xContentBuilder.generator().isEnabled(JsonGenerator.Feature.FLUSH_PASSED_TO_STREAM),', 'is(false));', '}', '}', '}', '```']",challenge not surrounded by ''': ,
"package com.searchbox.framework.util;

import org.springframework.beans.BeansException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.context.ApplicationContextAware;
import org.springframework.stereotype.Component;

@Component
public class ContextUtil implements ApplicationContextAware {

  @Autowired
  public static ApplicationContext context;

  @Override
  public void setApplicationContext(ApplicationContext applicationContext)
      throws BeansException {
    context = applicationContext;
  }

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.searchbox.framework.util;', 'import', 'org.springframework.beans.BeansException;', 'import', 'org.springframework.beans.factory.annotation.Autowired;', 'import', 'org.springframework.context.ApplicationContext;', 'import', 'org.springframework.context.ApplicationContextAware;', 'import', 'org.springframework.stereotype.Component;', '@Component', 'public', 'class', 'ContextUtil', 'implements', 'ApplicationContextAware', '{', '@Autowired', 'public', 'static', 'ApplicationContext', 'context;', '@Override', 'public', 'void', 'setApplicationContext(ApplicationContext', 'applicationContext)', 'throws', 'BeansException', '{', 'context', '=', 'applicationContext;', '}', '}', '```']",challenge not surrounded by ''': ,
"'use strict';

const fs = require('fs');
const axios = require('axios');
const template = fs.readFileSync('./templates/giphy-responder.html', { encoding: 'utf8' });

const Fuse = require('../lib/');
const port = process.env.PORT || 3000;

const fuse = Fuse({
  email_key: YOUR_SPARKPOST_KEY,
  domain: YOUR_DOMAIN,
  name: 'Gif me', 
  sending_address: 'gifme@sendmailfor.me',
  inbound_address: 'gifme@sendmailfor.me'
});

fuse.setupTransport(function() {
  fuse.setupServer(port, function(err, server) {
    fuse.setupEndpoint(server);
  });
});

fuse.on('email_received', function(responder, inboundMessage) {
  getGifs(inboundMessage.subject, (err, gifs) => {
    if (err) {
      return;
    }

    responder.reply({
      html: template,
      text: 'HTML is required',
      substitution_data: {
        search: inboundMessage.subject,
        gifs: gifs
      },
    });
  });
});

function getGifs(q, callback) {
  axios.get('http://api.giphy.com/v1/gifs/search', {
    params: {
      api_key: 'dc6zaTOxFJmzC',
      q: q,
      rating: 'pg',
      limit: 5
    }
  })
  .then((response) => {
    let data = response.data.data;
    let gifs = [];
    
    for (let i = 0; i < data.length; i++) {
      gifs.push({
        src: data[i].images.fixed_height_small.url,
        url: data[i].url
      });
    }

    callback(null, gifs);
  })
  .catch(err => {
    callback(err);
  });
}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', ""```'use"", ""strict';"", 'const', 'fs', '=', ""require('fs');"", 'const', 'axios', '=', ""require('axios');"", 'const', 'template', '=', ""fs.readFileSync('./templates/giphy-responder.html',"", '{', 'encoding:', ""'utf8'"", '});', 'const', 'Fuse', '=', ""require('../lib/');"", 'const', 'port', '=', 'process.env.PORT', '||', '3000;', 'const', 'fuse', '=', 'Fuse({', 'email_key:', 'YOUR_SPARKPOST_KEY,', 'domain:', 'YOUR_DOMAIN,', 'name:', ""'Gif"", ""me',"", 'sending_address:', ""'gifme@sendmailfor.me',"", 'inbound_address:', ""'gifme@sendmailfor.me'"", '});', 'fuse.setupTransport(function()', '{', 'fuse.setupServer(port,', 'function(err,', 'server)', '{', 'fuse.setupEndpoint(server);', '});', '});', ""fuse.on('email_received',"", 'function(responder,', 'inboundMessage)', '{', 'getGifs(inboundMessage.subject,', '(err,', 'gifs)', '=>', '{', 'if', '(err)', '{', 'return;', '}', 'responder.reply({', 'html:', 'template,', 'text:', ""'HTML"", 'is', ""required',"", 'substitution_data:', '{', 'search:', 'inboundMessage.subject,', 'gifs:', 'gifs', '},', '});', '});', '});', 'function', 'getGifs(q,', 'callback)', '{', ""axios.get('http://api.giphy.com/v1/gifs/search',"", '{', 'params:', '{', 'api_key:', ""'dc6zaTOxFJmzC',"", 'q:', 'q,', 'rating:', ""'pg',"", 'limit:', '5', '}', '})', '.then((response)', '=>', '{', 'let', 'data', '=', 'response.data.data;', 'let', 'gifs', '=', '[];', 'for', '(let', 'i', '=', '0;', 'i', '<', 'data.length;', 'i++)', '{', 'gifs.push({', 'src:', 'data[i].images.fixed_height_small.url,', 'url:', 'data[i].url', '});', '}', 'callback(null,', 'gifs);', '})', '.catch(err', '=>', '{', 'callback(err);', '});', '}```']",challenge not surrounded by ''': ,
"/*
 * Copyright 2004 - 2009 University of Cardiff.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.trianacode.taskgraph.interceptor;

import org.trianacode.taskgraph.Node;

/**
 * Interceptors are given a crack at looking at data before sending from a node, and before receiving. They get called
 * at the cable level.
 * <p/>
 * Interceptors are triggered based on parameters
 *
 * @author Andrew Harrison
 * @version $Revision:$
 */
public interface Interceptor {

    public String getName();

    public boolean canMediate(Node sendNode, Node receiveNode);

    public Object interceptSend(Node sendNode, Node receiveNode, Object data);

    public Object interceptReceive(Node sendNode, Node receiveNode, Object data);

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '2004', '-', '2009', 'University', 'of', 'Cardiff.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'org.trianacode.taskgraph.interceptor;', 'import', 'org.trianacode.taskgraph.Node;', '/**', '*', 'Interceptors', 'are', 'given', 'a', 'crack', 'at', 'looking', 'at', 'data', 'before', 'sending', 'from', 'a', 'node,', 'and', 'before', 'receiving.', 'They', 'get', 'called', '*', 'at', 'the', 'cable', 'level.', '*', '<p/>', '*', 'Interceptors', 'are', 'triggered', 'based', 'on', 'parameters', '*', '*', '@author', 'Andrew', 'Harrison', '*', '@version', '$Revision:$', '*/', 'public', 'interface', 'Interceptor', '{', 'public', 'String', 'getName();', 'public', 'boolean', 'canMediate(Node', 'sendNode,', 'Node', 'receiveNode);', 'public', 'Object', 'interceptSend(Node', 'sendNode,', 'Node', 'receiveNode,', 'Object', 'data);', 'public', 'Object', 'interceptReceive(Node', 'sendNode,', 'Node', 'receiveNode,', 'Object', 'data);', '}', '```']",challenge not surrounded by ''': ,
"/*************************************************************************/
/*  multimesh_instance.cpp                                               */
/*************************************************************************/
/*                       This file is part of:                           */
/*                           GODOT ENGINE                                */
/*                      https://godotengine.org                          */
/*************************************************************************/
/* Copyright (c) 2007-2019 Juan Linietsky, Ariel Manzur.                 */
/* Copyright (c) 2014-2019 Godot Engine contributors (cf. AUTHORS.md)    */
/*                                                                       */
/* Permission is hereby granted, free of charge, to any person obtaining */
/* a copy of this software and associated documentation files (the       */
/* ""Software""), to deal in the Software without restriction, including   */
/* without limitation the rights to use, copy, modify, merge, publish,   */
/* distribute, sublicense, and/or sell copies of the Software, and to    */
/* permit persons to whom the Software is furnished to do so, subject to */
/* the following conditions:                                             */
/*                                                                       */
/* The above copyright notice and this permission notice shall be        */
/* included in all copies or substantial portions of the Software.       */
/*                                                                       */
/* THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,       */
/* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF    */
/* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.*/
/* IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY  */
/* CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,  */
/* TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE     */
/* SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.                */
/*************************************************************************/

#include ""multimesh_instance.h""

void MultiMeshInstance::_bind_methods() {

	ClassDB::bind_method(D_METHOD(""set_multimesh"", ""multimesh""), &MultiMeshInstance::set_multimesh);
	ClassDB::bind_method(D_METHOD(""get_multimesh""), &MultiMeshInstance::get_multimesh);
	ADD_PROPERTY(PropertyInfo(Variant::OBJECT, ""multimesh"", PROPERTY_HINT_RESOURCE_TYPE, ""MultiMesh""), ""set_multimesh"", ""get_multimesh"");
}

void MultiMeshInstance::set_multimesh(const Ref<MultiMesh> &p_multimesh) {

	multimesh = p_multimesh;
	if (multimesh.is_valid())
		set_base(multimesh->get_rid());
	else
		set_base(RID());
}

Ref<MultiMesh> MultiMeshInstance::get_multimesh() const {

	return multimesh;
}

PoolVector<Face3> MultiMeshInstance::get_faces(uint32_t p_usage_flags) const {

	return PoolVector<Face3>();
}

AABB MultiMeshInstance::get_aabb() const {

	if (multimesh.is_null())
		return AABB();
	else
		return multimesh->get_aabb();
}

MultiMeshInstance::MultiMeshInstance() {
}

MultiMeshInstance::~MultiMeshInstance() {
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*************************************************************************/', '/*', 'multimesh_instance.cpp', '*/', '/*************************************************************************/', '/*', 'This', 'file', 'is', 'part', 'of:', '*/', '/*', 'GODOT', 'ENGINE', '*/', '/*', 'https://godotengine.org', '*/', '/*************************************************************************/', '/*', 'Copyright', '(c)', '2007-2019', 'Juan', 'Linietsky,', 'Ariel', 'Manzur.', '*/', '/*', 'Copyright', '(c)', '2014-2019', 'Godot', 'Engine', 'contributors', '(cf.', 'AUTHORS.md)', '*/', '/*', '*/', '/*', 'Permission', 'is', 'hereby', 'granted,', 'free', 'of', 'charge,', 'to', 'any', 'person', 'obtaining', '*/', '/*', 'a', 'copy', 'of', 'this', 'software', 'and', 'associated', 'documentation', 'files', '(the', '*/', '/*', '""Software""),', 'to', 'deal', 'in', 'the', 'Software', 'without', 'restriction,', 'including', '*/', '/*', 'without', 'limitation', 'the', 'rights', 'to', 'use,', 'copy,', 'modify,', 'merge,', 'publish,', '*/', '/*', 'distribute,', 'sublicense,', 'and/or', 'sell', 'copies', 'of', 'the', 'Software,', 'and', 'to', '*/', '/*', 'permit', 'persons', 'to', 'whom', 'the', 'Software', 'is', 'furnished', 'to', 'do', 'so,', 'subject', 'to', '*/', '/*', 'the', 'following', 'conditions:', '*/', '/*', '*/', '/*', 'The', 'above', 'copyright', 'notice', 'and', 'this', 'permission', 'notice', 'shall', 'be', '*/', '/*', 'included', 'in', 'all', 'copies', 'or', 'substantial', 'portions', 'of', 'the', 'Software.', '*/', '/*', '*/', '/*', 'THE', 'SOFTWARE', 'IS', 'PROVIDED', '""AS', 'IS"",', 'WITHOUT', 'WARRANTY', 'OF', 'ANY', 'KIND,', '*/', '/*', 'EXPRESS', 'OR', 'IMPLIED,', 'INCLUDING', 'BUT', 'NOT', 'LIMITED', 'TO', 'THE', 'WARRANTIES', 'OF', '*/', '/*', 'MERCHANTABILITY,', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE', 'AND', 'NONINFRINGEMENT.*/', '/*', 'IN', 'NO', 'EVENT', 'SHALL', 'THE', 'AUTHORS', 'OR', 'COPYRIGHT', 'HOLDERS', 'BE', 'LIABLE', 'FOR', 'ANY', '*/', '/*', 'CLAIM,', 'DAMAGES', 'OR', 'OTHER', 'LIABILITY,', 'WHETHER', 'IN', 'AN', 'ACTION', 'OF', 'CONTRACT,', '*/', '/*', 'TORT', 'OR', 'OTHERWISE,', 'ARISING', 'FROM,', 'OUT', 'OF', 'OR', 'IN', 'CONNECTION', 'WITH', 'THE', '*/', '/*', 'SOFTWARE', 'OR', 'THE', 'USE', 'OR', 'OTHER', 'DEALINGS', 'IN', 'THE', 'SOFTWARE.', '*/', '/*************************************************************************/', '#include', '""multimesh_instance.h""', 'void', 'MultiMeshInstance::_bind_methods()', '{', 'ClassDB::bind_method(D_METHOD(""set_multimesh"",', '""multimesh""),', '&MultiMeshInstance::set_multimesh);', 'ClassDB::bind_method(D_METHOD(""get_multimesh""),', '&MultiMeshInstance::get_multimesh);', 'ADD_PROPERTY(PropertyInfo(Variant::OBJECT,', '""multimesh"",', 'PROPERTY_HINT_RESOURCE_TYPE,', '""MultiMesh""),', '""set_multimesh"",', '""get_multimesh"");', '}', 'void', 'MultiMeshInstance::set_multimesh(const', 'Ref<MultiMesh>', '&p_multimesh)', '{', 'multimesh', '=', 'p_multimesh;', 'if', '(multimesh.is_valid())', 'set_base(multimesh->get_rid());', 'else', 'set_base(RID());', '}', 'Ref<MultiMesh>', 'MultiMeshInstance::get_multimesh()', 'const', '{', 'return', 'multimesh;', '}', 'PoolVector<Face3>', 'MultiMeshInstance::get_faces(uint32_t', 'p_usage_flags)', 'const', '{', 'return', 'PoolVector<Face3>();', '}', 'AABB', 'MultiMeshInstance::get_aabb()', 'const', '{', 'if', '(multimesh.is_null())', 'return', 'AABB();', 'else', 'return', 'multimesh->get_aabb();', '}', 'MultiMeshInstance::MultiMeshInstance()', '{', '}', 'MultiMeshInstance::~MultiMeshInstance()', '{', '}', '```']",challenge not surrounded by ''': ,
"/*
  Copyright

  (c) Copyright 2009 President and Fellows of Harvard College

  This file is part of the SciGPU-GEMM Library

  SciGPU-GEMM is free software: you can redistribute it and/or modify
  it under the terms of the GNU Lesser General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  SciGPU-GEMM is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public License
  along with SciGPU-GEMM.  If not, see <http://www.gnu.org/licenses/>.
*/


/*! \file
  File to contain simple CUDA error checking macros.
  Taken from the CUDA SDK
*/


#ifndef CUDACHECK_H
#define CUDACHECK_H

#include <cstdlib>
#include <cstdio>

#define CUDA_SAFE_CALL( call ) do {					\
  cudaError err = call;							\
  if( cudaSuccess != err ) {						\
  fprintf( stderr, ""CUDA Error in file '%s' on line %i : %s.\n"",	\
	   __FILE__, __LINE__, cudaGetErrorString( err ) );		\
  exit( EXIT_FAILURE );							\
  } } while( 0 );

#endif
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', 'Copyright', '(c)', 'Copyright', '2009', 'President', 'and', 'Fellows', 'of', 'Harvard', 'College', 'This', 'file', 'is', 'part', 'of', 'the', 'SciGPU-GEMM', 'Library', 'SciGPU-GEMM', 'is', 'free', 'software:', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', 'it', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'Lesser', 'General', 'Public', 'License', 'as', 'published', 'by', 'the', 'Free', 'Software', 'Foundation,', 'either', 'version', '3', 'of', 'the', 'License,', 'or', '(at', 'your', 'option)', 'any', 'later', 'version.', 'SciGPU-GEMM', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', 'GNU', 'Lesser', 'General', 'Public', 'License', 'for', 'more', 'details.', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'Lesser', 'General', 'Public', 'License', 'along', 'with', 'SciGPU-GEMM.', 'If', 'not,', 'see', '<http://www.gnu.org/licenses/>.', '*/', '/*!', '\\file', 'File', 'to', 'contain', 'simple', 'CUDA', 'error', 'checking', 'macros.', 'Taken', 'from', 'the', 'CUDA', 'SDK', '*/', '#ifndef', 'CUDACHECK_H', '#define', 'CUDACHECK_H', '#include', '<cstdlib>', '#include', '<cstdio>', '#define', 'CUDA_SAFE_CALL(', 'call', ')', 'do', '{', '\\', 'cudaError', 'err', '=', 'call;', '\\', 'if(', 'cudaSuccess', '!=', 'err', ')', '{', '\\', 'fprintf(', 'stderr,', '""CUDA', 'Error', 'in', 'file', ""'%s'"", 'on', 'line', '%i', ':', '%s.\\n"",', '\\', '__FILE__,', '__LINE__,', 'cudaGetErrorString(', 'err', ')', ');', '\\', 'exit(', 'EXIT_FAILURE', ');', '\\', '}', '}', 'while(', '0', ');', '#endif', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE html>
<html lang=""en"">

  {% include head.html %}

<body>

  {% include navigation.html %}
  {% include header.html %}
  {% include music.html %}
  {% include services.html %}
  {% include callout.html %}
  {% include about.html %}
  {% include portfolio.html %}
  {% include footer.html %}
  {% include scripts.html %}

</body>

</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'html>', '<html', 'lang=""en"">', '{%', 'include', 'head.html', '%}', '<body>', '{%', 'include', 'navigation.html', '%}', '{%', 'include', 'header.html', '%}', '{%', 'include', 'music.html', '%}', '{%', 'include', 'services.html', '%}', '{%', 'include', 'callout.html', '%}', '{%', 'include', 'about.html', '%}', '{%', 'include', 'portfolio.html', '%}', '{%', 'include', 'footer.html', '%}', '{%', 'include', 'scripts.html', '%}', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"package am.app.mappingEngine.ontologyLoading;

import java.io.File;
import java.io.InputStream;

import org.apache.log4j.Logger;
import org.junit.Test;
import org.junit.Ignore;

import am.utility.RunTimer;

import com.hp.hpl.jena.ontology.AnnotationProperty;
import com.hp.hpl.jena.ontology.DatatypeProperty;
import com.hp.hpl.jena.ontology.ObjectProperty;
import com.hp.hpl.jena.ontology.OntClass;
import com.hp.hpl.jena.ontology.OntModel;
import com.hp.hpl.jena.rdf.model.ModelFactory;
import com.hp.hpl.jena.util.FileManager;
import com.hp.hpl.jena.util.iterator.ExtendedIterator;

public class LoadLargeOntologiesTest {

	private Logger log = Logger.getLogger(LoadLargeOntologiesTest.class);
	
	@Ignore(""This test is not ready yet"")
	@Test
	public void loadLargeOntologyWithJena() {
		
		RunTimer timer = new RunTimer().start();
		
		OntModel m = ModelFactory.createOntologyModel();

		final File owlFile = new File(""/home/cosmin/Desktop/OAEI 2012/LargeBioMed_dataset_oaei2012/oaei2012_NCI_whole_ontology.owl""); 
		
		InputStream in = FileManager.get().open(owlFile.getAbsolutePath());
		
		m.read(in, null);
		
		
		log.info(""Loaded '"" + owlFile.getName() + ""' in "" + timer.getFormattedRunTime()); 
		
		log.info(""Model contains "" + m.size() + "" triples."");
		
		timer.resetAndStart();
		
		int numClasses = 0;
		ExtendedIterator<OntClass> classesIter = m.listClasses();
		while( classesIter.hasNext() ) {
			numClasses++;
			classesIter.next();
		}

		log.info(""Ontology defines "" + numClasses + "" classes. ("" + timer.getFormattedRunTime() + "")"");
		
		
		timer.resetAndStart();
		
		int objectProperties = 0;
		ExtendedIterator<ObjectProperty> objectPropertiesIter = m.listObjectProperties();
		while( objectPropertiesIter.hasNext() ) {
			objectProperties++;
			objectPropertiesIter.next();
		}
		
		log.info(""Ontology defines "" + objectProperties + "" object properties. ("" + timer.getFormattedRunTime() + "")"");
		
		
		timer.resetAndStart();
		
		int datatypeProperties = 0;
		ExtendedIterator<DatatypeProperty> datatypePropertiesIter = m.listDatatypeProperties();
		while( datatypePropertiesIter.hasNext() ) {
			datatypeProperties++;
			datatypePropertiesIter.next();
		}
		
		log.info(""Ontology defines "" + datatypeProperties + "" datatype properties. ("" + timer.getFormattedRunTime() + "")"");
		
		
		timer.resetAndStart();
		
		int annotationProperties = 0;
		ExtendedIterator<AnnotationProperty> annotationPropertiesIter = m.listAnnotationProperties();
		while( annotationPropertiesIter.hasNext() ) {
			annotationProperties++;
			annotationPropertiesIter.next();
		}
		
		log.info(""Ontology defines "" + annotationProperties + "" annotation properties. ("" + timer.getFormattedRunTime() + "")"");
		
		
	}
	
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'am.app.mappingEngine.ontologyLoading;', 'import', 'java.io.File;', 'import', 'java.io.InputStream;', 'import', 'org.apache.log4j.Logger;', 'import', 'org.junit.Test;', 'import', 'org.junit.Ignore;', 'import', 'am.utility.RunTimer;', 'import', 'com.hp.hpl.jena.ontology.AnnotationProperty;', 'import', 'com.hp.hpl.jena.ontology.DatatypeProperty;', 'import', 'com.hp.hpl.jena.ontology.ObjectProperty;', 'import', 'com.hp.hpl.jena.ontology.OntClass;', 'import', 'com.hp.hpl.jena.ontology.OntModel;', 'import', 'com.hp.hpl.jena.rdf.model.ModelFactory;', 'import', 'com.hp.hpl.jena.util.FileManager;', 'import', 'com.hp.hpl.jena.util.iterator.ExtendedIterator;', 'public', 'class', 'LoadLargeOntologiesTest', '{', 'private', 'Logger', 'log', '=', 'Logger.getLogger(LoadLargeOntologiesTest.class);', '@Ignore(""This', 'test', 'is', 'not', 'ready', 'yet"")', '@Test', 'public', 'void', 'loadLargeOntologyWithJena()', '{', 'RunTimer', 'timer', '=', 'new', 'RunTimer().start();', 'OntModel', 'm', '=', 'ModelFactory.createOntologyModel();', 'final', 'File', 'owlFile', '=', 'new', 'File(""/home/cosmin/Desktop/OAEI', '2012/LargeBioMed_dataset_oaei2012/oaei2012_NCI_whole_ontology.owl"");', 'InputStream', 'in', '=', 'FileManager.get().open(owlFile.getAbsolutePath());', 'm.read(in,', 'null);', 'log.info(""Loaded', '\'""', '+', 'owlFile.getName()', '+', '""\'', 'in', '""', '+', 'timer.getFormattedRunTime());', 'log.info(""Model', 'contains', '""', '+', 'm.size()', '+', '""', 'triples."");', 'timer.resetAndStart();', 'int', 'numClasses', '=', '0;', 'ExtendedIterator<OntClass>', 'classesIter', '=', 'm.listClasses();', 'while(', 'classesIter.hasNext()', ')', '{', 'numClasses++;', 'classesIter.next();', '}', 'log.info(""Ontology', 'defines', '""', '+', 'numClasses', '+', '""', 'classes.', '(""', '+', 'timer.getFormattedRunTime()', '+', '"")"");', 'timer.resetAndStart();', 'int', 'objectProperties', '=', '0;', 'ExtendedIterator<ObjectProperty>', 'objectPropertiesIter', '=', 'm.listObjectProperties();', 'while(', 'objectPropertiesIter.hasNext()', ')', '{', 'objectProperties++;', 'objectPropertiesIter.next();', '}', 'log.info(""Ontology', 'defines', '""', '+', 'objectProperties', '+', '""', 'object', 'properties.', '(""', '+', 'timer.getFormattedRunTime()', '+', '"")"");', 'timer.resetAndStart();', 'int', 'datatypeProperties', '=', '0;', 'ExtendedIterator<DatatypeProperty>', 'datatypePropertiesIter', '=', 'm.listDatatypeProperties();', 'while(', 'datatypePropertiesIter.hasNext()', ')', '{', 'datatypeProperties++;', 'datatypePropertiesIter.next();', '}', 'log.info(""Ontology', 'defines', '""', '+', 'datatypeProperties', '+', '""', 'datatype', 'properties.', '(""', '+', 'timer.getFormattedRunTime()', '+', '"")"");', 'timer.resetAndStart();', 'int', 'annotationProperties', '=', '0;', 'ExtendedIterator<AnnotationProperty>', 'annotationPropertiesIter', '=', 'm.listAnnotationProperties();', 'while(', 'annotationPropertiesIter.hasNext()', ')', '{', 'annotationProperties++;', 'annotationPropertiesIter.next();', '}', 'log.info(""Ontology', 'defines', '""', '+', 'annotationProperties', '+', '""', 'annotation', 'properties.', '(""', '+', 'timer.getFormattedRunTime()', '+', '"")"");', '}', '}', '```']",challenge not surrounded by ''': ,
"// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// ""License""); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an ""AS IS"" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#ifndef __DOCKER_EXECUTOR_HPP__
#define __DOCKER_EXECUTOR_HPP__

#include <stdio.h>

#include <map>
#include <string>

#include <process/process.hpp>

#include <stout/option.hpp>

#include ""logging/flags.hpp""

namespace mesos {
namespace internal {
namespace docker {

struct Flags : public mesos::internal::logging::Flags
{
  Flags() {
    add(&container,
        ""container"",
        ""The name of the docker container to run.\n"");

    add(&docker,
        ""docker"",
        ""The path to the docker executable.\n"");

    add(&docker_socket,
        ""docker_socket"",
        ""The UNIX socket path to be used by docker CLI for accessing docker\n""
        ""daemon.\n"");

    add(&sandbox_directory,
        ""sandbox_directory"",
        ""The path to the container sandbox holding stdout and stderr files\n""
        ""into which docker container logs will be redirected."");

    add(&mapped_directory,
        ""mapped_directory"",
        ""The sandbox directory path that is mapped in the docker container.\n"");

    // TODO(alexr): Remove this after the deprecation cycle (started in 1.0).
    add(&stop_timeout,
        ""stop_timeout"",
        ""The duration for docker to wait after stopping a running container\n""
        ""before it kills that container. This flag is deprecated; use task's\n""
        ""kill policy instead."");

    add(&launcher_dir,
        ""launcher_dir"",
        ""Directory path of Mesos binaries. Mesos would find health-check,\n""
        ""fetcher, containerizer and executor binary files under this\n""
        ""directory."");

    add(&task_environment,
        ""task_environment"",
        ""A JSON map of environment variables and values that should\n""
        ""be passed into the task launched by this executor."");
  }

  Option<std::string> container;
  Option<std::string> docker;
  Option<std::string> docker_socket;
  Option<std::string> sandbox_directory;
  Option<std::string> mapped_directory;
  Option<std::string> launcher_dir;
  Option<std::string> task_environment;

  // TODO(alexr): Remove this after the deprecation cycle (started in 1.0).
  Option<Duration> stop_timeout;
};

} // namespace docker {
} // namespace internal {
} // namespace mesos {

#endif // __DOCKER_EXECUTOR_HPP__
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//', 'Licensed', 'to', 'the', 'Apache', 'Software', 'Foundation', '(ASF)', 'under', 'one', '//', 'or', 'more', 'contributor', 'license', 'agreements.', 'See', 'the', 'NOTICE', 'file', '//', 'distributed', 'with', 'this', 'work', 'for', 'additional', 'information', '//', 'regarding', 'copyright', 'ownership.', 'The', 'ASF', 'licenses', 'this', 'file', '//', 'to', 'you', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '//', '""License"");', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', '//', 'with', 'the', 'License.', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '//', '//', 'http://www.apache.org/licenses/LICENSE-2.0', '//', '//', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '//', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '//', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '//', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '//', 'limitations', 'under', 'the', 'License.', '#ifndef', '__DOCKER_EXECUTOR_HPP__', '#define', '__DOCKER_EXECUTOR_HPP__', '#include', '<stdio.h>', '#include', '<map>', '#include', '<string>', '#include', '<process/process.hpp>', '#include', '<stout/option.hpp>', '#include', '""logging/flags.hpp""', 'namespace', 'mesos', '{', 'namespace', 'internal', '{', 'namespace', 'docker', '{', 'struct', 'Flags', ':', 'public', 'mesos::internal::logging::Flags', '{', 'Flags()', '{', 'add(&container,', '""container"",', '""The', 'name', 'of', 'the', 'docker', 'container', 'to', 'run.\\n"");', 'add(&docker,', '""docker"",', '""The', 'path', 'to', 'the', 'docker', 'executable.\\n"");', 'add(&docker_socket,', '""docker_socket"",', '""The', 'UNIX', 'socket', 'path', 'to', 'be', 'used', 'by', 'docker', 'CLI', 'for', 'accessing', 'docker\\n""', '""daemon.\\n"");', 'add(&sandbox_directory,', '""sandbox_directory"",', '""The', 'path', 'to', 'the', 'container', 'sandbox', 'holding', 'stdout', 'and', 'stderr', 'files\\n""', '""into', 'which', 'docker', 'container', 'logs', 'will', 'be', 'redirected."");', 'add(&mapped_directory,', '""mapped_directory"",', '""The', 'sandbox', 'directory', 'path', 'that', 'is', 'mapped', 'in', 'the', 'docker', 'container.\\n"");', '//', 'TODO(alexr):', 'Remove', 'this', 'after', 'the', 'deprecation', 'cycle', '(started', 'in', '1.0).', 'add(&stop_timeout,', '""stop_timeout"",', '""The', 'duration', 'for', 'docker', 'to', 'wait', 'after', 'stopping', 'a', 'running', 'container\\n""', '""before', 'it', 'kills', 'that', 'container.', 'This', 'flag', 'is', 'deprecated;', 'use', 'task\'s\\n""', '""kill', 'policy', 'instead."");', 'add(&launcher_dir,', '""launcher_dir"",', '""Directory', 'path', 'of', 'Mesos', 'binaries.', 'Mesos', 'would', 'find', 'health-check,\\n""', '""fetcher,', 'containerizer', 'and', 'executor', 'binary', 'files', 'under', 'this\\n""', '""directory."");', 'add(&task_environment,', '""task_environment"",', '""A', 'JSON', 'map', 'of', 'environment', 'variables', 'and', 'values', 'that', 'should\\n""', '""be', 'passed', 'into', 'the', 'task', 'launched', 'by', 'this', 'executor."");', '}', 'Option<std::string>', 'container;', 'Option<std::string>', 'docker;', 'Option<std::string>', 'docker_socket;', 'Option<std::string>', 'sandbox_directory;', 'Option<std::string>', 'mapped_directory;', 'Option<std::string>', 'launcher_dir;', 'Option<std::string>', 'task_environment;', '//', 'TODO(alexr):', 'Remove', 'this', 'after', 'the', 'deprecation', 'cycle', '(started', 'in', '1.0).', 'Option<Duration>', 'stop_timeout;', '};', '}', '//', 'namespace', 'docker', '{', '}', '//', 'namespace', 'internal', '{', '}', '//', 'namespace', 'mesos', '{', '#endif', '//', '__DOCKER_EXECUTOR_HPP__', '```']",challenge not surrounded by ''': ,
"package net.agmodel.utility;

import net.agmodel.physical.Duration;
import net.agmodel.physical.DurationUnit;
/**
* A simple timer for measuring performance.
* Taken from ""Java Platform Performance - Strategies and Tactics"" by Steve Wilson and Jeff Kesselman
* Modified to return a Duration rather than the raw milliseconds.
*/
public class Stopwatch {
  private long startTime = -1;
  private long stopTime= -1;
  private boolean running=false;

  public Stopwatch start() {
    startTime = System.currentTimeMillis();
    running=true;
    return this;
  }

  public Stopwatch stop() {
    stopTime = System.currentTimeMillis();
    running=false;
    return this;
  }

  /**
  * Get the elapsed time in milliseconds.
  * @returns elapsed time in milliseconds or 0 if watch has never been started
  */
  public Duration getElapsedTime() {
    if (startTime==-1)
      return new Duration(0,DurationUnit.SECOND);
    else
      if (running)
        return new Duration(System.currentTimeMillis()-startTime,DurationUnit.MILLISECOND);
      else
        return new Duration(stopTime-startTime,DurationUnit.MILLISECOND);
  }

  public Stopwatch reset() {
    startTime=-1;
    stopTime=-1;
    running=false;
    return this;
  }

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'net.agmodel.utility;', 'import', 'net.agmodel.physical.Duration;', 'import', 'net.agmodel.physical.DurationUnit;', '/**', '*', 'A', 'simple', 'timer', 'for', 'measuring', 'performance.', '*', 'Taken', 'from', '""Java', 'Platform', 'Performance', '-', 'Strategies', 'and', 'Tactics""', 'by', 'Steve', 'Wilson', 'and', 'Jeff', 'Kesselman', '*', 'Modified', 'to', 'return', 'a', 'Duration', 'rather', 'than', 'the', 'raw', 'milliseconds.', '*/', 'public', 'class', 'Stopwatch', '{', 'private', 'long', 'startTime', '=', '-1;', 'private', 'long', 'stopTime=', '-1;', 'private', 'boolean', 'running=false;', 'public', 'Stopwatch', 'start()', '{', 'startTime', '=', 'System.currentTimeMillis();', 'running=true;', 'return', 'this;', '}', 'public', 'Stopwatch', 'stop()', '{', 'stopTime', '=', 'System.currentTimeMillis();', 'running=false;', 'return', 'this;', '}', '/**', '*', 'Get', 'the', 'elapsed', 'time', 'in', 'milliseconds.', '*', '@returns', 'elapsed', 'time', 'in', 'milliseconds', 'or', '0', 'if', 'watch', 'has', 'never', 'been', 'started', '*/', 'public', 'Duration', 'getElapsedTime()', '{', 'if', '(startTime==-1)', 'return', 'new', 'Duration(0,DurationUnit.SECOND);', 'else', 'if', '(running)', 'return', 'new', 'Duration(System.currentTimeMillis()-startTime,DurationUnit.MILLISECOND);', 'else', 'return', 'new', 'Duration(stopTime-startTime,DurationUnit.MILLISECOND);', '}', 'public', 'Stopwatch', 'reset()', '{', 'startTime=-1;', 'stopTime=-1;', 'running=false;', 'return', 'this;', '}', '}', '```']",challenge not surrounded by ''': ,
"package com.allogy.qrauth.server.pages.supervisor;

/**
 * Created by robert on 3/20/15.
 */
public
class IndexSupervisor extends AbstractSupervisorPage
{

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.allogy.qrauth.server.pages.supervisor;', '/**', '*', 'Created', 'by', 'robert', 'on', '3/20/15.', '*/', 'public', 'class', 'IndexSupervisor', 'extends', 'AbstractSupervisorPage', '{', '}', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.hazelcast.internal.memory;

/**
 * Garbage collector statistics for the JVM which current HazelcastInstance
 * belongs to.
 * <p>
 * Shows major/minor collection counts and consumed CPU times.
 *
 * @see com.hazelcast.internal.memory.MemoryStats
 */
public interface GarbageCollectorStats {

    /**
     * Returns major collection count.
     * <p>
     * Major collection is identified by matching heap memory region name
     * with known names. If a collection cannot be matched then it's reported
     * as unknown count.
     *
     * @return major collection count.
     * @see #getUnknownCollectionCount()
     */
    long getMajorCollectionCount();

    /**
     * Returns total major collection time in ms.
     * <p>
     * Major collection is identified by matching heap memory region name
     * with known names. If a collection cannot be matched then it's reported
     * as unknown count.
     *
     * @return total major collection count in ms.
     * @see #getUnknownCollectionTime()
     */
    long getMajorCollectionTime();

    /**
     * Returns minor collection count.
     * <p>
     * Minor collection is identified by matching heap memory region name
     * with known names. If a collection cannot be matched then it's reported
     * as unknown count.
     *
     * @return minor collection count.
     * @see #getUnknownCollectionCount()
     */
    long getMinorCollectionCount();

    /**
     * Returns total minor collection time in ms.
     * <p>
     * Minor collection is identified by matching heap memory region name
     * with known names. If a collection cannot be matched then it's reported
     * as unknown count.
     *
     * @return total minor collection count in ms.
     * @see #getUnknownCollectionTime()
     */
    long getMinorCollectionTime();

    /**
     * Returns collection count which cannot be identified as major or minor.
     *
     * @return unidentified collection count.
     */
    long getUnknownCollectionCount();

    /**
     * Returns total collection time which cannot be identified as major or minor.
     *
     * @return total unidentified collection time in ms.
     */
    long getUnknownCollectionTime();
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '(c)', '2008-2020,', 'Hazelcast,', 'Inc.', 'All', 'Rights', 'Reserved.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'com.hazelcast.internal.memory;', '/**', '*', 'Garbage', 'collector', 'statistics', 'for', 'the', 'JVM', 'which', 'current', 'HazelcastInstance', '*', 'belongs', 'to.', '*', '<p>', '*', 'Shows', 'major/minor', 'collection', 'counts', 'and', 'consumed', 'CPU', 'times.', '*', '*', '@see', 'com.hazelcast.internal.memory.MemoryStats', '*/', 'public', 'interface', 'GarbageCollectorStats', '{', '/**', '*', 'Returns', 'major', 'collection', 'count.', '*', '<p>', '*', 'Major', 'collection', 'is', 'identified', 'by', 'matching', 'heap', 'memory', 'region', 'name', '*', 'with', 'known', 'names.', 'If', 'a', 'collection', 'cannot', 'be', 'matched', 'then', ""it's"", 'reported', '*', 'as', 'unknown', 'count.', '*', '*', '@return', 'major', 'collection', 'count.', '*', '@see', '#getUnknownCollectionCount()', '*/', 'long', 'getMajorCollectionCount();', '/**', '*', 'Returns', 'total', 'major', 'collection', 'time', 'in', 'ms.', '*', '<p>', '*', 'Major', 'collection', 'is', 'identified', 'by', 'matching', 'heap', 'memory', 'region', 'name', '*', 'with', 'known', 'names.', 'If', 'a', 'collection', 'cannot', 'be', 'matched', 'then', ""it's"", 'reported', '*', 'as', 'unknown', 'count.', '*', '*', '@return', 'total', 'major', 'collection', 'count', 'in', 'ms.', '*', '@see', '#getUnknownCollectionTime()', '*/', 'long', 'getMajorCollectionTime();', '/**', '*', 'Returns', 'minor', 'collection', 'count.', '*', '<p>', '*', 'Minor', 'collection', 'is', 'identified', 'by', 'matching', 'heap', 'memory', 'region', 'name', '*', 'with', 'known', 'names.', 'If', 'a', 'collection', 'cannot', 'be', 'matched', 'then', ""it's"", 'reported', '*', 'as', 'unknown', 'count.', '*', '*', '@return', 'minor', 'collection', 'count.', '*', '@see', '#getUnknownCollectionCount()', '*/', 'long', 'getMinorCollectionCount();', '/**', '*', 'Returns', 'total', 'minor', 'collection', 'time', 'in', 'ms.', '*', '<p>', '*', 'Minor', 'collection', 'is', 'identified', 'by', 'matching', 'heap', 'memory', 'region', 'name', '*', 'with', 'known', 'names.', 'If', 'a', 'collection', 'cannot', 'be', 'matched', 'then', ""it's"", 'reported', '*', 'as', 'unknown', 'count.', '*', '*', '@return', 'total', 'minor', 'collection', 'count', 'in', 'ms.', '*', '@see', '#getUnknownCollectionTime()', '*/', 'long', 'getMinorCollectionTime();', '/**', '*', 'Returns', 'collection', 'count', 'which', 'cannot', 'be', 'identified', 'as', 'major', 'or', 'minor.', '*', '*', '@return', 'unidentified', 'collection', 'count.', '*/', 'long', 'getUnknownCollectionCount();', '/**', '*', 'Returns', 'total', 'collection', 'time', 'which', 'cannot', 'be', 'identified', 'as', 'major', 'or', 'minor.', '*', '*', '@return', 'total', 'unidentified', 'collection', 'time', 'in', 'ms.', '*/', 'long', 'getUnknownCollectionTime();', '}', '```']",challenge not surrounded by ''': ,
"//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Charlotte Murphy using IMS Development Environment (version 1.32 build 2073.16121)
// Copyright (C) 1995-2005 IMS MAXIMS plc. All rights reserved.

package ims.coe.domain.impl;

import ims.domain.impl.DomainImpl;

public class AssessBladderManagementImpl extends DomainImpl implements ims.coe.domain.AssessBladderManagement, ims.domain.impl.Transactional
{
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//#############################################################################', '//#', '#', '//#', 'Copyright', '(C)', '<2015>', '<IMS', 'MAXIMS>', '#', '//#', '#', '//#', 'This', 'program', 'is', 'free', 'software:', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', '#', '//#', 'it', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'Affero', 'General', 'Public', 'License', 'as', '#', '//#', 'published', 'by', 'the', 'Free', 'Software', 'Foundation,', 'either', 'version', '3', 'of', 'the', '#', '//#', 'License,', 'or', '(at', 'your', 'option)', 'any', 'later', 'version.', '#', '//#', '#', '//#', 'This', 'program', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', '#', '//#', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', '#', '//#', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', '#', '//#', 'GNU', 'Affero', 'General', 'Public', 'License', 'for', 'more', 'details.', '#', '//#', '#', '//#', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'Affero', 'General', 'Public', 'License', '#', '//#', 'along', 'with', 'this', 'program.', 'If', 'not,', 'see', '<http://www.gnu.org/licenses/>.', '#', '//#', '#', '//#', 'IMS', 'MAXIMS', 'provides', 'absolutely', 'NO', 'GUARANTEE', 'OF', 'THE', 'CLINICAL', 'SAFTEY', 'of', '#', '//#', 'this', 'program.', 'Users', 'of', 'this', 'software', 'do', 'so', 'entirely', 'at', 'their', 'own', 'risk.', '#', '//#', 'IMS', 'MAXIMS', 'only', 'ensures', 'the', 'Clinical', 'Safety', 'of', 'unaltered', 'run-time', '#', '//#', 'software', 'that', 'it', 'builds,', 'deploys', 'and', 'maintains.', '#', '//#', '#', '//#############################################################################', '//#EOH', '//', 'This', 'code', 'was', 'generated', 'by', 'Charlotte', 'Murphy', 'using', 'IMS', 'Development', 'Environment', '(version', '1.32', 'build', '2073.16121)', '//', 'Copyright', '(C)', '1995-2005', 'IMS', 'MAXIMS', 'plc.', 'All', 'rights', 'reserved.', 'package', 'ims.coe.domain.impl;', 'import', 'ims.domain.impl.DomainImpl;', 'public', 'class', 'AssessBladderManagementImpl', 'extends', 'DomainImpl', 'implements', 'ims.coe.domain.AssessBladderManagement,', 'ims.domain.impl.Transactional', '{', '}', '```']",challenge not surrounded by ''': ,
"# Copyright (c) 2016-2017, NVIDIA CORPORATION.  All rights reserved.
from __future__ import absolute_import

import copy
from pkg_resources import iter_entry_points

from . import boundingBox
from . import imageOutput
from . import imageSegmentation
from . import rawData

# Entry point group (this is the key we use to register and
# find installed plug-ins)
GROUP = ""origae.plugins.view""


# built-in extensions
builtin_view_extensions = [
    boundingBox.Visualization,
    imageOutput.Visualization,
    imageSegmentation.Visualization,
    rawData.Visualization,
]


def get_default_extension():
    """"""
    return the default view extension
    """"""
    return rawData.Visualization


def get_extensions():
    """"""
    return set of data data extensions
    """"""
    extensions = copy.copy(builtin_view_extensions)
    # find installed extension plug-ins
    for entry_point in iter_entry_points(group=GROUP, name=None):
        extensions.append(entry_point.load())

    return extensions


def get_extension(extension_id):
    """"""
    return extension associated with specified extension_id
    """"""
    for extension in get_extensions():
        if extension.get_id() == extension_id:
            return extension
    return None
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', 'Copyright', '(c)', '2016-2017,', 'NVIDIA', 'CORPORATION.', 'All', 'rights', 'reserved.', 'from', '__future__', 'import', 'absolute_import', 'import', 'copy', 'from', 'pkg_resources', 'import', 'iter_entry_points', 'from', '.', 'import', 'boundingBox', 'from', '.', 'import', 'imageOutput', 'from', '.', 'import', 'imageSegmentation', 'from', '.', 'import', 'rawData', '#', 'Entry', 'point', 'group', '(this', 'is', 'the', 'key', 'we', 'use', 'to', 'register', 'and', '#', 'find', 'installed', 'plug-ins)', 'GROUP', '=', '""origae.plugins.view""', '#', 'built-in', 'extensions', 'builtin_view_extensions', '=', '[', 'boundingBox.Visualization,', 'imageOutput.Visualization,', 'imageSegmentation.Visualization,', 'rawData.Visualization,', ']', 'def', 'get_default_extension():', '""""""', 'return', 'the', 'default', 'view', 'extension', '""""""', 'return', 'rawData.Visualization', 'def', 'get_extensions():', '""""""', 'return', 'set', 'of', 'data', 'data', 'extensions', '""""""', 'extensions', '=', 'copy.copy(builtin_view_extensions)', '#', 'find', 'installed', 'extension', 'plug-ins', 'for', 'entry_point', 'in', 'iter_entry_points(group=GROUP,', 'name=None):', 'extensions.append(entry_point.load())', 'return', 'extensions', 'def', 'get_extension(extension_id):', '""""""', 'return', 'extension', 'associated', 'with', 'specified', 'extension_id', '""""""', 'for', 'extension', 'in', 'get_extensions():', 'if', 'extension.get_id()', '==', 'extension_id:', 'return', 'extension', 'return', 'None', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE HTML PUBLIC ""-//IETF//DTD HTML//EN"">
<html>
<head>
<script src=""../../fast/js/resources/js-test-pre.js""></script>
</head>
<body>
<p id=""description""></p>
<div id=""console""></div>
<script src=""resources/ie-test-pre.js""></script>
<script src=""TestCases/15.4.4.15-5-7.js""></script>
<script src=""resources/ie-test-post.js""></script>
<script src=""../../fast/js/resources/js-test-post.js""></script>
</body>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'HTML', 'PUBLIC', '""-//IETF//DTD', 'HTML//EN"">', '<html>', '<head>', '<script', 'src=""../../fast/js/resources/js-test-pre.js""></script>', '</head>', '<body>', '<p', 'id=""description""></p>', '<div', 'id=""console""></div>', '<script', 'src=""resources/ie-test-pre.js""></script>', '<script', 'src=""TestCases/15.4.4.15-5-7.js""></script>', '<script', 'src=""resources/ie-test-post.js""></script>', '<script', 'src=""../../fast/js/resources/js-test-post.js""></script>', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"/* jshint strict:false, mocha:true */
/* globals document:true, iframe:true, expect:true */

describe('Task', function() {

  /*
  when running this test with `grunt jasmine:selfTest -d` you got this output

  [D] ['phantomjs','onLoadFinished','success']
  [D] ['phantomjs','onResourceRequested','http://httpbin.org/status/500']
  [D] ['phantomjs','onResourceReceived','http://httpbin.org/status/500']
  [D] ['phantomjs','onLoadFinished','fail']
  [D] ['phantomjs','fail.load','_SpecRunner.html']

  phantomjs.page.onLoadFinished seems to be called for iframes, too.
  A failing onLoadFinished caused this grunt taks to hang.
  Now, after removing the event handler, this following test should work as expected
  */
  it('can handle fail on iframe', function(done) {
    iframe = document.createElement('iframe');
    iframe.src = 'http://localhost:9000';
    document.body.appendChild(iframe);

    setTimeout(function() {
      expect(true).toBeTruthy('testing iframes');
      done();
    }, 50);
  });
});
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', 'jshint', 'strict:false,', 'mocha:true', '*/', '/*', 'globals', 'document:true,', 'iframe:true,', 'expect:true', '*/', ""describe('Task',"", 'function()', '{', '/*', 'when', 'running', 'this', 'test', 'with', '`grunt', 'jasmine:selfTest', '-d`', 'you', 'got', 'this', 'output', '[D]', ""['phantomjs','onLoadFinished','success']"", '[D]', ""['phantomjs','onResourceRequested','http://httpbin.org/status/500']"", '[D]', ""['phantomjs','onResourceReceived','http://httpbin.org/status/500']"", '[D]', ""['phantomjs','onLoadFinished','fail']"", '[D]', ""['phantomjs','fail.load','_SpecRunner.html']"", 'phantomjs.page.onLoadFinished', 'seems', 'to', 'be', 'called', 'for', 'iframes,', 'too.', 'A', 'failing', 'onLoadFinished', 'caused', 'this', 'grunt', 'taks', 'to', 'hang.', 'Now,', 'after', 'removing', 'the', 'event', 'handler,', 'this', 'following', 'test', 'should', 'work', 'as', 'expected', '*/', ""it('can"", 'handle', 'fail', 'on', ""iframe',"", 'function(done)', '{', 'iframe', '=', ""document.createElement('iframe');"", 'iframe.src', '=', ""'http://localhost:9000';"", 'document.body.appendChild(iframe);', 'setTimeout(function()', '{', ""expect(true).toBeTruthy('testing"", ""iframes');"", 'done();', '},', '50);', '});', '});', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright (c) 2010-2016. Axon Framework
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.axonframework.commandhandling.model;

import org.axonframework.commandhandling.model.inspection.AnnotatedAggregate;
import org.axonframework.messaging.unitofwork.CurrentUnitOfWork;
import org.axonframework.messaging.unitofwork.DefaultUnitOfWork;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;

import java.util.concurrent.Callable;

/**
 * @author Allard Buijze
 */
public class AbstractRepositoryTest {

    private AbstractRepository testSubject;

    @Before
    public void setUp() throws Exception {
        testSubject = new AbstractRepository<JpaAggregate, AnnotatedAggregate<JpaAggregate>>(JpaAggregate.class) {

            @Override
            protected AnnotatedAggregate<JpaAggregate> doCreateNew(Callable<JpaAggregate> factoryMethod) throws Exception {
                return AnnotatedAggregate.initialize(factoryMethod, aggregateModel(), null);
            }

            @Override
            protected void doSave(AnnotatedAggregate<JpaAggregate> aggregate) {

            }

            @Override
            protected void doDelete(AnnotatedAggregate<JpaAggregate> aggregate) {

            }

            @Override
            protected AnnotatedAggregate<JpaAggregate> doLoad(String aggregateIdentifier, Long expectedVersion) {
                return AnnotatedAggregate.initialize(new JpaAggregate(), aggregateModel(), null);
            }
        };
        DefaultUnitOfWork.startAndGet(null);
    }

    @After
    public void tearDown() throws Exception {
        while (CurrentUnitOfWork.isStarted()) {
            CurrentUnitOfWork.get().rollback();
        }
    }

    @Test
    public void testAggregateTypeVerification_CorrectType() throws Exception {
        //noinspection unchecked
        testSubject.newInstance(() -> new JpaAggregate(""hi""));
    }

    @Test(expected = IllegalArgumentException.class)
    public void testAggregateTypeVerification_WrongType() throws Exception {
        //noinspection unchecked
        testSubject.newInstance(() -> ""Not allowed"");
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '(c)', '2010-2016.', 'Axon', 'Framework', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'org.axonframework.commandhandling.model;', 'import', 'org.axonframework.commandhandling.model.inspection.AnnotatedAggregate;', 'import', 'org.axonframework.messaging.unitofwork.CurrentUnitOfWork;', 'import', 'org.axonframework.messaging.unitofwork.DefaultUnitOfWork;', 'import', 'org.junit.After;', 'import', 'org.junit.Before;', 'import', 'org.junit.Test;', 'import', 'java.util.concurrent.Callable;', '/**', '*', '@author', 'Allard', 'Buijze', '*/', 'public', 'class', 'AbstractRepositoryTest', '{', 'private', 'AbstractRepository', 'testSubject;', '@Before', 'public', 'void', 'setUp()', 'throws', 'Exception', '{', 'testSubject', '=', 'new', 'AbstractRepository<JpaAggregate,', 'AnnotatedAggregate<JpaAggregate>>(JpaAggregate.class)', '{', '@Override', 'protected', 'AnnotatedAggregate<JpaAggregate>', 'doCreateNew(Callable<JpaAggregate>', 'factoryMethod)', 'throws', 'Exception', '{', 'return', 'AnnotatedAggregate.initialize(factoryMethod,', 'aggregateModel(),', 'null);', '}', '@Override', 'protected', 'void', 'doSave(AnnotatedAggregate<JpaAggregate>', 'aggregate)', '{', '}', '@Override', 'protected', 'void', 'doDelete(AnnotatedAggregate<JpaAggregate>', 'aggregate)', '{', '}', '@Override', 'protected', 'AnnotatedAggregate<JpaAggregate>', 'doLoad(String', 'aggregateIdentifier,', 'Long', 'expectedVersion)', '{', 'return', 'AnnotatedAggregate.initialize(new', 'JpaAggregate(),', 'aggregateModel(),', 'null);', '}', '};', 'DefaultUnitOfWork.startAndGet(null);', '}', '@After', 'public', 'void', 'tearDown()', 'throws', 'Exception', '{', 'while', '(CurrentUnitOfWork.isStarted())', '{', 'CurrentUnitOfWork.get().rollback();', '}', '}', '@Test', 'public', 'void', 'testAggregateTypeVerification_CorrectType()', 'throws', 'Exception', '{', '//noinspection', 'unchecked', 'testSubject.newInstance(()', '->', 'new', 'JpaAggregate(""hi""));', '}', '@Test(expected', '=', 'IllegalArgumentException.class)', 'public', 'void', 'testAggregateTypeVerification_WrongType()', 'throws', 'Exception', '{', '//noinspection', 'unchecked', 'testSubject.newInstance(()', '->', '""Not', 'allowed"");', '}', '}', '```']",challenge not surrounded by ''': ,
"//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href=""http://java.sun.com/xml/jaxb"">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.01.16 at 12:56:36 PM IST 
//


package org.akomantoso.schema.v3.csd11;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base=""{http://www.w3.org/2001/XMLSchema}anyType"">
 *       &lt;sequence maxOccurs=""unbounded"">
 *         &lt;element ref=""{http://docs.oasis-open.org/legaldocml/ns/akn/3.0/CSD11}attachment""/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = """", propOrder = {
    ""attachment""
})
@XmlRootElement(name = ""attachments"")
public class Attachments {

    @XmlElement(required = true)
    protected List<DocContainerType> attachment;

    /**
     * Gets the value of the attachment property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the attachment property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAttachment().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DocContainerType }
     * 
     * 
     */
    public List<DocContainerType> getAttachment() {
        if (attachment == null) {
            attachment = new ArrayList<DocContainerType>();
        }
        return this.attachment;
    }

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//', '//', 'This', 'file', 'was', 'generated', 'by', 'the', 'JavaTM', 'Architecture', 'for', 'XML', 'Binding(JAXB)', 'Reference', 'Implementation,', 'v2.2.8-b130911.1802', '//', 'See', '<a', 'href=""http://java.sun.com/xml/jaxb"">http://java.sun.com/xml/jaxb</a>', '//', 'Any', 'modifications', 'to', 'this', 'file', 'will', 'be', 'lost', 'upon', 'recompilation', 'of', 'the', 'source', 'schema.', '//', 'Generated', 'on:', '2015.01.16', 'at', '12:56:36', 'PM', 'IST', '//', 'package', 'org.akomantoso.schema.v3.csd11;', 'import', 'java.util.ArrayList;', 'import', 'java.util.List;', 'import', 'javax.xml.bind.annotation.XmlAccessType;', 'import', 'javax.xml.bind.annotation.XmlAccessorType;', 'import', 'javax.xml.bind.annotation.XmlElement;', 'import', 'javax.xml.bind.annotation.XmlRootElement;', 'import', 'javax.xml.bind.annotation.XmlType;', '/**', '*', '<p>Java', 'class', 'for', 'anonymous', 'complex', 'type.', '*', '*', '<p>The', 'following', 'schema', 'fragment', 'specifies', 'the', 'expected', 'content', 'contained', 'within', 'this', 'class.', '*', '*', '<pre>', '*', '&lt;complexType>', '*', '&lt;complexContent>', '*', '&lt;restriction', 'base=""{http://www.w3.org/2001/XMLSchema}anyType"">', '*', '&lt;sequence', 'maxOccurs=""unbounded"">', '*', '&lt;element', 'ref=""{http://docs.oasis-open.org/legaldocml/ns/akn/3.0/CSD11}attachment""/>', '*', '&lt;/sequence>', '*', '&lt;/restriction>', '*', '&lt;/complexContent>', '*', '&lt;/complexType>', '*', '</pre>', '*', '*', '*/', '@XmlAccessorType(XmlAccessType.FIELD)', '@XmlType(name', '=', '"""",', 'propOrder', '=', '{', '""attachment""', '})', '@XmlRootElement(name', '=', '""attachments"")', 'public', 'class', 'Attachments', '{', '@XmlElement(required', '=', 'true)', 'protected', 'List<DocContainerType>', 'attachment;', '/**', '*', 'Gets', 'the', 'value', 'of', 'the', 'attachment', 'property.', '*', '*', '<p>', '*', 'This', 'accessor', 'method', 'returns', 'a', 'reference', 'to', 'the', 'live', 'list,', '*', 'not', 'a', 'snapshot.', 'Therefore', 'any', 'modification', 'you', 'make', 'to', 'the', '*', 'returned', 'list', 'will', 'be', 'present', 'inside', 'the', 'JAXB', 'object.', '*', 'This', 'is', 'why', 'there', 'is', 'not', 'a', '<CODE>set</CODE>', 'method', 'for', 'the', 'attachment', 'property.', '*', '*', '<p>', '*', 'For', 'example,', 'to', 'add', 'a', 'new', 'item,', 'do', 'as', 'follows:', '*', '<pre>', '*', 'getAttachment().add(newItem);', '*', '</pre>', '*', '*', '*', '<p>', '*', 'Objects', 'of', 'the', 'following', 'type(s)', 'are', 'allowed', 'in', 'the', 'list', '*', '{@link', 'DocContainerType', '}', '*', '*', '*/', 'public', 'List<DocContainerType>', 'getAttachment()', '{', 'if', '(attachment', '==', 'null)', '{', 'attachment', '=', 'new', 'ArrayList<DocContainerType>();', '}', 'return', 'this.attachment;', '}', '}', '```']",challenge not surrounded by ''': ,
"#!/usr/bin/env python3
# -*- coding: utf-8 -*-

__author__ = 'Administrator'


def is_palindrome(n):
    return str(n) == str(n)[::-1]

if __name__ == '__main__':
    output = filter(is_palindrome, range(1,1000))
    print(list(output))
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/usr/bin/env', 'python3', '#', '-*-', 'coding:', 'utf-8', '-*-', '__author__', '=', ""'Administrator'"", 'def', 'is_palindrome(n):', 'return', 'str(n)', '==', 'str(n)[::-1]', 'if', '__name__', '==', ""'__main__':"", 'output', '=', 'filter(is_palindrome,', 'range(1,1000))', 'print(list(output))', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"" ""http://www.w3.org/TR/html4/loose.dtd"">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_35) on Tue Oct 16 22:49:47 ICT 2012 -->
<TITLE>
org.apache.fop.fonts.type1 (Apache FOP 1.1 API)
</TITLE>

<META NAME=""date"" CONTENT=""2012-10-16"">

<LINK REL =""stylesheet"" TYPE=""text/css"" HREF=""../../../../../stylesheet.css"" TITLE=""Style"">


</HEAD>

<BODY BGCOLOR=""white"">
<FONT size=""+1"" CLASS=""FrameTitleFont"">
<A HREF=""../../../../../org/apache/fop/fonts/type1/package-summary.html"" target=""classFrame"">org.apache.fop.fonts.type1</A></FONT>
<TABLE BORDER=""0"" WIDTH=""100%"" SUMMARY="""">
<TR>
<TD NOWRAP><FONT size=""+1"" CLASS=""FrameHeadingFont"">
Classes</FONT>&nbsp;
<FONT CLASS=""FrameItemFont"">
<BR>
<A HREF=""AFMCharMetrics.html"" title=""class in org.apache.fop.fonts.type1"" target=""classFrame"">AFMCharMetrics</A>
<BR>
<A HREF=""AFMFile.html"" title=""class in org.apache.fop.fonts.type1"" target=""classFrame"">AFMFile</A>
<BR>
<A HREF=""AFMParser.html"" title=""class in org.apache.fop.fonts.type1"" target=""classFrame"">AFMParser</A>
<BR>
<A HREF=""AFMWritingDirectionMetrics.html"" title=""class in org.apache.fop.fonts.type1"" target=""classFrame"">AFMWritingDirectionMetrics</A>
<BR>
<A HREF=""PFBData.html"" title=""class in org.apache.fop.fonts.type1"" target=""classFrame"">PFBData</A>
<BR>
<A HREF=""PFBParser.html"" title=""class in org.apache.fop.fonts.type1"" target=""classFrame"">PFBParser</A>
<BR>
<A HREF=""PFMFile.html"" title=""class in org.apache.fop.fonts.type1"" target=""classFrame"">PFMFile</A>
<BR>
<A HREF=""PFMInputStream.html"" title=""class in org.apache.fop.fonts.type1"" target=""classFrame"">PFMInputStream</A>
<BR>
<A HREF=""Type1FontLoader.html"" title=""class in org.apache.fop.fonts.type1"" target=""classFrame"">Type1FontLoader</A></FONT></TD>
</TR>
</TABLE>


</BODY>
</HTML>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'HTML', 'PUBLIC', '""-//W3C//DTD', 'HTML', '4.01', 'Transitional//EN""', '""http://www.w3.org/TR/html4/loose.dtd"">', '<!--NewPage-->', '<HTML>', '<HEAD>', '<!--', 'Generated', 'by', 'javadoc', '(build', '1.6.0_35)', 'on', 'Tue', 'Oct', '16', '22:49:47', 'ICT', '2012', '-->', '<TITLE>', 'org.apache.fop.fonts.type1', '(Apache', 'FOP', '1.1', 'API)', '</TITLE>', '<META', 'NAME=""date""', 'CONTENT=""2012-10-16"">', '<LINK', 'REL', '=""stylesheet""', 'TYPE=""text/css""', 'HREF=""../../../../../stylesheet.css""', 'TITLE=""Style"">', '</HEAD>', '<BODY', 'BGCOLOR=""white"">', '<FONT', 'size=""+1""', 'CLASS=""FrameTitleFont"">', '<A', 'HREF=""../../../../../org/apache/fop/fonts/type1/package-summary.html""', 'target=""classFrame"">org.apache.fop.fonts.type1</A></FONT>', '<TABLE', 'BORDER=""0""', 'WIDTH=""100%""', 'SUMMARY="""">', '<TR>', '<TD', 'NOWRAP><FONT', 'size=""+1""', 'CLASS=""FrameHeadingFont"">', 'Classes</FONT>&nbsp;', '<FONT', 'CLASS=""FrameItemFont"">', '<BR>', '<A', 'HREF=""AFMCharMetrics.html""', 'title=""class', 'in', 'org.apache.fop.fonts.type1""', 'target=""classFrame"">AFMCharMetrics</A>', '<BR>', '<A', 'HREF=""AFMFile.html""', 'title=""class', 'in', 'org.apache.fop.fonts.type1""', 'target=""classFrame"">AFMFile</A>', '<BR>', '<A', 'HREF=""AFMParser.html""', 'title=""class', 'in', 'org.apache.fop.fonts.type1""', 'target=""classFrame"">AFMParser</A>', '<BR>', '<A', 'HREF=""AFMWritingDirectionMetrics.html""', 'title=""class', 'in', 'org.apache.fop.fonts.type1""', 'target=""classFrame"">AFMWritingDirectionMetrics</A>', '<BR>', '<A', 'HREF=""PFBData.html""', 'title=""class', 'in', 'org.apache.fop.fonts.type1""', 'target=""classFrame"">PFBData</A>', '<BR>', '<A', 'HREF=""PFBParser.html""', 'title=""class', 'in', 'org.apache.fop.fonts.type1""', 'target=""classFrame"">PFBParser</A>', '<BR>', '<A', 'HREF=""PFMFile.html""', 'title=""class', 'in', 'org.apache.fop.fonts.type1""', 'target=""classFrame"">PFMFile</A>', '<BR>', '<A', 'HREF=""PFMInputStream.html""', 'title=""class', 'in', 'org.apache.fop.fonts.type1""', 'target=""classFrame"">PFMInputStream</A>', '<BR>', '<A', 'HREF=""Type1FontLoader.html""', 'title=""class', 'in', 'org.apache.fop.fonts.type1""', 'target=""classFrame"">Type1FontLoader</A></FONT></TD>', '</TR>', '</TABLE>', '</BODY>', '</HTML>', '```']",challenge not surrounded by ''': ,
"package com.sirma.sep.content.idoc.nodes.image;

/**
 * Dimension class. The dimensions are in {@link String} to support the Mirador format where the fraction
 * of the dimension represents a zoom level
 *
 * @author BBonev
 */
public class Dimension {

	private final String height;
	private final String width;

	/**
	 * Constructs the dimension by given raw height and width values.
	 *
	 * @param width
	 *            the width
	 * @param height
	 *            the height
	 */
	public Dimension(String width, String height) {
		this.width = width;
		this.height = height;
	}

	/**
	 * Constructs the dimension by given height and width.
	 *
	 * @param width
	 *            the width
	 * @param height
	 *            the height
	 */
	public Dimension(int width, int height) {
		this(Integer.toString(width), Integer.toString(height));
	}

	/**
	 * Construct a dimension instance using double values for height and width
	 *
	 * @param width
	 *            the width
	 * @param height
	 *            the height
	 */
	public Dimension(double width, double height) {
		this(Double.toString(width), Double.toString(height));
	}

	public int getHeight() {
		return (int) Double.parseDouble(height);
	}

	public int getWidth() {
		return (int) Double.parseDouble(width);
	}

	public String getRawHeight() {
		return height;
	}

	public String getRawWidth() {
		return width;
	}
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.sirma.sep.content.idoc.nodes.image;', '/**', '*', 'Dimension', 'class.', 'The', 'dimensions', 'are', 'in', '{@link', 'String}', 'to', 'support', 'the', 'Mirador', 'format', 'where', 'the', 'fraction', '*', 'of', 'the', 'dimension', 'represents', 'a', 'zoom', 'level', '*', '*', '@author', 'BBonev', '*/', 'public', 'class', 'Dimension', '{', 'private', 'final', 'String', 'height;', 'private', 'final', 'String', 'width;', '/**', '*', 'Constructs', 'the', 'dimension', 'by', 'given', 'raw', 'height', 'and', 'width', 'values.', '*', '*', '@param', 'width', '*', 'the', 'width', '*', '@param', 'height', '*', 'the', 'height', '*/', 'public', 'Dimension(String', 'width,', 'String', 'height)', '{', 'this.width', '=', 'width;', 'this.height', '=', 'height;', '}', '/**', '*', 'Constructs', 'the', 'dimension', 'by', 'given', 'height', 'and', 'width.', '*', '*', '@param', 'width', '*', 'the', 'width', '*', '@param', 'height', '*', 'the', 'height', '*/', 'public', 'Dimension(int', 'width,', 'int', 'height)', '{', 'this(Integer.toString(width),', 'Integer.toString(height));', '}', '/**', '*', 'Construct', 'a', 'dimension', 'instance', 'using', 'double', 'values', 'for', 'height', 'and', 'width', '*', '*', '@param', 'width', '*', 'the', 'width', '*', '@param', 'height', '*', 'the', 'height', '*/', 'public', 'Dimension(double', 'width,', 'double', 'height)', '{', 'this(Double.toString(width),', 'Double.toString(height));', '}', 'public', 'int', 'getHeight()', '{', 'return', '(int)', 'Double.parseDouble(height);', '}', 'public', 'int', 'getWidth()', '{', 'return', '(int)', 'Double.parseDouble(width);', '}', 'public', 'String', 'getRawHeight()', '{', 'return', 'height;', '}', 'public', 'String', 'getRawWidth()', '{', 'return', 'width;', '}', '}', '```']",challenge not surrounded by ''': ,
"package abi39_0_0.org.unimodules.interfaces.sensors.services;

import abi39_0_0.org.unimodules.interfaces.sensors.SensorService;

public interface MagnetometerService extends SensorService {
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'abi39_0_0.org.unimodules.interfaces.sensors.services;', 'import', 'abi39_0_0.org.unimodules.interfaces.sensors.SensorService;', 'public', 'interface', 'MagnetometerService', 'extends', 'SensorService', '{', '}', '```']",challenge not surrounded by ''': ,
"package com.github.chrisruffalo.eeconfig.resources.configuration.extensions;

import java.io.InputStream;

import com.github.chrisruffalo.eeconfig.source.impl.BaseSource;

public class DummySource extends BaseSource {

	@Override
	public boolean available() {
		return false;
	}

	@Override
	public InputStream stream() {
		return null;
	}

	@Override
	public String getPath() {
		return null;
	}

	@Override
	public String getExtension() {
		return null;
	}

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.github.chrisruffalo.eeconfig.resources.configuration.extensions;', 'import', 'java.io.InputStream;', 'import', 'com.github.chrisruffalo.eeconfig.source.impl.BaseSource;', 'public', 'class', 'DummySource', 'extends', 'BaseSource', '{', '@Override', 'public', 'boolean', 'available()', '{', 'return', 'false;', '}', '@Override', 'public', 'InputStream', 'stream()', '{', 'return', 'null;', '}', '@Override', 'public', 'String', 'getPath()', '{', 'return', 'null;', '}', '@Override', 'public', 'String', 'getExtension()', '{', 'return', 'null;', '}', '}', '```']",challenge not surrounded by ''': ,
"package im.AfriChat.generator.scheme;

/**
 * Created by ex3ndr on 22.11.14.
 */
public class SchemeTrait implements SchemeRecord {
    private String name;
    private boolean isContainer;

    public SchemeTrait(String name, boolean isContainer) {
        this.name = name;
        this.isContainer = isContainer;
    }

    public String getName() {
        return name;
    }

    public boolean isContainer() {
        return isContainer;
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'im.AfriChat.generator.scheme;', '/**', '*', 'Created', 'by', 'ex3ndr', 'on', '22.11.14.', '*/', 'public', 'class', 'SchemeTrait', 'implements', 'SchemeRecord', '{', 'private', 'String', 'name;', 'private', 'boolean', 'isContainer;', 'public', 'SchemeTrait(String', 'name,', 'boolean', 'isContainer)', '{', 'this.name', '=', 'name;', 'this.isContainer', '=', 'isContainer;', '}', 'public', 'String', 'getName()', '{', 'return', 'name;', '}', 'public', 'boolean', 'isContainer()', '{', 'return', 'isContainer;', '}', '}', '```']",challenge not surrounded by ''': ,
"{% if messages %}
<div class=""row"">
    <div class=""columns small-12"">
        {% for message in messages %}
        <div data-alert class=""alert-box {% if message.tags %}{{ message.tags }}{% endif %}"">
            {{ message }}
            <a href=""#"" class=""close"">&times;</a>
        </div>
        {% endfor %}
    </div>
</div>
{% endif %}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```{%', 'if', 'messages', '%}', '<div', 'class=""row"">', '<div', 'class=""columns', 'small-12"">', '{%', 'for', 'message', 'in', 'messages', '%}', '<div', 'data-alert', 'class=""alert-box', '{%', 'if', 'message.tags', '%}{{', 'message.tags', '}}{%', 'endif', '%}"">', '{{', 'message', '}}', '<a', 'href=""#""', 'class=""close"">&times;</a>', '</div>', '{%', 'endfor', '%}', '</div>', '</div>', '{%', 'endif', '%}', '```']",challenge not surrounded by ''': ,
"var Wassr = { create : function(id) {

    // Get FriendsTimeline
    var friendsTimeline = function(callback) {
        var id = this.id;
        var timeline = [];
        var xhr = Ti.Network.createHTTPClient();
        xhr.open('GET', 'http://api.wassr.jp/statuses/friends_timeline.json');
        xhr.onload = function() {
            var rs = JSON.parse(this.responseText);
            for (var i=0; i < rs.length; i++) {
                var row = rs[i];
                var date = new Date();
                date.setTime(row.epoch * 1000);
                row.date = date.getFullYear() + '/' + date.getMonth() + '/' + date.getDate() + ' ' + date.getHours() + ':' + date.getMinutes();
                timeline.push(row);
            }
            callback(timeline);
        };
        xhr.send({
          id: id
        });
    };

    return Object.create({ id : id, friendsTimeline : friendsTimeline });
} };
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```var', 'Wassr', '=', '{', 'create', ':', 'function(id)', '{', '//', 'Get', 'FriendsTimeline', 'var', 'friendsTimeline', '=', 'function(callback)', '{', 'var', 'id', '=', 'this.id;', 'var', 'timeline', '=', '[];', 'var', 'xhr', '=', 'Ti.Network.createHTTPClient();', ""xhr.open('GET',"", ""'http://api.wassr.jp/statuses/friends_timeline.json');"", 'xhr.onload', '=', 'function()', '{', 'var', 'rs', '=', 'JSON.parse(this.responseText);', 'for', '(var', 'i=0;', 'i', '<', 'rs.length;', 'i++)', '{', 'var', 'row', '=', 'rs[i];', 'var', 'date', '=', 'new', 'Date();', 'date.setTime(row.epoch', '*', '1000);', 'row.date', '=', 'date.getFullYear()', '+', ""'/'"", '+', 'date.getMonth()', '+', ""'/'"", '+', 'date.getDate()', '+', ""'"", ""'"", '+', 'date.getHours()', '+', ""':'"", '+', 'date.getMinutes();', 'timeline.push(row);', '}', 'callback(timeline);', '};', 'xhr.send({', 'id:', 'id', '});', '};', 'return', 'Object.create({', 'id', ':', 'id,', 'friendsTimeline', ':', 'friendsTimeline', '});', '}', '};', '```']",challenge not surrounded by ''': ,
"package xdroid.core;

import android.content.Context;

/**
 * @author Oleksii Kropachov (o.kropachov@shamanland.com)
 */
public interface ContextOwner {
    Context getContext();
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'xdroid.core;', 'import', 'android.content.Context;', '/**', '*', '@author', 'Oleksii', 'Kropachov', '(o.kropachov@shamanland.com)', '*/', 'public', 'interface', 'ContextOwner', '{', 'Context', 'getContext();', '}', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright 2015 The original authors.
 *
 *    Licensed under the Apache License, Version 2.0 (the ""License"");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an ""AS IS"" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

package io.sundr.builder.internal.processor.generator;

import io.sundr.builder.Constants;
import io.sundr.codegen.generator.CodeGeneratorBuilder;
import io.sundr.codegen.model.JavaClazz;
import io.sundr.codegen.model.JavaClazzBuilder;
import org.junit.Test;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;

public class BuilderGeneratorTest {

    @Test
    public void testFluentTemplate() throws IOException {


        JavaClazz javaClazz = new JavaClazzBuilder()
                .withNewType()
                .withClassName(""Circle"")
                .withPackageName(""my.Test"")
                .endType()
                .addNewConstructor()
                .addNewArgument()
                .withName(""w"")
                .withNewType().withPackageName(""java.lang"").withClassName(""Integer"").endType()
                .endArgument()
                .addNewArgument()
                .withName(""w"")
                .withNewType().withPackageName(""java.lang"").withClassName(""Integer"").endType()
                .endArgument()
                .endConstructor()
                .build();

        File tmp = new File(""/tmp"");
        generate(javaClazz, tmp, ""CircleFluent.java"", Constants.DEFAULT_FLUENT_TEMPLATE_LOCATION);
        generate(javaClazz, tmp, ""CircleBuilder.java"", Constants.DEFAULT_BUILDER_TEMPLATE_LOCATION);

    }

    private static void generate(JavaClazz model, File dir, String name, String templateResource) throws IOException {
        FileWriter fluentWriter = null;
        try {
            fluentWriter = new FileWriter(new File(dir, name));
            new CodeGeneratorBuilder<JavaClazz>()
                    .withModel(model)
                    .withWriter(fluentWriter)
                    .withTemplateResource(templateResource)
                    .build().generate();
        } catch (IOException e) {
            throw new RuntimeException(e);
        } finally {
            if (fluentWriter != null) {
                fluentWriter.close();
            }
        }
    }
}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '2015', 'The', 'original', 'authors.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'io.sundr.builder.internal.processor.generator;', 'import', 'io.sundr.builder.Constants;', 'import', 'io.sundr.codegen.generator.CodeGeneratorBuilder;', 'import', 'io.sundr.codegen.model.JavaClazz;', 'import', 'io.sundr.codegen.model.JavaClazzBuilder;', 'import', 'org.junit.Test;', 'import', 'java.io.File;', 'import', 'java.io.FileWriter;', 'import', 'java.io.IOException;', 'public', 'class', 'BuilderGeneratorTest', '{', '@Test', 'public', 'void', 'testFluentTemplate()', 'throws', 'IOException', '{', 'JavaClazz', 'javaClazz', '=', 'new', 'JavaClazzBuilder()', '.withNewType()', '.withClassName(""Circle"")', '.withPackageName(""my.Test"")', '.endType()', '.addNewConstructor()', '.addNewArgument()', '.withName(""w"")', '.withNewType().withPackageName(""java.lang"").withClassName(""Integer"").endType()', '.endArgument()', '.addNewArgument()', '.withName(""w"")', '.withNewType().withPackageName(""java.lang"").withClassName(""Integer"").endType()', '.endArgument()', '.endConstructor()', '.build();', 'File', 'tmp', '=', 'new', 'File(""/tmp"");', 'generate(javaClazz,', 'tmp,', '""CircleFluent.java"",', 'Constants.DEFAULT_FLUENT_TEMPLATE_LOCATION);', 'generate(javaClazz,', 'tmp,', '""CircleBuilder.java"",', 'Constants.DEFAULT_BUILDER_TEMPLATE_LOCATION);', '}', 'private', 'static', 'void', 'generate(JavaClazz', 'model,', 'File', 'dir,', 'String', 'name,', 'String', 'templateResource)', 'throws', 'IOException', '{', 'FileWriter', 'fluentWriter', '=', 'null;', 'try', '{', 'fluentWriter', '=', 'new', 'FileWriter(new', 'File(dir,', 'name));', 'new', 'CodeGeneratorBuilder<JavaClazz>()', '.withModel(model)', '.withWriter(fluentWriter)', '.withTemplateResource(templateResource)', '.build().generate();', '}', 'catch', '(IOException', 'e)', '{', 'throw', 'new', 'RuntimeException(e);', '}', 'finally', '{', 'if', '(fluentWriter', '!=', 'null)', '{', 'fluentWriter.close();', '}', '}', '}', '}```']",challenge not surrounded by ''': ,
"dojo.provide(""dojo.widget.ShowAction"");

dojo.require(""dojo.widget.*"");
dojo.require(""dojo.lang.common"");

dojo.widget.ShowAction = function(){}
dojo.lang.extend(dojo.widget.ShowAction, {
	on: """",
	action: """",
	duration: 0,
	from: """",
	to: """",
	auto: ""false""
});

dojo.requireAfterIf(""html"", ""dojo.widget.html.ShowAction"");","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```dojo.provide(""dojo.widget.ShowAction"");', 'dojo.require(""dojo.widget.*"");', 'dojo.require(""dojo.lang.common"");', 'dojo.widget.ShowAction', '=', 'function(){}', 'dojo.lang.extend(dojo.widget.ShowAction,', '{', 'on:', '"""",', 'action:', '"""",', 'duration:', '0,', 'from:', '"""",', 'to:', '"""",', 'auto:', '""false""', '});', 'dojo.requireAfterIf(""html"",', '""dojo.widget.html.ShowAction"");```']",challenge not surrounded by ''': ,
"import React from 'react';
import { storiesOf, action, linkTo } from '@storybook/react';
import Button from './Button';
import Welcome from './Welcome';

storiesOf('Welcome', module).add('to Storybook', () => <Welcome showApp={linkTo('Button')} />);

storiesOf('Button', module)
  .add('with text', () => <Button onClick={action('clicked')}>Hello Button</Button>)
  .add('with some emoji', () => <Button onClick={action('clicked')}>😀 😎 👍 💯</Button>);
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'React', 'from', ""'react';"", 'import', '{', 'storiesOf,', 'action,', 'linkTo', '}', 'from', ""'@storybook/react';"", 'import', 'Button', 'from', ""'./Button';"", 'import', 'Welcome', 'from', ""'./Welcome';"", ""storiesOf('Welcome',"", ""module).add('to"", ""Storybook',"", '()', '=>', '<Welcome', ""showApp={linkTo('Button')}"", '/>);', ""storiesOf('Button',"", 'module)', "".add('with"", ""text',"", '()', '=>', '<Button', ""onClick={action('clicked')}>Hello"", 'Button</Button>)', "".add('with"", 'some', ""emoji',"", '()', '=>', '<Button', ""onClick={action('clicked')}>😀"", '😎', '👍', '💯</Button>);', '```']",challenge not surrounded by ''': ,
"module.exports.getZones = getZones;

function getZones(client){
    return [
        {
            title: 'Title 1',
            description: 'Description 1',
            startTime: 'Start time 1',
            duration: 5,
            humidity: 50
        },
        {
            title: 'Title 2',
            description: 'Description 2',
            startTime: 'Start time 2',
            duration: 15,
            humidity: 30
        },
        {
            title: 'Title 3',
            description: 'Description 3',
            startTime: 'Start time 3',
            duration: 10,
            humidity: 40
        },
        {
            title: 'Title 4',
            description: 'Description 4',
            startTime: 'Start time 4',
            duration: 10,
            humidity: 40
        }
    ]
}

function createZone(grassZone) {

}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```module.exports.getZones', '=', 'getZones;', 'function', 'getZones(client){', 'return', '[', '{', 'title:', ""'Title"", ""1',"", 'description:', ""'Description"", ""1',"", 'startTime:', ""'Start"", 'time', ""1',"", 'duration:', '5,', 'humidity:', '50', '},', '{', 'title:', ""'Title"", ""2',"", 'description:', ""'Description"", ""2',"", 'startTime:', ""'Start"", 'time', ""2',"", 'duration:', '15,', 'humidity:', '30', '},', '{', 'title:', ""'Title"", ""3',"", 'description:', ""'Description"", ""3',"", 'startTime:', ""'Start"", 'time', ""3',"", 'duration:', '10,', 'humidity:', '40', '},', '{', 'title:', ""'Title"", ""4',"", 'description:', ""'Description"", ""4',"", 'startTime:', ""'Start"", 'time', ""4',"", 'duration:', '10,', 'humidity:', '40', '}', ']', '}', 'function', 'createZone(grassZone)', '{', '}```']",challenge not surrounded by ''': ,
"/**
 * Copyright (C) 2018 - present McLeod Moores Software Limited.  All rights reserved.
 */
package com.opengamma.transport.jaxrs;

import static org.testng.Assert.assertEquals;
import static org.testng.Assert.assertNotEquals;

import org.testng.annotations.Test;

import com.opengamma.util.test.TestGroup;

/**
 * Tests for {@link FudgeResponse}.
 */
@Test(groups = TestGroup.UNIT)
public class FudgeResponseTest {
  private static final Object VALUE = ""value"";
  private static final FudgeResponse RESPONSE = FudgeResponse.of(VALUE);

  /**
   * Tests the unwrap method.
   */
  @Test
  public void testUnwrap() {
    assertEquals(FudgeResponse.unwrap(VALUE), VALUE);
    assertEquals(FudgeResponse.unwrap(RESPONSE), VALUE);
  }

  /**
   * Tests the object.
   */
  @Test
  public void testObject() {
    assertEquals(RESPONSE, RESPONSE);
    assertNotEquals(null, RESPONSE);
    assertNotEquals(VALUE, RESPONSE);
    assertEquals(RESPONSE.getValue(), VALUE);
    assertEquals(RESPONSE.toString(), ""FudgeResponse[value]"");
    FudgeResponse other = FudgeResponse.of(VALUE);
    assertEquals(RESPONSE, other);
    assertEquals(RESPONSE.hashCode(), other.hashCode());
    other = FudgeResponse.of(""other"");
    assertNotEquals(RESPONSE, other);
  }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', 'Copyright', '(C)', '2018', '-', 'present', 'McLeod', 'Moores', 'Software', 'Limited.', 'All', 'rights', 'reserved.', '*/', 'package', 'com.opengamma.transport.jaxrs;', 'import', 'static', 'org.testng.Assert.assertEquals;', 'import', 'static', 'org.testng.Assert.assertNotEquals;', 'import', 'org.testng.annotations.Test;', 'import', 'com.opengamma.util.test.TestGroup;', '/**', '*', 'Tests', 'for', '{@link', 'FudgeResponse}.', '*/', '@Test(groups', '=', 'TestGroup.UNIT)', 'public', 'class', 'FudgeResponseTest', '{', 'private', 'static', 'final', 'Object', 'VALUE', '=', '""value"";', 'private', 'static', 'final', 'FudgeResponse', 'RESPONSE', '=', 'FudgeResponse.of(VALUE);', '/**', '*', 'Tests', 'the', 'unwrap', 'method.', '*/', '@Test', 'public', 'void', 'testUnwrap()', '{', 'assertEquals(FudgeResponse.unwrap(VALUE),', 'VALUE);', 'assertEquals(FudgeResponse.unwrap(RESPONSE),', 'VALUE);', '}', '/**', '*', 'Tests', 'the', 'object.', '*/', '@Test', 'public', 'void', 'testObject()', '{', 'assertEquals(RESPONSE,', 'RESPONSE);', 'assertNotEquals(null,', 'RESPONSE);', 'assertNotEquals(VALUE,', 'RESPONSE);', 'assertEquals(RESPONSE.getValue(),', 'VALUE);', 'assertEquals(RESPONSE.toString(),', '""FudgeResponse[value]"");', 'FudgeResponse', 'other', '=', 'FudgeResponse.of(VALUE);', 'assertEquals(RESPONSE,', 'other);', 'assertEquals(RESPONSE.hashCode(),', 'other.hashCode());', 'other', '=', 'FudgeResponse.of(""other"");', 'assertNotEquals(RESPONSE,', 'other);', '}', '}', '```']",challenge not surrounded by ''': ,
"/**
 *
 * $Id$
 */
package IFML.Core.validation;


/**
 * A sample validator interface for {@link IFML.Core.Annotation}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface AnnotationValidator {
	boolean validate();

	boolean validateText(String value);
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', '*', '$Id$', '*/', 'package', 'IFML.Core.validation;', '/**', '*', 'A', 'sample', 'validator', 'interface', 'for', '{@link', 'IFML.Core.Annotation}.', '*', 'This', ""doesn't"", 'really', 'do', 'anything,', 'and', ""it's"", 'not', 'a', 'real', 'EMF', 'artifact.', '*', 'It', 'was', 'generated', 'by', 'the', 'org.eclipse.emf.examples.generator.validator', 'plug-in', 'to', 'illustrate', 'how', ""EMF's"", 'code', 'generator', 'can', 'be', 'extended.', '*', 'This', 'can', 'be', 'disabled', 'with', '-vmargs', '-Dorg.eclipse.emf.examples.generator.validator=false.', '*/', 'public', 'interface', 'AnnotationValidator', '{', 'boolean', 'validate();', 'boolean', 'validateText(String', 'value);', '}', '```']",challenge not surrounded by ''': ,
"// Copyright 2017-2021, University of Colorado Boulder

/**
 * Shows the total area, handling alignment
 *
 * NOTE: This type is designed to be persistent, and will not need to release references to avoid memory leaks.
 *
 * @author Jonathan Olson <jonathan.olson@colorado.edu>
 */

import Bounds2 from '../../../../dot/js/Bounds2.js';
import StringUtils from '../../../../phetcommon/js/util/StringUtils.js';
import MathSymbols from '../../../../scenery-phet/js/MathSymbols.js';
import { AlignBox } from '../../../../scenery/js/imports.js';
import { HBox } from '../../../../scenery/js/imports.js';
import { Node } from '../../../../scenery/js/imports.js';
import { RichText } from '../../../../scenery/js/imports.js';
import { Text } from '../../../../scenery/js/imports.js';
import Panel from '../../../../sun/js/Panel.js';
import areaModelCommon from '../../areaModelCommon.js';
import areaModelCommonStrings from '../../areaModelCommonStrings.js';
import AreaModelCommonConstants from '../AreaModelCommonConstants.js';
import Term from '../model/Term.js';
import AreaModelCommonColors from './AreaModelCommonColors.js';

const areaString = areaModelCommonStrings.area;
const areaEqualsPatternString = areaModelCommonStrings.a11y.areaEqualsPattern;

class TotalAreaNode extends Node {
  /**
   * @param {Property.<Polynomial|null>} totalAreaProperty
   * @param {boolean} isProportional - Whether the area is shown as proportional (instead of generic)
   * @param {string} maximumWidthString - If proportional
   * @param {boolean} useTileLikeBackground - Whether the ""tile"" color should be used with an area background (if any)
   */
  constructor( totalAreaProperty, isProportional, maximumWidthString, useTileLikeBackground ) {

    // If powers of x are supported, we need to have a slightly different initial height so we can align-bottom.
    const areaText = new RichText( Term.getLargestGenericString( true, 3 ), {
      font: AreaModelCommonConstants.TOTAL_AREA_VALUE_FONT
    } );

    let areaNode;
    if ( isProportional ) {

      // Has numeric display, so it doesn't need maxWidth
      areaText.text = maximumWidthString;
      areaNode = new HBox( {
        spacing: 8,
        children: [
          new Text( areaString, { font: AreaModelCommonConstants.TOTAL_AREA_LABEL_FONT } ),
          new Text( MathSymbols.EQUAL_TO, { font: AreaModelCommonConstants.TOTAL_AREA_LABEL_FONT } ),
          // AlignBox it so that it is always centered and keeps the same bounds
          new Panel( new AlignBox( areaText, { alignBounds: areaText.bounds.copy(), yAlign: 'bottom' } ), {
            fill: useTileLikeBackground
                  ? AreaModelCommonColors.smallTileProperty
                  : AreaModelCommonColors.proportionalActiveAreaBackgroundProperty
          } )
        ]
      } );
    }
    else {
      areaText.maxWidth = AreaModelCommonConstants.PANEL_INTERIOR_MAX;

      // AlignBox it so that it is always centered and keeps the same bounds
      areaNode = new AlignBox( areaText, { alignBounds: new Bounds2( 0, 0, AreaModelCommonConstants.PANEL_INTERIOR_MAX, areaText.height ) } );
    }

    super( {
      children: [
        areaNode
      ],
      maxWidth: AreaModelCommonConstants.PANEL_INTERIOR_MAX,

      // pdom
      tagName: 'p'
    } );

    // Update the text.
    totalAreaProperty.link( polynomial => {
      const labelString = polynomial === null ? '?' : polynomial.toRichString();
      areaText.text = labelString;
      this.innerContent = StringUtils.fillIn( areaEqualsPatternString, {
        area: labelString
      } );
    } );
  }
}

areaModelCommon.register( 'TotalAreaNode', TotalAreaNode );

export default TotalAreaNode;","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//', 'Copyright', '2017-2021,', 'University', 'of', 'Colorado', 'Boulder', '/**', '*', 'Shows', 'the', 'total', 'area,', 'handling', 'alignment', '*', '*', 'NOTE:', 'This', 'type', 'is', 'designed', 'to', 'be', 'persistent,', 'and', 'will', 'not', 'need', 'to', 'release', 'references', 'to', 'avoid', 'memory', 'leaks.', '*', '*', '@author', 'Jonathan', 'Olson', '<jonathan.olson@colorado.edu>', '*/', 'import', 'Bounds2', 'from', ""'../../../../dot/js/Bounds2.js';"", 'import', 'StringUtils', 'from', ""'../../../../phetcommon/js/util/StringUtils.js';"", 'import', 'MathSymbols', 'from', ""'../../../../scenery-phet/js/MathSymbols.js';"", 'import', '{', 'AlignBox', '}', 'from', ""'../../../../scenery/js/imports.js';"", 'import', '{', 'HBox', '}', 'from', ""'../../../../scenery/js/imports.js';"", 'import', '{', 'Node', '}', 'from', ""'../../../../scenery/js/imports.js';"", 'import', '{', 'RichText', '}', 'from', ""'../../../../scenery/js/imports.js';"", 'import', '{', 'Text', '}', 'from', ""'../../../../scenery/js/imports.js';"", 'import', 'Panel', 'from', ""'../../../../sun/js/Panel.js';"", 'import', 'areaModelCommon', 'from', ""'../../areaModelCommon.js';"", 'import', 'areaModelCommonStrings', 'from', ""'../../areaModelCommonStrings.js';"", 'import', 'AreaModelCommonConstants', 'from', ""'../AreaModelCommonConstants.js';"", 'import', 'Term', 'from', ""'../model/Term.js';"", 'import', 'AreaModelCommonColors', 'from', ""'./AreaModelCommonColors.js';"", 'const', 'areaString', '=', 'areaModelCommonStrings.area;', 'const', 'areaEqualsPatternString', '=', 'areaModelCommonStrings.a11y.areaEqualsPattern;', 'class', 'TotalAreaNode', 'extends', 'Node', '{', '/**', '*', '@param', '{Property.<Polynomial|null>}', 'totalAreaProperty', '*', '@param', '{boolean}', 'isProportional', '-', 'Whether', 'the', 'area', 'is', 'shown', 'as', 'proportional', '(instead', 'of', 'generic)', '*', '@param', '{string}', 'maximumWidthString', '-', 'If', 'proportional', '*', '@param', '{boolean}', 'useTileLikeBackground', '-', 'Whether', 'the', '""tile""', 'color', 'should', 'be', 'used', 'with', 'an', 'area', 'background', '(if', 'any)', '*/', 'constructor(', 'totalAreaProperty,', 'isProportional,', 'maximumWidthString,', 'useTileLikeBackground', ')', '{', '//', 'If', 'powers', 'of', 'x', 'are', 'supported,', 'we', 'need', 'to', 'have', 'a', 'slightly', 'different', 'initial', 'height', 'so', 'we', 'can', 'align-bottom.', 'const', 'areaText', '=', 'new', 'RichText(', 'Term.getLargestGenericString(', 'true,', '3', '),', '{', 'font:', 'AreaModelCommonConstants.TOTAL_AREA_VALUE_FONT', '}', ');', 'let', 'areaNode;', 'if', '(', 'isProportional', ')', '{', '//', 'Has', 'numeric', 'display,', 'so', 'it', ""doesn't"", 'need', 'maxWidth', 'areaText.text', '=', 'maximumWidthString;', 'areaNode', '=', 'new', 'HBox(', '{', 'spacing:', '8,', 'children:', '[', 'new', 'Text(', 'areaString,', '{', 'font:', 'AreaModelCommonConstants.TOTAL_AREA_LABEL_FONT', '}', '),', 'new', 'Text(', 'MathSymbols.EQUAL_TO,', '{', 'font:', 'AreaModelCommonConstants.TOTAL_AREA_LABEL_FONT', '}', '),', '//', 'AlignBox', 'it', 'so', 'that', 'it', 'is', 'always', 'centered', 'and', 'keeps', 'the', 'same', 'bounds', 'new', 'Panel(', 'new', 'AlignBox(', 'areaText,', '{', 'alignBounds:', 'areaText.bounds.copy(),', 'yAlign:', ""'bottom'"", '}', '),', '{', 'fill:', 'useTileLikeBackground', '?', 'AreaModelCommonColors.smallTileProperty', ':', 'AreaModelCommonColors.proportionalActiveAreaBackgroundProperty', '}', ')', ']', '}', ');', '}', 'else', '{', 'areaText.maxWidth', '=', 'AreaModelCommonConstants.PANEL_INTERIOR_MAX;', '//', 'AlignBox', 'it', 'so', 'that', 'it', 'is', 'always', 'centered', 'and', 'keeps', 'the', 'same', 'bounds', 'areaNode', '=', 'new', 'AlignBox(', 'areaText,', '{', 'alignBounds:', 'new', 'Bounds2(', '0,', '0,', 'AreaModelCommonConstants.PANEL_INTERIOR_MAX,', 'areaText.height', ')', '}', ');', '}', 'super(', '{', 'children:', '[', 'areaNode', '],', 'maxWidth:', 'AreaModelCommonConstants.PANEL_INTERIOR_MAX,', '//', 'pdom', 'tagName:', ""'p'"", '}', ');', '//', 'Update', 'the', 'text.', 'totalAreaProperty.link(', 'polynomial', '=>', '{', 'const', 'labelString', '=', 'polynomial', '===', 'null', '?', ""'?'"", ':', 'polynomial.toRichString();', 'areaText.text', '=', 'labelString;', 'this.innerContent', '=', 'StringUtils.fillIn(', 'areaEqualsPatternString,', '{', 'area:', 'labelString', '}', ');', '}', ');', '}', '}', 'areaModelCommon.register(', ""'TotalAreaNode',"", 'TotalAreaNode', ');', 'export', 'default', 'TotalAreaNode;```']",challenge not surrounded by ''': ,
"package de.invesdwin.util.collections.loadingcache.historical.query.internal.core.impl;

import javax.annotation.concurrent.NotThreadSafe;

import de.invesdwin.util.collections.loadingcache.historical.IHistoricalEntry;
import de.invesdwin.util.collections.loadingcache.historical.query.internal.HistoricalCacheAssertValue;
import de.invesdwin.util.collections.loadingcache.historical.query.internal.core.IHistoricalCacheQueryCore;
import de.invesdwin.util.collections.loadingcache.historical.query.internal.core.IHistoricalCacheQueryInternalMethods;
import de.invesdwin.util.time.date.FDate;

@NotThreadSafe
public class GetPreviousEntryQueryImpl<V> {

    private final IHistoricalCacheQueryCore<V> core;
    private final FDate key;
    private FDate previousKey = null;
    private IHistoricalEntry<V> previousEntry = null;
    private int iterations = 0;
    private final int shiftBackUnits;
    private final IHistoricalCacheQueryInternalMethods<V> query;
    private boolean duplicateEncountered = false;

    public GetPreviousEntryQueryImpl(final IHistoricalCacheQueryCore<V> core,
            final IHistoricalCacheQueryInternalMethods<V> query, final FDate key, final int shiftBackUnits) {
        this.core = core;
        this.query = query;
        this.key = key;
        this.previousKey = key;
        this.shiftBackUnits = shiftBackUnits;
    }

    public void setIterations(final int iterations) {
        this.iterations = iterations;
    }

    public boolean iterationFinished() {
        if (iterations <= shiftBackUnits) {
            if (!duplicateEncountered) {
                /*
                 * if key of value == key, the same key would be returned on the next call
                 * 
                 * we decrement by one unit to get the previous key
                 */

                final FDate previousPreviousKey;
                if (iterations == 0) {
                    previousPreviousKey = previousKey;
                } else {
                    previousPreviousKey = core.getParent().calculatePreviousKey(previousKey);
                }
                if (previousPreviousKey == null) {
                    return true;
                }
                //the key of the value is the relevant one
                final IHistoricalEntry<V> potentialPreviousPreviousEntry = core.getEntry(query, previousPreviousKey,
                        HistoricalCacheAssertValue.ASSERT_VALUE_WITH_FUTURE);
                final IHistoricalEntry<V> previousPreviousEntry;
                if (potentialPreviousPreviousEntry != null) {
                    previousPreviousEntry = query.getAssertValue().assertValue(core.getParent(), key,
                            potentialPreviousPreviousEntry);
                } else {
                    previousPreviousEntry = null;
                }
                if (previousPreviousEntry == null) {
                    if (previousKey.equals(key)) {
                        previousEntry = null;
                        return true;
                    } else {
                        return true;
                    }
                } else {
                    final FDate actualPreviousPreviousKey = previousPreviousEntry.getKey();
                    if (iterations > 0 && actualPreviousPreviousKey.equals(previousKey)) {
                        duplicateEncountered = true;
                    }

                    previousKey = actualPreviousPreviousKey;
                    previousEntry = previousPreviousEntry;
                }
            }
            iterations++;
            return false;
        }
        return true;
    }

    public IHistoricalEntry<V> getResult() {
        return previousEntry;
    }

    public int getIterations() {
        return iterations;
    }

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'de.invesdwin.util.collections.loadingcache.historical.query.internal.core.impl;', 'import', 'javax.annotation.concurrent.NotThreadSafe;', 'import', 'de.invesdwin.util.collections.loadingcache.historical.IHistoricalEntry;', 'import', 'de.invesdwin.util.collections.loadingcache.historical.query.internal.HistoricalCacheAssertValue;', 'import', 'de.invesdwin.util.collections.loadingcache.historical.query.internal.core.IHistoricalCacheQueryCore;', 'import', 'de.invesdwin.util.collections.loadingcache.historical.query.internal.core.IHistoricalCacheQueryInternalMethods;', 'import', 'de.invesdwin.util.time.date.FDate;', '@NotThreadSafe', 'public', 'class', 'GetPreviousEntryQueryImpl<V>', '{', 'private', 'final', 'IHistoricalCacheQueryCore<V>', 'core;', 'private', 'final', 'FDate', 'key;', 'private', 'FDate', 'previousKey', '=', 'null;', 'private', 'IHistoricalEntry<V>', 'previousEntry', '=', 'null;', 'private', 'int', 'iterations', '=', '0;', 'private', 'final', 'int', 'shiftBackUnits;', 'private', 'final', 'IHistoricalCacheQueryInternalMethods<V>', 'query;', 'private', 'boolean', 'duplicateEncountered', '=', 'false;', 'public', 'GetPreviousEntryQueryImpl(final', 'IHistoricalCacheQueryCore<V>', 'core,', 'final', 'IHistoricalCacheQueryInternalMethods<V>', 'query,', 'final', 'FDate', 'key,', 'final', 'int', 'shiftBackUnits)', '{', 'this.core', '=', 'core;', 'this.query', '=', 'query;', 'this.key', '=', 'key;', 'this.previousKey', '=', 'key;', 'this.shiftBackUnits', '=', 'shiftBackUnits;', '}', 'public', 'void', 'setIterations(final', 'int', 'iterations)', '{', 'this.iterations', '=', 'iterations;', '}', 'public', 'boolean', 'iterationFinished()', '{', 'if', '(iterations', '<=', 'shiftBackUnits)', '{', 'if', '(!duplicateEncountered)', '{', '/*', '*', 'if', 'key', 'of', 'value', '==', 'key,', 'the', 'same', 'key', 'would', 'be', 'returned', 'on', 'the', 'next', 'call', '*', '*', 'we', 'decrement', 'by', 'one', 'unit', 'to', 'get', 'the', 'previous', 'key', '*/', 'final', 'FDate', 'previousPreviousKey;', 'if', '(iterations', '==', '0)', '{', 'previousPreviousKey', '=', 'previousKey;', '}', 'else', '{', 'previousPreviousKey', '=', 'core.getParent().calculatePreviousKey(previousKey);', '}', 'if', '(previousPreviousKey', '==', 'null)', '{', 'return', 'true;', '}', '//the', 'key', 'of', 'the', 'value', 'is', 'the', 'relevant', 'one', 'final', 'IHistoricalEntry<V>', 'potentialPreviousPreviousEntry', '=', 'core.getEntry(query,', 'previousPreviousKey,', 'HistoricalCacheAssertValue.ASSERT_VALUE_WITH_FUTURE);', 'final', 'IHistoricalEntry<V>', 'previousPreviousEntry;', 'if', '(potentialPreviousPreviousEntry', '!=', 'null)', '{', 'previousPreviousEntry', '=', 'query.getAssertValue().assertValue(core.getParent(),', 'key,', 'potentialPreviousPreviousEntry);', '}', 'else', '{', 'previousPreviousEntry', '=', 'null;', '}', 'if', '(previousPreviousEntry', '==', 'null)', '{', 'if', '(previousKey.equals(key))', '{', 'previousEntry', '=', 'null;', 'return', 'true;', '}', 'else', '{', 'return', 'true;', '}', '}', 'else', '{', 'final', 'FDate', 'actualPreviousPreviousKey', '=', 'previousPreviousEntry.getKey();', 'if', '(iterations', '>', '0', '&&', 'actualPreviousPreviousKey.equals(previousKey))', '{', 'duplicateEncountered', '=', 'true;', '}', 'previousKey', '=', 'actualPreviousPreviousKey;', 'previousEntry', '=', 'previousPreviousEntry;', '}', '}', 'iterations++;', 'return', 'false;', '}', 'return', 'true;', '}', 'public', 'IHistoricalEntry<V>', 'getResult()', '{', 'return', 'previousEntry;', '}', 'public', 'int', 'getIterations()', '{', 'return', 'iterations;', '}', '}', '```']",challenge not surrounded by ''': ,
"package edu.hm.hafner.analysis.parser;

import org.junit.jupiter.api.Test;

import edu.hm.hafner.analysis.Issue;
import edu.hm.hafner.analysis.Issues;
import edu.hm.hafner.analysis.Priority;
import static edu.hm.hafner.analysis.assertj.IssuesAssert.*;
import static edu.hm.hafner.analysis.assertj.SoftAssertions.*;

/**
 * Tests the class {@link GoLintParser}.
 */
public class GoLintParserTest extends ParserTester {
    private static final String CATEGORY = DEFAULT_CATEGORY;

    /**
     * Parses a file with multiple golint warnings.
     */
    @Test
    public void testWarningsParser() {
        Issues<Issue> warnings = new GoLintParser().parse(openFile());

        assertThat(warnings).hasSize(7);

        assertSoftly(softly -> {
            softly.assertThat(warnings.get(0))
                    .hasPriority(Priority.NORMAL)
                    .hasCategory(CATEGORY)
                    .hasLineStart(64)
                    .hasLineEnd(64)
                    .hasMessage(""exported var ErrCloseSent should have comment or be unexported"")
                    .hasFileName(""conn.go"");

            softly.assertThat(warnings.get(1))
                    .hasPriority(Priority.NORMAL)
                    .hasCategory(CATEGORY)
                    .hasLineStart(104)
                    .hasLineEnd(104)
                    .hasMessage(""should replace pos += 1 with pos++"")
                    .hasFileName(""conn.go"");

            softly.assertThat(warnings.get(2))
                    .hasPriority(Priority.NORMAL)
                    .hasCategory(CATEGORY)
                    .hasLineStart(305)
                    .hasLineEnd(305)
                    .hasMessage(""should replace c.writeSeq += 1 with c.writeSeq++"")
                    .hasFileName(""conn.go"");

            softly.assertThat(warnings.get(3))
                    .hasPriority(Priority.NORMAL)
                    .hasCategory(CATEGORY)
                    .hasLineStart(360)
                    .hasLineEnd(360)
                    .hasMessage(""should replace c.writeSeq += 1 with c.writeSeq++"")
                    .hasFileName(""conn.go"");

            softly.assertThat(warnings.get(4))
                    .hasPriority(Priority.NORMAL)
                    .hasCategory(CATEGORY)
                    .hasLineStart(669)
                    .hasLineEnd(669)
                    .hasMessage(""should replace c.readSeq += 1 with c.readSeq++"")
                    .hasFileName(""conn.go"");

            softly.assertThat(warnings.get(5))
                    .hasPriority(Priority.NORMAL)
                    .hasCategory(CATEGORY)
                    .hasLineStart(706)
                    .hasLineEnd(706)
                    .hasMessage(""should replace r.c.readSeq += 1 with r.c.readSeq++"")
                    .hasFileName(""conn.go"");

            softly.assertThat(warnings.get(6))
                    .hasPriority(Priority.NORMAL)
                    .hasCategory(CATEGORY)
                    .hasLineStart(18)
                    .hasLineEnd(18)
                    .hasMessage(""should omit type net.Error from declaration of var timeoutErrImplementsNetError; it will be inferred from the right-hand side"")
                    .hasFileName(""conn_test.go"");
        });
    }


    @Override
    protected String getWarningsFile() {
        return ""golint.txt"";
    }
}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'edu.hm.hafner.analysis.parser;', 'import', 'org.junit.jupiter.api.Test;', 'import', 'edu.hm.hafner.analysis.Issue;', 'import', 'edu.hm.hafner.analysis.Issues;', 'import', 'edu.hm.hafner.analysis.Priority;', 'import', 'static', 'edu.hm.hafner.analysis.assertj.IssuesAssert.*;', 'import', 'static', 'edu.hm.hafner.analysis.assertj.SoftAssertions.*;', '/**', '*', 'Tests', 'the', 'class', '{@link', 'GoLintParser}.', '*/', 'public', 'class', 'GoLintParserTest', 'extends', 'ParserTester', '{', 'private', 'static', 'final', 'String', 'CATEGORY', '=', 'DEFAULT_CATEGORY;', '/**', '*', 'Parses', 'a', 'file', 'with', 'multiple', 'golint', 'warnings.', '*/', '@Test', 'public', 'void', 'testWarningsParser()', '{', 'Issues<Issue>', 'warnings', '=', 'new', 'GoLintParser().parse(openFile());', 'assertThat(warnings).hasSize(7);', 'assertSoftly(softly', '->', '{', 'softly.assertThat(warnings.get(0))', '.hasPriority(Priority.NORMAL)', '.hasCategory(CATEGORY)', '.hasLineStart(64)', '.hasLineEnd(64)', '.hasMessage(""exported', 'var', 'ErrCloseSent', 'should', 'have', 'comment', 'or', 'be', 'unexported"")', '.hasFileName(""conn.go"");', 'softly.assertThat(warnings.get(1))', '.hasPriority(Priority.NORMAL)', '.hasCategory(CATEGORY)', '.hasLineStart(104)', '.hasLineEnd(104)', '.hasMessage(""should', 'replace', 'pos', '+=', '1', 'with', 'pos++"")', '.hasFileName(""conn.go"");', 'softly.assertThat(warnings.get(2))', '.hasPriority(Priority.NORMAL)', '.hasCategory(CATEGORY)', '.hasLineStart(305)', '.hasLineEnd(305)', '.hasMessage(""should', 'replace', 'c.writeSeq', '+=', '1', 'with', 'c.writeSeq++"")', '.hasFileName(""conn.go"");', 'softly.assertThat(warnings.get(3))', '.hasPriority(Priority.NORMAL)', '.hasCategory(CATEGORY)', '.hasLineStart(360)', '.hasLineEnd(360)', '.hasMessage(""should', 'replace', 'c.writeSeq', '+=', '1', 'with', 'c.writeSeq++"")', '.hasFileName(""conn.go"");', 'softly.assertThat(warnings.get(4))', '.hasPriority(Priority.NORMAL)', '.hasCategory(CATEGORY)', '.hasLineStart(669)', '.hasLineEnd(669)', '.hasMessage(""should', 'replace', 'c.readSeq', '+=', '1', 'with', 'c.readSeq++"")', '.hasFileName(""conn.go"");', 'softly.assertThat(warnings.get(5))', '.hasPriority(Priority.NORMAL)', '.hasCategory(CATEGORY)', '.hasLineStart(706)', '.hasLineEnd(706)', '.hasMessage(""should', 'replace', 'r.c.readSeq', '+=', '1', 'with', 'r.c.readSeq++"")', '.hasFileName(""conn.go"");', 'softly.assertThat(warnings.get(6))', '.hasPriority(Priority.NORMAL)', '.hasCategory(CATEGORY)', '.hasLineStart(18)', '.hasLineEnd(18)', '.hasMessage(""should', 'omit', 'type', 'net.Error', 'from', 'declaration', 'of', 'var', 'timeoutErrImplementsNetError;', 'it', 'will', 'be', 'inferred', 'from', 'the', 'right-hand', 'side"")', '.hasFileName(""conn_test.go"");', '});', '}', '@Override', 'protected', 'String', 'getWarningsFile()', '{', 'return', '""golint.txt"";', '}', '}```']",challenge not surrounded by ''': ,
"/*
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */

package com.skelril.skree.content.zone.group.freakyfour.boss.bossmove;

import com.flowpowered.math.vector.Vector3d;
import com.skelril.nitro.combat.PlayerCombatParser;
import com.skelril.nitro.entity.EntityDirectionUtil;
import com.skelril.nitro.numeric.MathExt;
import com.skelril.nitro.probability.Probability;
import com.skelril.openboss.Boss;
import com.skelril.openboss.Instruction;
import com.skelril.openboss.condition.DamagedCondition;
import com.skelril.skree.SkreePlugin;
import com.skelril.skree.content.zone.ZoneBossDetail;
import com.skelril.skree.content.zone.group.freakyfour.FreakyFourConfig;
import com.skelril.skree.content.zone.group.freakyfour.FreakyFourInstance;
import org.spongepowered.api.entity.Entity;
import org.spongepowered.api.entity.living.Living;
import org.spongepowered.api.entity.living.monster.Skeleton;
import org.spongepowered.api.entity.living.player.Player;
import org.spongepowered.api.event.cause.entity.damage.source.IndirectEntityDamageSource;
import org.spongepowered.api.event.entity.DamageEntityEvent;
import org.spongepowered.api.scheduler.Task;

import java.util.Optional;

public class BackTeleportInstruction implements Instruction<DamagedCondition, Boss<Living, ZoneBossDetail<FreakyFourInstance>>> {

  private FreakyFourConfig config;

  public BackTeleportInstruction(FreakyFourConfig config) {
    this.config = config;
  }

  private void throwBack(Living entity) {
    Vector3d vel = EntityDirectionUtil.getFacingVector(entity);
    vel = vel.mul(-Probability.getRangedRandom(1.2, 1.5));
    vel = new Vector3d(vel.getX(), MathExt.bound(vel.getY(), .175, .8), vel.getZ());
    entity.setVelocity(vel);
  }

  @Override
  public Optional<Instruction<DamagedCondition, Boss<Living, ZoneBossDetail<FreakyFourInstance>>>> apply(
      DamagedCondition damagedCondition, Boss<Living, ZoneBossDetail<FreakyFourInstance>> livingZoneBossDetailBoss
  ) {
    DamageEntityEvent event = damagedCondition.getEvent();

    new PlayerCombatParser() {
      @Override
      public void processPlayerAttack(Player attacker, Living defender) {
        boolean backTeleport = Probability.getChance(config.backTeleport);
        if (backTeleport || damagedCondition.getDamageSource().get() instanceof IndirectEntityDamageSource) {
          double distSQ = 2;
          double maxDist = 1;

          if (defender instanceof Skeleton) {
            distSQ = defender.getLocation().getPosition().distanceSquared(attacker.getLocation().getPosition());
            maxDist = config.snipeeTeleportDist;
          }

          if (backTeleport || distSQ > Math.pow(maxDist, 2)) {
            final Entity finalDamager = attacker;
            Task.builder().execute(() -> {
              defender.setLocation(finalDamager.getLocation());
              throwBack(defender);
            }).delayTicks(1).submit(SkreePlugin.inst());
          }
        }
      }
    }.parse(event);

    return Optional.empty();
  }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'This', 'Source', 'Code', 'Form', 'is', 'subject', 'to', 'the', 'terms', 'of', 'the', 'Mozilla', 'Public', '*', 'License,', 'v.', '2.0.', 'If', 'a', 'copy', 'of', 'the', 'MPL', 'was', 'not', 'distributed', 'with', 'this', '*', 'file,', 'You', 'can', 'obtain', 'one', 'at', 'http://mozilla.org/MPL/2.0/.', '*/', 'package', 'com.skelril.skree.content.zone.group.freakyfour.boss.bossmove;', 'import', 'com.flowpowered.math.vector.Vector3d;', 'import', 'com.skelril.nitro.combat.PlayerCombatParser;', 'import', 'com.skelril.nitro.entity.EntityDirectionUtil;', 'import', 'com.skelril.nitro.numeric.MathExt;', 'import', 'com.skelril.nitro.probability.Probability;', 'import', 'com.skelril.openboss.Boss;', 'import', 'com.skelril.openboss.Instruction;', 'import', 'com.skelril.openboss.condition.DamagedCondition;', 'import', 'com.skelril.skree.SkreePlugin;', 'import', 'com.skelril.skree.content.zone.ZoneBossDetail;', 'import', 'com.skelril.skree.content.zone.group.freakyfour.FreakyFourConfig;', 'import', 'com.skelril.skree.content.zone.group.freakyfour.FreakyFourInstance;', 'import', 'org.spongepowered.api.entity.Entity;', 'import', 'org.spongepowered.api.entity.living.Living;', 'import', 'org.spongepowered.api.entity.living.monster.Skeleton;', 'import', 'org.spongepowered.api.entity.living.player.Player;', 'import', 'org.spongepowered.api.event.cause.entity.damage.source.IndirectEntityDamageSource;', 'import', 'org.spongepowered.api.event.entity.DamageEntityEvent;', 'import', 'org.spongepowered.api.scheduler.Task;', 'import', 'java.util.Optional;', 'public', 'class', 'BackTeleportInstruction', 'implements', 'Instruction<DamagedCondition,', 'Boss<Living,', 'ZoneBossDetail<FreakyFourInstance>>>', '{', 'private', 'FreakyFourConfig', 'config;', 'public', 'BackTeleportInstruction(FreakyFourConfig', 'config)', '{', 'this.config', '=', 'config;', '}', 'private', 'void', 'throwBack(Living', 'entity)', '{', 'Vector3d', 'vel', '=', 'EntityDirectionUtil.getFacingVector(entity);', 'vel', '=', 'vel.mul(-Probability.getRangedRandom(1.2,', '1.5));', 'vel', '=', 'new', 'Vector3d(vel.getX(),', 'MathExt.bound(vel.getY(),', '.175,', '.8),', 'vel.getZ());', 'entity.setVelocity(vel);', '}', '@Override', 'public', 'Optional<Instruction<DamagedCondition,', 'Boss<Living,', 'ZoneBossDetail<FreakyFourInstance>>>>', 'apply(', 'DamagedCondition', 'damagedCondition,', 'Boss<Living,', 'ZoneBossDetail<FreakyFourInstance>>', 'livingZoneBossDetailBoss', ')', '{', 'DamageEntityEvent', 'event', '=', 'damagedCondition.getEvent();', 'new', 'PlayerCombatParser()', '{', '@Override', 'public', 'void', 'processPlayerAttack(Player', 'attacker,', 'Living', 'defender)', '{', 'boolean', 'backTeleport', '=', 'Probability.getChance(config.backTeleport);', 'if', '(backTeleport', '||', 'damagedCondition.getDamageSource().get()', 'instanceof', 'IndirectEntityDamageSource)', '{', 'double', 'distSQ', '=', '2;', 'double', 'maxDist', '=', '1;', 'if', '(defender', 'instanceof', 'Skeleton)', '{', 'distSQ', '=', 'defender.getLocation().getPosition().distanceSquared(attacker.getLocation().getPosition());', 'maxDist', '=', 'config.snipeeTeleportDist;', '}', 'if', '(backTeleport', '||', 'distSQ', '>', 'Math.pow(maxDist,', '2))', '{', 'final', 'Entity', 'finalDamager', '=', 'attacker;', 'Task.builder().execute(()', '->', '{', 'defender.setLocation(finalDamager.getLocation());', 'throwBack(defender);', '}).delayTicks(1).submit(SkreePlugin.inst());', '}', '}', '}', '}.parse(event);', 'return', 'Optional.empty();', '}', '}', '```']",challenge not surrounded by ''': ,
"package com.example.syukrina.focus;

import android.content.Intent;
import android.os.Bundle;
import android.support.design.widget.FloatingActionButton;
import android.support.design.widget.Snackbar;
import android.view.View;
import android.support.design.widget.NavigationView;
import android.support.v4.view.GravityCompat;
import android.support.v4.widget.DrawerLayout;
import android.support.v7.app.ActionBarDrawerToggle;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.view.Menu;
import android.view.MenuItem;

public class HomeActivity extends AppCompatActivity
        implements NavigationView.OnNavigationItemSelectedListener {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_home_page);
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.home_page, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_settings) {
            return true;
        }

        return super.onOptionsItemSelected(item);
    }

    @SuppressWarnings(""StatementWithEmptyBody"")
    @Override
    public boolean onNavigationItemSelected(MenuItem item) {
        // Handle navigation view item clicks here.
        int id = item.getItemId();

        if (id == R.id.nav_timelapse) {
            Intent intent = new Intent(HomeActivity.this, HomePage.class);
            startActivity(intent);
            // Handle the camera action
        } else if (id == R.id.nav_faces) {
            Intent intent = new Intent(HomeActivity.this, FacesActivity.class);
            startActivity(intent);

        } else if (id == R.id.nav_person) {
            Intent intent = new Intent(HomeActivity.this, AboutActivity.class);
            startActivity(intent);

        } else if (id == R.id.nav_home) {
            Intent intent = new Intent(HomeActivity.this, HomePage.class);
            startActivity(intent);

        } else if (id == R.id.nav_manage) {
            Intent intent = new Intent(HomeActivity.this, SettingActivity.class);
            startActivity(intent);

        } else if (id == R.id.nav_help) {
            Intent intent = new Intent(HomeActivity.this, HelpActivity.class);
            startActivity(intent);

        }

        return true;
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.example.syukrina.focus;', 'import', 'android.content.Intent;', 'import', 'android.os.Bundle;', 'import', 'android.support.design.widget.FloatingActionButton;', 'import', 'android.support.design.widget.Snackbar;', 'import', 'android.view.View;', 'import', 'android.support.design.widget.NavigationView;', 'import', 'android.support.v4.view.GravityCompat;', 'import', 'android.support.v4.widget.DrawerLayout;', 'import', 'android.support.v7.app.ActionBarDrawerToggle;', 'import', 'android.support.v7.app.AppCompatActivity;', 'import', 'android.support.v7.widget.Toolbar;', 'import', 'android.view.Menu;', 'import', 'android.view.MenuItem;', 'public', 'class', 'HomeActivity', 'extends', 'AppCompatActivity', 'implements', 'NavigationView.OnNavigationItemSelectedListener', '{', '@Override', 'protected', 'void', 'onCreate(Bundle', 'savedInstanceState)', '{', 'super.onCreate(savedInstanceState);', 'setContentView(R.layout.activity_home_page);', 'Toolbar', 'toolbar', '=', '(Toolbar)', 'findViewById(R.id.toolbar);', 'setSupportActionBar(toolbar);', '}', '@Override', 'public', 'boolean', 'onCreateOptionsMenu(Menu', 'menu)', '{', '//', 'Inflate', 'the', 'menu;', 'this', 'adds', 'items', 'to', 'the', 'action', 'bar', 'if', 'it', 'is', 'present.', 'getMenuInflater().inflate(R.menu.home_page,', 'menu);', 'return', 'true;', '}', '@Override', 'public', 'boolean', 'onOptionsItemSelected(MenuItem', 'item)', '{', '//', 'Handle', 'action', 'bar', 'item', 'clicks', 'here.', 'The', 'action', 'bar', 'will', '//', 'automatically', 'handle', 'clicks', 'on', 'the', 'Home/Up', 'button,', 'so', 'long', '//', 'as', 'you', 'specify', 'a', 'parent', 'activity', 'in', 'AndroidManifest.xml.', 'int', 'id', '=', 'item.getItemId();', '//noinspection', 'SimplifiableIfStatement', 'if', '(id', '==', 'R.id.action_settings)', '{', 'return', 'true;', '}', 'return', 'super.onOptionsItemSelected(item);', '}', '@SuppressWarnings(""StatementWithEmptyBody"")', '@Override', 'public', 'boolean', 'onNavigationItemSelected(MenuItem', 'item)', '{', '//', 'Handle', 'navigation', 'view', 'item', 'clicks', 'here.', 'int', 'id', '=', 'item.getItemId();', 'if', '(id', '==', 'R.id.nav_timelapse)', '{', 'Intent', 'intent', '=', 'new', 'Intent(HomeActivity.this,', 'HomePage.class);', 'startActivity(intent);', '//', 'Handle', 'the', 'camera', 'action', '}', 'else', 'if', '(id', '==', 'R.id.nav_faces)', '{', 'Intent', 'intent', '=', 'new', 'Intent(HomeActivity.this,', 'FacesActivity.class);', 'startActivity(intent);', '}', 'else', 'if', '(id', '==', 'R.id.nav_person)', '{', 'Intent', 'intent', '=', 'new', 'Intent(HomeActivity.this,', 'AboutActivity.class);', 'startActivity(intent);', '}', 'else', 'if', '(id', '==', 'R.id.nav_home)', '{', 'Intent', 'intent', '=', 'new', 'Intent(HomeActivity.this,', 'HomePage.class);', 'startActivity(intent);', '}', 'else', 'if', '(id', '==', 'R.id.nav_manage)', '{', 'Intent', 'intent', '=', 'new', 'Intent(HomeActivity.this,', 'SettingActivity.class);', 'startActivity(intent);', '}', 'else', 'if', '(id', '==', 'R.id.nav_help)', '{', 'Intent', 'intent', '=', 'new', 'Intent(HomeActivity.this,', 'HelpActivity.class);', 'startActivity(intent);', '}', 'return', 'true;', '}', '}', '```']",challenge not surrounded by ''': ,
"package java.post;

public class ByteUtils {
	public static void main(String args[]) {
		byte dd = 3;
		System.out.println(Integer.toBinaryString(dd));
	}
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'java.post;', 'public', 'class', 'ByteUtils', '{', 'public', 'static', 'void', 'main(String', 'args[])', '{', 'byte', 'dd', '=', '3;', 'System.out.println(Integer.toBinaryString(dd));', '}', '}', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE html>
<style>
body {
    background-image: url(../resources/apple.jpg);
}
</style>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'html>', '<style>', 'body', '{', 'background-image:', 'url(../resources/apple.jpg);', '}', '</style>', '```']",challenge not surrounded by ''': ,
"# Dockerfile to build a ubuntu image containing the installed Debian package of a release 

FROM ubuntu:20.04
# Fix the installation of tzdata for Ubuntu 20.04
ARG TIMEZONE=Europe/Berlin
RUN export TZ=$TIMEZONE && echo $TZ > /etc/timezone && ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && \
    apt-get -yy update && apt-get -yy install wget tzdata && rm -rf /var/lib/apt/lists/*
# The version to fetch the package for: vX.Y.Z
ARG version
RUN echo ""$version"" | grep ""v[0-9]\+\.[0-9]\+\.[0-9]\+"" > /dev/null # The version must follow the format vX.Y.Z
RUN wget -q -O libprecice.deb https://github.com/precice/precice/releases/download/${version}/libprecice`echo ${version} | sed 's/v\([0-9]\+\)\.\([0-9]\+\.[0-9]\+\)/\1_\1.\2/'`_focal.deb && \
    apt-get update && apt-get -yy install ./libprecice.deb && \
    rm libprecice.deb && rm -rf /var/lib/apt/lists/* && \
    precice-tools xml > /dev/null # Make sure the installation is functional
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', 'Dockerfile', 'to', 'build', 'a', 'ubuntu', 'image', 'containing', 'the', 'installed', 'Debian', 'package', 'of', 'a', 'release', 'FROM', 'ubuntu:20.04', '#', 'Fix', 'the', 'installation', 'of', 'tzdata', 'for', 'Ubuntu', '20.04', 'ARG', 'TIMEZONE=Europe/Berlin', 'RUN', 'export', 'TZ=$TIMEZONE', '&&', 'echo', '$TZ', '>', '/etc/timezone', '&&', 'ln', '-snf', '/usr/share/zoneinfo/$TZ', '/etc/localtime', '&&', '\\', 'apt-get', '-yy', 'update', '&&', 'apt-get', '-yy', 'install', 'wget', 'tzdata', '&&', 'rm', '-rf', '/var/lib/apt/lists/*', '#', 'The', 'version', 'to', 'fetch', 'the', 'package', 'for:', 'vX.Y.Z', 'ARG', 'version', 'RUN', 'echo', '""$version""', '|', 'grep', '""v[0-9]\\+\\.[0-9]\\+\\.[0-9]\\+""', '>', '/dev/null', '#', 'The', 'version', 'must', 'follow', 'the', 'format', 'vX.Y.Z', 'RUN', 'wget', '-q', '-O', 'libprecice.deb', 'https://github.com/precice/precice/releases/download/${version}/libprecice`echo', '${version}', '|', 'sed', ""'s/v\\([0-9]\\+\\)\\.\\([0-9]\\+\\.[0-9]\\+\\)/\\1_\\1.\\2/'`_focal.deb"", '&&', '\\', 'apt-get', 'update', '&&', 'apt-get', '-yy', 'install', './libprecice.deb', '&&', '\\', 'rm', 'libprecice.deb', '&&', 'rm', '-rf', '/var/lib/apt/lists/*', '&&', '\\', 'precice-tools', 'xml', '>', '/dev/null', '#', 'Make', 'sure', 'the', 'installation', 'is', 'functional', '```']",challenge not surrounded by ''': ,
"-- boundary1.test
-- 
-- db eval {
--     SELECT a FROM t1 WHERE rowid >= -8388608 ORDER BY rowid DESC
-- }
SELECT a FROM t1 WHERE rowid >= -8388608 ORDER BY rowid DESC","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```--', 'boundary1.test', '--', '--', 'db', 'eval', '{', '--', 'SELECT', 'a', 'FROM', 't1', 'WHERE', 'rowid', '>=', '-8388608', 'ORDER', 'BY', 'rowid', 'DESC', '--', '}', 'SELECT', 'a', 'FROM', 't1', 'WHERE', 'rowid', '>=', '-8388608', 'ORDER', 'BY', 'rowid', 'DESC```']",challenge not surrounded by ''': ,
"/**
 ** This file is part of the constexprStd project.
 ** Copyright 2017 Björn Schäpers <bjoern@hazardy.de>.
 **
 ** This program is free software: you can redistribute it and/or modify
 ** it under the terms of the GNU Lesser General Public License as
 ** published by the Free Software Foundation, either version 3 of the
 ** License, or (at your option) any later version.
 **
 ** This program is distributed in the hope that it will be useful,
 ** but WITHOUT ANY WARRANTY; without even the implied warranty of
 ** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 ** GNU Lesser General Public License for more details.
 **
 ** You should have received a copy of the GNU Lesser General Public License
 ** along with this program.  If not, see <http://www.gnu.org/licenses/>.
 **/

#ifndef TEST_MOVE_INT_HPP
#define TEST_MOVE_INT_HPP

struct MoveInt {
	int I;
	bool Moved = false;
	
	constexpr MoveInt(const int i = 0) noexcept : I{i} {
		return;
	}
	
	constexpr MoveInt(const MoveInt&) = default;
	
	constexpr MoveInt(MoveInt&& that) noexcept : I{that.I} {
		that.Moved = true;
		that.I = 0;
		return;
	}
	
	constexpr MoveInt& operator=(const MoveInt&) = default;
	
	constexpr MoveInt& operator=(MoveInt&& that) noexcept {
		I = that.I;
		Moved = that.Moved;
		that.Moved = true;
		that.I = 0;
		return *this;
	}
	
	constexpr operator int(void) const & noexcept {
		return I;
	}
	
	constexpr operator int(void) && noexcept {
		Moved = true;
		int ret = I;
		I = 0;
		return ret;
	}
};

#endif
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '**', 'This', 'file', 'is', 'part', 'of', 'the', 'constexprStd', 'project.', '**', 'Copyright', '2017', 'Björn', 'Schäpers', '<bjoern@hazardy.de>.', '**', '**', 'This', 'program', 'is', 'free', 'software:', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', '**', 'it', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'Lesser', 'General', 'Public', 'License', 'as', '**', 'published', 'by', 'the', 'Free', 'Software', 'Foundation,', 'either', 'version', '3', 'of', 'the', '**', 'License,', 'or', '(at', 'your', 'option)', 'any', 'later', 'version.', '**', '**', 'This', 'program', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', '**', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', '**', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', '**', 'GNU', 'Lesser', 'General', 'Public', 'License', 'for', 'more', 'details.', '**', '**', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'Lesser', 'General', 'Public', 'License', '**', 'along', 'with', 'this', 'program.', 'If', 'not,', 'see', '<http://www.gnu.org/licenses/>.', '**/', '#ifndef', 'TEST_MOVE_INT_HPP', '#define', 'TEST_MOVE_INT_HPP', 'struct', 'MoveInt', '{', 'int', 'I;', 'bool', 'Moved', '=', 'false;', 'constexpr', 'MoveInt(const', 'int', 'i', '=', '0)', 'noexcept', ':', 'I{i}', '{', 'return;', '}', 'constexpr', 'MoveInt(const', 'MoveInt&)', '=', 'default;', 'constexpr', 'MoveInt(MoveInt&&', 'that)', 'noexcept', ':', 'I{that.I}', '{', 'that.Moved', '=', 'true;', 'that.I', '=', '0;', 'return;', '}', 'constexpr', 'MoveInt&', 'operator=(const', 'MoveInt&)', '=', 'default;', 'constexpr', 'MoveInt&', 'operator=(MoveInt&&', 'that)', 'noexcept', '{', 'I', '=', 'that.I;', 'Moved', '=', 'that.Moved;', 'that.Moved', '=', 'true;', 'that.I', '=', '0;', 'return', '*this;', '}', 'constexpr', 'operator', 'int(void)', 'const', '&', 'noexcept', '{', 'return', 'I;', '}', 'constexpr', 'operator', 'int(void)', '&&', 'noexcept', '{', 'Moved', '=', 'true;', 'int', 'ret', '=', 'I;', 'I', '=', '0;', 'return', 'ret;', '}', '};', '#endif', '```']",challenge not surrounded by ''': ,
"""""""
Django settings for jason_demo project.

For more information on this file, see
https://docs.djangoproject.com/en/1.7/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.7/ref/settings/
""""""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
BASE_DIR = os.path.dirname(os.path.dirname(__file__))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.7/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '1)v@6l%-6w$46k8sw*(7auba0^+_ux_6m*dzkm9x258i5cn7hj'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

TEMPLATE_DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'sayhost',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
)

ROOT_URLCONF = 'jason_demo.urls'

WSGI_APPLICATION = 'jason_demo.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.7/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# Internationalization
# https://docs.djangoproject.com/en/1.7/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.7/howto/static-files/

STATIC_URL = '/static/'
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```""""""', 'Django', 'settings', 'for', 'jason_demo', 'project.', 'For', 'more', 'information', 'on', 'this', 'file,', 'see', 'https://docs.djangoproject.com/en/1.7/topics/settings/', 'For', 'the', 'full', 'list', 'of', 'settings', 'and', 'their', 'values,', 'see', 'https://docs.djangoproject.com/en/1.7/ref/settings/', '""""""', '#', 'Build', 'paths', 'inside', 'the', 'project', 'like', 'this:', 'os.path.join(BASE_DIR,', '...)', 'import', 'os', 'BASE_DIR', '=', 'os.path.dirname(os.path.dirname(__file__))', '#', 'Quick-start', 'development', 'settings', '-', 'unsuitable', 'for', 'production', '#', 'See', 'https://docs.djangoproject.com/en/1.7/howto/deployment/checklist/', '#', 'SECURITY', 'WARNING:', 'keep', 'the', 'secret', 'key', 'used', 'in', 'production', 'secret!', 'SECRET_KEY', '=', ""'1)v@6l%-6w$46k8sw*(7auba0^+_ux_6m*dzkm9x258i5cn7hj'"", '#', 'SECURITY', 'WARNING:', ""don't"", 'run', 'with', 'debug', 'turned', 'on', 'in', 'production!', 'DEBUG', '=', 'True', 'TEMPLATE_DEBUG', '=', 'True', 'ALLOWED_HOSTS', '=', '[]', '#', 'Application', 'definition', 'INSTALLED_APPS', '=', '(', ""'django.contrib.admin',"", ""'django.contrib.auth',"", ""'django.contrib.contenttypes',"", ""'django.contrib.sessions',"", ""'django.contrib.messages',"", ""'django.contrib.staticfiles',"", ""'sayhost',"", ')', 'MIDDLEWARE_CLASSES', '=', '(', ""'django.contrib.sessions.middleware.SessionMiddleware',"", ""'django.middleware.common.CommonMiddleware',"", ""'django.middleware.csrf.CsrfViewMiddleware',"", ""'django.contrib.auth.middleware.AuthenticationMiddleware',"", ""'django.contrib.auth.middleware.SessionAuthenticationMiddleware',"", ""'django.contrib.messages.middleware.MessageMiddleware',"", ""'django.middleware.clickjacking.XFrameOptionsMiddleware',"", ')', 'ROOT_URLCONF', '=', ""'jason_demo.urls'"", 'WSGI_APPLICATION', '=', ""'jason_demo.wsgi.application'"", '#', 'Database', '#', 'https://docs.djangoproject.com/en/1.7/ref/settings/#databases', 'DATABASES', '=', '{', ""'default':"", '{', ""'ENGINE':"", ""'django.db.backends.sqlite3',"", ""'NAME':"", 'os.path.join(BASE_DIR,', ""'db.sqlite3'),"", '}', '}', '#', 'Internationalization', '#', 'https://docs.djangoproject.com/en/1.7/topics/i18n/', 'LANGUAGE_CODE', '=', ""'en-us'"", 'TIME_ZONE', '=', ""'UTC'"", 'USE_I18N', '=', 'True', 'USE_L10N', '=', 'True', 'USE_TZ', '=', 'True', '#', 'Static', 'files', '(CSS,', 'JavaScript,', 'Images)', '#', 'https://docs.djangoproject.com/en/1.7/howto/static-files/', 'STATIC_URL', '=', ""'/static/'"", '```']",challenge not surrounded by ''': ,
"package gameplay.ai.mood;

import gameplay.ai.mood.Mood;

/**
 * Class used to handle the Power Complex mood
 */
public class PowerComplex extends Mood {

	/**
	 * PowerComplex main constructor
	 */
	public PowerComplex() {
		super(10, 6);
	}

}

","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'gameplay.ai.mood;', 'import', 'gameplay.ai.mood.Mood;', '/**', '*', 'Class', 'used', 'to', 'handle', 'the', 'Power', 'Complex', 'mood', '*/', 'public', 'class', 'PowerComplex', 'extends', 'Mood', '{', '/**', '*', 'PowerComplex', 'main', 'constructor', '*/', 'public', 'PowerComplex()', '{', 'super(10,', '6);', '}', '}', '```']",challenge not surrounded by ''': ,
"/**
 * Copyright (c) 2015 IBM Corporation. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 **/

package com.ibm.pi.core;

import android.util.Log;

/**
 * This class manages logging for Presence Insights. Enable debug mode to flood LogCat with useful
 * information regarding the classes within.
 *
 * @author Ciaran Hannigan (cehannig@us.ibm.com)
 */
public class PILogger {
    static boolean inDebugMode = false;

    /**
     * Send a DEBUG log message.
     *
     * @param tag Used to identify the source of a log message. It usually identifies the class or activity where the log call occurs.
     * @param msg The message you would like logged.
     */
    static public int d(String tag, String msg) {
        return inDebugMode ? Log.d(tag, msg) : 0;
    }

    /**
     * Send an ERROR log message.
     *
     * @param tag Used to identify the source of a log message. It usually identifies the class or activity where the log call occurs.
     * @param msg The message you would like logged.
     */
    static public int e(String tag, String msg) {
        return inDebugMode ? Log.e(tag, msg) : 0;
    }

    /**
     * Enables/Disables logging.
     *
     * @param enable enable or disable logging.
     */
    static public void enableDebugMode(boolean enable) {
        inDebugMode = enable;
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', 'Copyright', '(c)', '2015', 'IBM', 'Corporation.', 'All', 'rights', 'reserved.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '**/', 'package', 'com.ibm.pi.core;', 'import', 'android.util.Log;', '/**', '*', 'This', 'class', 'manages', 'logging', 'for', 'Presence', 'Insights.', 'Enable', 'debug', 'mode', 'to', 'flood', 'LogCat', 'with', 'useful', '*', 'information', 'regarding', 'the', 'classes', 'within.', '*', '*', '@author', 'Ciaran', 'Hannigan', '(cehannig@us.ibm.com)', '*/', 'public', 'class', 'PILogger', '{', 'static', 'boolean', 'inDebugMode', '=', 'false;', '/**', '*', 'Send', 'a', 'DEBUG', 'log', 'message.', '*', '*', '@param', 'tag', 'Used', 'to', 'identify', 'the', 'source', 'of', 'a', 'log', 'message.', 'It', 'usually', 'identifies', 'the', 'class', 'or', 'activity', 'where', 'the', 'log', 'call', 'occurs.', '*', '@param', 'msg', 'The', 'message', 'you', 'would', 'like', 'logged.', '*/', 'static', 'public', 'int', 'd(String', 'tag,', 'String', 'msg)', '{', 'return', 'inDebugMode', '?', 'Log.d(tag,', 'msg)', ':', '0;', '}', '/**', '*', 'Send', 'an', 'ERROR', 'log', 'message.', '*', '*', '@param', 'tag', 'Used', 'to', 'identify', 'the', 'source', 'of', 'a', 'log', 'message.', 'It', 'usually', 'identifies', 'the', 'class', 'or', 'activity', 'where', 'the', 'log', 'call', 'occurs.', '*', '@param', 'msg', 'The', 'message', 'you', 'would', 'like', 'logged.', '*/', 'static', 'public', 'int', 'e(String', 'tag,', 'String', 'msg)', '{', 'return', 'inDebugMode', '?', 'Log.e(tag,', 'msg)', ':', '0;', '}', '/**', '*', 'Enables/Disables', 'logging.', '*', '*', '@param', 'enable', 'enable', 'or', 'disable', 'logging.', '*/', 'static', 'public', 'void', 'enableDebugMode(boolean', 'enable)', '{', 'inDebugMode', '=', 'enable;', '}', '}', '```']",challenge not surrounded by ''': ,
"/* Copyright (c) 2016 Adam Anthony */
(function (ng) {
    ""use strict"";
    //private
    var library = {
        maxAge: 18,
        email: new RegExp(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,}$/i),
        //Original: /^(?:[\w!#$%&'*+/=?^_`{|}~-]+(?:\.[\w!#$%&'*+/=?^_`{|}~-]+)*|""""(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*"""")@(?:(?:[\w](?:[\w-]*[\w])?\.)+[\w](?:[\w-]*[\w])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[\w-]*[\w]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])$/
        password: {
            count: new RegExp(/[A-Z0-9]{6,}/i),
            alpha: new RegExp(/[A-Z]/i),
            numeric: new RegExp(/[0-9]/i),
            upper: new RegExp(/[A-Z]/),
            lower: new RegExp(/[a-z]/)
        },
        postcode: new RegExp(/[0-9]{4}/),
        searches: {
            domain: new RegExp(/@[A-Z0-9.-]+\.[A-Z]{2,}$/i)
        }
    }

    //public
    var validationService = function (settings) {
        this.config = ng.extend({}, this.defaults, settings);
    };
    validationService.prototype = {
        defaults: {
            minage: 18
        },

        checkEmail: function (email) {
            return library.email.test(email);
        },

        getDomainInclusions: function () {
            return this.ajaxService.get(""/Scripts/app/data/merckDomains.js"");
        },

        getDomain: function (email) {
            if (ng.isString(email)) {
                var domain = email.match(library.searches.domain);
                domain = ng.isArray(domain) ? domain[0].substr(domain[0].indexOf(""@"") + 1) : """";
                return domain;
            }
            return false;
        },

        checkForm: function (form) {
            
            form.$setDirty();
            var errors = [];

            ng.forEach(form, function (v, k) {
                if (k.toString().indexOf('$') == -1) {
                    if (v.$invalid) {
                        errors.push(v.$error)
                    }
                }
            });

            var valid = form.$valid;
            if (!valid && errors.length) {
                ng.forEach(form.$error, function (errType) {
                    ng.forEach(errType, function (err) {
                        err.$setDirty();
                    });
                });
            }
            else {
                valid = true;
            }
            return valid;
        },
        checkPassword: function (password) {
            var valid = true;

            ng.forEach(library.password, function (exp) {
                if (!exp.test(password)) {
                    valid = false;
                    return;
                }
            });
            return valid;
        },
        checkDob: function (date) {
            var valid = true;
            var dob = new Date(date);
            var now = new Date();

            valid = dob.getYear() < now.getYear() - this.config.minage;
            if (dob.getYear() == now.getYear() - this.config.minage) {
                valid = dob.getMonth() < now.getMonth() || (dob.getMonth() == now.getMonth() && dob.getDate() <= now.getDate());
            }
            return valid;
        }
    };

    angular.module(""umbraco.services"").service(""AUMBRA.Services.ValidationService"", [validationService]);

}(angular));","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', 'Copyright', '(c)', '2016', 'Adam', 'Anthony', '*/', '(function', '(ng)', '{', '""use', 'strict"";', '//private', 'var', 'library', '=', '{', 'maxAge:', '18,', 'email:', 'new', 'RegExp(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i),', '//Original:', '/^(?:[\\w!#$%&\'*+/=?^_`{|}~-]+(?:\\.[\\w!#$%&\'*+/=?^_`{|}~-]+)*|""""(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*"""")@(?:(?:[\\w](?:[\\w-]*[\\w])?\\.)+[\\w](?:[\\w-]*[\\w])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[\\w-]*[\\w]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/', 'password:', '{', 'count:', 'new', 'RegExp(/[A-Z0-9]{6,}/i),', 'alpha:', 'new', 'RegExp(/[A-Z]/i),', 'numeric:', 'new', 'RegExp(/[0-9]/i),', 'upper:', 'new', 'RegExp(/[A-Z]/),', 'lower:', 'new', 'RegExp(/[a-z]/)', '},', 'postcode:', 'new', 'RegExp(/[0-9]{4}/),', 'searches:', '{', 'domain:', 'new', 'RegExp(/@[A-Z0-9.-]+\\.[A-Z]{2,}$/i)', '}', '}', '//public', 'var', 'validationService', '=', 'function', '(settings)', '{', 'this.config', '=', 'ng.extend({},', 'this.defaults,', 'settings);', '};', 'validationService.prototype', '=', '{', 'defaults:', '{', 'minage:', '18', '},', 'checkEmail:', 'function', '(email)', '{', 'return', 'library.email.test(email);', '},', 'getDomainInclusions:', 'function', '()', '{', 'return', 'this.ajaxService.get(""/Scripts/app/data/merckDomains.js"");', '},', 'getDomain:', 'function', '(email)', '{', 'if', '(ng.isString(email))', '{', 'var', 'domain', '=', 'email.match(library.searches.domain);', 'domain', '=', 'ng.isArray(domain)', '?', 'domain[0].substr(domain[0].indexOf(""@"")', '+', '1)', ':', '"""";', 'return', 'domain;', '}', 'return', 'false;', '},', 'checkForm:', 'function', '(form)', '{', 'form.$setDirty();', 'var', 'errors', '=', '[];', 'ng.forEach(form,', 'function', '(v,', 'k)', '{', 'if', ""(k.toString().indexOf('$')"", '==', '-1)', '{', 'if', '(v.$invalid)', '{', 'errors.push(v.$error)', '}', '}', '});', 'var', 'valid', '=', 'form.$valid;', 'if', '(!valid', '&&', 'errors.length)', '{', 'ng.forEach(form.$error,', 'function', '(errType)', '{', 'ng.forEach(errType,', 'function', '(err)', '{', 'err.$setDirty();', '});', '});', '}', 'else', '{', 'valid', '=', 'true;', '}', 'return', 'valid;', '},', 'checkPassword:', 'function', '(password)', '{', 'var', 'valid', '=', 'true;', 'ng.forEach(library.password,', 'function', '(exp)', '{', 'if', '(!exp.test(password))', '{', 'valid', '=', 'false;', 'return;', '}', '});', 'return', 'valid;', '},', 'checkDob:', 'function', '(date)', '{', 'var', 'valid', '=', 'true;', 'var', 'dob', '=', 'new', 'Date(date);', 'var', 'now', '=', 'new', 'Date();', 'valid', '=', 'dob.getYear()', '<', 'now.getYear()', '-', 'this.config.minage;', 'if', '(dob.getYear()', '==', 'now.getYear()', '-', 'this.config.minage)', '{', 'valid', '=', 'dob.getMonth()', '<', 'now.getMonth()', '||', '(dob.getMonth()', '==', 'now.getMonth()', '&&', 'dob.getDate()', '<=', 'now.getDate());', '}', 'return', 'valid;', '}', '};', 'angular.module(""umbraco.services"").service(""AUMBRA.Services.ValidationService"",', '[validationService]);', '}(angular));```']",challenge not surrounded by ''': ,
"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.wicket.markup.html.autolink;

import org.apache.wicket.markup.html.link.BookmarkablePageLink;
import org.apache.wicket.markup.html.panel.Panel;

/**
 * Panel with a link inside
 * 
 * @author Rüdiger Schulz <rue@darkprophet.de>
 * 
 */
public class LinkPanel extends Panel
{
	private static final long serialVersionUID = 1L;

	/**
	 * Construct.
	 * 
	 * @param id
	 */
	public LinkPanel(String id)
	{
		super(id);
		add(new BookmarkablePageLink(""indexLink"", Index.class));
		add(new BookmarkablePageLink(""subPageLink"", SubPage.class));
	}
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Licensed', 'to', 'the', 'Apache', 'Software', 'Foundation', '(ASF)', 'under', 'one', 'or', 'more', '*', 'contributor', 'license', 'agreements.', 'See', 'the', 'NOTICE', 'file', 'distributed', 'with', '*', 'this', 'work', 'for', 'additional', 'information', 'regarding', 'copyright', 'ownership.', '*', 'The', 'ASF', 'licenses', 'this', 'file', 'to', 'You', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '*', '(the', '""License"");', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', '*', 'the', 'License.', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'org.apache.wicket.markup.html.autolink;', 'import', 'org.apache.wicket.markup.html.link.BookmarkablePageLink;', 'import', 'org.apache.wicket.markup.html.panel.Panel;', '/**', '*', 'Panel', 'with', 'a', 'link', 'inside', '*', '*', '@author', 'Rüdiger', 'Schulz', '<rue@darkprophet.de>', '*', '*/', 'public', 'class', 'LinkPanel', 'extends', 'Panel', '{', 'private', 'static', 'final', 'long', 'serialVersionUID', '=', '1L;', '/**', '*', 'Construct.', '*', '*', '@param', 'id', '*/', 'public', 'LinkPanel(String', 'id)', '{', 'super(id);', 'add(new', 'BookmarkablePageLink(""indexLink"",', 'Index.class));', 'add(new', 'BookmarkablePageLink(""subPageLink"",', 'SubPage.class));', '}', '}', '```']",challenge not surrounded by ''': ,
"<!--
   Copyright 2016 IBM Corp. All Rights Reserved.

   Licensed under the Apache License, Version 2.0 (the ""License"");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an ""AS IS"" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

{% extends ""films/base.html"" %}

{% block title_html %}
  Film Survey
{% endblock %}


{% block core_body %}
  <div>Thank you for your submission, your help is most appreciated.</div>
  <p>What is your favourite film out of this list?</p>
    <form method=""post"" action="""" >
        {% csrf_token %}
        <!-- This line inserts a CSRF token. -->
        <table>
            {{ form.as_table }}
            <!-- This line displays lines of the form. -->
        </table>
        <p><input type=""submit"" value=""Submit"" /></p>
    </form>
{% endblock %}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!--', 'Copyright', '2016', 'IBM', 'Corp.', 'All', 'Rights', 'Reserved.', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', 'http://www.apache.org/licenses/LICENSE-2.0', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', 'limitations', 'under', 'the', 'License.', '-->', '{%', 'extends', '""films/base.html""', '%}', '{%', 'block', 'title_html', '%}', 'Film', 'Survey', '{%', 'endblock', '%}', '{%', 'block', 'core_body', '%}', '<div>Thank', 'you', 'for', 'your', 'submission,', 'your', 'help', 'is', 'most', 'appreciated.</div>', '<p>What', 'is', 'your', 'favourite', 'film', 'out', 'of', 'this', 'list?</p>', '<form', 'method=""post""', 'action=""""', '>', '{%', 'csrf_token', '%}', '<!--', 'This', 'line', 'inserts', 'a', 'CSRF', 'token.', '-->', '<table>', '{{', 'form.as_table', '}}', '<!--', 'This', 'line', 'displays', 'lines', 'of', 'the', 'form.', '-->', '</table>', '<p><input', 'type=""submit""', 'value=""Submit""', '/></p>', '</form>', '{%', 'endblock', '%}', '```']",challenge not surrounded by ''': ,
"package edu.pitt.isg.dc.config;

import edu.pitt.isg.dc.controller.Interceptor;
import edu.pitt.isg.dc.validator.DatasetFilter;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.web.servlet.FilterRegistrationBean;
import org.springframework.boot.web.support.ErrorPageFilter;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.support.PropertySourcesPlaceholderConfigurer;
import org.springframework.context.support.ResourceBundleMessageSource;
import org.springframework.data.web.config.EnableSpringDataWebSupport;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.mail.javamail.JavaMailSenderImpl;
import org.springframework.web.servlet.ViewResolver;
import org.springframework.web.servlet.config.annotation.EnableWebMvc;
import org.springframework.web.servlet.config.annotation.InterceptorRegistry;
import org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;
import org.springframework.web.servlet.view.InternalResourceViewResolver;
import org.springframework.webflow.mvc.servlet.FlowHandlerAdapter;
import org.springframework.webflow.mvc.servlet.FlowHandlerMapping;

import javax.servlet.Filter;
import java.util.Properties;

@EnableWebMvc
@Configuration
@ComponentScan(basePackages = {""edu.pitt.isg.dc"", ""edu.pitt.isg.dc.validator""})
@EnableSpringDataWebSupport
public class MvcConfiguration extends WebMvcConfigurerAdapter {
    @Autowired
    private WebFlowConfig webFlowConfig;

    @Bean
    public ViewResolver getViewResolver() {
        InternalResourceViewResolver resolver = new InternalResourceViewResolver();
        resolver.setPrefix(""/WEB-INF/views/"");
        resolver.setSuffix("".jsp"");
        return resolver;
    }

    @Override
    public void addInterceptors(InterceptorRegistry registry) {
        registry.addInterceptor(new Interceptor());
    }

    @Override
    public void addResourceHandlers(ResourceHandlerRegistry registry) {
        registry.addResourceHandler(""/resources/**"").addResourceLocations(""/resources/"");
    }

    @Bean
    public ErrorPageFilter errorPageFilter() {
        return new ErrorPageFilter();
    }

    @Bean
    public FilterRegistrationBean disableSpringBootErrorFilter(ErrorPageFilter filter) {
        FilterRegistrationBean filterRegistrationBean = new FilterRegistrationBean();
        filterRegistrationBean.setFilter(filter);
        filterRegistrationBean.setEnabled(false);
        return filterRegistrationBean;
    }

    @Bean
    public static PropertySourcesPlaceholderConfigurer placeHolderConfigurer() {
        return new PropertySourcesPlaceholderConfigurer();
    }

    @Bean
    public ResourceBundleMessageSource messageSource() {
        ResourceBundleMessageSource rb = new ResourceBundleMessageSource();
        rb.setBasenames(new String[] {""messages/validation""});
        return rb;
    }

    @Bean
    public FlowHandlerMapping flowHandlerMapping() {
        FlowHandlerMapping handlerMapping = new FlowHandlerMapping();
        handlerMapping.setOrder(-1);
        handlerMapping.setFlowRegistry(this.webFlowConfig.flowRegistry());
        return handlerMapping;
    }

    @Bean
    public FlowHandlerAdapter flowHandlerAdapter() {
        FlowHandlerAdapter handlerAdapter = new FlowHandlerAdapter();
        handlerAdapter.setFlowExecutor(this.webFlowConfig.flowExecutor());
        handlerAdapter.setSaveOutputToFlashScopeOnRedirect(true);
        return handlerAdapter;
    }

    @Bean
    public Filter datasetFilter() {
        return new DatasetFilter();
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'edu.pitt.isg.dc.config;', 'import', 'edu.pitt.isg.dc.controller.Interceptor;', 'import', 'edu.pitt.isg.dc.validator.DatasetFilter;', 'import', 'org.springframework.beans.factory.annotation.Autowired;', 'import', 'org.springframework.boot.web.servlet.FilterRegistrationBean;', 'import', 'org.springframework.boot.web.support.ErrorPageFilter;', 'import', 'org.springframework.context.annotation.Bean;', 'import', 'org.springframework.context.annotation.ComponentScan;', 'import', 'org.springframework.context.annotation.Configuration;', 'import', 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer;', 'import', 'org.springframework.context.support.ResourceBundleMessageSource;', 'import', 'org.springframework.data.web.config.EnableSpringDataWebSupport;', 'import', 'org.springframework.mail.javamail.JavaMailSender;', 'import', 'org.springframework.mail.javamail.JavaMailSenderImpl;', 'import', 'org.springframework.web.servlet.ViewResolver;', 'import', 'org.springframework.web.servlet.config.annotation.EnableWebMvc;', 'import', 'org.springframework.web.servlet.config.annotation.InterceptorRegistry;', 'import', 'org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;', 'import', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;', 'import', 'org.springframework.web.servlet.view.InternalResourceViewResolver;', 'import', 'org.springframework.webflow.mvc.servlet.FlowHandlerAdapter;', 'import', 'org.springframework.webflow.mvc.servlet.FlowHandlerMapping;', 'import', 'javax.servlet.Filter;', 'import', 'java.util.Properties;', '@EnableWebMvc', '@Configuration', '@ComponentScan(basePackages', '=', '{""edu.pitt.isg.dc"",', '""edu.pitt.isg.dc.validator""})', '@EnableSpringDataWebSupport', 'public', 'class', 'MvcConfiguration', 'extends', 'WebMvcConfigurerAdapter', '{', '@Autowired', 'private', 'WebFlowConfig', 'webFlowConfig;', '@Bean', 'public', 'ViewResolver', 'getViewResolver()', '{', 'InternalResourceViewResolver', 'resolver', '=', 'new', 'InternalResourceViewResolver();', 'resolver.setPrefix(""/WEB-INF/views/"");', 'resolver.setSuffix("".jsp"");', 'return', 'resolver;', '}', '@Override', 'public', 'void', 'addInterceptors(InterceptorRegistry', 'registry)', '{', 'registry.addInterceptor(new', 'Interceptor());', '}', '@Override', 'public', 'void', 'addResourceHandlers(ResourceHandlerRegistry', 'registry)', '{', 'registry.addResourceHandler(""/resources/**"").addResourceLocations(""/resources/"");', '}', '@Bean', 'public', 'ErrorPageFilter', 'errorPageFilter()', '{', 'return', 'new', 'ErrorPageFilter();', '}', '@Bean', 'public', 'FilterRegistrationBean', 'disableSpringBootErrorFilter(ErrorPageFilter', 'filter)', '{', 'FilterRegistrationBean', 'filterRegistrationBean', '=', 'new', 'FilterRegistrationBean();', 'filterRegistrationBean.setFilter(filter);', 'filterRegistrationBean.setEnabled(false);', 'return', 'filterRegistrationBean;', '}', '@Bean', 'public', 'static', 'PropertySourcesPlaceholderConfigurer', 'placeHolderConfigurer()', '{', 'return', 'new', 'PropertySourcesPlaceholderConfigurer();', '}', '@Bean', 'public', 'ResourceBundleMessageSource', 'messageSource()', '{', 'ResourceBundleMessageSource', 'rb', '=', 'new', 'ResourceBundleMessageSource();', 'rb.setBasenames(new', 'String[]', '{""messages/validation""});', 'return', 'rb;', '}', '@Bean', 'public', 'FlowHandlerMapping', 'flowHandlerMapping()', '{', 'FlowHandlerMapping', 'handlerMapping', '=', 'new', 'FlowHandlerMapping();', 'handlerMapping.setOrder(-1);', 'handlerMapping.setFlowRegistry(this.webFlowConfig.flowRegistry());', 'return', 'handlerMapping;', '}', '@Bean', 'public', 'FlowHandlerAdapter', 'flowHandlerAdapter()', '{', 'FlowHandlerAdapter', 'handlerAdapter', '=', 'new', 'FlowHandlerAdapter();', 'handlerAdapter.setFlowExecutor(this.webFlowConfig.flowExecutor());', 'handlerAdapter.setSaveOutputToFlashScopeOnRedirect(true);', 'return', 'handlerAdapter;', '}', '@Bean', 'public', 'Filter', 'datasetFilter()', '{', 'return', 'new', 'DatasetFilter();', '}', '}', '```']",challenge not surrounded by ''': ,
"CKEDITOR.stylesSet.add( 'aup_styles',
[
    // Block-level styles
    { name : 'Test Title', element : 'h2', styles : { 'color' : 'Blue' } },
    { name : 'Teest Title' , element : 'h3', styles : { 'color' : 'Red' } },
 
    // Inline styles
    { name : 'CSS Style', element : 'span', attributes : { 'class' : 'my_style' } },
    { name : 'Marker: Yellow', element : 'span', styles : { 'background-color' : 'Yellow' } }
]);



","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```CKEDITOR.stylesSet.add(', ""'aup_styles',"", '[', '//', 'Block-level', 'styles', '{', 'name', ':', ""'Test"", ""Title',"", 'element', ':', ""'h2',"", 'styles', ':', '{', ""'color'"", ':', ""'Blue'"", '}', '},', '{', 'name', ':', ""'Teest"", ""Title'"", ',', 'element', ':', ""'h3',"", 'styles', ':', '{', ""'color'"", ':', ""'Red'"", '}', '},', '//', 'Inline', 'styles', '{', 'name', ':', ""'CSS"", ""Style',"", 'element', ':', ""'span',"", 'attributes', ':', '{', ""'class'"", ':', ""'my_style'"", '}', '},', '{', 'name', ':', ""'Marker:"", ""Yellow',"", 'element', ':', ""'span',"", 'styles', ':', '{', ""'background-color'"", ':', ""'Yellow'"", '}', '}', ']);', '```']",challenge not surrounded by ''': ,
"/*
 * reserved comment block
 * DO NOT REMOVE OR ALTER!
 */

/*
 * Copyright  1999-2004 The Apache Software Foundation.
 *
 *  Licensed under the Apache License, Version 2.0 (the ""License"");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an ""AS IS"" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */
package com.sun.org.apache.xml.internal.security.transforms;



import com.sun.org.apache.xml.internal.security.exceptions.XMLSecurityException;


/**
 *
 * @author Christian Geuer-Pollmann
 */
public class TransformationException extends XMLSecurityException {

   /**
         *
         */
        private static final long serialVersionUID = 1L;

   /**
    * Constructor TransformationException
    *
    */
   public TransformationException() {
      super();
   }

   /**
    * Constructor TransformationException
    *
    * @param _msgID
    */
   public TransformationException(String _msgID) {
      super(_msgID);
   }

   /**
    * Constructor TransformationException
    *
    * @param _msgID
    * @param exArgs
    */
   public TransformationException(String _msgID, Object exArgs[]) {
      super(_msgID, exArgs);
   }

   /**
    * Constructor TransformationException
    *
    * @param _msgID
    * @param _originalException
    */
   public TransformationException(String _msgID, Exception _originalException) {
      super(_msgID, _originalException);
   }

   /**
    * Constructor TransformationException
    *
    * @param _msgID
    * @param exArgs
    * @param _originalException
    */
   public TransformationException(String _msgID, Object exArgs[],
                                  Exception _originalException) {
      super(_msgID, exArgs, _originalException);
   }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'reserved', 'comment', 'block', '*', 'DO', 'NOT', 'REMOVE', 'OR', 'ALTER!', '*/', '/*', '*', 'Copyright', '1999-2004', 'The', 'Apache', 'Software', 'Foundation.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*', '*/', 'package', 'com.sun.org.apache.xml.internal.security.transforms;', 'import', 'com.sun.org.apache.xml.internal.security.exceptions.XMLSecurityException;', '/**', '*', '*', '@author', 'Christian', 'Geuer-Pollmann', '*/', 'public', 'class', 'TransformationException', 'extends', 'XMLSecurityException', '{', '/**', '*', '*/', 'private', 'static', 'final', 'long', 'serialVersionUID', '=', '1L;', '/**', '*', 'Constructor', 'TransformationException', '*', '*/', 'public', 'TransformationException()', '{', 'super();', '}', '/**', '*', 'Constructor', 'TransformationException', '*', '*', '@param', '_msgID', '*/', 'public', 'TransformationException(String', '_msgID)', '{', 'super(_msgID);', '}', '/**', '*', 'Constructor', 'TransformationException', '*', '*', '@param', '_msgID', '*', '@param', 'exArgs', '*/', 'public', 'TransformationException(String', '_msgID,', 'Object', 'exArgs[])', '{', 'super(_msgID,', 'exArgs);', '}', '/**', '*', 'Constructor', 'TransformationException', '*', '*', '@param', '_msgID', '*', '@param', '_originalException', '*/', 'public', 'TransformationException(String', '_msgID,', 'Exception', '_originalException)', '{', 'super(_msgID,', '_originalException);', '}', '/**', '*', 'Constructor', 'TransformationException', '*', '*', '@param', '_msgID', '*', '@param', 'exArgs', '*', '@param', '_originalException', '*/', 'public', 'TransformationException(String', '_msgID,', 'Object', 'exArgs[],', 'Exception', '_originalException)', '{', 'super(_msgID,', 'exArgs,', '_originalException);', '}', '}', '```']",challenge not surrounded by ''': ,
"/*
* This file is part of rasdaman community.
*
* Rasdaman community is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* Rasdaman community is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with rasdaman community.  If not, see <http://www.gnu.org/licenses/>.
*
* Copyright 2003, 2004, 2005, 2006, 2007, 2008, 2009 Peter Baumann /
rasdaman GmbH.
*
* For more information please see <http://www.rasdaman.org>
* or contact Peter Baumann via <baumann@rasdaman.com>.
/
/**
 * INCLUDE: mintervaltype.hh
 *
 * MODULE:  raslib
 * CLASS:   r_Minterval_Type
 *
 * COMMENTS:
 *
*/

#ifndef _D_MINTERVAL_TYPE_
#define _D_MINTERVAL_TYPE_

#include ""raslib/type.hh""

//@ManMemo: Module: {\bf raslib}

/*@Doc:
  This class represents the multidimensional interval type in the ODMG conformant
  representation of the RasDaMan type system.
*/

class r_Minterval_Type : public r_Type
{
public:
    /// default constructor
    r_Minterval_Type();

    /// copy constructor
    r_Minterval_Type( const r_Minterval_Type& oldObj );

    /// clone operation
    virtual r_Type* clone() const;

    /// retrieve id of the type.
    virtual r_Type::r_Type_Id type_id() const;

    /// converts array of cells from NT byte order to Unix byte order.
    virtual void convertToLittleEndian(char* cells, r_Area noCells) const;

    /// converts array of cells from Unix byte order to NT byte order.
    virtual void convertToBigEndian(char* cells, r_Area noCells) const;

    /// writes state of object to specified stream
    virtual void print_status( std::ostream& s = std::cout ) const;

    virtual bool isMintervalType() const;

    /// destructor
    ~r_Minterval_Type();
};

//@Doc: write the status of a minterval type to a stream
extern std::ostream &operator<<( std::ostream &str, const r_Minterval_Type &type );

#endif

","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'This', 'file', 'is', 'part', 'of', 'rasdaman', 'community.', '*', '*', 'Rasdaman', 'community', 'is', 'free', 'software:', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', '*', 'it', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'as', 'published', 'by', '*', 'the', 'Free', 'Software', 'Foundation,', 'either', 'version', '3', 'of', 'the', 'License,', 'or', '*', '(at', 'your', 'option)', 'any', 'later', 'version.', '*', '*', 'Rasdaman', 'community', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', '*', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', '*', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', '*', 'GNU', 'General', 'Public', 'License', 'for', 'more', 'details.', '*', '*', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'General', 'Public', 'License', '*', 'along', 'with', 'rasdaman', 'community.', 'If', 'not,', 'see', '<http://www.gnu.org/licenses/>.', '*', '*', 'Copyright', '2003,', '2004,', '2005,', '2006,', '2007,', '2008,', '2009', 'Peter', 'Baumann', '/', 'rasdaman', 'GmbH.', '*', '*', 'For', 'more', 'information', 'please', 'see', '<http://www.rasdaman.org>', '*', 'or', 'contact', 'Peter', 'Baumann', 'via', '<baumann@rasdaman.com>.', '/', '/**', '*', 'INCLUDE:', 'mintervaltype.hh', '*', '*', 'MODULE:', 'raslib', '*', 'CLASS:', 'r_Minterval_Type', '*', '*', 'COMMENTS:', '*', '*/', '#ifndef', '_D_MINTERVAL_TYPE_', '#define', '_D_MINTERVAL_TYPE_', '#include', '""raslib/type.hh""', '//@ManMemo:', 'Module:', '{\\bf', 'raslib}', '/*@Doc:', 'This', 'class', 'represents', 'the', 'multidimensional', 'interval', 'type', 'in', 'the', 'ODMG', 'conformant', 'representation', 'of', 'the', 'RasDaMan', 'type', 'system.', '*/', 'class', 'r_Minterval_Type', ':', 'public', 'r_Type', '{', 'public:', '///', 'default', 'constructor', 'r_Minterval_Type();', '///', 'copy', 'constructor', 'r_Minterval_Type(', 'const', 'r_Minterval_Type&', 'oldObj', ');', '///', 'clone', 'operation', 'virtual', 'r_Type*', 'clone()', 'const;', '///', 'retrieve', 'id', 'of', 'the', 'type.', 'virtual', 'r_Type::r_Type_Id', 'type_id()', 'const;', '///', 'converts', 'array', 'of', 'cells', 'from', 'NT', 'byte', 'order', 'to', 'Unix', 'byte', 'order.', 'virtual', 'void', 'convertToLittleEndian(char*', 'cells,', 'r_Area', 'noCells)', 'const;', '///', 'converts', 'array', 'of', 'cells', 'from', 'Unix', 'byte', 'order', 'to', 'NT', 'byte', 'order.', 'virtual', 'void', 'convertToBigEndian(char*', 'cells,', 'r_Area', 'noCells)', 'const;', '///', 'writes', 'state', 'of', 'object', 'to', 'specified', 'stream', 'virtual', 'void', 'print_status(', 'std::ostream&', 's', '=', 'std::cout', ')', 'const;', 'virtual', 'bool', 'isMintervalType()', 'const;', '///', 'destructor', '~r_Minterval_Type();', '};', '//@Doc:', 'write', 'the', 'status', 'of', 'a', 'minterval', 'type', 'to', 'a', 'stream', 'extern', 'std::ostream', '&operator<<(', 'std::ostream', '&str,', 'const', 'r_Minterval_Type', '&type', ');', '#endif', '```']",challenge not surrounded by ''': ,
"//>>built
define(""dojo/cldr/nls/zh/generic"",{""dateFormatItem-yyyyMMMEd"":""Gy\u5e74M\u6708d\u65e5E"",""field-dayperiod"":""\u4e0a\u5348/\u4e0b\u5348"",""field-minute"":""\u5206\u949f"",""dateFormatItem-MMMEd"":""M\u6708d\u65e5E"",""dateTimeFormat-full"":""{1}{0}"",""field-day-relative+-1"":""\u6628\u5929"",""dateFormatItem-hms"":""ah:mm:ss"",""field-day-relative+-2"":""\u524d\u5929"",""field-weekday"":""\u661f\u671f"",""dateFormatItem-MMM"":""LLL"",""dateTimeFormat-short"":""{1} {0}"",""dateFormatItem-Gy"":""Gy\u5e74"",""dateTimeFormat-medium"":""{1} {0}"",
""field-era"":""\u65f6\u671f"",""field-hour"":""\u5c0f\u65f6"",""dateFormatItem-y"":""Gy\u5e74"",""dateFormatItem-yyyy"":""Gy\u5e74"",""dateFormatItem-Ed"":""d\u65e5E"",""field-day-relative+0"":""\u4eca\u5929"",""field-day-relative+1"":""\u660e\u5929"",""field-day-relative+2"":""\u540e\u5929"",""dateFormatItem-GyMMMd"":""Gy\u5e74M\u6708d\u65e5"",""dateFormatItem-yyyyMMMM"":""Gy\u5e74M\u6708"",""dateFormat-long"":""Gy\u5e74M\u6708d\u65e5"",""field-zone"":""\u65f6\u533a"",""dateFormatItem-Hm"":""HH:mm"",""field-week-relative+-1"":""\u4e0a\u5468"",""dateFormat-medium"":""Gy\u5e74M\u6708d\u65e5"",
""dateFormatItem-Hms"":""HH:mm:ss"",""field-year-relative+0"":""\u4eca\u5e74"",""field-year-relative+1"":""\u660e\u5e74"",""field-year-relative+-1"":""\u53bb\u5e74"",""dateFormatItem-ms"":""mm:ss"",""dateFormatItem-yyyyQQQQ"":""Gy\u5e74QQQQ"",""field-year"":""\u5e74"",""dateTimeFormat-long"":""{1}{0}"",""field-week"":""\u5468"",""dateFormatItem-yyyyMd"":""Gy-M-d"",""dateFormatItem-yyyyMMMd"":""Gy\u5e74M\u6708d\u65e5"",""dateFormatItem-yyyyMEd"":""Gy-M-d\uff08E\uff09"",""dateFormatItem-MMMd"":""M\u6708d\u65e5"",""field-week-relative+0"":""\u672c\u5468"",
""field-week-relative+1"":""\u4e0b\u5468"",""field-month-relative+0"":""\u672c\u6708"",""dateFormatItem-H"":""H\u65f6"",""field-month"":""\u6708"",""field-month-relative+1"":""\u4e0b\u4e2a\u6708"",""dateFormatItem-M"":""M\u6708"",""field-second"":""\u79d2\u949f"",""dateFormatItem-GyMMMEd"":""Gy\u5e74M\u6708d\u65e5E"",""dateFormatItem-GyMMM"":""Gy\u5e74M\u6708"",""field-day"":""\u65e5"",""dateFormatItem-MEd"":""M-dE"",""dateFormatItem-yyyyQQQ"":""Gy\u5e74\u7b2cQ\u5b63\u5ea6"",""dateFormatItem-hm"":""ah:mm"",""dateFormat-short"":""Gy-M-d"",""dateFormatItem-yyyyM"":""Gy-M"",
""dateFormat-full"":""Gy\u5e74M\u6708d\u65e5EEEE"",""dateFormatItem-Md"":""M-d"",""dateFormatItem-yyyyMMM"":""Gy\u5e74M\u6708"",""dateFormatItem-d"":""d\u65e5"",""field-month-relative+-1"":""\u4e0a\u4e2a\u6708"",""dateFormatItem-h"":""ah\u65f6""});
//@ sourceMappingURL=generic.js.map","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//>>built', 'define(""dojo/cldr/nls/zh/generic"",{""dateFormatItem-yyyyMMMEd"":""Gy\\u5e74M\\u6708d\\u65e5E"",""field-dayperiod"":""\\u4e0a\\u5348/\\u4e0b\\u5348"",""field-minute"":""\\u5206\\u949f"",""dateFormatItem-MMMEd"":""M\\u6708d\\u65e5E"",""dateTimeFormat-full"":""{1}{0}"",""field-day-relative+-1"":""\\u6628\\u5929"",""dateFormatItem-hms"":""ah:mm:ss"",""field-day-relative+-2"":""\\u524d\\u5929"",""field-weekday"":""\\u661f\\u671f"",""dateFormatItem-MMM"":""LLL"",""dateTimeFormat-short"":""{1}', '{0}"",""dateFormatItem-Gy"":""Gy\\u5e74"",""dateTimeFormat-medium"":""{1}', '{0}"",', '""field-era"":""\\u65f6\\u671f"",""field-hour"":""\\u5c0f\\u65f6"",""dateFormatItem-y"":""Gy\\u5e74"",""dateFormatItem-yyyy"":""Gy\\u5e74"",""dateFormatItem-Ed"":""d\\u65e5E"",""field-day-relative+0"":""\\u4eca\\u5929"",""field-day-relative+1"":""\\u660e\\u5929"",""field-day-relative+2"":""\\u540e\\u5929"",""dateFormatItem-GyMMMd"":""Gy\\u5e74M\\u6708d\\u65e5"",""dateFormatItem-yyyyMMMM"":""Gy\\u5e74M\\u6708"",""dateFormat-long"":""Gy\\u5e74M\\u6708d\\u65e5"",""field-zone"":""\\u65f6\\u533a"",""dateFormatItem-Hm"":""HH:mm"",""field-week-relative+-1"":""\\u4e0a\\u5468"",""dateFormat-medium"":""Gy\\u5e74M\\u6708d\\u65e5"",', '""dateFormatItem-Hms"":""HH:mm:ss"",""field-year-relative+0"":""\\u4eca\\u5e74"",""field-year-relative+1"":""\\u660e\\u5e74"",""field-year-relative+-1"":""\\u53bb\\u5e74"",""dateFormatItem-ms"":""mm:ss"",""dateFormatItem-yyyyQQQQ"":""Gy\\u5e74QQQQ"",""field-year"":""\\u5e74"",""dateTimeFormat-long"":""{1}{0}"",""field-week"":""\\u5468"",""dateFormatItem-yyyyMd"":""Gy-M-d"",""dateFormatItem-yyyyMMMd"":""Gy\\u5e74M\\u6708d\\u65e5"",""dateFormatItem-yyyyMEd"":""Gy-M-d\\uff08E\\uff09"",""dateFormatItem-MMMd"":""M\\u6708d\\u65e5"",""field-week-relative+0"":""\\u672c\\u5468"",', '""field-week-relative+1"":""\\u4e0b\\u5468"",""field-month-relative+0"":""\\u672c\\u6708"",""dateFormatItem-H"":""H\\u65f6"",""field-month"":""\\u6708"",""field-month-relative+1"":""\\u4e0b\\u4e2a\\u6708"",""dateFormatItem-M"":""M\\u6708"",""field-second"":""\\u79d2\\u949f"",""dateFormatItem-GyMMMEd"":""Gy\\u5e74M\\u6708d\\u65e5E"",""dateFormatItem-GyMMM"":""Gy\\u5e74M\\u6708"",""field-day"":""\\u65e5"",""dateFormatItem-MEd"":""M-dE"",""dateFormatItem-yyyyQQQ"":""Gy\\u5e74\\u7b2cQ\\u5b63\\u5ea6"",""dateFormatItem-hm"":""ah:mm"",""dateFormat-short"":""Gy-M-d"",""dateFormatItem-yyyyM"":""Gy-M"",', '""dateFormat-full"":""Gy\\u5e74M\\u6708d\\u65e5EEEE"",""dateFormatItem-Md"":""M-d"",""dateFormatItem-yyyyMMM"":""Gy\\u5e74M\\u6708"",""dateFormatItem-d"":""d\\u65e5"",""field-month-relative+-1"":""\\u4e0a\\u4e2a\\u6708"",""dateFormatItem-h"":""ah\\u65f6""});', '//@', 'sourceMappingURL=generic.js.map```']",challenge not surrounded by ''': ,
"<script>
function runTest(num)
{
    sel = window.getSelection();
    start = document.getElementById(""test"" + num + ""start"");
    end = document.getElementById(""test"" + num + ""end"");
    sel.setBaseAndExtent(start, 0, end, end.childNodes.length);
    document.execCommand(""Delete"");
}
</script>

<p>This empties a row (the second).  It should be removed. <b>This demonstrates a bug: the two cells that contained the ends of the selection aren't given a placeholder and so appear differently than the other emptied cells.</b></p>
<div contenteditable=""true"">
<table border=""1"">
<tr><td>1</td><td id=""test1start"">2</td><td>3</td></tr>
<tr><td>4</td><td>5</td><td>6</td></tr>
<tr><td>7</td><td id=""test1end"">8</td><td>9</td></tr>
</table>
</div>

<script>runTest(1);</script>


<p>This empties a row (the second), but it still contains the selection and so shouldn't be removed.</p>
<div contenteditable=""true"">
<table border=""1"">
<tr><td>1</td><td>2</td><td>3</td></tr>
<tr><td id=""test2start"">4</td><td>5</td><td id=""test2end"">6</td></tr>
<tr><td>7</td><td>8</td><td>9</td></tr>
</table>
</div>

<script>runTest(2);</script>

<p>This empties the first row, it should be removed.</p>
<div contenteditable=""true"">
<div>Hello <span id=""test3start"">world!</span></div>
<table border=""1"">
<tr><td>1</td><td>2</td><td>3</td></tr>
<tr><td>4</td><td id=""test3end"">5</td><td>6</td></tr>
<tr><td>7</td><td>8</td><td>9</td></tr>
</table>
</div>

<script>runTest(3);</script>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<script>', 'function', 'runTest(num)', '{', 'sel', '=', 'window.getSelection();', 'start', '=', 'document.getElementById(""test""', '+', 'num', '+', '""start"");', 'end', '=', 'document.getElementById(""test""', '+', 'num', '+', '""end"");', 'sel.setBaseAndExtent(start,', '0,', 'end,', 'end.childNodes.length);', 'document.execCommand(""Delete"");', '}', '</script>', '<p>This', 'empties', 'a', 'row', '(the', 'second).', 'It', 'should', 'be', 'removed.', '<b>This', 'demonstrates', 'a', 'bug:', 'the', 'two', 'cells', 'that', 'contained', 'the', 'ends', 'of', 'the', 'selection', ""aren't"", 'given', 'a', 'placeholder', 'and', 'so', 'appear', 'differently', 'than', 'the', 'other', 'emptied', 'cells.</b></p>', '<div', 'contenteditable=""true"">', '<table', 'border=""1"">', '<tr><td>1</td><td', 'id=""test1start"">2</td><td>3</td></tr>', '<tr><td>4</td><td>5</td><td>6</td></tr>', '<tr><td>7</td><td', 'id=""test1end"">8</td><td>9</td></tr>', '</table>', '</div>', '<script>runTest(1);</script>', '<p>This', 'empties', 'a', 'row', '(the', 'second),', 'but', 'it', 'still', 'contains', 'the', 'selection', 'and', 'so', ""shouldn't"", 'be', 'removed.</p>', '<div', 'contenteditable=""true"">', '<table', 'border=""1"">', '<tr><td>1</td><td>2</td><td>3</td></tr>', '<tr><td', 'id=""test2start"">4</td><td>5</td><td', 'id=""test2end"">6</td></tr>', '<tr><td>7</td><td>8</td><td>9</td></tr>', '</table>', '</div>', '<script>runTest(2);</script>', '<p>This', 'empties', 'the', 'first', 'row,', 'it', 'should', 'be', 'removed.</p>', '<div', 'contenteditable=""true"">', '<div>Hello', '<span', 'id=""test3start"">world!</span></div>', '<table', 'border=""1"">', '<tr><td>1</td><td>2</td><td>3</td></tr>', '<tr><td>4</td><td', 'id=""test3end"">5</td><td>6</td></tr>', '<tr><td>7</td><td>8</td><td>9</td></tr>', '</table>', '</div>', '<script>runTest(3);</script>', '```']",challenge not surrounded by ''': ,
"<html devsite><head>
  <title>Utiliser la Search Console</title>
  <meta name=""project_path"" value=""/web/fundamentals/_project.yaml""/>
  <meta name=""book_path"" value=""/web/fundamentals/_book.yaml""/>
</head>
  <body>
    <p>Si vous avez déjà <a href=""https://www.support.google.com/webmasters/answer/35179"">confirmé que vous êtes le propriétaire</a> de votre site, vous pouvez ignorer la première action décrite ci-dessous et passer directement à la vérification des données relatives à votre site dans la Search Console.</p>
<div class=""video-wrapper"">
  <iframe class=""devsite-embedded-youtube-video"" data-video-id=""jC7jja6ebBM"" data-autohide=""1"" data-showinfo=""0"" frameborder=""0"" allowfullscreen>
  </iframe>
</div>

<h3>Vous aurez besoin :</h3>

<ul>
  <li>de <a href=""https://www.support.google.com/webmasters/answer/35179"">confirmer que vous êtes le propriétaire</a> de votre site. Pour ce faire, vous devez par exemple être en mesure d'ajouter un fichier dans le répertoire racine, de créer des <a href=""https://www.support.google.com/webmasters/answer/79812"">balises Meta</a>, ou vous devez être propriétaire d'un compte administrateur Google Analytics pour le site.</li>
</ul>

<div class=""action"">
  <h3>Ce que vous allez devoir faire :</h3>

  <p>Dans cette section, vous allez effectuer les actions suivantes :</p>

  <ol>
    <li><a href=""#verify"">Valider la propriété de votre site dans la Search Console</a></li>
    <li><a href=""#check"">Vérifier si le pirate informatique n'a pas déjà confirmé qu'il était le propriétaire de votre site dans la Search Console et procédé à des modifications indésirables des paramètres</a></li>
    <li><a href=""#determine"">Déterminer la nature de l'attaque</a></li>
  </ol>
</div>
<a name=""verify""></a>

<h4>Valider la propriété de votre site dans la Search Console</h4>

<ol>
  <li>Ouvrez un navigateur et accédez au centre pour les webmasters à l'adresse <a href=""https://www.google.com/webmaster"">http://www.google.com/webmasters</a>.</li>
  <li>Cliquez sur <strong>Search Console</strong>.</li>
  <li>Connectez-vous à la Search Console à l'aide d'un <a href=""https://www.google.com/accounts"">compte Google</a>.
    Si vous ne possédez pas de compte Google, cliquez sur <strong>Créer un compte</strong>. Créer un compte Google n'entraîne pas la perte du compte de messagerie que vous possédez éventuellement déjà chez une autre société.
    <a href=""https://accounts.google.com/SignUp"">En savoir plus sur les comptes</a></li>
  <li>Cliquez sur <strong>Ajouter un site</strong>. Saisissez l'URL de votre site dans le champ, puis cliquez sur <strong>Continuer</strong>.</li>
  <li>Sélectionnez la méthode de validation qui vous convient le mieux. La méthode que nous considérons comme la plus adaptée s'affiche dans l'onglet <strong>Méthode recommandée</strong> de la page de validation. D'autres méthodes sont proposées dans l'onglet <strong>Autres méthodes</strong>.
    <a href=""https://goo.gl/kQnHQ"">En savoir plus sur la validation</a></li>
  <li>Remettez votre site en ligne si vous avez sélectionné une méthode de validation qui exige d'avoir accès à celui-ci, telle qu'une balise Meta en HTML ou un fichier HTML.</li>
  <li>Cliquez sur <strong>Valider</strong> pour confirmer que vous êtes bien propriétaire de votre site à l'aide de la méthode sélectionnée. Si la validation fonctionne, un écran de félicitation s'affiche et confirme que vous êtes bien le propriétaire de votre site.
    Vous pouvez à nouveau retirer votre site du Web, mais sachez qu'il devra être en ligne lors de certaines des étapes suivantes.</li>
</ol>
<a name=""check""></a>

<h4>Une fois le site validé, vérifiez si le pirate informatique n'a pas déjà confirmé qu'il était le propriétaire de votre site dans la Search Console et procédé à des modifications indésirables des paramètres.</h4>

<ol>
  <li>Accédez à la page d'accueil principale de la Search Console en cliquant sur le logo de cette dernière.</li>
  <li>Cliquez sur l'option <strong>Gérer le site</strong> correspondant à votre site.</li>
  <li>Cliquez sur <strong>Ajouter ou supprimer des comptes utilisateur</strong>.</li>
  <li>Assurez-vous que tous les <a href=""https://www.support.google.com/webmasters/answer/44227"">utilisateurs et propriétaires</a> affichés sont autorisés.</li>
  <li>Notez l'adresse e-mail des éventuels utilisateurs non autorisés (cela pourrait vous être utile plus tard), puis supprimez-les de votre site. Pour les propriétaires non autorisés, vous devez à la fois supprimer le propriétaire et tous les éventuels jetons de validation, tels qu'une balise Meta de validation sur votre page d'accueil ou un fichier HTML sur votre serveur. <a href=""https://www.support.google.com/webmasters/answer/2454036"">En savoir plus</a></li>
  <li>Vérifiez que des modifications indésirables des paramètres n'ont pas été effectuées dans la Search Console. Cliquez sur l'icône des paramètres<span class=""material-icons""></span>, puis sur <a href=""https://www.support.google.com/webmasters/answer/2454036""><strong>Paramètres du site</strong></a> pour savoir si le pirate informatique les a modifiés, par exemple en réduisant la <a href=""https://www.support.google.com/webmasters/answer/48620"">vitesse d'exploration</a>, peut-être dans le but d'éviter les robots des moteurs de recherche. Vérifiez également que rien d'inhabituel ne s'affiche dans la section <strong>Index Google</strong> &gt; <a href=""https://www.support.google.com/webmasters/answer/164734"">URL à supprimer</a> ni dans l'outil <span class=""material-icons"">Changement d'adresse</span>, accessible en cliquant sur les <a href=""https://www.support.google.com/webmasters/answer/83106"">paramètres</a>.</li>
</ol>
<a name=""determine""></a>

<h4>Déterminer la nature de l'attaque</h4>

<p>Les informations affichées dans le centre de messagerie et la section ""Problèmes de sécurité"" de la Search Console peuvent vous aider à déterminer si votre site a été piraté de l'une des manières suivantes :</p>

<ul>
  <li>Par un contenu de type spam qui pourrait réduire la qualité et la pertinence des résultats de recherche</li>
  <li>À des fins d'hameçonnage</li>
  <li>Pour distribuer des logiciels malveillants</li>
</ul>

<p>Pour détecter un éventuel piratage ou la présence de logiciels malveillants sur votre site à l'aide de la Search Console, procédez de la façon suivante :</p>

<ol>
  <li>Accédez à la page d'accueil de la Search Console en cliquant sur le logo Search Console situé dans l'angle supérieur.</li>
  <li>Cliquez sur <strong>Messages</strong>.</li>
  <li>Vérifiez qu'aucun message important de notre part ne s'affiche indiquant que votre site 1) comporte des pages, du texte ou des liens de type spam, 2) a recours à des techniques d'hameçonnage, 3) est utilisé pour distribuer des logiciels malveillants. Si vous avez reçu une notification pour cause d'hameçonnage, veuillez ne pas supprimer ce message tant que vous n'avez pas effectué la totalité du processus de récupération.</li>
  <li>Accédez à la page <strong>Problèmes de sécurité</strong> dans la Search Console.
    <ul>
      <li>Un en-tête ""Logiciels malveillants"" de premier niveau, ainsi que des catégories de logiciels malveillants, telles que ""Configuration du serveur modifiée"" ou ""Injection de modèle d'erreur"" s'affichent sur les sites affectés par des logiciels malveillants. Cela signifie qu'il est possible que le pirate informatique utilise votre site pour infecter les visiteurs avec des logiciels conçus pour accéder à des informations confidentielles ou endommager leur ordinateur. Pour savoir comment résoudre ce problème, veuillez vous reporter à l'étape <a href=""hacked_with_malware"">Évaluer les dommages (Piratage de type spam)</a>.
      </li>
      <li>Un en-tête ""Piraté"" de premier niveau ainsi que des catégories de piratage, comme ""Injection de contenu"", s'affichent sur les sites qui ont été piratés pour diffuser du spam. Il est probable que le pirate informatique a intégré des pages, du texte ou des liens contenant du spam dans votre site. Pour savoir comment résoudre ce problème, veuillez vous reporter à l'étape <a href=""hacked_with_spam"">Évaluer les dommages (Piratage de type spam)</a>.</li>
      <li>En cas de notification pour cause d'hameçonnage dans le centre de messagerie de la Search Console, il est possible qu'aucune information sur les sites concernés ne s'affiche dans la section ""Problèmes de sécurité"". La création de pages d'hameçonnage sur votre site permet au pirate de l'utiliser pour obtenir l'identifiant, le mot de passe ou les détails financiers des internautes, souvent en modifiant l'apparence de ces pages de sorte que les visiteurs pensent qu'il s'agit d'un site fiable. Étant donné que les solutions pour résoudre les problèmes d'hameçonnage et de spam sont similaires, veuillez vous reporter à l'étape <a href=""hacked_with_spam"">Évaluer les dommages (Piratage de type spam)</a>.</li>
    </ul>
  </li>
</ol>

<h2>Étape suivante</h2>

<p>L'étape suivante du processus consiste à <a href=""hacked_with_spam"">Évaluer les dommages (Piratage de type spam)</a> ou à <a href=""hacked_with_malware"">Évaluer les dommages (Piratage de type logiciel malveillant)</a>.</p>

</body></html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<html', 'devsite><head>', '<title>Utiliser', 'la', 'Search', 'Console</title>', '<meta', 'name=""project_path""', 'value=""/web/fundamentals/_project.yaml""/>', '<meta', 'name=""book_path""', 'value=""/web/fundamentals/_book.yaml""/>', '</head>', '<body>', '<p>Si', 'vous', 'avez', 'déjà', '<a', 'href=""https://www.support.google.com/webmasters/answer/35179"">confirmé', 'que', 'vous', 'êtes', 'le', 'propriétaire</a>', 'de', 'votre', 'site,', 'vous', 'pouvez', 'ignorer', 'la', 'première', 'action', 'décrite', 'ci-dessous', 'et', 'passer', 'directement', 'à', 'la', 'vérification', 'des', 'données', 'relatives', 'à', 'votre', 'site', 'dans', 'la', 'Search', 'Console.</p>', '<div', 'class=""video-wrapper"">', '<iframe', 'class=""devsite-embedded-youtube-video""', 'data-video-id=""jC7jja6ebBM""', 'data-autohide=""1""', 'data-showinfo=""0""', 'frameborder=""0""', 'allowfullscreen>', '</iframe>', '</div>', '<h3>Vous', 'aurez', 'besoin', ':</h3>', '<ul>', '<li>de', '<a', 'href=""https://www.support.google.com/webmasters/answer/35179"">confirmer', 'que', 'vous', 'êtes', 'le', 'propriétaire</a>', 'de', 'votre', 'site.', 'Pour', 'ce', 'faire,', 'vous', 'devez', 'par', 'exemple', 'être', 'en', 'mesure', ""d'ajouter"", 'un', 'fichier', 'dans', 'le', 'répertoire', 'racine,', 'de', 'créer', 'des', '<a', 'href=""https://www.support.google.com/webmasters/answer/79812"">balises', 'Meta</a>,', 'ou', 'vous', 'devez', 'être', 'propriétaire', ""d'un"", 'compte', 'administrateur', 'Google', 'Analytics', 'pour', 'le', 'site.</li>', '</ul>', '<div', 'class=""action"">', '<h3>Ce', 'que', 'vous', 'allez', 'devoir', 'faire', ':</h3>', '<p>Dans', 'cette', 'section,', 'vous', 'allez', 'effectuer', 'les', 'actions', 'suivantes', ':</p>', '<ol>', '<li><a', 'href=""#verify"">Valider', 'la', 'propriété', 'de', 'votre', 'site', 'dans', 'la', 'Search', 'Console</a></li>', '<li><a', 'href=""#check"">Vérifier', 'si', 'le', 'pirate', 'informatique', ""n'a"", 'pas', 'déjà', 'confirmé', ""qu'il"", 'était', 'le', 'propriétaire', 'de', 'votre', 'site', 'dans', 'la', 'Search', 'Console', 'et', 'procédé', 'à', 'des', 'modifications', 'indésirables', 'des', 'paramètres</a></li>', '<li><a', 'href=""#determine"">Déterminer', 'la', 'nature', 'de', ""l'attaque</a></li>"", '</ol>', '</div>', '<a', 'name=""verify""></a>', '<h4>Valider', 'la', 'propriété', 'de', 'votre', 'site', 'dans', 'la', 'Search', 'Console</h4>', '<ol>', '<li>Ouvrez', 'un', 'navigateur', 'et', 'accédez', 'au', 'centre', 'pour', 'les', 'webmasters', 'à', ""l'adresse"", '<a', 'href=""https://www.google.com/webmaster"">http://www.google.com/webmasters</a>.</li>', '<li>Cliquez', 'sur', '<strong>Search', 'Console</strong>.</li>', '<li>Connectez-vous', 'à', 'la', 'Search', 'Console', 'à', ""l'aide"", ""d'un"", '<a', 'href=""https://www.google.com/accounts"">compte', 'Google</a>.', 'Si', 'vous', 'ne', 'possédez', 'pas', 'de', 'compte', 'Google,', 'cliquez', 'sur', '<strong>Créer', 'un', 'compte</strong>.', 'Créer', 'un', 'compte', 'Google', ""n'entraîne"", 'pas', 'la', 'perte', 'du', 'compte', 'de', 'messagerie', 'que', 'vous', 'possédez', 'éventuellement', 'déjà', 'chez', 'une', 'autre', 'société.', '<a', 'href=""https://accounts.google.com/SignUp"">En', 'savoir', 'plus', 'sur', 'les', 'comptes</a></li>', '<li>Cliquez', 'sur', '<strong>Ajouter', 'un', 'site</strong>.', 'Saisissez', ""l'URL"", 'de', 'votre', 'site', 'dans', 'le', 'champ,', 'puis', 'cliquez', 'sur', '<strong>Continuer</strong>.</li>', '<li>Sélectionnez', 'la', 'méthode', 'de', 'validation', 'qui', 'vous', 'convient', 'le', 'mieux.', 'La', 'méthode', 'que', 'nous', 'considérons', 'comme', 'la', 'plus', 'adaptée', ""s'affiche"", 'dans', ""l'onglet"", '<strong>Méthode', 'recommandée</strong>', 'de', 'la', 'page', 'de', 'validation.', ""D'autres"", 'méthodes', 'sont', 'proposées', 'dans', ""l'onglet"", '<strong>Autres', 'méthodes</strong>.', '<a', 'href=""https://goo.gl/kQnHQ"">En', 'savoir', 'plus', 'sur', 'la', 'validation</a></li>', '<li>Remettez', 'votre', 'site', 'en', 'ligne', 'si', 'vous', 'avez', 'sélectionné', 'une', 'méthode', 'de', 'validation', 'qui', 'exige', ""d'avoir"", 'accès', 'à', 'celui-ci,', 'telle', ""qu'une"", 'balise', 'Meta', 'en', 'HTML', 'ou', 'un', 'fichier', 'HTML.</li>', '<li>Cliquez', 'sur', '<strong>Valider</strong>', 'pour', 'confirmer', 'que', 'vous', 'êtes', 'bien', 'propriétaire', 'de', 'votre', 'site', 'à', ""l'aide"", 'de', 'la', 'méthode', 'sélectionnée.', 'Si', 'la', 'validation', 'fonctionne,', 'un', 'écran', 'de', 'félicitation', ""s'affiche"", 'et', 'confirme', 'que', 'vous', 'êtes', 'bien', 'le', 'propriétaire', 'de', 'votre', 'site.', 'Vous', 'pouvez', 'à', 'nouveau', 'retirer', 'votre', 'site', 'du', 'Web,', 'mais', 'sachez', ""qu'il"", 'devra', 'être', 'en', 'ligne', 'lors', 'de', 'certaines', 'des', 'étapes', 'suivantes.</li>', '</ol>', '<a', 'name=""check""></a>', '<h4>Une', 'fois', 'le', 'site', 'validé,', 'vérifiez', 'si', 'le', 'pirate', 'informatique', ""n'a"", 'pas', 'déjà', 'confirmé', ""qu'il"", 'était', 'le', 'propriétaire', 'de', 'votre', 'site', 'dans', 'la', 'Search', 'Console', 'et', 'procédé', 'à', 'des', 'modifications', 'indésirables', 'des', 'paramètres.</h4>', '<ol>', '<li>Accédez', 'à', 'la', 'page', ""d'accueil"", 'principale', 'de', 'la', 'Search', 'Console', 'en', 'cliquant', 'sur', 'le', 'logo', 'de', 'cette', 'dernière.</li>', '<li>Cliquez', 'sur', ""l'option"", '<strong>Gérer', 'le', 'site</strong>', 'correspondant', 'à', 'votre', 'site.</li>', '<li>Cliquez', 'sur', '<strong>Ajouter', 'ou', 'supprimer', 'des', 'comptes', 'utilisateur</strong>.</li>', '<li>Assurez-vous', 'que', 'tous', 'les', '<a', 'href=""https://www.support.google.com/webmasters/answer/44227"">utilisateurs', 'et', 'propriétaires</a>', 'affichés', 'sont', 'autorisés.</li>', '<li>Notez', ""l'adresse"", 'e-mail', 'des', 'éventuels', 'utilisateurs', 'non', 'autorisés', '(cela', 'pourrait', 'vous', 'être', 'utile', 'plus', 'tard),', 'puis', 'supprimez-les', 'de', 'votre', 'site.', 'Pour', 'les', 'propriétaires', 'non', 'autorisés,', 'vous', 'devez', 'à', 'la', 'fois', 'supprimer', 'le', 'propriétaire', 'et', 'tous', 'les', 'éventuels', 'jetons', 'de', 'validation,', 'tels', ""qu'une"", 'balise', 'Meta', 'de', 'validation', 'sur', 'votre', 'page', ""d'accueil"", 'ou', 'un', 'fichier', 'HTML', 'sur', 'votre', 'serveur.', '<a', 'href=""https://www.support.google.com/webmasters/answer/2454036"">En', 'savoir', 'plus</a></li>', '<li>Vérifiez', 'que', 'des', 'modifications', 'indésirables', 'des', 'paramètres', ""n'ont"", 'pas', 'été', 'effectuées', 'dans', 'la', 'Search', 'Console.', 'Cliquez', 'sur', ""l'icône"", 'des', 'paramètres<span', 'class=""material-icons""></span>,', 'puis', 'sur', '<a', 'href=""https://www.support.google.com/webmasters/answer/2454036""><strong>Paramètres', 'du', 'site</strong></a>', 'pour', 'savoir', 'si', 'le', 'pirate', 'informatique', 'les', 'a', 'modifiés,', 'par', 'exemple', 'en', 'réduisant', 'la', '<a', 'href=""https://www.support.google.com/webmasters/answer/48620"">vitesse', ""d'exploration</a>,"", 'peut-être', 'dans', 'le', 'but', ""d'éviter"", 'les', 'robots', 'des', 'moteurs', 'de', 'recherche.', 'Vérifiez', 'également', 'que', 'rien', ""d'inhabituel"", 'ne', ""s'affiche"", 'dans', 'la', 'section', '<strong>Index', 'Google</strong>', '&gt;', '<a', 'href=""https://www.support.google.com/webmasters/answer/164734"">URL', 'à', 'supprimer</a>', 'ni', 'dans', ""l'outil"", '<span', 'class=""material-icons"">Changement', ""d'adresse</span>,"", 'accessible', 'en', 'cliquant', 'sur', 'les', '<a', 'href=""https://www.support.google.com/webmasters/answer/83106"">paramètres</a>.</li>', '</ol>', '<a', 'name=""determine""></a>', '<h4>Déterminer', 'la', 'nature', 'de', ""l'attaque</h4>"", '<p>Les', 'informations', 'affichées', 'dans', 'le', 'centre', 'de', 'messagerie', 'et', 'la', 'section', '""Problèmes', 'de', 'sécurité""', 'de', 'la', 'Search', 'Console', 'peuvent', 'vous', 'aider', 'à', 'déterminer', 'si', 'votre', 'site', 'a', 'été', 'piraté', 'de', ""l'une"", 'des', 'manières', 'suivantes', ':</p>', '<ul>', '<li>Par', 'un', 'contenu', 'de', 'type', 'spam', 'qui', 'pourrait', 'réduire', 'la', 'qualité', 'et', 'la', 'pertinence', 'des', 'résultats', 'de', 'recherche</li>', '<li>À', 'des', 'fins', ""d'hameçonnage</li>"", '<li>Pour', 'distribuer', 'des', 'logiciels', 'malveillants</li>', '</ul>', '<p>Pour', 'détecter', 'un', 'éventuel', 'piratage', 'ou', 'la', 'présence', 'de', 'logiciels', 'malveillants', 'sur', 'votre', 'site', 'à', ""l'aide"", 'de', 'la', 'Search', 'Console,', 'procédez', 'de', 'la', 'façon', 'suivante', ':</p>', '<ol>', '<li>Accédez', 'à', 'la', 'page', ""d'accueil"", 'de', 'la', 'Search', 'Console', 'en', 'cliquant', 'sur', 'le', 'logo', 'Search', 'Console', 'situé', 'dans', ""l'angle"", 'supérieur.</li>', '<li>Cliquez', 'sur', '<strong>Messages</strong>.</li>', '<li>Vérifiez', ""qu'aucun"", 'message', 'important', 'de', 'notre', 'part', 'ne', ""s'affiche"", 'indiquant', 'que', 'votre', 'site', '1)', 'comporte', 'des', 'pages,', 'du', 'texte', 'ou', 'des', 'liens', 'de', 'type', 'spam,', '2)', 'a', 'recours', 'à', 'des', 'techniques', ""d'hameçonnage,"", '3)', 'est', 'utilisé', 'pour', 'distribuer', 'des', 'logiciels', 'malveillants.', 'Si', 'vous', 'avez', 'reçu', 'une', 'notification', 'pour', 'cause', ""d'hameçonnage,"", 'veuillez', 'ne', 'pas', 'supprimer', 'ce', 'message', 'tant', 'que', 'vous', ""n'avez"", 'pas', 'effectué', 'la', 'totalité', 'du', 'processus', 'de', 'récupération.</li>', '<li>Accédez', 'à', 'la', 'page', '<strong>Problèmes', 'de', 'sécurité</strong>', 'dans', 'la', 'Search', 'Console.', '<ul>', '<li>Un', 'en-tête', '""Logiciels', 'malveillants""', 'de', 'premier', 'niveau,', 'ainsi', 'que', 'des', 'catégories', 'de', 'logiciels', 'malveillants,', 'telles', 'que', '""Configuration', 'du', 'serveur', 'modifiée""', 'ou', '""Injection', 'de', 'modèle', 'd\'erreur""', ""s'affichent"", 'sur', 'les', 'sites', 'affectés', 'par', 'des', 'logiciels', 'malveillants.', 'Cela', 'signifie', ""qu'il"", 'est', 'possible', 'que', 'le', 'pirate', 'informatique', 'utilise', 'votre', 'site', 'pour', 'infecter', 'les', 'visiteurs', 'avec', 'des', 'logiciels', 'conçus', 'pour', 'accéder', 'à', 'des', 'informations', 'confidentielles', 'ou', 'endommager', 'leur', 'ordinateur.', 'Pour', 'savoir', 'comment', 'résoudre', 'ce', 'problème,', 'veuillez', 'vous', 'reporter', 'à', ""l'étape"", '<a', 'href=""hacked_with_malware"">Évaluer', 'les', 'dommages', '(Piratage', 'de', 'type', 'spam)</a>.', '</li>', '<li>Un', 'en-tête', '""Piraté""', 'de', 'premier', 'niveau', 'ainsi', 'que', 'des', 'catégories', 'de', 'piratage,', 'comme', '""Injection', 'de', 'contenu"",', ""s'affichent"", 'sur', 'les', 'sites', 'qui', 'ont', 'été', 'piratés', 'pour', 'diffuser', 'du', 'spam.', 'Il', 'est', 'probable', 'que', 'le', 'pirate', 'informatique', 'a', 'intégré', 'des', 'pages,', 'du', 'texte', 'ou', 'des', 'liens', 'contenant', 'du', 'spam', 'dans', 'votre', 'site.', 'Pour', 'savoir', 'comment', 'résoudre', 'ce', 'problème,', 'veuillez', 'vous', 'reporter', 'à', ""l'étape"", '<a', 'href=""hacked_with_spam"">Évaluer', 'les', 'dommages', '(Piratage', 'de', 'type', 'spam)</a>.</li>', '<li>En', 'cas', 'de', 'notification', 'pour', 'cause', ""d'hameçonnage"", 'dans', 'le', 'centre', 'de', 'messagerie', 'de', 'la', 'Search', 'Console,', 'il', 'est', 'possible', ""qu'aucune"", 'information', 'sur', 'les', 'sites', 'concernés', 'ne', ""s'affiche"", 'dans', 'la', 'section', '""Problèmes', 'de', 'sécurité"".', 'La', 'création', 'de', 'pages', ""d'hameçonnage"", 'sur', 'votre', 'site', 'permet', 'au', 'pirate', 'de', ""l'utiliser"", 'pour', 'obtenir', ""l'identifiant,"", 'le', 'mot', 'de', 'passe', 'ou', 'les', 'détails', 'financiers', 'des', 'internautes,', 'souvent', 'en', 'modifiant', ""l'apparence"", 'de', 'ces', 'pages', 'de', 'sorte', 'que', 'les', 'visiteurs', 'pensent', ""qu'il"", ""s'agit"", ""d'un"", 'site', 'fiable.', 'Étant', 'donné', 'que', 'les', 'solutions', 'pour', 'résoudre', 'les', 'problèmes', ""d'hameçonnage"", 'et', 'de', 'spam', 'sont', 'similaires,', 'veuillez', 'vous', 'reporter', 'à', ""l'étape"", '<a', 'href=""hacked_with_spam"">Évaluer', 'les', 'dommages', '(Piratage', 'de', 'type', 'spam)</a>.</li>', '</ul>', '</li>', '</ol>', '<h2>Étape', 'suivante</h2>', ""<p>L'étape"", 'suivante', 'du', 'processus', 'consiste', 'à', '<a', 'href=""hacked_with_spam"">Évaluer', 'les', 'dommages', '(Piratage', 'de', 'type', 'spam)</a>', 'ou', 'à', '<a', 'href=""hacked_with_malware"">Évaluer', 'les', 'dommages', '(Piratage', 'de', 'type', 'logiciel', 'malveillant)</a>.</p>', '</body></html>', '```']",challenge not surrounded by ''': ,
"// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) braces deadcode fieldsfirst 

package net.minecraft.src;

import java.io.*;

// Referenced classes of package net.minecraft.src:
//            Packet, NetHandler

public class Packet250CustomPayload extends Packet
{

    public String field_44012_a;
    public int field_44010_b;
    public byte field_44011_c[];

    public Packet250CustomPayload()
    {
    }

    public void func_327_a(DataInputStream p_327_1_)
        throws IOException
    {
        field_44012_a = func_27048_a(p_327_1_, 16);
        field_44010_b = p_327_1_.readShort();
        if(field_44010_b > 0 && field_44010_b < 32767)
        {
            field_44011_c = new byte[field_44010_b];
            p_327_1_.readFully(field_44011_c);
        }
    }

    public void func_322_a(DataOutputStream p_322_1_)
        throws IOException
    {
        func_27049_a(field_44012_a, p_322_1_);
        p_322_1_.writeShort((short)field_44010_b);
        if(field_44011_c != null)
        {
            p_322_1_.write(field_44011_c);
        }
    }

    public void func_323_a(NetHandler p_323_1_)
    {
        p_323_1_.func_44028_a(this);
    }

    public int func_329_a()
    {
        return 2 + field_44012_a.length() * 2 + 2 + field_44010_b;
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//', 'Decompiled', 'by', 'Jad', 'v1.5.8g.', 'Copyright', '2001', 'Pavel', 'Kouznetsov.', '//', 'Jad', 'home', 'page:', 'http://www.kpdus.com/jad.html', '//', 'Decompiler', 'options:', 'packimports(3)', 'braces', 'deadcode', 'fieldsfirst', 'package', 'net.minecraft.src;', 'import', 'java.io.*;', '//', 'Referenced', 'classes', 'of', 'package', 'net.minecraft.src:', '//', 'Packet,', 'NetHandler', 'public', 'class', 'Packet250CustomPayload', 'extends', 'Packet', '{', 'public', 'String', 'field_44012_a;', 'public', 'int', 'field_44010_b;', 'public', 'byte', 'field_44011_c[];', 'public', 'Packet250CustomPayload()', '{', '}', 'public', 'void', 'func_327_a(DataInputStream', 'p_327_1_)', 'throws', 'IOException', '{', 'field_44012_a', '=', 'func_27048_a(p_327_1_,', '16);', 'field_44010_b', '=', 'p_327_1_.readShort();', 'if(field_44010_b', '>', '0', '&&', 'field_44010_b', '<', '32767)', '{', 'field_44011_c', '=', 'new', 'byte[field_44010_b];', 'p_327_1_.readFully(field_44011_c);', '}', '}', 'public', 'void', 'func_322_a(DataOutputStream', 'p_322_1_)', 'throws', 'IOException', '{', 'func_27049_a(field_44012_a,', 'p_322_1_);', 'p_322_1_.writeShort((short)field_44010_b);', 'if(field_44011_c', '!=', 'null)', '{', 'p_322_1_.write(field_44011_c);', '}', '}', 'public', 'void', 'func_323_a(NetHandler', 'p_323_1_)', '{', 'p_323_1_.func_44028_a(this);', '}', 'public', 'int', 'func_329_a()', '{', 'return', '2', '+', 'field_44012_a.length()', '*', '2', '+', '2', '+', 'field_44010_b;', '}', '}', '```']",challenge not surrounded by ''': ,
"package com.android.supervolley.sample.samples.json_query_params.api;


import com.android.supervolley.Call;
import com.android.supervolley.annotation.Query;
import com.android.supervolley.mock.BehaviorDelegate;
import com.android.supervolley.sample.samples.json_query_params.annotations.Json;
import com.android.supervolley.sample.samples.json_query_params.model.Filter;
import com.android.supervolley.sample.samples.json_query_params.model.User;

import java.util.ArrayList;
import java.util.List;

import okhttp3.ResponseBody;

public class MockService implements Service {

    private final BehaviorDelegate<Service> delegate;
    private final List<User> users;

    public MockService(BehaviorDelegate<Service> delegate) {
        this.delegate = delegate;
        this.users = new ArrayList<>();
        users.add(new User(1, ""Test""));
        users.add(new User(2, ""Test2""));
        users.add(new User(3, ""Test3""));
        users.add(new User(4, ""Test4""));
    }

    @Override
    public Call<ResponseBody> example(@Json @Query(""value"") Filter value) {
        User user = null;
        for (User u : users) {
            if (u.id == value.userId) {
                user = u;
            }
        }
        return delegate.returningResponse(user).example(value);
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.android.supervolley.sample.samples.json_query_params.api;', 'import', 'com.android.supervolley.Call;', 'import', 'com.android.supervolley.annotation.Query;', 'import', 'com.android.supervolley.mock.BehaviorDelegate;', 'import', 'com.android.supervolley.sample.samples.json_query_params.annotations.Json;', 'import', 'com.android.supervolley.sample.samples.json_query_params.model.Filter;', 'import', 'com.android.supervolley.sample.samples.json_query_params.model.User;', 'import', 'java.util.ArrayList;', 'import', 'java.util.List;', 'import', 'okhttp3.ResponseBody;', 'public', 'class', 'MockService', 'implements', 'Service', '{', 'private', 'final', 'BehaviorDelegate<Service>', 'delegate;', 'private', 'final', 'List<User>', 'users;', 'public', 'MockService(BehaviorDelegate<Service>', 'delegate)', '{', 'this.delegate', '=', 'delegate;', 'this.users', '=', 'new', 'ArrayList<>();', 'users.add(new', 'User(1,', '""Test""));', 'users.add(new', 'User(2,', '""Test2""));', 'users.add(new', 'User(3,', '""Test3""));', 'users.add(new', 'User(4,', '""Test4""));', '}', '@Override', 'public', 'Call<ResponseBody>', 'example(@Json', '@Query(""value"")', 'Filter', 'value)', '{', 'User', 'user', '=', 'null;', 'for', '(User', 'u', ':', 'users)', '{', 'if', '(u.id', '==', 'value.userId)', '{', 'user', '=', 'u;', '}', '}', 'return', 'delegate.returningResponse(user).example(value);', '}', '}', '```']",challenge not surrounded by ''': ,
"mkdir -p simulation
ghdl -i --ieee=synopsys  --workdir=simulation --work=work real_tb.vhd 
ghdl -m --ieee=synopsys  --syn-binding --workdir=simulation --work=work real_tb
simulation/real_tb --stop-time=1000us --vcd=simulation/real_tb.vcd --wave=simulation/real_tb.ghw
gtkwave simulation/real_tb.ghw real_tb.sav
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```mkdir', '-p', 'simulation', 'ghdl', '-i', '--ieee=synopsys', '--workdir=simulation', '--work=work', 'real_tb.vhd', 'ghdl', '-m', '--ieee=synopsys', '--syn-binding', '--workdir=simulation', '--work=work', 'real_tb', 'simulation/real_tb', '--stop-time=1000us', '--vcd=simulation/real_tb.vcd', '--wave=simulation/real_tb.ghw', 'gtkwave', 'simulation/real_tb.ghw', 'real_tb.sav', '```']",challenge not surrounded by ''': ,
"<table border=""1""  id=""table1"" style=""border-collapse: collapse"">
<tr>
<td  height=""25"" align=""center""><span style=""font-size: 16px"">战国</span></td>
<td  height=""25"" align=""center""><span style=""font-size: 16px"">公元前323年</span></td>
<td  height=""25"" align=""center""><span style=""font-size: 16px"">戊戌</span></td>
<td  height=""25px"" align=""center""><span style=""font-size: 16px"">周显王扁四十六年</span></td>
</tr>
<tr>
<td colspan=""4"">
<table border=""0"" width=""100%"">
<tr>
<td  valign=""top"">
<b>历史纪事</b>　</td>
<td>
<div>楚魏襄陵之战
　　楚怀王六年、韩宣惠王十年、魏惠王后元十年（前三二三），楚国为迫使魏投入其怀抱，打算废去魏国的太子嗣，将流亡在楚国的魏公子高送回魏国当太子，遂派柱国昭阳率兵攻魏，韩国也出兵包围魏国蔷（今河南新安东北）。魏国设法说服韩国停止了进攻，但与楚国交战时，仍被打败，襄陵（今河南睢县）被攻破，八座城邑被楚国夺走。但楚国并未达到更换魏太子的目的。

陈轸罢楚兵
　　楚怀王六年、齐威王三十四年（前三二三），楚柱国昭阳主率兵击破魏国襄陵（今河南睢县），夺取八座城邑，随后，又移兵东向，攻打齐国，齐威王很忧虑。此时，秦臣陈轸奉命使齐，齐威王向他请教退楚兵之策。陈轸本人是齐人，见齐国有难，便表示愿去劝说昭阳退兵。昭阳此时担任楚国最高武官官职－－柱国，战功再多也不能升迁，陈轸以画蛇添足的寓言为喻，提出攻齐对昭阳有害无利，即使战胜，也不能升官加爵，而一旦失败，则会身死爵削，犹如给蛇添足一样不可取。他劝说昭阳趁大军压境、齐国畏惧之时班师回国，既有威震齐国的盛名，又有令德于齐。昭阳认为陈轸言之理，便率楚军撤退回国。</div></td>
</tr>
</table>
</td>
</tr>
<tr>
<td colspan=""4"">
<table border=""0"" width=""100%"">
<tr>
<td  valign=""top"">
<b>文化纪事</b>　</td>
<td>
<div></div></td>
</tr>
</table>
</td>
</tr>
<tr>
<td colspan=""4"">
<table border=""0"" width=""100%"">
<tr>
<td  valign=""top"">
<b>杂谭逸事</b>　</td>
<td>
<div>秦齐楚大臣会于啮桑
　　秦针对魏等国的合纵活动，加紧构筑上郡（今陕西西北部）要塞，继续攻打魏国，同时积极展开对外活动，争取盟国。秦惠文王更元二年、齐威王三十四年、楚怀王六年（前三二三），秦相仪与齐楚两国大臣在啮桑（今江苏沛县西南）相会，以此拉拢齐、楚，攻打秦国。经过秦相张仪的游说，楚国果然在此年攻魏，夺取其八邑，齐国也不再支持魏发动的合纵活动，还借口中山国小，不承认其称王资格，齐企图联合赵、燕等国，迫使中山国君废除王号。

王国相王
　　魏国连年屡败于秦，单靠自身的力量，已无力与之抗衡。魏将公孙衍提出联合弱小国家共同抗秦的合纵策略，被魏惠王采纳，于是魏国频繁活动于韩、赵、齐等国之间，魏惠王后元十二年、韩宣惠王十年、赵武灵王三年、燕易王十年（前三二三），魏国与韩、赵、燕、中山等国结成五国联盟，各国互相承认王号，赵、燕、中山国开始称王。赵武灵王认为，赵的国力并未强盛到与王号相符的程度，不应图“王”之虚名，他命令本国人仍旧称自己为“君”。五国之中，中山国最小，仅拥有千乘兵车，齐国拥有万乘兵车，与如此小国并列为王，深感羞耻，因而想联合魏、赵、燕三国迫使中山国君废除王号，把平邑（今河南南乐东北）割让给赵、燕二国，拉拢他们共同出兵攻打中山国。中山国君听说后十分惊恐，召大臣张登相商，设法解救国危。张登利用魏、赵、燕等国与齐的矛盾，施用计谋，使中山国得到魏、赵、燕三国支持，得以称王。五国相王并未取得实质性成效。

赵筑鄗城
　　赵武灵王三年（前三二三），赵国在鄗（今河北高邑东南）修筑城廓。</div></td>
</tr>
</table>
</td>
</tr>
<tr>
<td colspan=""4"">
<table border=""0"" width=""100%"">
<tr>
<td  valign=""top"">
<b>注释</b></td>
<td>
<div></div></td>
</tr>
</table>
</td>
</tr>
<tr>
</tr></table>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<table', 'border=""1""', 'id=""table1""', 'style=""border-collapse:', 'collapse"">', '<tr>', '<td', 'height=""25""', 'align=""center""><span', 'style=""font-size:', '16px"">战国</span></td>', '<td', 'height=""25""', 'align=""center""><span', 'style=""font-size:', '16px"">公元前323年</span></td>', '<td', 'height=""25""', 'align=""center""><span', 'style=""font-size:', '16px"">戊戌</span></td>', '<td', 'height=""25px""', 'align=""center""><span', 'style=""font-size:', '16px"">周显王扁四十六年</span></td>', '</tr>', '<tr>', '<td', 'colspan=""4"">', '<table', 'border=""0""', 'width=""100%"">', '<tr>', '<td', 'valign=""top"">', '<b>历史纪事</b>', '</td>', '<td>', '<div>楚魏襄陵之战', '楚怀王六年、韩宣惠王十年、魏惠王后元十年（前三二三），楚国为迫使魏投入其怀抱，打算废去魏国的太子嗣，将流亡在楚国的魏公子高送回魏国当太子，遂派柱国昭阳率兵攻魏，韩国也出兵包围魏国蔷（今河南新安东北）。魏国设法说服韩国停止了进攻，但与楚国交战时，仍被打败，襄陵（今河南睢县）被攻破，八座城邑被楚国夺走。但楚国并未达到更换魏太子的目的。', '陈轸罢楚兵', '楚怀王六年、齐威王三十四年（前三二三），楚柱国昭阳主率兵击破魏国襄陵（今河南睢县），夺取八座城邑，随后，又移兵东向，攻打齐国，齐威王很忧虑。此时，秦臣陈轸奉命使齐，齐威王向他请教退楚兵之策。陈轸本人是齐人，见齐国有难，便表示愿去劝说昭阳退兵。昭阳此时担任楚国最高武官官职－－柱国，战功再多也不能升迁，陈轸以画蛇添足的寓言为喻，提出攻齐对昭阳有害无利，即使战胜，也不能升官加爵，而一旦失败，则会身死爵削，犹如给蛇添足一样不可取。他劝说昭阳趁大军压境、齐国畏惧之时班师回国，既有威震齐国的盛名，又有令德于齐。昭阳认为陈轸言之理，便率楚军撤退回国。</div></td>', '</tr>', '</table>', '</td>', '</tr>', '<tr>', '<td', 'colspan=""4"">', '<table', 'border=""0""', 'width=""100%"">', '<tr>', '<td', 'valign=""top"">', '<b>文化纪事</b>', '</td>', '<td>', '<div></div></td>', '</tr>', '</table>', '</td>', '</tr>', '<tr>', '<td', 'colspan=""4"">', '<table', 'border=""0""', 'width=""100%"">', '<tr>', '<td', 'valign=""top"">', '<b>杂谭逸事</b>', '</td>', '<td>', '<div>秦齐楚大臣会于啮桑', '秦针对魏等国的合纵活动，加紧构筑上郡（今陕西西北部）要塞，继续攻打魏国，同时积极展开对外活动，争取盟国。秦惠文王更元二年、齐威王三十四年、楚怀王六年（前三二三），秦相仪与齐楚两国大臣在啮桑（今江苏沛县西南）相会，以此拉拢齐、楚，攻打秦国。经过秦相张仪的游说，楚国果然在此年攻魏，夺取其八邑，齐国也不再支持魏发动的合纵活动，还借口中山国小，不承认其称王资格，齐企图联合赵、燕等国，迫使中山国君废除王号。', '王国相王', '魏国连年屡败于秦，单靠自身的力量，已无力与之抗衡。魏将公孙衍提出联合弱小国家共同抗秦的合纵策略，被魏惠王采纳，于是魏国频繁活动于韩、赵、齐等国之间，魏惠王后元十二年、韩宣惠王十年、赵武灵王三年、燕易王十年（前三二三），魏国与韩、赵、燕、中山等国结成五国联盟，各国互相承认王号，赵、燕、中山国开始称王。赵武灵王认为，赵的国力并未强盛到与王号相符的程度，不应图“王”之虚名，他命令本国人仍旧称自己为“君”。五国之中，中山国最小，仅拥有千乘兵车，齐国拥有万乘兵车，与如此小国并列为王，深感羞耻，因而想联合魏、赵、燕三国迫使中山国君废除王号，把平邑（今河南南乐东北）割让给赵、燕二国，拉拢他们共同出兵攻打中山国。中山国君听说后十分惊恐，召大臣张登相商，设法解救国危。张登利用魏、赵、燕等国与齐的矛盾，施用计谋，使中山国得到魏、赵、燕三国支持，得以称王。五国相王并未取得实质性成效。', '赵筑鄗城', '赵武灵王三年（前三二三），赵国在鄗（今河北高邑东南）修筑城廓。</div></td>', '</tr>', '</table>', '</td>', '</tr>', '<tr>', '<td', 'colspan=""4"">', '<table', 'border=""0""', 'width=""100%"">', '<tr>', '<td', 'valign=""top"">', '<b>注释</b></td>', '<td>', '<div></div></td>', '</tr>', '</table>', '</td>', '</tr>', '<tr>', '</tr></table>', '```']",challenge not surrounded by ''': ,
"package company.com.gitdemo;

import android.app.Application;
import android.test.ApplicationTestCase;

/**
 * <a href=""http://d.android.com/tools/testing/testing_android.html"">Testing Fundamentals</a>
 */
public class ApplicationTest extends ApplicationTestCase<Application> {
    public ApplicationTest() {
        super(Application.class);
    }
}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'company.com.gitdemo;', 'import', 'android.app.Application;', 'import', 'android.test.ApplicationTestCase;', '/**', '*', '<a', 'href=""http://d.android.com/tools/testing/testing_android.html"">Testing', 'Fundamentals</a>', '*/', 'public', 'class', 'ApplicationTest', 'extends', 'ApplicationTestCase<Application>', '{', 'public', 'ApplicationTest()', '{', 'super(Application.class);', '}', '}```']",challenge not surrounded by ''': ,
"/**
 * Orignal work: Copyright 2015 www.seleniumtests.com
 * Modified work: Copyright 2016 www.infotel.com
 * 				Copyright 2017-2019 B.Hecquet
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * 	http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.seleniumtests.customexception;

public class SeleniumRobotServer401Exception extends SeleniumRobotServerException {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	public SeleniumRobotServer401Exception(final String message) {
        super(message);
    }

    public SeleniumRobotServer401Exception(final Throwable cause) {
        super(cause);
    }

    public SeleniumRobotServer401Exception(final String message, final Throwable cause) {
        super(message, cause);
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', 'Orignal', 'work:', 'Copyright', '2015', 'www.seleniumtests.com', '*', 'Modified', 'work:', 'Copyright', '2016', 'www.infotel.com', '*', 'Copyright', '2017-2019', 'B.Hecquet', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'com.seleniumtests.customexception;', 'public', 'class', 'SeleniumRobotServer401Exception', 'extends', 'SeleniumRobotServerException', '{', '/**', '*', '*/', 'private', 'static', 'final', 'long', 'serialVersionUID', '=', '1L;', 'public', 'SeleniumRobotServer401Exception(final', 'String', 'message)', '{', 'super(message);', '}', 'public', 'SeleniumRobotServer401Exception(final', 'Throwable', 'cause)', '{', 'super(cause);', '}', 'public', 'SeleniumRobotServer401Exception(final', 'String', 'message,', 'final', 'Throwable', 'cause)', '{', 'super(message,', 'cause);', '}', '}', '```']",challenge not surrounded by ''': ,
"{% extends ""base.html"" %}
{% load livewhale_api %}
{% block title %}
Committee Letter Form Success &mdash;
Pre-Health &mdash;
Carthage College
{% endblock %}
{% block group_name %}Pre-Health{% endblock %}
{% block left_nav %}
{% get_lw_content as nav blurbs 2444 %}
{{nav.body}}
{% endblock %}
{% block content_head %}
<h1 id=""page_title"">Committee Letter Form</h1>
{% endblock %}
{% block content %}
    {% get_lw_content as success blurbs 2446 %}
    {{success.body}}
{% endblock %}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```{%', 'extends', '""base.html""', '%}', '{%', 'load', 'livewhale_api', '%}', '{%', 'block', 'title', '%}', 'Committee', 'Letter', 'Form', 'Success', '&mdash;', 'Pre-Health', '&mdash;', 'Carthage', 'College', '{%', 'endblock', '%}', '{%', 'block', 'group_name', '%}Pre-Health{%', 'endblock', '%}', '{%', 'block', 'left_nav', '%}', '{%', 'get_lw_content', 'as', 'nav', 'blurbs', '2444', '%}', '{{nav.body}}', '{%', 'endblock', '%}', '{%', 'block', 'content_head', '%}', '<h1', 'id=""page_title"">Committee', 'Letter', 'Form</h1>', '{%', 'endblock', '%}', '{%', 'block', 'content', '%}', '{%', 'get_lw_content', 'as', 'success', 'blurbs', '2446', '%}', '{{success.body}}', '{%', 'endblock', '%}', '```']",challenge not surrounded by ''': ,
"package ru.r2cloud.jradio.nexus;

import org.junit.Test;

import ru.r2cloud.jradio.AssertJson;
import ru.r2cloud.jradio.fec.ViterbiTest;

public class NexusBeaconTest {

	@Test
	public void testImageBeacon() throws Exception {
		byte[] data = ViterbiTest.hexStringToByteArray(""9C8AB0AAA6406094A662B282AC6103F0C1000494812800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A280000"");
		NexusBeacon result = new NexusBeacon();
		result.readBeacon(data);
		AssertJson.assertObjectsEqual(""NexusBeaconImage.json"", result);
	}

	@Test
	public void testRealtime() throws Exception {
		byte[] data = new byte[] {-100, -118, -80, -86, -90, 64, 96, -108, -90, 98, -78, -126, -84, 97, 3, -16, -95, 0, 5, 74, 72, 3, -98, -84, -66, 83, 1, 116, 1, 1, 1, 12, 124, 1, -48, 0, 5, 0, 4, 0, 4, 0, 5, 0, 6, 0, 9, 9, -80, 9, -118, 8, -22, 8, -8, 9, 19, 9, 28, 9, -102, 9, -119, 10, -23, 12, 99, 11, 52, 10, -2, 11, 73, 11, 7, 9, 82, 9, 80, -55, -40, -23, -26, -102, -36, 23, -50, 17, -13, 3, -93, 6, -56, 8, 93, 8, 13, 7, -28, 3, -98, -84, -46, 83, 1, 116, 1, 1, 1, 12, 123, 1, -7, 0, 13, 0, 16, 0, 5, 0, 5, 0, 5, 0, 5, 9, -84, 9, 101, 8, -47, 8, -17, 9, 12, 8, -72, 9, -117, 9, -122, 10, -27, 11, -6, 11, 47, 10, -66, 11, 64, 10, -12, 9, 83, 9, 63, -89, -40, 55, -26, -77, -36, 23, -90, 18, 48, 3, -85, 4, -6, 7, -99, 10, -81, 7, -29, 0, 0, 0, 0, 0, 0, 0};
		NexusBeacon result = new NexusBeacon();
		result.readBeacon(data);
		AssertJson.assertObjectsEqual(""NexusBeaconRealtime.json"", result);
	}
	
	@Test
	public void testHistorical() throws Exception {
		byte[] data = new byte[] {-100, -118, -80, -86, -90, 64, 96, -108, -90, 98, -78, -126, -84, 97, 3, -16, -96, 0, 3, 75, -8, 4, 15, -21, 18, 20, 1, -123, 1, 1, 1, 12, -93, 1, -14, 0, 0, 0, 0, 0, 38, 0, 0, 3, 22, 0, 109, 10, -38, 10, 12, 10, 38, 10, -128, 10, 103, 8, -107, 10, -53, 10, -16, 12, 44, 10, -61, 12, 29, 10, -57, 12, 111, 11, -113, 10, -43, 10, 96, -33, -58, -61, -46, 125, -57, 35, -46, 25, -55, 4, -125, 7, -30, 9, 76, 13, 8, 7, 0};
		NexusBeacon result = new NexusBeacon();
		result.readBeacon(data);
		AssertJson.assertObjectsEqual(""NexusBeaconHistorical.json"", result);
	}

	@Test
	public void testFiData() throws Exception {
		byte[] data = new byte[] {-100, -118, -80, -86, -90, 64, 96, -108, -90, 98, -78, -126, -84, 97, 3, -16, -80, 0, 1, -67, 99, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3};
		NexusBeacon result = new NexusBeacon();
		result.readBeacon(data);
		AssertJson.assertObjectsEqual(""NexusBeaconFiData.json"", result);
	}
	
	@Test
	public void testStatusData() throws Exception {
		byte[] data = new byte[] {-100, -118, -80, -86, -90, 64, 96, -108, -90, 98, -78, -126, -84, 97, 3, -16, -64, 0, 2, -114, -41, 50, 109, -89, -120, 2, 5, 1, 0, 0, 70, 2, 0, 0, -56, 50, 51, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 50, 52, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 50, 53, -99, -89, -120, 2, 5, 1, 0, 0, 35, 2, 0, 0, -44, 50, 54, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 50, 55, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 50, 56, -50, -89, -120, 2, 5, 1, 0, 0, 11, 2, 0, 0, -32, 50, 57, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 50, 58, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 50, 59, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0};
		NexusBeacon result = new NexusBeacon();
		result.readBeacon(data);
		AssertJson.assertObjectsEqual(""NexusBeaconStatusData.json"", result);
	}
	
	@Test
	public void testRomStatusData() throws Exception {
		byte[] data = new byte[] {-100, -118, -80, -86, -90, 64, 96, -108, -90, 98, -78, -126, -84, 97, 3, -16, -64, 0, 2, -128, -41, 0, -1, 15, -16, -1, -1, 127, -37, -1};
		NexusBeacon result = new NexusBeacon();
		result.readBeacon(data);
		AssertJson.assertObjectsEqual(""NexusBeaconRomStatus.json"", result);
	}
	
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'ru.r2cloud.jradio.nexus;', 'import', 'org.junit.Test;', 'import', 'ru.r2cloud.jradio.AssertJson;', 'import', 'ru.r2cloud.jradio.fec.ViterbiTest;', 'public', 'class', 'NexusBeaconTest', '{', '@Test', 'public', 'void', 'testImageBeacon()', 'throws', 'Exception', '{', 'byte[]', 'data', '=', 'ViterbiTest.hexStringToByteArray(""9C8AB0AAA6406094A662B282AC6103F0C1000494812800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A2800A280000"");', 'NexusBeacon', 'result', '=', 'new', 'NexusBeacon();', 'result.readBeacon(data);', 'AssertJson.assertObjectsEqual(""NexusBeaconImage.json"",', 'result);', '}', '@Test', 'public', 'void', 'testRealtime()', 'throws', 'Exception', '{', 'byte[]', 'data', '=', 'new', 'byte[]', '{-100,', '-118,', '-80,', '-86,', '-90,', '64,', '96,', '-108,', '-90,', '98,', '-78,', '-126,', '-84,', '97,', '3,', '-16,', '-95,', '0,', '5,', '74,', '72,', '3,', '-98,', '-84,', '-66,', '83,', '1,', '116,', '1,', '1,', '1,', '12,', '124,', '1,', '-48,', '0,', '5,', '0,', '4,', '0,', '4,', '0,', '5,', '0,', '6,', '0,', '9,', '9,', '-80,', '9,', '-118,', '8,', '-22,', '8,', '-8,', '9,', '19,', '9,', '28,', '9,', '-102,', '9,', '-119,', '10,', '-23,', '12,', '99,', '11,', '52,', '10,', '-2,', '11,', '73,', '11,', '7,', '9,', '82,', '9,', '80,', '-55,', '-40,', '-23,', '-26,', '-102,', '-36,', '23,', '-50,', '17,', '-13,', '3,', '-93,', '6,', '-56,', '8,', '93,', '8,', '13,', '7,', '-28,', '3,', '-98,', '-84,', '-46,', '83,', '1,', '116,', '1,', '1,', '1,', '12,', '123,', '1,', '-7,', '0,', '13,', '0,', '16,', '0,', '5,', '0,', '5,', '0,', '5,', '0,', '5,', '9,', '-84,', '9,', '101,', '8,', '-47,', '8,', '-17,', '9,', '12,', '8,', '-72,', '9,', '-117,', '9,', '-122,', '10,', '-27,', '11,', '-6,', '11,', '47,', '10,', '-66,', '11,', '64,', '10,', '-12,', '9,', '83,', '9,', '63,', '-89,', '-40,', '55,', '-26,', '-77,', '-36,', '23,', '-90,', '18,', '48,', '3,', '-85,', '4,', '-6,', '7,', '-99,', '10,', '-81,', '7,', '-29,', '0,', '0,', '0,', '0,', '0,', '0,', '0};', 'NexusBeacon', 'result', '=', 'new', 'NexusBeacon();', 'result.readBeacon(data);', 'AssertJson.assertObjectsEqual(""NexusBeaconRealtime.json"",', 'result);', '}', '@Test', 'public', 'void', 'testHistorical()', 'throws', 'Exception', '{', 'byte[]', 'data', '=', 'new', 'byte[]', '{-100,', '-118,', '-80,', '-86,', '-90,', '64,', '96,', '-108,', '-90,', '98,', '-78,', '-126,', '-84,', '97,', '3,', '-16,', '-96,', '0,', '3,', '75,', '-8,', '4,', '15,', '-21,', '18,', '20,', '1,', '-123,', '1,', '1,', '1,', '12,', '-93,', '1,', '-14,', '0,', '0,', '0,', '0,', '0,', '38,', '0,', '0,', '3,', '22,', '0,', '109,', '10,', '-38,', '10,', '12,', '10,', '38,', '10,', '-128,', '10,', '103,', '8,', '-107,', '10,', '-53,', '10,', '-16,', '12,', '44,', '10,', '-61,', '12,', '29,', '10,', '-57,', '12,', '111,', '11,', '-113,', '10,', '-43,', '10,', '96,', '-33,', '-58,', '-61,', '-46,', '125,', '-57,', '35,', '-46,', '25,', '-55,', '4,', '-125,', '7,', '-30,', '9,', '76,', '13,', '8,', '7,', '0};', 'NexusBeacon', 'result', '=', 'new', 'NexusBeacon();', 'result.readBeacon(data);', 'AssertJson.assertObjectsEqual(""NexusBeaconHistorical.json"",', 'result);', '}', '@Test', 'public', 'void', 'testFiData()', 'throws', 'Exception', '{', 'byte[]', 'data', '=', 'new', 'byte[]', '{-100,', '-118,', '-80,', '-86,', '-90,', '64,', '96,', '-108,', '-90,', '98,', '-78,', '-126,', '-84,', '97,', '3,', '-16,', '-80,', '0,', '1,', '-67,', '99,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '3};', 'NexusBeacon', 'result', '=', 'new', 'NexusBeacon();', 'result.readBeacon(data);', 'AssertJson.assertObjectsEqual(""NexusBeaconFiData.json"",', 'result);', '}', '@Test', 'public', 'void', 'testStatusData()', 'throws', 'Exception', '{', 'byte[]', 'data', '=', 'new', 'byte[]', '{-100,', '-118,', '-80,', '-86,', '-90,', '64,', '96,', '-108,', '-90,', '98,', '-78,', '-126,', '-84,', '97,', '3,', '-16,', '-64,', '0,', '2,', '-114,', '-41,', '50,', '109,', '-89,', '-120,', '2,', '5,', '1,', '0,', '0,', '70,', '2,', '0,', '0,', '-56,', '50,', '51,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '50,', '52,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '50,', '53,', '-99,', '-89,', '-120,', '2,', '5,', '1,', '0,', '0,', '35,', '2,', '0,', '0,', '-44,', '50,', '54,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '50,', '55,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '50,', '56,', '-50,', '-89,', '-120,', '2,', '5,', '1,', '0,', '0,', '11,', '2,', '0,', '0,', '-32,', '50,', '57,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '50,', '58,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '50,', '59,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '0};', 'NexusBeacon', 'result', '=', 'new', 'NexusBeacon();', 'result.readBeacon(data);', 'AssertJson.assertObjectsEqual(""NexusBeaconStatusData.json"",', 'result);', '}', '@Test', 'public', 'void', 'testRomStatusData()', 'throws', 'Exception', '{', 'byte[]', 'data', '=', 'new', 'byte[]', '{-100,', '-118,', '-80,', '-86,', '-90,', '64,', '96,', '-108,', '-90,', '98,', '-78,', '-126,', '-84,', '97,', '3,', '-16,', '-64,', '0,', '2,', '-128,', '-41,', '0,', '-1,', '15,', '-16,', '-1,', '-1,', '127,', '-37,', '-1};', 'NexusBeacon', 'result', '=', 'new', 'NexusBeacon();', 'result.readBeacon(data);', 'AssertJson.assertObjectsEqual(""NexusBeaconRomStatus.json"",', 'result);', '}', '}', '```']",challenge not surrounded by ''': ,
"package net.kahowell.xsd.fuzzer;

import org.apache.xmlbeans.SchemaType;
import org.apache.xmlbeans.XmlCursor;

/**
 * Interface for generating XML snippets in an XML document based on an XSD 
 * specified type.
 * 
 * Copyright (c) 2012 Kevin Howell. See LICENSE file for copying permission.
 * 
 * @author Kevin Howell
 * 
 * @see SchemaType
 *
 */
public interface XsdTypeValueGenerator {
	/**
	 * Strategy for picking values
	 */
	public enum Strategy {
		/** Use an example value (think foobar) */
		EXAMPLE,
		/** Use a random value */
		RANDOM,
		/** Use the minimum valid value */
		MINIMUM,
		/** Use the maximum valid value */
		MAXIMUM
	}
	
	/**
	 * Generate a value of the given type, writing the results to cursor
	 * 
	 * @param cursor cursor used to write the value
	 * @param type type of the value
	 */
	public void generateValue(XmlCursor cursor, SchemaType type);
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'net.kahowell.xsd.fuzzer;', 'import', 'org.apache.xmlbeans.SchemaType;', 'import', 'org.apache.xmlbeans.XmlCursor;', '/**', '*', 'Interface', 'for', 'generating', 'XML', 'snippets', 'in', 'an', 'XML', 'document', 'based', 'on', 'an', 'XSD', '*', 'specified', 'type.', '*', '*', 'Copyright', '(c)', '2012', 'Kevin', 'Howell.', 'See', 'LICENSE', 'file', 'for', 'copying', 'permission.', '*', '*', '@author', 'Kevin', 'Howell', '*', '*', '@see', 'SchemaType', '*', '*/', 'public', 'interface', 'XsdTypeValueGenerator', '{', '/**', '*', 'Strategy', 'for', 'picking', 'values', '*/', 'public', 'enum', 'Strategy', '{', '/**', 'Use', 'an', 'example', 'value', '(think', 'foobar)', '*/', 'EXAMPLE,', '/**', 'Use', 'a', 'random', 'value', '*/', 'RANDOM,', '/**', 'Use', 'the', 'minimum', 'valid', 'value', '*/', 'MINIMUM,', '/**', 'Use', 'the', 'maximum', 'valid', 'value', '*/', 'MAXIMUM', '}', '/**', '*', 'Generate', 'a', 'value', 'of', 'the', 'given', 'type,', 'writing', 'the', 'results', 'to', 'cursor', '*', '*', '@param', 'cursor', 'cursor', 'used', 'to', 'write', 'the', 'value', '*', '@param', 'type', 'type', 'of', 'the', 'value', '*/', 'public', 'void', 'generateValue(XmlCursor', 'cursor,', 'SchemaType', 'type);', '}', '```']",challenge not surrounded by ''': ,
"/*
 *  Copyright (C) 2012 Fishstix (Gene Ruebsamen - ruebsamen.gene@gmail.com)
 *  
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 */

package com.fishstix.dosbox.touchevent;

import android.view.MotionEvent;
import android.view.SurfaceView;

public class GingerbreadTouchEvent extends TouchEventWrapper  {
	@Override
	public int getPointerId(MotionEvent event, int pointerIndex) {
		return event.getPointerId(pointerIndex);
	}
	@Override
	public int getPointerCount(MotionEvent event) {
		return event.getPointerCount();
	}
	@Override
	public float getX(MotionEvent event, int id) {
		return event.getX(id);
	}
	@Override
	public float getY(MotionEvent event, int id) {
		return event.getY(id);
	}
	@Override
	public int getButtonState(MotionEvent event) {
		return 1;
	}
	@Override
	public int getSource(MotionEvent event) {
		return event.getSource();
	}
	@Override
	public boolean onGenericMotionEvent(SurfaceView view, MotionEvent event) {
		// TODO Auto-generated method stub
		return false;
	}
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '(C)', '2012', 'Fishstix', '(Gene', 'Ruebsamen', '-', 'ruebsamen.gene@gmail.com)', '*', '*', 'This', 'program', 'is', 'free', 'software;', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', '*', 'it', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'as', 'published', 'by', '*', 'the', 'Free', 'Software', 'Foundation;', 'either', 'version', '2', 'of', 'the', 'License,', 'or', '*', '(at', 'your', 'option)', 'any', 'later', 'version.', '*', '*', 'This', 'program', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', '*', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', '*', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', '*', 'GNU', 'General', 'Public', 'License', 'for', 'more', 'details.', '*', '*', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'General', 'Public', 'License', '*', 'along', 'with', 'this', 'program;', 'if', 'not,', 'write', 'to', 'the', 'Free', 'Software', '*', 'Foundation,', 'Inc.,', '59', 'Temple', 'Place', '-', 'Suite', '330,', 'Boston,', 'MA', '02111-1307,', 'USA.', '*/', 'package', 'com.fishstix.dosbox.touchevent;', 'import', 'android.view.MotionEvent;', 'import', 'android.view.SurfaceView;', 'public', 'class', 'GingerbreadTouchEvent', 'extends', 'TouchEventWrapper', '{', '@Override', 'public', 'int', 'getPointerId(MotionEvent', 'event,', 'int', 'pointerIndex)', '{', 'return', 'event.getPointerId(pointerIndex);', '}', '@Override', 'public', 'int', 'getPointerCount(MotionEvent', 'event)', '{', 'return', 'event.getPointerCount();', '}', '@Override', 'public', 'float', 'getX(MotionEvent', 'event,', 'int', 'id)', '{', 'return', 'event.getX(id);', '}', '@Override', 'public', 'float', 'getY(MotionEvent', 'event,', 'int', 'id)', '{', 'return', 'event.getY(id);', '}', '@Override', 'public', 'int', 'getButtonState(MotionEvent', 'event)', '{', 'return', '1;', '}', '@Override', 'public', 'int', 'getSource(MotionEvent', 'event)', '{', 'return', 'event.getSource();', '}', '@Override', 'public', 'boolean', 'onGenericMotionEvent(SurfaceView', 'view,', 'MotionEvent', 'event)', '{', '//', 'TODO', 'Auto-generated', 'method', 'stub', 'return', 'false;', '}', '}', '```']",challenge not surrounded by ''': ,
"import java.util.stream.IntStream;

class NaturalNumber {

    private int number;

    public NaturalNumber(int i) {
        if (i < 1) throw new IllegalArgumentException(""You must supply a natural number (positive integer)"");
        number = i;
    }

    public Classification getClassification() {
        int aliquotSum = IntStream.rangeClosed(1, number/2).parallel().filter(i -> number % i == 0).sum();
        if (aliquotSum > number) return Classification.ABUNDANT;
        else if (aliquotSum < number) return Classification.DEFICIENT;
        return Classification.PERFECT;
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'java.util.stream.IntStream;', 'class', 'NaturalNumber', '{', 'private', 'int', 'number;', 'public', 'NaturalNumber(int', 'i)', '{', 'if', '(i', '<', '1)', 'throw', 'new', 'IllegalArgumentException(""You', 'must', 'supply', 'a', 'natural', 'number', '(positive', 'integer)"");', 'number', '=', 'i;', '}', 'public', 'Classification', 'getClassification()', '{', 'int', 'aliquotSum', '=', 'IntStream.rangeClosed(1,', 'number/2).parallel().filter(i', '->', 'number', '%', 'i', '==', '0).sum();', 'if', '(aliquotSum', '>', 'number)', 'return', 'Classification.ABUNDANT;', 'else', 'if', '(aliquotSum', '<', 'number)', 'return', 'Classification.DEFICIENT;', 'return', 'Classification.PERFECT;', '}', '}', '```']",challenge not surrounded by ''': ,
"#include ""Sprite.hpp""

using namespace tutorials;
using namespace tutorials::entities;

Sprite::Sprite(graphics::Renderer* renderer, utils::COMWrapper<ID3D11ShaderResourceView> shaderResourceView) {
	graphics::model_loaders::ModelData data;

	graphics::model_loaders::ModelData::Vertex vertex;

	data.addGroup(graphics::model_loaders::ModelData::TRIANGLE_LIST);

	vertex.position = D3DXVECTOR3(-0.5f, -0.5f, 0.0f);
	vertex.textureCoordinate = D3DXVECTOR2(0.0f, 1.0f);
	data.addVertex(vertex);

	vertex.position = D3DXVECTOR3(-0.5f, 0.5f, 0.0f);
	vertex.textureCoordinate = D3DXVECTOR2(0.0f, 0.0f);
	data.addVertex(vertex);

	vertex.position = D3DXVECTOR3(0.5f, -0.5f, 0.0f);
	vertex.textureCoordinate = D3DXVECTOR2(1.0f, 1.0f);
	data.addVertex(vertex);

	vertex.position = D3DXVECTOR3(-0.5f, 0.5f, 0.0f);
	vertex.textureCoordinate = D3DXVECTOR2(0.0f, 0.0f);
	data.addVertex(vertex);

	vertex.position = D3DXVECTOR3(0.5f, 0.5f, 0.0f);
	vertex.textureCoordinate = D3DXVECTOR2(1.0f, 0.0f);
	data.addVertex(vertex);

	vertex.position = D3DXVECTOR3(0.5f, -0.5f, 0.0f);
	vertex.textureCoordinate = D3DXVECTOR2(1.0f, 1.0f);
	data.addVertex(vertex);

	data.addIndex(0);
	data.addIndex(1);
	data.addIndex(2);
	data.addIndex(3);
	data.addIndex(4);
	data.addIndex(5);

	model_.initialise(&renderer->device(), data);
	model_.baseTexture().initialise(shaderResourceView);

	renderer->addHudModel(&model_);

	model_.moveTo(0.1f, 0.1f, 0.5f);
	model_.scale(0.2f, 0.2f, 1.0f);
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#include', '""Sprite.hpp""', 'using', 'namespace', 'tutorials;', 'using', 'namespace', 'tutorials::entities;', 'Sprite::Sprite(graphics::Renderer*', 'renderer,', 'utils::COMWrapper<ID3D11ShaderResourceView>', 'shaderResourceView)', '{', 'graphics::model_loaders::ModelData', 'data;', 'graphics::model_loaders::ModelData::Vertex', 'vertex;', 'data.addGroup(graphics::model_loaders::ModelData::TRIANGLE_LIST);', 'vertex.position', '=', 'D3DXVECTOR3(-0.5f,', '-0.5f,', '0.0f);', 'vertex.textureCoordinate', '=', 'D3DXVECTOR2(0.0f,', '1.0f);', 'data.addVertex(vertex);', 'vertex.position', '=', 'D3DXVECTOR3(-0.5f,', '0.5f,', '0.0f);', 'vertex.textureCoordinate', '=', 'D3DXVECTOR2(0.0f,', '0.0f);', 'data.addVertex(vertex);', 'vertex.position', '=', 'D3DXVECTOR3(0.5f,', '-0.5f,', '0.0f);', 'vertex.textureCoordinate', '=', 'D3DXVECTOR2(1.0f,', '1.0f);', 'data.addVertex(vertex);', 'vertex.position', '=', 'D3DXVECTOR3(-0.5f,', '0.5f,', '0.0f);', 'vertex.textureCoordinate', '=', 'D3DXVECTOR2(0.0f,', '0.0f);', 'data.addVertex(vertex);', 'vertex.position', '=', 'D3DXVECTOR3(0.5f,', '0.5f,', '0.0f);', 'vertex.textureCoordinate', '=', 'D3DXVECTOR2(1.0f,', '0.0f);', 'data.addVertex(vertex);', 'vertex.position', '=', 'D3DXVECTOR3(0.5f,', '-0.5f,', '0.0f);', 'vertex.textureCoordinate', '=', 'D3DXVECTOR2(1.0f,', '1.0f);', 'data.addVertex(vertex);', 'data.addIndex(0);', 'data.addIndex(1);', 'data.addIndex(2);', 'data.addIndex(3);', 'data.addIndex(4);', 'data.addIndex(5);', 'model_.initialise(&renderer->device(),', 'data);', 'model_.baseTexture().initialise(shaderResourceView);', 'renderer->addHudModel(&model_);', 'model_.moveTo(0.1f,', '0.1f,', '0.5f);', 'model_.scale(0.2f,', '0.2f,', '1.0f);', '}', '```']",challenge not surrounded by ''': ,
"function post(x, id) {
    document.getElementById('input').value = (id ? "":"" + id + "" "": """") + x;
    document.getElementById(""sayit-button"").click()
}
var last_message = NaN;

function f() {
    // If any messages failed to send, resend them
    for (var i of document.getElementsByClassName(""pending""))
        for (var j of i.children)
            for (var k of j.children)
                if (k.innerHTML == ""retry"") k.click();
    
    var e = [].slice.call(document.getElementsByClassName(""content""), -1)[0]; // message element
    var a = e.textContent; // text of the message
    var message_id = e.parentElement.id.slice(8); // id of the message
    var username = e.parentElement.parentElement.parentElement.querySelector("".signature .username"").textContent; // user who posted
    
    // We don't want to do anything if no new messages have been posted
    if (e === last_message) return;
    last_message = e;

    if (/@/.test(a) && !/@ETHbot/i.test(a)) return; // Avoid messages directed at other users
    if (username === ""ETHbot"") return; // Avoid your own messages
 
    var y = ""Your message here"";
 
    // reply after 3 seconds to avoid rate-limiting
    setTimeout(function(x, id) {
        post(x, id);
    }, 3000, y, message_id);
}

var interval;

function start() {
    post(""ETHbot started."");
    interval = setInterval(f, 500);
}

function stop() {
    post(""Shutting down temporarily..."");
    clearInterval(interval);
}

start();
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```function', 'post(x,', 'id)', '{', ""document.getElementById('input').value"", '=', '(id', '?', '"":""', '+', 'id', '+', '""', '"":', '"""")', '+', 'x;', 'document.getElementById(""sayit-button"").click()', '}', 'var', 'last_message', '=', 'NaN;', 'function', 'f()', '{', '//', 'If', 'any', 'messages', 'failed', 'to', 'send,', 'resend', 'them', 'for', '(var', 'i', 'of', 'document.getElementsByClassName(""pending""))', 'for', '(var', 'j', 'of', 'i.children)', 'for', '(var', 'k', 'of', 'j.children)', 'if', '(k.innerHTML', '==', '""retry"")', 'k.click();', 'var', 'e', '=', '[].slice.call(document.getElementsByClassName(""content""),', '-1)[0];', '//', 'message', 'element', 'var', 'a', '=', 'e.textContent;', '//', 'text', 'of', 'the', 'message', 'var', 'message_id', '=', 'e.parentElement.id.slice(8);', '//', 'id', 'of', 'the', 'message', 'var', 'username', '=', 'e.parentElement.parentElement.parentElement.querySelector("".signature', '.username"").textContent;', '//', 'user', 'who', 'posted', '//', 'We', ""don't"", 'want', 'to', 'do', 'anything', 'if', 'no', 'new', 'messages', 'have', 'been', 'posted', 'if', '(e', '===', 'last_message)', 'return;', 'last_message', '=', 'e;', 'if', '(/@/.test(a)', '&&', '!/@ETHbot/i.test(a))', 'return;', '//', 'Avoid', 'messages', 'directed', 'at', 'other', 'users', 'if', '(username', '===', '""ETHbot"")', 'return;', '//', 'Avoid', 'your', 'own', 'messages', 'var', 'y', '=', '""Your', 'message', 'here"";', '//', 'reply', 'after', '3', 'seconds', 'to', 'avoid', 'rate-limiting', 'setTimeout(function(x,', 'id)', '{', 'post(x,', 'id);', '},', '3000,', 'y,', 'message_id);', '}', 'var', 'interval;', 'function', 'start()', '{', 'post(""ETHbot', 'started."");', 'interval', '=', 'setInterval(f,', '500);', '}', 'function', 'stop()', '{', 'post(""Shutting', 'down', 'temporarily..."");', 'clearInterval(interval);', '}', 'start();', '```']",challenge not surrounded by ''': ,
"
// The package ""should"" must be installed:   
// `npm install should`

fs = require('fs');
parse = require('..');

// Using the first line of the CSV data to discover the column names
rs = fs.createReadStream(__dirname+'/columns-discovery.in');
parser = parse({columns: true}, function(err, data){
  console.log(data);
})
rs.pipe(parser);

/*

`node samples/header-based-columns.js`

[ { Foo: 'first', Bar: 'row', Baz: 'items' },
  { Foo: 'second', Bar: 'row', Baz: 'items' } ]

*/","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```', '//', 'The', 'package', '""should""', 'must', 'be', 'installed:', '//', '`npm', 'install', 'should`', 'fs', '=', ""require('fs');"", 'parse', '=', ""require('..');"", '//', 'Using', 'the', 'first', 'line', 'of', 'the', 'CSV', 'data', 'to', 'discover', 'the', 'column', 'names', 'rs', '=', ""fs.createReadStream(__dirname+'/columns-discovery.in');"", 'parser', '=', 'parse({columns:', 'true},', 'function(err,', 'data){', 'console.log(data);', '})', 'rs.pipe(parser);', '/*', '`node', 'samples/header-based-columns.js`', '[', '{', 'Foo:', ""'first',"", 'Bar:', ""'row',"", 'Baz:', ""'items'"", '},', '{', 'Foo:', ""'second',"", 'Bar:', ""'row',"", 'Baz:', ""'items'"", '}', ']', '*/```']",challenge not surrounded by ''': ,
"/*
 * Copyright 2012-2017 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.openhubframework.openhub.admin.web.message.rpc;

import javax.validation.constraints.NotNull;

import com.fasterxml.jackson.databind.JsonNode;
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.apache.commons.lang3.builder.ToStringStyle;
import org.springframework.validation.annotation.Validated;


/**
 * Request rpc for action with message.
 *
 * @author Karel Kovarik
 * @since 2.0
 */
@Validated
public class ActionRequestRpc {

    public static final String TOTAL_RESTART_FIELD = ""totalRestart"";

    @NotNull
    private ActionTypeRpc type;
    private JsonNode data;

    public ActionTypeRpc getType() {
        return type;
    }

    public void setType(ActionTypeRpc type) {
        this.type = type;
    }

    public JsonNode getData() {
        return data;
    }

    public void setData(JsonNode data) {
        this.data = data;
    }

    @Override
    public String toString() {
        return new ToStringBuilder(this, ToStringStyle.SHORT_PREFIX_STYLE)
                .append(""type"", type)
                .append(""data"", data)
                .toString();
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '2012-2017', 'the', 'original', 'author', 'or', 'authors.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'org.openhubframework.openhub.admin.web.message.rpc;', 'import', 'javax.validation.constraints.NotNull;', 'import', 'com.fasterxml.jackson.databind.JsonNode;', 'import', 'org.apache.commons.lang3.builder.ToStringBuilder;', 'import', 'org.apache.commons.lang3.builder.ToStringStyle;', 'import', 'org.springframework.validation.annotation.Validated;', '/**', '*', 'Request', 'rpc', 'for', 'action', 'with', 'message.', '*', '*', '@author', 'Karel', 'Kovarik', '*', '@since', '2.0', '*/', '@Validated', 'public', 'class', 'ActionRequestRpc', '{', 'public', 'static', 'final', 'String', 'TOTAL_RESTART_FIELD', '=', '""totalRestart"";', '@NotNull', 'private', 'ActionTypeRpc', 'type;', 'private', 'JsonNode', 'data;', 'public', 'ActionTypeRpc', 'getType()', '{', 'return', 'type;', '}', 'public', 'void', 'setType(ActionTypeRpc', 'type)', '{', 'this.type', '=', 'type;', '}', 'public', 'JsonNode', 'getData()', '{', 'return', 'data;', '}', 'public', 'void', 'setData(JsonNode', 'data)', '{', 'this.data', '=', 'data;', '}', '@Override', 'public', 'String', 'toString()', '{', 'return', 'new', 'ToStringBuilder(this,', 'ToStringStyle.SHORT_PREFIX_STYLE)', '.append(""type"",', 'type)', '.append(""data"",', 'data)', '.toString();', '}', '}', '```']",challenge not surrounded by ''': ,
"// { dg-do run { target c++11 } }
// { dg-require-cstdint """" }
//
// 2009-08-14  Edward M. Smith-Rowland  <3dw4rd@verizon.net>
//
// Copyright (C) 2009-2021 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 3, or (at your option)
// any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING3.  If not see
// <http://www.gnu.org/licenses/>.

// 26.4.8.3.4 Class template weibull_distribution [rand.dist.pois.weibull]
// 26.4.2.4 Concept RandomNumberDistribution [rand.concept.dist]

#include <random>
#include <sstream>

void
test01()
{
  std::stringstream str;
  std::weibull_distribution<double> u(2.0, 3.5), v;
  std::minstd_rand0 rng;

  u(rng); // advance
  str << u;

  str >> v;
}

int main()
{
  test01();
  return 0;
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//', '{', 'dg-do', 'run', '{', 'target', 'c++11', '}', '}', '//', '{', 'dg-require-cstdint', '""""', '}', '//', '//', '2009-08-14', 'Edward', 'M.', 'Smith-Rowland', '<3dw4rd@verizon.net>', '//', '//', 'Copyright', '(C)', '2009-2021', 'Free', 'Software', 'Foundation,', 'Inc.', '//', '//', 'This', 'file', 'is', 'part', 'of', 'the', 'GNU', 'ISO', 'C++', 'Library.', 'This', 'library', 'is', 'free', '//', 'software;', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', 'it', 'under', 'the', '//', 'terms', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'as', 'published', 'by', 'the', '//', 'Free', 'Software', 'Foundation;', 'either', 'version', '3,', 'or', '(at', 'your', 'option)', '//', 'any', 'later', 'version.', '//', '//', 'This', 'library', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', '//', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', '//', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', '//', 'GNU', 'General', 'Public', 'License', 'for', 'more', 'details.', '//', '//', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'along', '//', 'with', 'this', 'library;', 'see', 'the', 'file', 'COPYING3.', 'If', 'not', 'see', '//', '<http://www.gnu.org/licenses/>.', '//', '26.4.8.3.4', 'Class', 'template', 'weibull_distribution', '[rand.dist.pois.weibull]', '//', '26.4.2.4', 'Concept', 'RandomNumberDistribution', '[rand.concept.dist]', '#include', '<random>', '#include', '<sstream>', 'void', 'test01()', '{', 'std::stringstream', 'str;', 'std::weibull_distribution<double>', 'u(2.0,', '3.5),', 'v;', 'std::minstd_rand0', 'rng;', 'u(rng);', '//', 'advance', 'str', '<<', 'u;', 'str', '>>', 'v;', '}', 'int', 'main()', '{', 'test01();', 'return', '0;', '}', '```']",challenge not surrounded by ''': ,
"#!/bin/bash

source ~/miniconda3/etc/profile.d/conda.sh
conda activate plantcv

python ~/seed_scans/plantcv_workflow_miller_seeds-grid.py ""$@""
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/bin/bash', 'source', '~/miniconda3/etc/profile.d/conda.sh', 'conda', 'activate', 'plantcv', 'python', '~/seed_scans/plantcv_workflow_miller_seeds-grid.py', '""$@""', '```']",challenge not surrounded by ''': ,
"﻿/*
* Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
*
* Licensed under the Apache License, Version 2.0 (the ""License"").
* You may not use this file except in compliance with the License.
* A copy of the License is located at
*
*  http://aws.amazon.com/apache2.0
*
* or in the ""license"" file accompanying this file. This file is distributed
* on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
* express or implied. See the License for the specific language governing
* permissions and limitations under the License.
*/

#include <aws/ec2/model/ModifyVolumeRequest.h>
#include <aws/core/utils/StringUtils.h>
#include <aws/core/utils/memory/stl/AWSStringStream.h>

using namespace Aws::EC2::Model;
using namespace Aws::Utils;

ModifyVolumeRequest::ModifyVolumeRequest() : 
    m_dryRun(false),
    m_dryRunHasBeenSet(false),
    m_volumeIdHasBeenSet(false),
    m_size(0),
    m_sizeHasBeenSet(false),
    m_volumeType(VolumeType::NOT_SET),
    m_volumeTypeHasBeenSet(false),
    m_iops(0),
    m_iopsHasBeenSet(false)
{
}

Aws::String ModifyVolumeRequest::SerializePayload() const
{
  Aws::StringStream ss;
  ss << ""Action=ModifyVolume&"";
  if(m_dryRunHasBeenSet)
  {
    ss << ""DryRun="" << std::boolalpha << m_dryRun << ""&"";
  }

  if(m_volumeIdHasBeenSet)
  {
    ss << ""VolumeId="" << StringUtils::URLEncode(m_volumeId.c_str()) << ""&"";
  }

  if(m_sizeHasBeenSet)
  {
    ss << ""Size="" << m_size << ""&"";
  }

  if(m_volumeTypeHasBeenSet)
  {
    ss << ""VolumeType="" << VolumeTypeMapper::GetNameForVolumeType(m_volumeType) << ""&"";
  }

  if(m_iopsHasBeenSet)
  {
    ss << ""Iops="" << m_iops << ""&"";
  }

  ss << ""Version=2016-11-15"";
  return ss.str();
}


void  ModifyVolumeRequest::DumpBodyToUrl(Aws::Http::URI& uri ) const
{
  uri.SetQueryString(SerializePayload());
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```\ufeff/*', '*', 'Copyright', '2010-2017', 'Amazon.com,', 'Inc.', 'or', 'its', 'affiliates.', 'All', 'Rights', 'Reserved.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"").', '*', 'You', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'A', 'copy', 'of', 'the', 'License', 'is', 'located', 'at', '*', '*', 'http://aws.amazon.com/apache2.0', '*', '*', 'or', 'in', 'the', '""license""', 'file', 'accompanying', 'this', 'file.', 'This', 'file', 'is', 'distributed', '*', 'on', 'an', '""AS', 'IS""', 'BASIS,', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', '*', 'express', 'or', 'implied.', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', '*', 'permissions', 'and', 'limitations', 'under', 'the', 'License.', '*/', '#include', '<aws/ec2/model/ModifyVolumeRequest.h>', '#include', '<aws/core/utils/StringUtils.h>', '#include', '<aws/core/utils/memory/stl/AWSStringStream.h>', 'using', 'namespace', 'Aws::EC2::Model;', 'using', 'namespace', 'Aws::Utils;', 'ModifyVolumeRequest::ModifyVolumeRequest()', ':', 'm_dryRun(false),', 'm_dryRunHasBeenSet(false),', 'm_volumeIdHasBeenSet(false),', 'm_size(0),', 'm_sizeHasBeenSet(false),', 'm_volumeType(VolumeType::NOT_SET),', 'm_volumeTypeHasBeenSet(false),', 'm_iops(0),', 'm_iopsHasBeenSet(false)', '{', '}', 'Aws::String', 'ModifyVolumeRequest::SerializePayload()', 'const', '{', 'Aws::StringStream', 'ss;', 'ss', '<<', '""Action=ModifyVolume&"";', 'if(m_dryRunHasBeenSet)', '{', 'ss', '<<', '""DryRun=""', '<<', 'std::boolalpha', '<<', 'm_dryRun', '<<', '""&"";', '}', 'if(m_volumeIdHasBeenSet)', '{', 'ss', '<<', '""VolumeId=""', '<<', 'StringUtils::URLEncode(m_volumeId.c_str())', '<<', '""&"";', '}', 'if(m_sizeHasBeenSet)', '{', 'ss', '<<', '""Size=""', '<<', 'm_size', '<<', '""&"";', '}', 'if(m_volumeTypeHasBeenSet)', '{', 'ss', '<<', '""VolumeType=""', '<<', 'VolumeTypeMapper::GetNameForVolumeType(m_volumeType)', '<<', '""&"";', '}', 'if(m_iopsHasBeenSet)', '{', 'ss', '<<', '""Iops=""', '<<', 'm_iops', '<<', '""&"";', '}', 'ss', '<<', '""Version=2016-11-15"";', 'return', 'ss.str();', '}', 'void', 'ModifyVolumeRequest::DumpBodyToUrl(Aws::Http::URI&', 'uri', ')', 'const', '{', 'uri.SetQueryString(SerializePayload());', '}', '```']",challenge not surrounded by ''': ,
"from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


def remove_trash_objectpermissions(apps, schema_editor):
    """"""
    The `Collection` model has already been removed, so there should not be any
    `ObjectPermission`s left that reference it. We need to make sure because
    we'll later assume that all `ObjectPermission.object_id`s are pointing at
    `Asset`s. Let's also remove any `ObjectPermission`s that reference
    non-existant `Asset`s.
    """"""
    ContentType = apps.get_model('contenttypes', 'ContentType')
    Asset = apps.get_model('kpi', 'Asset')
    ObjectPermission = apps.get_model('kpi', 'ObjectPermission')
    asset_ct = ContentType.objects.get(app_label='kpi', model='asset')
    ObjectPermission.objects.exclude(content_type_id=asset_ct.pk).delete()
    related_assets = Asset.objects.filter(pk=models.OuterRef('object_id'))
    ObjectPermission.objects.annotate(
        _valid=models.Exists(related_assets.only('pk'))
    ).filter(_valid=False).delete()


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0011_update_proxy_permissions'),
        ('kpi', '0030_delete_collections_fix_asset_parent_foreign_key'),
    ]

    operations = [
        migrations.RunPython(remove_trash_objectpermissions),
        migrations.RenameField(
            model_name='objectpermission',
            old_name='object_id',
            new_name='asset',
        ),
        migrations.AlterUniqueTogether(
            name='objectpermission',
            unique_together={
                ('user', 'permission', 'deny', 'inherited', 'asset')
            },
        ),
        migrations.AlterField(
            model_name='objectpermission',
            name='asset',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name='permissions',
                to='kpi.Asset',
            ),
        ),
        migrations.RemoveField(
            model_name='objectpermission',
            name='content_type',
        ),
    ]
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```from', 'django.conf', 'import', 'settings', 'from', 'django.db', 'import', 'migrations,', 'models', 'import', 'django.db.models.deletion', 'def', 'remove_trash_objectpermissions(apps,', 'schema_editor):', '""""""', 'The', '`Collection`', 'model', 'has', 'already', 'been', 'removed,', 'so', 'there', 'should', 'not', 'be', 'any', '`ObjectPermission`s', 'left', 'that', 'reference', 'it.', 'We', 'need', 'to', 'make', 'sure', 'because', ""we'll"", 'later', 'assume', 'that', 'all', '`ObjectPermission.object_id`s', 'are', 'pointing', 'at', '`Asset`s.', ""Let's"", 'also', 'remove', 'any', '`ObjectPermission`s', 'that', 'reference', 'non-existant', '`Asset`s.', '""""""', 'ContentType', '=', ""apps.get_model('contenttypes',"", ""'ContentType')"", 'Asset', '=', ""apps.get_model('kpi',"", ""'Asset')"", 'ObjectPermission', '=', ""apps.get_model('kpi',"", ""'ObjectPermission')"", 'asset_ct', '=', ""ContentType.objects.get(app_label='kpi',"", ""model='asset')"", 'ObjectPermission.objects.exclude(content_type_id=asset_ct.pk).delete()', 'related_assets', '=', ""Asset.objects.filter(pk=models.OuterRef('object_id'))"", 'ObjectPermission.objects.annotate(', ""_valid=models.Exists(related_assets.only('pk'))"", ').filter(_valid=False).delete()', 'class', 'Migration(migrations.Migration):', 'dependencies', '=', '[', 'migrations.swappable_dependency(settings.AUTH_USER_MODEL),', ""('auth',"", ""'0011_update_proxy_permissions'),"", ""('kpi',"", ""'0030_delete_collections_fix_asset_parent_foreign_key'),"", ']', 'operations', '=', '[', 'migrations.RunPython(remove_trash_objectpermissions),', 'migrations.RenameField(', ""model_name='objectpermission',"", ""old_name='object_id',"", ""new_name='asset',"", '),', 'migrations.AlterUniqueTogether(', ""name='objectpermission',"", 'unique_together={', ""('user',"", ""'permission',"", ""'deny',"", ""'inherited',"", ""'asset')"", '},', '),', 'migrations.AlterField(', ""model_name='objectpermission',"", ""name='asset',"", 'field=models.ForeignKey(', 'on_delete=django.db.models.deletion.CASCADE,', ""related_name='permissions',"", ""to='kpi.Asset',"", '),', '),', 'migrations.RemoveField(', ""model_name='objectpermission',"", ""name='content_type',"", '),', ']', '```']",challenge not surrounded by ''': ,
"#!/bin/bash
source ./ci/functions.sh

runBuild=false
echo ""Reviewing changes that might affect the Gradle build...""
currentChangeSetAffectsTests
retval=$?
if [ ""$retval"" == 0 ]
then
    echo ""Found changes that require the build to run test cases.""
    runBuild=true
else
    echo ""Changes do NOT affect project test cases.""
    runBuild=false
fi

if [ ""$runBuild"" = false ]; then
    exit 0
fi

prepCommand=""echo 'Running command...'; ""
gradle=""./gradlew $@""
gradleBuild=""""
gradleBuildOptions=""--stacktrace --build-cache --configure-on-demand --no-daemon -DtestCategoryType=OIDC ""

echo -e ""***********************************************""
echo -e ""Gradle build started at `date`""
echo -e ""***********************************************""

gradleBuild=""$gradleBuild testOIDC jacocoRootReport -x test -x javadoc -x check \
    -DskipGradleLint=true --parallel \
    -DskipNestedConfigMetadataGen=true ""

if [[ ""${TRAVIS_COMMIT_MESSAGE}"" == *""[show streams]""* ]]; then
    gradleBuild=""$gradleBuild -DshowStandardStreams=true ""
fi

if [[ ""${TRAVIS_COMMIT_MESSAGE}"" == *""[rerun tasks]""* ]]; then
    gradleBuild=""$gradleBuild --rerun-tasks ""
fi

if [[ ""${TRAVIS_COMMIT_MESSAGE}"" == *""[refresh dependencies]""* ]]; then
    gradleBuild=""$gradleBuild --refresh-dependencies ""
fi

if [ -z ""$gradleBuild"" ]; then
    echo ""Gradle build will be ignored since no commands are specified to run.""
else
    tasks=""$gradle $gradleBuildOptions $gradleBuild""
    echo -e ""***************************************************************************************""
    echo $prepCommand
    echo $tasks
    echo -e ""***************************************************************************************""

    waitloop=""while sleep 9m; do echo -e '\n=====[ Gradle build is still running ]====='; done &""
    eval $waitloop
    waitRetVal=$?

    eval $prepCommand
    eval $tasks
    retVal=$?

    echo -e ""***************************************************************************************""
    echo -e ""Gradle build finished at `date` with exit code $retVal""
    echo -e ""***************************************************************************************""

    if [ $retVal == 0 ]; then
        echo ""Uploading test coverage results...""
        bash <(curl -s https://codecov.io/bash)
        echo ""Gradle build finished successfully.""
    else
        echo ""Gradle build did NOT finish successfully.""
        exit $retVal
    fi
fi
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/bin/bash', 'source', './ci/functions.sh', 'runBuild=false', 'echo', '""Reviewing', 'changes', 'that', 'might', 'affect', 'the', 'Gradle', 'build...""', 'currentChangeSetAffectsTests', 'retval=$?', 'if', '[', '""$retval""', '==', '0', ']', 'then', 'echo', '""Found', 'changes', 'that', 'require', 'the', 'build', 'to', 'run', 'test', 'cases.""', 'runBuild=true', 'else', 'echo', '""Changes', 'do', 'NOT', 'affect', 'project', 'test', 'cases.""', 'runBuild=false', 'fi', 'if', '[', '""$runBuild""', '=', 'false', '];', 'then', 'exit', '0', 'fi', 'prepCommand=""echo', ""'Running"", ""command...';"", '""', 'gradle=""./gradlew', '$@""', 'gradleBuild=""""', 'gradleBuildOptions=""--stacktrace', '--build-cache', '--configure-on-demand', '--no-daemon', '-DtestCategoryType=OIDC', '""', 'echo', '-e', '""***********************************************""', 'echo', '-e', '""Gradle', 'build', 'started', 'at', '`date`""', 'echo', '-e', '""***********************************************""', 'gradleBuild=""$gradleBuild', 'testOIDC', 'jacocoRootReport', '-x', 'test', '-x', 'javadoc', '-x', 'check', '\\', '-DskipGradleLint=true', '--parallel', '\\', '-DskipNestedConfigMetadataGen=true', '""', 'if', '[[', '""${TRAVIS_COMMIT_MESSAGE}""', '==', '*""[show', 'streams]""*', ']];', 'then', 'gradleBuild=""$gradleBuild', '-DshowStandardStreams=true', '""', 'fi', 'if', '[[', '""${TRAVIS_COMMIT_MESSAGE}""', '==', '*""[rerun', 'tasks]""*', ']];', 'then', 'gradleBuild=""$gradleBuild', '--rerun-tasks', '""', 'fi', 'if', '[[', '""${TRAVIS_COMMIT_MESSAGE}""', '==', '*""[refresh', 'dependencies]""*', ']];', 'then', 'gradleBuild=""$gradleBuild', '--refresh-dependencies', '""', 'fi', 'if', '[', '-z', '""$gradleBuild""', '];', 'then', 'echo', '""Gradle', 'build', 'will', 'be', 'ignored', 'since', 'no', 'commands', 'are', 'specified', 'to', 'run.""', 'else', 'tasks=""$gradle', '$gradleBuildOptions', '$gradleBuild""', 'echo', '-e', '""***************************************************************************************""', 'echo', '$prepCommand', 'echo', '$tasks', 'echo', '-e', '""***************************************************************************************""', 'waitloop=""while', 'sleep', '9m;', 'do', 'echo', '-e', ""'\\n=====["", 'Gradle', 'build', 'is', 'still', 'running', ""]=====';"", 'done', '&""', 'eval', '$waitloop', 'waitRetVal=$?', 'eval', '$prepCommand', 'eval', '$tasks', 'retVal=$?', 'echo', '-e', '""***************************************************************************************""', 'echo', '-e', '""Gradle', 'build', 'finished', 'at', '`date`', 'with', 'exit', 'code', '$retVal""', 'echo', '-e', '""***************************************************************************************""', 'if', '[', '$retVal', '==', '0', '];', 'then', 'echo', '""Uploading', 'test', 'coverage', 'results...""', 'bash', '<(curl', '-s', 'https://codecov.io/bash)', 'echo', '""Gradle', 'build', 'finished', 'successfully.""', 'else', 'echo', '""Gradle', 'build', 'did', 'NOT', 'finish', 'successfully.""', 'exit', '$retVal', 'fi', 'fi', '```']",challenge not surrounded by ''': ,
"/****************************************************************************
**
** Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the examples of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:BSD$
** You may use this file under the terms of the BSD license as follows:
**
** ""Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
**   * Redistributions of source code must retain the above copyright
**     notice, this list of conditions and the following disclaimer.
**   * Redistributions in binary form must reproduce the above copyright
**     notice, this list of conditions and the following disclaimer in
**     the documentation and/or other materials provided with the
**     distribution.
**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
**     the names of its contributors may be used to endorse or promote
**     products derived from this software without specific prior written
**     permission.
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.""
** $QT_END_LICENSE$
**
****************************************************************************/

#include <QtCore/QCoreApplication>
#include <QtScript>

#include ""scriptdebugger.h""

int main(int argc, char **argv)
{
    QCoreApplication app(argc, argv);

    if (argc < 2) {
        fprintf(stderr, ""*** you must specify a script file to evaluate (try example.js)\n"");
        return(-1);
    }

    QString fileName = QString::fromLatin1(argv[1]);
    QFile file(fileName);
    if (!file.open(QFile::ReadOnly)) {
        fprintf(stderr, ""*** failed to open `%s' for reading\n"", argv[1]);
        return(-1);
    }

    QScriptEngine engine;
    QString code = QTextStream(&file).readAll();
    file.close();

    fprintf(stdout, ""\n*** Welcome to qsdbg. Debugger commands start with a . (period)\n"");
    fprintf(stdout, ""*** Any other input will be evaluated by the script interpreter.\n"");
    fprintf(stdout, ""*** Type .help for help.\n\n"");

    ScriptDebugger *dbg = new ScriptDebugger(&engine);
    dbg->breakAtNextStatement();

    engine.evaluate(code, fileName);

    return 0;
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/****************************************************************************', '**', '**', 'Copyright', '(C)', '2010', 'Nokia', 'Corporation', 'and/or', 'its', 'subsidiary(-ies).', '**', 'All', 'rights', 'reserved.', '**', 'Contact:', 'Nokia', 'Corporation', '(qt-info@nokia.com)', '**', '**', 'This', 'file', 'is', 'part', 'of', 'the', 'examples', 'of', 'the', 'Qt', 'Toolkit.', '**', '**', '$QT_BEGIN_LICENSE:BSD$', '**', 'You', 'may', 'use', 'this', 'file', 'under', 'the', 'terms', 'of', 'the', 'BSD', 'license', 'as', 'follows:', '**', '**', '""Redistribution', 'and', 'use', 'in', 'source', 'and', 'binary', 'forms,', 'with', 'or', 'without', '**', 'modification,', 'are', 'permitted', 'provided', 'that', 'the', 'following', 'conditions', 'are', '**', 'met:', '**', '*', 'Redistributions', 'of', 'source', 'code', 'must', 'retain', 'the', 'above', 'copyright', '**', 'notice,', 'this', 'list', 'of', 'conditions', 'and', 'the', 'following', 'disclaimer.', '**', '*', 'Redistributions', 'in', 'binary', 'form', 'must', 'reproduce', 'the', 'above', 'copyright', '**', 'notice,', 'this', 'list', 'of', 'conditions', 'and', 'the', 'following', 'disclaimer', 'in', '**', 'the', 'documentation', 'and/or', 'other', 'materials', 'provided', 'with', 'the', '**', 'distribution.', '**', '*', 'Neither', 'the', 'name', 'of', 'Nokia', 'Corporation', 'and', 'its', 'Subsidiary(-ies)', 'nor', '**', 'the', 'names', 'of', 'its', 'contributors', 'may', 'be', 'used', 'to', 'endorse', 'or', 'promote', '**', 'products', 'derived', 'from', 'this', 'software', 'without', 'specific', 'prior', 'written', '**', 'permission.', '**', '**', 'THIS', 'SOFTWARE', 'IS', 'PROVIDED', 'BY', 'THE', 'COPYRIGHT', 'HOLDERS', 'AND', 'CONTRIBUTORS', '**', '""AS', 'IS""', 'AND', 'ANY', 'EXPRESS', 'OR', 'IMPLIED', 'WARRANTIES,', 'INCLUDING,', 'BUT', 'NOT', '**', 'LIMITED', 'TO,', 'THE', 'IMPLIED', 'WARRANTIES', 'OF', 'MERCHANTABILITY', 'AND', 'FITNESS', 'FOR', '**', 'A', 'PARTICULAR', 'PURPOSE', 'ARE', 'DISCLAIMED.', 'IN', 'NO', 'EVENT', 'SHALL', 'THE', 'COPYRIGHT', '**', 'OWNER', 'OR', 'CONTRIBUTORS', 'BE', 'LIABLE', 'FOR', 'ANY', 'DIRECT,', 'INDIRECT,', 'INCIDENTAL,', '**', 'SPECIAL,', 'EXEMPLARY,', 'OR', 'CONSEQUENTIAL', 'DAMAGES', '(INCLUDING,', 'BUT', 'NOT', '**', 'LIMITED', 'TO,', 'PROCUREMENT', 'OF', 'SUBSTITUTE', 'GOODS', 'OR', 'SERVICES;', 'LOSS', 'OF', 'USE,', '**', 'DATA,', 'OR', 'PROFITS;', 'OR', 'BUSINESS', 'INTERRUPTION)', 'HOWEVER', 'CAUSED', 'AND', 'ON', 'ANY', '**', 'THEORY', 'OF', 'LIABILITY,', 'WHETHER', 'IN', 'CONTRACT,', 'STRICT', 'LIABILITY,', 'OR', 'TORT', '**', '(INCLUDING', 'NEGLIGENCE', 'OR', 'OTHERWISE)', 'ARISING', 'IN', 'ANY', 'WAY', 'OUT', 'OF', 'THE', 'USE', '**', 'OF', 'THIS', 'SOFTWARE,', 'EVEN', 'IF', 'ADVISED', 'OF', 'THE', 'POSSIBILITY', 'OF', 'SUCH', 'DAMAGE.""', '**', '$QT_END_LICENSE$', '**', '****************************************************************************/', '#include', '<QtCore/QCoreApplication>', '#include', '<QtScript>', '#include', '""scriptdebugger.h""', 'int', 'main(int', 'argc,', 'char', '**argv)', '{', 'QCoreApplication', 'app(argc,', 'argv);', 'if', '(argc', '<', '2)', '{', 'fprintf(stderr,', '""***', 'you', 'must', 'specify', 'a', 'script', 'file', 'to', 'evaluate', '(try', 'example.js)\\n"");', 'return(-1);', '}', 'QString', 'fileName', '=', 'QString::fromLatin1(argv[1]);', 'QFile', 'file(fileName);', 'if', '(!file.open(QFile::ReadOnly))', '{', 'fprintf(stderr,', '""***', 'failed', 'to', 'open', ""`%s'"", 'for', 'reading\\n"",', 'argv[1]);', 'return(-1);', '}', 'QScriptEngine', 'engine;', 'QString', 'code', '=', 'QTextStream(&file).readAll();', 'file.close();', 'fprintf(stdout,', '""\\n***', 'Welcome', 'to', 'qsdbg.', 'Debugger', 'commands', 'start', 'with', 'a', '.', '(period)\\n"");', 'fprintf(stdout,', '""***', 'Any', 'other', 'input', 'will', 'be', 'evaluated', 'by', 'the', 'script', 'interpreter.\\n"");', 'fprintf(stdout,', '""***', 'Type', '.help', 'for', 'help.\\n\\n"");', 'ScriptDebugger', '*dbg', '=', 'new', 'ScriptDebugger(&engine);', 'dbg->breakAtNextStatement();', 'engine.evaluate(code,', 'fileName);', 'return', '0;', '}', '```']",challenge not surrounded by ''': ,
"package com.tuneit.salsa3.php;

import com.tuneit.salsa3.ParserException;
import com.tuneit.salsa3.ast.ASTNode;
import com.tuneit.salsa3.ast.Literal;
import com.tuneit.salsa3.ast.TryStatement;
import com.tuneit.salsa3.ast.TypeName;
import com.tuneit.salsa3.ast.Variable;
import com.tuneit.salsa3.ast.VariableDeclaration;

public class PHPTryHandler extends PHPStatementHandler implements
		PHPParserHandler {
	private TryStatement tryStatement;
	private PHPParserHandler parent;
	
	private boolean isFirstTry;
	
	public PHPTryHandler(PHPParserHandler parent) {
		this.parent = parent;
		
		this.tryStatement = new TryStatement();
		setRootNode(this.tryStatement);
		
		this.isFirstTry = true;
	}

	@Override
	public PHPParserHandler handleState(PHPParserState state)
			throws ParserException {
		
		if(isFirstTry && state.isState(""try"")) {
			ASTNode tryToken = state.getNode(""try_token"");			
			tryToken.setNode(tryStatement);
			
			isFirstTry = false;
			
			return this;
		}
		else if(state.isState(""catch"")) {		
			Literal classNameNode = (Literal) state.getNode(""class_name"");
			Variable variable = (Variable) state.getNode(""catch_var"");
			
			VariableDeclaration varDecl = new VariableDeclaration(variable, new TypeName(classNameNode.getToken()));
			
			tryStatement.addCatchStatement(varDecl);
			
			return this;
		}
		else if(state.isState(""end_catch"")) {	
			return this;
		}
		else if(state.isState(""mark_last_catch"")) {
			/* Set root node back to tryStatement */
			return parent;
		}
		
		return super.handleState(state);
	}
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.tuneit.salsa3.php;', 'import', 'com.tuneit.salsa3.ParserException;', 'import', 'com.tuneit.salsa3.ast.ASTNode;', 'import', 'com.tuneit.salsa3.ast.Literal;', 'import', 'com.tuneit.salsa3.ast.TryStatement;', 'import', 'com.tuneit.salsa3.ast.TypeName;', 'import', 'com.tuneit.salsa3.ast.Variable;', 'import', 'com.tuneit.salsa3.ast.VariableDeclaration;', 'public', 'class', 'PHPTryHandler', 'extends', 'PHPStatementHandler', 'implements', 'PHPParserHandler', '{', 'private', 'TryStatement', 'tryStatement;', 'private', 'PHPParserHandler', 'parent;', 'private', 'boolean', 'isFirstTry;', 'public', 'PHPTryHandler(PHPParserHandler', 'parent)', '{', 'this.parent', '=', 'parent;', 'this.tryStatement', '=', 'new', 'TryStatement();', 'setRootNode(this.tryStatement);', 'this.isFirstTry', '=', 'true;', '}', '@Override', 'public', 'PHPParserHandler', 'handleState(PHPParserState', 'state)', 'throws', 'ParserException', '{', 'if(isFirstTry', '&&', 'state.isState(""try""))', '{', 'ASTNode', 'tryToken', '=', 'state.getNode(""try_token"");', 'tryToken.setNode(tryStatement);', 'isFirstTry', '=', 'false;', 'return', 'this;', '}', 'else', 'if(state.isState(""catch""))', '{', 'Literal', 'classNameNode', '=', '(Literal)', 'state.getNode(""class_name"");', 'Variable', 'variable', '=', '(Variable)', 'state.getNode(""catch_var"");', 'VariableDeclaration', 'varDecl', '=', 'new', 'VariableDeclaration(variable,', 'new', 'TypeName(classNameNode.getToken()));', 'tryStatement.addCatchStatement(varDecl);', 'return', 'this;', '}', 'else', 'if(state.isState(""end_catch""))', '{', 'return', 'this;', '}', 'else', 'if(state.isState(""mark_last_catch""))', '{', '/*', 'Set', 'root', 'node', 'back', 'to', 'tryStatement', '*/', 'return', 'parent;', '}', 'return', 'super.handleState(state);', '}', '}', '```']",challenge not surrounded by ''': ,
"/*
 * IEntity.java
 */
package com.parkidia.modeles;

/**
 * Représente une entité persistable dans la base de données.
 */
public interface IEntity {

    /**
     * @return la version de l'entitté.
     */
    int getVersion();

    /**
     * Modifie la version de l'entité.
     * @param version le nouvelle version de l'entité.
     */
    void setVersion(int version);
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'IEntity.java', '*/', 'package', 'com.parkidia.modeles;', '/**', '*', 'Représente', 'une', 'entité', 'persistable', 'dans', 'la', 'base', 'de', 'données.', '*/', 'public', 'interface', 'IEntity', '{', '/**', '*', '@return', 'la', 'version', 'de', ""l'entitté."", '*/', 'int', 'getVersion();', '/**', '*', 'Modifie', 'la', 'version', 'de', ""l'entité."", '*', '@param', 'version', 'le', 'nouvelle', 'version', 'de', ""l'entité."", '*/', 'void', 'setVersion(int', 'version);', '}', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE html>
<title>CSS Basic User Interface Test: Directional Focus Navigation - property inheritance for 'nav-up'</title>
<link rel=""author"" title=""Jorrit Vermeiren"" href=""mailto:jorritv@opera.com"">
<link rel=""author"" title=""Daniel Glazman"" href=""mailto:d.glazman@partner.samsung.com"">
<link rel=""help"" href=""https://drafts.csswg.org/css-ui-4/#nav-dir"">
<meta name=""flags"" content=""interact"">
<meta name=""assert"" content=""Test checks that the 'nav-up' property value is not inherited for 'nav-left'."">
<style type=""text/css"">
    #parent {
        nav-up: #finish;
    }
</style>
<body>
    <p>First, use directional navigation to navigate the focus to the ""START"" link below.</p>
    <!-- In Opera 12.16, directional navigation may be done using Shift+<arrow key>.
         In the SmartTV emulator, use the keypad in the GUI. -->
    <p>Test passes if navigating up once moves the focus to the ""FINISH"" link.</p>

    <div id=""parent"">
      <p><a href="""">ignore</a></p>
      <p><a href="""" id=""end"">FINISH</a></p>
      <p><a href="""">START</a></p>
      <p><a href="""" id=""finish"">ignore</a></p>
    </div>

</body>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'html>', '<title>CSS', 'Basic', 'User', 'Interface', 'Test:', 'Directional', 'Focus', 'Navigation', '-', 'property', 'inheritance', 'for', ""'nav-up'</title>"", '<link', 'rel=""author""', 'title=""Jorrit', 'Vermeiren""', 'href=""mailto:jorritv@opera.com"">', '<link', 'rel=""author""', 'title=""Daniel', 'Glazman""', 'href=""mailto:d.glazman@partner.samsung.com"">', '<link', 'rel=""help""', 'href=""https://drafts.csswg.org/css-ui-4/#nav-dir"">', '<meta', 'name=""flags""', 'content=""interact"">', '<meta', 'name=""assert""', 'content=""Test', 'checks', 'that', 'the', ""'nav-up'"", 'property', 'value', 'is', 'not', 'inherited', 'for', '\'nav-left\'."">', '<style', 'type=""text/css"">', '#parent', '{', 'nav-up:', '#finish;', '}', '</style>', '<body>', '<p>First,', 'use', 'directional', 'navigation', 'to', 'navigate', 'the', 'focus', 'to', 'the', '""START""', 'link', 'below.</p>', '<!--', 'In', 'Opera', '12.16,', 'directional', 'navigation', 'may', 'be', 'done', 'using', 'Shift+<arrow', 'key>.', 'In', 'the', 'SmartTV', 'emulator,', 'use', 'the', 'keypad', 'in', 'the', 'GUI.', '-->', '<p>Test', 'passes', 'if', 'navigating', 'up', 'once', 'moves', 'the', 'focus', 'to', 'the', '""FINISH""', 'link.</p>', '<div', 'id=""parent"">', '<p><a', 'href="""">ignore</a></p>', '<p><a', 'href=""""', 'id=""end"">FINISH</a></p>', '<p><a', 'href="""">START</a></p>', '<p><a', 'href=""""', 'id=""finish"">ignore</a></p>', '</div>', '</body>', '```']",challenge not surrounded by ''': ,
"import {
  moduleFor, test
}
from 'ember-qunit';

moduleFor('route:notes/loading', 'Unit | Route | notes/loading', {
  needs: ['service:metrics']
});

test('it exists', function(assert) {
  let route = this.subject();
  assert.ok(route);
});
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', '{', 'moduleFor,', 'test', '}', 'from', ""'ember-qunit';"", ""moduleFor('route:notes/loading',"", ""'Unit"", '|', 'Route', '|', ""notes/loading',"", '{', 'needs:', ""['service:metrics']"", '});', ""test('it"", ""exists',"", 'function(assert)', '{', 'let', 'route', '=', 'this.subject();', 'assert.ok(route);', '});', '```']",challenge not surrounded by ''': ,
"import DemoWithSnippet from '../../../demo/layout/DemoWithSnippet';
import Confirmation from '../../../src/components/Confirmation';

import React from 'react';

export default class ConfirmationDemo extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            open: false
        };
    }

    render() {
        return (
            <DemoWithSnippet>
                <Confirmation title=""Do you really want to delete this activity?""
                              body=""Keep in mind that deleted activity can't be restored.""
                />
            </DemoWithSnippet>
        );
    }
}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'DemoWithSnippet', 'from', ""'../../../demo/layout/DemoWithSnippet';"", 'import', 'Confirmation', 'from', ""'../../../src/components/Confirmation';"", 'import', 'React', 'from', ""'react';"", 'export', 'default', 'class', 'ConfirmationDemo', 'extends', 'React.Component', '{', 'constructor(props)', '{', 'super(props);', 'this.state', '=', '{', 'open:', 'false', '};', '}', 'render()', '{', 'return', '(', '<DemoWithSnippet>', '<Confirmation', 'title=""Do', 'you', 'really', 'want', 'to', 'delete', 'this', 'activity?""', 'body=""Keep', 'in', 'mind', 'that', 'deleted', 'activity', ""can't"", 'be', 'restored.""', '/>', '</DemoWithSnippet>', ');', '}', '}```']",challenge not surrounded by ''': ,
"FROM gliderlabs/alpine
MAINTAINER kost - https://github.com/kost

RUN apk --update add openssl && rm -f /var/cache/apk/* && \
wget https://github.com/kost/libsimplebloom/raw/master/bin/bloomutil-static-i586 -O /usr/local/bin/bloomutil && chmod 755 /usr/local/bin/bloomutil 
# RUN wget https://github.com/kost/libsimplebloom/raw/master/bin/bloomutil-static-x64 -O /usr/local/bin/bloomutil && chmod 755 /usr/local/bin/bloomutil
ADD /scripts /bloom/
RUN adduser -D -s /bin/sh user user && chown -R user /bloom && chmod 755 /bloom/* && mkdir /work && chown user /work

USER user
RUN /bloom/preparedb.sh 

VOLUME /work
WORKDIR /work

ENTRYPOINT [""bloomutil""]

CMD [""-h""]
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```FROM', 'gliderlabs/alpine', 'MAINTAINER', 'kost', '-', 'https://github.com/kost', 'RUN', 'apk', '--update', 'add', 'openssl', '&&', 'rm', '-f', '/var/cache/apk/*', '&&', '\\', 'wget', 'https://github.com/kost/libsimplebloom/raw/master/bin/bloomutil-static-i586', '-O', '/usr/local/bin/bloomutil', '&&', 'chmod', '755', '/usr/local/bin/bloomutil', '#', 'RUN', 'wget', 'https://github.com/kost/libsimplebloom/raw/master/bin/bloomutil-static-x64', '-O', '/usr/local/bin/bloomutil', '&&', 'chmod', '755', '/usr/local/bin/bloomutil', 'ADD', '/scripts', '/bloom/', 'RUN', 'adduser', '-D', '-s', '/bin/sh', 'user', 'user', '&&', 'chown', '-R', 'user', '/bloom', '&&', 'chmod', '755', '/bloom/*', '&&', 'mkdir', '/work', '&&', 'chown', 'user', '/work', 'USER', 'user', 'RUN', '/bloom/preparedb.sh', 'VOLUME', '/work', 'WORKDIR', '/work', 'ENTRYPOINT', '[""bloomutil""]', 'CMD', '[""-h""]', '```']",challenge not surrounded by ''': ,
"package com.simoncat.framework.lucene.core;

import java.util.List;

import lombok.AllArgsConstructor;
import lombok.Data;

import org.apache.lucene.document.Field;

@Data
@AllArgsConstructor
public class LuceneIndex {

	private final Field keyField;
	private final List<Field> normalFields;

	public void add(Field field) {
		this.normalFields.add(field);
	}
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.simoncat.framework.lucene.core;', 'import', 'java.util.List;', 'import', 'lombok.AllArgsConstructor;', 'import', 'lombok.Data;', 'import', 'org.apache.lucene.document.Field;', '@Data', '@AllArgsConstructor', 'public', 'class', 'LuceneIndex', '{', 'private', 'final', 'Field', 'keyField;', 'private', 'final', 'List<Field>', 'normalFields;', 'public', 'void', 'add(Field', 'field)', '{', 'this.normalFields.add(field);', '}', '}', '```']",challenge not surrounded by ''': ,
"#### NOTICE: THIS FILE IS AUTOGENERATED
#### MODIFICATIONS MAY BE LOST IF DONE IMPROPERLY
#### PLEASE SEE THE ONLINE DOCUMENTATION FOR EXAMPLES

from swgpy.object import *	

def create(kernel):
	result = Static()

	result.template = ""object/static/creature/shared_yavin4_kliknik.iff""
	result.attribute_template_id = -1
	result.stfName(""obj_n"",""unknown_object"")		
	
	#### BEGIN MODIFICATIONS ####
	####  END MODIFICATIONS  ####
	
	return result","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```####', 'NOTICE:', 'THIS', 'FILE', 'IS', 'AUTOGENERATED', '####', 'MODIFICATIONS', 'MAY', 'BE', 'LOST', 'IF', 'DONE', 'IMPROPERLY', '####', 'PLEASE', 'SEE', 'THE', 'ONLINE', 'DOCUMENTATION', 'FOR', 'EXAMPLES', 'from', 'swgpy.object', 'import', '*', 'def', 'create(kernel):', 'result', '=', 'Static()', 'result.template', '=', '""object/static/creature/shared_yavin4_kliknik.iff""', 'result.attribute_template_id', '=', '-1', 'result.stfName(""obj_n"",""unknown_object"")', '####', 'BEGIN', 'MODIFICATIONS', '####', '####', 'END', 'MODIFICATIONS', '####', 'return', 'result```']",challenge not surrounded by ''': ,
"/* eslint-disable max-nested-callbacks */

import {
    expect
} from 'chai';

import trim from './../src/trim';

describe(`trim`, () => {
    it(`removes characters matching the regex pattern`, () => {
        expect(trim(`abc123`, /[0-9]$/g)).to.equal(`abc`);
    });
});
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', 'eslint-disable', 'max-nested-callbacks', '*/', 'import', '{', 'expect', '}', 'from', ""'chai';"", 'import', 'trim', 'from', ""'./../src/trim';"", 'describe(`trim`,', '()', '=>', '{', 'it(`removes', 'characters', 'matching', 'the', 'regex', 'pattern`,', '()', '=>', '{', 'expect(trim(`abc123`,', '/[0-9]$/g)).to.equal(`abc`);', '});', '});', '```']",challenge not surrounded by ''': ,
"from django.conf import settings

from .access_to_care import AccessToCare
from .anonymous import AnonymousConsent
from .appointment import Appointment
from .cancer import Cancer
from .cd4_history import Cd4History
from .cea_enrollment_checklist import CeaEnrollmentChecklist
from .cea_opd import CeaOpd
from .circumcised import Circumcised
from .circumcision import Circumcision
from .clinic_questionnaire import ClinicQuestionnaire
from .community_engagement import CommunityEngagement
from .correct_consent import CorrectConsent
from .demographics import Demographics
from .disenrollment import (
    DisenrollmentBhs, DisenrollmentAhs, DisenrollmentEss, DisenrollmentAno)
from .education import Education
from .elisa_hiv_result import ElisaHivResult
from .enrollment import (
    Enrollment, EnrollmentAhs, EnrollmentAno, EnrollmentBhs, EnrollmentEss)
from .grant import Grant
from .heart_attack import HeartAttack
from .hic_enrollment import HicEnrollment
from .hiv_care_adherence import HivCareAdherence
from .hiv_health_care_costs import HivHealthCareCosts
from .hiv_linkage_to_care import HivLinkageToCare
from .hiv_medical_care import HivMedicalCare
from .hiv_related_illness import HivRelatedIllness
from .hiv_result import HivResult
from .hiv_result_documentation import HivResultDocumentation
from .hiv_test_review import HivTestReview
from .hiv_tested import HivTested
from .hiv_testing_history import HivTestingHistory
from .hiv_untested import HivUntested
from .hospital_admission import HospitalAdmission
from .household_composition import HouseholdComposition
from .hypertension_cardiovascular import HypertensionCardiovascular
from .immigration_status import ImmigrationStatus
from .labour_market_wages import LabourMarketWages
from .list_models import (
    Arv, CircumcisionBenefits, Diagnoses, HeartDisease,
    FamilyPlanning, MedicalCareAccess, LiveWith, PartnerResidency,
    NeighbourhoodProblems, ResidentMostLikely, TestsOrdered,
    MedicationPrescribed)
from .medical_diagnoses import MedicalDiagnoses
from .model_mixins import CrfModelMixin, CrfModelManager
from .non_pregnancy import NonPregnancy
from .outpatient_care import OutpatientCare
from .participation import Participation
from .pima_cd4 import PimaCd4
from .pima_vl import PimaVl
from .positive_participant import PositiveParticipant
from .pregnancy import Pregnancy
from .quality_of_life import QualityOfLife
from .recent_partner import RecentPartner
from .reproductive_health import ReproductiveHealth
from .residency_mobility import ResidencyMobility
from .resource_utilization import ResourceUtilization
from .result import Result, ResultItem
from .sexual_behaviour import SexualBehaviour
from .second_partner import SecondPartner
from .stigma import Stigma
from .stigma_opinion import StigmaOpinion
from .subject_consent import SubjectConsent, ClinicMemberUpdater
from .subject_locator import SubjectLocator
from .subject_offstudy import SubjectOffstudy
from .subject_referral import SubjectReferral
from .subject_requisition import SubjectRequisition
from .subject_visit import SubjectVisit
from .substance_use import SubstanceUse
from .tb_symptoms import TbSymptoms
from .third_partner import ThirdPartner
from .tuberculosis import Tuberculosis
from .uncircumcised import Uncircumcised
from .utils import is_circumcised
from .viral_load_result import ViralLoadResult


if settings.APP_NAME == 'bcpp_subject':
    from ..tests import models
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```from', 'django.conf', 'import', 'settings', 'from', '.access_to_care', 'import', 'AccessToCare', 'from', '.anonymous', 'import', 'AnonymousConsent', 'from', '.appointment', 'import', 'Appointment', 'from', '.cancer', 'import', 'Cancer', 'from', '.cd4_history', 'import', 'Cd4History', 'from', '.cea_enrollment_checklist', 'import', 'CeaEnrollmentChecklist', 'from', '.cea_opd', 'import', 'CeaOpd', 'from', '.circumcised', 'import', 'Circumcised', 'from', '.circumcision', 'import', 'Circumcision', 'from', '.clinic_questionnaire', 'import', 'ClinicQuestionnaire', 'from', '.community_engagement', 'import', 'CommunityEngagement', 'from', '.correct_consent', 'import', 'CorrectConsent', 'from', '.demographics', 'import', 'Demographics', 'from', '.disenrollment', 'import', '(', 'DisenrollmentBhs,', 'DisenrollmentAhs,', 'DisenrollmentEss,', 'DisenrollmentAno)', 'from', '.education', 'import', 'Education', 'from', '.elisa_hiv_result', 'import', 'ElisaHivResult', 'from', '.enrollment', 'import', '(', 'Enrollment,', 'EnrollmentAhs,', 'EnrollmentAno,', 'EnrollmentBhs,', 'EnrollmentEss)', 'from', '.grant', 'import', 'Grant', 'from', '.heart_attack', 'import', 'HeartAttack', 'from', '.hic_enrollment', 'import', 'HicEnrollment', 'from', '.hiv_care_adherence', 'import', 'HivCareAdherence', 'from', '.hiv_health_care_costs', 'import', 'HivHealthCareCosts', 'from', '.hiv_linkage_to_care', 'import', 'HivLinkageToCare', 'from', '.hiv_medical_care', 'import', 'HivMedicalCare', 'from', '.hiv_related_illness', 'import', 'HivRelatedIllness', 'from', '.hiv_result', 'import', 'HivResult', 'from', '.hiv_result_documentation', 'import', 'HivResultDocumentation', 'from', '.hiv_test_review', 'import', 'HivTestReview', 'from', '.hiv_tested', 'import', 'HivTested', 'from', '.hiv_testing_history', 'import', 'HivTestingHistory', 'from', '.hiv_untested', 'import', 'HivUntested', 'from', '.hospital_admission', 'import', 'HospitalAdmission', 'from', '.household_composition', 'import', 'HouseholdComposition', 'from', '.hypertension_cardiovascular', 'import', 'HypertensionCardiovascular', 'from', '.immigration_status', 'import', 'ImmigrationStatus', 'from', '.labour_market_wages', 'import', 'LabourMarketWages', 'from', '.list_models', 'import', '(', 'Arv,', 'CircumcisionBenefits,', 'Diagnoses,', 'HeartDisease,', 'FamilyPlanning,', 'MedicalCareAccess,', 'LiveWith,', 'PartnerResidency,', 'NeighbourhoodProblems,', 'ResidentMostLikely,', 'TestsOrdered,', 'MedicationPrescribed)', 'from', '.medical_diagnoses', 'import', 'MedicalDiagnoses', 'from', '.model_mixins', 'import', 'CrfModelMixin,', 'CrfModelManager', 'from', '.non_pregnancy', 'import', 'NonPregnancy', 'from', '.outpatient_care', 'import', 'OutpatientCare', 'from', '.participation', 'import', 'Participation', 'from', '.pima_cd4', 'import', 'PimaCd4', 'from', '.pima_vl', 'import', 'PimaVl', 'from', '.positive_participant', 'import', 'PositiveParticipant', 'from', '.pregnancy', 'import', 'Pregnancy', 'from', '.quality_of_life', 'import', 'QualityOfLife', 'from', '.recent_partner', 'import', 'RecentPartner', 'from', '.reproductive_health', 'import', 'ReproductiveHealth', 'from', '.residency_mobility', 'import', 'ResidencyMobility', 'from', '.resource_utilization', 'import', 'ResourceUtilization', 'from', '.result', 'import', 'Result,', 'ResultItem', 'from', '.sexual_behaviour', 'import', 'SexualBehaviour', 'from', '.second_partner', 'import', 'SecondPartner', 'from', '.stigma', 'import', 'Stigma', 'from', '.stigma_opinion', 'import', 'StigmaOpinion', 'from', '.subject_consent', 'import', 'SubjectConsent,', 'ClinicMemberUpdater', 'from', '.subject_locator', 'import', 'SubjectLocator', 'from', '.subject_offstudy', 'import', 'SubjectOffstudy', 'from', '.subject_referral', 'import', 'SubjectReferral', 'from', '.subject_requisition', 'import', 'SubjectRequisition', 'from', '.subject_visit', 'import', 'SubjectVisit', 'from', '.substance_use', 'import', 'SubstanceUse', 'from', '.tb_symptoms', 'import', 'TbSymptoms', 'from', '.third_partner', 'import', 'ThirdPartner', 'from', '.tuberculosis', 'import', 'Tuberculosis', 'from', '.uncircumcised', 'import', 'Uncircumcised', 'from', '.utils', 'import', 'is_circumcised', 'from', '.viral_load_result', 'import', 'ViralLoadResult', 'if', 'settings.APP_NAME', '==', ""'bcpp_subject':"", 'from', '..tests', 'import', 'models', '```']",challenge not surrounded by ''': ,
"package org.knowm.xchange.ccex.dto.ticker;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.annotation.Generated;

@JsonInclude(JsonInclude.Include.NON_NULL)
@Generated(""org.jsonschema2pojo"")
@JsonPropertyOrder({""pairs""})
public class CCEXPairs {

  @JsonProperty(""pairs"")
  private List<String> pairs = new ArrayList<String>();

  @JsonIgnore private Map<String, Object> additionalProperties = new HashMap<String, Object>();

  /** No args constructor for use in serialization */
  public CCEXPairs() {}

  /** @param pairs */
  public CCEXPairs(List<String> pairs) {
    this.pairs = pairs;
  }

  /** @return The pairs */
  @JsonProperty(""pairs"")
  public List<String> getPairs() {
    return pairs;
  }

  /** @param pairs The pairs */
  @JsonProperty(""pairs"")
  public void setPairs(List<String> pairs) {
    this.pairs = pairs;
  }

  public CCEXPairs withPairs(List<String> pairs) {
    this.pairs = pairs;
    return this;
  }

  @JsonAnyGetter
  public Map<String, Object> getAdditionalProperties() {
    return this.additionalProperties;
  }

  @JsonAnySetter
  public void setAdditionalProperty(String name, Object value) {
    this.additionalProperties.put(name, value);
  }

  public CCEXPairs withAdditionalProperty(String name, Object value) {
    this.additionalProperties.put(name, value);
    return this;
  }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'org.knowm.xchange.ccex.dto.ticker;', 'import', 'com.fasterxml.jackson.annotation.JsonAnyGetter;', 'import', 'com.fasterxml.jackson.annotation.JsonAnySetter;', 'import', 'com.fasterxml.jackson.annotation.JsonIgnore;', 'import', 'com.fasterxml.jackson.annotation.JsonInclude;', 'import', 'com.fasterxml.jackson.annotation.JsonProperty;', 'import', 'com.fasterxml.jackson.annotation.JsonPropertyOrder;', 'import', 'java.util.ArrayList;', 'import', 'java.util.HashMap;', 'import', 'java.util.List;', 'import', 'java.util.Map;', 'import', 'javax.annotation.Generated;', '@JsonInclude(JsonInclude.Include.NON_NULL)', '@Generated(""org.jsonschema2pojo"")', '@JsonPropertyOrder({""pairs""})', 'public', 'class', 'CCEXPairs', '{', '@JsonProperty(""pairs"")', 'private', 'List<String>', 'pairs', '=', 'new', 'ArrayList<String>();', '@JsonIgnore', 'private', 'Map<String,', 'Object>', 'additionalProperties', '=', 'new', 'HashMap<String,', 'Object>();', '/**', 'No', 'args', 'constructor', 'for', 'use', 'in', 'serialization', '*/', 'public', 'CCEXPairs()', '{}', '/**', '@param', 'pairs', '*/', 'public', 'CCEXPairs(List<String>', 'pairs)', '{', 'this.pairs', '=', 'pairs;', '}', '/**', '@return', 'The', 'pairs', '*/', '@JsonProperty(""pairs"")', 'public', 'List<String>', 'getPairs()', '{', 'return', 'pairs;', '}', '/**', '@param', 'pairs', 'The', 'pairs', '*/', '@JsonProperty(""pairs"")', 'public', 'void', 'setPairs(List<String>', 'pairs)', '{', 'this.pairs', '=', 'pairs;', '}', 'public', 'CCEXPairs', 'withPairs(List<String>', 'pairs)', '{', 'this.pairs', '=', 'pairs;', 'return', 'this;', '}', '@JsonAnyGetter', 'public', 'Map<String,', 'Object>', 'getAdditionalProperties()', '{', 'return', 'this.additionalProperties;', '}', '@JsonAnySetter', 'public', 'void', 'setAdditionalProperty(String', 'name,', 'Object', 'value)', '{', 'this.additionalProperties.put(name,', 'value);', '}', 'public', 'CCEXPairs', 'withAdditionalProperty(String', 'name,', 'Object', 'value)', '{', 'this.additionalProperties.put(name,', 'value);', 'return', 'this;', '}', '}', '```']",challenge not surrounded by ''': ,
"#!/usr/bin/python
# -*- coding: UTF-8 -*-

if __name__ == '__main__':
    ptr = []
    for i in range(5):
        num = int(raw_input('input a number:'))
        ptr.append(num)

    ptr.reverse()
    print ptr
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/usr/bin/python', '#', '-*-', 'coding:', 'UTF-8', '-*-', 'if', '__name__', '==', ""'__main__':"", 'ptr', '=', '[]', 'for', 'i', 'in', 'range(5):', 'num', '=', ""int(raw_input('input"", 'a', ""number:'))"", 'ptr.append(num)', 'ptr.reverse()', 'print', 'ptr', '```']",challenge not surrounded by ''': ,
"'use strict';

var base64_url_decode = require('./base64_url_decode');

module.exports = function (token,options) {
  if (typeof token !== 'string') {
    throw new Error('Invalid token specified');
  }

  options = options || {};
  var pos = options.header === true ? 0 : 1;
  return JSON.parse(base64_url_decode(token.split('.')[pos]));
};
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', ""```'use"", ""strict';"", 'var', 'base64_url_decode', '=', ""require('./base64_url_decode');"", 'module.exports', '=', 'function', '(token,options)', '{', 'if', '(typeof', 'token', '!==', ""'string')"", '{', 'throw', 'new', ""Error('Invalid"", 'token', ""specified');"", '}', 'options', '=', 'options', '||', '{};', 'var', 'pos', '=', 'options.header', '===', 'true', '?', '0', ':', '1;', 'return', ""JSON.parse(base64_url_decode(token.split('.')[pos]));"", '};', '```']",challenge not surrounded by ''': ,
"package com.robomorphine.strictmode.viewer.adapter;


import com.robomorphine.strictmode.viewer.fragment.ViolationFragmentHelper;
import com.robomorphine.strictmode.viewer.fragment.ViolationHeadersFragment;
import com.robomorphine.strictmode.viewer.violation.Violation;
import com.robomorphine.strictmode.viewer.violation.group.ViolationGroup;

import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentPagerAdapter;

public class ViolationHeadersPagerAdapter extends FragmentPagerAdapter {
    
    private final ViolationGroup mViolationGroup;    
    
    public ViolationHeadersPagerAdapter(FragmentManager fragmentManager, ViolationGroup group) {
        super(fragmentManager);       
        mViolationGroup = group;
    }
    
    @Override
    public int getCount() {
        return mViolationGroup.getSize();
    }
    
    @Override
    public Fragment getItem(int position) {
        Violation violation = mViolationGroup.getViolation(position);
        Bundle bundle = new Bundle();
        bundle.putSerializable(ViolationFragmentHelper.EXTRA_VIOLATION, violation);
        
        ViolationHeadersFragment fragment = new ViolationHeadersFragment();        
        fragment.setArguments(bundle);       
       
        return fragment;
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.robomorphine.strictmode.viewer.adapter;', 'import', 'com.robomorphine.strictmode.viewer.fragment.ViolationFragmentHelper;', 'import', 'com.robomorphine.strictmode.viewer.fragment.ViolationHeadersFragment;', 'import', 'com.robomorphine.strictmode.viewer.violation.Violation;', 'import', 'com.robomorphine.strictmode.viewer.violation.group.ViolationGroup;', 'import', 'android.os.Bundle;', 'import', 'android.support.v4.app.Fragment;', 'import', 'android.support.v4.app.FragmentManager;', 'import', 'android.support.v4.app.FragmentPagerAdapter;', 'public', 'class', 'ViolationHeadersPagerAdapter', 'extends', 'FragmentPagerAdapter', '{', 'private', 'final', 'ViolationGroup', 'mViolationGroup;', 'public', 'ViolationHeadersPagerAdapter(FragmentManager', 'fragmentManager,', 'ViolationGroup', 'group)', '{', 'super(fragmentManager);', 'mViolationGroup', '=', 'group;', '}', '@Override', 'public', 'int', 'getCount()', '{', 'return', 'mViolationGroup.getSize();', '}', '@Override', 'public', 'Fragment', 'getItem(int', 'position)', '{', 'Violation', 'violation', '=', 'mViolationGroup.getViolation(position);', 'Bundle', 'bundle', '=', 'new', 'Bundle();', 'bundle.putSerializable(ViolationFragmentHelper.EXTRA_VIOLATION,', 'violation);', 'ViolationHeadersFragment', 'fragment', '=', 'new', 'ViolationHeadersFragment();', 'fragment.setArguments(bundle);', 'return', 'fragment;', '}', '}', '```']",challenge not surrounded by ''': ,
"package com.sequenceiq.it.cloudbreak.testcase.authorization;

public class AuthUserKeys {

    public static final String USER_ACCOUNT_ADMIN = ""CB-UserAccountAdmin"";

    public static final String USER_ENV_CREATOR_A = ""CB-User-EnvCreatorA"";

    public static final String USER_ENV_CREATOR_B = ""CB-User-EnvCreatorB"";

    public static final String ACCOUNT_ADMIN = ""CB-AccountAdmin"";

    public static final String ENV_CREATOR_A = ""CB-Machine-EnvCreatorA"";

    public static final String ENV_CREATOR_B = ""CB-Machine-EnvCreatorB"";

    public static final String ENV_ADMIN_A = ""CB-Machine-EnvAdminA"";

    public static final String ENV_DATA_STEWARD = ""CB-Machine-DataSteward"";

    public static final String ZERO_RIGHTS = ""CB-zero-roles"";

    private AuthUserKeys() {

    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.sequenceiq.it.cloudbreak.testcase.authorization;', 'public', 'class', 'AuthUserKeys', '{', 'public', 'static', 'final', 'String', 'USER_ACCOUNT_ADMIN', '=', '""CB-UserAccountAdmin"";', 'public', 'static', 'final', 'String', 'USER_ENV_CREATOR_A', '=', '""CB-User-EnvCreatorA"";', 'public', 'static', 'final', 'String', 'USER_ENV_CREATOR_B', '=', '""CB-User-EnvCreatorB"";', 'public', 'static', 'final', 'String', 'ACCOUNT_ADMIN', '=', '""CB-AccountAdmin"";', 'public', 'static', 'final', 'String', 'ENV_CREATOR_A', '=', '""CB-Machine-EnvCreatorA"";', 'public', 'static', 'final', 'String', 'ENV_CREATOR_B', '=', '""CB-Machine-EnvCreatorB"";', 'public', 'static', 'final', 'String', 'ENV_ADMIN_A', '=', '""CB-Machine-EnvAdminA"";', 'public', 'static', 'final', 'String', 'ENV_DATA_STEWARD', '=', '""CB-Machine-DataSteward"";', 'public', 'static', 'final', 'String', 'ZERO_RIGHTS', '=', '""CB-zero-roles"";', 'private', 'AuthUserKeys()', '{', '}', '}', '```']",challenge not surrounded by ''': ,
"<!doctype html public ""-//W3C//DTD HTML 4.0 Transitional//EN"" ""http://www.w3.org/TR/REC-html40/loose.dtd"">
<html>
<head>
    <title>PHPXRef 0.7.1 : Unnamed Project : Function Reference: onasync()</title>
    <link rel=""stylesheet"" href=""../sample.css"" type=""text/css"">
    <link rel=""stylesheet"" href=""../sample-print.css"" type=""text/css"" media=""print"">
    <style id=""hilight"" type=""text/css""></style>
    <meta http-equiv=""content-type"" content=""text/html;charset=iso-8859-1"">
</head>
<body bgcolor=""#ffffff"" text=""#000000"" link=""#801800"" vlink=""#300540"" alink=""#ffffff"">
<table class=""pagetitle"" width=""100%"">
	<tr>
        <td valign=""top"" class=""pagetitle"">
            [ <a href=""../index.html"">Index</a> ]
        </td>
        <td align=""right"" class=""pagetitle"">
		    <h2 style=""margin-bottom: 0px"">PHP Cross Reference of Unnamed Project</h2>
	    </td>
    </tr>
</table>


<!-- Generated by PHPXref 0.7.1 at Sat Nov 21 22:13:19 2015 -->
<!-- PHPXref (c) 2000-2010 Gareth Watts - gareth@omnipotent.net -->
<!-- http://phpxref.sourceforge.net/ -->

<script src=""../phpxref.js"" type=""text/javascript""></script>
<script language=""JavaScript"" type=""text/javascript"">
<!--
ext='.html';
relbase='../';
subdir='_functions';
filename='index.html';
cookiekey='phpxref';
handleNavFrame(relbase, subdir, filename);
logFunction('onasync');
// -->
</script>
<script language=""JavaScript"" type=""text/javascript"">
if (gwGetCookie('xrefnav')=='off')
  document.write('<p class=""navlinks"">[ <a href=""javascript:navOn()"">Show Explorer<\/a> ]<\/p>');
else
  document.write('<p class=""navlinks"">[ <a href=""javascript:navOff()"">Hide Explorer<\/a> ]<\/p>');
</script>
<noscript>
<p class=""navlinks"">
[ <a href=""../nav.html"" target=""_top"">Show Explorer</a> ]
[ <a href=""index.html"" target=""_top"">Hide Navbar</a> ]
</p>
</noscript>
[<a href=""../index.html"">Top level directory</a>]<br>
<script language=""JavaScript"" type=""text/javascript"">
<!--

document.writeln('<table align=""right"" class=""searchbox-link""><tr><td><a class=""searchbox-link"" href=""javascript:void(0)"" onMouseOver=""showSearchBox()"">Search</a><br>');
document.writeln('<table border=""0"" cellspacing=""0"" cellpadding=""0"" class=""searchbox"" id=""searchbox"">');
document.writeln('<tr><td class=""searchbox-title"">');
document.writeln('<a class=""searchbox-title"" href=""javascript:showSearchPopup()"">Search History +</a>');
document.writeln('<\/td><\/tr>');

document.writeln('<tr><td class=""searchbox-body"" id=""searchbox-body"">');
document.writeln('<form name=""search"" style=""margin:0px; padding:0px"" onSubmit=\'return jump()\'>');
document.writeln('<a class=""searchbox-body"" href=""../_classes/index.html"">Class<\/a>: ');
document.writeln('<input type=""text"" size=10 value="""" name=""classname""><br>');
document.writeln('<a id=""funcsearchlink"" class=""searchbox-body"" href=""../_functions/index.html"">Function<\/a>: ');
document.writeln('<input type=""text"" size=10 value="""" name=""funcname""><br>');
document.writeln('<a class=""searchbox-body"" href=""../_variables/index.html"">Variable<\/a>: ');
document.writeln('<input type=""text"" size=10 value="""" name=""varname""><br>');
document.writeln('<a class=""searchbox-body"" href=""../_constants/index.html"">Constant<\/a>: ');
document.writeln('<input type=""text"" size=10 value="""" name=""constname""><br>');
document.writeln('<a class=""searchbox-body"" href=""../_tables/index.html"">Table<\/a>: ');
document.writeln('<input type=""text"" size=10 value="""" name=""tablename""><br>');
document.writeln('<input type=""submit"" class=""searchbox-button"" value=""Search"">');
document.writeln('<\/form>');
document.writeln('<\/td><\/tr><\/table>');
document.writeln('<\/td><\/tr><\/table>');
// -->
</script>
<div id=""search-popup"" class=""searchpopup""><p id=""searchpopup-title"" class=""searchpopup-title"">title</p><div id=""searchpopup-body"" class=""searchpopup-body"">Body</div><p class=""searchpopup-close""><a href=""javascript:gwCloseActive()"">[close]</a></p></div>
<h3>Function and Method Cross Reference</h3>
<h2><a href=""index.html#onasync"">onasync()</a></h2>

<b>Defined at:</b><ul>
<li><a href=""../rsc/js/bootstrap/typeahead.bundle.js.html#onasync"">/rsc/js/bootstrap/typeahead.bundle.js</a>  -> <a onClick=""logFunction('onasync', '/rsc/js/bootstrap/typeahead.bundle.js.source.html#l756')"" href=""../rsc/js/bootstrap/typeahead.bundle.js.source.html#l756""> line 756</a></li>
</ul>
<b>Referenced 2 times:</b><ul>
<li><a href=""../rsc/js/bootstrap/typeahead.bundle.js.html"">/rsc/js/bootstrap/typeahead.bundle.js</a>  -> <a href=""../rsc/js/bootstrap/typeahead.bundle.js.source.html#l1361""> line 1361</a></li>
<li><a href=""../rsc/js/bootstrap/typeahead.bundle.min.js.html"">/rsc/js/bootstrap/typeahead.bundle.min.js</a>  -> <a href=""../rsc/js/bootstrap/typeahead.bundle.min.js.source.html#l7""> line 7</a></li>
</ul>
<!-- A link to the phpxref site in your customized footer file is appreciated ;-) -->
<br><hr>
<table width=""100%"">
	<tr><td>Generated: Sat Nov 21 22:13:19 2015</td>
	<td align=""right""><i>Cross-referenced by <a href=""http://phpxref.sourceforge.net/"">PHPXref 0.7.1</a></i></td>
	</tr>
</table>
</body></html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!doctype', 'html', 'public', '""-//W3C//DTD', 'HTML', '4.0', 'Transitional//EN""', '""http://www.w3.org/TR/REC-html40/loose.dtd"">', '<html>', '<head>', '<title>PHPXRef', '0.7.1', ':', 'Unnamed', 'Project', ':', 'Function', 'Reference:', 'onasync()</title>', '<link', 'rel=""stylesheet""', 'href=""../sample.css""', 'type=""text/css"">', '<link', 'rel=""stylesheet""', 'href=""../sample-print.css""', 'type=""text/css""', 'media=""print"">', '<style', 'id=""hilight""', 'type=""text/css""></style>', '<meta', 'http-equiv=""content-type""', 'content=""text/html;charset=iso-8859-1"">', '</head>', '<body', 'bgcolor=""#ffffff""', 'text=""#000000""', 'link=""#801800""', 'vlink=""#300540""', 'alink=""#ffffff"">', '<table', 'class=""pagetitle""', 'width=""100%"">', '<tr>', '<td', 'valign=""top""', 'class=""pagetitle"">', '[', '<a', 'href=""../index.html"">Index</a>', ']', '</td>', '<td', 'align=""right""', 'class=""pagetitle"">', '<h2', 'style=""margin-bottom:', '0px"">PHP', 'Cross', 'Reference', 'of', 'Unnamed', 'Project</h2>', '</td>', '</tr>', '</table>', '<!--', 'Generated', 'by', 'PHPXref', '0.7.1', 'at', 'Sat', 'Nov', '21', '22:13:19', '2015', '-->', '<!--', 'PHPXref', '(c)', '2000-2010', 'Gareth', 'Watts', '-', 'gareth@omnipotent.net', '-->', '<!--', 'http://phpxref.sourceforge.net/', '-->', '<script', 'src=""../phpxref.js""', 'type=""text/javascript""></script>', '<script', 'language=""JavaScript""', 'type=""text/javascript"">', '<!--', ""ext='.html';"", ""relbase='../';"", ""subdir='_functions';"", ""filename='index.html';"", ""cookiekey='phpxref';"", 'handleNavFrame(relbase,', 'subdir,', 'filename);', ""logFunction('onasync');"", '//', '-->', '</script>', '<script', 'language=""JavaScript""', 'type=""text/javascript"">', 'if', ""(gwGetCookie('xrefnav')=='off')"", ""document.write('<p"", 'class=""navlinks"">[', '<a', 'href=""javascript:navOn()"">Show', 'Explorer<\\/a>', ""]<\\/p>');"", 'else', ""document.write('<p"", 'class=""navlinks"">[', '<a', 'href=""javascript:navOff()"">Hide', 'Explorer<\\/a>', ""]<\\/p>');"", '</script>', '<noscript>', '<p', 'class=""navlinks"">', '[', '<a', 'href=""../nav.html""', 'target=""_top"">Show', 'Explorer</a>', ']', '[', '<a', 'href=""index.html""', 'target=""_top"">Hide', 'Navbar</a>', ']', '</p>', '</noscript>', '[<a', 'href=""../index.html"">Top', 'level', 'directory</a>]<br>', '<script', 'language=""JavaScript""', 'type=""text/javascript"">', '<!--', ""document.writeln('<table"", 'align=""right""', 'class=""searchbox-link""><tr><td><a', 'class=""searchbox-link""', 'href=""javascript:void(0)""', 'onMouseOver=""showSearchBox()"">Search</a><br>\');', ""document.writeln('<table"", 'border=""0""', 'cellspacing=""0""', 'cellpadding=""0""', 'class=""searchbox""', 'id=""searchbox"">\');', ""document.writeln('<tr><td"", 'class=""searchbox-title"">\');', ""document.writeln('<a"", 'class=""searchbox-title""', 'href=""javascript:showSearchPopup()"">Search', 'History', ""+</a>');"", ""document.writeln('<\\/td><\\/tr>');"", ""document.writeln('<tr><td"", 'class=""searchbox-body""', 'id=""searchbox-body"">\');', ""document.writeln('<form"", 'name=""search""', 'style=""margin:0px;', 'padding:0px""', ""onSubmit=\\'return"", ""jump()\\'>');"", ""document.writeln('<a"", 'class=""searchbox-body""', 'href=""../_classes/index.html"">Class<\\/a>:', ""');"", ""document.writeln('<input"", 'type=""text""', 'size=10', 'value=""""', 'name=""classname""><br>\');', ""document.writeln('<a"", 'id=""funcsearchlink""', 'class=""searchbox-body""', 'href=""../_functions/index.html"">Function<\\/a>:', ""');"", ""document.writeln('<input"", 'type=""text""', 'size=10', 'value=""""', 'name=""funcname""><br>\');', ""document.writeln('<a"", 'class=""searchbox-body""', 'href=""../_variables/index.html"">Variable<\\/a>:', ""');"", ""document.writeln('<input"", 'type=""text""', 'size=10', 'value=""""', 'name=""varname""><br>\');', ""document.writeln('<a"", 'class=""searchbox-body""', 'href=""../_constants/index.html"">Constant<\\/a>:', ""');"", ""document.writeln('<input"", 'type=""text""', 'size=10', 'value=""""', 'name=""constname""><br>\');', ""document.writeln('<a"", 'class=""searchbox-body""', 'href=""../_tables/index.html"">Table<\\/a>:', ""');"", ""document.writeln('<input"", 'type=""text""', 'size=10', 'value=""""', 'name=""tablename""><br>\');', ""document.writeln('<input"", 'type=""submit""', 'class=""searchbox-button""', 'value=""Search"">\');', ""document.writeln('<\\/form>');"", ""document.writeln('<\\/td><\\/tr><\\/table>');"", ""document.writeln('<\\/td><\\/tr><\\/table>');"", '//', '-->', '</script>', '<div', 'id=""search-popup""', 'class=""searchpopup""><p', 'id=""searchpopup-title""', 'class=""searchpopup-title"">title</p><div', 'id=""searchpopup-body""', 'class=""searchpopup-body"">Body</div><p', 'class=""searchpopup-close""><a', 'href=""javascript:gwCloseActive()"">[close]</a></p></div>', '<h3>Function', 'and', 'Method', 'Cross', 'Reference</h3>', '<h2><a', 'href=""index.html#onasync"">onasync()</a></h2>', '<b>Defined', 'at:</b><ul>', '<li><a', 'href=""../rsc/js/bootstrap/typeahead.bundle.js.html#onasync"">/rsc/js/bootstrap/typeahead.bundle.js</a>', '->', '<a', 'onClick=""logFunction(\'onasync\',', '\'/rsc/js/bootstrap/typeahead.bundle.js.source.html#l756\')""', 'href=""../rsc/js/bootstrap/typeahead.bundle.js.source.html#l756"">', 'line', '756</a></li>', '</ul>', '<b>Referenced', '2', 'times:</b><ul>', '<li><a', 'href=""../rsc/js/bootstrap/typeahead.bundle.js.html"">/rsc/js/bootstrap/typeahead.bundle.js</a>', '->', '<a', 'href=""../rsc/js/bootstrap/typeahead.bundle.js.source.html#l1361"">', 'line', '1361</a></li>', '<li><a', 'href=""../rsc/js/bootstrap/typeahead.bundle.min.js.html"">/rsc/js/bootstrap/typeahead.bundle.min.js</a>', '->', '<a', 'href=""../rsc/js/bootstrap/typeahead.bundle.min.js.source.html#l7"">', 'line', '7</a></li>', '</ul>', '<!--', 'A', 'link', 'to', 'the', 'phpxref', 'site', 'in', 'your', 'customized', 'footer', 'file', 'is', 'appreciated', ';-)', '-->', '<br><hr>', '<table', 'width=""100%"">', '<tr><td>Generated:', 'Sat', 'Nov', '21', '22:13:19', '2015</td>', '<td', 'align=""right""><i>Cross-referenced', 'by', '<a', 'href=""http://phpxref.sourceforge.net/"">PHPXref', '0.7.1</a></i></td>', '</tr>', '</table>', '</body></html>', '```']",challenge not surrounded by ''': ,
"module.exports = function() {
	return new Screenshot(arguments);
};

var path = require('flavored-path');
var jimp = require('jimp');
var fs = require('fs');

function Screenshot(args) {
	var config = this.parseArgs(args);
	var self = this;

	try {
		require(""./capture/"" + process.platform + "".js"")(config.options, function(error, options) {
			// TODO add option for string, rather than file
			if(error && typeof config.callback === ""function"")
				config.callback(error, null);
			else if(!error) {
				if (typeof options.intermediate === ""string"") {
					self.processImage(options.intermediate, options.output, options, function (error, success) {
						fs.unlink(options.intermediate, handleCallback); // delete intermediate
					});
				}
				else
					self.processImage(options.output, options.output, options, handleCallback);
			}
		});
	}
	catch(error) {
		if(typeof error == ""object"" && typeof error.code === ""string"" && error.code === ""MODULE_NOT_FOUND"")
			handleCallback(""unsupported_platform"");
	}

	function handleCallback(error, success) {
		if(typeof config.callback === ""function"") {
			if(typeof success === ""undefined"")
				success = !error;
			config.callback(error, success);
		}
	}
}

Screenshot.prototype.processImage = function(input, output, options, callback) {
	if(typeof options.width !== ""number"" && typeof  options.height !== ""number"" && typeof options.quality !== ""number"") // no processing required
		callback(null);
	else {
		new jimp(input, function (err, image) {
			if(typeof options.width === ""number"")
				var resWidth = Math.floor(options.width);
			if(typeof options.height === ""number"")
				var resHeight = Math.floor(options.height);

			if(typeof resWidth === ""number"" && typeof resHeight !== ""number"") // resize to width, maintain aspect ratio
				var resHeight = Math.floor(image.bitmap.height * (resWidth / image.bitmap.width));
			else if(typeof resHeight === ""number"" && typeof resWidth !== ""number"") // resize to height, maintain aspect ratio
				var resWidth = Math.floor(image.bitmap.width * (resHeight / image.bitmap.height));

			try {
				image.resize(resWidth, resHeight);

				if(typeof options.quality === ""number"" && options.quality >= 0 && options.quality <= 100)
					image.quality(Math.floor(options.quality)); // only works with JPEGs

				image.write(output, callback);
			}
			catch(error) {
				callback(error);
			}
		});
	}
};

Screenshot.prototype.parseArgs = function(args) {
	var config = {options: {}};

	for(var property in args) {
		if (args.hasOwnProperty(property)) {
			switch(typeof args[property]) {
				case ""string"":
					var file = args[property];
					break;
				case ""function"":
					config.callback = args[property];
					break;
				case ""object"":
					if(args[property] != null)
						config.options = args[property];
					break;
			}
		}
	}

	if(typeof file === ""string"")
		config.options.output = file;

	if(typeof config.options.output === ""string"")
		config.options.output = path.normalize(config.options.output);

	return config;
};
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```module.exports', '=', 'function()', '{', 'return', 'new', 'Screenshot(arguments);', '};', 'var', 'path', '=', ""require('flavored-path');"", 'var', 'jimp', '=', ""require('jimp');"", 'var', 'fs', '=', ""require('fs');"", 'function', 'Screenshot(args)', '{', 'var', 'config', '=', 'this.parseArgs(args);', 'var', 'self', '=', 'this;', 'try', '{', 'require(""./capture/""', '+', 'process.platform', '+', '"".js"")(config.options,', 'function(error,', 'options)', '{', '//', 'TODO', 'add', 'option', 'for', 'string,', 'rather', 'than', 'file', 'if(error', '&&', 'typeof', 'config.callback', '===', '""function"")', 'config.callback(error,', 'null);', 'else', 'if(!error)', '{', 'if', '(typeof', 'options.intermediate', '===', '""string"")', '{', 'self.processImage(options.intermediate,', 'options.output,', 'options,', 'function', '(error,', 'success)', '{', 'fs.unlink(options.intermediate,', 'handleCallback);', '//', 'delete', 'intermediate', '});', '}', 'else', 'self.processImage(options.output,', 'options.output,', 'options,', 'handleCallback);', '}', '});', '}', 'catch(error)', '{', 'if(typeof', 'error', '==', '""object""', '&&', 'typeof', 'error.code', '===', '""string""', '&&', 'error.code', '===', '""MODULE_NOT_FOUND"")', 'handleCallback(""unsupported_platform"");', '}', 'function', 'handleCallback(error,', 'success)', '{', 'if(typeof', 'config.callback', '===', '""function"")', '{', 'if(typeof', 'success', '===', '""undefined"")', 'success', '=', '!error;', 'config.callback(error,', 'success);', '}', '}', '}', 'Screenshot.prototype.processImage', '=', 'function(input,', 'output,', 'options,', 'callback)', '{', 'if(typeof', 'options.width', '!==', '""number""', '&&', 'typeof', 'options.height', '!==', '""number""', '&&', 'typeof', 'options.quality', '!==', '""number"")', '//', 'no', 'processing', 'required', 'callback(null);', 'else', '{', 'new', 'jimp(input,', 'function', '(err,', 'image)', '{', 'if(typeof', 'options.width', '===', '""number"")', 'var', 'resWidth', '=', 'Math.floor(options.width);', 'if(typeof', 'options.height', '===', '""number"")', 'var', 'resHeight', '=', 'Math.floor(options.height);', 'if(typeof', 'resWidth', '===', '""number""', '&&', 'typeof', 'resHeight', '!==', '""number"")', '//', 'resize', 'to', 'width,', 'maintain', 'aspect', 'ratio', 'var', 'resHeight', '=', 'Math.floor(image.bitmap.height', '*', '(resWidth', '/', 'image.bitmap.width));', 'else', 'if(typeof', 'resHeight', '===', '""number""', '&&', 'typeof', 'resWidth', '!==', '""number"")', '//', 'resize', 'to', 'height,', 'maintain', 'aspect', 'ratio', 'var', 'resWidth', '=', 'Math.floor(image.bitmap.width', '*', '(resHeight', '/', 'image.bitmap.height));', 'try', '{', 'image.resize(resWidth,', 'resHeight);', 'if(typeof', 'options.quality', '===', '""number""', '&&', 'options.quality', '>=', '0', '&&', 'options.quality', '<=', '100)', 'image.quality(Math.floor(options.quality));', '//', 'only', 'works', 'with', 'JPEGs', 'image.write(output,', 'callback);', '}', 'catch(error)', '{', 'callback(error);', '}', '});', '}', '};', 'Screenshot.prototype.parseArgs', '=', 'function(args)', '{', 'var', 'config', '=', '{options:', '{}};', 'for(var', 'property', 'in', 'args)', '{', 'if', '(args.hasOwnProperty(property))', '{', 'switch(typeof', 'args[property])', '{', 'case', '""string"":', 'var', 'file', '=', 'args[property];', 'break;', 'case', '""function"":', 'config.callback', '=', 'args[property];', 'break;', 'case', '""object"":', 'if(args[property]', '!=', 'null)', 'config.options', '=', 'args[property];', 'break;', '}', '}', '}', 'if(typeof', 'file', '===', '""string"")', 'config.options.output', '=', 'file;', 'if(typeof', 'config.options.output', '===', '""string"")', 'config.options.output', '=', 'path.normalize(config.options.output);', 'return', 'config;', '};', '```']",challenge not surrounded by ''': ,
"package org.sls.helper.common.registry.maker;

import org.sls.helper.common.entity.EntityHelper;

import net.minecraft.entity.Entity;

public class EntityMaker {

	public static void makeEntity(Class<? extends Entity> entity, String name)
	{
		entity = EntityHelper.createEntity(entity, name);
	}

	public static void makeEntity(Class<? extends Entity> entity, String name, int foreground, int background)
	{
		entity = EntityHelper.createEntity(entity, name, foreground, background);
	}
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'org.sls.helper.common.registry.maker;', 'import', 'org.sls.helper.common.entity.EntityHelper;', 'import', 'net.minecraft.entity.Entity;', 'public', 'class', 'EntityMaker', '{', 'public', 'static', 'void', 'makeEntity(Class<?', 'extends', 'Entity>', 'entity,', 'String', 'name)', '{', 'entity', '=', 'EntityHelper.createEntity(entity,', 'name);', '}', 'public', 'static', 'void', 'makeEntity(Class<?', 'extends', 'Entity>', 'entity,', 'String', 'name,', 'int', 'foreground,', 'int', 'background)', '{', 'entity', '=', 'EntityHelper.createEntity(entity,', 'name,', 'foreground,', 'background);', '}', '}', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE html>
<!--
 Copyright (c) 2014-2021 Antony Polukhin
 antoshkka at gmail dot com

 Distributed under the Boost Software License,
 Version 1.0. (See accompanying file LICENSE_1_0.txt
 or copy at http://boost.org/LICENSE_1_0.txt)
-->
<html>
<head>
<meta charset=""utf-8"">
<meta http-equiv=""refresh"" content=""0; url=https://www.boost.org/doc/libs/master/doc/html/boost_pfr.html"">
<title>Boost.Stacktrace</title>
<style>
  body {
    background: #fff;
    color: #000;
  }
  a {
    color: #00f;
    text-decoration: none;
  }
</style>
</head>
<body>
  <p>
    Automatic redirection failed, please go to
    <a href=""https://www.boost.org/doc/libs/master/doc/html/boost_pfr.html"">https://www.boost.org/doc/libs/master/doc/html/boost_pfr.html</a>
  </p>
  <p>
    &copy; 2014-2021 Antony Polukhin
  </p>
</body>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'html>', '<!--', 'Copyright', '(c)', '2014-2021', 'Antony', 'Polukhin', 'antoshkka', 'at', 'gmail', 'dot', 'com', 'Distributed', 'under', 'the', 'Boost', 'Software', 'License,', 'Version', '1.0.', '(See', 'accompanying', 'file', 'LICENSE_1_0.txt', 'or', 'copy', 'at', 'http://boost.org/LICENSE_1_0.txt)', '-->', '<html>', '<head>', '<meta', 'charset=""utf-8"">', '<meta', 'http-equiv=""refresh""', 'content=""0;', 'url=https://www.boost.org/doc/libs/master/doc/html/boost_pfr.html"">', '<title>Boost.Stacktrace</title>', '<style>', 'body', '{', 'background:', '#fff;', 'color:', '#000;', '}', 'a', '{', 'color:', '#00f;', 'text-decoration:', 'none;', '}', '</style>', '</head>', '<body>', '<p>', 'Automatic', 'redirection', 'failed,', 'please', 'go', 'to', '<a', 'href=""https://www.boost.org/doc/libs/master/doc/html/boost_pfr.html"">https://www.boost.org/doc/libs/master/doc/html/boost_pfr.html</a>', '</p>', '<p>', '&copy;', '2014-2021', 'Antony', 'Polukhin', '</p>', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright 2012 Open Source Robotics Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
*/
#include <boost/bind.hpp>
#include ""gazebo/transport/transport.hh""
#include ""gazebo/physics/physics.hh""
#include ""gazebo/gazebo.hh""

#include ""msgs/custom.pb.h""

namespace gazebo
{
  class CustomMessages : public ModelPlugin
  {
    public: void Load(physics::ModelPtr /*_parent*/, sdf::ElementPtr /*_sdf*/)
    {
      this->node.reset(new transport::Node());
      this->pub = node->Advertise<my_msgs::Custom>(""~/my_msgs"");

      // Listen to the update event. This event is broadcast every
      // simulation iteration.
      this->updateConnection = event::Events::ConnectWorldUpdateBegin(
          boost::bind(&CustomMessages::OnUpdate, this));
    }

    // Called by the world update start event
    public: void OnUpdate()
    {
      my_msgs::Custom msg;
      msg.set_my_data(""hello"");
      this->pub->Publish(msg);
    }

    // Pointer to the model
    private: transport::NodePtr node;
    private: transport::PublisherPtr pub;

    // Pointer to the update event connection
    private: event::ConnectionPtr updateConnection;
  };

  // Register this plugin with the simulator
  GZ_REGISTER_MODEL_PLUGIN(CustomMessages);
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '2012', 'Open', 'Source', 'Robotics', 'Foundation', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*', '*/', '#include', '<boost/bind.hpp>', '#include', '""gazebo/transport/transport.hh""', '#include', '""gazebo/physics/physics.hh""', '#include', '""gazebo/gazebo.hh""', '#include', '""msgs/custom.pb.h""', 'namespace', 'gazebo', '{', 'class', 'CustomMessages', ':', 'public', 'ModelPlugin', '{', 'public:', 'void', 'Load(physics::ModelPtr', '/*_parent*/,', 'sdf::ElementPtr', '/*_sdf*/)', '{', 'this->node.reset(new', 'transport::Node());', 'this->pub', '=', 'node->Advertise<my_msgs::Custom>(""~/my_msgs"");', '//', 'Listen', 'to', 'the', 'update', 'event.', 'This', 'event', 'is', 'broadcast', 'every', '//', 'simulation', 'iteration.', 'this->updateConnection', '=', 'event::Events::ConnectWorldUpdateBegin(', 'boost::bind(&CustomMessages::OnUpdate,', 'this));', '}', '//', 'Called', 'by', 'the', 'world', 'update', 'start', 'event', 'public:', 'void', 'OnUpdate()', '{', 'my_msgs::Custom', 'msg;', 'msg.set_my_data(""hello"");', 'this->pub->Publish(msg);', '}', '//', 'Pointer', 'to', 'the', 'model', 'private:', 'transport::NodePtr', 'node;', 'private:', 'transport::PublisherPtr', 'pub;', '//', 'Pointer', 'to', 'the', 'update', 'event', 'connection', 'private:', 'event::ConnectionPtr', 'updateConnection;', '};', '//', 'Register', 'this', 'plugin', 'with', 'the', 'simulator', 'GZ_REGISTER_MODEL_PLUGIN(CustomMessages);', '}', '```']",challenge not surrounded by ''': ,
"# Start new tmux session or reattach to an existing session, but only if not
# already inside a tmux session.
function tm() {
  local is_source=; [[ ""$1"" == ""SOURCE"" ]] && is_source=1 && shift
  local tmux_no_logout=~/.dotfiles/caches/tmux-no-logout
  if [[ ! ""$TMUX"" ]]; then
    # Clean up any orphaned ""no logout"" file.
    [[ -e $tmux_no_logout ]] && rm $tmux_no_logout
    # Actually start tmux.
    tmux ls >/dev/null 2>&1 && tmux attach ""$@"" || tmux ""$@""
    # If ""no logout"" doesn't exist, exit.
    [[ -e $tmux_no_logout ]] && rm $tmux_no_logout || exit
  elif [[ ! ""$is_source"" ]]; then
    echo ""Already in a tmux session!""
  fi
}

# Start tmux now (at login), but only if in a login shell and not already
# started (and possibly detached) in this shell.
if shopt -q login_shell && [[ ! ""$TMUX_AUTO_STARTED"" ]]; then
  TMUX_AUTO_STARTED=1
  # tm SOURCE
fi

# Run an arbitrary command in the current tmux window (if only one pane)
# otherwise create a new window and run the command there.
function run_in_fresh_tmux_window() {
  local panes=""$(tmux list-panes | wc -l)""
  if [[ ""$panes"" != 1 ]]; then
    tmux new-window ""bash --rcfile <(echo '. ~/.bashrc; $*')""
  else
    ""$@""
  fi
}

# Open editor and shell in new window using main-vertical layout.
# Usage: qq [num-panes] [working-directory] [...other-args]
function qq() {
  local panes=1; [[ ""$1"" =~ ^[0-9]+$ ]] && panes=$1 && shift
  local dir=""$PWD""; [[ -d ""$1"" ]] && dir=""$1"" && shift
  local win=$(tmux new-window -P -a -c ""$dir"" -n ""$(basename ""$dir"")"")
  n_times $panes tmux split-window -t $win -c ""$dir""
  tmux select-layout -t $win main-vertical
  tmux select-pane -t $win
  tmux send-keys -t $win ""$EDITOR $@"" Enter
}
alias q2='qq 2'
alias q3='qq 3'
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', 'Start', 'new', 'tmux', 'session', 'or', 'reattach', 'to', 'an', 'existing', 'session,', 'but', 'only', 'if', 'not', '#', 'already', 'inside', 'a', 'tmux', 'session.', 'function', 'tm()', '{', 'local', 'is_source=;', '[[', '""$1""', '==', '""SOURCE""', ']]', '&&', 'is_source=1', '&&', 'shift', 'local', 'tmux_no_logout=~/.dotfiles/caches/tmux-no-logout', 'if', '[[', '!', '""$TMUX""', ']];', 'then', '#', 'Clean', 'up', 'any', 'orphaned', '""no', 'logout""', 'file.', '[[', '-e', '$tmux_no_logout', ']]', '&&', 'rm', '$tmux_no_logout', '#', 'Actually', 'start', 'tmux.', 'tmux', 'ls', '>/dev/null', '2>&1', '&&', 'tmux', 'attach', '""$@""', '||', 'tmux', '""$@""', '#', 'If', '""no', 'logout""', ""doesn't"", 'exist,', 'exit.', '[[', '-e', '$tmux_no_logout', ']]', '&&', 'rm', '$tmux_no_logout', '||', 'exit', 'elif', '[[', '!', '""$is_source""', ']];', 'then', 'echo', '""Already', 'in', 'a', 'tmux', 'session!""', 'fi', '}', '#', 'Start', 'tmux', 'now', '(at', 'login),', 'but', 'only', 'if', 'in', 'a', 'login', 'shell', 'and', 'not', 'already', '#', 'started', '(and', 'possibly', 'detached)', 'in', 'this', 'shell.', 'if', 'shopt', '-q', 'login_shell', '&&', '[[', '!', '""$TMUX_AUTO_STARTED""', ']];', 'then', 'TMUX_AUTO_STARTED=1', '#', 'tm', 'SOURCE', 'fi', '#', 'Run', 'an', 'arbitrary', 'command', 'in', 'the', 'current', 'tmux', 'window', '(if', 'only', 'one', 'pane)', '#', 'otherwise', 'create', 'a', 'new', 'window', 'and', 'run', 'the', 'command', 'there.', 'function', 'run_in_fresh_tmux_window()', '{', 'local', 'panes=""$(tmux', 'list-panes', '|', 'wc', '-l)""', 'if', '[[', '""$panes""', '!=', '1', ']];', 'then', 'tmux', 'new-window', '""bash', '--rcfile', '<(echo', ""'."", '~/.bashrc;', '$*\')""', 'else', '""$@""', 'fi', '}', '#', 'Open', 'editor', 'and', 'shell', 'in', 'new', 'window', 'using', 'main-vertical', 'layout.', '#', 'Usage:', 'qq', '[num-panes]', '[working-directory]', '[...other-args]', 'function', 'qq()', '{', 'local', 'panes=1;', '[[', '""$1""', '=~', '^[0-9]+$', ']]', '&&', 'panes=$1', '&&', 'shift', 'local', 'dir=""$PWD"";', '[[', '-d', '""$1""', ']]', '&&', 'dir=""$1""', '&&', 'shift', 'local', 'win=$(tmux', 'new-window', '-P', '-a', '-c', '""$dir""', '-n', '""$(basename', '""$dir"")"")', 'n_times', '$panes', 'tmux', 'split-window', '-t', '$win', '-c', '""$dir""', 'tmux', 'select-layout', '-t', '$win', 'main-vertical', 'tmux', 'select-pane', '-t', '$win', 'tmux', 'send-keys', '-t', '$win', '""$EDITOR', '$@""', 'Enter', '}', 'alias', ""q2='qq"", ""2'"", 'alias', ""q3='qq"", ""3'"", '```']",challenge not surrounded by ''': ,
"var express = require('express');
var bodyParser = require('body-parser');
var cookieParser = require('cookie-parser');
var log4js = require('log4js');
var fs = require('fs');
var nconf = require('nconf');
nconf.file({ file: __dirname + '/config.json' });

var access_log_path = nconf.get('log').access_log_path;
var app_log_path = nconf.get('log').app_log_path;

log4js.clearAppenders();
log4js.loadAppender('file');
log4js.addAppender(log4js.appenders.file(access_log_path), 'ACCESS_LOG');
log4js.addAppender(log4js.appenders.file(app_log_path), 'APP_LOG');

var logger = log4js.getLogger('APP_LOG');

var app = new express();

var router = require('./routes.js');

var port = nconf.get('server').port;

var secert = nconf.get('server').secret;

app.set('views', __dirname + '/views');
app.use(express.static(__dirname + '/public'));
app.set('view engine', 'ejs');

app.use(bodyParser.json());
app.use(log4js.connectLogger(log4js.getLogger('ACCESS_LOG'), {
    level: 'auto'
}));

app.use(bodyParser.urlencoded({
    extended: false
}));

app.use(cookieParser(secert));

app.use('/', router);

var listen = app.listen(port);

console.log('Policy Cleaner is now running on port '+ port + '∠( ᐛ 」∠)＿');

logger.info('Policy Cleaner is now running on port '+ port + '∠( ᐛ 」∠)＿');

module.exports = app;
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```var', 'express', '=', ""require('express');"", 'var', 'bodyParser', '=', ""require('body-parser');"", 'var', 'cookieParser', '=', ""require('cookie-parser');"", 'var', 'log4js', '=', ""require('log4js');"", 'var', 'fs', '=', ""require('fs');"", 'var', 'nconf', '=', ""require('nconf');"", 'nconf.file({', 'file:', '__dirname', '+', ""'/config.json'"", '});', 'var', 'access_log_path', '=', ""nconf.get('log').access_log_path;"", 'var', 'app_log_path', '=', ""nconf.get('log').app_log_path;"", 'log4js.clearAppenders();', ""log4js.loadAppender('file');"", 'log4js.addAppender(log4js.appenders.file(access_log_path),', ""'ACCESS_LOG');"", 'log4js.addAppender(log4js.appenders.file(app_log_path),', ""'APP_LOG');"", 'var', 'logger', '=', ""log4js.getLogger('APP_LOG');"", 'var', 'app', '=', 'new', 'express();', 'var', 'router', '=', ""require('./routes.js');"", 'var', 'port', '=', ""nconf.get('server').port;"", 'var', 'secert', '=', ""nconf.get('server').secret;"", ""app.set('views',"", '__dirname', '+', ""'/views');"", 'app.use(express.static(__dirname', '+', ""'/public'));"", ""app.set('view"", ""engine',"", ""'ejs');"", 'app.use(bodyParser.json());', ""app.use(log4js.connectLogger(log4js.getLogger('ACCESS_LOG'),"", '{', 'level:', ""'auto'"", '}));', 'app.use(bodyParser.urlencoded({', 'extended:', 'false', '}));', 'app.use(cookieParser(secert));', ""app.use('/',"", 'router);', 'var', 'listen', '=', 'app.listen(port);', ""console.log('Policy"", 'Cleaner', 'is', 'now', 'running', 'on', 'port', ""'+"", 'port', '+', ""'∠("", 'ᐛ', ""」∠)＿');"", ""logger.info('Policy"", 'Cleaner', 'is', 'now', 'running', 'on', 'port', ""'+"", 'port', '+', ""'∠("", 'ᐛ', ""」∠)＿');"", 'module.exports', '=', 'app;', '```']",challenge not surrounded by ''': ,
"'use strict';

// store token > filepath relationships
const tokens = {};

function deleteToken(token) {
    setTimeout((t) => {
        if (tokens[t] !== undefined) {
            delete tokens[t];
        }
    }, 1000, token);
}


function rand() {
    return Math.random().toString(36).substr(2);
}

function newToken() {
    // Generate a token by combining two randomly generated numbers that are converted to base 36
    return rand() + rand();
}

function getResourcePath(token) {
    let resource = tokens[token];

    // delete the token if we actually had something saved.
    // 1 second delay before deletion to  allow multiple requests at once.
    if (resource !== undefined) {
        deleteToken(token);
    }
    return resource;
}

function storeResourcePath(path) {
    let token = newToken();
    tokens[token] = path;
    return token;
}


exports.getResourcePath = getResourcePath;
exports.storeResourcePath = storeResourcePath;
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', ""```'use"", ""strict';"", '//', 'store', 'token', '>', 'filepath', 'relationships', 'const', 'tokens', '=', '{};', 'function', 'deleteToken(token)', '{', 'setTimeout((t)', '=>', '{', 'if', '(tokens[t]', '!==', 'undefined)', '{', 'delete', 'tokens[t];', '}', '},', '1000,', 'token);', '}', 'function', 'rand()', '{', 'return', 'Math.random().toString(36).substr(2);', '}', 'function', 'newToken()', '{', '//', 'Generate', 'a', 'token', 'by', 'combining', 'two', 'randomly', 'generated', 'numbers', 'that', 'are', 'converted', 'to', 'base', '36', 'return', 'rand()', '+', 'rand();', '}', 'function', 'getResourcePath(token)', '{', 'let', 'resource', '=', 'tokens[token];', '//', 'delete', 'the', 'token', 'if', 'we', 'actually', 'had', 'something', 'saved.', '//', '1', 'second', 'delay', 'before', 'deletion', 'to', 'allow', 'multiple', 'requests', 'at', 'once.', 'if', '(resource', '!==', 'undefined)', '{', 'deleteToken(token);', '}', 'return', 'resource;', '}', 'function', 'storeResourcePath(path)', '{', 'let', 'token', '=', 'newToken();', 'tokens[token]', '=', 'path;', 'return', 'token;', '}', 'exports.getResourcePath', '=', 'getResourcePath;', 'exports.storeResourcePath', '=', 'storeResourcePath;', '```']",challenge not surrounded by ''': ,
"/**
 * Copyright (c) 2007-2016 SAIC. All Rights Reserved.
 * This software is published under the terms of the SAIC IS Dept.
 * 
 * @Project: safe4j-web
 * @Title: GenCategory.java
 * @Package com.saicmotor.gen.entity
 * @Description: 
 *
 * @CreateDate : 2016年4月18日
 * @CreateBy   : kojrf
 */

package com.saicmotor.gen.entity;

import java.util.List;

import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementWrapper;
import javax.xml.bind.annotation.XmlRootElement;

import com.saicmotor.sys.entity.Dict;
/**
 * @ClassName: GenCategory
 * @Description: 
 * @author kojrf
 * @date 2016年4月18日 下午7:08:18
 */

@XmlRootElement(name=""category"")
public class GenCategory extends Dict {

	private static final long serialVersionUID = 1L;
	private List<String> template;			// 主表模板
	private List<String> childTableTemplate;// 子表模板
	
	public static String CATEGORY_REF = ""category-ref:"";

	public GenCategory() {
		super();
	}

	@XmlElement(name = ""template"")
	public List<String> getTemplate() {
		return template;
	}

	public void setTemplate(List<String> template) {
		this.template = template;
	}
	
	@XmlElementWrapper(name = ""childTable"")
	@XmlElement(name = ""template"")
	public List<String> getChildTableTemplate() {
		return childTableTemplate;
	}

	public void setChildTableTemplate(List<String> childTableTemplate) {
		this.childTableTemplate = childTableTemplate;
	}
	

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', 'Copyright', '(c)', '2007-2016', 'SAIC.', 'All', 'Rights', 'Reserved.', '*', 'This', 'software', 'is', 'published', 'under', 'the', 'terms', 'of', 'the', 'SAIC', 'IS', 'Dept.', '*', '*', '@Project:', 'safe4j-web', '*', '@Title:', 'GenCategory.java', '*', '@Package', 'com.saicmotor.gen.entity', '*', '@Description:', '*', '*', '@CreateDate', ':', '2016年4月18日', '*', '@CreateBy', ':', 'kojrf', '*/', 'package', 'com.saicmotor.gen.entity;', 'import', 'java.util.List;', 'import', 'javax.xml.bind.annotation.XmlElement;', 'import', 'javax.xml.bind.annotation.XmlElementWrapper;', 'import', 'javax.xml.bind.annotation.XmlRootElement;', 'import', 'com.saicmotor.sys.entity.Dict;', '/**', '*', '@ClassName:', 'GenCategory', '*', '@Description:', '*', '@author', 'kojrf', '*', '@date', '2016年4月18日', '下午7:08:18', '*/', '@XmlRootElement(name=""category"")', 'public', 'class', 'GenCategory', 'extends', 'Dict', '{', 'private', 'static', 'final', 'long', 'serialVersionUID', '=', '1L;', 'private', 'List<String>', 'template;', '//', '主表模板', 'private', 'List<String>', 'childTableTemplate;//', '子表模板', 'public', 'static', 'String', 'CATEGORY_REF', '=', '""category-ref:"";', 'public', 'GenCategory()', '{', 'super();', '}', '@XmlElement(name', '=', '""template"")', 'public', 'List<String>', 'getTemplate()', '{', 'return', 'template;', '}', 'public', 'void', 'setTemplate(List<String>', 'template)', '{', 'this.template', '=', 'template;', '}', '@XmlElementWrapper(name', '=', '""childTable"")', '@XmlElement(name', '=', '""template"")', 'public', 'List<String>', 'getChildTableTemplate()', '{', 'return', 'childTableTemplate;', '}', 'public', 'void', 'setChildTableTemplate(List<String>', 'childTableTemplate)', '{', 'this.childTableTemplate', '=', 'childTableTemplate;', '}', '}', '```']",challenge not surrounded by ''': ,
"import AppDispatcher from '../AppDispatcher';
import ActionTypes from '../Constants';

const MapActions = {
    saveMap(mapObject) {
        AppDispatcher.dispatch({
            actionType: ActionTypes.SAVE_MAP,
            map: mapObject,
        });
    },

    saveCurrentGeolocation(lat, lng) {
        AppDispatcher.dispatch({
            actionType: ActionTypes.SAVE_CURRENT_GEOLOCATION,
            geolocation: { lat, lng },
        });
    },

    saveSelectedCoords(lat, lng) {
        AppDispatcher.dispatch({
            actionType: ActionTypes.SAVE_SELECTED_COORDS,
            coordinates: { lat, lng },
        });
    },
};

export default MapActions;
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'AppDispatcher', 'from', ""'../AppDispatcher';"", 'import', 'ActionTypes', 'from', ""'../Constants';"", 'const', 'MapActions', '=', '{', 'saveMap(mapObject)', '{', 'AppDispatcher.dispatch({', 'actionType:', 'ActionTypes.SAVE_MAP,', 'map:', 'mapObject,', '});', '},', 'saveCurrentGeolocation(lat,', 'lng)', '{', 'AppDispatcher.dispatch({', 'actionType:', 'ActionTypes.SAVE_CURRENT_GEOLOCATION,', 'geolocation:', '{', 'lat,', 'lng', '},', '});', '},', 'saveSelectedCoords(lat,', 'lng)', '{', 'AppDispatcher.dispatch({', 'actionType:', 'ActionTypes.SAVE_SELECTED_COORDS,', 'coordinates:', '{', 'lat,', 'lng', '},', '});', '},', '};', 'export', 'default', 'MapActions;', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright (C) 2016 Chan Chung Kwong <1m02math@126.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.github.chungkwong.sillytranslate.lex;

/**
 *
 * @author Chan Chung Kwong <1m02math@126.com>
 */
public class Meaning{
	private final String text;
	private int count;
	private final String tag;
	public Meaning(String text,String tag,int count){
		this.text=text;
		this.count=count;
		this.tag=tag;
	}
	public String getText(){
		return text;
	}
	public String getTag(){
		return tag;
	}
	public int getCount(){
		return count;
	}
	public void used(int times){
		count+=times;
	}
	@Override
	public String toString(){
		return ""[tag=""+getTag()+"",text=""+getText()+"",count=""+getCount()+""]"";
	}
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '(C)', '2016', 'Chan', 'Chung', 'Kwong', '<1m02math@126.com>', '*', '*', 'This', 'program', 'is', 'free', 'software:', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', '*', 'it', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'as', 'published', 'by', '*', 'the', 'Free', 'Software', 'Foundation,', 'either', 'version', '3', 'of', 'the', 'License,', 'or', '*', '(at', 'your', 'option)', 'any', 'later', 'version.', '*', '*', 'This', 'program', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', '*', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', '*', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', '*', 'GNU', 'General', 'Public', 'License', 'for', 'more', 'details.', '*', '*', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'General', 'Public', 'License', '*', 'along', 'with', 'this', 'program.', 'If', 'not,', 'see', '<http://www.gnu.org/licenses/>.', '*/', 'package', 'com.github.chungkwong.sillytranslate.lex;', '/**', '*', '*', '@author', 'Chan', 'Chung', 'Kwong', '<1m02math@126.com>', '*/', 'public', 'class', 'Meaning{', 'private', 'final', 'String', 'text;', 'private', 'int', 'count;', 'private', 'final', 'String', 'tag;', 'public', 'Meaning(String', 'text,String', 'tag,int', 'count){', 'this.text=text;', 'this.count=count;', 'this.tag=tag;', '}', 'public', 'String', 'getText(){', 'return', 'text;', '}', 'public', 'String', 'getTag(){', 'return', 'tag;', '}', 'public', 'int', 'getCount(){', 'return', 'count;', '}', 'public', 'void', 'used(int', 'times){', 'count+=times;', '}', '@Override', 'public', 'String', 'toString(){', 'return', '""[tag=""+getTag()+"",text=""+getText()+"",count=""+getCount()+""]"";', '}', '}', '```']",challenge not surrounded by ''': ,
"package models.websockets;

import play.mvc.*;
import play.libs.*;
import play.libs.F.*;

import java.nio.channels.ClosedChannelException;
import java.util.*;

public class SimpleChat{

    // collect all websockets here
    private static List<WebSocket.Out<String>> connections = new ArrayList<WebSocket.Out<String>>();
    
    public static void start(WebSocket.In<String> in, WebSocket.Out<String> out){
        
        connections.add(out);
        
        in.onMessage(new Callback<String>(){
            public void invoke(String event){
                try {
					SimpleChat.notifyAll(event);
				} catch (ClosedChannelException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            }
        });
        
        in.onClose(new Callback0(){
            public void invoke(){
                try {
					SimpleChat.notifyAll(""A connection closed"");
				} catch (ClosedChannelException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            }
        });
    }
    
    // Iterate connection list and write incoming message
    public static void notifyAll(String message) throws java.nio.channels.ClosedChannelException{
        for (WebSocket.Out<String> out : connections) {
            out.write(message);
        }
    }
}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'models.websockets;', 'import', 'play.mvc.*;', 'import', 'play.libs.*;', 'import', 'play.libs.F.*;', 'import', 'java.nio.channels.ClosedChannelException;', 'import', 'java.util.*;', 'public', 'class', 'SimpleChat{', '//', 'collect', 'all', 'websockets', 'here', 'private', 'static', 'List<WebSocket.Out<String>>', 'connections', '=', 'new', 'ArrayList<WebSocket.Out<String>>();', 'public', 'static', 'void', 'start(WebSocket.In<String>', 'in,', 'WebSocket.Out<String>', 'out){', 'connections.add(out);', 'in.onMessage(new', 'Callback<String>(){', 'public', 'void', 'invoke(String', 'event){', 'try', '{', 'SimpleChat.notifyAll(event);', '}', 'catch', '(ClosedChannelException', 'e)', '{', '//', 'TODO', 'Auto-generated', 'catch', 'block', 'e.printStackTrace();', '}', '}', '});', 'in.onClose(new', 'Callback0(){', 'public', 'void', 'invoke(){', 'try', '{', 'SimpleChat.notifyAll(""A', 'connection', 'closed"");', '}', 'catch', '(ClosedChannelException', 'e)', '{', '//', 'TODO', 'Auto-generated', 'catch', 'block', 'e.printStackTrace();', '}', '}', '});', '}', '//', 'Iterate', 'connection', 'list', 'and', 'write', 'incoming', 'message', 'public', 'static', 'void', 'notifyAll(String', 'message)', 'throws', 'java.nio.channels.ClosedChannelException{', 'for', '(WebSocket.Out<String>', 'out', ':', 'connections)', '{', 'out.write(message);', '}', '}', '}```']",challenge not surrounded by ''': ,
"// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logic.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The parameters to generate upgraded definition. */
@Fluent
public final class GenerateUpgradedDefinitionParameters {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(GenerateUpgradedDefinitionParameters.class);

    /*
     * The target schema version.
     */
    @JsonProperty(value = ""targetSchemaVersion"")
    private String targetSchemaVersion;

    /**
     * Get the targetSchemaVersion property: The target schema version.
     *
     * @return the targetSchemaVersion value.
     */
    public String targetSchemaVersion() {
        return this.targetSchemaVersion;
    }

    /**
     * Set the targetSchemaVersion property: The target schema version.
     *
     * @param targetSchemaVersion the targetSchemaVersion value to set.
     * @return the GenerateUpgradedDefinitionParameters object itself.
     */
    public GenerateUpgradedDefinitionParameters withTargetSchemaVersion(String targetSchemaVersion) {
        this.targetSchemaVersion = targetSchemaVersion;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//', 'Copyright', '(c)', 'Microsoft', 'Corporation.', 'All', 'rights', 'reserved.', '//', 'Licensed', 'under', 'the', 'MIT', 'License.', '//', 'Code', 'generated', 'by', 'Microsoft', '(R)', 'AutoRest', 'Code', 'Generator.', 'package', 'com.azure.resourcemanager.logic.models;', 'import', 'com.azure.core.annotation.Fluent;', 'import', 'com.azure.core.util.logging.ClientLogger;', 'import', 'com.fasterxml.jackson.annotation.JsonIgnore;', 'import', 'com.fasterxml.jackson.annotation.JsonProperty;', '/**', 'The', 'parameters', 'to', 'generate', 'upgraded', 'definition.', '*/', '@Fluent', 'public', 'final', 'class', 'GenerateUpgradedDefinitionParameters', '{', '@JsonIgnore', 'private', 'final', 'ClientLogger', 'logger', '=', 'new', 'ClientLogger(GenerateUpgradedDefinitionParameters.class);', '/*', '*', 'The', 'target', 'schema', 'version.', '*/', '@JsonProperty(value', '=', '""targetSchemaVersion"")', 'private', 'String', 'targetSchemaVersion;', '/**', '*', 'Get', 'the', 'targetSchemaVersion', 'property:', 'The', 'target', 'schema', 'version.', '*', '*', '@return', 'the', 'targetSchemaVersion', 'value.', '*/', 'public', 'String', 'targetSchemaVersion()', '{', 'return', 'this.targetSchemaVersion;', '}', '/**', '*', 'Set', 'the', 'targetSchemaVersion', 'property:', 'The', 'target', 'schema', 'version.', '*', '*', '@param', 'targetSchemaVersion', 'the', 'targetSchemaVersion', 'value', 'to', 'set.', '*', '@return', 'the', 'GenerateUpgradedDefinitionParameters', 'object', 'itself.', '*/', 'public', 'GenerateUpgradedDefinitionParameters', 'withTargetSchemaVersion(String', 'targetSchemaVersion)', '{', 'this.targetSchemaVersion', '=', 'targetSchemaVersion;', 'return', 'this;', '}', '/**', '*', 'Validates', 'the', 'instance.', '*', '*', '@throws', 'IllegalArgumentException', 'thrown', 'if', 'the', 'instance', 'is', 'not', 'valid.', '*/', 'public', 'void', 'validate()', '{', '}', '}', '```']",challenge not surrounded by ''': ,
"<div class=""modal-header"">
    <button class=""close"" type=""button"" data-dismiss=""modal"">&times;</button>
    <h3 class=""modal-title text-capitalize"">join room</h3>
</div>

<div class=""modal-body"">
    <form id=""join-room"" role=""form"">
        <div class=""form-group has-feedback"">
            <label>Room Name</label>
            <input type=""text"" class=""form-control"" placeholder=""Room Name"">
            <span class='glyphicon form-control-feedback'></span>
        </div> <!-- form-group -->
        <button class=""btn btn-success text-capitalize"" type=""submit"" disabled>join!</button>
    </form> <!-- form -->
</div> <!-- modal-body -->","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<div', 'class=""modal-header"">', '<button', 'class=""close""', 'type=""button""', 'data-dismiss=""modal"">&times;</button>', '<h3', 'class=""modal-title', 'text-capitalize"">join', 'room</h3>', '</div>', '<div', 'class=""modal-body"">', '<form', 'id=""join-room""', 'role=""form"">', '<div', 'class=""form-group', 'has-feedback"">', '<label>Room', 'Name</label>', '<input', 'type=""text""', 'class=""form-control""', 'placeholder=""Room', 'Name"">', '<span', ""class='glyphicon"", ""form-control-feedback'></span>"", '</div>', '<!--', 'form-group', '-->', '<button', 'class=""btn', 'btn-success', 'text-capitalize""', 'type=""submit""', 'disabled>join!</button>', '</form>', '<!--', 'form', '-->', '</div>', '<!--', 'modal-body', '-->```']",challenge not surrounded by ''': ,
"# -*- coding: utf-8 -*-
#
# This file is part of Zenodo.
# Copyright (C) 2016 CERN.
#
# Zenodo is free software; you can redistribute it
# and/or modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
#
# Zenodo is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Zenodo; if not, write to the
# Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston,
# MA 02111-1307, USA.
#
# In applying this license, CERN does not
# waive the privileges and immunities granted to it by virtue of its status
# as an Intergovernmental Organization or submit itself to any jurisdiction.

""""""Persistent identifier minters.""""""

from __future__ import absolute_import

from invenio_pidstore.models import PersistentIdentifier, PIDStatus, \
    RecordIdentifier


def zenodo_concept_recid_minter(record_uuid=None, data=None):
    """"""Mint the Concept RECID.

    Reserves the Concept RECID for the record.
    """"""
    parent_id = RecordIdentifier.next()
    conceptrecid = PersistentIdentifier.create(
        pid_type='recid',
        pid_value=str(parent_id),
        status=PIDStatus.RESERVED,
    )
    data['conceptrecid'] = conceptrecid.pid_value
    return conceptrecid


def zenodo_deposit_minter(record_uuid, data):
    """"""Mint the DEPID, and reserve the Concept RECID and RECID PIDs.""""""
    if 'conceptrecid' not in data:
        zenodo_concept_recid_minter(data=data)

    recid = zenodo_reserved_record_minter(data=data)

    # Create depid with same pid_value of the recid
    depid = PersistentIdentifier.create(
        'depid',
        str(recid.pid_value),
        object_type='rec',
        object_uuid=record_uuid,
        status=PIDStatus.REGISTERED,
    )

    data.update({
        '_deposit': {
            'id': depid.pid_value,
            'status': 'draft',
        },
    })

    return depid


def zenodo_reserved_record_minter(record_uuid=None, data=None):
    """"""Reserve a recid.""""""
    id_ = RecordIdentifier.next()
    recid = PersistentIdentifier.create(
        'recid', str(id_), status=PIDStatus.RESERVED
    )
    data['recid'] = int(recid.pid_value)

    return recid
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', '-*-', 'coding:', 'utf-8', '-*-', '#', '#', 'This', 'file', 'is', 'part', 'of', 'Zenodo.', '#', 'Copyright', '(C)', '2016', 'CERN.', '#', '#', 'Zenodo', 'is', 'free', 'software;', 'you', 'can', 'redistribute', 'it', '#', 'and/or', 'modify', 'it', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'as', '#', 'published', 'by', 'the', 'Free', 'Software', 'Foundation;', 'either', 'version', '2', 'of', 'the', '#', 'License,', 'or', '(at', 'your', 'option)', 'any', 'later', 'version.', '#', '#', 'Zenodo', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', '#', 'useful,', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', '#', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', 'GNU', '#', 'General', 'Public', 'License', 'for', 'more', 'details.', '#', '#', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'General', 'Public', 'License', '#', 'along', 'with', 'Zenodo;', 'if', 'not,', 'write', 'to', 'the', '#', 'Free', 'Software', 'Foundation,', 'Inc.,', '59', 'Temple', 'Place,', 'Suite', '330,', 'Boston,', '#', 'MA', '02111-1307,', 'USA.', '#', '#', 'In', 'applying', 'this', 'license,', 'CERN', 'does', 'not', '#', 'waive', 'the', 'privileges', 'and', 'immunities', 'granted', 'to', 'it', 'by', 'virtue', 'of', 'its', 'status', '#', 'as', 'an', 'Intergovernmental', 'Organization', 'or', 'submit', 'itself', 'to', 'any', 'jurisdiction.', '""""""Persistent', 'identifier', 'minters.""""""', 'from', '__future__', 'import', 'absolute_import', 'from', 'invenio_pidstore.models', 'import', 'PersistentIdentifier,', 'PIDStatus,', '\\', 'RecordIdentifier', 'def', 'zenodo_concept_recid_minter(record_uuid=None,', 'data=None):', '""""""Mint', 'the', 'Concept', 'RECID.', 'Reserves', 'the', 'Concept', 'RECID', 'for', 'the', 'record.', '""""""', 'parent_id', '=', 'RecordIdentifier.next()', 'conceptrecid', '=', 'PersistentIdentifier.create(', ""pid_type='recid',"", 'pid_value=str(parent_id),', 'status=PIDStatus.RESERVED,', ')', ""data['conceptrecid']"", '=', 'conceptrecid.pid_value', 'return', 'conceptrecid', 'def', 'zenodo_deposit_minter(record_uuid,', 'data):', '""""""Mint', 'the', 'DEPID,', 'and', 'reserve', 'the', 'Concept', 'RECID', 'and', 'RECID', 'PIDs.""""""', 'if', ""'conceptrecid'"", 'not', 'in', 'data:', 'zenodo_concept_recid_minter(data=data)', 'recid', '=', 'zenodo_reserved_record_minter(data=data)', '#', 'Create', 'depid', 'with', 'same', 'pid_value', 'of', 'the', 'recid', 'depid', '=', 'PersistentIdentifier.create(', ""'depid',"", 'str(recid.pid_value),', ""object_type='rec',"", 'object_uuid=record_uuid,', 'status=PIDStatus.REGISTERED,', ')', 'data.update({', ""'_deposit':"", '{', ""'id':"", 'depid.pid_value,', ""'status':"", ""'draft',"", '},', '})', 'return', 'depid', 'def', 'zenodo_reserved_record_minter(record_uuid=None,', 'data=None):', '""""""Reserve', 'a', 'recid.""""""', 'id_', '=', 'RecordIdentifier.next()', 'recid', '=', 'PersistentIdentifier.create(', ""'recid',"", 'str(id_),', 'status=PIDStatus.RESERVED', ')', ""data['recid']"", '=', 'int(recid.pid_value)', 'return', 'recid', '```']",challenge not surrounded by ''': ,
"""use strict"";

Object.defineProperty(exports, ""__esModule"", {
  value: true
});
exports.overrideBytesInBuffer = overrideBytesInBuffer;
exports.makeBuffer = makeBuffer;
exports.fromHexdump = fromHexdump;

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var debug = require(""debug"")(""wasm"");

function concatUint8Arrays() {
  for (var _len = arguments.length, arrays = new Array(_len), _key = 0; _key < _len; _key++) {
    arrays[_key] = arguments[_key];
  }

  var totalLength = arrays.reduce(function (a, b) {
    return a + b.length;
  }, 0);
  var result = new Uint8Array(totalLength);
  var offset = 0;

  for (var _i = 0; _i < arrays.length; _i++) {
    var arr = arrays[_i];

    if (arr instanceof Uint8Array === false) {
      throw new Error(""arr must be of type Uint8Array"");
    }

    result.set(arr, offset);
    offset += arr.length;
  }

  return result;
}

function overrideBytesInBuffer(buffer, startLoc, endLoc, newBytes) {
  var beforeBytes = buffer.slice(0, startLoc);
  var afterBytes = buffer.slice(endLoc, buffer.length);
  debug(""overrideBytesInBuffer start=%d end=%d newBytes=%s"", startLoc, endLoc, // $FlowIgnore
  newBytes.map(function (dec) {
    return dec.toString(""16"");
  }).join()); // replacement is empty, we can omit it

  if (newBytes.length === 0) {
    return concatUint8Arrays(beforeBytes, afterBytes);
  }

  var replacement = Uint8Array.from(newBytes);
  return concatUint8Arrays(beforeBytes, replacement, afterBytes);
}

function makeBuffer() {
  for (var _len2 = arguments.length, splitedBytes = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    splitedBytes[_key2] = arguments[_key2];
  }

  var bytes = [].concat.apply([], splitedBytes);
  return new Uint8Array(bytes).buffer;
}

function fromHexdump(str) {
  var lines = str.split(""\n""); // remove any leading left whitespace

  lines = lines.map(function (line) {
    return line.trim();
  });
  var bytes = lines.reduce(function (acc, line) {
    var cols = line.split("" ""); // remove the offset, left column

    cols.shift();
    cols = cols.filter(function (x) {
      return x !== """";
    });
    var bytes = cols.map(function (x) {
      return parseInt(x, 16);
    });
    acc.push.apply(acc, _toConsumableArray(bytes));
    return acc;
  }, []);
  return Buffer.from(bytes);
}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```""use', 'strict"";', 'Object.defineProperty(exports,', '""__esModule"",', '{', 'value:', 'true', '});', 'exports.overrideBytesInBuffer', '=', 'overrideBytesInBuffer;', 'exports.makeBuffer', '=', 'makeBuffer;', 'exports.fromHexdump', '=', 'fromHexdump;', 'function', '_toConsumableArray(arr)', '{', 'if', '(Array.isArray(arr))', '{', 'for', '(var', 'i', '=', '0,', 'arr2', '=', 'new', 'Array(arr.length);', 'i', '<', 'arr.length;', 'i++)', '{', 'arr2[i]', '=', 'arr[i];', '}', 'return', 'arr2;', '}', 'else', '{', 'return', 'Array.from(arr);', '}', '}', 'var', 'debug', '=', 'require(""debug"")(""wasm"");', 'function', 'concatUint8Arrays()', '{', 'for', '(var', '_len', '=', 'arguments.length,', 'arrays', '=', 'new', 'Array(_len),', '_key', '=', '0;', '_key', '<', '_len;', '_key++)', '{', 'arrays[_key]', '=', 'arguments[_key];', '}', 'var', 'totalLength', '=', 'arrays.reduce(function', '(a,', 'b)', '{', 'return', 'a', '+', 'b.length;', '},', '0);', 'var', 'result', '=', 'new', 'Uint8Array(totalLength);', 'var', 'offset', '=', '0;', 'for', '(var', '_i', '=', '0;', '_i', '<', 'arrays.length;', '_i++)', '{', 'var', 'arr', '=', 'arrays[_i];', 'if', '(arr', 'instanceof', 'Uint8Array', '===', 'false)', '{', 'throw', 'new', 'Error(""arr', 'must', 'be', 'of', 'type', 'Uint8Array"");', '}', 'result.set(arr,', 'offset);', 'offset', '+=', 'arr.length;', '}', 'return', 'result;', '}', 'function', 'overrideBytesInBuffer(buffer,', 'startLoc,', 'endLoc,', 'newBytes)', '{', 'var', 'beforeBytes', '=', 'buffer.slice(0,', 'startLoc);', 'var', 'afterBytes', '=', 'buffer.slice(endLoc,', 'buffer.length);', 'debug(""overrideBytesInBuffer', 'start=%d', 'end=%d', 'newBytes=%s"",', 'startLoc,', 'endLoc,', '//', '$FlowIgnore', 'newBytes.map(function', '(dec)', '{', 'return', 'dec.toString(""16"");', '}).join());', '//', 'replacement', 'is', 'empty,', 'we', 'can', 'omit', 'it', 'if', '(newBytes.length', '===', '0)', '{', 'return', 'concatUint8Arrays(beforeBytes,', 'afterBytes);', '}', 'var', 'replacement', '=', 'Uint8Array.from(newBytes);', 'return', 'concatUint8Arrays(beforeBytes,', 'replacement,', 'afterBytes);', '}', 'function', 'makeBuffer()', '{', 'for', '(var', '_len2', '=', 'arguments.length,', 'splitedBytes', '=', 'new', 'Array(_len2),', '_key2', '=', '0;', '_key2', '<', '_len2;', '_key2++)', '{', 'splitedBytes[_key2]', '=', 'arguments[_key2];', '}', 'var', 'bytes', '=', '[].concat.apply([],', 'splitedBytes);', 'return', 'new', 'Uint8Array(bytes).buffer;', '}', 'function', 'fromHexdump(str)', '{', 'var', 'lines', '=', 'str.split(""\\n"");', '//', 'remove', 'any', 'leading', 'left', 'whitespace', 'lines', '=', 'lines.map(function', '(line)', '{', 'return', 'line.trim();', '});', 'var', 'bytes', '=', 'lines.reduce(function', '(acc,', 'line)', '{', 'var', 'cols', '=', 'line.split(""', '"");', '//', 'remove', 'the', 'offset,', 'left', 'column', 'cols.shift();', 'cols', '=', 'cols.filter(function', '(x)', '{', 'return', 'x', '!==', '"""";', '});', 'var', 'bytes', '=', 'cols.map(function', '(x)', '{', 'return', 'parseInt(x,', '16);', '});', 'acc.push.apply(acc,', '_toConsumableArray(bytes));', 'return', 'acc;', '},', '[]);', 'return', 'Buffer.from(bytes);', '}```']",challenge not surrounded by ''': ,
"//! @file Context.hpp Defines CYB::API::Interop::Context
#pragma once
namespace CYB {
	namespace API {
		namespace Interop {
			//! @brief Class which is used as an API for the engine
			class Context {
			private:
				static Context* FContext;	//!< @brief The context reference for the unit. This is not used inside the engine
			public:
				Allocator& FAllocator;	//!< @brief The Allocator
				Logger& FLogger;	//!< @brief The Logger
			protected:
				/*!
					@brief Setup the context
					@param AAllocator The Allocator
					@param ALogger The Logger
					@par Thread Safety
						This function requires no thread safety
				*/
				Context(Allocator& AAllocator, Logger& ALogger) noexcept;
			public:
				/*!
					@brief Get the API's Context
					@return The API Context
					@par Thread Safety
						This function requires no thread safety
				*/
				static Context& GetContext(void) noexcept;

				//! @brief See @ref structors
				Context(const Context&) = delete;
			};
		};
		//! @copydoc CYB::API::Interop::Context::GetContext
		API::Interop::Context& Context(void) noexcept;
	};
};","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//!', '@file', 'Context.hpp', 'Defines', 'CYB::API::Interop::Context', '#pragma', 'once', 'namespace', 'CYB', '{', 'namespace', 'API', '{', 'namespace', 'Interop', '{', '//!', '@brief', 'Class', 'which', 'is', 'used', 'as', 'an', 'API', 'for', 'the', 'engine', 'class', 'Context', '{', 'private:', 'static', 'Context*', 'FContext;', '//!<', '@brief', 'The', 'context', 'reference', 'for', 'the', 'unit.', 'This', 'is', 'not', 'used', 'inside', 'the', 'engine', 'public:', 'Allocator&', 'FAllocator;', '//!<', '@brief', 'The', 'Allocator', 'Logger&', 'FLogger;', '//!<', '@brief', 'The', 'Logger', 'protected:', '/*!', '@brief', 'Setup', 'the', 'context', '@param', 'AAllocator', 'The', 'Allocator', '@param', 'ALogger', 'The', 'Logger', '@par', 'Thread', 'Safety', 'This', 'function', 'requires', 'no', 'thread', 'safety', '*/', 'Context(Allocator&', 'AAllocator,', 'Logger&', 'ALogger)', 'noexcept;', 'public:', '/*!', '@brief', 'Get', 'the', ""API's"", 'Context', '@return', 'The', 'API', 'Context', '@par', 'Thread', 'Safety', 'This', 'function', 'requires', 'no', 'thread', 'safety', '*/', 'static', 'Context&', 'GetContext(void)', 'noexcept;', '//!', '@brief', 'See', '@ref', 'structors', 'Context(const', 'Context&)', '=', 'delete;', '};', '};', '//!', '@copydoc', 'CYB::API::Interop::Context::GetContext', 'API::Interop::Context&', 'Context(void)', 'noexcept;', '};', '};```']",challenge not surrounded by ''': ,
"const hub = require('..');
const h = hub.createHub('two');

hub.on('two', () => {
  h.emit('error', ':(');
});
h.on('two', () => {
  h.emit('success');
});
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```const', 'hub', '=', ""require('..');"", 'const', 'h', '=', ""hub.createHub('two');"", ""hub.on('two',"", '()', '=>', '{', ""h.emit('error',"", ""':(');"", '});', ""h.on('two',"", '()', '=>', '{', ""h.emit('success');"", '});', '```']",challenge not surrounded by ''': ,
"/**
 *  Copyright 2014 OpenVCX openvcx@gmail.com
 *
 *  You may not use this file except in compliance with the OpenVCX License.

 *  The OpenVCX License is based on the Apache Version 2.0 License with
 *  additional credit attribution clauses mentioned in section 4 (e) and
 *  4 (f).
 *
 *  4 (e) Redistributions in source or binary form must reproduce the
 *        aforementioned copyright notice, list of conditions and any
 *        disclaimers in the documentation and/or other materials provided
 *        with the distribution.
 *
 *    (f) All advertising materials mentioning features or use of this
 *        software must display the following acknowledgement:
 *        ""This product includes software from OpenVCX"".
 *
 *  You may obtain a copy of the Apache License, Version 2.0  at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an ""AS IS"" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */

package com.openvcx.conference;

import com.openvcx.util.*;

import org.apache.log4j.Logger;

/**
 *
 * Class for system resource management
 *
 */
public class ResourceManager {

    private final Logger m_log = Logger.getLogger(getClass());

    public ResourceManager() {

    }


};
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', 'Copyright', '2014', 'OpenVCX', 'openvcx@gmail.com', '*', '*', 'You', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'OpenVCX', 'License.', '*', 'The', 'OpenVCX', 'License', 'is', 'based', 'on', 'the', 'Apache', 'Version', '2.0', 'License', 'with', '*', 'additional', 'credit', 'attribution', 'clauses', 'mentioned', 'in', 'section', '4', '(e)', 'and', '*', '4', '(f).', '*', '*', '4', '(e)', 'Redistributions', 'in', 'source', 'or', 'binary', 'form', 'must', 'reproduce', 'the', '*', 'aforementioned', 'copyright', 'notice,', 'list', 'of', 'conditions', 'and', 'any', '*', 'disclaimers', 'in', 'the', 'documentation', 'and/or', 'other', 'materials', 'provided', '*', 'with', 'the', 'distribution.', '*', '*', '(f)', 'All', 'advertising', 'materials', 'mentioning', 'features', 'or', 'use', 'of', 'this', '*', 'software', 'must', 'display', 'the', 'following', 'acknowledgement:', '*', '""This', 'product', 'includes', 'software', 'from', 'OpenVCX"".', '*', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'Apache', 'License,', 'Version', '2.0', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*', '*/', 'package', 'com.openvcx.conference;', 'import', 'com.openvcx.util.*;', 'import', 'org.apache.log4j.Logger;', '/**', '*', '*', 'Class', 'for', 'system', 'resource', 'management', '*', '*/', 'public', 'class', 'ResourceManager', '{', 'private', 'final', 'Logger', 'm_log', '=', 'Logger.getLogger(getClass());', 'public', 'ResourceManager()', '{', '}', '};', '```']",challenge not surrounded by ''': ,
"#!/bin/bash

# script needs following arguments: display_name  email  password
# password must be at least 8 characters long

if [ -z ""$1"" -o -z ""$2"" -o -z ""$3""]
then
    echo ""USAGE: $0  display_name  email  password""
    exit 1
fi

ACCESS_TOKEN=`cat /tmp/o365-access-token`
TMPFILE=`mktemp -t create_user_XXX.json` || exit 1

DISPLAY_NAME=""$1""
USER=""$2""
USER_NAME=""$(basename ""$USER"" ""@czechglobe.cz"")""
PASSWORD=""$3""

# Create new account
echo ""creating user $DISPLAY_NAME""
UPDATE_JSON=""{\""accountEnabled\"":true,\""displayName\"":\""$DISPLAY_NAME\"",\""mailNickname\"":\""$USER_NAME\"",\""userPrincipalName\"":\""$USER\"",\""passwordProfile\"":{\""forceChangePasswordNextSignIn\"":false,\""password\"":\""D3faultHeslo\""}}""
echo ""$UPDATE_JSON""  > $TMPFILE
echo $UPDATE_JSON
curl --header ""Content-type: application/json"" -X POST --header ""Authorization: $ACCESS_TOKEN"" --header ""Accept: application/json"" -d @$TMPFILE 'https://graph.microsoft.com/v1.0/users'

# Set user Location ( CZ :))
echo ""Set location, password requirements""
UPDATE_JSON=""{\""usageLocation\"":\""CZ\"",\""passwordPolicies\"":\""DisablePasswordExpiration,DisableStrongPassword\""}""
echo ""$UPDATE_JSON""  > $TMPFILE
echo $UPDATE_JSON
curl --header ""Content-type: application/json"" -X PATCH --header ""Authorization: $ACCESS_TOKEN"" --header ""Accept: application/json"" -d @$TMPFILE ""https://graph.microsoft.com/v1.0/users/$USER""

#Set password
echo ""Set password""
UPDATE_JSON=""{\""passwordProfile\"":{\""forceChangePasswordNextSignIn\"":false,\""password\"":\""$PASSWORD\""}}""
echo ""$UPDATE_JSON""  > $TMPFILE
echo $UPDATE_JSON
curl --header ""Content-type: application/json"" -X PATCH --header ""Authorization: $ACCESS_TOKEN"" --header ""Accept: application/json"" -d @$TMPFILE ""https://graph.microsoft.com/v1.0/users/$USER""

rm $TMPFILE
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/bin/bash', '#', 'script', 'needs', 'following', 'arguments:', 'display_name', 'email', 'password', '#', 'password', 'must', 'be', 'at', 'least', '8', 'characters', 'long', 'if', '[', '-z', '""$1""', '-o', '-z', '""$2""', '-o', '-z', '""$3""]', 'then', 'echo', '""USAGE:', '$0', 'display_name', 'email', 'password""', 'exit', '1', 'fi', 'ACCESS_TOKEN=`cat', '/tmp/o365-access-token`', 'TMPFILE=`mktemp', '-t', 'create_user_XXX.json`', '||', 'exit', '1', 'DISPLAY_NAME=""$1""', 'USER=""$2""', 'USER_NAME=""$(basename', '""$USER""', '""@czechglobe.cz"")""', 'PASSWORD=""$3""', '#', 'Create', 'new', 'account', 'echo', '""creating', 'user', '$DISPLAY_NAME""', 'UPDATE_JSON=""{\\""accountEnabled\\"":true,\\""displayName\\"":\\""$DISPLAY_NAME\\"",\\""mailNickname\\"":\\""$USER_NAME\\"",\\""userPrincipalName\\"":\\""$USER\\"",\\""passwordProfile\\"":{\\""forceChangePasswordNextSignIn\\"":false,\\""password\\"":\\""D3faultHeslo\\""}}""', 'echo', '""$UPDATE_JSON""', '>', '$TMPFILE', 'echo', '$UPDATE_JSON', 'curl', '--header', '""Content-type:', 'application/json""', '-X', 'POST', '--header', '""Authorization:', '$ACCESS_TOKEN""', '--header', '""Accept:', 'application/json""', '-d', '@$TMPFILE', ""'https://graph.microsoft.com/v1.0/users'"", '#', 'Set', 'user', 'Location', '(', 'CZ', ':))', 'echo', '""Set', 'location,', 'password', 'requirements""', 'UPDATE_JSON=""{\\""usageLocation\\"":\\""CZ\\"",\\""passwordPolicies\\"":\\""DisablePasswordExpiration,DisableStrongPassword\\""}""', 'echo', '""$UPDATE_JSON""', '>', '$TMPFILE', 'echo', '$UPDATE_JSON', 'curl', '--header', '""Content-type:', 'application/json""', '-X', 'PATCH', '--header', '""Authorization:', '$ACCESS_TOKEN""', '--header', '""Accept:', 'application/json""', '-d', '@$TMPFILE', '""https://graph.microsoft.com/v1.0/users/$USER""', '#Set', 'password', 'echo', '""Set', 'password""', 'UPDATE_JSON=""{\\""passwordProfile\\"":{\\""forceChangePasswordNextSignIn\\"":false,\\""password\\"":\\""$PASSWORD\\""}}""', 'echo', '""$UPDATE_JSON""', '>', '$TMPFILE', 'echo', '$UPDATE_JSON', 'curl', '--header', '""Content-type:', 'application/json""', '-X', 'PATCH', '--header', '""Authorization:', '$ACCESS_TOKEN""', '--header', '""Accept:', 'application/json""', '-d', '@$TMPFILE', '""https://graph.microsoft.com/v1.0/users/$USER""', 'rm', '$TMPFILE', '```']",challenge not surrounded by ''': ,
"FROM ubuntu:14.04
MAINTAINER Aaron Xiao <xiaoxiangquan@gmail.com>

COPY installers /tmp/installers
RUN bash /tmp/installers/pre_install.sh
RUN bash /tmp/installers/install_conda.sh
RUN bash /tmp/installers/install_python.sh

ARG USER=aaron
USER ${USER}
WORKDIR /home/${USER}/work
ENTRYPOINT /tmp/installers/entrypoint.sh
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```FROM', 'ubuntu:14.04', 'MAINTAINER', 'Aaron', 'Xiao', '<xiaoxiangquan@gmail.com>', 'COPY', 'installers', '/tmp/installers', 'RUN', 'bash', '/tmp/installers/pre_install.sh', 'RUN', 'bash', '/tmp/installers/install_conda.sh', 'RUN', 'bash', '/tmp/installers/install_python.sh', 'ARG', 'USER=aaron', 'USER', '${USER}', 'WORKDIR', '/home/${USER}/work', 'ENTRYPOINT', '/tmp/installers/entrypoint.sh', '```']",challenge not surrounded by ''': ,
"#!/usr/bin/env python

#-------------------------------------------------------------------------
# Copyright (c) Microsoft.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the ""License"");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an ""AS IS"" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#--------------------------------------------------------------------------

from setuptools import setup

setup(
    name='azure-common',
    version='1.0.0rc1',
    description='Microsoft Azure Client Library for Python (Common)',
    long_description=open('README.rst', 'r').read(),
    license='Apache License 2.0',
    author='Microsoft Corporation',
    author_email='ptvshelp@microsoft.com',
    url='https://github.com/Azure/azure-sdk-for-python',
    classifiers=[
        'Development Status :: 5 - Production/Stable',
        'Programming Language :: Python',
        'Programming Language :: Python :: 2',
        'Programming Language :: Python :: 2.7',
        'Programming Language :: Python :: 3',
        'Programming Language :: Python :: 3.3',
        'Programming Language :: Python :: 3.4',
        'License :: OSI Approved :: Apache Software License',
    ],
    zip_safe=False,
    packages=[
        'azure',
        'azure.common',
    ],
    install_requires=[
        'azure-nspkg',
    ],
)
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/usr/bin/env', 'python', '#-------------------------------------------------------------------------', '#', 'Copyright', '(c)', 'Microsoft.', 'All', 'rights', 'reserved.', '#', '#', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '#', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '#', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '#', 'http://www.apache.org/licenses/LICENSE-2.0', '#', '#', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '#', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '#', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '#', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '#', 'limitations', 'under', 'the', 'License.', '#--------------------------------------------------------------------------', 'from', 'setuptools', 'import', 'setup', 'setup(', ""name='azure-common',"", ""version='1.0.0rc1',"", ""description='Microsoft"", 'Azure', 'Client', 'Library', 'for', 'Python', ""(Common)',"", ""long_description=open('README.rst',"", ""'r').read(),"", ""license='Apache"", 'License', ""2.0',"", ""author='Microsoft"", ""Corporation',"", ""author_email='ptvshelp@microsoft.com',"", ""url='https://github.com/Azure/azure-sdk-for-python',"", 'classifiers=[', ""'Development"", 'Status', '::', '5', '-', ""Production/Stable',"", ""'Programming"", 'Language', '::', ""Python',"", ""'Programming"", 'Language', '::', 'Python', '::', ""2',"", ""'Programming"", 'Language', '::', 'Python', '::', ""2.7',"", ""'Programming"", 'Language', '::', 'Python', '::', ""3',"", ""'Programming"", 'Language', '::', 'Python', '::', ""3.3',"", ""'Programming"", 'Language', '::', 'Python', '::', ""3.4',"", ""'License"", '::', 'OSI', 'Approved', '::', 'Apache', 'Software', ""License',"", '],', 'zip_safe=False,', 'packages=[', ""'azure',"", ""'azure.common',"", '],', 'install_requires=[', ""'azure-nspkg',"", '],', ')', '```']",challenge not surrounded by ''': ,
"/*
 * JetS3t : Java S3 Toolkit
 * Project hosted at http://bitbucket.org/jmurty/jets3t/
 *
 * Copyright 2008 James Murty
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.jets3t.servlets.gatekeeper.impl;

import javax.servlet.ServletConfig;
import javax.servlet.ServletException;

import org.jets3t.service.utils.gatekeeper.GatekeeperMessage;
import org.jets3t.servlets.gatekeeper.ClientInformation;
import org.jets3t.servlets.gatekeeper.TransactionIdProvider;
import org.safehaus.uuid.UUID;
import org.safehaus.uuid.UUIDGenerator;

/**
 * Default TransactionIdProvider implementation that generated random-based UUIDs using the
 * <a href=""http://jug.safehaus.org/Home"">Java Uuid Generator</a>.
 *
 * @author James Murty
 */
public class DefaultTransactionIdProvider extends TransactionIdProvider {

    /**
     * Constructs the TransactionIdProvider - no configuration parameters are required.
     *
     * @param servletConfig
     * @throws ServletException
     */
    public DefaultTransactionIdProvider(ServletConfig servletConfig) throws ServletException {
        super(servletConfig);
    }

    /**
     * Returns a random-based UUID.
     */
    public String getTransactionId(GatekeeperMessage requestMessage, ClientInformation clientInformation)
    {
        // Generate a UUID based on a random generation.
        UUID uuid = UUIDGenerator.getInstance().generateRandomBasedUUID();
        return uuid.toString();
    }

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'JetS3t', ':', 'Java', 'S3', 'Toolkit', '*', 'Project', 'hosted', 'at', 'http://bitbucket.org/jmurty/jets3t/', '*', '*', 'Copyright', '2008', 'James', 'Murty', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'org.jets3t.servlets.gatekeeper.impl;', 'import', 'javax.servlet.ServletConfig;', 'import', 'javax.servlet.ServletException;', 'import', 'org.jets3t.service.utils.gatekeeper.GatekeeperMessage;', 'import', 'org.jets3t.servlets.gatekeeper.ClientInformation;', 'import', 'org.jets3t.servlets.gatekeeper.TransactionIdProvider;', 'import', 'org.safehaus.uuid.UUID;', 'import', 'org.safehaus.uuid.UUIDGenerator;', '/**', '*', 'Default', 'TransactionIdProvider', 'implementation', 'that', 'generated', 'random-based', 'UUIDs', 'using', 'the', '*', '<a', 'href=""http://jug.safehaus.org/Home"">Java', 'Uuid', 'Generator</a>.', '*', '*', '@author', 'James', 'Murty', '*/', 'public', 'class', 'DefaultTransactionIdProvider', 'extends', 'TransactionIdProvider', '{', '/**', '*', 'Constructs', 'the', 'TransactionIdProvider', '-', 'no', 'configuration', 'parameters', 'are', 'required.', '*', '*', '@param', 'servletConfig', '*', '@throws', 'ServletException', '*/', 'public', 'DefaultTransactionIdProvider(ServletConfig', 'servletConfig)', 'throws', 'ServletException', '{', 'super(servletConfig);', '}', '/**', '*', 'Returns', 'a', 'random-based', 'UUID.', '*/', 'public', 'String', 'getTransactionId(GatekeeperMessage', 'requestMessage,', 'ClientInformation', 'clientInformation)', '{', '//', 'Generate', 'a', 'UUID', 'based', 'on', 'a', 'random', 'generation.', 'UUID', 'uuid', '=', 'UUIDGenerator.getInstance().generateRandomBasedUUID();', 'return', 'uuid.toString();', '}', '}', '```']",challenge not surrounded by ''': ,
"<!doctype html>
<html>
  <title>npm-pack</title>
  <meta http-equiv=""content-type"" value=""text/html;utf-8"">
  <link rel=""stylesheet"" type=""text/css"" href=""../../static/style.css"">
  <link rel=""canonical"" href=""https://www.npmjs.org/doc/cli/npm-pack.html"">
  <script async=true src=""../../static/toc.js""></script>

  <body>
    <div id=""wrapper"">

<h1><a href=""../cli/npm-pack.html"">npm-pack</a></h1> <p>Create a tarball from a package</p>
<h2 id=""synopsis"">SYNOPSIS</h2>
<pre><code>npm pack [[&lt;@scope&gt;/]&lt;pkg&gt;...]
</code></pre><h2 id=""description"">DESCRIPTION</h2>
<p>For anything that&#39;s installable (that is, a package folder, tarball,
tarball url, name@tag, name@version, name, or scoped name), this
command will fetch it to the cache, and then copy the tarball to the
current working directory as <code>&lt;name&gt;-&lt;version&gt;.tgz</code>, and then write
the filenames out to stdout.</p>
<p>If the same package is specified multiple times, then the file will be
overwritten the second time.</p>
<p>If no arguments are supplied, then npm packs the current package folder.</p>
<h2 id=""see-also"">SEE ALSO</h2>
<ul>
<li><a href=""../cli/npm-cache.html"">npm-cache(1)</a></li>
<li><a href=""../cli/npm-publish.html"">npm-publish(1)</a></li>
<li><a href=""../cli/npm-config.html"">npm-config(1)</a></li>
<li><a href=""../misc/npm-config.html"">npm-config(7)</a></li>
<li><a href=""../files/npmrc.html"">npmrc(5)</a></li>
</ul>

</div>

<table border=0 cellspacing=0 cellpadding=0 id=npmlogo>
<tr><td style=""width:180px;height:10px;background:rgb(237,127,127)"" colspan=18>&nbsp;</td></tr>
<tr><td rowspan=4 style=""width:10px;height:10px;background:rgb(237,127,127)"">&nbsp;</td><td style=""width:40px;height:10px;background:#fff"" colspan=4>&nbsp;</td><td style=""width:10px;height:10px;background:rgb(237,127,127)"" rowspan=4>&nbsp;</td><td style=""width:40px;height:10px;background:#fff"" colspan=4>&nbsp;</td><td rowspan=4 style=""width:10px;height:10px;background:rgb(237,127,127)"">&nbsp;</td><td colspan=6 style=""width:60px;height:10px;background:#fff"">&nbsp;</td><td style=""width:10px;height:10px;background:rgb(237,127,127)"" rowspan=4>&nbsp;</td></tr>
<tr><td colspan=2 style=""width:20px;height:30px;background:#fff"" rowspan=3>&nbsp;</td><td style=""width:10px;height:10px;background:rgb(237,127,127)"" rowspan=3>&nbsp;</td><td style=""width:10px;height:10px;background:#fff"" rowspan=3>&nbsp;</td><td style=""width:20px;height:10px;background:#fff"" rowspan=4 colspan=2>&nbsp;</td><td style=""width:10px;height:20px;background:rgb(237,127,127)"" rowspan=2>&nbsp;</td><td style=""width:10px;height:10px;background:#fff"" rowspan=3>&nbsp;</td><td style=""width:20px;height:10px;background:#fff"" rowspan=3 colspan=2>&nbsp;</td><td style=""width:10px;height:10px;background:rgb(237,127,127)"" rowspan=3>&nbsp;</td><td style=""width:10px;height:10px;background:#fff"" rowspan=3>&nbsp;</td><td style=""width:10px;height:10px;background:rgb(237,127,127)"" rowspan=3>&nbsp;</td></tr>
<tr><td style=""width:10px;height:10px;background:#fff"" rowspan=2>&nbsp;</td></tr>
<tr><td style=""width:10px;height:10px;background:#fff"">&nbsp;</td></tr>
<tr><td style=""width:60px;height:10px;background:rgb(237,127,127)"" colspan=6>&nbsp;</td><td colspan=10 style=""width:10px;height:10px;background:rgb(237,127,127)"">&nbsp;</td></tr>
<tr><td colspan=5 style=""width:50px;height:10px;background:#fff"">&nbsp;</td><td style=""width:40px;height:10px;background:rgb(237,127,127)"" colspan=4>&nbsp;</td><td style=""width:90px;height:10px;background:#fff"" colspan=9>&nbsp;</td></tr>
</table>
<p id=""footer"">npm-pack &mdash; npm@3.8.9</p>

","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!doctype', 'html>', '<html>', '<title>npm-pack</title>', '<meta', 'http-equiv=""content-type""', 'value=""text/html;utf-8"">', '<link', 'rel=""stylesheet""', 'type=""text/css""', 'href=""../../static/style.css"">', '<link', 'rel=""canonical""', 'href=""https://www.npmjs.org/doc/cli/npm-pack.html"">', '<script', 'async=true', 'src=""../../static/toc.js""></script>', '<body>', '<div', 'id=""wrapper"">', '<h1><a', 'href=""../cli/npm-pack.html"">npm-pack</a></h1>', '<p>Create', 'a', 'tarball', 'from', 'a', 'package</p>', '<h2', 'id=""synopsis"">SYNOPSIS</h2>', '<pre><code>npm', 'pack', '[[&lt;@scope&gt;/]&lt;pkg&gt;...]', '</code></pre><h2', 'id=""description"">DESCRIPTION</h2>', '<p>For', 'anything', 'that&#39;s', 'installable', '(that', 'is,', 'a', 'package', 'folder,', 'tarball,', 'tarball', 'url,', 'name@tag,', 'name@version,', 'name,', 'or', 'scoped', 'name),', 'this', 'command', 'will', 'fetch', 'it', 'to', 'the', 'cache,', 'and', 'then', 'copy', 'the', 'tarball', 'to', 'the', 'current', 'working', 'directory', 'as', '<code>&lt;name&gt;-&lt;version&gt;.tgz</code>,', 'and', 'then', 'write', 'the', 'filenames', 'out', 'to', 'stdout.</p>', '<p>If', 'the', 'same', 'package', 'is', 'specified', 'multiple', 'times,', 'then', 'the', 'file', 'will', 'be', 'overwritten', 'the', 'second', 'time.</p>', '<p>If', 'no', 'arguments', 'are', 'supplied,', 'then', 'npm', 'packs', 'the', 'current', 'package', 'folder.</p>', '<h2', 'id=""see-also"">SEE', 'ALSO</h2>', '<ul>', '<li><a', 'href=""../cli/npm-cache.html"">npm-cache(1)</a></li>', '<li><a', 'href=""../cli/npm-publish.html"">npm-publish(1)</a></li>', '<li><a', 'href=""../cli/npm-config.html"">npm-config(1)</a></li>', '<li><a', 'href=""../misc/npm-config.html"">npm-config(7)</a></li>', '<li><a', 'href=""../files/npmrc.html"">npmrc(5)</a></li>', '</ul>', '</div>', '<table', 'border=0', 'cellspacing=0', 'cellpadding=0', 'id=npmlogo>', '<tr><td', 'style=""width:180px;height:10px;background:rgb(237,127,127)""', 'colspan=18>&nbsp;</td></tr>', '<tr><td', 'rowspan=4', 'style=""width:10px;height:10px;background:rgb(237,127,127)"">&nbsp;</td><td', 'style=""width:40px;height:10px;background:#fff""', 'colspan=4>&nbsp;</td><td', 'style=""width:10px;height:10px;background:rgb(237,127,127)""', 'rowspan=4>&nbsp;</td><td', 'style=""width:40px;height:10px;background:#fff""', 'colspan=4>&nbsp;</td><td', 'rowspan=4', 'style=""width:10px;height:10px;background:rgb(237,127,127)"">&nbsp;</td><td', 'colspan=6', 'style=""width:60px;height:10px;background:#fff"">&nbsp;</td><td', 'style=""width:10px;height:10px;background:rgb(237,127,127)""', 'rowspan=4>&nbsp;</td></tr>', '<tr><td', 'colspan=2', 'style=""width:20px;height:30px;background:#fff""', 'rowspan=3>&nbsp;</td><td', 'style=""width:10px;height:10px;background:rgb(237,127,127)""', 'rowspan=3>&nbsp;</td><td', 'style=""width:10px;height:10px;background:#fff""', 'rowspan=3>&nbsp;</td><td', 'style=""width:20px;height:10px;background:#fff""', 'rowspan=4', 'colspan=2>&nbsp;</td><td', 'style=""width:10px;height:20px;background:rgb(237,127,127)""', 'rowspan=2>&nbsp;</td><td', 'style=""width:10px;height:10px;background:#fff""', 'rowspan=3>&nbsp;</td><td', 'style=""width:20px;height:10px;background:#fff""', 'rowspan=3', 'colspan=2>&nbsp;</td><td', 'style=""width:10px;height:10px;background:rgb(237,127,127)""', 'rowspan=3>&nbsp;</td><td', 'style=""width:10px;height:10px;background:#fff""', 'rowspan=3>&nbsp;</td><td', 'style=""width:10px;height:10px;background:rgb(237,127,127)""', 'rowspan=3>&nbsp;</td></tr>', '<tr><td', 'style=""width:10px;height:10px;background:#fff""', 'rowspan=2>&nbsp;</td></tr>', '<tr><td', 'style=""width:10px;height:10px;background:#fff"">&nbsp;</td></tr>', '<tr><td', 'style=""width:60px;height:10px;background:rgb(237,127,127)""', 'colspan=6>&nbsp;</td><td', 'colspan=10', 'style=""width:10px;height:10px;background:rgb(237,127,127)"">&nbsp;</td></tr>', '<tr><td', 'colspan=5', 'style=""width:50px;height:10px;background:#fff"">&nbsp;</td><td', 'style=""width:40px;height:10px;background:rgb(237,127,127)""', 'colspan=4>&nbsp;</td><td', 'style=""width:90px;height:10px;background:#fff""', 'colspan=9>&nbsp;</td></tr>', '</table>', '<p', 'id=""footer"">npm-pack', '&mdash;', 'npm@3.8.9</p>', '```']",challenge not surrounded by ''': ,
"# -*- coding: utf-8 -*-
""""""
This tests multilingual forms
""""""
from django.test import TestCase
from django.utils.translation import activate, deactivate_all

from .base import MultilingualSetupMixin


class TestModelForm(MultilingualSetupMixin, TestCase):
    fixtures = ('ml_test_models.json', )

    def setUp(self):
        activate('cs')

    def tearDown(self):
        deactivate_all()

    def test_modelforms(self):
        # Test various definitions of model forms
        from .ml_test_app.forms import SimpleForm, FieldsForm, ExcludeForm, CustomForm

        self.assertEqual(SimpleForm.base_fields.keys(), ['slug', 'title', 'content'])
        self.assertEqual(FieldsForm.base_fields.keys(), ['slug', 'title'])
        self.assertEqual(ExcludeForm.base_fields.keys(), ['content'])
        self.assertEqual(CustomForm.base_fields.keys(), ['slug', 'custom', 'title', 'content'])

    def test_form_unbound(self):
        from .ml_test_app.forms import SimpleForm
        from .ml_test_app.models import Article

        form = SimpleForm()
        self.assertFalse(form.is_bound)
        self.assertEqual(form.initial, {})

        obj = Article.objects.get(slug='first')
        form = SimpleForm(instance=obj)
        self.assertFalse(form.is_bound)
        self.assertEqual(form.initial,
                         {'id': 1, 'slug': 'first', 'title': u'První článek', 'content': u'Žluťoučký kůň'})

        obj = Article.objects.get(slug='untranslated')
        form = SimpleForm(instance=obj)
        self.assertFalse(form.is_bound)
        self.assertEqual(form.initial, {'id': 4, 'slug': 'untranslated', 'title': '', 'content': None})

    def test_form_bound(self):
        from .ml_test_app.forms import SimpleForm, ExcludeForm

        data = {'slug': 'new', 'title': 'Titulek', 'content': 'Obsah'}
        form = SimpleForm(data)
        self.assertTrue(form.is_bound)
        self.assertTrue(form.is_valid(), form.errors)
        self.assertEqual(form.instance.slug, 'new')
        self.assertEqual(form.instance.title, 'Titulek')

        data = {'content': 'New content'}
        form = ExcludeForm(data)
        self.assertTrue(form.is_bound)
        self.assertTrue(form.is_valid())
        self.assertEqual(form.instance.content, 'New content')
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', '-*-', 'coding:', 'utf-8', '-*-', '""""""', 'This', 'tests', 'multilingual', 'forms', '""""""', 'from', 'django.test', 'import', 'TestCase', 'from', 'django.utils.translation', 'import', 'activate,', 'deactivate_all', 'from', '.base', 'import', 'MultilingualSetupMixin', 'class', 'TestModelForm(MultilingualSetupMixin,', 'TestCase):', 'fixtures', '=', ""('ml_test_models.json',"", ')', 'def', 'setUp(self):', ""activate('cs')"", 'def', 'tearDown(self):', 'deactivate_all()', 'def', 'test_modelforms(self):', '#', 'Test', 'various', 'definitions', 'of', 'model', 'forms', 'from', '.ml_test_app.forms', 'import', 'SimpleForm,', 'FieldsForm,', 'ExcludeForm,', 'CustomForm', 'self.assertEqual(SimpleForm.base_fields.keys(),', ""['slug',"", ""'title',"", ""'content'])"", 'self.assertEqual(FieldsForm.base_fields.keys(),', ""['slug',"", ""'title'])"", 'self.assertEqual(ExcludeForm.base_fields.keys(),', ""['content'])"", 'self.assertEqual(CustomForm.base_fields.keys(),', ""['slug',"", ""'custom',"", ""'title',"", ""'content'])"", 'def', 'test_form_unbound(self):', 'from', '.ml_test_app.forms', 'import', 'SimpleForm', 'from', '.ml_test_app.models', 'import', 'Article', 'form', '=', 'SimpleForm()', 'self.assertFalse(form.is_bound)', 'self.assertEqual(form.initial,', '{})', 'obj', '=', ""Article.objects.get(slug='first')"", 'form', '=', 'SimpleForm(instance=obj)', 'self.assertFalse(form.is_bound)', 'self.assertEqual(form.initial,', ""{'id':"", '1,', ""'slug':"", ""'first',"", ""'title':"", ""u'První"", ""článek',"", ""'content':"", ""u'Žluťoučký"", ""kůň'})"", 'obj', '=', ""Article.objects.get(slug='untranslated')"", 'form', '=', 'SimpleForm(instance=obj)', 'self.assertFalse(form.is_bound)', 'self.assertEqual(form.initial,', ""{'id':"", '4,', ""'slug':"", ""'untranslated',"", ""'title':"", ""'',"", ""'content':"", 'None})', 'def', 'test_form_bound(self):', 'from', '.ml_test_app.forms', 'import', 'SimpleForm,', 'ExcludeForm', 'data', '=', ""{'slug':"", ""'new',"", ""'title':"", ""'Titulek',"", ""'content':"", ""'Obsah'}"", 'form', '=', 'SimpleForm(data)', 'self.assertTrue(form.is_bound)', 'self.assertTrue(form.is_valid(),', 'form.errors)', 'self.assertEqual(form.instance.slug,', ""'new')"", 'self.assertEqual(form.instance.title,', ""'Titulek')"", 'data', '=', ""{'content':"", ""'New"", ""content'}"", 'form', '=', 'ExcludeForm(data)', 'self.assertTrue(form.is_bound)', 'self.assertTrue(form.is_valid())', 'self.assertEqual(form.instance.content,', ""'New"", ""content')"", '```']",challenge not surrounded by ''': ,
"#!/usr/bin/env python

from distutils.core import setup
from catkin_pkg.python_setup import generate_distutils_setup

d = generate_distutils_setup()

d['packages'] = ['ecto', 'ecto.sphinx', 'ecto.sphinx.breathe',
                'ecto.sphinx.breathe.finder', 'ecto.sphinx.breathe.finder.doxygen',
                'ecto.sphinx.breathe.parser', 'ecto.sphinx.breathe.parser.doxygen',
                'ecto.sphinx.breathe.renderer', 'ecto.sphinx.breathe.renderer.rst', 'ecto.sphinx.breathe.renderer.rst.doxygen'
               ]
d['package_dir'] = {'': 'python'}
d['install_requires'] = []

setup(**d)
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/usr/bin/env', 'python', 'from', 'distutils.core', 'import', 'setup', 'from', 'catkin_pkg.python_setup', 'import', 'generate_distutils_setup', 'd', '=', 'generate_distutils_setup()', ""d['packages']"", '=', ""['ecto',"", ""'ecto.sphinx',"", ""'ecto.sphinx.breathe',"", ""'ecto.sphinx.breathe.finder',"", ""'ecto.sphinx.breathe.finder.doxygen',"", ""'ecto.sphinx.breathe.parser',"", ""'ecto.sphinx.breathe.parser.doxygen',"", ""'ecto.sphinx.breathe.renderer',"", ""'ecto.sphinx.breathe.renderer.rst',"", ""'ecto.sphinx.breathe.renderer.rst.doxygen'"", ']', ""d['package_dir']"", '=', ""{'':"", ""'python'}"", ""d['install_requires']"", '=', '[]', 'setup(**d)', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright 2000-2016 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.intellij.util;

import com.intellij.codeInsight.highlighting.HighlightErrorFilter;
import com.intellij.openapi.application.ApplicationManager;
import com.intellij.openapi.project.Project;
import com.intellij.openapi.util.Computable;
import com.intellij.openapi.util.Key;
import com.intellij.openapi.vfs.VirtualFile;
import com.intellij.psi.PsiElement;
import com.intellij.psi.PsiErrorElement;
import com.intellij.psi.PsiFile;
import com.intellij.psi.SyntaxTraverser;
import com.intellij.psi.impl.PsiManagerEx;
import com.intellij.psi.util.CachedValue;
import com.intellij.psi.util.CachedValueProvider;
import com.intellij.psi.util.CachedValuesManager;
import org.jetbrains.annotations.NotNull;

public class PsiErrorElementUtil {

  private static final Key<CachedValue<Boolean>> CONTAINS_ERROR_ELEMENT = Key.create(""CONTAINS_ERROR_ELEMENT"");

  private PsiErrorElementUtil() {}

  public static boolean hasErrors(@NotNull Project project, @NotNull VirtualFile virtualFile) {
    return ApplicationManager.getApplication().runReadAction((Computable<Boolean>)() -> {
      if (project.isDisposed() || !virtualFile.isValid()) return false;

      PsiManagerEx psiManager = PsiManagerEx.getInstanceEx(project);
      PsiFile psiFile = psiManager.getFileManager().findFile(virtualFile);
      return psiFile != null && hasErrors(psiFile);
    });
  }

  private static boolean hasErrors(@NotNull PsiFile psiFile) {
    CachedValuesManager cachedValuesManager = CachedValuesManager.getManager(psiFile.getProject());
    return cachedValuesManager.getCachedValue(
      psiFile, CONTAINS_ERROR_ELEMENT,
      () -> CachedValueProvider.Result.create(hasErrorElements(psiFile), psiFile),
      false
    );
  }

  private static boolean hasErrorElements(@NotNull PsiElement element) {
    HighlightErrorFilter[] filters = null;
    for (PsiErrorElement error : SyntaxTraverser.psiTraverser(element).traverse().filter(PsiErrorElement.class)) {
      if (filters == null) {
        filters = HighlightErrorFilter.EP_NAME.getExtensions(element.getProject());
      }
      if (shouldHighlightErrorElement(error, filters)) {
        return true;
      }
    }
    return false;
  }

  private static boolean shouldHighlightErrorElement(@NotNull PsiErrorElement error, @NotNull HighlightErrorFilter[] filters) {
    for (HighlightErrorFilter filter : filters) {
      if (!filter.shouldHighlightErrorElement(error)) {
        return false;
      }
    }
    return true;
  }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '2000-2016', 'JetBrains', 's.r.o.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'com.intellij.util;', 'import', 'com.intellij.codeInsight.highlighting.HighlightErrorFilter;', 'import', 'com.intellij.openapi.application.ApplicationManager;', 'import', 'com.intellij.openapi.project.Project;', 'import', 'com.intellij.openapi.util.Computable;', 'import', 'com.intellij.openapi.util.Key;', 'import', 'com.intellij.openapi.vfs.VirtualFile;', 'import', 'com.intellij.psi.PsiElement;', 'import', 'com.intellij.psi.PsiErrorElement;', 'import', 'com.intellij.psi.PsiFile;', 'import', 'com.intellij.psi.SyntaxTraverser;', 'import', 'com.intellij.psi.impl.PsiManagerEx;', 'import', 'com.intellij.psi.util.CachedValue;', 'import', 'com.intellij.psi.util.CachedValueProvider;', 'import', 'com.intellij.psi.util.CachedValuesManager;', 'import', 'org.jetbrains.annotations.NotNull;', 'public', 'class', 'PsiErrorElementUtil', '{', 'private', 'static', 'final', 'Key<CachedValue<Boolean>>', 'CONTAINS_ERROR_ELEMENT', '=', 'Key.create(""CONTAINS_ERROR_ELEMENT"");', 'private', 'PsiErrorElementUtil()', '{}', 'public', 'static', 'boolean', 'hasErrors(@NotNull', 'Project', 'project,', '@NotNull', 'VirtualFile', 'virtualFile)', '{', 'return', 'ApplicationManager.getApplication().runReadAction((Computable<Boolean>)()', '->', '{', 'if', '(project.isDisposed()', '||', '!virtualFile.isValid())', 'return', 'false;', 'PsiManagerEx', 'psiManager', '=', 'PsiManagerEx.getInstanceEx(project);', 'PsiFile', 'psiFile', '=', 'psiManager.getFileManager().findFile(virtualFile);', 'return', 'psiFile', '!=', 'null', '&&', 'hasErrors(psiFile);', '});', '}', 'private', 'static', 'boolean', 'hasErrors(@NotNull', 'PsiFile', 'psiFile)', '{', 'CachedValuesManager', 'cachedValuesManager', '=', 'CachedValuesManager.getManager(psiFile.getProject());', 'return', 'cachedValuesManager.getCachedValue(', 'psiFile,', 'CONTAINS_ERROR_ELEMENT,', '()', '->', 'CachedValueProvider.Result.create(hasErrorElements(psiFile),', 'psiFile),', 'false', ');', '}', 'private', 'static', 'boolean', 'hasErrorElements(@NotNull', 'PsiElement', 'element)', '{', 'HighlightErrorFilter[]', 'filters', '=', 'null;', 'for', '(PsiErrorElement', 'error', ':', 'SyntaxTraverser.psiTraverser(element).traverse().filter(PsiErrorElement.class))', '{', 'if', '(filters', '==', 'null)', '{', 'filters', '=', 'HighlightErrorFilter.EP_NAME.getExtensions(element.getProject());', '}', 'if', '(shouldHighlightErrorElement(error,', 'filters))', '{', 'return', 'true;', '}', '}', 'return', 'false;', '}', 'private', 'static', 'boolean', 'shouldHighlightErrorElement(@NotNull', 'PsiErrorElement', 'error,', '@NotNull', 'HighlightErrorFilter[]', 'filters)', '{', 'for', '(HighlightErrorFilter', 'filter', ':', 'filters)', '{', 'if', '(!filter.shouldHighlightErrorElement(error))', '{', 'return', 'false;', '}', '}', 'return', 'true;', '}', '}', '```']",challenge not surrounded by ''': ,
"package forklift.retry;

import forklift.consumer.ProcessStep;

import java.util.Map;

public class RetryMessage {
    private String messageId;
    private String queue;
    private String topic;
    private ProcessStep step;
    private String text;
    private Map<forklift.message.Header, Object> headers;
    private Map<String, String> properties;
    private String persistedPath;

    public String getMessageId() {
        return messageId;
    }

    public void setMessageId(String messageId) {
        this.messageId = messageId;
    }

    public String getQueue() {
        return queue;
    }

    public void setQueue(String queue) {
        this.queue = queue;
    }

    public String getTopic() {
        return topic;
    }

    public void setTopic(String topic) {
        this.topic = topic;
    }

    public ProcessStep getStep() {
        return step;
    }

    public void setStep(ProcessStep step) {
        this.step = step;
    }

    public String getText() {
        return text;
    }

    public void setText(String text) {
        this.text = text;
    }

    public Map<forklift.message.Header, Object> getHeaders() {
        return headers;
    }

    public void setHeaders(Map<forklift.message.Header, Object> headers) {
        this.headers = headers;
    }

    public Map<String, String> getProperties() {
        return properties;
    }

    public void setProperties(Map<String, String> properties) {
        this.properties = properties;
    }

    public String getPersistedPath() {
        return persistedPath;
    }

    public void setPersistedPath(String persistedPath) {
        this.persistedPath = persistedPath;
    }

    @Override
    public String toString() {
        return ""RetryMessage [messageId="" + messageId + "", queue="" + queue + "", topic="" + topic + "", step="" + step + "", text="" + text +
                        "", headers="" + headers + "", properties="" + properties + "", persistedPath="" + persistedPath + ""]"";
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'forklift.retry;', 'import', 'forklift.consumer.ProcessStep;', 'import', 'java.util.Map;', 'public', 'class', 'RetryMessage', '{', 'private', 'String', 'messageId;', 'private', 'String', 'queue;', 'private', 'String', 'topic;', 'private', 'ProcessStep', 'step;', 'private', 'String', 'text;', 'private', 'Map<forklift.message.Header,', 'Object>', 'headers;', 'private', 'Map<String,', 'String>', 'properties;', 'private', 'String', 'persistedPath;', 'public', 'String', 'getMessageId()', '{', 'return', 'messageId;', '}', 'public', 'void', 'setMessageId(String', 'messageId)', '{', 'this.messageId', '=', 'messageId;', '}', 'public', 'String', 'getQueue()', '{', 'return', 'queue;', '}', 'public', 'void', 'setQueue(String', 'queue)', '{', 'this.queue', '=', 'queue;', '}', 'public', 'String', 'getTopic()', '{', 'return', 'topic;', '}', 'public', 'void', 'setTopic(String', 'topic)', '{', 'this.topic', '=', 'topic;', '}', 'public', 'ProcessStep', 'getStep()', '{', 'return', 'step;', '}', 'public', 'void', 'setStep(ProcessStep', 'step)', '{', 'this.step', '=', 'step;', '}', 'public', 'String', 'getText()', '{', 'return', 'text;', '}', 'public', 'void', 'setText(String', 'text)', '{', 'this.text', '=', 'text;', '}', 'public', 'Map<forklift.message.Header,', 'Object>', 'getHeaders()', '{', 'return', 'headers;', '}', 'public', 'void', 'setHeaders(Map<forklift.message.Header,', 'Object>', 'headers)', '{', 'this.headers', '=', 'headers;', '}', 'public', 'Map<String,', 'String>', 'getProperties()', '{', 'return', 'properties;', '}', 'public', 'void', 'setProperties(Map<String,', 'String>', 'properties)', '{', 'this.properties', '=', 'properties;', '}', 'public', 'String', 'getPersistedPath()', '{', 'return', 'persistedPath;', '}', 'public', 'void', 'setPersistedPath(String', 'persistedPath)', '{', 'this.persistedPath', '=', 'persistedPath;', '}', '@Override', 'public', 'String', 'toString()', '{', 'return', '""RetryMessage', '[messageId=""', '+', 'messageId', '+', '"",', 'queue=""', '+', 'queue', '+', '"",', 'topic=""', '+', 'topic', '+', '"",', 'step=""', '+', 'step', '+', '"",', 'text=""', '+', 'text', '+', '"",', 'headers=""', '+', 'headers', '+', '"",', 'properties=""', '+', 'properties', '+', '"",', 'persistedPath=""', '+', 'persistedPath', '+', '""]"";', '}', '}', '```']",challenge not surrounded by ''': ,
"# -*- coding: utf-8 -*-

""""""
feedsqueeze
-----------

Main package for FeedSqueeze
""""""

__title__   = 'FeedSqueeze'
__version__ = '0.1.1'
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', '-*-', 'coding:', 'utf-8', '-*-', '""""""', 'feedsqueeze', '-----------', 'Main', 'package', 'for', 'FeedSqueeze', '""""""', '__title__', '=', ""'FeedSqueeze'"", '__version__', '=', ""'0.1.1'"", '```']",challenge not surrounded by ''': ,
"void getT0RecoParam(Int_t run)
{
  
  // Read calibration coefficients into the Calibration DB
  // Arguments:
  AliCDBManager* man = AliCDBManager::Instance();
   man->SetDefaultStorage(""raw://"");
  //  man->SetDefaultStorage(""local:///home/alla/alice/Jul14/OCDB/"");
  man->SetRun(run);
  AliCDBEntry *entry = AliCDBManager::Instance()->Get(""T0/Calib/RecoParam"");
  AliT0RecoParam* recoParam = 0x0;
  cout<<"" entry ""<< entry<<endl;
  if(entry) {
    // load recoParam according OCDB content (single or array)
    //    if (!(recoParam = dynamic_cast<AliT0RecoParam*>(entry->GetObject()))) {
    
    TObjArray* recoParamArray = static_cast<TObjArray*>(entry->GetObject());     
    cout<<"" TObjArray* recoParamArray ""<<recoParamArray->GetEntriesFast()<<endl;
    for(Int_t ie = 0; ie < recoParamArray->GetEntriesFast()-1; ie++) {
      
      recoParam = static_cast<AliT0RecoParam*>(recoParamArray->UncheckedAt(ie));	
      cout<<ie<<endl;
      cout<<"" eq ""<<recoParam->GetEq()<<endl;
      //	 recoParam->Dump();
      cout<<"" cfd range ""<<recoParam->GetLow(300)<<"" amplitude ""<<recoParam->GetLow(200)<<"" ""<<recoParam->GetHigh(200)<<endl;
      
      for (int i=0; i<500; i++) 
	if( recoParam->GetLow(i) !=0) cout<<i<<"" low ""<<recoParam->GetLow(i)<<""   ""<<endl;
      for (int i=0; i<500; i++) 
	if( recoParam->GetHigh(i) !=50000)  cout<<i<<"" high ""<<recoParam->GetHigh(i)<<endl;
      recoParam = 0x0;
    }
  }
  else 
    cout<<"" no entry ""<<endl;
  
  
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```void', 'getT0RecoParam(Int_t', 'run)', '{', '//', 'Read', 'calibration', 'coefficients', 'into', 'the', 'Calibration', 'DB', '//', 'Arguments:', 'AliCDBManager*', 'man', '=', 'AliCDBManager::Instance();', 'man->SetDefaultStorage(""raw://"");', '//', 'man->SetDefaultStorage(""local:///home/alla/alice/Jul14/OCDB/"");', 'man->SetRun(run);', 'AliCDBEntry', '*entry', '=', 'AliCDBManager::Instance()->Get(""T0/Calib/RecoParam"");', 'AliT0RecoParam*', 'recoParam', '=', '0x0;', 'cout<<""', 'entry', '""<<', 'entry<<endl;', 'if(entry)', '{', '//', 'load', 'recoParam', 'according', 'OCDB', 'content', '(single', 'or', 'array)', '//', 'if', '(!(recoParam', '=', 'dynamic_cast<AliT0RecoParam*>(entry->GetObject())))', '{', 'TObjArray*', 'recoParamArray', '=', 'static_cast<TObjArray*>(entry->GetObject());', 'cout<<""', 'TObjArray*', 'recoParamArray', '""<<recoParamArray->GetEntriesFast()<<endl;', 'for(Int_t', 'ie', '=', '0;', 'ie', '<', 'recoParamArray->GetEntriesFast()-1;', 'ie++)', '{', 'recoParam', '=', 'static_cast<AliT0RecoParam*>(recoParamArray->UncheckedAt(ie));', 'cout<<ie<<endl;', 'cout<<""', 'eq', '""<<recoParam->GetEq()<<endl;', '//', 'recoParam->Dump();', 'cout<<""', 'cfd', 'range', '""<<recoParam->GetLow(300)<<""', 'amplitude', '""<<recoParam->GetLow(200)<<""', '""<<recoParam->GetHigh(200)<<endl;', 'for', '(int', 'i=0;', 'i<500;', 'i++)', 'if(', 'recoParam->GetLow(i)', '!=0)', 'cout<<i<<""', 'low', '""<<recoParam->GetLow(i)<<""', '""<<endl;', 'for', '(int', 'i=0;', 'i<500;', 'i++)', 'if(', 'recoParam->GetHigh(i)', '!=50000)', 'cout<<i<<""', 'high', '""<<recoParam->GetHigh(i)<<endl;', 'recoParam', '=', '0x0;', '}', '}', 'else', 'cout<<""', 'no', 'entry', '""<<endl;', '}', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright 2012-2013 inBloom, Inc. and its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package org.slc.sli.dashboard.security;

import static org.junit.Assert.assertEquals;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;


/**
 * Test encryption and decryption of client_secret and clientID
 * @author svankina
 *
 */
@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = { ""/application-context.xml"" })
public class PropertiesDecryptorTest {

    @Autowired
    ApplicationContext applicationContext;

    @Test
    public void testEncryptionDecryption() throws Exception {
        String toEncrypt = ""Ragnar Danneskjold"";
        PropertiesDecryptor propDec = (PropertiesDecryptor) applicationContext.getBean(""propertiesDecryptor"");
        String encrypted = propDec.encrypt(toEncrypt);
        String decrypted = propDec.decrypt(encrypted);
        org.junit.Assert.assertNotSame(toEncrypt, encrypted);
        assertEquals(toEncrypt, decrypted);
    }



}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '2012-2013', 'inBloom,', 'Inc.', 'and', 'its', 'affiliates.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'org.slc.sli.dashboard.security;', 'import', 'static', 'org.junit.Assert.assertEquals;', 'import', 'org.junit.Test;', 'import', 'org.junit.runner.RunWith;', 'import', 'org.springframework.beans.factory.annotation.Autowired;', 'import', 'org.springframework.context.ApplicationContext;', 'import', 'org.springframework.test.context.ContextConfiguration;', 'import', 'org.springframework.test.context.junit4.SpringJUnit4ClassRunner;', '/**', '*', 'Test', 'encryption', 'and', 'decryption', 'of', 'client_secret', 'and', 'clientID', '*', '@author', 'svankina', '*', '*/', '@RunWith(SpringJUnit4ClassRunner.class)', '@ContextConfiguration(locations', '=', '{', '""/application-context.xml""', '})', 'public', 'class', 'PropertiesDecryptorTest', '{', '@Autowired', 'ApplicationContext', 'applicationContext;', '@Test', 'public', 'void', 'testEncryptionDecryption()', 'throws', 'Exception', '{', 'String', 'toEncrypt', '=', '""Ragnar', 'Danneskjold"";', 'PropertiesDecryptor', 'propDec', '=', '(PropertiesDecryptor)', 'applicationContext.getBean(""propertiesDecryptor"");', 'String', 'encrypted', '=', 'propDec.encrypt(toEncrypt);', 'String', 'decrypted', '=', 'propDec.decrypt(encrypted);', 'org.junit.Assert.assertNotSame(toEncrypt,', 'encrypted);', 'assertEquals(toEncrypt,', 'decrypted);', '}', '}', '```']",challenge not surrounded by ''': ,
"""""""
Shimmed symbolic type
""""""
from . import core
from .config import config as cf

######################
# Symbolic variable constructors
# TODO: Shimmed symbolic variable ?

def scalar(name, dtype='float64'):
    if cf.use_theano:
        return core.theano.tensor.scalar(name, dtype=dtype)
    else:
        raise RuntimeError(""Must load Theano in order to create symbolic variables."")

def lscalar(name):
    return scalar(name, 'int64')
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```""""""', 'Shimmed', 'symbolic', 'type', '""""""', 'from', '.', 'import', 'core', 'from', '.config', 'import', 'config', 'as', 'cf', '######################', '#', 'Symbolic', 'variable', 'constructors', '#', 'TODO:', 'Shimmed', 'symbolic', 'variable', '?', 'def', 'scalar(name,', ""dtype='float64'):"", 'if', 'cf.use_theano:', 'return', 'core.theano.tensor.scalar(name,', 'dtype=dtype)', 'else:', 'raise', 'RuntimeError(""Must', 'load', 'Theano', 'in', 'order', 'to', 'create', 'symbolic', 'variables."")', 'def', 'lscalar(name):', 'return', 'scalar(name,', ""'int64')"", '```']",challenge not surrounded by ''': ,
"""""""Functionality with an experimental API. Although you can count on the
functions in this package being around in the future, the API may change with
any version update **and will not follow the skimage two-version deprecation
path**. Therefore, use the functions herein with care, and do not use them in
production code that will depend on updated skimage versions.
""""""

from . import graph

__all__ = ['graph']
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```""""""Functionality', 'with', 'an', 'experimental', 'API.', 'Although', 'you', 'can', 'count', 'on', 'the', 'functions', 'in', 'this', 'package', 'being', 'around', 'in', 'the', 'future,', 'the', 'API', 'may', 'change', 'with', 'any', 'version', 'update', '**and', 'will', 'not', 'follow', 'the', 'skimage', 'two-version', 'deprecation', 'path**.', 'Therefore,', 'use', 'the', 'functions', 'herein', 'with', 'care,', 'and', 'do', 'not', 'use', 'them', 'in', 'production', 'code', 'that', 'will', 'depend', 'on', 'updated', 'skimage', 'versions.', '""""""', 'from', '.', 'import', 'graph', '__all__', '=', ""['graph']"", '```']",challenge not surrounded by ''': ,
"documented_keywords = {
    'catalog': {'name': 'Name of catalog to use',
                'skykw': '???',
                'lckw': '???'},
    'observation': {'cadencestodo': '???',
                    'collate': '???'},
    'camera': {'cadence': 'Do not use, use observation.cadencestodo',
               'ra': 'Right Ascension of field center',
               'dec': 'Declination of field center',
               'testpattern': 'Broken, do not use',
               'subarray': 'None for the official 2048**2 pixels, else an integer n for n**2 pixels',
               'label': 'Part of the name of the directory that SPyFFI will create for the output',
               'cameranumber': 'Unimplemented, do not use',
               'warpspaceandtime': 'If a number, use it to scale the speed of light in the aberration calculation. '
                                   'Otherwise, use False',
               'abberate': 'If True, apply abberation of light to star positions',
               'counterstep': 'Normally 1. Scales the time between exposures',
               'positionangle': 'Unimplemented, do not use',

               },
    'expose': {},
    'jitter': {}
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```documented_keywords', '=', '{', ""'catalog':"", ""{'name':"", ""'Name"", 'of', 'catalog', 'to', ""use',"", ""'skykw':"", ""'???',"", ""'lckw':"", ""'???'},"", ""'observation':"", ""{'cadencestodo':"", ""'???',"", ""'collate':"", ""'???'},"", ""'camera':"", ""{'cadence':"", ""'Do"", 'not', 'use,', 'use', ""observation.cadencestodo',"", ""'ra':"", ""'Right"", 'Ascension', 'of', 'field', ""center',"", ""'dec':"", ""'Declination"", 'of', 'field', ""center',"", ""'testpattern':"", ""'Broken,"", 'do', 'not', ""use',"", ""'subarray':"", ""'None"", 'for', 'the', 'official', '2048**2', 'pixels,', 'else', 'an', 'integer', 'n', 'for', 'n**2', ""pixels',"", ""'label':"", ""'Part"", 'of', 'the', 'name', 'of', 'the', 'directory', 'that', 'SPyFFI', 'will', 'create', 'for', 'the', ""output',"", ""'cameranumber':"", ""'Unimplemented,"", 'do', 'not', ""use',"", ""'warpspaceandtime':"", ""'If"", 'a', 'number,', 'use', 'it', 'to', 'scale', 'the', 'speed', 'of', 'light', 'in', 'the', 'aberration', 'calculation.', ""'"", ""'Otherwise,"", 'use', ""False',"", ""'abberate':"", ""'If"", 'True,', 'apply', 'abberation', 'of', 'light', 'to', 'star', ""positions',"", ""'counterstep':"", ""'Normally"", '1.', 'Scales', 'the', 'time', 'between', ""exposures',"", ""'positionangle':"", ""'Unimplemented,"", 'do', 'not', ""use',"", '},', ""'expose':"", '{},', ""'jitter':"", '{}', '}', '```']",challenge not surrounded by ''': ,
"#include<ctime>
#include<cstdio>
#include<cstdlib>
int main()
{
	srand(time(NULL));
	int i,n=10000,m=100;
	printf(""%d %d\n"",n,m);
	for(i=0;i<10000;i++)
		printf(""%d "",1+rand()%500000);
	puts("""");
	for(i=0;i<100;i++)
		printf(""%d %d\n"",1+rand()%1000,1+rand()%1000);
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#include<ctime>', '#include<cstdio>', '#include<cstdlib>', 'int', 'main()', '{', 'srand(time(NULL));', 'int', 'i,n=10000,m=100;', 'printf(""%d', '%d\\n"",n,m);', 'for(i=0;i<10000;i++)', 'printf(""%d', '"",1+rand()%500000);', 'puts("""");', 'for(i=0;i<100;i++)', 'printf(""%d', '%d\\n"",1+rand()%1000,1+rand()%1000);', '}', '```']",challenge not surrounded by ''': ,
"Stack = {
    make: function(capacity) {
        if (!capacity)
            capacity = 0;
        return this._make(capacity);
    },

    _make: function(capacity) {
        return {
            elements: new Array(capacity),
            size: 0,

            push: function(element) {
                if (this.size === capacity)
                    throw Stack.OverflowError.make(capacity);
                this.elements[this.size++] = element;
            },

            pop: function() {
                if (this.size === 0)
                    throw Stack.UnderflowError.make();
                return this.elements[--this.size];
            }
        };
    },

    UnderflowError: {
        make: function() {
            return {};
        }
    },

    OverflowError: {
        make: function(capacity) {
            return {
                capacity: capacity
            };
        }
    }
};","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```Stack', '=', '{', 'make:', 'function(capacity)', '{', 'if', '(!capacity)', 'capacity', '=', '0;', 'return', 'this._make(capacity);', '},', '_make:', 'function(capacity)', '{', 'return', '{', 'elements:', 'new', 'Array(capacity),', 'size:', '0,', 'push:', 'function(element)', '{', 'if', '(this.size', '===', 'capacity)', 'throw', 'Stack.OverflowError.make(capacity);', 'this.elements[this.size++]', '=', 'element;', '},', 'pop:', 'function()', '{', 'if', '(this.size', '===', '0)', 'throw', 'Stack.UnderflowError.make();', 'return', 'this.elements[--this.size];', '}', '};', '},', 'UnderflowError:', '{', 'make:', 'function()', '{', 'return', '{};', '}', '},', 'OverflowError:', '{', 'make:', 'function(capacity)', '{', 'return', '{', 'capacity:', 'capacity', '};', '}', '}', '};```']",challenge not surrounded by ''': ,
"/*
 * Copyright 2007-2008 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the ""Classpath"" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

package sun.java2d.d3d;

import java.awt.Composite;
import sun.font.GlyphList;
import sun.java2d.SunGraphics2D;
import sun.java2d.loops.GraphicsPrimitive;
import sun.java2d.pipe.BufferedTextPipe;
import sun.java2d.pipe.RenderQueue;

class D3DTextRenderer extends BufferedTextPipe {

    D3DTextRenderer(RenderQueue rq) {
        super(rq);
    }

    @Override
    protected native void drawGlyphList(int numGlyphs, boolean usePositions,
                                        boolean subPixPos, boolean rgbOrder,
                                        int lcdContrast,
                                        float glOrigX, float glOrigY,
                                        long[] images, float[] positions);

    @Override
    protected void validateContext(SunGraphics2D sg2d, Composite comp) {
        // assert rq.lock.isHeldByCurrentThread();
        D3DSurfaceData d3dDst = (D3DSurfaceData)sg2d.surfaceData;
        D3DContext.validateContext(d3dDst, d3dDst,
                                   sg2d.getCompClip(), comp,
                                   null, sg2d.paint, sg2d,
                                   D3DContext.NO_CONTEXT_FLAGS);
    }

    D3DTextRenderer traceWrap() {
        return new Tracer(this);
    }

    private static class Tracer extends D3DTextRenderer {
        Tracer(D3DTextRenderer d3dtr) {
            super(d3dtr.rq);
        }
        protected void drawGlyphList(SunGraphics2D sg2d, GlyphList gl) {
            GraphicsPrimitive.tracePrimitive(""D3DDrawGlyphs"");
            super.drawGlyphList(sg2d, gl);
        }
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '2007-2008', 'Sun', 'Microsystems,', 'Inc.', 'All', 'Rights', 'Reserved.', '*', 'DO', 'NOT', 'ALTER', 'OR', 'REMOVE', 'COPYRIGHT', 'NOTICES', 'OR', 'THIS', 'FILE', 'HEADER.', '*', '*', 'This', 'code', 'is', 'free', 'software;', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', 'it', '*', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'version', '2', 'only,', 'as', '*', 'published', 'by', 'the', 'Free', 'Software', 'Foundation.', 'Sun', 'designates', 'this', '*', 'particular', 'file', 'as', 'subject', 'to', 'the', '""Classpath""', 'exception', 'as', 'provided', '*', 'by', 'Sun', 'in', 'the', 'LICENSE', 'file', 'that', 'accompanied', 'this', 'code.', '*', '*', 'This', 'code', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', 'but', 'WITHOUT', '*', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', 'MERCHANTABILITY', 'or', '*', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', 'GNU', 'General', 'Public', 'License', '*', 'version', '2', 'for', 'more', 'details', '(a', 'copy', 'is', 'included', 'in', 'the', 'LICENSE', 'file', 'that', '*', 'accompanied', 'this', 'code).', '*', '*', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'version', '*', '2', 'along', 'with', 'this', 'work;', 'if', 'not,', 'write', 'to', 'the', 'Free', 'Software', 'Foundation,', '*', 'Inc.,', '51', 'Franklin', 'St,', 'Fifth', 'Floor,', 'Boston,', 'MA', '02110-1301', 'USA.', '*', '*', 'Please', 'contact', 'Sun', 'Microsystems,', 'Inc.,', '4150', 'Network', 'Circle,', 'Santa', 'Clara,', '*', 'CA', '95054', 'USA', 'or', 'visit', 'www.sun.com', 'if', 'you', 'need', 'additional', 'information', 'or', '*', 'have', 'any', 'questions.', '*/', 'package', 'sun.java2d.d3d;', 'import', 'java.awt.Composite;', 'import', 'sun.font.GlyphList;', 'import', 'sun.java2d.SunGraphics2D;', 'import', 'sun.java2d.loops.GraphicsPrimitive;', 'import', 'sun.java2d.pipe.BufferedTextPipe;', 'import', 'sun.java2d.pipe.RenderQueue;', 'class', 'D3DTextRenderer', 'extends', 'BufferedTextPipe', '{', 'D3DTextRenderer(RenderQueue', 'rq)', '{', 'super(rq);', '}', '@Override', 'protected', 'native', 'void', 'drawGlyphList(int', 'numGlyphs,', 'boolean', 'usePositions,', 'boolean', 'subPixPos,', 'boolean', 'rgbOrder,', 'int', 'lcdContrast,', 'float', 'glOrigX,', 'float', 'glOrigY,', 'long[]', 'images,', 'float[]', 'positions);', '@Override', 'protected', 'void', 'validateContext(SunGraphics2D', 'sg2d,', 'Composite', 'comp)', '{', '//', 'assert', 'rq.lock.isHeldByCurrentThread();', 'D3DSurfaceData', 'd3dDst', '=', '(D3DSurfaceData)sg2d.surfaceData;', 'D3DContext.validateContext(d3dDst,', 'd3dDst,', 'sg2d.getCompClip(),', 'comp,', 'null,', 'sg2d.paint,', 'sg2d,', 'D3DContext.NO_CONTEXT_FLAGS);', '}', 'D3DTextRenderer', 'traceWrap()', '{', 'return', 'new', 'Tracer(this);', '}', 'private', 'static', 'class', 'Tracer', 'extends', 'D3DTextRenderer', '{', 'Tracer(D3DTextRenderer', 'd3dtr)', '{', 'super(d3dtr.rq);', '}', 'protected', 'void', 'drawGlyphList(SunGraphics2D', 'sg2d,', 'GlyphList', 'gl)', '{', 'GraphicsPrimitive.tracePrimitive(""D3DDrawGlyphs"");', 'super.drawGlyphList(sg2d,', 'gl);', '}', '}', '}', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright 2000-2016 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.siyeh.ig.bugs;

import com.intellij.psi.*;
import com.siyeh.InspectionGadgetsBundle;
import com.siyeh.ig.BaseInspection;
import com.siyeh.ig.BaseInspectionVisitor;
import com.siyeh.ig.psiutils.EquivalenceChecker;
import com.siyeh.ig.psiutils.MethodCallUtils;
import com.siyeh.ig.psiutils.ParenthesesUtils;
import com.siyeh.ig.psiutils.SideEffectChecker;
import org.jetbrains.annotations.Nls;
import org.jetbrains.annotations.NotNull;

/**
 * @author Bas Leijdekkers
 */
public class EqualsWithItselfInspection extends BaseInspection {
  @Nls
  @NotNull
  @Override
  public String getDisplayName() {
    return InspectionGadgetsBundle.message(""equals.with.itself.display.name"");
  }

  @NotNull
  @Override
  protected String buildErrorString(Object... infos) {
    return InspectionGadgetsBundle.message(""equals.with.itself.problem.descriptor"");
  }

  @Override
  public BaseInspectionVisitor buildVisitor() {
    return new EqualsWithItselfVisitor();
  }

  private static class EqualsWithItselfVisitor extends BaseInspectionVisitor {

    @Override
    public void visitMethodCallExpression(PsiMethodCallExpression expression) {
      super.visitMethodCallExpression(expression);
      if (!MethodCallUtils.isEqualsCall(expression) &&
          !MethodCallUtils.isEqualsIgnoreCaseCall(expression) &&
          !MethodCallUtils.isCompareToCall(expression) &&
          !MethodCallUtils.isCompareToIgnoreCaseCall(expression)) {
        return;
      }
      final PsiReferenceExpression methodExpression = expression.getMethodExpression();
      final PsiExpressionList argumentList = expression.getArgumentList();
      final PsiExpression[] arguments = argumentList.getExpressions();
      if (arguments.length != 1) {
        return;
      }
      final PsiExpression argument = ParenthesesUtils.stripParentheses(arguments[0]);
      final PsiExpression qualifier = methodExpression.getQualifierExpression();
      if (qualifier == null) {
        if (!(argument instanceof PsiThisExpression)) {
          return;
        }
      } else {
        if (!EquivalenceChecker.getCanonicalPsiEquivalence().expressionsAreEquivalent(qualifier, argument) ||
            SideEffectChecker.mayHaveSideEffects(qualifier)) {
          return;
        }
      }
      registerMethodCallError(expression);
    }
  }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '2000-2016', 'JetBrains', 's.r.o.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'com.siyeh.ig.bugs;', 'import', 'com.intellij.psi.*;', 'import', 'com.siyeh.InspectionGadgetsBundle;', 'import', 'com.siyeh.ig.BaseInspection;', 'import', 'com.siyeh.ig.BaseInspectionVisitor;', 'import', 'com.siyeh.ig.psiutils.EquivalenceChecker;', 'import', 'com.siyeh.ig.psiutils.MethodCallUtils;', 'import', 'com.siyeh.ig.psiutils.ParenthesesUtils;', 'import', 'com.siyeh.ig.psiutils.SideEffectChecker;', 'import', 'org.jetbrains.annotations.Nls;', 'import', 'org.jetbrains.annotations.NotNull;', '/**', '*', '@author', 'Bas', 'Leijdekkers', '*/', 'public', 'class', 'EqualsWithItselfInspection', 'extends', 'BaseInspection', '{', '@Nls', '@NotNull', '@Override', 'public', 'String', 'getDisplayName()', '{', 'return', 'InspectionGadgetsBundle.message(""equals.with.itself.display.name"");', '}', '@NotNull', '@Override', 'protected', 'String', 'buildErrorString(Object...', 'infos)', '{', 'return', 'InspectionGadgetsBundle.message(""equals.with.itself.problem.descriptor"");', '}', '@Override', 'public', 'BaseInspectionVisitor', 'buildVisitor()', '{', 'return', 'new', 'EqualsWithItselfVisitor();', '}', 'private', 'static', 'class', 'EqualsWithItselfVisitor', 'extends', 'BaseInspectionVisitor', '{', '@Override', 'public', 'void', 'visitMethodCallExpression(PsiMethodCallExpression', 'expression)', '{', 'super.visitMethodCallExpression(expression);', 'if', '(!MethodCallUtils.isEqualsCall(expression)', '&&', '!MethodCallUtils.isEqualsIgnoreCaseCall(expression)', '&&', '!MethodCallUtils.isCompareToCall(expression)', '&&', '!MethodCallUtils.isCompareToIgnoreCaseCall(expression))', '{', 'return;', '}', 'final', 'PsiReferenceExpression', 'methodExpression', '=', 'expression.getMethodExpression();', 'final', 'PsiExpressionList', 'argumentList', '=', 'expression.getArgumentList();', 'final', 'PsiExpression[]', 'arguments', '=', 'argumentList.getExpressions();', 'if', '(arguments.length', '!=', '1)', '{', 'return;', '}', 'final', 'PsiExpression', 'argument', '=', 'ParenthesesUtils.stripParentheses(arguments[0]);', 'final', 'PsiExpression', 'qualifier', '=', 'methodExpression.getQualifierExpression();', 'if', '(qualifier', '==', 'null)', '{', 'if', '(!(argument', 'instanceof', 'PsiThisExpression))', '{', 'return;', '}', '}', 'else', '{', 'if', '(!EquivalenceChecker.getCanonicalPsiEquivalence().expressionsAreEquivalent(qualifier,', 'argument)', '||', 'SideEffectChecker.mayHaveSideEffects(qualifier))', '{', 'return;', '}', '}', 'registerMethodCallError(expression);', '}', '}', '}', '```']",challenge not surrounded by ''': ,
"<html>
<head>
<meta http-equiv=""Content-Type"" content=""text/html; charset=UTF-8"">
<title>basic_multi_buffer::const_buffers_type</title>
<link rel=""stylesheet"" href=""../../../../../../../doc/src/boostbook.css"" type=""text/css"">
<meta name=""generator"" content=""DocBook XSL Stylesheets V1.79.1"">
<link rel=""home"" href=""../../../index.html"" title=""Chapter 1. Boost.Beast"">
<link rel=""up"" href=""../boost__beast__basic_multi_buffer.html"" title=""basic_multi_buffer"">
<link rel=""prev"" href=""../boost__beast__basic_multi_buffer.html"" title=""basic_multi_buffer"">
<link rel=""next"" href=""mutable_buffers_type.html"" title=""basic_multi_buffer::mutable_buffers_type"">
</head>
<body bgcolor=""white"" text=""black"" link=""#0000FF"" vlink=""#840084"" alink=""#0000FF"">
<table cellpadding=""2"" width=""100%""><tr>
<td valign=""top""><img alt=""Boost C++ Libraries"" width=""277"" height=""86"" src=""../../../../../../../boost.png""></td>
<td align=""center""><a href=""../../../../../../../index.html"">Home</a></td>
<td align=""center""><a href=""../../../../../../../libs/libraries.htm"">Libraries</a></td>
<td align=""center""><a href=""http://www.boost.org/users/people.html"">People</a></td>
<td align=""center""><a href=""http://www.boost.org/users/faq.html"">FAQ</a></td>
<td align=""center""><a href=""../../../../../../../more/index.htm"">More</a></td>
</tr></table>
<hr>
<div class=""spirit-nav"">
<a accesskey=""p"" href=""../boost__beast__basic_multi_buffer.html""><img src=""../../../../../../../doc/src/images/prev.png"" alt=""Prev""></a><a accesskey=""u"" href=""../boost__beast__basic_multi_buffer.html""><img src=""../../../../../../../doc/src/images/up.png"" alt=""Up""></a><a accesskey=""h"" href=""../../../index.html""><img src=""../../../../../../../doc/src/images/home.png"" alt=""Home""></a><a accesskey=""n"" href=""mutable_buffers_type.html""><img src=""../../../../../../../doc/src/images/next.png"" alt=""Next""></a>
</div>
<div class=""section"">
<div class=""titlepage""><div><div><h5 class=""title"">
<a name=""beast.ref.boost__beast__basic_multi_buffer.const_buffers_type""></a><a class=""link"" href=""const_buffers_type.html"" title=""basic_multi_buffer::const_buffers_type"">basic_multi_buffer::const_buffers_type</a>
</h5></div></div></div>
<p>
          <a class=""indexterm"" name=""idm7622""></a>
        </p>
<p>
          The ConstBufferSequence used to represent the readable bytes.
        </p>
<h6>
<a name=""beast.ref.boost__beast__basic_multi_buffer.const_buffers_type.h0""></a>
          <span class=""phrase""><a name=""beast.ref.boost__beast__basic_multi_buffer.const_buffers_type.synopsis""></a></span><a class=""link"" href=""const_buffers_type.html#beast.ref.boost__beast__basic_multi_buffer.const_buffers_type.synopsis"">Synopsis</a>
        </h6>
<pre class=""programlisting""><span class=""keyword"">using</span> <span class=""identifier"">const_buffers_type</span> <span class=""special"">=</span> <span class=""emphasis""><em>implementation-defined</em></span><span class=""special"">;</span>
</pre>
</div>
<table xmlns:rev=""http://www.cs.rpi.edu/~gregod/boost/tools/doc/revision"" width=""100%""><tr>
<td align=""left""></td>
<td align=""right""><div class=""copyright-footer"">Copyright © 2016-2019 Vinnie
      Falco<p>
        Distributed under the Boost Software License, Version 1.0. (See accompanying
        file LICENSE_1_0.txt or copy at <a href=""http://www.boost.org/LICENSE_1_0.txt"" target=""_top"">http://www.boost.org/LICENSE_1_0.txt</a>)
      </p>
</div></td>
</tr></table>
<hr>
<div class=""spirit-nav"">
<a accesskey=""p"" href=""../boost__beast__basic_multi_buffer.html""><img src=""../../../../../../../doc/src/images/prev.png"" alt=""Prev""></a><a accesskey=""u"" href=""../boost__beast__basic_multi_buffer.html""><img src=""../../../../../../../doc/src/images/up.png"" alt=""Up""></a><a accesskey=""h"" href=""../../../index.html""><img src=""../../../../../../../doc/src/images/home.png"" alt=""Home""></a><a accesskey=""n"" href=""mutable_buffers_type.html""><img src=""../../../../../../../doc/src/images/next.png"" alt=""Next""></a>
</div>
</body>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<html>', '<head>', '<meta', 'http-equiv=""Content-Type""', 'content=""text/html;', 'charset=UTF-8"">', '<title>basic_multi_buffer::const_buffers_type</title>', '<link', 'rel=""stylesheet""', 'href=""../../../../../../../doc/src/boostbook.css""', 'type=""text/css"">', '<meta', 'name=""generator""', 'content=""DocBook', 'XSL', 'Stylesheets', 'V1.79.1"">', '<link', 'rel=""home""', 'href=""../../../index.html""', 'title=""Chapter', '1.', 'Boost.Beast"">', '<link', 'rel=""up""', 'href=""../boost__beast__basic_multi_buffer.html""', 'title=""basic_multi_buffer"">', '<link', 'rel=""prev""', 'href=""../boost__beast__basic_multi_buffer.html""', 'title=""basic_multi_buffer"">', '<link', 'rel=""next""', 'href=""mutable_buffers_type.html""', 'title=""basic_multi_buffer::mutable_buffers_type"">', '</head>', '<body', 'bgcolor=""white""', 'text=""black""', 'link=""#0000FF""', 'vlink=""#840084""', 'alink=""#0000FF"">', '<table', 'cellpadding=""2""', 'width=""100%""><tr>', '<td', 'valign=""top""><img', 'alt=""Boost', 'C++', 'Libraries""', 'width=""277""', 'height=""86""', 'src=""../../../../../../../boost.png""></td>', '<td', 'align=""center""><a', 'href=""../../../../../../../index.html"">Home</a></td>', '<td', 'align=""center""><a', 'href=""../../../../../../../libs/libraries.htm"">Libraries</a></td>', '<td', 'align=""center""><a', 'href=""http://www.boost.org/users/people.html"">People</a></td>', '<td', 'align=""center""><a', 'href=""http://www.boost.org/users/faq.html"">FAQ</a></td>', '<td', 'align=""center""><a', 'href=""../../../../../../../more/index.htm"">More</a></td>', '</tr></table>', '<hr>', '<div', 'class=""spirit-nav"">', '<a', 'accesskey=""p""', 'href=""../boost__beast__basic_multi_buffer.html""><img', 'src=""../../../../../../../doc/src/images/prev.png""', 'alt=""Prev""></a><a', 'accesskey=""u""', 'href=""../boost__beast__basic_multi_buffer.html""><img', 'src=""../../../../../../../doc/src/images/up.png""', 'alt=""Up""></a><a', 'accesskey=""h""', 'href=""../../../index.html""><img', 'src=""../../../../../../../doc/src/images/home.png""', 'alt=""Home""></a><a', 'accesskey=""n""', 'href=""mutable_buffers_type.html""><img', 'src=""../../../../../../../doc/src/images/next.png""', 'alt=""Next""></a>', '</div>', '<div', 'class=""section"">', '<div', 'class=""titlepage""><div><div><h5', 'class=""title"">', '<a', 'name=""beast.ref.boost__beast__basic_multi_buffer.const_buffers_type""></a><a', 'class=""link""', 'href=""const_buffers_type.html""', 'title=""basic_multi_buffer::const_buffers_type"">basic_multi_buffer::const_buffers_type</a>', '</h5></div></div></div>', '<p>', '<a', 'class=""indexterm""', 'name=""idm7622""></a>', '</p>', '<p>', 'The', 'ConstBufferSequence', 'used', 'to', 'represent', 'the', 'readable', 'bytes.', '</p>', '<h6>', '<a', 'name=""beast.ref.boost__beast__basic_multi_buffer.const_buffers_type.h0""></a>', '<span', 'class=""phrase""><a', 'name=""beast.ref.boost__beast__basic_multi_buffer.const_buffers_type.synopsis""></a></span><a', 'class=""link""', 'href=""const_buffers_type.html#beast.ref.boost__beast__basic_multi_buffer.const_buffers_type.synopsis"">Synopsis</a>', '</h6>', '<pre', 'class=""programlisting""><span', 'class=""keyword"">using</span>', '<span', 'class=""identifier"">const_buffers_type</span>', '<span', 'class=""special"">=</span>', '<span', 'class=""emphasis""><em>implementation-defined</em></span><span', 'class=""special"">;</span>', '</pre>', '</div>', '<table', 'xmlns:rev=""http://www.cs.rpi.edu/~gregod/boost/tools/doc/revision""', 'width=""100%""><tr>', '<td', 'align=""left""></td>', '<td', 'align=""right""><div', 'class=""copyright-footer"">Copyright', '©', '2016-2019', 'Vinnie', 'Falco<p>', 'Distributed', 'under', 'the', 'Boost', 'Software', 'License,', 'Version', '1.0.', '(See', 'accompanying', 'file', 'LICENSE_1_0.txt', 'or', 'copy', 'at', '<a', 'href=""http://www.boost.org/LICENSE_1_0.txt""', 'target=""_top"">http://www.boost.org/LICENSE_1_0.txt</a>)', '</p>', '</div></td>', '</tr></table>', '<hr>', '<div', 'class=""spirit-nav"">', '<a', 'accesskey=""p""', 'href=""../boost__beast__basic_multi_buffer.html""><img', 'src=""../../../../../../../doc/src/images/prev.png""', 'alt=""Prev""></a><a', 'accesskey=""u""', 'href=""../boost__beast__basic_multi_buffer.html""><img', 'src=""../../../../../../../doc/src/images/up.png""', 'alt=""Up""></a><a', 'accesskey=""h""', 'href=""../../../index.html""><img', 'src=""../../../../../../../doc/src/images/home.png""', 'alt=""Home""></a><a', 'accesskey=""n""', 'href=""mutable_buffers_type.html""><img', 'src=""../../../../../../../doc/src/images/next.png""', 'alt=""Next""></a>', '</div>', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"import React from 'react';
import requestStore from '../../stores/request-store';
import Request from './Request';
import withStyles from 'isomorphic-style-loader/lib/withStyles';
import styles from './Session.scss';

var Session = React.createClass({
   /*************************************************************
    * DEFINITIONS
    *************************************************************/
   propTypes: {
      className: React.PropTypes.string,
      style: React.PropTypes.object,
      onSelect: React.PropTypes.func,
      sessionId: React.PropTypes.string,
      selected: React.PropTypes.bool
   },
   getInitialState: function() {
      return {
         title: null,
         ts: (new Date()).toISOString(),
         collapsed: false
      };
   },

   /*************************************************************
    * COMPONENT LIFECYCLE
    *************************************************************/
   componentDidMount: function() {
      requestStore.subscribe(this.handleStoreUpdate, null);
   },

   handleStoreUpdate: function() {
      this.setState({
         ts: (new Date()).toISOString()
      });
   },
   handleCloseClick: function() {
      requestStore.closeSession(this.props.sessionId);
   },
   handleCollapseClick: function() {
      this.setState({
         collapsed: !this.state.collapsed
      });
   },
   handleSelectClick: function() {
      this.props.onSelect(this.props.sessionId);
   },
   /*************************************************************
   * RENDERING
   *************************************************************/
   render: function() {

      var requests = requestStore.getRequests(this.props.sessionId);
      var titleByRequest, unselectedDom;
      if (requests.length > 0 && requests[0].cmd) {
         titleByRequest = requests[0].cmd;
      }
      else if (requests.length > 1) {
         titleByRequest = requests[1].cmd;
      }
      var title = this.state.title || titleByRequest || 'How can I help you?';

      if (!this.props.selected) {
         unselectedDom = ([
            <a onClick={this.handleSelectClick} style={{ float: 'right', marginLeft: '0.4em', fontSize: '0.8em', marginTop: '0.42em' }}><i className={'fa fa-2x fa-circle-o ' + styles.button}></i></a>,
         ]);

         if (this.state.collapsed) {
            unselectedDom.push(<a onClick={this.handleCollapseClick} style={{ float: 'right', fontSize: '0.8em', marginTop: '0.42em' }}><i className={'fa fa-2x fa-plus ' + styles.button}></i></a>);
         }
         else {
            unselectedDom.push(<a onClick={this.handleCollapseClick} style={{ float: 'right', fontSize: '0.8em', marginTop: '0.42em' }}><i className={'fa fa-2x fa-minus ' + styles.button}></i></a>);
         }
      }

      return (
         <div className={styles.appcontainer + ' ' + this.props.className} style={this.props.style}>
            <a onClick={this.handleCloseClick} style={{ float: 'right', marginLeft: '0.2em' }}><i className={'fa fa-2x fa-close ' + styles.close}></i></a>
            {unselectedDom}
            <h3 style={{ margin: '0', lineHeight: '40px' }}>{title}</h3>

            {this.state.collapsed ? [] : requests.map(function(request) {
               return (
                  <Request key={request.id} data={request} />
               );
            }) }
         </div>
      );
   }
});

module.exports = withStyles(Session, styles);
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'React', 'from', ""'react';"", 'import', 'requestStore', 'from', ""'../../stores/request-store';"", 'import', 'Request', 'from', ""'./Request';"", 'import', 'withStyles', 'from', ""'isomorphic-style-loader/lib/withStyles';"", 'import', 'styles', 'from', ""'./Session.scss';"", 'var', 'Session', '=', 'React.createClass({', '/*************************************************************', '*', 'DEFINITIONS', '*************************************************************/', 'propTypes:', '{', 'className:', 'React.PropTypes.string,', 'style:', 'React.PropTypes.object,', 'onSelect:', 'React.PropTypes.func,', 'sessionId:', 'React.PropTypes.string,', 'selected:', 'React.PropTypes.bool', '},', 'getInitialState:', 'function()', '{', 'return', '{', 'title:', 'null,', 'ts:', '(new', 'Date()).toISOString(),', 'collapsed:', 'false', '};', '},', '/*************************************************************', '*', 'COMPONENT', 'LIFECYCLE', '*************************************************************/', 'componentDidMount:', 'function()', '{', 'requestStore.subscribe(this.handleStoreUpdate,', 'null);', '},', 'handleStoreUpdate:', 'function()', '{', 'this.setState({', 'ts:', '(new', 'Date()).toISOString()', '});', '},', 'handleCloseClick:', 'function()', '{', 'requestStore.closeSession(this.props.sessionId);', '},', 'handleCollapseClick:', 'function()', '{', 'this.setState({', 'collapsed:', '!this.state.collapsed', '});', '},', 'handleSelectClick:', 'function()', '{', 'this.props.onSelect(this.props.sessionId);', '},', '/*************************************************************', '*', 'RENDERING', '*************************************************************/', 'render:', 'function()', '{', 'var', 'requests', '=', 'requestStore.getRequests(this.props.sessionId);', 'var', 'titleByRequest,', 'unselectedDom;', 'if', '(requests.length', '>', '0', '&&', 'requests[0].cmd)', '{', 'titleByRequest', '=', 'requests[0].cmd;', '}', 'else', 'if', '(requests.length', '>', '1)', '{', 'titleByRequest', '=', 'requests[1].cmd;', '}', 'var', 'title', '=', 'this.state.title', '||', 'titleByRequest', '||', ""'How"", 'can', 'I', 'help', ""you?';"", 'if', '(!this.props.selected)', '{', 'unselectedDom', '=', '([', '<a', 'onClick={this.handleSelectClick}', 'style={{', 'float:', ""'right',"", 'marginLeft:', ""'0.4em',"", 'fontSize:', ""'0.8em',"", 'marginTop:', ""'0.42em'"", '}}><i', ""className={'fa"", 'fa-2x', 'fa-circle-o', ""'"", '+', 'styles.button}></i></a>,', ']);', 'if', '(this.state.collapsed)', '{', 'unselectedDom.push(<a', 'onClick={this.handleCollapseClick}', 'style={{', 'float:', ""'right',"", 'fontSize:', ""'0.8em',"", 'marginTop:', ""'0.42em'"", '}}><i', ""className={'fa"", 'fa-2x', 'fa-plus', ""'"", '+', 'styles.button}></i></a>);', '}', 'else', '{', 'unselectedDom.push(<a', 'onClick={this.handleCollapseClick}', 'style={{', 'float:', ""'right',"", 'fontSize:', ""'0.8em',"", 'marginTop:', ""'0.42em'"", '}}><i', ""className={'fa"", 'fa-2x', 'fa-minus', ""'"", '+', 'styles.button}></i></a>);', '}', '}', 'return', '(', '<div', 'className={styles.appcontainer', '+', ""'"", ""'"", '+', 'this.props.className}', 'style={this.props.style}>', '<a', 'onClick={this.handleCloseClick}', 'style={{', 'float:', ""'right',"", 'marginLeft:', ""'0.2em'"", '}}><i', ""className={'fa"", 'fa-2x', 'fa-close', ""'"", '+', 'styles.close}></i></a>', '{unselectedDom}', '<h3', 'style={{', 'margin:', ""'0',"", 'lineHeight:', ""'40px'"", '}}>{title}</h3>', '{this.state.collapsed', '?', '[]', ':', 'requests.map(function(request)', '{', 'return', '(', '<Request', 'key={request.id}', 'data={request}', '/>', ');', '})', '}', '</div>', ');', '}', '});', 'module.exports', '=', 'withStyles(Session,', 'styles);', '```']",challenge not surrounded by ''': ,
"package com.gildaswise.horizontalcounter;

import android.content.Context;
import android.support.test.InstrumentationRegistry;
import android.support.test.runner.AndroidJUnit4;

import org.junit.Test;
import org.junit.runner.RunWith;

import static org.junit.Assert.*;

/**
 * Instrumentation test, which will execute on an Android device.
 *
 * @see <a href=""http://d.android.com/tools/testing"">Testing documentation</a>
 */
@RunWith(AndroidJUnit4.class)
public class ExampleInstrumentedTest {
    @Test
    public void useAppContext() throws Exception {
        // Context of the app under test.
        Context appContext = InstrumentationRegistry.getTargetContext();

        assertEquals(""com.gildaswise.horizontalcounter.test"", appContext.getPackageName());
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.gildaswise.horizontalcounter;', 'import', 'android.content.Context;', 'import', 'android.support.test.InstrumentationRegistry;', 'import', 'android.support.test.runner.AndroidJUnit4;', 'import', 'org.junit.Test;', 'import', 'org.junit.runner.RunWith;', 'import', 'static', 'org.junit.Assert.*;', '/**', '*', 'Instrumentation', 'test,', 'which', 'will', 'execute', 'on', 'an', 'Android', 'device.', '*', '*', '@see', '<a', 'href=""http://d.android.com/tools/testing"">Testing', 'documentation</a>', '*/', '@RunWith(AndroidJUnit4.class)', 'public', 'class', 'ExampleInstrumentedTest', '{', '@Test', 'public', 'void', 'useAppContext()', 'throws', 'Exception', '{', '//', 'Context', 'of', 'the', 'app', 'under', 'test.', 'Context', 'appContext', '=', 'InstrumentationRegistry.getTargetContext();', 'assertEquals(""com.gildaswise.horizontalcounter.test"",', 'appContext.getPackageName());', '}', '}', '```']",challenge not surrounded by ''': ,
"package com.cj.jshintmojo.reporter;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.cj.jshintmojo.cache.Result;
import com.cj.jshintmojo.jshint.JSHint;

/**
 * Utility class to create test data for {@link JSHintReporter}.
 */
class JSHintReporterTestUtil {

    private JSHintReporterTestUtil() {
    }

    private static JSHint.Error createError(String code, int line,
            int character, String evidence, String reason)
    {
        JSHint.Error error = new JSHint.Error();
        error.id = ""(error)"";
        error.code = code;
        error.line = line;
        error.character = character;
        error.evidence = evidence;
        error.reason = reason;
        error.raw = reason;
        return error;
    }

    static Map<String, Result> createAllPassedResults() {
        return new HashMap<String, Result>();
    }

    static Map<String, Result> createSingleFileFailedResults() {
        Map<String, Result> results = new HashMap<String, Result>();
        {
            List<JSHint.Error> errors = new ArrayList<JSHint.Error>();
            errors.add(createError(""W033"", 5, 2, ""}"", ""Missing semicolon.""));
            errors.add(createError(""W014"", 12, 5, ""    && window.setImmediate;"", ""Bad line breaking before '&&'.""));
            errors.add(createError(""E043"", 1137, 26, null, ""Too many errors.""));
            Result result = new Result(""/path/to/A.js"", 1377309240000L, errors);
            results.put(result.path, result);
        }
        return results;
    }

    static Map<String, Result> createMultipleFilesFailedResults() {
        Map<String, Result> results = new HashMap<String, Result>();
        {
            List<JSHint.Error> errors = new ArrayList<JSHint.Error>();
            errors.add(createError(""W033"", 5, 2, ""}"", ""Missing semicolon.""));
            errors.add(createError(""W014"", 12, 5, ""    && window.setImmediate;"", ""Bad line breaking before '&&'.""));
            errors.add(createError(""E043"", 1137, 26, null, ""Too many errors.""));
            Result result = new Result(""/path/to/A.js"", 1377309240000L, errors);
            results.put(result.path, result);
        }
        {
            List<JSHint.Error> errors = new ArrayList<JSHint.Error>();
            errors.add(createError(""I001"", 10, 5, ""    , [info, \""info\""]"", ""Comma warnings can be turned off with 'laxcomma'.""));
            Result result = new Result(""/path/to/B.js"", 1377309240000L, errors);
            results.put(result.path, result);
        }
        {
            List<JSHint.Error> errors = new ArrayList<JSHint.Error>();
            errors.add(createError(""W004"", 3, 14, ""    var args = a;"", ""'args' is already defined.""));
            errors.add(createError(""W041"", 12, 5, ""    if (list.length == 0)"", ""Use '===' to compare with '0'.""));
            Result result = new Result(""/path/to/C.js"", 1377309240000L, errors);
            results.put(result.path, result);
        }
        return results;
    }

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.cj.jshintmojo.reporter;', 'import', 'java.util.ArrayList;', 'import', 'java.util.HashMap;', 'import', 'java.util.List;', 'import', 'java.util.Map;', 'import', 'com.cj.jshintmojo.cache.Result;', 'import', 'com.cj.jshintmojo.jshint.JSHint;', '/**', '*', 'Utility', 'class', 'to', 'create', 'test', 'data', 'for', '{@link', 'JSHintReporter}.', '*/', 'class', 'JSHintReporterTestUtil', '{', 'private', 'JSHintReporterTestUtil()', '{', '}', 'private', 'static', 'JSHint.Error', 'createError(String', 'code,', 'int', 'line,', 'int', 'character,', 'String', 'evidence,', 'String', 'reason)', '{', 'JSHint.Error', 'error', '=', 'new', 'JSHint.Error();', 'error.id', '=', '""(error)"";', 'error.code', '=', 'code;', 'error.line', '=', 'line;', 'error.character', '=', 'character;', 'error.evidence', '=', 'evidence;', 'error.reason', '=', 'reason;', 'error.raw', '=', 'reason;', 'return', 'error;', '}', 'static', 'Map<String,', 'Result>', 'createAllPassedResults()', '{', 'return', 'new', 'HashMap<String,', 'Result>();', '}', 'static', 'Map<String,', 'Result>', 'createSingleFileFailedResults()', '{', 'Map<String,', 'Result>', 'results', '=', 'new', 'HashMap<String,', 'Result>();', '{', 'List<JSHint.Error>', 'errors', '=', 'new', 'ArrayList<JSHint.Error>();', 'errors.add(createError(""W033"",', '5,', '2,', '""}"",', '""Missing', 'semicolon.""));', 'errors.add(createError(""W014"",', '12,', '5,', '""', '&&', 'window.setImmediate;"",', '""Bad', 'line', 'breaking', 'before', '\'&&\'.""));', 'errors.add(createError(""E043"",', '1137,', '26,', 'null,', '""Too', 'many', 'errors.""));', 'Result', 'result', '=', 'new', 'Result(""/path/to/A.js"",', '1377309240000L,', 'errors);', 'results.put(result.path,', 'result);', '}', 'return', 'results;', '}', 'static', 'Map<String,', 'Result>', 'createMultipleFilesFailedResults()', '{', 'Map<String,', 'Result>', 'results', '=', 'new', 'HashMap<String,', 'Result>();', '{', 'List<JSHint.Error>', 'errors', '=', 'new', 'ArrayList<JSHint.Error>();', 'errors.add(createError(""W033"",', '5,', '2,', '""}"",', '""Missing', 'semicolon.""));', 'errors.add(createError(""W014"",', '12,', '5,', '""', '&&', 'window.setImmediate;"",', '""Bad', 'line', 'breaking', 'before', '\'&&\'.""));', 'errors.add(createError(""E043"",', '1137,', '26,', 'null,', '""Too', 'many', 'errors.""));', 'Result', 'result', '=', 'new', 'Result(""/path/to/A.js"",', '1377309240000L,', 'errors);', 'results.put(result.path,', 'result);', '}', '{', 'List<JSHint.Error>', 'errors', '=', 'new', 'ArrayList<JSHint.Error>();', 'errors.add(createError(""I001"",', '10,', '5,', '""', ',', '[info,', '\\""info\\""]"",', '""Comma', 'warnings', 'can', 'be', 'turned', 'off', 'with', '\'laxcomma\'.""));', 'Result', 'result', '=', 'new', 'Result(""/path/to/B.js"",', '1377309240000L,', 'errors);', 'results.put(result.path,', 'result);', '}', '{', 'List<JSHint.Error>', 'errors', '=', 'new', 'ArrayList<JSHint.Error>();', 'errors.add(createError(""W004"",', '3,', '14,', '""', 'var', 'args', '=', 'a;"",', '""\'args\'', 'is', 'already', 'defined.""));', 'errors.add(createError(""W041"",', '12,', '5,', '""', 'if', '(list.length', '==', '0)"",', '""Use', ""'==='"", 'to', 'compare', 'with', '\'0\'.""));', 'Result', 'result', '=', 'new', 'Result(""/path/to/C.js"",', '1377309240000L,', 'errors);', 'results.put(result.path,', 'result);', '}', 'return', 'results;', '}', '}', '```']",challenge not surrounded by ''': ,
"package com.karriapps.tehilim.tehilimlibrary.view;

import android.content.Context;
import androidx.appcompat.widget.AppCompatSpinner;
import android.util.AttributeSet;
import android.view.MotionEvent;
import android.view.View;
import android.widget.AdapterView;

import java.lang.ref.WeakReference;

/**
 * An extended spinner, to support the option knowing whether
 * the selection of an item was made by user
 *
 * @author Orel Zion
 * @since 16.02.2014
 */
public class ExtendedSpinner extends AppCompatSpinner {

    private boolean isUserTouched;
    private boolean mSendEvent;
    private WeakReference<OnItemSelectedListener> mListener;

    /**
     * An interface to replace the default interface for adapter spinner
     * \nThis one has a boolean indicating whether the selection was made by the user
     *
     * @author Orel Zion
     * @serial 16.02.2014
     */
    public interface OnItemSelectedListener {
        public void OnItemSelected(AdapterView<?> adapter, View view, int position, long itemID, boolean byUser);

        public void onNothingSelected(AdapterView<?> adapter);
    }

    public ExtendedSpinner(Context context, AttributeSet attrs) {
        super(context, attrs);
        setOnItemSelectedListener(mOnItemSlectedListener);
    }

    public void setOnItemSelectedListener(OnItemSelectedListener onItemSelected) {
        mListener = new WeakReference<>(onItemSelected);
    }

    @Override
    public boolean onTouchEvent(MotionEvent event) {
        isUserTouched = true;
        return super.onTouchEvent(event);
    }

    AdapterView.OnItemSelectedListener mOnItemSlectedListener = new AdapterView.OnItemSelectedListener() {
        public void onItemSelected(AdapterView<?> arg0, View arg1, int arg2, long arg3) {
            if (mListener != null && mListener.get() != null) {
                mListener.get().OnItemSelected(arg0, arg1, arg2, arg3, isUserTouched || mSendEvent);
            }
            isUserTouched = false;
            mSendEvent = false;
        }

        ;

        public void onNothingSelected(AdapterView<?> arg0) {
            if (mListener != null && mListener.get() != null) {
                mListener.get().onNothingSelected(arg0);
            }
        }

        ;
    };

    public void setSelection(int position, boolean sendEvent) {
        setSelection(position, false, sendEvent);
    }

    public void setSelection(int position, boolean animate, boolean sendEvent) {
        mSendEvent = sendEvent;
        ((ToolbarSpinnerAdapter)getAdapter()).setSelectedPosition(position);
        ((ToolbarSpinnerAdapter)getAdapter()).notifyDataSetChanged();
        super.setSelection(position, animate);
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.karriapps.tehilim.tehilimlibrary.view;', 'import', 'android.content.Context;', 'import', 'androidx.appcompat.widget.AppCompatSpinner;', 'import', 'android.util.AttributeSet;', 'import', 'android.view.MotionEvent;', 'import', 'android.view.View;', 'import', 'android.widget.AdapterView;', 'import', 'java.lang.ref.WeakReference;', '/**', '*', 'An', 'extended', 'spinner,', 'to', 'support', 'the', 'option', 'knowing', 'whether', '*', 'the', 'selection', 'of', 'an', 'item', 'was', 'made', 'by', 'user', '*', '*', '@author', 'Orel', 'Zion', '*', '@since', '16.02.2014', '*/', 'public', 'class', 'ExtendedSpinner', 'extends', 'AppCompatSpinner', '{', 'private', 'boolean', 'isUserTouched;', 'private', 'boolean', 'mSendEvent;', 'private', 'WeakReference<OnItemSelectedListener>', 'mListener;', '/**', '*', 'An', 'interface', 'to', 'replace', 'the', 'default', 'interface', 'for', 'adapter', 'spinner', '*', '\\nThis', 'one', 'has', 'a', 'boolean', 'indicating', 'whether', 'the', 'selection', 'was', 'made', 'by', 'the', 'user', '*', '*', '@author', 'Orel', 'Zion', '*', '@serial', '16.02.2014', '*/', 'public', 'interface', 'OnItemSelectedListener', '{', 'public', 'void', 'OnItemSelected(AdapterView<?>', 'adapter,', 'View', 'view,', 'int', 'position,', 'long', 'itemID,', 'boolean', 'byUser);', 'public', 'void', 'onNothingSelected(AdapterView<?>', 'adapter);', '}', 'public', 'ExtendedSpinner(Context', 'context,', 'AttributeSet', 'attrs)', '{', 'super(context,', 'attrs);', 'setOnItemSelectedListener(mOnItemSlectedListener);', '}', 'public', 'void', 'setOnItemSelectedListener(OnItemSelectedListener', 'onItemSelected)', '{', 'mListener', '=', 'new', 'WeakReference<>(onItemSelected);', '}', '@Override', 'public', 'boolean', 'onTouchEvent(MotionEvent', 'event)', '{', 'isUserTouched', '=', 'true;', 'return', 'super.onTouchEvent(event);', '}', 'AdapterView.OnItemSelectedListener', 'mOnItemSlectedListener', '=', 'new', 'AdapterView.OnItemSelectedListener()', '{', 'public', 'void', 'onItemSelected(AdapterView<?>', 'arg0,', 'View', 'arg1,', 'int', 'arg2,', 'long', 'arg3)', '{', 'if', '(mListener', '!=', 'null', '&&', 'mListener.get()', '!=', 'null)', '{', 'mListener.get().OnItemSelected(arg0,', 'arg1,', 'arg2,', 'arg3,', 'isUserTouched', '||', 'mSendEvent);', '}', 'isUserTouched', '=', 'false;', 'mSendEvent', '=', 'false;', '}', ';', 'public', 'void', 'onNothingSelected(AdapterView<?>', 'arg0)', '{', 'if', '(mListener', '!=', 'null', '&&', 'mListener.get()', '!=', 'null)', '{', 'mListener.get().onNothingSelected(arg0);', '}', '}', ';', '};', 'public', 'void', 'setSelection(int', 'position,', 'boolean', 'sendEvent)', '{', 'setSelection(position,', 'false,', 'sendEvent);', '}', 'public', 'void', 'setSelection(int', 'position,', 'boolean', 'animate,', 'boolean', 'sendEvent)', '{', 'mSendEvent', '=', 'sendEvent;', '((ToolbarSpinnerAdapter)getAdapter()).setSelectedPosition(position);', '((ToolbarSpinnerAdapter)getAdapter()).notifyDataSetChanged();', 'super.setSelection(position,', 'animate);', '}', '}', '```']",challenge not surrounded by ''': ,
"{% extends ""manager/main.html"" %}
{% block real_content %}

<fieldset><legend class=""mt_name"">Password changed</legend>
<p>The password has been changed!</p>
<p><a href=""{% url 'login' %}"">log in again?</a></p>
</fieldset>

{% endblock %}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```{%', 'extends', '""manager/main.html""', '%}', '{%', 'block', 'real_content', '%}', '<fieldset><legend', 'class=""mt_name"">Password', 'changed</legend>', '<p>The', 'password', 'has', 'been', 'changed!</p>', '<p><a', 'href=""{%', 'url', ""'login'"", '%}"">log', 'in', 'again?</a></p>', '</fieldset>', '{%', 'endblock', '%}', '```']",challenge not surrounded by ''': ,
"#include<iostream>
using namespace std;
int stack[1000];
char tab[100000][100];
void f(int i)
{
    int s=0;
    for(int j=1;j<=tab[i-1][0];++j)
    {
        tab[i][j] = ((tab[i-1][j]-'0')*3+s)%10+'0';
        s = (s+(tab[i-1][j]-'0')*3)/10;
    }
    if(s)
    {
        tab[i][0]=tab[i-1][0]+1;
        tab[i][tab[i][0]]=s+'0';
    }
    else
        tab[i][0]=tab[i-1][0];
}
void init()
{
    tab[0][0]=1;
    tab[0][1]='1';
    for(int i=1;;++i)
    {
        f(i);
        if(tab[i][0]>90)break;
    }
}
void print(char *aa)
{
    for(int j=aa[0];j>0;--j)
        printf(""%c"",aa[j]);
}

int main()
{
    init();
    /*
    for(int i=0;i<10;++i)
    {
        print(tab[i]);
        cout<<endl;
    }
   */
    long long k,n,m;
    
    while(scanf(""%lld"",&n),n)
    {
        if(n==1)
        {
            printf(""{ }\n"");
            continue;
        }
        int top=0,k=0;
        n--;
        
        while(n>0)
        {
            if(n%2)
            {
                stack[top++]=k;
            }
            n>>=1;
            ++k;
        }
        printf(""{ "");
        for(int i=0;i<top-1;++i)
        {
            print(tab[stack[i]]);
            printf("", "");
        }
        print(tab[stack[top-1]]);
        printf("" }\n"");
     
    }
     
    return 0;
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#include<iostream>', 'using', 'namespace', 'std;', 'int', 'stack[1000];', 'char', 'tab[100000][100];', 'void', 'f(int', 'i)', '{', 'int', 's=0;', 'for(int', 'j=1;j<=tab[i-1][0];++j)', '{', 'tab[i][j]', '=', ""((tab[i-1][j]-'0')*3+s)%10+'0';"", 's', '=', ""(s+(tab[i-1][j]-'0')*3)/10;"", '}', 'if(s)', '{', 'tab[i][0]=tab[i-1][0]+1;', ""tab[i][tab[i][0]]=s+'0';"", '}', 'else', 'tab[i][0]=tab[i-1][0];', '}', 'void', 'init()', '{', 'tab[0][0]=1;', ""tab[0][1]='1';"", 'for(int', 'i=1;;++i)', '{', 'f(i);', 'if(tab[i][0]>90)break;', '}', '}', 'void', 'print(char', '*aa)', '{', 'for(int', 'j=aa[0];j>0;--j)', 'printf(""%c"",aa[j]);', '}', 'int', 'main()', '{', 'init();', '/*', 'for(int', 'i=0;i<10;++i)', '{', 'print(tab[i]);', 'cout<<endl;', '}', '*/', 'long', 'long', 'k,n,m;', 'while(scanf(""%lld"",&n),n)', '{', 'if(n==1)', '{', 'printf(""{', '}\\n"");', 'continue;', '}', 'int', 'top=0,k=0;', 'n--;', 'while(n>0)', '{', 'if(n%2)', '{', 'stack[top++]=k;', '}', 'n>>=1;', '++k;', '}', 'printf(""{', '"");', 'for(int', 'i=0;i<top-1;++i)', '{', 'print(tab[stack[i]]);', 'printf("",', '"");', '}', 'print(tab[stack[top-1]]);', 'printf(""', '}\\n"");', '}', 'return', '0;', '}', '```']",challenge not surrounded by ''': ,
"# -*-coding:Utf-8 -*

# Copyright (c) 2010-2017 LE GOFF Vincent
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
# * Neither the name of the copyright holder nor the names of its contributors
#   may be used to endorse or promote products derived from this software
#   without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS""
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
# OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.


""""""Fichier contenant la fonction est_mortel.""""""

from primaires.scripting.fonction import Fonction

class ClasseFonction(Fonction):

    """"""Retourne vrai si le personnage est mortel.""""""

    @classmethod
    def init_types(cls):
        cls.ajouter_types(cls.est_mortel, ""Personnage"")

    @staticmethod
    def est_mortel(personnage):
        """"""Retourne vrai si le personnage est mortel, faux sinon.

        Paramètres à préciser :

          * personnage : le personnage à tester

        Exemple d'utilisation :

          si est_mortel(personnage):
              # ...

        """"""
        return not personnage.est_immortel()
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', '-*-coding:Utf-8', '-*', '#', 'Copyright', '(c)', '2010-2017', 'LE', 'GOFF', 'Vincent', '#', 'All', 'rights', 'reserved.', '#', '#', 'Redistribution', 'and', 'use', 'in', 'source', 'and', 'binary', 'forms,', 'with', 'or', 'without', '#', 'modification,', 'are', 'permitted', 'provided', 'that', 'the', 'following', 'conditions', 'are', 'met:', '#', '#', '*', 'Redistributions', 'of', 'source', 'code', 'must', 'retain', 'the', 'above', 'copyright', 'notice,', 'this', '#', 'list', 'of', 'conditions', 'and', 'the', 'following', 'disclaimer.', '#', '*', 'Redistributions', 'in', 'binary', 'form', 'must', 'reproduce', 'the', 'above', 'copyright', 'notice,', '#', 'this', 'list', 'of', 'conditions', 'and', 'the', 'following', 'disclaimer', 'in', 'the', 'documentation', '#', 'and/or', 'other', 'materials', 'provided', 'with', 'the', 'distribution.', '#', '*', 'Neither', 'the', 'name', 'of', 'the', 'copyright', 'holder', 'nor', 'the', 'names', 'of', 'its', 'contributors', '#', 'may', 'be', 'used', 'to', 'endorse', 'or', 'promote', 'products', 'derived', 'from', 'this', 'software', '#', 'without', 'specific', 'prior', 'written', 'permission.', '#', '#', 'THIS', 'SOFTWARE', 'IS', 'PROVIDED', 'BY', 'THE', 'COPYRIGHT', 'HOLDERS', 'AND', 'CONTRIBUTORS', '""AS', 'IS""', '#', 'AND', 'ANY', 'EXPRESS', 'OR', 'IMPLIED', 'WARRANTIES,', 'INCLUDING,', 'BUT', 'NOT', 'LIMITED', 'TO,', 'THE', '#', 'IMPLIED', 'WARRANTIES', 'OF', 'MERCHANTABILITY', 'AND', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE', '#', 'ARE', 'DISCLAIMED.', 'IN', 'NO', 'EVENT', 'SHALL', 'THE', 'COPYRIGHT', 'OWNER', 'OR', 'CONTRIBUTORS', 'BE', '#', 'LIABLE', 'FOR', 'ANY', 'DIRECT,', 'INDIRECT,', 'INCIDENTAL,', 'SPECIAL,', 'EXEMPLARY,', 'OR', '#', 'CONSEQUENTIAL', 'DAMAGES', '(INCLUDING,', 'BUT', 'NOT', 'LIMITED', 'TO,', 'PROCUREMENT', '#', 'OF', 'SUBSTITUTE', 'GOODS', 'OR', 'SERVICES;', 'LOSS', 'OF', 'USE,', 'DATA,', 'OR', 'PROFITS;', 'OR', 'BUSINESS', '#', 'INTERRUPTION)', 'HOWEVER', 'CAUSED', 'AND', 'ON', 'ANY', 'THEORY', 'OF', 'LIABILITY,', 'WHETHER', 'IN', '#', 'CONTRACT,', 'STRICT', 'LIABILITY,', 'OR', 'TORT', '(INCLUDING', 'NEGLIGENCE', 'OR', 'OTHERWISE)', '#', 'ARISING', 'IN', 'ANY', 'WAY', 'OUT', 'OF', 'THE', 'USE', 'OF', 'THIS', 'SOFTWARE,', 'EVEN', 'IF', 'ADVISED', 'OF', 'THE', '#', 'POSSIBILITY', 'OF', 'SUCH', 'DAMAGE.', '""""""Fichier', 'contenant', 'la', 'fonction', 'est_mortel.""""""', 'from', 'primaires.scripting.fonction', 'import', 'Fonction', 'class', 'ClasseFonction(Fonction):', '""""""Retourne', 'vrai', 'si', 'le', 'personnage', 'est', 'mortel.""""""', '@classmethod', 'def', 'init_types(cls):', 'cls.ajouter_types(cls.est_mortel,', '""Personnage"")', '@staticmethod', 'def', 'est_mortel(personnage):', '""""""Retourne', 'vrai', 'si', 'le', 'personnage', 'est', 'mortel,', 'faux', 'sinon.', 'Paramètres', 'à', 'préciser', ':', '*', 'personnage', ':', 'le', 'personnage', 'à', 'tester', 'Exemple', ""d'utilisation"", ':', 'si', 'est_mortel(personnage):', '#', '...', '""""""', 'return', 'not', 'personnage.est_immortel()', '```']",challenge not surrounded by ''': ,
"#!/usr/bin/env bash

set +x

: ${INTEGCB_LOCATION?""integcb location""}

cd $INTEGCB_LOCATION
echo -e ""\n\033[1;96m--- Kill running cbd containers\033[0m\n""
./cbd kill

echo -e ""\n\033[1;96m--- Kill running test container\033[0m\n""
cd ..
$INTEGCB_LOCATION/.deps/bin/docker-compose down

echo -e ""\n\033[1;96m--- Start cloudbreak\033[0m\n""
cd $INTEGCB_LOCATION
./cbd start-wait consul registrator identity commondb cloudbreak

echo -e ""\n\033[1;96m--- Start testing... (it may take few minutes to finish.)\033[0m\n""
cd ..
rm -rf test-output
$INTEGCB_LOCATION/.deps/bin/docker-compose up test > test.out
echo -e ""\n\033[1;96m--- Test finished\033[0m\n""","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/usr/bin/env', 'bash', 'set', '+x', ':', '${INTEGCB_LOCATION?""integcb', 'location""}', 'cd', '$INTEGCB_LOCATION', 'echo', '-e', '""\\n\\033[1;96m---', 'Kill', 'running', 'cbd', 'containers\\033[0m\\n""', './cbd', 'kill', 'echo', '-e', '""\\n\\033[1;96m---', 'Kill', 'running', 'test', 'container\\033[0m\\n""', 'cd', '..', '$INTEGCB_LOCATION/.deps/bin/docker-compose', 'down', 'echo', '-e', '""\\n\\033[1;96m---', 'Start', 'cloudbreak\\033[0m\\n""', 'cd', '$INTEGCB_LOCATION', './cbd', 'start-wait', 'consul', 'registrator', 'identity', 'commondb', 'cloudbreak', 'echo', '-e', '""\\n\\033[1;96m---', 'Start', 'testing...', '(it', 'may', 'take', 'few', 'minutes', 'to', 'finish.)\\033[0m\\n""', 'cd', '..', 'rm', '-rf', 'test-output', '$INTEGCB_LOCATION/.deps/bin/docker-compose', 'up', 'test', '>', 'test.out', 'echo', '-e', '""\\n\\033[1;96m---', 'Test', 'finished\\033[0m\\n""```']",challenge not surrounded by ''': ,
"package com.ajjpj.asysmon.server.storage;

import com.ajjpj.asysmon.server.util.AOption;

import java.util.Map;

/**
 * @author arno
 */
public interface ScalarMetaDataDao {
    Map<String, ScalarMetaData> getAll();

    AOption<ScalarMetaData> get(String name);
    void store(ScalarMetaData scalarMetaData);
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.ajjpj.asysmon.server.storage;', 'import', 'com.ajjpj.asysmon.server.util.AOption;', 'import', 'java.util.Map;', '/**', '*', '@author', 'arno', '*/', 'public', 'interface', 'ScalarMetaDataDao', '{', 'Map<String,', 'ScalarMetaData>', 'getAll();', 'AOption<ScalarMetaData>', 'get(String', 'name);', 'void', 'store(ScalarMetaData', 'scalarMetaData);', '}', '```']",challenge not surrounded by ''': ,
"from direct.distributed import DistributedObject
from toontown.effects.FireworkShowMixin import FireworkShowMixin

class DistributedFireworkShow(DistributedObject.DistributedObject, FireworkShowMixin):
    notify = directNotify.newCategory('DistributedFireworkShow')

    def __init__(self, cr):
        DistributedObject.DistributedObject.__init__(self, cr)
        FireworkShowMixin.__init__(self)

    def generate(self):
        DistributedObject.DistributedObject.generate(self)

    def disable(self):
        DistributedObject.DistributedObject.disable(self)
        FireworkShowMixin.disable(self)

    def delete(self):
        DistributedObject.DistributedObject.delete(self)

    def d_requestFirework(self, x, y, z, style, color1, color2):
        self.sendUpdate('requestFirework', (x,
         y,
         z,
         style,
         color1,
         color2))
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```from', 'direct.distributed', 'import', 'DistributedObject', 'from', 'toontown.effects.FireworkShowMixin', 'import', 'FireworkShowMixin', 'class', 'DistributedFireworkShow(DistributedObject.DistributedObject,', 'FireworkShowMixin):', 'notify', '=', ""directNotify.newCategory('DistributedFireworkShow')"", 'def', '__init__(self,', 'cr):', 'DistributedObject.DistributedObject.__init__(self,', 'cr)', 'FireworkShowMixin.__init__(self)', 'def', 'generate(self):', 'DistributedObject.DistributedObject.generate(self)', 'def', 'disable(self):', 'DistributedObject.DistributedObject.disable(self)', 'FireworkShowMixin.disable(self)', 'def', 'delete(self):', 'DistributedObject.DistributedObject.delete(self)', 'def', 'd_requestFirework(self,', 'x,', 'y,', 'z,', 'style,', 'color1,', 'color2):', ""self.sendUpdate('requestFirework',"", '(x,', 'y,', 'z,', 'style,', 'color1,', 'color2))', '```']",challenge not surrounded by ''': ,
"'use strict';

var SynapsePay = require('../../lib/SynapsePay');
var _ = require('lodash');

// Make sure we are running in sandbox
SynapsePay.apiBase = SynapsePay.apiSandbox;
SynapsePay.clientId = ""4528d2e0a2988064d8ac"";
SynapsePay.clientSecret = ""dcbf52b16040c94a35f345b7e2c285f936d673c9"";

// With a promise
SynapsePay.User.refreshAccess(""8a3e6f5d023acb7905ba52216fa2b26c0989fab1"").then(function(client) {
  console.log(client);

}).catch(function(err) {
  console.log(""Got an error in User#refreshAccess."");
  console.log(err);
});

// With a callback
SynapsePay.User.refreshAccess(""8a3e6f5d023acb7905ba52216fa2b26c0989fab1"", function(client, err) {
  if(err) {
    console.log(""Got an error in User#refreshAccess."");
    console.log(err);
  } else {
    console.log(client);

  }
});
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', ""```'use"", ""strict';"", 'var', 'SynapsePay', '=', ""require('../../lib/SynapsePay');"", 'var', '_', '=', ""require('lodash');"", '//', 'Make', 'sure', 'we', 'are', 'running', 'in', 'sandbox', 'SynapsePay.apiBase', '=', 'SynapsePay.apiSandbox;', 'SynapsePay.clientId', '=', '""4528d2e0a2988064d8ac"";', 'SynapsePay.clientSecret', '=', '""dcbf52b16040c94a35f345b7e2c285f936d673c9"";', '//', 'With', 'a', 'promise', 'SynapsePay.User.refreshAccess(""8a3e6f5d023acb7905ba52216fa2b26c0989fab1"").then(function(client)', '{', 'console.log(client);', '}).catch(function(err)', '{', 'console.log(""Got', 'an', 'error', 'in', 'User#refreshAccess."");', 'console.log(err);', '});', '//', 'With', 'a', 'callback', 'SynapsePay.User.refreshAccess(""8a3e6f5d023acb7905ba52216fa2b26c0989fab1"",', 'function(client,', 'err)', '{', 'if(err)', '{', 'console.log(""Got', 'an', 'error', 'in', 'User#refreshAccess."");', 'console.log(err);', '}', 'else', '{', 'console.log(client);', '}', '});', '```']",challenge not surrounded by ''': ,
"""use strict"";

var Backbone = require(""../application/Backbone"");
var noop = require(""../util/noop"");
var isApplicationLink = require(""../controlling/isApplicationLink"");

var DEFAULT_REDIRECT_APP_ROOT = """";

function Response() {
    return this.initialize.apply(this, arguments);
}

Response.prototype = {

    initialize: noop,

    status: noop,

    set: noop,

    redirect: noop,

    redirectDestinationFrom: function(destination) {
        if (isApplicationLink(destination)) {
            return this.constructor.appRootForRedirect + ""/"" + destination;
        }

        return destination;
    }

};

Response.INTERRUPT_RENDERING = {};
Response.DEFAULT_REDIRECT_APP_ROOT = ""/"";
Response.appRootForRedirect = DEFAULT_REDIRECT_APP_ROOT;

Response.setAppRoot = function(appRoot) {
    this.appRootForRedirect = appRoot ? appRoot : DEFAULT_REDIRECT_APP_ROOT;
};

Response.extend = Backbone.Model.extend;

module.exports = Response;

// ----------------------------------------------------------------------------
// Copyright (C) 2016 Bloomberg Finance L.P.
//
// Licensed under the Apache License, Version 2.0 (the ""License"");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an ""AS IS"" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ----------------------------- END-OF-FILE ----------------------------------
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```""use', 'strict"";', 'var', 'Backbone', '=', 'require(""../application/Backbone"");', 'var', 'noop', '=', 'require(""../util/noop"");', 'var', 'isApplicationLink', '=', 'require(""../controlling/isApplicationLink"");', 'var', 'DEFAULT_REDIRECT_APP_ROOT', '=', '"""";', 'function', 'Response()', '{', 'return', 'this.initialize.apply(this,', 'arguments);', '}', 'Response.prototype', '=', '{', 'initialize:', 'noop,', 'status:', 'noop,', 'set:', 'noop,', 'redirect:', 'noop,', 'redirectDestinationFrom:', 'function(destination)', '{', 'if', '(isApplicationLink(destination))', '{', 'return', 'this.constructor.appRootForRedirect', '+', '""/""', '+', 'destination;', '}', 'return', 'destination;', '}', '};', 'Response.INTERRUPT_RENDERING', '=', '{};', 'Response.DEFAULT_REDIRECT_APP_ROOT', '=', '""/"";', 'Response.appRootForRedirect', '=', 'DEFAULT_REDIRECT_APP_ROOT;', 'Response.setAppRoot', '=', 'function(appRoot)', '{', 'this.appRootForRedirect', '=', 'appRoot', '?', 'appRoot', ':', 'DEFAULT_REDIRECT_APP_ROOT;', '};', 'Response.extend', '=', 'Backbone.Model.extend;', 'module.exports', '=', 'Response;', '//', '----------------------------------------------------------------------------', '//', 'Copyright', '(C)', '2016', 'Bloomberg', 'Finance', 'L.P.', '//', '//', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '//', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '//', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '//', 'http://www.apache.org/licenses/LICENSE-2.0', '//', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '//', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '//', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '//', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '//', 'limitations', 'under', 'the', 'License.', '//', '//', '-----------------------------', 'END-OF-FILE', '----------------------------------', '```']",challenge not surrounded by ''': ,
"package com.pillowdrift.drillergame.entities;

import com.pillowdrift.drillergame.framework.Sprite;
import com.pillowdrift.drillergame.framework.Utils;
import com.pillowdrift.drillergame.other.SpawnableManager;
import com.pillowdrift.drillergame.scenes.GameScene;

/**
 * Entity which provides the player with a certain amount of boost fuel when collected.
 * @author cake_cruncher_7
 *
 */
public class Hotrock extends RunningItem
{

	protected float _fuelValue = 50.0f;
	
	public Hotrock(GameScene parent, SpawnableManager manager)
	{
		super(parent, manager);

		//Set origin to half texture resolution
		_originX = 16.0f;
		_originY = 16.0f;
		//Set up the texture
		_sprites.addSprite(""idle"", new Sprite(_parent.getResourceManager().getAtlasRegion(""atlas01"", ""hotrock""), 32, 3.0f));
		_sprites.setCurrentSpriteName(""idle"");
	}

	//Override player collision
	@Override
	public void touchPlayer(Player player)
	{
		//Add this rock to the player's fuel resources
		player.giveFuel(_fuelValue);
		
		//Call default
		super.touchPlayer(player);
	}

	//Override positioning
	@Override
	public void activate()
	{
		super.activate();
		_x = _parent.getTargetWidth() + 64.0f;
		_y = Utils.randomF(GameScene.WORLD_BEDROCK_HEIGHT + 20.0f, GameScene.WORLD_BEDROCK_HEIGHT + 60.0f);
	}
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.pillowdrift.drillergame.entities;', 'import', 'com.pillowdrift.drillergame.framework.Sprite;', 'import', 'com.pillowdrift.drillergame.framework.Utils;', 'import', 'com.pillowdrift.drillergame.other.SpawnableManager;', 'import', 'com.pillowdrift.drillergame.scenes.GameScene;', '/**', '*', 'Entity', 'which', 'provides', 'the', 'player', 'with', 'a', 'certain', 'amount', 'of', 'boost', 'fuel', 'when', 'collected.', '*', '@author', 'cake_cruncher_7', '*', '*/', 'public', 'class', 'Hotrock', 'extends', 'RunningItem', '{', 'protected', 'float', '_fuelValue', '=', '50.0f;', 'public', 'Hotrock(GameScene', 'parent,', 'SpawnableManager', 'manager)', '{', 'super(parent,', 'manager);', '//Set', 'origin', 'to', 'half', 'texture', 'resolution', '_originX', '=', '16.0f;', '_originY', '=', '16.0f;', '//Set', 'up', 'the', 'texture', '_sprites.addSprite(""idle"",', 'new', 'Sprite(_parent.getResourceManager().getAtlasRegion(""atlas01"",', '""hotrock""),', '32,', '3.0f));', '_sprites.setCurrentSpriteName(""idle"");', '}', '//Override', 'player', 'collision', '@Override', 'public', 'void', 'touchPlayer(Player', 'player)', '{', '//Add', 'this', 'rock', 'to', 'the', ""player's"", 'fuel', 'resources', 'player.giveFuel(_fuelValue);', '//Call', 'default', 'super.touchPlayer(player);', '}', '//Override', 'positioning', '@Override', 'public', 'void', 'activate()', '{', 'super.activate();', '_x', '=', '_parent.getTargetWidth()', '+', '64.0f;', '_y', '=', 'Utils.randomF(GameScene.WORLD_BEDROCK_HEIGHT', '+', '20.0f,', 'GameScene.WORLD_BEDROCK_HEIGHT', '+', '60.0f);', '}', '}', '```']",challenge not surrounded by ''': ,
"<HTML><HEAD>
<TITLE>Review for Hai shang hua (1998)</TITLE>
<LINK REL=""STYLESHEET"" TYPE=""text/css"" HREF=""/ramr.css"">
</HEAD>
<BODY BGCOLOR=""#FFFFFF"" TEXT=""#000000"">
<H1 ALIGN=""CENTER"" CLASS=""title""><A HREF=""/Title?0156587"">Hai shang hua (1998)</A></H1><H3 ALIGN=CENTER>reviewed by<BR><A HREF=""/ReviewsBy?Mark+R.+Leeper"">Mark R. Leeper</A></H3><HR WIDTH=""40%"" SIZE=""4"">
<P>  FLOWERS OF SHANGHAI (Taiwan/Japanese, in Chinese with subtitles)
         A review by Mark R. Leeper in bullet-list form
           from the Toronto Internation Film Festival</P>
<P>     CAPSULE: Static and dull story set in Shanghai brothels of the
1880s.  The camerawork of this film is minimal and we basically have a
stage play in which almost all of the action is offstage.  Nice
historic recreations of room decor cannot make this film interesting to
audiences.  Rating:  3 (0 to 10) -1  (-4 to +4)</P>
<P>   - Directed by Hou Hsiao-Hsien.
   - 124 minutes, but seems a lot longer.
   - Film constructed of long sequences set in beautifully appointed
     rooms.  Long pauses between dialog.  Camera just shifts to the
     character speaking so whole scene appears shot in one take.
   - 1880s Shanghai brothels.  Character names like Crimson and Jade.
     To Western eyes may be hard to tell major characters apart.
   - Music sounds like done on one-string instrument.  Very downbeat.
   - Early scenes in heavy sepia tone though later ones seem to use
     more natural colors.
   - Characters seem to be forever eating, drinking tea, smoking, and
     gossiping.
   - Every scene ends in slow fade to black.
   - Only two scenes have any action beyond talk.
   - Very much like a stage play.
   - Some sort of numbers game repeatedly played over banquets, but not
     clear what the rules are.  It looks something like our Evens and
     Odds.
   - Women seem to be involved with little but jealousy, hatred, and
     greed.
   - Style reminiscent of Fassbinder's EFFIE BRIEST.
   - Shown in a large theater, but many people walking out.
   - Better knowledge of Chinese culture might have helped.</P>
<PRE>                                        Mark R. Leeper
                                        <A HREF=""mailto:mleeper@lucent.com"">mleeper@lucent.com</A>
                                        Copyright 1998 Mark R. Leeper</PRE>
<HR><P CLASS=flush><SMALL>The review above was posted to the
<A HREF=""news:rec.arts.movies.reviews"">rec.arts.movies.reviews</A> newsgroup (<A HREF=""news:de.rec.film.kritiken"">de.rec.film.kritiken</A> for German reviews).<BR>
The Internet Movie Database accepts no responsibility for the contents of the
review and has no editorial control. Unless stated otherwise, the copyright
belongs to the author.<BR>
Please direct comments/criticisms of the review to relevant newsgroups.<BR>
Broken URLs inthe reviews are the responsibility of the author.<BR>
The formatting of the review is likely to differ from the original due
to ASCII to HTML conversion.
</SMALL></P>
<P ALIGN=CENTER>Related links: <A HREF=""/Reviews/"">index of all rec.arts.movies.reviews reviews</A></P>



</P></BODY></HTML>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<HTML><HEAD>', '<TITLE>Review', 'for', 'Hai', 'shang', 'hua', '(1998)</TITLE>', '<LINK', 'REL=""STYLESHEET""', 'TYPE=""text/css""', 'HREF=""/ramr.css"">', '</HEAD>', '<BODY', 'BGCOLOR=""#FFFFFF""', 'TEXT=""#000000"">', '<H1', 'ALIGN=""CENTER""', 'CLASS=""title""><A', 'HREF=""/Title?0156587"">Hai', 'shang', 'hua', '(1998)</A></H1><H3', 'ALIGN=CENTER>reviewed', 'by<BR><A', 'HREF=""/ReviewsBy?Mark+R.+Leeper"">Mark', 'R.', 'Leeper</A></H3><HR', 'WIDTH=""40%""', 'SIZE=""4"">', '<P>', 'FLOWERS', 'OF', 'SHANGHAI', '(Taiwan/Japanese,', 'in', 'Chinese', 'with', 'subtitles)', 'A', 'review', 'by', 'Mark', 'R.', 'Leeper', 'in', 'bullet-list', 'form', 'from', 'the', 'Toronto', 'Internation', 'Film', 'Festival</P>', '<P>', 'CAPSULE:', 'Static', 'and', 'dull', 'story', 'set', 'in', 'Shanghai', 'brothels', 'of', 'the', '1880s.', 'The', 'camerawork', 'of', 'this', 'film', 'is', 'minimal', 'and', 'we', 'basically', 'have', 'a', 'stage', 'play', 'in', 'which', 'almost', 'all', 'of', 'the', 'action', 'is', 'offstage.', 'Nice', 'historic', 'recreations', 'of', 'room', 'decor', 'cannot', 'make', 'this', 'film', 'interesting', 'to', 'audiences.', 'Rating:', '3', '(0', 'to', '10)', '-1', '(-4', 'to', '+4)</P>', '<P>', '-', 'Directed', 'by', 'Hou', 'Hsiao-Hsien.', '-', '124', 'minutes,', 'but', 'seems', 'a', 'lot', 'longer.', '-', 'Film', 'constructed', 'of', 'long', 'sequences', 'set', 'in', 'beautifully', 'appointed', 'rooms.', 'Long', 'pauses', 'between', 'dialog.', 'Camera', 'just', 'shifts', 'to', 'the', 'character', 'speaking', 'so', 'whole', 'scene', 'appears', 'shot', 'in', 'one', 'take.', '-', '1880s', 'Shanghai', 'brothels.', 'Character', 'names', 'like', 'Crimson', 'and', 'Jade.', 'To', 'Western', 'eyes', 'may', 'be', 'hard', 'to', 'tell', 'major', 'characters', 'apart.', '-', 'Music', 'sounds', 'like', 'done', 'on', 'one-string', 'instrument.', 'Very', 'downbeat.', '-', 'Early', 'scenes', 'in', 'heavy', 'sepia', 'tone', 'though', 'later', 'ones', 'seem', 'to', 'use', 'more', 'natural', 'colors.', '-', 'Characters', 'seem', 'to', 'be', 'forever', 'eating,', 'drinking', 'tea,', 'smoking,', 'and', 'gossiping.', '-', 'Every', 'scene', 'ends', 'in', 'slow', 'fade', 'to', 'black.', '-', 'Only', 'two', 'scenes', 'have', 'any', 'action', 'beyond', 'talk.', '-', 'Very', 'much', 'like', 'a', 'stage', 'play.', '-', 'Some', 'sort', 'of', 'numbers', 'game', 'repeatedly', 'played', 'over', 'banquets,', 'but', 'not', 'clear', 'what', 'the', 'rules', 'are.', 'It', 'looks', 'something', 'like', 'our', 'Evens', 'and', 'Odds.', '-', 'Women', 'seem', 'to', 'be', 'involved', 'with', 'little', 'but', 'jealousy,', 'hatred,', 'and', 'greed.', '-', 'Style', 'reminiscent', 'of', ""Fassbinder's"", 'EFFIE', 'BRIEST.', '-', 'Shown', 'in', 'a', 'large', 'theater,', 'but', 'many', 'people', 'walking', 'out.', '-', 'Better', 'knowledge', 'of', 'Chinese', 'culture', 'might', 'have', 'helped.</P>', '<PRE>', 'Mark', 'R.', 'Leeper', '<A', 'HREF=""mailto:mleeper@lucent.com"">mleeper@lucent.com</A>', 'Copyright', '1998', 'Mark', 'R.', 'Leeper</PRE>', '<HR><P', 'CLASS=flush><SMALL>The', 'review', 'above', 'was', 'posted', 'to', 'the', '<A', 'HREF=""news:rec.arts.movies.reviews"">rec.arts.movies.reviews</A>', 'newsgroup', '(<A', 'HREF=""news:de.rec.film.kritiken"">de.rec.film.kritiken</A>', 'for', 'German', 'reviews).<BR>', 'The', 'Internet', 'Movie', 'Database', 'accepts', 'no', 'responsibility', 'for', 'the', 'contents', 'of', 'the', 'review', 'and', 'has', 'no', 'editorial', 'control.', 'Unless', 'stated', 'otherwise,', 'the', 'copyright', 'belongs', 'to', 'the', 'author.<BR>', 'Please', 'direct', 'comments/criticisms', 'of', 'the', 'review', 'to', 'relevant', 'newsgroups.<BR>', 'Broken', 'URLs', 'inthe', 'reviews', 'are', 'the', 'responsibility', 'of', 'the', 'author.<BR>', 'The', 'formatting', 'of', 'the', 'review', 'is', 'likely', 'to', 'differ', 'from', 'the', 'original', 'due', 'to', 'ASCII', 'to', 'HTML', 'conversion.', '</SMALL></P>', '<P', 'ALIGN=CENTER>Related', 'links:', '<A', 'HREF=""/Reviews/"">index', 'of', 'all', 'rec.arts.movies.reviews', 'reviews</A></P>', '</P></BODY></HTML>', '```']",challenge not surrounded by ''': ,
"/*
 * ################################################################
 *
 * ProActive Parallel Suite(TM): The Java(TM) library for
 *    Parallel, Distributed, Multi-Core Computing for
 *    Enterprise Grids & Clouds
 *
 * Copyright (C) 1997-2012 INRIA/University of
 *                 Nice-Sophia Antipolis/ActiveEon
 * Contact: proactive@ow2.org or contact@activeeon.com
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Affero General Public License
 * as published by the Free Software Foundation; version 3 of
 * the License.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307
 * USA
 *
 * If needed, contact us to obtain a release under GPL Version 2 or 3
 * or a different license than the AGPL.
 *
 *  Initial developer(s):               The ProActive Team
 *                        http://proactive.inria.fr/team_members.htm
 *  Contributor(s):
 *
 * ################################################################
 * $$PROACTIVE_INITIAL_DEV$$
 */
package functionaltests.scilab;

import org.junit.After;
import org.junit.Before;


/**
 * TestBasic this test the basic Scilab toolbox functionalities PAsolve, PAwaitFor, PAwaitAny, user errors
 *
 * @author The ProActive Team
 */
public class TestBasic extends AbstractScilabTest {

    @Before
    public void before() throws Exception {
       start();
    }

    @org.junit.Test
    public void run() throws Throwable {
        super.run();
        runCommand(""TestBasic"", 1);
    }

    @After
    public void after() throws Exception {
        end();
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', '################################################################', '*', '*', 'ProActive', 'Parallel', 'Suite(TM):', 'The', 'Java(TM)', 'library', 'for', '*', 'Parallel,', 'Distributed,', 'Multi-Core', 'Computing', 'for', '*', 'Enterprise', 'Grids', '&', 'Clouds', '*', '*', 'Copyright', '(C)', '1997-2012', 'INRIA/University', 'of', '*', 'Nice-Sophia', 'Antipolis/ActiveEon', '*', 'Contact:', 'proactive@ow2.org', 'or', 'contact@activeeon.com', '*', '*', 'This', 'library', 'is', 'free', 'software;', 'you', 'can', 'redistribute', 'it', 'and/or', '*', 'modify', 'it', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'Affero', 'General', 'Public', 'License', '*', 'as', 'published', 'by', 'the', 'Free', 'Software', 'Foundation;', 'version', '3', 'of', '*', 'the', 'License.', '*', '*', 'This', 'library', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', '*', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', '*', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', 'GNU', '*', 'Affero', 'General', 'Public', 'License', 'for', 'more', 'details.', '*', '*', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'Affero', 'General', 'Public', 'License', '*', 'along', 'with', 'this', 'library;', 'if', 'not,', 'write', 'to', 'the', 'Free', 'Software', '*', 'Foundation,', 'Inc.,', '59', 'Temple', 'Place,', 'Suite', '330,', 'Boston,', 'MA', '02111-1307', '*', 'USA', '*', '*', 'If', 'needed,', 'contact', 'us', 'to', 'obtain', 'a', 'release', 'under', 'GPL', 'Version', '2', 'or', '3', '*', 'or', 'a', 'different', 'license', 'than', 'the', 'AGPL.', '*', '*', 'Initial', 'developer(s):', 'The', 'ProActive', 'Team', '*', 'http://proactive.inria.fr/team_members.htm', '*', 'Contributor(s):', '*', '*', '################################################################', '*', '$$PROACTIVE_INITIAL_DEV$$', '*/', 'package', 'functionaltests.scilab;', 'import', 'org.junit.After;', 'import', 'org.junit.Before;', '/**', '*', 'TestBasic', 'this', 'test', 'the', 'basic', 'Scilab', 'toolbox', 'functionalities', 'PAsolve,', 'PAwaitFor,', 'PAwaitAny,', 'user', 'errors', '*', '*', '@author', 'The', 'ProActive', 'Team', '*/', 'public', 'class', 'TestBasic', 'extends', 'AbstractScilabTest', '{', '@Before', 'public', 'void', 'before()', 'throws', 'Exception', '{', 'start();', '}', '@org.junit.Test', 'public', 'void', 'run()', 'throws', 'Throwable', '{', 'super.run();', 'runCommand(""TestBasic"",', '1);', '}', '@After', 'public', 'void', 'after()', 'throws', 'Exception', '{', 'end();', '}', '}', '```']",challenge not surrounded by ''': ,
"#include <ctype.h>

using namespace std;

class Solution {
private:
	char digits[10], *p;
public:
	Solution() {
		for (int i=0; i<10; i++) {
			digits[i] = i + '0';
		}
	}
	bool isDigit(char c) {
		for (int i=0; i<10; i++) {
			if (digits[i] == c) return true;
		}
		return false;
	}
	bool is1To9(char c) {
		for (int i=1; i<10; i++) {
			if (digits[i] == c) return true;
		}
		return false;
	}
	char* advanceWhiteSpace() {
		while (isspace(*p)) p++;
	}
    bool isNumber(const char *s) {
		p = (char*)s;
		advanceWhiteSpace();
		if (*p == '-' || *p == '+') p++;

		if (is1To9(*p)) {
			while (isDigit(*p)) p++; 
			if (*p == '.') {
				p++;
				if (!(*p == 'e' || isDigit(*p) || *p == NULL || isspace(*p))) return false;
			}
		}
		else if (*p == '0') {
			p++;
			if (*p == 'x' || *p == 'X') {
				p++;
				if (!(*p == 'e' || isDigit(*p))) return false;
			}
			while (isDigit(*p)) p++;
			if (*p == '.') {
				p++;
				if (!(*p == 'e' || isDigit(*p) || *p == NULL || isspace(*p))) return false;
			}
		}
		else if (*p == '.') {
			p++;
			if (!(isDigit(*p))) return false;
		}
		else return false;

		if (isDigit(*p)) {
			while (isDigit(*p)) p++;
		}
		if (*p == 'e' || *p == 'E') {
			p++;
	    	if (*p == '+' || *p == '-') p++;
	    	if (isDigit(*p)) {
	    		while (isDigit(*p)) p++;
	    	}
			else return false;
		}
		advanceWhiteSpace();
		if (*p == NULL) return true;
		else return false;
    }
};","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#include', '<ctype.h>', 'using', 'namespace', 'std;', 'class', 'Solution', '{', 'private:', 'char', 'digits[10],', '*p;', 'public:', 'Solution()', '{', 'for', '(int', 'i=0;', 'i<10;', 'i++)', '{', 'digits[i]', '=', 'i', '+', ""'0';"", '}', '}', 'bool', 'isDigit(char', 'c)', '{', 'for', '(int', 'i=0;', 'i<10;', 'i++)', '{', 'if', '(digits[i]', '==', 'c)', 'return', 'true;', '}', 'return', 'false;', '}', 'bool', 'is1To9(char', 'c)', '{', 'for', '(int', 'i=1;', 'i<10;', 'i++)', '{', 'if', '(digits[i]', '==', 'c)', 'return', 'true;', '}', 'return', 'false;', '}', 'char*', 'advanceWhiteSpace()', '{', 'while', '(isspace(*p))', 'p++;', '}', 'bool', 'isNumber(const', 'char', '*s)', '{', 'p', '=', '(char*)s;', 'advanceWhiteSpace();', 'if', '(*p', '==', ""'-'"", '||', '*p', '==', ""'+')"", 'p++;', 'if', '(is1To9(*p))', '{', 'while', '(isDigit(*p))', 'p++;', 'if', '(*p', '==', ""'.')"", '{', 'p++;', 'if', '(!(*p', '==', ""'e'"", '||', 'isDigit(*p)', '||', '*p', '==', 'NULL', '||', 'isspace(*p)))', 'return', 'false;', '}', '}', 'else', 'if', '(*p', '==', ""'0')"", '{', 'p++;', 'if', '(*p', '==', ""'x'"", '||', '*p', '==', ""'X')"", '{', 'p++;', 'if', '(!(*p', '==', ""'e'"", '||', 'isDigit(*p)))', 'return', 'false;', '}', 'while', '(isDigit(*p))', 'p++;', 'if', '(*p', '==', ""'.')"", '{', 'p++;', 'if', '(!(*p', '==', ""'e'"", '||', 'isDigit(*p)', '||', '*p', '==', 'NULL', '||', 'isspace(*p)))', 'return', 'false;', '}', '}', 'else', 'if', '(*p', '==', ""'.')"", '{', 'p++;', 'if', '(!(isDigit(*p)))', 'return', 'false;', '}', 'else', 'return', 'false;', 'if', '(isDigit(*p))', '{', 'while', '(isDigit(*p))', 'p++;', '}', 'if', '(*p', '==', ""'e'"", '||', '*p', '==', ""'E')"", '{', 'p++;', 'if', '(*p', '==', ""'+'"", '||', '*p', '==', ""'-')"", 'p++;', 'if', '(isDigit(*p))', '{', 'while', '(isDigit(*p))', 'p++;', '}', 'else', 'return', 'false;', '}', 'advanceWhiteSpace();', 'if', '(*p', '==', 'NULL)', 'return', 'true;', 'else', 'return', 'false;', '}', '};```']",challenge not surrounded by ''': ,
"/**
 * @author weism
 * copyright 2015 Qcplay All Rights Reserved.
 */

var PauseBtn = qc.defineBehaviour('qc.demo.PauseBtn', qc.Behaviour, function() {
    this.sprite = null;
}, {
    sprite: qc.Serializer.NODE
});

PauseBtn.prototype.onClick = function() {
    this.sprite.paused = !this.sprite.paused;
};
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', '@author', 'weism', '*', 'copyright', '2015', 'Qcplay', 'All', 'Rights', 'Reserved.', '*/', 'var', 'PauseBtn', '=', ""qc.defineBehaviour('qc.demo.PauseBtn',"", 'qc.Behaviour,', 'function()', '{', 'this.sprite', '=', 'null;', '},', '{', 'sprite:', 'qc.Serializer.NODE', '});', 'PauseBtn.prototype.onClick', '=', 'function()', '{', 'this.sprite.paused', '=', '!this.sprite.paused;', '};', '```']",challenge not surrounded by ''': ,
"/**
 GaiaEHR (Electronic Health Records)
 Copyright (C) 2013 Certun, LLC.

 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

Ext.define('App.store.patient.Encounter', {
	extend: 'Ext.data.Store',
	requires: ['App.model.patient.Encounter'],
	pageSize: 10,
	model   : 'App.model.patient.Encounter'
});","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', 'GaiaEHR', '(Electronic', 'Health', 'Records)', 'Copyright', '(C)', '2013', 'Certun,', 'LLC.', 'This', 'program', 'is', 'free', 'software:', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', 'it', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'as', 'published', 'by', 'the', 'Free', 'Software', 'Foundation,', 'either', 'version', '3', 'of', 'the', 'License,', 'or', '(at', 'your', 'option)', 'any', 'later', 'version.', 'This', 'program', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', 'GNU', 'General', 'Public', 'License', 'for', 'more', 'details.', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'along', 'with', 'this', 'program.', 'If', 'not,', 'see', '<http://www.gnu.org/licenses/>.', '*/', ""Ext.define('App.store.patient.Encounter',"", '{', 'extend:', ""'Ext.data.Store',"", 'requires:', ""['App.model.patient.Encounter'],"", 'pageSize:', '10,', 'model', ':', ""'App.model.patient.Encounter'"", '});```']",challenge not surrounded by ''': ,
"package org.nasdanika.cdo.validation;

import java.util.Map;

import org.apache.commons.jxpath.ClassFunctions;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Variables;
import org.eclipse.emf.common.util.BasicDiagnostic;
import org.eclipse.emf.common.util.Diagnostic;
import org.eclipse.emf.common.util.DiagnosticChain;
import org.eclipse.emf.ecore.EObject;
import org.nasdanika.cdo.xpath.EMFFunctions;

/**
 * Validator which uses XPath expression.
 * @author Pavel Vlasov
 *
 */
public class XPathValidator implements Validator<EObject> {
	
	private String condition;
	private String severity;
	private String message;
	private String feature;
	
	/**
	 * XPath expression which should evaluate to true for successful validation.
	 * @param condition
	 */
	public void setCondition(String condition) {
		this.condition = condition;
	}
	
	/**
	 * Validation severity - 'WARNING' or 'ERROR', defaults to 'ERROR'
	 * @param severity
	 */
	public void setSeverity(String severity) {
		this.severity = severity;
	}
	
	/**
	 * Validation message, defaults to 'Constraint violation: '+<code>condition</code>.
	 * @param message
	 */
	public void setMessage(String message) {
		this.message = message;
	}
	
	/**
	 * Optional name of the structural feature (attribute or reference) being validated.
	 * @param feature
	 */
	public void setFeature(String feature) {
		this.feature = feature;
	}

	/**
	 * Evaluates condition with 'this', 'root', and 'context' variables.
	 */
	@Override
	public boolean validate(EObject eObject, DiagnosticChain diagnostics, Map<Object, Object> context) {
		try {
			JXPathContext jxPathContext = JXPathContext.newContext(eObject);
			jxPathContext.setLenient(true);
			Variables variables = jxPathContext.getVariables();
			if (context != null) {
				variables.declareVariable(""context"", context);
			}
			
			variables.declareVariable(""this"", eObject);
			EObject root = eObject;
			while (root.eContainer() instanceof EObject) {
				root = (EObject) root.eContainer();
			}
			variables.declareVariable(""root"", root);
			
			jxPathContext.setFunctions(new ClassFunctions(EMFFunctions.class, ""ecore""));
			
			if (!Boolean.TRUE.equals(jxPathContext.getValue(condition, Boolean.TYPE))) {			 
				Object[] data = feature == null ? new Object[] { eObject } : new Object[] { eObject, eObject.eClass().getEStructuralFeature(feature) };
				diagnostics.add(new BasicDiagnostic(
						""WARNING"".equals(severity) ? Diagnostic.WARNING : Diagnostic.ERROR, 
						getClass().getName(), 
						0, 
						message == null ? ""Constraint violation: ""+condition : message,
						data));
				return false;
			}						
			
			return true;
		} catch (Exception e) {
			diagnostics.add(new BasicDiagnostic(Diagnostic.WARNING, getClass().getName(), 0, ""Exception evaluating '""+condition+""': ""+e, new Object[] { eObject, e, condition }));
			return false;			
		}
	}

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'org.nasdanika.cdo.validation;', 'import', 'java.util.Map;', 'import', 'org.apache.commons.jxpath.ClassFunctions;', 'import', 'org.apache.commons.jxpath.JXPathContext;', 'import', 'org.apache.commons.jxpath.Variables;', 'import', 'org.eclipse.emf.common.util.BasicDiagnostic;', 'import', 'org.eclipse.emf.common.util.Diagnostic;', 'import', 'org.eclipse.emf.common.util.DiagnosticChain;', 'import', 'org.eclipse.emf.ecore.EObject;', 'import', 'org.nasdanika.cdo.xpath.EMFFunctions;', '/**', '*', 'Validator', 'which', 'uses', 'XPath', 'expression.', '*', '@author', 'Pavel', 'Vlasov', '*', '*/', 'public', 'class', 'XPathValidator', 'implements', 'Validator<EObject>', '{', 'private', 'String', 'condition;', 'private', 'String', 'severity;', 'private', 'String', 'message;', 'private', 'String', 'feature;', '/**', '*', 'XPath', 'expression', 'which', 'should', 'evaluate', 'to', 'true', 'for', 'successful', 'validation.', '*', '@param', 'condition', '*/', 'public', 'void', 'setCondition(String', 'condition)', '{', 'this.condition', '=', 'condition;', '}', '/**', '*', 'Validation', 'severity', '-', ""'WARNING'"", 'or', ""'ERROR',"", 'defaults', 'to', ""'ERROR'"", '*', '@param', 'severity', '*/', 'public', 'void', 'setSeverity(String', 'severity)', '{', 'this.severity', '=', 'severity;', '}', '/**', '*', 'Validation', 'message,', 'defaults', 'to', ""'Constraint"", 'violation:', ""'+<code>condition</code>."", '*', '@param', 'message', '*/', 'public', 'void', 'setMessage(String', 'message)', '{', 'this.message', '=', 'message;', '}', '/**', '*', 'Optional', 'name', 'of', 'the', 'structural', 'feature', '(attribute', 'or', 'reference)', 'being', 'validated.', '*', '@param', 'feature', '*/', 'public', 'void', 'setFeature(String', 'feature)', '{', 'this.feature', '=', 'feature;', '}', '/**', '*', 'Evaluates', 'condition', 'with', ""'this',"", ""'root',"", 'and', ""'context'"", 'variables.', '*/', '@Override', 'public', 'boolean', 'validate(EObject', 'eObject,', 'DiagnosticChain', 'diagnostics,', 'Map<Object,', 'Object>', 'context)', '{', 'try', '{', 'JXPathContext', 'jxPathContext', '=', 'JXPathContext.newContext(eObject);', 'jxPathContext.setLenient(true);', 'Variables', 'variables', '=', 'jxPathContext.getVariables();', 'if', '(context', '!=', 'null)', '{', 'variables.declareVariable(""context"",', 'context);', '}', 'variables.declareVariable(""this"",', 'eObject);', 'EObject', 'root', '=', 'eObject;', 'while', '(root.eContainer()', 'instanceof', 'EObject)', '{', 'root', '=', '(EObject)', 'root.eContainer();', '}', 'variables.declareVariable(""root"",', 'root);', 'jxPathContext.setFunctions(new', 'ClassFunctions(EMFFunctions.class,', '""ecore""));', 'if', '(!Boolean.TRUE.equals(jxPathContext.getValue(condition,', 'Boolean.TYPE)))', '{', 'Object[]', 'data', '=', 'feature', '==', 'null', '?', 'new', 'Object[]', '{', 'eObject', '}', ':', 'new', 'Object[]', '{', 'eObject,', 'eObject.eClass().getEStructuralFeature(feature)', '};', 'diagnostics.add(new', 'BasicDiagnostic(', '""WARNING"".equals(severity)', '?', 'Diagnostic.WARNING', ':', 'Diagnostic.ERROR,', 'getClass().getName(),', '0,', 'message', '==', 'null', '?', '""Constraint', 'violation:', '""+condition', ':', 'message,', 'data));', 'return', 'false;', '}', 'return', 'true;', '}', 'catch', '(Exception', 'e)', '{', 'diagnostics.add(new', 'BasicDiagnostic(Diagnostic.WARNING,', 'getClass().getName(),', '0,', '""Exception', 'evaluating', '\'""+condition+""\':', '""+e,', 'new', 'Object[]', '{', 'eObject,', 'e,', 'condition', '}));', 'return', 'false;', '}', '}', '}', '```']",challenge not surrounded by ''': ,
"package com.zhbit.dao.studentdutys;

import java.io.Serializable;
import java.util.List;

import com.zhbit.dao.BaseDao;
import com.zhbit.entity.StudentDutys;
import com.zhbit.entity.Subjectcontest;
import com.zhbit.entity.User;
/** 
 /**
 * 项目名称：ElecRecord
 * 类名称：SubjectContestDao层
 * 类描述： 学科竞赛信息管理Dao层接口 
 * 创建人：朱嘉鑫
 * 创建时间：2016年5月28日 下午21:49:05
 * 修改人：zjx 
 * 修改时间：2016年5月28日 下午21:49:05
 * 修改备注： 
 * @version 
 */ 
public interface StudentDutysDao extends BaseDao<StudentDutys> {
	public static final String DAO_NAME=""com.zhbit.dao.StudentDutys.impl.StudentDutystDaoImpl"";
	public void add(StudentDutys studentDutys);
	public List<StudentDutys> queryAllList();
	public List<StudentDutys> queryListDownload(Serializable... id);
}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.zhbit.dao.studentdutys;', 'import', 'java.io.Serializable;', 'import', 'java.util.List;', 'import', 'com.zhbit.dao.BaseDao;', 'import', 'com.zhbit.entity.StudentDutys;', 'import', 'com.zhbit.entity.Subjectcontest;', 'import', 'com.zhbit.entity.User;', '/**', '/**', '*', '项目名称：ElecRecord', '*', '类名称：SubjectContestDao层', '*', '类描述：', '学科竞赛信息管理Dao层接口', '*', '创建人：朱嘉鑫', '*', '创建时间：2016年5月28日', '下午21:49:05', '*', '修改人：zjx', '*', '修改时间：2016年5月28日', '下午21:49:05', '*', '修改备注：', '*', '@version', '*/', 'public', 'interface', 'StudentDutysDao', 'extends', 'BaseDao<StudentDutys>', '{', 'public', 'static', 'final', 'String', 'DAO_NAME=""com.zhbit.dao.StudentDutys.impl.StudentDutystDaoImpl"";', 'public', 'void', 'add(StudentDutys', 'studentDutys);', 'public', 'List<StudentDutys>', 'queryAllList();', 'public', 'List<StudentDutys>', 'queryListDownload(Serializable...', 'id);', '}```']",challenge not surrounded by ''': ,
"/**
 * @module kad/hooks/whitelist
 */

'use strict';

var assert = require('assert');

/**
 * Factory for whitelist middleware
 * #exports
 * @param {array} whitelist - list of nodeID's to allow
 */
module.exports = function WhitelistFactory(whitelist) {
  assert(Array.isArray(whitelist), 'Invalid whitelist supplied');

  return function whitelister(message, contact, next) {
    if (whitelist.indexOf(contact.nodeID) === -1) {
      return next(new Error('Contact is not in the whitelist'));
    }

    next();
  };
};
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', '@module', 'kad/hooks/whitelist', '*/', ""'use"", ""strict';"", 'var', 'assert', '=', ""require('assert');"", '/**', '*', 'Factory', 'for', 'whitelist', 'middleware', '*', '#exports', '*', '@param', '{array}', 'whitelist', '-', 'list', 'of', ""nodeID's"", 'to', 'allow', '*/', 'module.exports', '=', 'function', 'WhitelistFactory(whitelist)', '{', 'assert(Array.isArray(whitelist),', ""'Invalid"", 'whitelist', ""supplied');"", 'return', 'function', 'whitelister(message,', 'contact,', 'next)', '{', 'if', '(whitelist.indexOf(contact.nodeID)', '===', '-1)', '{', 'return', 'next(new', ""Error('Contact"", 'is', 'not', 'in', 'the', ""whitelist'));"", '}', 'next();', '};', '};', '```']",challenge not surrounded by ''': ,
"#include ""qb.hpp""

class Application : public QObject {
  Q_OBJECT

public:
  class App : public QApplication {
  public:
    #if defined(PLATFORM_WIN)
    bool winEventFilter(MSG *msg, long *result);
    #endif

    App(int &argc, char **argv) : QApplication(argc, argv) {}
  } *app;

  QTimer *timer;

  bool terminate;  //set to true to terminate main() loop and exit emulator
  bool power;
  bool pause;
  bool autopause;
  bool debug;      //debugger sets this to true when entered to suspend emulation
  bool debugrun;   //debugger sets this to true to run emulation to a debug event

  clock_t clockTime;
  clock_t autosaveTime;
  clock_t screensaverTime;

  string configFilename;
  string styleSheetFilename;

  array<QbWindow*> windowList;

  int main(int &argc, char **argv);
  void locateFile(string &filename, bool createDataDirectory = false);
  void initPaths(const char *basename);
  void init();

  Application();
  ~Application();

public slots:
  void run();
};

extern Application application;
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#include', '""qb.hpp""', 'class', 'Application', ':', 'public', 'QObject', '{', 'Q_OBJECT', 'public:', 'class', 'App', ':', 'public', 'QApplication', '{', 'public:', '#if', 'defined(PLATFORM_WIN)', 'bool', 'winEventFilter(MSG', '*msg,', 'long', '*result);', '#endif', 'App(int', '&argc,', 'char', '**argv)', ':', 'QApplication(argc,', 'argv)', '{}', '}', '*app;', 'QTimer', '*timer;', 'bool', 'terminate;', '//set', 'to', 'true', 'to', 'terminate', 'main()', 'loop', 'and', 'exit', 'emulator', 'bool', 'power;', 'bool', 'pause;', 'bool', 'autopause;', 'bool', 'debug;', '//debugger', 'sets', 'this', 'to', 'true', 'when', 'entered', 'to', 'suspend', 'emulation', 'bool', 'debugrun;', '//debugger', 'sets', 'this', 'to', 'true', 'to', 'run', 'emulation', 'to', 'a', 'debug', 'event', 'clock_t', 'clockTime;', 'clock_t', 'autosaveTime;', 'clock_t', 'screensaverTime;', 'string', 'configFilename;', 'string', 'styleSheetFilename;', 'array<QbWindow*>', 'windowList;', 'int', 'main(int', '&argc,', 'char', '**argv);', 'void', 'locateFile(string', '&filename,', 'bool', 'createDataDirectory', '=', 'false);', 'void', 'initPaths(const', 'char', '*basename);', 'void', 'init();', 'Application();', '~Application();', 'public', 'slots:', 'void', 'run();', '};', 'extern', 'Application', 'application;', '```']",challenge not surrounded by ''': ,
"/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.camel.management;

import java.util.ArrayList;
import java.util.EventObject;
import java.util.List;

import org.apache.camel.CamelContext;
import org.apache.camel.ContextTestSupport;
import org.apache.camel.builder.RouteBuilder;
import org.apache.camel.impl.DefaultCamelContext;
import org.apache.camel.spi.EventNotifier;
import org.apache.camel.support.EventNotifierSupport;

/**
 * @version 
 */
public class RemoveEventNotifierTest extends ContextTestSupport {

    private static List<EventObject> events = new ArrayList<EventObject>();
    private EventNotifier notifier;

    @Override
    public void setUp() throws Exception {
        events.clear();
        super.setUp();
    }

    @Override
    protected CamelContext createCamelContext() throws Exception {
        DefaultCamelContext context = new DefaultCamelContext(createRegistry());

        notifier = new EventNotifierSupport() {
            public void notify(EventObject event) throws Exception {
                events.add(event);
            }

            public boolean isEnabled(EventObject event) {
                return true;
            }

            @Override
            protected void doStart() throws Exception {
            }

            @Override
            protected void doStop() throws Exception {
            }
        };
        context.getManagementStrategy().addEventNotifier(notifier);

        return context;
    }

    public void testRemove() throws Exception {
        getMockEndpoint(""mock:result"").expectedMessageCount(1);
        template.sendBody(""direct:start"", ""Hello World"");
        assertMockEndpointsSatisfied();

        assertEquals(11, events.size());

        // remove and we should not get new events
        context.getManagementStrategy().removeEventNotifier(notifier);

        resetMocks();
        getMockEndpoint(""mock:result"").expectedMessageCount(1);
        template.sendBody(""direct:start"", ""Bye World"");
        assertMockEndpointsSatisfied();

        assertEquals(11, events.size());
    }

    @Override
    protected RouteBuilder createRouteBuilder() throws Exception {
        return new RouteBuilder() {
            @Override
            public void configure() throws Exception {
                from(""direct:start"").to(""log:foo"").to(""mock:result"");
            }
        };
    }

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', 'Licensed', 'to', 'the', 'Apache', 'Software', 'Foundation', '(ASF)', 'under', 'one', 'or', 'more', '*', 'contributor', 'license', 'agreements.', 'See', 'the', 'NOTICE', 'file', 'distributed', 'with', '*', 'this', 'work', 'for', 'additional', 'information', 'regarding', 'copyright', 'ownership.', '*', 'The', 'ASF', 'licenses', 'this', 'file', 'to', 'You', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '*', '(the', '""License"");', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', '*', 'the', 'License.', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'org.apache.camel.management;', 'import', 'java.util.ArrayList;', 'import', 'java.util.EventObject;', 'import', 'java.util.List;', 'import', 'org.apache.camel.CamelContext;', 'import', 'org.apache.camel.ContextTestSupport;', 'import', 'org.apache.camel.builder.RouteBuilder;', 'import', 'org.apache.camel.impl.DefaultCamelContext;', 'import', 'org.apache.camel.spi.EventNotifier;', 'import', 'org.apache.camel.support.EventNotifierSupport;', '/**', '*', '@version', '*/', 'public', 'class', 'RemoveEventNotifierTest', 'extends', 'ContextTestSupport', '{', 'private', 'static', 'List<EventObject>', 'events', '=', 'new', 'ArrayList<EventObject>();', 'private', 'EventNotifier', 'notifier;', '@Override', 'public', 'void', 'setUp()', 'throws', 'Exception', '{', 'events.clear();', 'super.setUp();', '}', '@Override', 'protected', 'CamelContext', 'createCamelContext()', 'throws', 'Exception', '{', 'DefaultCamelContext', 'context', '=', 'new', 'DefaultCamelContext(createRegistry());', 'notifier', '=', 'new', 'EventNotifierSupport()', '{', 'public', 'void', 'notify(EventObject', 'event)', 'throws', 'Exception', '{', 'events.add(event);', '}', 'public', 'boolean', 'isEnabled(EventObject', 'event)', '{', 'return', 'true;', '}', '@Override', 'protected', 'void', 'doStart()', 'throws', 'Exception', '{', '}', '@Override', 'protected', 'void', 'doStop()', 'throws', 'Exception', '{', '}', '};', 'context.getManagementStrategy().addEventNotifier(notifier);', 'return', 'context;', '}', 'public', 'void', 'testRemove()', 'throws', 'Exception', '{', 'getMockEndpoint(""mock:result"").expectedMessageCount(1);', 'template.sendBody(""direct:start"",', '""Hello', 'World"");', 'assertMockEndpointsSatisfied();', 'assertEquals(11,', 'events.size());', '//', 'remove', 'and', 'we', 'should', 'not', 'get', 'new', 'events', 'context.getManagementStrategy().removeEventNotifier(notifier);', 'resetMocks();', 'getMockEndpoint(""mock:result"").expectedMessageCount(1);', 'template.sendBody(""direct:start"",', '""Bye', 'World"");', 'assertMockEndpointsSatisfied();', 'assertEquals(11,', 'events.size());', '}', '@Override', 'protected', 'RouteBuilder', 'createRouteBuilder()', 'throws', 'Exception', '{', 'return', 'new', 'RouteBuilder()', '{', '@Override', 'public', 'void', 'configure()', 'throws', 'Exception', '{', 'from(""direct:start"").to(""log:foo"").to(""mock:result"");', '}', '};', '}', '}', '```']",challenge not surrounded by ''': ,
"import { OpaqueToken } from '@angular/core';
/**
 * `LocationStrategy` is responsible for representing and reading route state
 * from the browser's URL. Angular provides two strategies:
 * {@link HashLocationStrategy} and {@link PathLocationStrategy} (default).
 *
 * This is used under the hood of the {@link Location} service.
 *
 * Applications should use the {@link Router} or {@link Location} services to
 * interact with application route state.
 *
 * For instance, {@link HashLocationStrategy} produces URLs like
 * `http://example.com#/foo`, and {@link PathLocationStrategy} produces
 * `http://example.com/foo` as an equivalent URL.
 *
 * See these two classes for more.
 */
export class LocationStrategy {
}
/**
 * The `APP_BASE_HREF` token represents the base href to be used with the
 * {@link PathLocationStrategy}.
 *
 * If you're using {@link PathLocationStrategy}, you must provide a provider to a string
 * representing the URL prefix that should be preserved when generating and recognizing
 * URLs.
 *
 * ### Example
 *
 * ```
 * import {Component} from '@angular/core';
 * import {ROUTER_DIRECTIVES, ROUTER_PROVIDERS, RouteConfig} from '@angular/router';
 * import {APP_BASE_HREF} from '@angular/common';
 *
 * @Component({directives: [ROUTER_DIRECTIVES]})
 * @RouteConfig([
 *  {...},
 * ])
 * class AppCmp {
 *   // ...
 * }
 *
 * bootstrap(AppCmp, [
 *   ROUTER_PROVIDERS,
 *   provide(APP_BASE_HREF, {useValue: '/my/app'})
 * ]);
 * ```
 */
export const APP_BASE_HREF = new OpaqueToken('appBaseHref');
//# sourceMappingURL=location_strategy.js.map","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', '{', 'OpaqueToken', '}', 'from', ""'@angular/core';"", '/**', '*', '`LocationStrategy`', 'is', 'responsible', 'for', 'representing', 'and', 'reading', 'route', 'state', '*', 'from', 'the', ""browser's"", 'URL.', 'Angular', 'provides', 'two', 'strategies:', '*', '{@link', 'HashLocationStrategy}', 'and', '{@link', 'PathLocationStrategy}', '(default).', '*', '*', 'This', 'is', 'used', 'under', 'the', 'hood', 'of', 'the', '{@link', 'Location}', 'service.', '*', '*', 'Applications', 'should', 'use', 'the', '{@link', 'Router}', 'or', '{@link', 'Location}', 'services', 'to', '*', 'interact', 'with', 'application', 'route', 'state.', '*', '*', 'For', 'instance,', '{@link', 'HashLocationStrategy}', 'produces', 'URLs', 'like', '*', '`http://example.com#/foo`,', 'and', '{@link', 'PathLocationStrategy}', 'produces', '*', '`http://example.com/foo`', 'as', 'an', 'equivalent', 'URL.', '*', '*', 'See', 'these', 'two', 'classes', 'for', 'more.', '*/', 'export', 'class', 'LocationStrategy', '{', '}', '/**', '*', 'The', '`APP_BASE_HREF`', 'token', 'represents', 'the', 'base', 'href', 'to', 'be', 'used', 'with', 'the', '*', '{@link', 'PathLocationStrategy}.', '*', '*', 'If', ""you're"", 'using', '{@link', 'PathLocationStrategy},', 'you', 'must', 'provide', 'a', 'provider', 'to', 'a', 'string', '*', 'representing', 'the', 'URL', 'prefix', 'that', 'should', 'be', 'preserved', 'when', 'generating', 'and', 'recognizing', '*', 'URLs.', '*', '*', '###', 'Example', '*', '*', '```', '*', 'import', '{Component}', 'from', ""'@angular/core';"", '*', 'import', '{ROUTER_DIRECTIVES,', 'ROUTER_PROVIDERS,', 'RouteConfig}', 'from', ""'@angular/router';"", '*', 'import', '{APP_BASE_HREF}', 'from', ""'@angular/common';"", '*', '*', '@Component({directives:', '[ROUTER_DIRECTIVES]})', '*', '@RouteConfig([', '*', '{...},', '*', '])', '*', 'class', 'AppCmp', '{', '*', '//', '...', '*', '}', '*', '*', 'bootstrap(AppCmp,', '[', '*', 'ROUTER_PROVIDERS,', '*', 'provide(APP_BASE_HREF,', '{useValue:', ""'/my/app'})"", '*', ']);', '*', '```', '*/', 'export', 'const', 'APP_BASE_HREF', '=', 'new', ""OpaqueToken('appBaseHref');"", '//#', 'sourceMappingURL=location_strategy.js.map```']",challenge not surrounded by ''': ,
"/*
 * Este programa es software libre; usted puede redistribuirlo y/o modificarlo bajo los terminos
 * de la licencia ""GNU General Public License"" publicada por la Fundacion ""Free Software Foundation"".
 * Este programa se distribuye con la esperanza de que pueda ser util, pero SIN NINGUNA GARANTIA;
 * vea la licencia ""GNU General Public License"" para obtener mas informacion.
 */
package adalid.core.interfaces;

import adalid.core.enums.ComparisonOp;

/**
 * @author Jorge Campins
 */
public interface ComparisonX extends BooleanExpression {

    /**
     * @return the comparison operator
     */
    @Override
    ComparisonOp getOperator();

    /**
     * @return the x
     */
    Object getX();

    /**
     * @return the y
     */
    Object getY();

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Este', 'programa', 'es', 'software', 'libre;', 'usted', 'puede', 'redistribuirlo', 'y/o', 'modificarlo', 'bajo', 'los', 'terminos', '*', 'de', 'la', 'licencia', '""GNU', 'General', 'Public', 'License""', 'publicada', 'por', 'la', 'Fundacion', '""Free', 'Software', 'Foundation"".', '*', 'Este', 'programa', 'se', 'distribuye', 'con', 'la', 'esperanza', 'de', 'que', 'pueda', 'ser', 'util,', 'pero', 'SIN', 'NINGUNA', 'GARANTIA;', '*', 'vea', 'la', 'licencia', '""GNU', 'General', 'Public', 'License""', 'para', 'obtener', 'mas', 'informacion.', '*/', 'package', 'adalid.core.interfaces;', 'import', 'adalid.core.enums.ComparisonOp;', '/**', '*', '@author', 'Jorge', 'Campins', '*/', 'public', 'interface', 'ComparisonX', 'extends', 'BooleanExpression', '{', '/**', '*', '@return', 'the', 'comparison', 'operator', '*/', '@Override', 'ComparisonOp', 'getOperator();', '/**', '*', '@return', 'the', 'x', '*/', 'Object', 'getX();', '/**', '*', '@return', 'the', 'y', '*/', 'Object', 'getY();', '}', '```']",challenge not surrounded by ''': ,
"class Solution {
public:
    /**
     * @param A: An array of non-negative integers.
     * return: The maximum amount of money you can rob tonight
     */
    long long houseRobber(vector<int> A) {
        // write your code here
		vector<long long> dp(A.size(), 0);
		for (size_t i = 0; i < A.size(); ++ i) {
			dp[i] = max(dp[i], static_cast<long long> (A[i]));
			if (i >= 1) {
				dp[i] = max(dp[i], dp[i - 1]);
			}
			if (i >= 2) {
				dp[i] = max(dp[i], dp[i - 2] + A[i]);
			}
		}
		return dp[dp.size() - 1];
    }
};
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```class', 'Solution', '{', 'public:', '/**', '*', '@param', 'A:', 'An', 'array', 'of', 'non-negative', 'integers.', '*', 'return:', 'The', 'maximum', 'amount', 'of', 'money', 'you', 'can', 'rob', 'tonight', '*/', 'long', 'long', 'houseRobber(vector<int>', 'A)', '{', '//', 'write', 'your', 'code', 'here', 'vector<long', 'long>', 'dp(A.size(),', '0);', 'for', '(size_t', 'i', '=', '0;', 'i', '<', 'A.size();', '++', 'i)', '{', 'dp[i]', '=', 'max(dp[i],', 'static_cast<long', 'long>', '(A[i]));', 'if', '(i', '>=', '1)', '{', 'dp[i]', '=', 'max(dp[i],', 'dp[i', '-', '1]);', '}', 'if', '(i', '>=', '2)', '{', 'dp[i]', '=', 'max(dp[i],', 'dp[i', '-', '2]', '+', 'A[i]);', '}', '}', 'return', 'dp[dp.size()', '-', '1];', '}', '};', '```']",challenge not surrounded by ''': ,
"/**
 * @provide pskl.tools.drawing.selection.RectangleSelect
 *
 * @require pskl.utils
 */
(function() {
  var ns = $.namespace('pskl.tools.drawing.selection');

  ns.RectangleSelect = function() {
    ns.AbstractDragSelect.call(this);

    this.toolId = 'tool-rectangle-select';
    this.helpText = 'Rectangle selection';
    this.shortcut = pskl.service.keyboard.Shortcuts.TOOL.RECTANGLE_SELECT;

  };

  pskl.utils.inherit(ns.RectangleSelect, ns.AbstractDragSelect);

  /** @override */
  ns.RectangleSelect.prototype.onDragSelectStart_ = function (col, row) {
    $.publish(Events.DRAG_START, [col, row]);
  };

  /**
   * When creating the rectangle selection, we clear the current overlayFrame and
   * redraw the current rectangle based on the orgin coordinate and
   * the current mouse coordiinate in sprite.
   * @override
   */
  ns.RectangleSelect.prototype.onDragSelect_ = function (col, row, frame, overlay) {
    overlay.clear();
    this.selection = new pskl.selection.RectangularSelection(this.startCol, this.startRow, col, row);
    $.publish(Events.SELECTION_CREATED, [this.selection]);
    this.drawSelectionOnOverlay_(overlay);
  };

  /** @override */
  ns.RectangleSelect.prototype.onDragSelectEnd_ = function (col, row, frame, overlay) {
    this.onSelect_(col, row, frame, overlay);
    $.publish(Events.DRAG_END);
  };

})();
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', '@provide', 'pskl.tools.drawing.selection.RectangleSelect', '*', '*', '@require', 'pskl.utils', '*/', '(function()', '{', 'var', 'ns', '=', ""$.namespace('pskl.tools.drawing.selection');"", 'ns.RectangleSelect', '=', 'function()', '{', 'ns.AbstractDragSelect.call(this);', 'this.toolId', '=', ""'tool-rectangle-select';"", 'this.helpText', '=', ""'Rectangle"", ""selection';"", 'this.shortcut', '=', 'pskl.service.keyboard.Shortcuts.TOOL.RECTANGLE_SELECT;', '};', 'pskl.utils.inherit(ns.RectangleSelect,', 'ns.AbstractDragSelect);', '/**', '@override', '*/', 'ns.RectangleSelect.prototype.onDragSelectStart_', '=', 'function', '(col,', 'row)', '{', '$.publish(Events.DRAG_START,', '[col,', 'row]);', '};', '/**', '*', 'When', 'creating', 'the', 'rectangle', 'selection,', 'we', 'clear', 'the', 'current', 'overlayFrame', 'and', '*', 'redraw', 'the', 'current', 'rectangle', 'based', 'on', 'the', 'orgin', 'coordinate', 'and', '*', 'the', 'current', 'mouse', 'coordiinate', 'in', 'sprite.', '*', '@override', '*/', 'ns.RectangleSelect.prototype.onDragSelect_', '=', 'function', '(col,', 'row,', 'frame,', 'overlay)', '{', 'overlay.clear();', 'this.selection', '=', 'new', 'pskl.selection.RectangularSelection(this.startCol,', 'this.startRow,', 'col,', 'row);', '$.publish(Events.SELECTION_CREATED,', '[this.selection]);', 'this.drawSelectionOnOverlay_(overlay);', '};', '/**', '@override', '*/', 'ns.RectangleSelect.prototype.onDragSelectEnd_', '=', 'function', '(col,', 'row,', 'frame,', 'overlay)', '{', 'this.onSelect_(col,', 'row,', 'frame,', 'overlay);', '$.publish(Events.DRAG_END);', '};', '})();', '```']",challenge not surrounded by ''': ,
"#
# nginx-proxy Dockerfile
#
#

# Pull base image.
FROM centos:centos6

MAINTAINER wjw465150 <wjw465150@gmail.com>

# Install dependence.
RUN \
  yum -y install gcc make file && \
  yum -y install tar pcre-devel pcre-staticopenssl openssl-devel httpd-tools

RUN \
  groupadd www -g 58 && \
  useradd -u 58 -g www www  

COPY ./nginx-1.4.6.tar.gz /tmp/
  
RUN cd /tmp/ && \
  tar zxvf ./nginx-1.4.6.tar.gz && \
  cd ./nginx-1.4.6 && \
  ./configure --user=www --group=www --prefix=/opt/nginx \
  --with-pcre \
  --with-http_stub_status_module \
  --with-http_ssl_module \
  --with-http_addition_module  \
  --with-http_realip_module \
  --with-http_flv_module && \
  make && \
  make install

RUN rm -rf /tmp/*

VOLUME [""/var/log""]

# Expose ports.
EXPOSE 80

ENV SERVER_NAME localhost
ENV SERVER_PORT 80
ENV UPSTREAM_ADDRESS 192.168.1.100
ENV UPSTREAM_PORT 8080

ADD nginx.conf /opt/nginx/conf/
ADD nginx.crt /opt/nginx/conf/
ADD nginx.key /opt/nginx/conf/
ADD run.sh /

RUN chmod +x /run.sh

CMD /run.sh

","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', '#', 'nginx-proxy', 'Dockerfile', '#', '#', '#', 'Pull', 'base', 'image.', 'FROM', 'centos:centos6', 'MAINTAINER', 'wjw465150', '<wjw465150@gmail.com>', '#', 'Install', 'dependence.', 'RUN', '\\', 'yum', '-y', 'install', 'gcc', 'make', 'file', '&&', '\\', 'yum', '-y', 'install', 'tar', 'pcre-devel', 'pcre-staticopenssl', 'openssl-devel', 'httpd-tools', 'RUN', '\\', 'groupadd', 'www', '-g', '58', '&&', '\\', 'useradd', '-u', '58', '-g', 'www', 'www', 'COPY', './nginx-1.4.6.tar.gz', '/tmp/', 'RUN', 'cd', '/tmp/', '&&', '\\', 'tar', 'zxvf', './nginx-1.4.6.tar.gz', '&&', '\\', 'cd', './nginx-1.4.6', '&&', '\\', './configure', '--user=www', '--group=www', '--prefix=/opt/nginx', '\\', '--with-pcre', '\\', '--with-http_stub_status_module', '\\', '--with-http_ssl_module', '\\', '--with-http_addition_module', '\\', '--with-http_realip_module', '\\', '--with-http_flv_module', '&&', '\\', 'make', '&&', '\\', 'make', 'install', 'RUN', 'rm', '-rf', '/tmp/*', 'VOLUME', '[""/var/log""]', '#', 'Expose', 'ports.', 'EXPOSE', '80', 'ENV', 'SERVER_NAME', 'localhost', 'ENV', 'SERVER_PORT', '80', 'ENV', 'UPSTREAM_ADDRESS', '192.168.1.100', 'ENV', 'UPSTREAM_PORT', '8080', 'ADD', 'nginx.conf', '/opt/nginx/conf/', 'ADD', 'nginx.crt', '/opt/nginx/conf/', 'ADD', 'nginx.key', '/opt/nginx/conf/', 'ADD', 'run.sh', '/', 'RUN', 'chmod', '+x', '/run.sh', 'CMD', '/run.sh', '```']",challenge not surrounded by ''': ,
"/*
 *  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *  WSO2 Inc. licenses this file to you under the Apache License,
 *  Version 2.0 (the ""License""); you may not use this file except
 *  in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing,
 *  software distributed under the License is distributed on an
 *  ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *  KIND, either express or implied.  See the License for the
 *  specific language governing permissions and limitations
 *  under the License.
 */

package org.wso2.carbon.uuf.exception;

import org.wso2.carbon.uuf.spi.HttpResponse;

public class UnauthorizedException extends HttpErrorException {

    public UnauthorizedException() {
        super(HttpResponse.STATUS_UNAUTHORIZED);
    }

    public UnauthorizedException(String message) {
        super(HttpResponse.STATUS_UNAUTHORIZED, message);
    }

    public UnauthorizedException(String message, Throwable cause) {
        super(HttpResponse.STATUS_UNAUTHORIZED, message, cause);
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '(c)', '2016,', 'WSO2', 'Inc.', '(http://www.wso2.org)', 'All', 'Rights', 'Reserved.', '*', '*', 'WSO2', 'Inc.', 'licenses', 'this', 'file', 'to', 'you', 'under', 'the', 'Apache', 'License,', '*', 'Version', '2.0', '(the', '""License"");', 'you', 'may', 'not', 'use', 'this', 'file', 'except', '*', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', '*', 'software', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '*', '""AS', 'IS""', 'BASIS,', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', '*', 'KIND,', 'either', 'express', 'or', 'implied.', 'See', 'the', 'License', 'for', 'the', '*', 'specific', 'language', 'governing', 'permissions', 'and', 'limitations', '*', 'under', 'the', 'License.', '*/', 'package', 'org.wso2.carbon.uuf.exception;', 'import', 'org.wso2.carbon.uuf.spi.HttpResponse;', 'public', 'class', 'UnauthorizedException', 'extends', 'HttpErrorException', '{', 'public', 'UnauthorizedException()', '{', 'super(HttpResponse.STATUS_UNAUTHORIZED);', '}', 'public', 'UnauthorizedException(String', 'message)', '{', 'super(HttpResponse.STATUS_UNAUTHORIZED,', 'message);', '}', 'public', 'UnauthorizedException(String', 'message,', 'Throwable', 'cause)', '{', 'super(HttpResponse.STATUS_UNAUTHORIZED,', 'message,', 'cause);', '}', '}', '```']",challenge not surrounded by ''': ,
"/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define(function(require, exports, module) {
""use strict"";

exports.inherits = (function() {
    var tempCtor = function() {};
    return function(ctor, superCtor) {
        tempCtor.prototype = superCtor.prototype;
        ctor.super_ = superCtor.prototype;
        ctor.prototype = new tempCtor();
        ctor.prototype.constructor = ctor;
    };
}());

exports.mixin = function(obj, mixin) {
    for (var key in mixin) {
        obj[key] = mixin[key];
    }
    return obj;
};

exports.implement = function(proto, mixin) {
    exports.mixin(proto, mixin);
};

});
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*****', 'BEGIN', 'LICENSE', 'BLOCK', '*****', '*', 'Distributed', 'under', 'the', 'BSD', 'license:', '*', '*', 'Copyright', '(c)', '2010,', 'Ajax.org', 'B.V.', '*', 'All', 'rights', 'reserved.', '*', '*', 'Redistribution', 'and', 'use', 'in', 'source', 'and', 'binary', 'forms,', 'with', 'or', 'without', '*', 'modification,', 'are', 'permitted', 'provided', 'that', 'the', 'following', 'conditions', 'are', 'met:', '*', '*', 'Redistributions', 'of', 'source', 'code', 'must', 'retain', 'the', 'above', 'copyright', '*', 'notice,', 'this', 'list', 'of', 'conditions', 'and', 'the', 'following', 'disclaimer.', '*', '*', 'Redistributions', 'in', 'binary', 'form', 'must', 'reproduce', 'the', 'above', 'copyright', '*', 'notice,', 'this', 'list', 'of', 'conditions', 'and', 'the', 'following', 'disclaimer', 'in', 'the', '*', 'documentation', 'and/or', 'other', 'materials', 'provided', 'with', 'the', 'distribution.', '*', '*', 'Neither', 'the', 'name', 'of', 'Ajax.org', 'B.V.', 'nor', 'the', '*', 'names', 'of', 'its', 'contributors', 'may', 'be', 'used', 'to', 'endorse', 'or', 'promote', 'products', '*', 'derived', 'from', 'this', 'software', 'without', 'specific', 'prior', 'written', 'permission.', '*', '*', 'THIS', 'SOFTWARE', 'IS', 'PROVIDED', 'BY', 'THE', 'COPYRIGHT', 'HOLDERS', 'AND', 'CONTRIBUTORS', '""AS', 'IS""', 'AND', '*', 'ANY', 'EXPRESS', 'OR', 'IMPLIED', 'WARRANTIES,', 'INCLUDING,', 'BUT', 'NOT', 'LIMITED', 'TO,', 'THE', 'IMPLIED', '*', 'WARRANTIES', 'OF', 'MERCHANTABILITY', 'AND', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE', 'ARE', '*', 'DISCLAIMED.', 'IN', 'NO', 'EVENT', 'SHALL', 'AJAX.ORG', 'B.V.', 'BE', 'LIABLE', 'FOR', 'ANY', '*', 'DIRECT,', 'INDIRECT,', 'INCIDENTAL,', 'SPECIAL,', 'EXEMPLARY,', 'OR', 'CONSEQUENTIAL', 'DAMAGES', '*', '(INCLUDING,', 'BUT', 'NOT', 'LIMITED', 'TO,', 'PROCUREMENT', 'OF', 'SUBSTITUTE', 'GOODS', 'OR', 'SERVICES;', '*', 'LOSS', 'OF', 'USE,', 'DATA,', 'OR', 'PROFITS;', 'OR', 'BUSINESS', 'INTERRUPTION)', 'HOWEVER', 'CAUSED', 'AND', '*', 'ON', 'ANY', 'THEORY', 'OF', 'LIABILITY,', 'WHETHER', 'IN', 'CONTRACT,', 'STRICT', 'LIABILITY,', 'OR', 'TORT', '*', '(INCLUDING', 'NEGLIGENCE', 'OR', 'OTHERWISE)', 'ARISING', 'IN', 'ANY', 'WAY', 'OUT', 'OF', 'THE', 'USE', 'OF', 'THIS', '*', 'SOFTWARE,', 'EVEN', 'IF', 'ADVISED', 'OF', 'THE', 'POSSIBILITY', 'OF', 'SUCH', 'DAMAGE.', '*', '*', '*****', 'END', 'LICENSE', 'BLOCK', '*****', '*/', 'define(function(require,', 'exports,', 'module)', '{', '""use', 'strict"";', 'exports.inherits', '=', '(function()', '{', 'var', 'tempCtor', '=', 'function()', '{};', 'return', 'function(ctor,', 'superCtor)', '{', 'tempCtor.prototype', '=', 'superCtor.prototype;', 'ctor.super_', '=', 'superCtor.prototype;', 'ctor.prototype', '=', 'new', 'tempCtor();', 'ctor.prototype.constructor', '=', 'ctor;', '};', '}());', 'exports.mixin', '=', 'function(obj,', 'mixin)', '{', 'for', '(var', 'key', 'in', 'mixin)', '{', 'obj[key]', '=', 'mixin[key];', '}', 'return', 'obj;', '};', 'exports.implement', '=', 'function(proto,', 'mixin)', '{', 'exports.mixin(proto,', 'mixin);', '};', '});', '```']",challenge not surrounded by ''': ,
"import datetime

#Almacena todas las ids disponibles para las nuevas notas
ultima_id = 0

class Nota():
	""""""Representa una nota en el cuaderno. Se compara con un string
	en las búsquedas y las etiquetas para cada nota""""""

	def __init__(self, memo, tags = ''):
		""""""Inicializa una nota con memo y opcional tags separado por 
		comas. Automáticamente configura la fecha de creación de la
		nota y una única id""""""
		self.memo = memo
		self.tags = tags
		self.creation_date = datetime.date.today()
		global ultima_id	#conocer las ids utilizadas en otras notas
		ultima_id += 1
		self.id = ultima_id

	def match(self, filter):
		""""""Determina si esta nota concuerda con el filtro de texto.
		Devuelve True si concuerda, en otro caso False. Búsqueda es 
		case sensitive y compara tanto con text como con tags""""""
		return filter in self.memo or filter in self.tags

class Cuaderno():
	""""""Representa una caolección de notas que pueden ser etiquetadas y 
	modificadas, y se puede buscar.""""""
	def __init__(self):
		""""""Inicializa un cuaderno con una lista vacía.""""""
		self.notas = []

	def nueva_nota(self, memo, tags =""""):
		""""""Crea una nueva nota y la añade a la lista""""""
		self.notas.append(Nota(memo, tags))

	def modificar_memo(self, nota_id, memo):
		""""""Encuentra la nota con la id dada y cambia su memo al valor 
		dado""""""
		self._encontrar_nota(nota_id).memo = memo

	def modificar_tags(self, nota_id, tags):
		""""""Encuentra la nota con la id dada y cambia sus tags al valor
		dado""""""
		self._encontrar_nota(nota_id).tags = tags

	def search(self, filter):
		""""""Encuentra todas las notas que concuerdan con el filtro
		string dado.""""""
		return[nota for nota in self.notas if nota.match(filter)]

	def _encontrar_nota(self, nota_id):
		""""""Localiza la nota con la id dada""""""
		for nota in self.notas:
			if nota.id == nota_id:
				return nota
		return None","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'datetime', '#Almacena', 'todas', 'las', 'ids', 'disponibles', 'para', 'las', 'nuevas', 'notas', 'ultima_id', '=', '0', 'class', 'Nota():', '""""""Representa', 'una', 'nota', 'en', 'el', 'cuaderno.', 'Se', 'compara', 'con', 'un', 'string', 'en', 'las', 'búsquedas', 'y', 'las', 'etiquetas', 'para', 'cada', 'nota""""""', 'def', '__init__(self,', 'memo,', 'tags', '=', ""''):"", '""""""Inicializa', 'una', 'nota', 'con', 'memo', 'y', 'opcional', 'tags', 'separado', 'por', 'comas.', 'Automáticamente', 'configura', 'la', 'fecha', 'de', 'creación', 'de', 'la', 'nota', 'y', 'una', 'única', 'id""""""', 'self.memo', '=', 'memo', 'self.tags', '=', 'tags', 'self.creation_date', '=', 'datetime.date.today()', 'global', 'ultima_id', '#conocer', 'las', 'ids', 'utilizadas', 'en', 'otras', 'notas', 'ultima_id', '+=', '1', 'self.id', '=', 'ultima_id', 'def', 'match(self,', 'filter):', '""""""Determina', 'si', 'esta', 'nota', 'concuerda', 'con', 'el', 'filtro', 'de', 'texto.', 'Devuelve', 'True', 'si', 'concuerda,', 'en', 'otro', 'caso', 'False.', 'Búsqueda', 'es', 'case', 'sensitive', 'y', 'compara', 'tanto', 'con', 'text', 'como', 'con', 'tags""""""', 'return', 'filter', 'in', 'self.memo', 'or', 'filter', 'in', 'self.tags', 'class', 'Cuaderno():', '""""""Representa', 'una', 'caolección', 'de', 'notas', 'que', 'pueden', 'ser', 'etiquetadas', 'y', 'modificadas,', 'y', 'se', 'puede', 'buscar.""""""', 'def', '__init__(self):', '""""""Inicializa', 'un', 'cuaderno', 'con', 'una', 'lista', 'vacía.""""""', 'self.notas', '=', '[]', 'def', 'nueva_nota(self,', 'memo,', 'tags', '=""""):', '""""""Crea', 'una', 'nueva', 'nota', 'y', 'la', 'añade', 'a', 'la', 'lista""""""', 'self.notas.append(Nota(memo,', 'tags))', 'def', 'modificar_memo(self,', 'nota_id,', 'memo):', '""""""Encuentra', 'la', 'nota', 'con', 'la', 'id', 'dada', 'y', 'cambia', 'su', 'memo', 'al', 'valor', 'dado""""""', 'self._encontrar_nota(nota_id).memo', '=', 'memo', 'def', 'modificar_tags(self,', 'nota_id,', 'tags):', '""""""Encuentra', 'la', 'nota', 'con', 'la', 'id', 'dada', 'y', 'cambia', 'sus', 'tags', 'al', 'valor', 'dado""""""', 'self._encontrar_nota(nota_id).tags', '=', 'tags', 'def', 'search(self,', 'filter):', '""""""Encuentra', 'todas', 'las', 'notas', 'que', 'concuerdan', 'con', 'el', 'filtro', 'string', 'dado.""""""', 'return[nota', 'for', 'nota', 'in', 'self.notas', 'if', 'nota.match(filter)]', 'def', '_encontrar_nota(self,', 'nota_id):', '""""""Localiza', 'la', 'nota', 'con', 'la', 'id', 'dada""""""', 'for', 'nota', 'in', 'self.notas:', 'if', 'nota.id', '==', 'nota_id:', 'return', 'nota', 'return', 'None```']",challenge not surrounded by ''': ,
"package com.pushtorefresh.storio3.contentresolver.annotations;

@StorIOContentResolverType(uri = ""content://uri"")
public class EmptyColumnName {

    @StorIOContentResolverColumn(name = """", key = true)
    long id;
}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.pushtorefresh.storio3.contentresolver.annotations;', '@StorIOContentResolverType(uri', '=', '""content://uri"")', 'public', 'class', 'EmptyColumnName', '{', '@StorIOContentResolverColumn(name', '=', '"""",', 'key', '=', 'true)', 'long', 'id;', '}```']",challenge not surrounded by ''': ,
"package org.marketcetera.util.ws.wrappers;

import java.util.Locale;
import javax.xml.bind.annotation.XmlSeeAlso;
import org.marketcetera.util.misc.ClassVersion;
import org.marketcetera.util.ws.wrappers.MarshalledLocale;

/**
 * A dual-form wrapper for marshalling a locale. The raw form is
 * {@link Locale}, and the marshalled form is {@link
 * MarshalledLocale}.
 * 
 * @author tlerios@marketcetera.com
 * @since 1.0.0
 * @version $Id: LocaleWrapper.java 16154 2012-07-14 16:34:05Z colin $
 */

/* $License$ */

@XmlSeeAlso(MarshalledLocale.class)
@ClassVersion(""$Id: LocaleWrapper.java 16154 2012-07-14 16:34:05Z colin $"")
public class LocaleWrapper
    extends DualWrapper<Locale,MarshalledLocale>
{

    // CLASS DATA.

    private static final long serialVersionUID=1L;


    // CONSTRUCTORS.

    /**
     * Creates a new wrapper for the given locale. It also sets the
     * internal marshalled form to match.
     *
     * @param locale The locale, which may be null.
     */

    public LocaleWrapper
        (Locale locale)
    {
        super(locale);
    }

    /**
     * Creates a new wrapper. This empty constructor is intended for
     * use by JAXB and Java serialization.
     */

    public LocaleWrapper() {}


    // DualWrapper.

    @Override
    protected void toRaw()
    {
        setRawOnly(getMarshalled().toLocale());
    }

    @Override
    protected void toMarshalled()
    {
        setMarshalledOnly(new MarshalledLocale(getRaw()));
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'org.marketcetera.util.ws.wrappers;', 'import', 'java.util.Locale;', 'import', 'javax.xml.bind.annotation.XmlSeeAlso;', 'import', 'org.marketcetera.util.misc.ClassVersion;', 'import', 'org.marketcetera.util.ws.wrappers.MarshalledLocale;', '/**', '*', 'A', 'dual-form', 'wrapper', 'for', 'marshalling', 'a', 'locale.', 'The', 'raw', 'form', 'is', '*', '{@link', 'Locale},', 'and', 'the', 'marshalled', 'form', 'is', '{@link', '*', 'MarshalledLocale}.', '*', '*', '@author', 'tlerios@marketcetera.com', '*', '@since', '1.0.0', '*', '@version', '$Id:', 'LocaleWrapper.java', '16154', '2012-07-14', '16:34:05Z', 'colin', '$', '*/', '/*', '$License$', '*/', '@XmlSeeAlso(MarshalledLocale.class)', '@ClassVersion(""$Id:', 'LocaleWrapper.java', '16154', '2012-07-14', '16:34:05Z', 'colin', '$"")', 'public', 'class', 'LocaleWrapper', 'extends', 'DualWrapper<Locale,MarshalledLocale>', '{', '//', 'CLASS', 'DATA.', 'private', 'static', 'final', 'long', 'serialVersionUID=1L;', '//', 'CONSTRUCTORS.', '/**', '*', 'Creates', 'a', 'new', 'wrapper', 'for', 'the', 'given', 'locale.', 'It', 'also', 'sets', 'the', '*', 'internal', 'marshalled', 'form', 'to', 'match.', '*', '*', '@param', 'locale', 'The', 'locale,', 'which', 'may', 'be', 'null.', '*/', 'public', 'LocaleWrapper', '(Locale', 'locale)', '{', 'super(locale);', '}', '/**', '*', 'Creates', 'a', 'new', 'wrapper.', 'This', 'empty', 'constructor', 'is', 'intended', 'for', '*', 'use', 'by', 'JAXB', 'and', 'Java', 'serialization.', '*/', 'public', 'LocaleWrapper()', '{}', '//', 'DualWrapper.', '@Override', 'protected', 'void', 'toRaw()', '{', 'setRawOnly(getMarshalled().toLocale());', '}', '@Override', 'protected', 'void', 'toMarshalled()', '{', 'setMarshalledOnly(new', 'MarshalledLocale(getRaw()));', '}', '}', '```']",challenge not surrounded by ''': ,
"# -*- coding: utf-8 -*-

from openerp import models
from openerp import fields

class edi_export_field(models.Model):
    _name = 'edi.export.field'
    _description = 'Fields selected to be sent via EDI.'

    name = fields.Char()
    display_name = fields.Char(string=""Display Name"")
    edi_template_id = fields.Many2one('edi.template')","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', '-*-', 'coding:', 'utf-8', '-*-', 'from', 'openerp', 'import', 'models', 'from', 'openerp', 'import', 'fields', 'class', 'edi_export_field(models.Model):', '_name', '=', ""'edi.export.field'"", '_description', '=', ""'Fields"", 'selected', 'to', 'be', 'sent', 'via', ""EDI.'"", 'name', '=', 'fields.Char()', 'display_name', '=', 'fields.Char(string=""Display', 'Name"")', 'edi_template_id', '=', ""fields.Many2one('edi.template')```""]",challenge not surrounded by ''': ,
"# -*- coding: utf-8  -*-
#
# Copyright (C) 2009-2015 Ben Kurtovic <ben.kurtovic@gmail.com>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the ""Software""), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

import re

from earwigbot.commands import Command

class Link(Command):
    """"""Convert a Wikipedia page name into a URL.""""""
    name = ""link""

    def setup(self):
        self.last = {}

    def check(self, data):
        if re.search(r""(\[\[(.*?)\]\])|(\{\{(.*?)\}\})"", data.msg):
            self.last[data.chan] = data.msg  # Store most recent link
        return data.is_command and data.command == self.name

    def process(self, data):
        self.site = self.bot.wiki.get_site()

        if re.search(r""(\[\[(.*?)\]\])|(\{\{(.*?)\}\})"", data.msg):
            links = "" , "".join(self.parse_line(data.msg))
            self.reply(data, links.encode(""utf8""))

        elif data.command == ""link"":
            if not data.args:
                if data.chan in self.last:
                    links = "" , "".join(self.parse_line(self.last[data.chan]))
                    self.reply(data, links.encode(""utf8""))
                else:
                    self.reply(data, ""What do you want me to link to?"")
                return
            pagename = "" "".join(data.args)
            link = self.site.get_page(pagename).url.encode(""utf8"")
            self.reply(data, link)

    def parse_line(self, line):
        """"""Return a list of links within a line of text.""""""
        results = []

        # Destroy {{{template parameters}}}:
        line = re.sub(r""\{\{\{(.*?)\}\}\}"", """", line)

        # Find all [[links]]:
        links = re.findall(r""(\[\[(.*?)(\||\]\]))"", line)
        if links:
            # re.findall() returns a list of tuples, but we only want the 2nd
            # item in each tuple:
            results = [self.site.get_page(name[1]).url for name in links]

        # Find all {{templates}}
        templates = re.findall(r""(\{\{(.*?)(\||\}\}))"", line)
        if templates:
            p_tmpl = lambda name: self.site.get_page(""Template:"" + name).url
            templates = [p_tmpl(i[1]) for i in templates]
            results += templates

        return results
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', '-*-', 'coding:', 'utf-8', '-*-', '#', '#', 'Copyright', '(C)', '2009-2015', 'Ben', 'Kurtovic', '<ben.kurtovic@gmail.com>', '#', '#', 'Permission', 'is', 'hereby', 'granted,', 'free', 'of', 'charge,', 'to', 'any', 'person', 'obtaining', 'a', 'copy', '#', 'of', 'this', 'software', 'and', 'associated', 'documentation', 'files', '(the', '""Software""),', 'to', 'deal', '#', 'in', 'the', 'Software', 'without', 'restriction,', 'including', 'without', 'limitation', 'the', 'rights', '#', 'to', 'use,', 'copy,', 'modify,', 'merge,', 'publish,', 'distribute,', 'sublicense,', 'and/or', 'sell', '#', 'copies', 'of', 'the', 'Software,', 'and', 'to', 'permit', 'persons', 'to', 'whom', 'the', 'Software', 'is', '#', 'furnished', 'to', 'do', 'so,', 'subject', 'to', 'the', 'following', 'conditions:', '#', '#', 'The', 'above', 'copyright', 'notice', 'and', 'this', 'permission', 'notice', 'shall', 'be', 'included', 'in', '#', 'all', 'copies', 'or', 'substantial', 'portions', 'of', 'the', 'Software.', '#', '#', 'THE', 'SOFTWARE', 'IS', 'PROVIDED', '""AS', 'IS"",', 'WITHOUT', 'WARRANTY', 'OF', 'ANY', 'KIND,', 'EXPRESS', 'OR', '#', 'IMPLIED,', 'INCLUDING', 'BUT', 'NOT', 'LIMITED', 'TO', 'THE', 'WARRANTIES', 'OF', 'MERCHANTABILITY,', '#', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE', 'AND', 'NONINFRINGEMENT.', 'IN', 'NO', 'EVENT', 'SHALL', 'THE', '#', 'AUTHORS', 'OR', 'COPYRIGHT', 'HOLDERS', 'BE', 'LIABLE', 'FOR', 'ANY', 'CLAIM,', 'DAMAGES', 'OR', 'OTHER', '#', 'LIABILITY,', 'WHETHER', 'IN', 'AN', 'ACTION', 'OF', 'CONTRACT,', 'TORT', 'OR', 'OTHERWISE,', 'ARISING', 'FROM,', '#', 'OUT', 'OF', 'OR', 'IN', 'CONNECTION', 'WITH', 'THE', 'SOFTWARE', 'OR', 'THE', 'USE', 'OR', 'OTHER', 'DEALINGS', 'IN', 'THE', '#', 'SOFTWARE.', 'import', 're', 'from', 'earwigbot.commands', 'import', 'Command', 'class', 'Link(Command):', '""""""Convert', 'a', 'Wikipedia', 'page', 'name', 'into', 'a', 'URL.""""""', 'name', '=', '""link""', 'def', 'setup(self):', 'self.last', '=', '{}', 'def', 'check(self,', 'data):', 'if', 're.search(r""(\\[\\[(.*?)\\]\\])|(\\{\\{(.*?)\\}\\})"",', 'data.msg):', 'self.last[data.chan]', '=', 'data.msg', '#', 'Store', 'most', 'recent', 'link', 'return', 'data.is_command', 'and', 'data.command', '==', 'self.name', 'def', 'process(self,', 'data):', 'self.site', '=', 'self.bot.wiki.get_site()', 'if', 're.search(r""(\\[\\[(.*?)\\]\\])|(\\{\\{(.*?)\\}\\})"",', 'data.msg):', 'links', '=', '""', ',', '"".join(self.parse_line(data.msg))', 'self.reply(data,', 'links.encode(""utf8""))', 'elif', 'data.command', '==', '""link"":', 'if', 'not', 'data.args:', 'if', 'data.chan', 'in', 'self.last:', 'links', '=', '""', ',', '"".join(self.parse_line(self.last[data.chan]))', 'self.reply(data,', 'links.encode(""utf8""))', 'else:', 'self.reply(data,', '""What', 'do', 'you', 'want', 'me', 'to', 'link', 'to?"")', 'return', 'pagename', '=', '""', '"".join(data.args)', 'link', '=', 'self.site.get_page(pagename).url.encode(""utf8"")', 'self.reply(data,', 'link)', 'def', 'parse_line(self,', 'line):', '""""""Return', 'a', 'list', 'of', 'links', 'within', 'a', 'line', 'of', 'text.""""""', 'results', '=', '[]', '#', 'Destroy', '{{{template', 'parameters}}}:', 'line', '=', 're.sub(r""\\{\\{\\{(.*?)\\}\\}\\}"",', '"""",', 'line)', '#', 'Find', 'all', '[[links]]:', 'links', '=', 're.findall(r""(\\[\\[(.*?)(\\||\\]\\]))"",', 'line)', 'if', 'links:', '#', 're.findall()', 'returns', 'a', 'list', 'of', 'tuples,', 'but', 'we', 'only', 'want', 'the', '2nd', '#', 'item', 'in', 'each', 'tuple:', 'results', '=', '[self.site.get_page(name[1]).url', 'for', 'name', 'in', 'links]', '#', 'Find', 'all', '{{templates}}', 'templates', '=', 're.findall(r""(\\{\\{(.*?)(\\||\\}\\}))"",', 'line)', 'if', 'templates:', 'p_tmpl', '=', 'lambda', 'name:', 'self.site.get_page(""Template:""', '+', 'name).url', 'templates', '=', '[p_tmpl(i[1])', 'for', 'i', 'in', 'templates]', 'results', '+=', 'templates', 'return', 'results', '```']",challenge not surrounded by ''': ,
"#!/usr/bin/env bash

CI_DIR=""$(cd ""$(dirname ""${BASH_SOURCE[0]}"")"" && pwd)""
source ""${CI_DIR}/common.sh""

set +e

if [ ${TRAVIS_PULL_REQUEST} = false ] && [ ${TRAVIS_BRANCH} = 'master' ]; then
    travis_retry luarocks --local install ldoc
    # get deploy key for doc repo
    openssl aes-256-cbc -k $doc_build_secret -in .ci/koreader_doc.enc -out ~/.ssh/koreader_doc -d
    chmod 600 ~/.ssh/koreader_doc  # make agent happy
    eval ""$(ssh-agent)"" > /dev/null
    ssh-add ~/.ssh/koreader_doc > /dev/null
    echo -e ""\n${ANSI_GREEN}Check out koreader/doc for update.""
    git clone git@github.com:koreader/doc.git koreader_doc

    # push doc update
    pushd doc
        luajit $(which ldoc) . 2> /dev/null
        if [ ! -d html ]; then
            echo ""Failed to generate documents...""
            exit 1
        fi
    popd
    cp -r doc/html/* koreader_doc/
    pushd koreader_doc

    git add -A
    echo -e ""\n${ANSI_GREEN}Pusing document update...""
    git -c user.name=""KOReader build bot"" -c user.email=""non-reply@koreader.rocks"" \
        commit -a --amend -m 'Automated documentation build from travis-ci.'
    git push -f --quiet origin gh-pages > /dev/null
    echo -e ""\n${ANSI_GREEN}Documentation update pushed.""
else
    echo -e ""\n${ANSI_GREEN}Not on official master branch, skip documentation update.""
fi

travis_retry make coverage
pushd koreader-*/koreader
    luajit $(which luacov-coveralls)
popd
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/usr/bin/env', 'bash', 'CI_DIR=""$(cd', '""$(dirname', '""${BASH_SOURCE[0]}"")""', '&&', 'pwd)""', 'source', '""${CI_DIR}/common.sh""', 'set', '+e', 'if', '[', '${TRAVIS_PULL_REQUEST}', '=', 'false', ']', '&&', '[', '${TRAVIS_BRANCH}', '=', ""'master'"", '];', 'then', 'travis_retry', 'luarocks', '--local', 'install', 'ldoc', '#', 'get', 'deploy', 'key', 'for', 'doc', 'repo', 'openssl', 'aes-256-cbc', '-k', '$doc_build_secret', '-in', '.ci/koreader_doc.enc', '-out', '~/.ssh/koreader_doc', '-d', 'chmod', '600', '~/.ssh/koreader_doc', '#', 'make', 'agent', 'happy', 'eval', '""$(ssh-agent)""', '>', '/dev/null', 'ssh-add', '~/.ssh/koreader_doc', '>', '/dev/null', 'echo', '-e', '""\\n${ANSI_GREEN}Check', 'out', 'koreader/doc', 'for', 'update.""', 'git', 'clone', 'git@github.com:koreader/doc.git', 'koreader_doc', '#', 'push', 'doc', 'update', 'pushd', 'doc', 'luajit', '$(which', 'ldoc)', '.', '2>', '/dev/null', 'if', '[', '!', '-d', 'html', '];', 'then', 'echo', '""Failed', 'to', 'generate', 'documents...""', 'exit', '1', 'fi', 'popd', 'cp', '-r', 'doc/html/*', 'koreader_doc/', 'pushd', 'koreader_doc', 'git', 'add', '-A', 'echo', '-e', '""\\n${ANSI_GREEN}Pusing', 'document', 'update...""', 'git', '-c', 'user.name=""KOReader', 'build', 'bot""', '-c', 'user.email=""non-reply@koreader.rocks""', '\\', 'commit', '-a', '--amend', '-m', ""'Automated"", 'documentation', 'build', 'from', ""travis-ci.'"", 'git', 'push', '-f', '--quiet', 'origin', 'gh-pages', '>', '/dev/null', 'echo', '-e', '""\\n${ANSI_GREEN}Documentation', 'update', 'pushed.""', 'else', 'echo', '-e', '""\\n${ANSI_GREEN}Not', 'on', 'official', 'master', 'branch,', 'skip', 'documentation', 'update.""', 'fi', 'travis_retry', 'make', 'coverage', 'pushd', 'koreader-*/koreader', 'luajit', '$(which', 'luacov-coveralls)', 'popd', '```']",challenge not surrounded by ''': ,
"#! /usr/bin/env node

var Github = require('github-api')
var async = require('async')
var request = require('request')
var fs = require('fs')

var githubToken = process.argv[2]
var orgName = process.argv[3]

if (!githubToken.length) {
  console.log('Missing Github token.')
  process.exit(0)
}

var github = new Github({
  token: githubToken,
  auth: 'oauth'
})

var user = github.getUser()
user.orgRepos(orgName, function (err, repos) {
  if (err) {
    console.log(JSON.parse(err.request.responseText).message)
    process.exit(0)
  }

  async.map(repos, readBranches, function (err, results) {
    if (err) {
      console.log(err)
      process.exit(0)
    }
    var merged = [].concat.apply([], results)
    async.map(merged, downloadFile)
  })
})

function downloadFile (data, cb) {
  var repoName = data.repoName
  var branchName = data.branchName
  request({
    url: 'https://' + orgName + ':' + githubToken + '@' + 'api.github.com/repos/' + orgName + '/' + repoName + '/zipball/' + branchName, // https://api.github.com/repos/'+orgName+'/MS-Track-Web-2016/zipball/',
    headers: {
      'User-Agent': 'BIS github-backup'
    }
  }).pipe(fs.createWriteStream('./data/' + repoName + '-' + branchName + '.zip').on('finish', cb))
}

function readBranches (repo, cb) {
  var objRepo = github.getRepo(orgName, repo.name)
  objRepo.listBranches(function (err, branchNames) {
    if (err) {
      console.log(err)
      process.exit(0)
    }
    var result = branchNames.map(function (branchName) {
      return {
        repoName: repo.name,
        branchName: branchName
      }
    })
    cb(null, result)
  })
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!', '/usr/bin/env', 'node', 'var', 'Github', '=', ""require('github-api')"", 'var', 'async', '=', ""require('async')"", 'var', 'request', '=', ""require('request')"", 'var', 'fs', '=', ""require('fs')"", 'var', 'githubToken', '=', 'process.argv[2]', 'var', 'orgName', '=', 'process.argv[3]', 'if', '(!githubToken.length)', '{', ""console.log('Missing"", 'Github', ""token.')"", 'process.exit(0)', '}', 'var', 'github', '=', 'new', 'Github({', 'token:', 'githubToken,', 'auth:', ""'oauth'"", '})', 'var', 'user', '=', 'github.getUser()', 'user.orgRepos(orgName,', 'function', '(err,', 'repos)', '{', 'if', '(err)', '{', 'console.log(JSON.parse(err.request.responseText).message)', 'process.exit(0)', '}', 'async.map(repos,', 'readBranches,', 'function', '(err,', 'results)', '{', 'if', '(err)', '{', 'console.log(err)', 'process.exit(0)', '}', 'var', 'merged', '=', '[].concat.apply([],', 'results)', 'async.map(merged,', 'downloadFile)', '})', '})', 'function', 'downloadFile', '(data,', 'cb)', '{', 'var', 'repoName', '=', 'data.repoName', 'var', 'branchName', '=', 'data.branchName', 'request({', 'url:', ""'https://'"", '+', 'orgName', '+', ""':'"", '+', 'githubToken', '+', ""'@'"", '+', ""'api.github.com/repos/'"", '+', 'orgName', '+', ""'/'"", '+', 'repoName', '+', ""'/zipball/'"", '+', 'branchName,', '//', ""https://api.github.com/repos/'+orgName+'/MS-Track-Web-2016/zipball/',"", 'headers:', '{', ""'User-Agent':"", ""'BIS"", ""github-backup'"", '}', ""}).pipe(fs.createWriteStream('./data/'"", '+', 'repoName', '+', ""'-'"", '+', 'branchName', '+', ""'.zip').on('finish',"", 'cb))', '}', 'function', 'readBranches', '(repo,', 'cb)', '{', 'var', 'objRepo', '=', 'github.getRepo(orgName,', 'repo.name)', 'objRepo.listBranches(function', '(err,', 'branchNames)', '{', 'if', '(err)', '{', 'console.log(err)', 'process.exit(0)', '}', 'var', 'result', '=', 'branchNames.map(function', '(branchName)', '{', 'return', '{', 'repoName:', 'repo.name,', 'branchName:', 'branchName', '}', '})', 'cb(null,', 'result)', '})', '}', '```']",challenge not surrounded by ''': ,
"package com.klisly.omga.ui.base;

import com.klisly.omga.MyApplication;
import com.klisly.omga.utils.Constant;
import com.klisly.omga.utils.Sputil;
import com.umeng.analytics.MobclickAgent;
import com.umeng.message.PushAgent;

import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.SharedPreferences.OnSharedPreferenceChangeListener;
import android.content.res.Resources;
import android.os.Bundle;
import android.support.v4.app.FragmentActivity;

public class BaseActivity extends FragmentActivity implements OnSharedPreferenceChangeListener{
	
	protected static String TAG ;
	
	protected MyApplication mMyApplication;
	protected Sputil sputil;
	protected Resources mResources;
	protected Context mContext;
	
	@Override
	protected void onCreate(Bundle bundle) {
		// TODO Auto-generated method stub
		super.onCreate(bundle);
		TAG = this.getClass().getSimpleName();
		initConfigure();
		//友盟推送初始化
		PushAgent.getInstance(mContext).onAppStart();
	}


	private void initConfigure() {
		mContext = this;
		if(null == mMyApplication){
			mMyApplication = MyApplication.getInstance();
		}
		mMyApplication.addActivity(this);
		if(null == sputil){
			sputil = new Sputil(this, Constant.PRE_NAME);
		}
		sputil.getInstance().registerOnSharedPreferenceChangeListener(this);
		mResources = getResources();
	}


	@Override
	public void onSharedPreferenceChanged(SharedPreferences sharedPreferences,
			String key) {
		// TODO Auto-generated method stub
		//可用于监听设置参数，然后作出响应
	}

	/**
	 * Activity跳转
	 * @param context
	 * @param targetActivity
	 * @param bundle
	 */
	public void redictToActivity(Context context,Class<?> targetActivity,Bundle bundle){
		Intent intent = new Intent(context, targetActivity);
		if(null != bundle){
			intent.putExtras(bundle);
		}
		startActivity(intent);
	}
	
	@Override
	protected void onResume() {
		// TODO Auto-generated method stub
		super.onResume();
		MobclickAgent.onResume(this);
	}
	
	@Override
	protected void onPause() {
		// TODO Auto-generated method stub
		super.onPause();
		MobclickAgent.onPause(this);
	}
	
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.klisly.omga.ui.base;', 'import', 'com.klisly.omga.MyApplication;', 'import', 'com.klisly.omga.utils.Constant;', 'import', 'com.klisly.omga.utils.Sputil;', 'import', 'com.umeng.analytics.MobclickAgent;', 'import', 'com.umeng.message.PushAgent;', 'import', 'android.content.Context;', 'import', 'android.content.Intent;', 'import', 'android.content.SharedPreferences;', 'import', 'android.content.SharedPreferences.OnSharedPreferenceChangeListener;', 'import', 'android.content.res.Resources;', 'import', 'android.os.Bundle;', 'import', 'android.support.v4.app.FragmentActivity;', 'public', 'class', 'BaseActivity', 'extends', 'FragmentActivity', 'implements', 'OnSharedPreferenceChangeListener{', 'protected', 'static', 'String', 'TAG', ';', 'protected', 'MyApplication', 'mMyApplication;', 'protected', 'Sputil', 'sputil;', 'protected', 'Resources', 'mResources;', 'protected', 'Context', 'mContext;', '@Override', 'protected', 'void', 'onCreate(Bundle', 'bundle)', '{', '//', 'TODO', 'Auto-generated', 'method', 'stub', 'super.onCreate(bundle);', 'TAG', '=', 'this.getClass().getSimpleName();', 'initConfigure();', '//友盟推送初始化', 'PushAgent.getInstance(mContext).onAppStart();', '}', 'private', 'void', 'initConfigure()', '{', 'mContext', '=', 'this;', 'if(null', '==', 'mMyApplication){', 'mMyApplication', '=', 'MyApplication.getInstance();', '}', 'mMyApplication.addActivity(this);', 'if(null', '==', 'sputil){', 'sputil', '=', 'new', 'Sputil(this,', 'Constant.PRE_NAME);', '}', 'sputil.getInstance().registerOnSharedPreferenceChangeListener(this);', 'mResources', '=', 'getResources();', '}', '@Override', 'public', 'void', 'onSharedPreferenceChanged(SharedPreferences', 'sharedPreferences,', 'String', 'key)', '{', '//', 'TODO', 'Auto-generated', 'method', 'stub', '//可用于监听设置参数，然后作出响应', '}', '/**', '*', 'Activity跳转', '*', '@param', 'context', '*', '@param', 'targetActivity', '*', '@param', 'bundle', '*/', 'public', 'void', 'redictToActivity(Context', 'context,Class<?>', 'targetActivity,Bundle', 'bundle){', 'Intent', 'intent', '=', 'new', 'Intent(context,', 'targetActivity);', 'if(null', '!=', 'bundle){', 'intent.putExtras(bundle);', '}', 'startActivity(intent);', '}', '@Override', 'protected', 'void', 'onResume()', '{', '//', 'TODO', 'Auto-generated', 'method', 'stub', 'super.onResume();', 'MobclickAgent.onResume(this);', '}', '@Override', 'protected', 'void', 'onPause()', '{', '//', 'TODO', 'Auto-generated', 'method', 'stub', 'super.onPause();', 'MobclickAgent.onPause(this);', '}', '}', '```']",challenge not surrounded by ''': ,
"<!doctype html>
<html>
	<head>
		<meta charset=""utf-8"" />
		<link href=""style.css"" rel=""stylesheet""/>
		<title>Ghobok v.1.0</title>
		<meta name=""viewport"" content=""width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0"">
	
	</head>
	
	<body><div id=""container""></div><div id=""hud""></div></body>

	<!-- LIB -->
	<script src=""lib/jquery.min.js""></script>
	<script src=""lib/three.min.js""></script>
	<script src=""lib/DAT.GUI.min.js""></script>
	<script src=""lib/ParticleEngine.js""></script>        
	<script src=""lib/ParticleEnginePresets.js""></script>

        <script src=""src/lib/tools.js""></script>
        
	<!-- GHOBOK -->
	<script src=""src/const.js"" language=""javascript""></script>
	<script src=""src/functions.js"" language=""javascript""></script>
	<script src=""src/controls.js"" language=""javascript""></script>
	<script src=""src/party.js"" language=""javascript""></script>
	<script src=""src/mouseSelect.js"" language=""javascript""></script>
	<script src=""src/weatherEffects.js"" language=""javascript""></script>
	<script src=""src/animatedObject.js"" language=""javascript""></script>	
	<script src=""src/mapPosition.js"" language=""javascript""></script>
	<script src=""src/mapEditor.js"" language=""javascript""></script>
	<script src=""src/ghobokObject.js"" language=""javascript""></script>
	<script src=""src/mapObject.js"" language=""javascript""></script>
	<script src=""src/ghobokMonster.js"" language=""javascript""></script>
	<script src=""src/mapMonster.js"" language=""javascript""></script>
	<script src=""src/hud.js"" language=""javascript""></script>
	<script src=""src/dungeonTile.js"" language=""javascript""></script>
	<script src=""src/mapPlan.js"" language=""javascript""></script>	
	<script src=""src/dungeonMap.js"" language=""javascript""></script>	
	<script src=""src/dungeonRenderer.js"" language=""javascript""></script>	
	<script src=""src/core.js"" language=""javascript""></script>	
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!doctype', 'html>', '<html>', '<head>', '<meta', 'charset=""utf-8""', '/>', '<link', 'href=""style.css""', 'rel=""stylesheet""/>', '<title>Ghobok', 'v.1.0</title>', '<meta', 'name=""viewport""', 'content=""width=device-width,', 'user-scalable=no,', 'minimum-scale=1.0,', 'maximum-scale=1.0"">', '</head>', '<body><div', 'id=""container""></div><div', 'id=""hud""></div></body>', '<!--', 'LIB', '-->', '<script', 'src=""lib/jquery.min.js""></script>', '<script', 'src=""lib/three.min.js""></script>', '<script', 'src=""lib/DAT.GUI.min.js""></script>', '<script', 'src=""lib/ParticleEngine.js""></script>', '<script', 'src=""lib/ParticleEnginePresets.js""></script>', '<script', 'src=""src/lib/tools.js""></script>', '<!--', 'GHOBOK', '-->', '<script', 'src=""src/const.js""', 'language=""javascript""></script>', '<script', 'src=""src/functions.js""', 'language=""javascript""></script>', '<script', 'src=""src/controls.js""', 'language=""javascript""></script>', '<script', 'src=""src/party.js""', 'language=""javascript""></script>', '<script', 'src=""src/mouseSelect.js""', 'language=""javascript""></script>', '<script', 'src=""src/weatherEffects.js""', 'language=""javascript""></script>', '<script', 'src=""src/animatedObject.js""', 'language=""javascript""></script>', '<script', 'src=""src/mapPosition.js""', 'language=""javascript""></script>', '<script', 'src=""src/mapEditor.js""', 'language=""javascript""></script>', '<script', 'src=""src/ghobokObject.js""', 'language=""javascript""></script>', '<script', 'src=""src/mapObject.js""', 'language=""javascript""></script>', '<script', 'src=""src/ghobokMonster.js""', 'language=""javascript""></script>', '<script', 'src=""src/mapMonster.js""', 'language=""javascript""></script>', '<script', 'src=""src/hud.js""', 'language=""javascript""></script>', '<script', 'src=""src/dungeonTile.js""', 'language=""javascript""></script>', '<script', 'src=""src/mapPlan.js""', 'language=""javascript""></script>', '<script', 'src=""src/dungeonMap.js""', 'language=""javascript""></script>', '<script', 'src=""src/dungeonRenderer.js""', 'language=""javascript""></script>', '<script', 'src=""src/core.js""', 'language=""javascript""></script>', '</html>', '```']",challenge not surrounded by ''': ,
"(function($){
    $.fn.PageControl = function( options ){
        var defaults = {
        };

        var $this = $(this)
            , $ul = $this.children(""ul"")
            , $selectors = $ul.find(""li a"")
            , $selector = $ul.find("".active a"")
            , $frames = $this.find("".frames .frame"")
            , $frame = $frames.children("".frame.active"")
            ;

        var initSelectors = function(selectors){
            $.each(selectors, function(i, s){
                if ($(s).parent(""li"").hasClass(""active"")) {
                    var target = $(s).attr(""href"");
                    $(target).show();
                }
            })

            selectors.on('click', function(e){
                e.preventDefault();
                var $a = $(this);
                if (!$a.parent('li').hasClass('active')) {
                    $frames.hide();
                    $ul.find(""li"").removeClass(""active"");
                    var target = $($a.attr(""href""));
                    target.show();
                    $(this).parent(""li"").addClass(""active"");
                }
                if ($(this).parent(""li"").parent(""ul"").parent("".page-control"").find("".menu-pull-bar"").is("":visible"")) {
                    $(this).parent(""li"").parent(""ul"").slideUp(""fast"", function () {
                        $(this).css(""overflow"", """").css(""display"", """");
                    });
                }
            });

            $("".page-control .menu-pull-bar"").text($("".page-control ul li.active a"").text());
            $("".page-control ul li a"").click(function (e) {
                e.preventDefault();
                $(this).parent(""li"").parent(""ul"").parent("".page-control"").find("".menu-pull-bar"").text($(this).text());
            });
        }

        return this.each(function(){
            if ( options ) {
                $.extend(defaults, options)
            }

            initSelectors($selectors);
        });
    }

    $(function () {
        $('[data-role=""page-control""]').each(function () {
            $(this).PageControl();
        })
        $(window).resize(function(){
            if ($(window).width() >= 768) {
                $("".page-control ul"").css({
                    display: ""block""
                    ,overflow: ""visible""
                })
            }
            if ($(window).width() < 768 && $("".page-control ul"").css(""display"") == ""block"") {
                $("".page-control ul"").hide();
            }
        })
    })
})(window.jQuery);","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```(function($){', '$.fn.PageControl', '=', 'function(', 'options', '){', 'var', 'defaults', '=', '{', '};', 'var', '$this', '=', '$(this)', ',', '$ul', '=', '$this.children(""ul"")', ',', '$selectors', '=', '$ul.find(""li', 'a"")', ',', '$selector', '=', '$ul.find("".active', 'a"")', ',', '$frames', '=', '$this.find("".frames', '.frame"")', ',', '$frame', '=', '$frames.children("".frame.active"")', ';', 'var', 'initSelectors', '=', 'function(selectors){', '$.each(selectors,', 'function(i,', 's){', 'if', '($(s).parent(""li"").hasClass(""active""))', '{', 'var', 'target', '=', '$(s).attr(""href"");', '$(target).show();', '}', '})', ""selectors.on('click',"", 'function(e){', 'e.preventDefault();', 'var', '$a', '=', '$(this);', 'if', ""(!$a.parent('li').hasClass('active'))"", '{', '$frames.hide();', '$ul.find(""li"").removeClass(""active"");', 'var', 'target', '=', '$($a.attr(""href""));', 'target.show();', '$(this).parent(""li"").addClass(""active"");', '}', 'if', '($(this).parent(""li"").parent(""ul"").parent("".page-control"").find("".menu-pull-bar"").is("":visible""))', '{', '$(this).parent(""li"").parent(""ul"").slideUp(""fast"",', 'function', '()', '{', '$(this).css(""overflow"",', '"""").css(""display"",', '"""");', '});', '}', '});', '$("".page-control', '.menu-pull-bar"").text($("".page-control', 'ul', 'li.active', 'a"").text());', '$("".page-control', 'ul', 'li', 'a"").click(function', '(e)', '{', 'e.preventDefault();', '$(this).parent(""li"").parent(""ul"").parent("".page-control"").find("".menu-pull-bar"").text($(this).text());', '});', '}', 'return', 'this.each(function(){', 'if', '(', 'options', ')', '{', '$.extend(defaults,', 'options)', '}', 'initSelectors($selectors);', '});', '}', '$(function', '()', '{', '$(\'[data-role=""page-control""]\').each(function', '()', '{', '$(this).PageControl();', '})', '$(window).resize(function(){', 'if', '($(window).width()', '>=', '768)', '{', '$("".page-control', 'ul"").css({', 'display:', '""block""', ',overflow:', '""visible""', '})', '}', 'if', '($(window).width()', '<', '768', '&&', '$("".page-control', 'ul"").css(""display"")', '==', '""block"")', '{', '$("".page-control', 'ul"").hide();', '}', '})', '})', '})(window.jQuery);```']",challenge not surrounded by ''': ,
"/*
 * Copyright (C) 2007-2022 Crafter Software Corporation. All Rights Reserved.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 3 as published by
 * the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.craftercms.studio.api.v1.util.filter;


import org.craftercms.studio.api.v1.to.ContentItemTO;

import static org.craftercms.studio.api.v2.utils.StudioConfiguration.CONTENT_TYPES_FILTER_PAGES_INCLUDE_PATTERN;

public class PageFilter extends AbstractFilter {

    @Override
    public String getIncludePattern() {
        return studioConfiguration.getProperty(CONTENT_TYPES_FILTER_PAGES_INCLUDE_PATTERN);
    }

    @Override
    public boolean filter(ContentItemTO item) {
        boolean isMatched = match(item.contentType);
        return (!item.component && !item.document && isMatched);
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '(C)', '2007-2022', 'Crafter', 'Software', 'Corporation.', 'All', 'Rights', 'Reserved.', '*', '*', 'This', 'program', 'is', 'free', 'software:', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', '*', 'it', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'version', '3', 'as', 'published', 'by', '*', 'the', 'Free', 'Software', 'Foundation.', '*', '*', 'This', 'program', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', '*', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', '*', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', '*', 'GNU', 'General', 'Public', 'License', 'for', 'more', 'details.', '*', '*', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'General', 'Public', 'License', '*', 'along', 'with', 'this', 'program.', 'If', 'not,', 'see', '<http://www.gnu.org/licenses/>.', '*/', 'package', 'org.craftercms.studio.api.v1.util.filter;', 'import', 'org.craftercms.studio.api.v1.to.ContentItemTO;', 'import', 'static', 'org.craftercms.studio.api.v2.utils.StudioConfiguration.CONTENT_TYPES_FILTER_PAGES_INCLUDE_PATTERN;', 'public', 'class', 'PageFilter', 'extends', 'AbstractFilter', '{', '@Override', 'public', 'String', 'getIncludePattern()', '{', 'return', 'studioConfiguration.getProperty(CONTENT_TYPES_FILTER_PAGES_INCLUDE_PATTERN);', '}', '@Override', 'public', 'boolean', 'filter(ContentItemTO', 'item)', '{', 'boolean', 'isMatched', '=', 'match(item.contentType);', 'return', '(!item.component', '&&', '!item.document', '&&', 'isMatched);', '}', '}', '```']",challenge not surrounded by ''': ,
"-- -----------------------------------------------------------------------------
-- $Id: mysql_update_tf-b4rt-5.to.tf-b4rt-6.sql 2607 2007-03-09 19:33:07Z b4rt $
-- -----------------------------------------------------------------------------
--
-- MySQL-Update-File for 'Torrentflux-2.1-b4rt-6'.
-- Updates a 'Torrentflux 2.1-b4rt-5' Database to a 'Torrentflux 2.1-b4rt-6'.
--
-- This Stuff is provided 'as-is'. In no way will the author be held
-- liable for any damages to your soft- or hardware from this.
-- -----------------------------------------------------------------------------

--
-- tf_torrent_totals
--
CREATE TABLE tf_torrent_totals (
  tid VARCHAR(40) NOT NULL default '',
  uptotal BIGINT(80) NOT NULL default '0',
  downtotal BIGINT(80) NOT NULL default '0',
  PRIMARY KEY  (tid)
) TYPE=MyISAM;

--
-- tf_torrents
--
ALTER TABLE tf_torrents ADD `btclient` VARCHAR(32) DEFAULT 'tornado' NOT NULL ;

--
-- tf_xfer
--
ALTER TABLE tf_xfer CHANGE `download` `download` BIGINT(80) DEFAULT '0' NOT NULL;
ALTER TABLE tf_xfer CHANGE `upload` `upload` BIGINT(80) DEFAULT '0' NOT NULL;

--
-- extra inserts
--
INSERT INTO tf_settings VALUES ('btclient','tornado');
INSERT INTO tf_settings VALUES ('btclient_tornado_bin','/var/www/TF_BitTornado/btphptornado.py');
INSERT INTO tf_settings VALUES ('btclient_tornado_options','--alloc_type sparse --min_peers 40 --upnp_nat_access 0 --write_buffer_size 8');
INSERT INTO tf_settings VALUES ('btclient_transmission_bin','/usr/local/bin/transmissioncli');
INSERT INTO tf_settings VALUES ('btclient_transmission_options','');


","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```--', '-----------------------------------------------------------------------------', '--', '$Id:', 'mysql_update_tf-b4rt-5.to.tf-b4rt-6.sql', '2607', '2007-03-09', '19:33:07Z', 'b4rt', '$', '--', '-----------------------------------------------------------------------------', '--', '--', 'MySQL-Update-File', 'for', ""'Torrentflux-2.1-b4rt-6'."", '--', 'Updates', 'a', ""'Torrentflux"", ""2.1-b4rt-5'"", 'Database', 'to', 'a', ""'Torrentflux"", ""2.1-b4rt-6'."", '--', '--', 'This', 'Stuff', 'is', 'provided', ""'as-is'."", 'In', 'no', 'way', 'will', 'the', 'author', 'be', 'held', '--', 'liable', 'for', 'any', 'damages', 'to', 'your', 'soft-', 'or', 'hardware', 'from', 'this.', '--', '-----------------------------------------------------------------------------', '--', '--', 'tf_torrent_totals', '--', 'CREATE', 'TABLE', 'tf_torrent_totals', '(', 'tid', 'VARCHAR(40)', 'NOT', 'NULL', 'default', ""'',"", 'uptotal', 'BIGINT(80)', 'NOT', 'NULL', 'default', ""'0',"", 'downtotal', 'BIGINT(80)', 'NOT', 'NULL', 'default', ""'0',"", 'PRIMARY', 'KEY', '(tid)', ')', 'TYPE=MyISAM;', '--', '--', 'tf_torrents', '--', 'ALTER', 'TABLE', 'tf_torrents', 'ADD', '`btclient`', 'VARCHAR(32)', 'DEFAULT', ""'tornado'"", 'NOT', 'NULL', ';', '--', '--', 'tf_xfer', '--', 'ALTER', 'TABLE', 'tf_xfer', 'CHANGE', '`download`', '`download`', 'BIGINT(80)', 'DEFAULT', ""'0'"", 'NOT', 'NULL;', 'ALTER', 'TABLE', 'tf_xfer', 'CHANGE', '`upload`', '`upload`', 'BIGINT(80)', 'DEFAULT', ""'0'"", 'NOT', 'NULL;', '--', '--', 'extra', 'inserts', '--', 'INSERT', 'INTO', 'tf_settings', 'VALUES', ""('btclient','tornado');"", 'INSERT', 'INTO', 'tf_settings', 'VALUES', ""('btclient_tornado_bin','/var/www/TF_BitTornado/btphptornado.py');"", 'INSERT', 'INTO', 'tf_settings', 'VALUES', ""('btclient_tornado_options','--alloc_type"", 'sparse', '--min_peers', '40', '--upnp_nat_access', '0', '--write_buffer_size', ""8');"", 'INSERT', 'INTO', 'tf_settings', 'VALUES', ""('btclient_transmission_bin','/usr/local/bin/transmissioncli');"", 'INSERT', 'INTO', 'tf_settings', 'VALUES', ""('btclient_transmission_options','');"", '```']",challenge not surrounded by ''': ,
"<!doctype html>
<html lang=""en"">
<head>
  <meta charset=""UTF-8"">
  <title>Example - example-example37-production</title>
  

  <script src=""//ajax.googleapis.com/ajax/libs/angularjs/1.5.7/angular.min.js""></script>
  <script src=""script.js""></script>
  

  
</head>
<body ng-app=""debounceExample"">
  <div ng-controller=""ExampleController"">
  <form>
    Name:
    <input type=""text"" ng-model=""user.name"" ng-model-options=""{ debounce: 250 }"" /><br />
  </form>
  <pre>username = ""{{user.name}}""</pre>
</div>
</body>
</html>","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!doctype', 'html>', '<html', 'lang=""en"">', '<head>', '<meta', 'charset=""UTF-8"">', '<title>Example', '-', 'example-example37-production</title>', '<script', 'src=""//ajax.googleapis.com/ajax/libs/angularjs/1.5.7/angular.min.js""></script>', '<script', 'src=""script.js""></script>', '</head>', '<body', 'ng-app=""debounceExample"">', '<div', 'ng-controller=""ExampleController"">', '<form>', 'Name:', '<input', 'type=""text""', 'ng-model=""user.name""', 'ng-model-options=""{', 'debounce:', '250', '}""', '/><br', '/>', '</form>', '<pre>username', '=', '""{{user.name}}""</pre>', '</div>', '</body>', '</html>```']",challenge not surrounded by ''': ,
"package de.diddiz.codegeneration.codetree;

import java.util.List;
import java.util.Set;
import com.google.common.cache.CacheBuilder;
import com.google.common.cache.CacheLoader;
import com.google.common.cache.LoadingCache;
import de.diddiz.codegeneration.codetree.evaluation.EvaluationContext;
import de.diddiz.codegeneration.codetree.generator.Context;
import de.diddiz.codegeneration.codetree.generator.Generator;

public class IntLiteral extends IntValue
{
	private static final LoadingCache<Integer, IntLiteral> CACHE = CacheBuilder.newBuilder().build(new CacheLoader<Integer, IntLiteral>() {
		@Override
		public IntLiteral load(Integer i) throws Exception {
			return new IntLiteral(i);
		}
	});

	private final int val;

	private IntLiteral(int val) {
		this.val = val;
	}

	@Override
	public int eval(EvaluationContext context) {
		return val;
	}

	@Override
	public IntValue mutate(Set<CodeElement> mutated, Context context) {
		if (mutated.contains(this)) { // Mutate this
			if (context.random.nextDouble() < 0.75) // Alter value
				return Generator.generateIntLiteral(context);
			return Generator.generateValue(context); // Create completely new value
		}
		// Mutate children, has no children
		return this;
	}

	@Override
	public String toCode() {
		return String.valueOf(val);
	}

	@Override
	protected void gatherChildren(List<CodeElement> children) {
		// No children
	}

	public static IntLiteral create(int val) {
		return CACHE.getUnchecked(val);
	}
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'de.diddiz.codegeneration.codetree;', 'import', 'java.util.List;', 'import', 'java.util.Set;', 'import', 'com.google.common.cache.CacheBuilder;', 'import', 'com.google.common.cache.CacheLoader;', 'import', 'com.google.common.cache.LoadingCache;', 'import', 'de.diddiz.codegeneration.codetree.evaluation.EvaluationContext;', 'import', 'de.diddiz.codegeneration.codetree.generator.Context;', 'import', 'de.diddiz.codegeneration.codetree.generator.Generator;', 'public', 'class', 'IntLiteral', 'extends', 'IntValue', '{', 'private', 'static', 'final', 'LoadingCache<Integer,', 'IntLiteral>', 'CACHE', '=', 'CacheBuilder.newBuilder().build(new', 'CacheLoader<Integer,', 'IntLiteral>()', '{', '@Override', 'public', 'IntLiteral', 'load(Integer', 'i)', 'throws', 'Exception', '{', 'return', 'new', 'IntLiteral(i);', '}', '});', 'private', 'final', 'int', 'val;', 'private', 'IntLiteral(int', 'val)', '{', 'this.val', '=', 'val;', '}', '@Override', 'public', 'int', 'eval(EvaluationContext', 'context)', '{', 'return', 'val;', '}', '@Override', 'public', 'IntValue', 'mutate(Set<CodeElement>', 'mutated,', 'Context', 'context)', '{', 'if', '(mutated.contains(this))', '{', '//', 'Mutate', 'this', 'if', '(context.random.nextDouble()', '<', '0.75)', '//', 'Alter', 'value', 'return', 'Generator.generateIntLiteral(context);', 'return', 'Generator.generateValue(context);', '//', 'Create', 'completely', 'new', 'value', '}', '//', 'Mutate', 'children,', 'has', 'no', 'children', 'return', 'this;', '}', '@Override', 'public', 'String', 'toCode()', '{', 'return', 'String.valueOf(val);', '}', '@Override', 'protected', 'void', 'gatherChildren(List<CodeElement>', 'children)', '{', '//', 'No', 'children', '}', 'public', 'static', 'IntLiteral', 'create(int', 'val)', '{', 'return', 'CACHE.getUnchecked(val);', '}', '}', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright (c) 2004, Oracle and/or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 */

/* @test
 * @bug 4729342
 * @summary Check for CancelledKeyException when key cancelled during select
 */

import java.nio.channels.*;
import java.io.IOException;
import java.net.*;

public class SelectAndCancel {
    static ServerSocketChannel ssc;
    static Selector selector;
    static SelectionKey sk;
    static InetSocketAddress isa;
    public static int TEST_PORT = 40170;

    /*
     * CancelledKeyException is the failure symptom of 4729342
     * NOTE: The failure is timing dependent and is not always
     * seen immediately when the bug is present.
     */
    public static void main(String[] args) throws Exception {
        InetAddress lh = InetAddress.getLocalHost();
        isa = new InetSocketAddress(lh, TEST_PORT);
        selector = Selector.open();
        ssc = ServerSocketChannel.open();

        // Create and start a selector in a separate thread.
        new Thread(new Runnable() {
                public void run() {
                    try {
                        ssc.configureBlocking(false);
                        ssc.socket().bind(isa);
                        sk = ssc.register(selector, SelectionKey.OP_ACCEPT);
                        selector.select();
                    } catch (IOException e) {
                        System.err.println(""error in selecting thread"");
                        e.printStackTrace();
                    }
                }
            }).start();

        // Wait for above thread to get to select() before we call close.
        Thread.sleep(3000);

        // Try to close. This should wakeup select.
        new Thread(new Runnable() {
                public void run() {
                    try {
                        SocketChannel sc = SocketChannel.open();
                        sc.connect(isa);
                        ssc.close();
                        sk.cancel();
                        sc.close();
                    } catch (IOException e) {
                        System.err.println(""error in closing thread"");
                        System.err.println(e);
                    }
                }
            }).start();

        // Wait for select() to be awakened, which should be done by close.
        Thread.sleep(3000);

        selector.wakeup();
        selector.close();
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '(c)', '2004,', 'Oracle', 'and/or', 'its', 'affiliates.', 'All', 'rights', 'reserved.', '*', 'DO', 'NOT', 'ALTER', 'OR', 'REMOVE', 'COPYRIGHT', 'NOTICES', 'OR', 'THIS', 'FILE', 'HEADER.', '*', '*', 'This', 'code', 'is', 'free', 'software;', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', 'it', '*', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'version', '2', 'only,', 'as', '*', 'published', 'by', 'the', 'Free', 'Software', 'Foundation.', '*', '*', 'This', 'code', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', 'but', 'WITHOUT', '*', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', 'MERCHANTABILITY', 'or', '*', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', 'GNU', 'General', 'Public', 'License', '*', 'version', '2', 'for', 'more', 'details', '(a', 'copy', 'is', 'included', 'in', 'the', 'LICENSE', 'file', 'that', '*', 'accompanied', 'this', 'code).', '*', '*', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'version', '*', '2', 'along', 'with', 'this', 'work;', 'if', 'not,', 'write', 'to', 'the', 'Free', 'Software', 'Foundation,', '*', 'Inc.,', '51', 'Franklin', 'St,', 'Fifth', 'Floor,', 'Boston,', 'MA', '02110-1301', 'USA.', '*', '*', 'Please', 'contact', 'Oracle,', '500', 'Oracle', 'Parkway,', 'Redwood', 'Shores,', 'CA', '94065', 'USA', '*', 'or', 'visit', 'www.oracle.com', 'if', 'you', 'need', 'additional', 'information', 'or', 'have', 'any', '*', 'questions.', '*/', '/*', '@test', '*', '@bug', '4729342', '*', '@summary', 'Check', 'for', 'CancelledKeyException', 'when', 'key', 'cancelled', 'during', 'select', '*/', 'import', 'java.nio.channels.*;', 'import', 'java.io.IOException;', 'import', 'java.net.*;', 'public', 'class', 'SelectAndCancel', '{', 'static', 'ServerSocketChannel', 'ssc;', 'static', 'Selector', 'selector;', 'static', 'SelectionKey', 'sk;', 'static', 'InetSocketAddress', 'isa;', 'public', 'static', 'int', 'TEST_PORT', '=', '40170;', '/*', '*', 'CancelledKeyException', 'is', 'the', 'failure', 'symptom', 'of', '4729342', '*', 'NOTE:', 'The', 'failure', 'is', 'timing', 'dependent', 'and', 'is', 'not', 'always', '*', 'seen', 'immediately', 'when', 'the', 'bug', 'is', 'present.', '*/', 'public', 'static', 'void', 'main(String[]', 'args)', 'throws', 'Exception', '{', 'InetAddress', 'lh', '=', 'InetAddress.getLocalHost();', 'isa', '=', 'new', 'InetSocketAddress(lh,', 'TEST_PORT);', 'selector', '=', 'Selector.open();', 'ssc', '=', 'ServerSocketChannel.open();', '//', 'Create', 'and', 'start', 'a', 'selector', 'in', 'a', 'separate', 'thread.', 'new', 'Thread(new', 'Runnable()', '{', 'public', 'void', 'run()', '{', 'try', '{', 'ssc.configureBlocking(false);', 'ssc.socket().bind(isa);', 'sk', '=', 'ssc.register(selector,', 'SelectionKey.OP_ACCEPT);', 'selector.select();', '}', 'catch', '(IOException', 'e)', '{', 'System.err.println(""error', 'in', 'selecting', 'thread"");', 'e.printStackTrace();', '}', '}', '}).start();', '//', 'Wait', 'for', 'above', 'thread', 'to', 'get', 'to', 'select()', 'before', 'we', 'call', 'close.', 'Thread.sleep(3000);', '//', 'Try', 'to', 'close.', 'This', 'should', 'wakeup', 'select.', 'new', 'Thread(new', 'Runnable()', '{', 'public', 'void', 'run()', '{', 'try', '{', 'SocketChannel', 'sc', '=', 'SocketChannel.open();', 'sc.connect(isa);', 'ssc.close();', 'sk.cancel();', 'sc.close();', '}', 'catch', '(IOException', 'e)', '{', 'System.err.println(""error', 'in', 'closing', 'thread"");', 'System.err.println(e);', '}', '}', '}).start();', '//', 'Wait', 'for', 'select()', 'to', 'be', 'awakened,', 'which', 'should', 'be', 'done', 'by', 'close.', 'Thread.sleep(3000);', 'selector.wakeup();', 'selector.close();', '}', '}', '```']",challenge not surrounded by ''': ,
"/*
  Write a program to display all possible solutions for the Eight Queens puzzle
  in a scroll pane. For each solution, put a label to denote the solution
  number.
*/

import javafx.application.Application;
import javafx.stage.Stage;
import javafx.scene.Scene;

public class E22_23 extends Application{
  @Override
  public void start(Stage primaryStage) {
    MultipleBoardPane mbp = new MultipleBoardPane();

    Scene scene = new Scene(mbp);
    primaryStage.setTitle(""E22_23"");
    primaryStage.setScene(scene);
    primaryStage.show();
  }

  public static void main(String[] args) {
    launch(args);
  }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', 'Write', 'a', 'program', 'to', 'display', 'all', 'possible', 'solutions', 'for', 'the', 'Eight', 'Queens', 'puzzle', 'in', 'a', 'scroll', 'pane.', 'For', 'each', 'solution,', 'put', 'a', 'label', 'to', 'denote', 'the', 'solution', 'number.', '*/', 'import', 'javafx.application.Application;', 'import', 'javafx.stage.Stage;', 'import', 'javafx.scene.Scene;', 'public', 'class', 'E22_23', 'extends', 'Application{', '@Override', 'public', 'void', 'start(Stage', 'primaryStage)', '{', 'MultipleBoardPane', 'mbp', '=', 'new', 'MultipleBoardPane();', 'Scene', 'scene', '=', 'new', 'Scene(mbp);', 'primaryStage.setTitle(""E22_23"");', 'primaryStage.setScene(scene);', 'primaryStage.show();', '}', 'public', 'static', 'void', 'main(String[]', 'args)', '{', 'launch(args);', '}', '}', '```']",challenge not surrounded by ''': ,
"package com.auth.dao;

import com.auth.model.AuthUser;

public interface AuthUserMapper {
    int deleteByPrimaryKey(Long id);

    int insert(AuthUser record);

    int insertSelective(AuthUser record);

    AuthUser selectByPrimaryKey(Long id);

    int updateByPrimaryKeySelective(AuthUser record);

    int updateByPrimaryKey(AuthUser record);
}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.auth.dao;', 'import', 'com.auth.model.AuthUser;', 'public', 'interface', 'AuthUserMapper', '{', 'int', 'deleteByPrimaryKey(Long', 'id);', 'int', 'insert(AuthUser', 'record);', 'int', 'insertSelective(AuthUser', 'record);', 'AuthUser', 'selectByPrimaryKey(Long', 'id);', 'int', 'updateByPrimaryKeySelective(AuthUser', 'record);', 'int', 'updateByPrimaryKey(AuthUser', 'record);', '}```']",challenge not surrounded by ''': ,
"import { spawn } from 'child_process'
import { Starter } from 'starter'
import { Builder } from 'builder'
import Checker from 'utils/checker'
import { startSpinner, stopSpinner } from 'utils/logger'

jest.unmock('starter')

jest.mock('child_process')
jest.mock('utils/logger')
jest.mock('utils/checker')

const setup = async flags => {
  await Starter.run({ flags: flags, options: [{ inspect: true }] })
}

describe('Starter', () => {
  describe('Build successful', () => {
    describe('with reload flag', () => {
      beforeEach(() => setup({ reload: true }))

      it('ensures process is run in app directory', () => {
        expect(Checker.ensure).toHaveBeenCalled()
      })

      it('logs application start', () => {
        expect(startSpinner).toHaveBeenCalledWith('Starting application')
      })

      it('runs builder with platform and env', () => {
        expect(Builder.run).toHaveBeenCalledWith(
          'linux',
          'development',
          {
            reload: true
          }
        )
      })

      it('runs electron app', () => {
        expect(spawn).toHaveBeenCalledWith(
          'npx',
          ['nodemon', '-w builds/development/main', '-e js',
            '-q', 'node_modules/.bin/electron', 'builds/development', { inspect: true }],
          { env: {}, shell: true, stdio: 'inherit' }
        )
      })

      it('stops spinner with success', () => {
        expect(stopSpinner).toHaveBeenCalledWith('Starting application')
      })
    })

    describe('without reload flag', () => {
      beforeEach(() => setup({ reload: false }))

      it('runs builder with platform and env', () => {
        expect(Builder.run).toHaveBeenCalledWith(
          'linux',
          'development',
          {
            reload: false
          }
        )
      })

      it('runs electron app', () => {
        expect(spawn).toHaveBeenCalledWith(
          'npx',
          ['electron', 'builds/development', { inspect: true }],
          { env: {}, shell: true, stdio: 'inherit' }
        )
      })
    })
  })

  describe('Build unsuccessful', () => {
    beforeEach(() => {
      Builder.__setBuildError('Unknown error')
      setup()
    })

    it('should not log application start', () => {
      expect(startSpinner).toHaveBeenCalledTimes(0)
    })

    it('should not run electron app', () => {
      expect(spawn).toHaveBeenCalledTimes(0)
    })
  })
})
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', '{', 'spawn', '}', 'from', ""'child_process'"", 'import', '{', 'Starter', '}', 'from', ""'starter'"", 'import', '{', 'Builder', '}', 'from', ""'builder'"", 'import', 'Checker', 'from', ""'utils/checker'"", 'import', '{', 'startSpinner,', 'stopSpinner', '}', 'from', ""'utils/logger'"", ""jest.unmock('starter')"", ""jest.mock('child_process')"", ""jest.mock('utils/logger')"", ""jest.mock('utils/checker')"", 'const', 'setup', '=', 'async', 'flags', '=>', '{', 'await', 'Starter.run({', 'flags:', 'flags,', 'options:', '[{', 'inspect:', 'true', '}]', '})', '}', ""describe('Starter',"", '()', '=>', '{', ""describe('Build"", ""successful',"", '()', '=>', '{', ""describe('with"", 'reload', ""flag',"", '()', '=>', '{', 'beforeEach(()', '=>', 'setup({', 'reload:', 'true', '}))', ""it('ensures"", 'process', 'is', 'run', 'in', 'app', ""directory',"", '()', '=>', '{', 'expect(Checker.ensure).toHaveBeenCalled()', '})', ""it('logs"", 'application', ""start',"", '()', '=>', '{', ""expect(startSpinner).toHaveBeenCalledWith('Starting"", ""application')"", '})', ""it('runs"", 'builder', 'with', 'platform', 'and', ""env',"", '()', '=>', '{', 'expect(Builder.run).toHaveBeenCalledWith(', ""'linux',"", ""'development',"", '{', 'reload:', 'true', '}', ')', '})', ""it('runs"", 'electron', ""app',"", '()', '=>', '{', 'expect(spawn).toHaveBeenCalledWith(', ""'npx',"", ""['nodemon',"", ""'-w"", ""builds/development/main',"", ""'-e"", ""js',"", ""'-q',"", ""'node_modules/.bin/electron',"", ""'builds/development',"", '{', 'inspect:', 'true', '}],', '{', 'env:', '{},', 'shell:', 'true,', 'stdio:', ""'inherit'"", '}', ')', '})', ""it('stops"", 'spinner', 'with', ""success',"", '()', '=>', '{', ""expect(stopSpinner).toHaveBeenCalledWith('Starting"", ""application')"", '})', '})', ""describe('without"", 'reload', ""flag',"", '()', '=>', '{', 'beforeEach(()', '=>', 'setup({', 'reload:', 'false', '}))', ""it('runs"", 'builder', 'with', 'platform', 'and', ""env',"", '()', '=>', '{', 'expect(Builder.run).toHaveBeenCalledWith(', ""'linux',"", ""'development',"", '{', 'reload:', 'false', '}', ')', '})', ""it('runs"", 'electron', ""app',"", '()', '=>', '{', 'expect(spawn).toHaveBeenCalledWith(', ""'npx',"", ""['electron',"", ""'builds/development',"", '{', 'inspect:', 'true', '}],', '{', 'env:', '{},', 'shell:', 'true,', 'stdio:', ""'inherit'"", '}', ')', '})', '})', '})', ""describe('Build"", ""unsuccessful',"", '()', '=>', '{', 'beforeEach(()', '=>', '{', ""Builder.__setBuildError('Unknown"", ""error')"", 'setup()', '})', ""it('should"", 'not', 'log', 'application', ""start',"", '()', '=>', '{', 'expect(startSpinner).toHaveBeenCalledTimes(0)', '})', ""it('should"", 'not', 'run', 'electron', ""app',"", '()', '=>', '{', 'expect(spawn).toHaveBeenCalledTimes(0)', '})', '})', '})', '```']",challenge not surrounded by ''': ,
"/* eslint-disable no-param-reassign */
import {
  UPDATE_STEAM_API_KEY,
  CANCEL_STEAM_ACCOUNT,
  RESTORE_STEAM_ACCOUNT,
  AUTHENTICATE_STEAM
} from '../actions/steam';

const initialState = {
  steam_id: 0,
  games: [],
};

export default function steam(state = initialState, action) {
  const { type, payload, error, meta } = action;

  switch (type) {
    case UPDATE_STEAM_API_KEY:
      return {
        ...state,
        api_key: payload.api_key
      };

    case CANCEL_STEAM_ACCOUNT:
      return {
        ...state,
        games: [],
        error: false,
        steam_id: undefined
      };

    case RESTORE_STEAM_ACCOUNT:
      if (error) {
        return {
          ...state,
          error: true
        };
      }
      return {
        ...state,
        error: false,
        api_key: payload.api_key,
        steam_id: payload.steam_id,
      };

    case AUTHENTICATE_STEAM:
      if (error) {
        return {
          ...state,
          error: true
        };
      }
      return {
        ...state,
        error: false,
        steam_id: payload.steam_id,
      };

    default:
      return state;
  }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', 'eslint-disable', 'no-param-reassign', '*/', 'import', '{', 'UPDATE_STEAM_API_KEY,', 'CANCEL_STEAM_ACCOUNT,', 'RESTORE_STEAM_ACCOUNT,', 'AUTHENTICATE_STEAM', '}', 'from', ""'../actions/steam';"", 'const', 'initialState', '=', '{', 'steam_id:', '0,', 'games:', '[],', '};', 'export', 'default', 'function', 'steam(state', '=', 'initialState,', 'action)', '{', 'const', '{', 'type,', 'payload,', 'error,', 'meta', '}', '=', 'action;', 'switch', '(type)', '{', 'case', 'UPDATE_STEAM_API_KEY:', 'return', '{', '...state,', 'api_key:', 'payload.api_key', '};', 'case', 'CANCEL_STEAM_ACCOUNT:', 'return', '{', '...state,', 'games:', '[],', 'error:', 'false,', 'steam_id:', 'undefined', '};', 'case', 'RESTORE_STEAM_ACCOUNT:', 'if', '(error)', '{', 'return', '{', '...state,', 'error:', 'true', '};', '}', 'return', '{', '...state,', 'error:', 'false,', 'api_key:', 'payload.api_key,', 'steam_id:', 'payload.steam_id,', '};', 'case', 'AUTHENTICATE_STEAM:', 'if', '(error)', '{', 'return', '{', '...state,', 'error:', 'true', '};', '}', 'return', '{', '...state,', 'error:', 'false,', 'steam_id:', 'payload.steam_id,', '};', 'default:', 'return', 'state;', '}', '}', '```']",challenge not surrounded by ''': ,
"﻿CREATE FUNCTION dbo.f_BinaryToBase64(@bin VARBINARY(MAX))
RETURNS VARCHAR(MAX)
AS
BEGIN
    DECLARE @Base64 VARCHAR(MAX)
    
    /*
        SELECT dbo.f_BinaryToBase64(CONVERT(VARBINARY(MAX), 'Converting this text to Base64...'))
    */
    
    SET @Base64 = CAST(N'' AS XML).value('xs:base64Binary(xs:hexBinary(sql:variable(""@bin"")))','VARCHAR(MAX)')

	-- Replacement for URLs!!!
    SET @Base64 = REPLACE(@Base64, '+', '-')
	SET @Base64 = REPLACE(@Base64, '/', '_')
	SET @Base64 = REPLACE(@Base64, '=', '')
    RETURN @Base64
END","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```\ufeffCREATE', 'FUNCTION', 'dbo.f_BinaryToBase64(@bin', 'VARBINARY(MAX))', 'RETURNS', 'VARCHAR(MAX)', 'AS', 'BEGIN', 'DECLARE', '@Base64', 'VARCHAR(MAX)', '/*', 'SELECT', 'dbo.f_BinaryToBase64(CONVERT(VARBINARY(MAX),', ""'Converting"", 'this', 'text', 'to', ""Base64...'))"", '*/', 'SET', '@Base64', '=', ""CAST(N''"", 'AS', 'XML).value(\'xs:base64Binary(xs:hexBinary(sql:variable(""@bin"")))\',\'VARCHAR(MAX)\')', '--', 'Replacement', 'for', 'URLs!!!', 'SET', '@Base64', '=', 'REPLACE(@Base64,', ""'+',"", ""'-')"", 'SET', '@Base64', '=', 'REPLACE(@Base64,', ""'/',"", ""'_')"", 'SET', '@Base64', '=', 'REPLACE(@Base64,', ""'=',"", ""'')"", 'RETURN', '@Base64', 'END```']",challenge not surrounded by ''': ,
"---
layout: post
title: 'Expanding API Gateway Connectors Into A World of API Deployment Startups'
sourceurl: http://apievangelist.com/2014/08/10/expanding-api-gateway-connectors-into-a-world-of-api-deployment-startups/
image: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-connector.png
---

<p><img style=""padding: 15px;"" src=""https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-connector.png"" alt="""" width=""200"" align=""right"" /></p>
<p>I&rsquo;m seeing an increase in the number of API deployment services this year, such as startups like <a href=""http://bit.ly/1jLr1Pf"">StrongLoop</a> and <a href=""http://bit.ly/1sgwGpq"">API Spark</a>. These companies are looking to help all of us deploy APIs from common systems, often without the need for IT or programming resources.</p>
<p>The providers I&rsquo;m seeing emerge are catering to some of the lowest hanging fruit for deploying APIs. The commonly used, and easiest to access systems, that contain the valuable content, data, and media we need to make accessible via APIs.</p>
<p>The common source for many of these API deploy solutions are:</p>
<ul class=""mainlist"">
<li><strong>Excel Spreadsheet&nbsp;with</strong>&nbsp;<a href=""https://sheetlabs.com"">SheetLabs</a></li>
<li><strong>Google Spreadsheet&nbsp;from</strong>&nbsp;<a href=""http://bit.ly/1sgwGpq"">API Spark</a></li>
<li><strong>Database&nbsp;At The</strong>&nbsp;<a href=""http://www.dreamfactory.com/"">Dream Factory</a></li>
</ul>
<p>These common information sources, represent the places where the average person in any size company, organization or government agency will be storing their valuable resources.  It makes sense that this new wave of API deployment startups would target these services.</p>
<p>If you consider every system integration option that classic API gateways have delivered, it provides a good reference for finding opportunities for building independent API deployment solutions, that if done right, could be a startup all by itself.</p>
<p>Not all companies can afford a full API gateway solution, and their needs are too small for a gateway. There is an emerging opportunity to help people quickly deploy APIs from common sources like spreadsheet, database, file stores, as well as more unique sources like specialty CMS and CRM systems.</p>
<p>Sometimes I like to look at the expanding API universe as a result of the SOA big bang, where all the tools that were in your SOA toolbox, being liberated, and available as independent services that you can get from an increasing number of new API deployment startups.</p>","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```---', 'layout:', 'post', 'title:', ""'Expanding"", 'API', 'Gateway', 'Connectors', 'Into', 'A', 'World', 'of', 'API', 'Deployment', ""Startups'"", 'sourceurl:', 'http://apievangelist.com/2014/08/10/expanding-api-gateway-connectors-into-a-world-of-api-deployment-startups/', 'image:', 'https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-connector.png', '---', '<p><img', 'style=""padding:', '15px;""', 'src=""https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-connector.png""', 'alt=""""', 'width=""200""', 'align=""right""', '/></p>', '<p>I&rsquo;m', 'seeing', 'an', 'increase', 'in', 'the', 'number', 'of', 'API', 'deployment', 'services', 'this', 'year,', 'such', 'as', 'startups', 'like', '<a', 'href=""http://bit.ly/1jLr1Pf"">StrongLoop</a>', 'and', '<a', 'href=""http://bit.ly/1sgwGpq"">API', 'Spark</a>.', 'These', 'companies', 'are', 'looking', 'to', 'help', 'all', 'of', 'us', 'deploy', 'APIs', 'from', 'common', 'systems,', 'often', 'without', 'the', 'need', 'for', 'IT', 'or', 'programming', 'resources.</p>', '<p>The', 'providers', 'I&rsquo;m', 'seeing', 'emerge', 'are', 'catering', 'to', 'some', 'of', 'the', 'lowest', 'hanging', 'fruit', 'for', 'deploying', 'APIs.', 'The', 'commonly', 'used,', 'and', 'easiest', 'to', 'access', 'systems,', 'that', 'contain', 'the', 'valuable', 'content,', 'data,', 'and', 'media', 'we', 'need', 'to', 'make', 'accessible', 'via', 'APIs.</p>', '<p>The', 'common', 'source', 'for', 'many', 'of', 'these', 'API', 'deploy', 'solutions', 'are:</p>', '<ul', 'class=""mainlist"">', '<li><strong>Excel', 'Spreadsheet&nbsp;with</strong>&nbsp;<a', 'href=""https://sheetlabs.com"">SheetLabs</a></li>', '<li><strong>Google', 'Spreadsheet&nbsp;from</strong>&nbsp;<a', 'href=""http://bit.ly/1sgwGpq"">API', 'Spark</a></li>', '<li><strong>Database&nbsp;At', 'The</strong>&nbsp;<a', 'href=""http://www.dreamfactory.com/"">Dream', 'Factory</a></li>', '</ul>', '<p>These', 'common', 'information', 'sources,', 'represent', 'the', 'places', 'where', 'the', 'average', 'person', 'in', 'any', 'size', 'company,', 'organization', 'or', 'government', 'agency', 'will', 'be', 'storing', 'their', 'valuable', 'resources.', 'It', 'makes', 'sense', 'that', 'this', 'new', 'wave', 'of', 'API', 'deployment', 'startups', 'would', 'target', 'these', 'services.</p>', '<p>If', 'you', 'consider', 'every', 'system', 'integration', 'option', 'that', 'classic', 'API', 'gateways', 'have', 'delivered,', 'it', 'provides', 'a', 'good', 'reference', 'for', 'finding', 'opportunities', 'for', 'building', 'independent', 'API', 'deployment', 'solutions,', 'that', 'if', 'done', 'right,', 'could', 'be', 'a', 'startup', 'all', 'by', 'itself.</p>', '<p>Not', 'all', 'companies', 'can', 'afford', 'a', 'full', 'API', 'gateway', 'solution,', 'and', 'their', 'needs', 'are', 'too', 'small', 'for', 'a', 'gateway.', 'There', 'is', 'an', 'emerging', 'opportunity', 'to', 'help', 'people', 'quickly', 'deploy', 'APIs', 'from', 'common', 'sources', 'like', 'spreadsheet,', 'database,', 'file', 'stores,', 'as', 'well', 'as', 'more', 'unique', 'sources', 'like', 'specialty', 'CMS', 'and', 'CRM', 'systems.</p>', '<p>Sometimes', 'I', 'like', 'to', 'look', 'at', 'the', 'expanding', 'API', 'universe', 'as', 'a', 'result', 'of', 'the', 'SOA', 'big', 'bang,', 'where', 'all', 'the', 'tools', 'that', 'were', 'in', 'your', 'SOA', 'toolbox,', 'being', 'liberated,', 'and', 'available', 'as', 'independent', 'services', 'that', 'you', 'can', 'get', 'from', 'an', 'increasing', 'number', 'of', 'new', 'API', 'deployment', 'startups.</p>```']",challenge not surrounded by ''': ,
"# Copyright 2013 - Noorul Islam K M
#
# Licensed under the Apache License, Version 2.0 (the ""License""); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

from solumclient.common import base as solum_base
from solumclient.openstack.common.apiclient import base as apiclient_base


class Platform(apiclient_base.Resource):
    def __repr__(self):
        return ""<Platform %s>"" % self._info


class PlatformManager(solum_base.BaseManager):
    resource_class = Platform

    def get(self, **kwargs):
        return self._get('/v1')
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', 'Copyright', '2013', '-', 'Noorul', 'Islam', 'K', 'M', '#', '#', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', 'you', 'may', '#', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', 'You', 'may', 'obtain', '#', 'a', 'copy', 'of', 'the', 'License', 'at', '#', '#', 'http://www.apache.org/licenses/LICENSE-2.0', '#', '#', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '#', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', 'WITHOUT', '#', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', 'See', 'the', '#', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', 'limitations', '#', 'under', 'the', 'License.', 'from', 'solumclient.common', 'import', 'base', 'as', 'solum_base', 'from', 'solumclient.openstack.common.apiclient', 'import', 'base', 'as', 'apiclient_base', 'class', 'Platform(apiclient_base.Resource):', 'def', '__repr__(self):', 'return', '""<Platform', '%s>""', '%', 'self._info', 'class', 'PlatformManager(solum_base.BaseManager):', 'resource_class', '=', 'Platform', 'def', 'get(self,', '**kwargs):', 'return', ""self._get('/v1')"", '```']",challenge not surrounded by ''': ,
"<div id=""imprensa"">
  <div class=""jumbotron lead"">
    <p>
      <a href=""http://eumae.pt/pt/post/filhos/kids.time"" target=""_blank""><i class=""fa fa-fw fa-newspaper-o""></i> Eu, Mãe</a>
    </p>
    <p>
    	<a href=""http://www.ritaferroalvim.com/2014/09/kids-time.html"" target=""_blank""><i class=""fa fa-fw fa-newspaper-o""></i> Rita Ferro Alvim</a>
    </p>
    <p>
    	<a href=""http://cacomae.blogspot.pt/2014/09/deitar-cedo-e-cedo-erguer-da-saude-e.html?showComment=1411082309097"" target=""_blank""><i class=""fa fa-fw fa-newspaper-o""></i> Cacomae</a>
    </p>
    <p>
    	<a href=""http://www.vip.pt/55612a8/mod_artigos_obj_moda.aspx?sid=e4d2cb86-26fb-4a44-a35d-8ed2e82ff8c4&cntx=2a%2BEjZQ9JPKkbByS8N5eIaXrKy3P1Qn8sOvu%2F8OZHmodWRPi4ks3YbeiuND%2B%2BCEp"" target=""_blank""><i class=""fa fa-fw fa-newspaper-o""></i> VIP</a>
    </p>
    <p>
    	<a href=""http://fama.sapo.pt/fotogaleria/famosas-com-os-filhos-nas-compras"" target=""_blank""><i class=""fa fa-fw fa-newspaper-o""></i> SAPO Fama</a>
    </p>
    <p>
    	<a href=""http://pt-starsonline.com/index.php/eventos/setembro-2014/famosas-levam-filhos-a-evento-para-a-familia"" target=""_blank""><i class=""fa fa-fw fa-newspaper-o""></i> Stars Online</a></p></p>
    <p>
    	<a href=""http://crescer.sapo.pt/atualidade/noticias/o-evento-para-a-familia-esta-a-chegar"" target=""_blank""><i class=""fa fa-fw fa-newspaper-o""></i> SAPO Crescer</a>
    </p>
    <p>
    	<a href=""http://canelaehortela.com/kids-time-evento-para-toda-a-familia-chega-a-lisboa-no-mes-de-outubro/"" target=""_blank""><i class=""fa fa-fw fa-newspaper-o""></i> Canela e Hortelã</a>
    </p>
    <p>
    	<a href=""http://estrelaseouricos.crescer.sapo.pt/temas/agenda-de-pais/kids-time---e-tempo-de-familia-10453-0.html"" target=""_blank""><i class=""fa fa-fw fa-newspaper-o""></i> Estrelas e Ouriços</a>
    </p>
    <p>
    	<a href=""http://www.pumpkin.pt/agenda/outras-atividades/kids-time-e-tempo-de-familia"" target=""_blank""><i class=""fa fa-fw fa-newspaper-o""></i> Pumpkin. A Vida em Família</a>
    </p>
</div>
</div>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<div', 'id=""imprensa"">', '<div', 'class=""jumbotron', 'lead"">', '<p>', '<a', 'href=""http://eumae.pt/pt/post/filhos/kids.time""', 'target=""_blank""><i', 'class=""fa', 'fa-fw', 'fa-newspaper-o""></i>', 'Eu,', 'Mãe</a>', '</p>', '<p>', '<a', 'href=""http://www.ritaferroalvim.com/2014/09/kids-time.html""', 'target=""_blank""><i', 'class=""fa', 'fa-fw', 'fa-newspaper-o""></i>', 'Rita', 'Ferro', 'Alvim</a>', '</p>', '<p>', '<a', 'href=""http://cacomae.blogspot.pt/2014/09/deitar-cedo-e-cedo-erguer-da-saude-e.html?showComment=1411082309097""', 'target=""_blank""><i', 'class=""fa', 'fa-fw', 'fa-newspaper-o""></i>', 'Cacomae</a>', '</p>', '<p>', '<a', 'href=""http://www.vip.pt/55612a8/mod_artigos_obj_moda.aspx?sid=e4d2cb86-26fb-4a44-a35d-8ed2e82ff8c4&cntx=2a%2BEjZQ9JPKkbByS8N5eIaXrKy3P1Qn8sOvu%2F8OZHmodWRPi4ks3YbeiuND%2B%2BCEp""', 'target=""_blank""><i', 'class=""fa', 'fa-fw', 'fa-newspaper-o""></i>', 'VIP</a>', '</p>', '<p>', '<a', 'href=""http://fama.sapo.pt/fotogaleria/famosas-com-os-filhos-nas-compras""', 'target=""_blank""><i', 'class=""fa', 'fa-fw', 'fa-newspaper-o""></i>', 'SAPO', 'Fama</a>', '</p>', '<p>', '<a', 'href=""http://pt-starsonline.com/index.php/eventos/setembro-2014/famosas-levam-filhos-a-evento-para-a-familia""', 'target=""_blank""><i', 'class=""fa', 'fa-fw', 'fa-newspaper-o""></i>', 'Stars', 'Online</a></p></p>', '<p>', '<a', 'href=""http://crescer.sapo.pt/atualidade/noticias/o-evento-para-a-familia-esta-a-chegar""', 'target=""_blank""><i', 'class=""fa', 'fa-fw', 'fa-newspaper-o""></i>', 'SAPO', 'Crescer</a>', '</p>', '<p>', '<a', 'href=""http://canelaehortela.com/kids-time-evento-para-toda-a-familia-chega-a-lisboa-no-mes-de-outubro/""', 'target=""_blank""><i', 'class=""fa', 'fa-fw', 'fa-newspaper-o""></i>', 'Canela', 'e', 'Hortelã</a>', '</p>', '<p>', '<a', 'href=""http://estrelaseouricos.crescer.sapo.pt/temas/agenda-de-pais/kids-time---e-tempo-de-familia-10453-0.html""', 'target=""_blank""><i', 'class=""fa', 'fa-fw', 'fa-newspaper-o""></i>', 'Estrelas', 'e', 'Ouriços</a>', '</p>', '<p>', '<a', 'href=""http://www.pumpkin.pt/agenda/outras-atividades/kids-time-e-tempo-de-familia""', 'target=""_blank""><i', 'class=""fa', 'fa-fw', 'fa-newspaper-o""></i>', 'Pumpkin.', 'A', 'Vida', 'em', 'Família</a>', '</p>', '</div>', '</div>', '```']",challenge not surrounded by ''': ,
"#include <iostream>
#include ""BinaryTree.h""

using namespace std;

void main()
{
	BinaryTree bTree;

	int arr[] = { 1,2,3,4,5,6,7,8,9,10,11,12,13 };
	//   int arr[] = {7,5,4,6,3,9,8,10,12,11,13};
	for (int i = 0; i<sizeof(arr) / sizeof(int); i++)
		bTree.Insert(arr[i]);

	cout << ""The BTree has "" << bTree.getSize() << "" objects"" << endl;

	cout << endl << ""Preorder:= <Root,Left,Right>"" << endl;
	bTree.PreOrderDisplay();
	/*
	int n;
	char yn;
	do {
	cout << ""Enter the number to DELETE from the BTree: "";
	cin >> n;

	int ret = bTree.DeleteNode(n);
	if (ret)
	{
	cout << ""Node "" << n << "" was deleted:"";
	bTree.PreOrderDisplay();
	cout << endl;
	}
	else
	cout << ""Bode "" << n << "" was not found"" << endl;
	cout << ""Continue to DELETE (Y/N)?:"";
	cin >> yn;
	} while (yn=='Y' || yn=='y');
	*/
	bTree.reBalancing();
	cout << endl << ""Preorder:= <Root,Left,Right>"" << endl;
	bTree.PreOrderDisplay();
	cout << endl << ""Clean the tree"" << endl;
}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#include', '<iostream>', '#include', '""BinaryTree.h""', 'using', 'namespace', 'std;', 'void', 'main()', '{', 'BinaryTree', 'bTree;', 'int', 'arr[]', '=', '{', '1,2,3,4,5,6,7,8,9,10,11,12,13', '};', '//', 'int', 'arr[]', '=', '{7,5,4,6,3,9,8,10,12,11,13};', 'for', '(int', 'i', '=', '0;', 'i<sizeof(arr)', '/', 'sizeof(int);', 'i++)', 'bTree.Insert(arr[i]);', 'cout', '<<', '""The', 'BTree', 'has', '""', '<<', 'bTree.getSize()', '<<', '""', 'objects""', '<<', 'endl;', 'cout', '<<', 'endl', '<<', '""Preorder:=', '<Root,Left,Right>""', '<<', 'endl;', 'bTree.PreOrderDisplay();', '/*', 'int', 'n;', 'char', 'yn;', 'do', '{', 'cout', '<<', '""Enter', 'the', 'number', 'to', 'DELETE', 'from', 'the', 'BTree:', '"";', 'cin', '>>', 'n;', 'int', 'ret', '=', 'bTree.DeleteNode(n);', 'if', '(ret)', '{', 'cout', '<<', '""Node', '""', '<<', 'n', '<<', '""', 'was', 'deleted:"";', 'bTree.PreOrderDisplay();', 'cout', '<<', 'endl;', '}', 'else', 'cout', '<<', '""Bode', '""', '<<', 'n', '<<', '""', 'was', 'not', 'found""', '<<', 'endl;', 'cout', '<<', '""Continue', 'to', 'DELETE', '(Y/N)?:"";', 'cin', '>>', 'yn;', '}', 'while', ""(yn=='Y'"", '||', ""yn=='y');"", '*/', 'bTree.reBalancing();', 'cout', '<<', 'endl', '<<', '""Preorder:=', '<Root,Left,Right>""', '<<', 'endl;', 'bTree.PreOrderDisplay();', 'cout', '<<', 'endl', '<<', '""Clean', 'the', 'tree""', '<<', 'endl;', '}```']",challenge not surrounded by ''': ,
"/*******************************************************************************
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * ""License""); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *******************************************************************************/
package org.ofbiz.entityext;

import org.ofbiz.entity.Delegator;
import org.ofbiz.service.DispatchContext;
import org.ofbiz.service.LocalDispatcher;
import org.ofbiz.service.ServiceContainer;

/**
 * EntityEcaUtil
 */
public class EntityServiceFactory {

    //private static final Debug.OfbizLogger module = Debug.getOfbizLogger(java.lang.invoke.MethodHandles.lookup().lookupClass());

    public static LocalDispatcher getLocalDispatcher(Delegator delegator) {
        LocalDispatcher dispatcher = ServiceContainer.getLocalDispatcher(""entity-"" + delegator.getDelegatorName(), delegator);
        return dispatcher;
    }

    public static DispatchContext getDispatchContext(Delegator delegator) {
        LocalDispatcher dispatcher = getLocalDispatcher(delegator);
        if (dispatcher == null) return null;
        return dispatcher.getDispatchContext();
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*******************************************************************************', '*', 'Licensed', 'to', 'the', 'Apache', 'Software', 'Foundation', '(ASF)', 'under', 'one', '*', 'or', 'more', 'contributor', 'license', 'agreements.', 'See', 'the', 'NOTICE', 'file', '*', 'distributed', 'with', 'this', 'work', 'for', 'additional', 'information', '*', 'regarding', 'copyright', 'ownership.', 'The', 'ASF', 'licenses', 'this', 'file', '*', 'to', 'you', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '*', '""License"");', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', '*', 'with', 'the', 'License.', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', '*', 'software', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '*', '""AS', 'IS""', 'BASIS,', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', '*', 'KIND,', 'either', 'express', 'or', 'implied.', 'See', 'the', 'License', 'for', 'the', '*', 'specific', 'language', 'governing', 'permissions', 'and', 'limitations', '*', 'under', 'the', 'License.', '*******************************************************************************/', 'package', 'org.ofbiz.entityext;', 'import', 'org.ofbiz.entity.Delegator;', 'import', 'org.ofbiz.service.DispatchContext;', 'import', 'org.ofbiz.service.LocalDispatcher;', 'import', 'org.ofbiz.service.ServiceContainer;', '/**', '*', 'EntityEcaUtil', '*/', 'public', 'class', 'EntityServiceFactory', '{', '//private', 'static', 'final', 'Debug.OfbizLogger', 'module', '=', 'Debug.getOfbizLogger(java.lang.invoke.MethodHandles.lookup().lookupClass());', 'public', 'static', 'LocalDispatcher', 'getLocalDispatcher(Delegator', 'delegator)', '{', 'LocalDispatcher', 'dispatcher', '=', 'ServiceContainer.getLocalDispatcher(""entity-""', '+', 'delegator.getDelegatorName(),', 'delegator);', 'return', 'dispatcher;', '}', 'public', 'static', 'DispatchContext', 'getDispatchContext(Delegator', 'delegator)', '{', 'LocalDispatcher', 'dispatcher', '=', 'getLocalDispatcher(delegator);', 'if', '(dispatcher', '==', 'null)', 'return', 'null;', 'return', 'dispatcher.getDispatchContext();', '}', '}', '```']",challenge not surrounded by ''': ,
"var fs = require('fs');
var pathModule = require('path');
var convertMarkdownToMocha = require('./convertMarkdownToMocha');

var maps = {};

// Make the md-to-mocha transpiler avaliable as a side effect of requiring unexpected-markdown
// so that mocha --compilers md:unexpected-markdown will work:
// eslint-disable-next-line node/no-deprecated-api
require.extensions['.md'] = function (module, fileName) {
  var sourceMapWithCode = convertMarkdownToMocha(
    fs.readFileSync(fileName, 'utf-8'),
    fileName
  );

  var absoluteFileName = pathModule.resolve(process.cwd(), fileName);

  // Register the source map with the main UnexpectedMarkdown, which tries to detect the source-map-support
  // module and registers a handler with it:
  var map = sourceMapWithCode.map.toString();
  var code = sourceMapWithCode.code;

  maps[absoluteFileName] = map;

  module._compile(code, fileName);
};

var sourceMapSupport;
try {
  sourceMapSupport = require.main.require('source-map-support');
} catch (e) {
  sourceMapSupport = require('source-map-support');
}

if (sourceMapSupport) {
  sourceMapSupport.install({
    handleUncaughtExceptions: false,
    retrieveSourceMap: function (source) {
      return maps[source] ? { url: null, map: maps[source] } : null;
    },
  });
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```var', 'fs', '=', ""require('fs');"", 'var', 'pathModule', '=', ""require('path');"", 'var', 'convertMarkdownToMocha', '=', ""require('./convertMarkdownToMocha');"", 'var', 'maps', '=', '{};', '//', 'Make', 'the', 'md-to-mocha', 'transpiler', 'avaliable', 'as', 'a', 'side', 'effect', 'of', 'requiring', 'unexpected-markdown', '//', 'so', 'that', 'mocha', '--compilers', 'md:unexpected-markdown', 'will', 'work:', '//', 'eslint-disable-next-line', 'node/no-deprecated-api', ""require.extensions['.md']"", '=', 'function', '(module,', 'fileName)', '{', 'var', 'sourceMapWithCode', '=', 'convertMarkdownToMocha(', 'fs.readFileSync(fileName,', ""'utf-8'),"", 'fileName', ');', 'var', 'absoluteFileName', '=', 'pathModule.resolve(process.cwd(),', 'fileName);', '//', 'Register', 'the', 'source', 'map', 'with', 'the', 'main', 'UnexpectedMarkdown,', 'which', 'tries', 'to', 'detect', 'the', 'source-map-support', '//', 'module', 'and', 'registers', 'a', 'handler', 'with', 'it:', 'var', 'map', '=', 'sourceMapWithCode.map.toString();', 'var', 'code', '=', 'sourceMapWithCode.code;', 'maps[absoluteFileName]', '=', 'map;', 'module._compile(code,', 'fileName);', '};', 'var', 'sourceMapSupport;', 'try', '{', 'sourceMapSupport', '=', ""require.main.require('source-map-support');"", '}', 'catch', '(e)', '{', 'sourceMapSupport', '=', ""require('source-map-support');"", '}', 'if', '(sourceMapSupport)', '{', 'sourceMapSupport.install({', 'handleUncaughtExceptions:', 'false,', 'retrieveSourceMap:', 'function', '(source)', '{', 'return', 'maps[source]', '?', '{', 'url:', 'null,', 'map:', 'maps[source]', '}', ':', 'null;', '},', '});', '}', '```']",challenge not surrounded by ''': ,
"# -*- coding: utf-8  -*-

import family

__version__ = '$Id: c35da2e9088074624112841d623f3784ffd7407d $'


# An inofficial Gentoo wiki project.
# Ask for permission at http://gentoo-wiki.com/Help:Bots before running a bot.
# Be very careful, and set a long throttle: ""until we see it is good one edit
# ever minute and one page fetch every 30 seconds, maybe a *bit* faster later"".
class Family(family.Family):

    def __init__(self):
        family.Family.__init__(self)
        self.name = 'gentoo'

        self.languages_by_size = [
            'en', 'ru', 'de', 'fr', 'tr', 'es', 'scratch', 'cs', 'nl', 'fi',
        ]
        for l in self.languages_by_size:
            self.langs[l] = '%s.gentoo-wiki.com' % l

        self.namespaces[4] = {
            '_default': u'Gentoo Linux Wiki',
        }
        self.namespaces[5] = {
            '_default': u'Gentoo Linux Wiki talk',
            'cs': u'Gentoo Linux Wiki diskuse',
            'de': u'Gentoo Linux Wiki Diskussion',
            'es': u'Gentoo Linux Wiki Discusión',
            'fi': u'Keskustelu Gentoo Linux Wikistä',
            'fr': u'Discussion Gentoo Linux Wiki',
            'nl': u'Overleg Gentoo Linux Wiki',
            'ru': u'Обсуждение Gentoo Linux Wiki',
            'tr': u'Gentoo Linux Wiki tartışma',
        }
        self.namespaces[90] = {
            '_default': u'Thread',
        }
        self.namespaces[91] = {
            '_default': u'Thread talk',
        }
        self.namespaces[92] = {
            '_default': u'Summary',
        }
        self.namespaces[93] = {
            '_default': u'Summary talk',
        }
        self.namespaces[100] = {
            '_default': u'Index',
            'tr': u'Icerik',
        }
        self.namespaces[101] = {
            '_default': u'Index Talk',
            'tr': u'Icerik Talk',
        }
        self.namespaces[102] = {
            '_default': u'Ebuild',
        }
        self.namespaces[103] = {
            '_default': u'Ebuild Talk',
        }
        self.namespaces[104] = {
            '_default': u'News',
            'tr': u'Haberler',
        }
        self.namespaces[105] = {
            '_default': u'News Talk',
            'tr': u'Haberler Talk',
        }
        self.namespaces[106] = {
            '_default': u'Man',
        }
        self.namespaces[107] = {
            '_default': u'Man Talk',
        }
        self.namespaces[110] = {
            '_default': u'Ucpt',
        }
        self.namespaces[111] = {
            '_default': u'Ucpt talk',
        }

        self.known_families.pop('gentoo-wiki')

    def version(self, code):
        return ""1.16alpha""
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', '-*-', 'coding:', 'utf-8', '-*-', 'import', 'family', '__version__', '=', ""'$Id:"", 'c35da2e9088074624112841d623f3784ffd7407d', ""$'"", '#', 'An', 'inofficial', 'Gentoo', 'wiki', 'project.', '#', 'Ask', 'for', 'permission', 'at', 'http://gentoo-wiki.com/Help:Bots', 'before', 'running', 'a', 'bot.', '#', 'Be', 'very', 'careful,', 'and', 'set', 'a', 'long', 'throttle:', '""until', 'we', 'see', 'it', 'is', 'good', 'one', 'edit', '#', 'ever', 'minute', 'and', 'one', 'page', 'fetch', 'every', '30', 'seconds,', 'maybe', 'a', '*bit*', 'faster', 'later"".', 'class', 'Family(family.Family):', 'def', '__init__(self):', 'family.Family.__init__(self)', 'self.name', '=', ""'gentoo'"", 'self.languages_by_size', '=', '[', ""'en',"", ""'ru',"", ""'de',"", ""'fr',"", ""'tr',"", ""'es',"", ""'scratch',"", ""'cs',"", ""'nl',"", ""'fi',"", ']', 'for', 'l', 'in', 'self.languages_by_size:', 'self.langs[l]', '=', ""'%s.gentoo-wiki.com'"", '%', 'l', 'self.namespaces[4]', '=', '{', ""'_default':"", ""u'Gentoo"", 'Linux', ""Wiki',"", '}', 'self.namespaces[5]', '=', '{', ""'_default':"", ""u'Gentoo"", 'Linux', 'Wiki', ""talk',"", ""'cs':"", ""u'Gentoo"", 'Linux', 'Wiki', ""diskuse',"", ""'de':"", ""u'Gentoo"", 'Linux', 'Wiki', ""Diskussion',"", ""'es':"", ""u'Gentoo"", 'Linux', 'Wiki', ""Discusión',"", ""'fi':"", ""u'Keskustelu"", 'Gentoo', 'Linux', ""Wikistä',"", ""'fr':"", ""u'Discussion"", 'Gentoo', 'Linux', ""Wiki',"", ""'nl':"", ""u'Overleg"", 'Gentoo', 'Linux', ""Wiki',"", ""'ru':"", ""u'Обсуждение"", 'Gentoo', 'Linux', ""Wiki',"", ""'tr':"", ""u'Gentoo"", 'Linux', 'Wiki', ""tartışma',"", '}', 'self.namespaces[90]', '=', '{', ""'_default':"", ""u'Thread',"", '}', 'self.namespaces[91]', '=', '{', ""'_default':"", ""u'Thread"", ""talk',"", '}', 'self.namespaces[92]', '=', '{', ""'_default':"", ""u'Summary',"", '}', 'self.namespaces[93]', '=', '{', ""'_default':"", ""u'Summary"", ""talk',"", '}', 'self.namespaces[100]', '=', '{', ""'_default':"", ""u'Index',"", ""'tr':"", ""u'Icerik',"", '}', 'self.namespaces[101]', '=', '{', ""'_default':"", ""u'Index"", ""Talk',"", ""'tr':"", ""u'Icerik"", ""Talk',"", '}', 'self.namespaces[102]', '=', '{', ""'_default':"", ""u'Ebuild',"", '}', 'self.namespaces[103]', '=', '{', ""'_default':"", ""u'Ebuild"", ""Talk',"", '}', 'self.namespaces[104]', '=', '{', ""'_default':"", ""u'News',"", ""'tr':"", ""u'Haberler',"", '}', 'self.namespaces[105]', '=', '{', ""'_default':"", ""u'News"", ""Talk',"", ""'tr':"", ""u'Haberler"", ""Talk',"", '}', 'self.namespaces[106]', '=', '{', ""'_default':"", ""u'Man',"", '}', 'self.namespaces[107]', '=', '{', ""'_default':"", ""u'Man"", ""Talk',"", '}', 'self.namespaces[110]', '=', '{', ""'_default':"", ""u'Ucpt',"", '}', 'self.namespaces[111]', '=', '{', ""'_default':"", ""u'Ucpt"", ""talk',"", '}', ""self.known_families.pop('gentoo-wiki')"", 'def', 'version(self,', 'code):', 'return', '""1.16alpha""', '```']",challenge not surrounded by ''': ,
"import styles from './add.mss';

/*****************************************************************************/
/* Add: Event Handlers */
/*****************************************************************************/
Template.Guestbook_Add.events({
});

/*****************************************************************************/
/* Add: Helpers */
/*****************************************************************************/
Template.Guestbook_Add.helpers({
  styles: styles,
  links: {
    left: [{
      route: 'Guestbook',
      name: 'Back to the reviews'
    }]
  },
  formSchema: () => {
    return GuestbookEntriesFormSchema;
  }
});

/*****************************************************************************/
/* Add: Lifecycle Hooks */
/*****************************************************************************/
Template.Guestbook_Add.onCreated(function () {
});

Template.Guestbook_Add.onRendered(function () {
});

Template.Guestbook_Add.onDestroyed(function () {
});
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'styles', 'from', ""'./add.mss';"", '/*****************************************************************************/', '/*', 'Add:', 'Event', 'Handlers', '*/', '/*****************************************************************************/', 'Template.Guestbook_Add.events({', '});', '/*****************************************************************************/', '/*', 'Add:', 'Helpers', '*/', '/*****************************************************************************/', 'Template.Guestbook_Add.helpers({', 'styles:', 'styles,', 'links:', '{', 'left:', '[{', 'route:', ""'Guestbook',"", 'name:', ""'Back"", 'to', 'the', ""reviews'"", '}]', '},', 'formSchema:', '()', '=>', '{', 'return', 'GuestbookEntriesFormSchema;', '}', '});', '/*****************************************************************************/', '/*', 'Add:', 'Lifecycle', 'Hooks', '*/', '/*****************************************************************************/', 'Template.Guestbook_Add.onCreated(function', '()', '{', '});', 'Template.Guestbook_Add.onRendered(function', '()', '{', '});', 'Template.Guestbook_Add.onDestroyed(function', '()', '{', '});', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE html>
<html xml:lang=""en-GB"" lang=""en-GB"" xmlns=""http://www.w3.org/1999/xhtml"">
<head lang=""en-GB"">
	<title>Ross Gammon’s Family Tree - Events</title>
	<meta charset=""UTF-8"" />
	<meta name =""viewport"" content=""width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=1"" />
	<meta name =""apple-mobile-web-app-capable"" content=""yes"" />
	<meta name=""generator"" content=""Gramps 4.2.8 http://gramps-project.org/"" />
	<meta name=""author"" content="""" />
	<link href=""../../../images/favicon2.ico"" rel=""shortcut icon"" type=""image/x-icon"" />
	<link href=""../../../css/narrative-screen.css"" media=""screen"" rel=""stylesheet"" type=""text/css"" />
	<link href=""../../../css/narrative-print.css"" media=""print"" rel=""stylesheet"" type=""text/css"" />
</head>
<body>
	<div id=""header"">
		<h1 id=""SiteTitle"">Ross Gammon’s Family Tree</h1>
	</div>
	<div class=""wrapper"" id=""nav"" role=""navigation"">
		<div class=""container"">
			<ul class=""menu"" id=""dropmenu"">
				<li><a href=""../../../individuals.html"" title=""Individuals"">Individuals</a></li>
				<li><a href=""../../../index.html"" title=""Surnames"">Surnames</a></li>
				<li><a href=""../../../families.html"" title=""Families"">Families</a></li>
				<li class = ""CurrentSection""><a href=""../../../events.html"" title=""Events"">Events</a></li>
				<li><a href=""../../../places.html"" title=""Places"">Places</a></li>
				<li><a href=""../../../sources.html"" title=""Sources"">Sources</a></li>
				<li><a href=""../../../repositories.html"" title=""Repositories"">Repositories</a></li>
				<li><a href=""../../../media.html"" title=""Media"">Media</a></li>
				<li><a href=""../../../thumbnails.html"" title=""Thumbnails"">Thumbnails</a></li>
			</ul>
		</div>
	</div>
	<div class=""content"" id=""EventDetail"">
		<h3>Status</h3>
		<table class=""infolist eventlist"">
			<tbody>
				<tr>
					<td class=""ColumnAttribute"">Gramps ID</td>
					<td class=""ColumnGRAMPSID"">E20299</td>
				</tr>
				<tr>
					<td class=""ColumnAttribute"">Description</td>
					<td class=""ColumnColumnDescription"">
					MARRIED
					</td>
				</tr>
			</tbody>
		</table>
		<div class=""subsection"" id=""references"">
			<h4>References</h4>
			<ol class=""Col1"" role=""Volume-n-Page""type = 1>
				<li>
					<a href=""../../../ppl/6/a/d15f5fb9ce2620910918f5881a6.html"">
					, Joan?
						<span class=""grampsid""> [I0223]</span>
					</a>
				</li>
				<li>
					<a href=""../../../ppl/8/3/d15f5fb9ca15647b8f39d119f38.html"">
					CUTCLIFFE, Nicholas
						<span class=""grampsid""> [I0222]</span>
					</a>
				</li>
				<li>
					<a href=""../../../fam/1/1/d15f5fb9cda44ba4c86912a8311.html"">
					Family of CUTCLIFFE, Nicholas and , Joan?
						<span class=""grampsid""> [F0063]</span>
					</a>
				</li>
			</ol>
		</div>
	</div>
	<div class=""fullclear""></div>
	<div id=""footer"">
		<p id=""createdate"">
		Generated by <a href=""http://gramps-project.org/"">Gramps</a> 4.2.8<br />Last change was the 2015-08-05 19:55:41<br />Created for <a href=""../../../ppl/9/e/d15f5fb48902c4fc1b421d249e9.html"">GAMMON, Francis</a>
		</p>
		<p id=""copyright"">
		
		</p>
	</div>
</body>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'html>', '<html', 'xml:lang=""en-GB""', 'lang=""en-GB""', 'xmlns=""http://www.w3.org/1999/xhtml"">', '<head', 'lang=""en-GB"">', '<title>Ross', 'Gammon’s', 'Family', 'Tree', '-', 'Events</title>', '<meta', 'charset=""UTF-8""', '/>', '<meta', 'name', '=""viewport""', 'content=""width=device-width,', 'initial-scale=1.0,', 'maximum-scale=1.0,', 'user-scalable=1""', '/>', '<meta', 'name', '=""apple-mobile-web-app-capable""', 'content=""yes""', '/>', '<meta', 'name=""generator""', 'content=""Gramps', '4.2.8', 'http://gramps-project.org/""', '/>', '<meta', 'name=""author""', 'content=""""', '/>', '<link', 'href=""../../../images/favicon2.ico""', 'rel=""shortcut', 'icon""', 'type=""image/x-icon""', '/>', '<link', 'href=""../../../css/narrative-screen.css""', 'media=""screen""', 'rel=""stylesheet""', 'type=""text/css""', '/>', '<link', 'href=""../../../css/narrative-print.css""', 'media=""print""', 'rel=""stylesheet""', 'type=""text/css""', '/>', '</head>', '<body>', '<div', 'id=""header"">', '<h1', 'id=""SiteTitle"">Ross', 'Gammon’s', 'Family', 'Tree</h1>', '</div>', '<div', 'class=""wrapper""', 'id=""nav""', 'role=""navigation"">', '<div', 'class=""container"">', '<ul', 'class=""menu""', 'id=""dropmenu"">', '<li><a', 'href=""../../../individuals.html""', 'title=""Individuals"">Individuals</a></li>', '<li><a', 'href=""../../../index.html""', 'title=""Surnames"">Surnames</a></li>', '<li><a', 'href=""../../../families.html""', 'title=""Families"">Families</a></li>', '<li', 'class', '=', '""CurrentSection""><a', 'href=""../../../events.html""', 'title=""Events"">Events</a></li>', '<li><a', 'href=""../../../places.html""', 'title=""Places"">Places</a></li>', '<li><a', 'href=""../../../sources.html""', 'title=""Sources"">Sources</a></li>', '<li><a', 'href=""../../../repositories.html""', 'title=""Repositories"">Repositories</a></li>', '<li><a', 'href=""../../../media.html""', 'title=""Media"">Media</a></li>', '<li><a', 'href=""../../../thumbnails.html""', 'title=""Thumbnails"">Thumbnails</a></li>', '</ul>', '</div>', '</div>', '<div', 'class=""content""', 'id=""EventDetail"">', '<h3>Status</h3>', '<table', 'class=""infolist', 'eventlist"">', '<tbody>', '<tr>', '<td', 'class=""ColumnAttribute"">Gramps', 'ID</td>', '<td', 'class=""ColumnGRAMPSID"">E20299</td>', '</tr>', '<tr>', '<td', 'class=""ColumnAttribute"">Description</td>', '<td', 'class=""ColumnColumnDescription"">', 'MARRIED', '</td>', '</tr>', '</tbody>', '</table>', '<div', 'class=""subsection""', 'id=""references"">', '<h4>References</h4>', '<ol', 'class=""Col1""', 'role=""Volume-n-Page""type', '=', '1>', '<li>', '<a', 'href=""../../../ppl/6/a/d15f5fb9ce2620910918f5881a6.html"">', ',', 'Joan?', '<span', 'class=""grampsid"">', '[I0223]</span>', '</a>', '</li>', '<li>', '<a', 'href=""../../../ppl/8/3/d15f5fb9ca15647b8f39d119f38.html"">', 'CUTCLIFFE,', 'Nicholas', '<span', 'class=""grampsid"">', '[I0222]</span>', '</a>', '</li>', '<li>', '<a', 'href=""../../../fam/1/1/d15f5fb9cda44ba4c86912a8311.html"">', 'Family', 'of', 'CUTCLIFFE,', 'Nicholas', 'and', ',', 'Joan?', '<span', 'class=""grampsid"">', '[F0063]</span>', '</a>', '</li>', '</ol>', '</div>', '</div>', '<div', 'class=""fullclear""></div>', '<div', 'id=""footer"">', '<p', 'id=""createdate"">', 'Generated', 'by', '<a', 'href=""http://gramps-project.org/"">Gramps</a>', '4.2.8<br', '/>Last', 'change', 'was', 'the', '2015-08-05', '19:55:41<br', '/>Created', 'for', '<a', 'href=""../../../ppl/9/e/d15f5fb48902c4fc1b421d249e9.html"">GAMMON,', 'Francis</a>', '</p>', '<p', 'id=""copyright"">', '</p>', '</div>', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"<!--

     Licensed to the Apache Software Foundation (ASF) under one
     or more contributor license agreements.  See the NOTICE file
     distributed with this work for additional information
     regarding copyright ownership.  The ASF licenses this file
     to you under the Apache License, Version 2.0 (the
     ""License""); you may not use this file except in compliance
     with the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing,
     software distributed under the License is distributed on an
     ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
     KIND, either express or implied.  See the License for the
     specific language governing permissions and limitations
     under the License.

-->
<!DOCTYPE html>
<html lang=""en"">
  <head>
    <title>package groovy.xml.slurpersupport.*</title>
  </head>
  <body>
    <p>Helper classes for XmlSlurper.</p>
  </body>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!--', 'Licensed', 'to', 'the', 'Apache', 'Software', 'Foundation', '(ASF)', 'under', 'one', 'or', 'more', 'contributor', 'license', 'agreements.', 'See', 'the', 'NOTICE', 'file', 'distributed', 'with', 'this', 'work', 'for', 'additional', 'information', 'regarding', 'copyright', 'ownership.', 'The', 'ASF', 'licenses', 'this', 'file', 'to', 'you', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', 'http://www.apache.org/licenses/LICENSE-2.0', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', 'limitations', 'under', 'the', 'License.', '-->', '<!DOCTYPE', 'html>', '<html', 'lang=""en"">', '<head>', '<title>package', 'groovy.xml.slurpersupport.*</title>', '</head>', '<body>', '<p>Helper', 'classes', 'for', 'XmlSlurper.</p>', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"CREATE TABLE IF NOT EXISTS `jeedom`.`cache_persist` (
  `key` VARCHAR(127) NOT NULL,
  `datetime` DATETIME NULL DEFAULT NULL,
  `lifetime` VARCHAR(127) NOT NULL,
  `value` VARCHAR(5119) NULL DEFAULT NULL,
  `options` VARCHAR(5119) NULL DEFAULT NULL,
  PRIMARY KEY (`key`),
  UNIQUE INDEX `key_UNIQUE` (`key` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_general_ci;
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```CREATE', 'TABLE', 'IF', 'NOT', 'EXISTS', '`jeedom`.`cache_persist`', '(', '`key`', 'VARCHAR(127)', 'NOT', 'NULL,', '`datetime`', 'DATETIME', 'NULL', 'DEFAULT', 'NULL,', '`lifetime`', 'VARCHAR(127)', 'NOT', 'NULL,', '`value`', 'VARCHAR(5119)', 'NULL', 'DEFAULT', 'NULL,', '`options`', 'VARCHAR(5119)', 'NULL', 'DEFAULT', 'NULL,', 'PRIMARY', 'KEY', '(`key`),', 'UNIQUE', 'INDEX', '`key_UNIQUE`', '(`key`', 'ASC))', 'ENGINE', '=', 'InnoDB', 'DEFAULT', 'CHARACTER', 'SET', '=', 'utf8', 'COLLATE', '=', 'utf8_general_ci;', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE html>
<html>
<body>
<canvas id=""mainStage"" width=500 height=450>
</canvas>
<script src=""js/jquery-1.11.0.min.js""></script>
<script src=""js/easeljs.min.js""></script>
<script>

//Converts from degrees to radians.
Math.radians = function(degrees) {
  return degrees * Math.PI / 180;
};

//Draw a graph on screen.
jQuery(""document"").ready(function(){
	var aFills = [""rgba(255,0,0,1)"",""rgba(255,255,0,1)"",""rgba(0,255,0,1)"",""rgba(0,255,255,1)"",""rgba(0,0,255,1)"",""rgba(0,0,0,1)""];
	var aContents = new Array();
	var nCumulative = 0;
	//build the sections
	for(var n = 0; n < 5; n++){
		var oSlice = {};
		oSlice.nArc = 360/3 * Math.random();
		nCumulative += oSlice.nArc;
		aContents.push(oSlice);
	}
	//deal with shortfall or more than 360 degrees
	if(nCumulative > 360){
		var n = Math.floor(Math.random() * 5);
		aContents[n].nArc -= nCumulative - 360;
	}else{
		var oSlice = {};
		oSlice.nArc = 360 - nCumulative;
		aContents.push(oSlice);
	}
	// draw the array
	var stage = new createjs.Stage(document.getElementById(""mainStage""));
	const oX = stage.canvas.width/2;
	const oY = stage.canvas.height/2;
	const r = stage.canvas.height/3;
	var cumulativeAngle = 1.5*Math.PI;
	for(var n = 0; n < aContents.length; n++){
		var oShape = new createjs.Shape();
		oShape.graphics.moveTo(oX,oY);
		oShape.graphics.beginFill(aFills[n]);
		var nSectorAngle = Math.radians(aContents[n].nArc);
		oShape.graphics.arc(oX,oY,r,cumulativeAngle,cumulativeAngle+nSectorAngle);
		cumulativeAngle += nSectorAngle;
		stage.addChild(oShape);
		stage.update();
	}
});
</script>
</body>
</html>","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'html>', '<html>', '<body>', '<canvas', 'id=""mainStage""', 'width=500', 'height=450>', '</canvas>', '<script', 'src=""js/jquery-1.11.0.min.js""></script>', '<script', 'src=""js/easeljs.min.js""></script>', '<script>', '//Converts', 'from', 'degrees', 'to', 'radians.', 'Math.radians', '=', 'function(degrees)', '{', 'return', 'degrees', '*', 'Math.PI', '/', '180;', '};', '//Draw', 'a', 'graph', 'on', 'screen.', 'jQuery(""document"").ready(function(){', 'var', 'aFills', '=', '[""rgba(255,0,0,1)"",""rgba(255,255,0,1)"",""rgba(0,255,0,1)"",""rgba(0,255,255,1)"",""rgba(0,0,255,1)"",""rgba(0,0,0,1)""];', 'var', 'aContents', '=', 'new', 'Array();', 'var', 'nCumulative', '=', '0;', '//build', 'the', 'sections', 'for(var', 'n', '=', '0;', 'n', '<', '5;', 'n++){', 'var', 'oSlice', '=', '{};', 'oSlice.nArc', '=', '360/3', '*', 'Math.random();', 'nCumulative', '+=', 'oSlice.nArc;', 'aContents.push(oSlice);', '}', '//deal', 'with', 'shortfall', 'or', 'more', 'than', '360', 'degrees', 'if(nCumulative', '>', '360){', 'var', 'n', '=', 'Math.floor(Math.random()', '*', '5);', 'aContents[n].nArc', '-=', 'nCumulative', '-', '360;', '}else{', 'var', 'oSlice', '=', '{};', 'oSlice.nArc', '=', '360', '-', 'nCumulative;', 'aContents.push(oSlice);', '}', '//', 'draw', 'the', 'array', 'var', 'stage', '=', 'new', 'createjs.Stage(document.getElementById(""mainStage""));', 'const', 'oX', '=', 'stage.canvas.width/2;', 'const', 'oY', '=', 'stage.canvas.height/2;', 'const', 'r', '=', 'stage.canvas.height/3;', 'var', 'cumulativeAngle', '=', '1.5*Math.PI;', 'for(var', 'n', '=', '0;', 'n', '<', 'aContents.length;', 'n++){', 'var', 'oShape', '=', 'new', 'createjs.Shape();', 'oShape.graphics.moveTo(oX,oY);', 'oShape.graphics.beginFill(aFills[n]);', 'var', 'nSectorAngle', '=', 'Math.radians(aContents[n].nArc);', 'oShape.graphics.arc(oX,oY,r,cumulativeAngle,cumulativeAngle+nSectorAngle);', 'cumulativeAngle', '+=', 'nSectorAngle;', 'stage.addChild(oShape);', 'stage.update();', '}', '});', '</script>', '</body>', '</html>```']",challenge not surrounded by ''': ,
"<!DOCTYPE html>
<html data-require=""math"">
<head>
  <title>OpenDSA List Chapter Summary Exercise: Back Insert and Front Delete</title>
  <script src=""../../lib/jquery.min.js""></script>
  <script src=""../../lib/jquery-ui.min.js""></script>
  <script src=""../../ODSAkhan-exercises/khan-exercise.js""></script>
</head>

<body>
<div class=""exercise"">
  <div class=""problems"">
    <div id=""problem-type-or-description"">
      <p class=""question"">Which data structure allows insertion only
      at the back, and deletion only at the front? </p>
      <div class=""solution""><var>""queue""</var></div>
      <ul class=""choices"">
	<li><var>""stack""</var> </li>
        <li><var>""array-based list""</var> </li>
	<li><var>""linked list""</var></li>
        <li><var>""tree""</var></li>		  	 
      </ul>
      <div class=""hints"">
      </div>
    </div> 
  </div>
</div>
</body>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'html>', '<html', 'data-require=""math"">', '<head>', '<title>OpenDSA', 'List', 'Chapter', 'Summary', 'Exercise:', 'Back', 'Insert', 'and', 'Front', 'Delete</title>', '<script', 'src=""../../lib/jquery.min.js""></script>', '<script', 'src=""../../lib/jquery-ui.min.js""></script>', '<script', 'src=""../../ODSAkhan-exercises/khan-exercise.js""></script>', '</head>', '<body>', '<div', 'class=""exercise"">', '<div', 'class=""problems"">', '<div', 'id=""problem-type-or-description"">', '<p', 'class=""question"">Which', 'data', 'structure', 'allows', 'insertion', 'only', 'at', 'the', 'back,', 'and', 'deletion', 'only', 'at', 'the', 'front?', '</p>', '<div', 'class=""solution""><var>""queue""</var></div>', '<ul', 'class=""choices"">', '<li><var>""stack""</var>', '</li>', '<li><var>""array-based', 'list""</var>', '</li>', '<li><var>""linked', 'list""</var></li>', '<li><var>""tree""</var></li>', '</ul>', '<div', 'class=""hints"">', '</div>', '</div>', '</div>', '</div>', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"import fi.helsinki.cs.tmc.edutestutils.Points;
import static org.junit.Assert.*;
import org.junit.Test;
import java.util.HashSet;

@Points(""81"")
public class PasswordRandomizerTest {
    String merkit = ""abcdefghijklmnopqrstuvwxyz"";

    @Test
    public void correctCharacters() {
        PasswordRandomizer arpoja = new PasswordRandomizer(13);
        for (int i = 0; i < 10; i++) {
            String sala = arpoja.createPassword();
            for (char c : sala.toCharArray()) {
                assertTrue(""Your password \"""" + sala + ""\"" has character '"" +
                        c + ""' that does not belong to a-z!"", merkit.indexOf(c) != -1);
            }
        }
    }

    @Test
    public void correctLength() {
        PasswordRandomizer arpoja = new PasswordRandomizer(13);
        for (int i = 0; i < 10; i++) {
            String sala = arpoja.createPassword();
            assertEquals(""Your password \"""" + sala + ""\"" has wrong length!"",
                    13, sala.length());
        }
    }

    @Test
    public void randomEnough() {
        HashSet<String> hs = new HashSet<String>();
        HashSet<Character> cs = new HashSet<Character>();
        PasswordRandomizer arpoja = new PasswordRandomizer(13);
        for (int i = 0; i < 1000; i++) {
            String sala = arpoja.createPassword();
            hs.add(sala);
            for (char c : sala.toCharArray()) {
                cs.add(c);
            }
        }

        int k = hs.size();
        assertTrue(""Among 1000 password that you generater "" + k +
                "" were different! Not random enough!"", k > 900);
        int ck = cs.size();
        assertTrue(""1000 password that you generater contained "" + ck +
                "" different characters. Not random enough!"", ck > 20);
    }

    @Test
    public void correctLength2() throws Exception {
        for (int i = 0; i < 100; i++) {
            PasswordRandomizer arpoja = new PasswordRandomizer(i);
            String salasana = arpoja.createPassword();
            assertTrue(""The length of random words "" + salasana.length() +
                    "" does not correspond to the length specified as constructor parameter "" + i,
                    (i == salasana.length()));
        }
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'fi.helsinki.cs.tmc.edutestutils.Points;', 'import', 'static', 'org.junit.Assert.*;', 'import', 'org.junit.Test;', 'import', 'java.util.HashSet;', '@Points(""81"")', 'public', 'class', 'PasswordRandomizerTest', '{', 'String', 'merkit', '=', '""abcdefghijklmnopqrstuvwxyz"";', '@Test', 'public', 'void', 'correctCharacters()', '{', 'PasswordRandomizer', 'arpoja', '=', 'new', 'PasswordRandomizer(13);', 'for', '(int', 'i', '=', '0;', 'i', '<', '10;', 'i++)', '{', 'String', 'sala', '=', 'arpoja.createPassword();', 'for', '(char', 'c', ':', 'sala.toCharArray())', '{', 'assertTrue(""Your', 'password', '\\""""', '+', 'sala', '+', '""\\""', 'has', 'character', '\'""', '+', 'c', '+', '""\'', 'that', 'does', 'not', 'belong', 'to', 'a-z!"",', 'merkit.indexOf(c)', '!=', '-1);', '}', '}', '}', '@Test', 'public', 'void', 'correctLength()', '{', 'PasswordRandomizer', 'arpoja', '=', 'new', 'PasswordRandomizer(13);', 'for', '(int', 'i', '=', '0;', 'i', '<', '10;', 'i++)', '{', 'String', 'sala', '=', 'arpoja.createPassword();', 'assertEquals(""Your', 'password', '\\""""', '+', 'sala', '+', '""\\""', 'has', 'wrong', 'length!"",', '13,', 'sala.length());', '}', '}', '@Test', 'public', 'void', 'randomEnough()', '{', 'HashSet<String>', 'hs', '=', 'new', 'HashSet<String>();', 'HashSet<Character>', 'cs', '=', 'new', 'HashSet<Character>();', 'PasswordRandomizer', 'arpoja', '=', 'new', 'PasswordRandomizer(13);', 'for', '(int', 'i', '=', '0;', 'i', '<', '1000;', 'i++)', '{', 'String', 'sala', '=', 'arpoja.createPassword();', 'hs.add(sala);', 'for', '(char', 'c', ':', 'sala.toCharArray())', '{', 'cs.add(c);', '}', '}', 'int', 'k', '=', 'hs.size();', 'assertTrue(""Among', '1000', 'password', 'that', 'you', 'generater', '""', '+', 'k', '+', '""', 'were', 'different!', 'Not', 'random', 'enough!"",', 'k', '>', '900);', 'int', 'ck', '=', 'cs.size();', 'assertTrue(""1000', 'password', 'that', 'you', 'generater', 'contained', '""', '+', 'ck', '+', '""', 'different', 'characters.', 'Not', 'random', 'enough!"",', 'ck', '>', '20);', '}', '@Test', 'public', 'void', 'correctLength2()', 'throws', 'Exception', '{', 'for', '(int', 'i', '=', '0;', 'i', '<', '100;', 'i++)', '{', 'PasswordRandomizer', 'arpoja', '=', 'new', 'PasswordRandomizer(i);', 'String', 'salasana', '=', 'arpoja.createPassword();', 'assertTrue(""The', 'length', 'of', 'random', 'words', '""', '+', 'salasana.length()', '+', '""', 'does', 'not', 'correspond', 'to', 'the', 'length', 'specified', 'as', 'constructor', 'parameter', '""', '+', 'i,', '(i', '==', 'salasana.length()));', '}', '}', '}', '```']",challenge not surrounded by ''': ,
"// import dataloaderSequelize from 'data/loader/sequelize'
import { sequelize, DataTypes } from 'models/config'

const test = sequelize.define(""test"", {      
  id          : { type: DataTypes.INTEGER, primaryKey: true, autoIncrement:true },
  name: DataTypes.STRING, 
}, {
  createdAt: 'created_at',
  updatedAt: 'updated_at',  
})


// dataloaderSequelize(test)

export default test","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//', 'import', 'dataloaderSequelize', 'from', ""'data/loader/sequelize'"", 'import', '{', 'sequelize,', 'DataTypes', '}', 'from', ""'models/config'"", 'const', 'test', '=', 'sequelize.define(""test"",', '{', 'id', ':', '{', 'type:', 'DataTypes.INTEGER,', 'primaryKey:', 'true,', 'autoIncrement:true', '},', 'name:', 'DataTypes.STRING,', '},', '{', 'createdAt:', ""'created_at',"", 'updatedAt:', ""'updated_at',"", '})', '//', 'dataloaderSequelize(test)', 'export', 'default', 'test```']",challenge not surrounded by ''': ,
"import zmq

GTFS_RT_REQ_ZMQ = ""tcp://127.0.0.1:6007""

context = zmq.Context()

receiver = context.socket(zmq.REQ)
receiver.connect(GTFS_RT_REQ_ZMQ)

receiver.send('REQUEST')
# receiver.send('RESET')
print receiver.recv()
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'zmq', 'GTFS_RT_REQ_ZMQ', '=', '""tcp://127.0.0.1:6007""', 'context', '=', 'zmq.Context()', 'receiver', '=', 'context.socket(zmq.REQ)', 'receiver.connect(GTFS_RT_REQ_ZMQ)', ""receiver.send('REQUEST')"", '#', ""receiver.send('RESET')"", 'print', 'receiver.recv()', '```']",challenge not surrounded by ''': ,
"//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href=""http://java.sun.com/xml/jaxb"">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.05.16 at 11:58:34 AM IST 
//


package org.akomantoso.schema.v3.csd09;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;extension base=""{http://docs.oasis-open.org/legaldocml/ns/akn/3.0/CSD09}inlinereqreq"">
 *       &lt;attGroup ref=""{http://docs.oasis-open.org/legaldocml/ns/akn/3.0/CSD09}role""/>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = """")
@XmlRootElement(name = ""judge"")
public class Judge
    extends Inlinereqreq
{

    @XmlAttribute(name = ""as"")
    @XmlSchemaType(name = ""anyURI"")
    protected String as;

    /**
     * Gets the value of the as property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAs() {
        return as;
    }

    /**
     * Sets the value of the as property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAs(String value) {
        this.as = value;
    }

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//', '//', 'This', 'file', 'was', 'generated', 'by', 'the', 'JavaTM', 'Architecture', 'for', 'XML', 'Binding(JAXB)', 'Reference', 'Implementation,', 'v2.2.4-2', '//', 'See', '<a', 'href=""http://java.sun.com/xml/jaxb"">http://java.sun.com/xml/jaxb</a>', '//', 'Any', 'modifications', 'to', 'this', 'file', 'will', 'be', 'lost', 'upon', 'recompilation', 'of', 'the', 'source', 'schema.', '//', 'Generated', 'on:', '2014.05.16', 'at', '11:58:34', 'AM', 'IST', '//', 'package', 'org.akomantoso.schema.v3.csd09;', 'import', 'javax.xml.bind.annotation.XmlAccessType;', 'import', 'javax.xml.bind.annotation.XmlAccessorType;', 'import', 'javax.xml.bind.annotation.XmlAttribute;', 'import', 'javax.xml.bind.annotation.XmlRootElement;', 'import', 'javax.xml.bind.annotation.XmlSchemaType;', 'import', 'javax.xml.bind.annotation.XmlType;', '/**', '*', '<p>Java', 'class', 'for', 'anonymous', 'complex', 'type.', '*', '*', '<p>The', 'following', 'schema', 'fragment', 'specifies', 'the', 'expected', 'content', 'contained', 'within', 'this', 'class.', '*', '*', '<pre>', '*', '&lt;complexType>', '*', '&lt;complexContent>', '*', '&lt;extension', 'base=""{http://docs.oasis-open.org/legaldocml/ns/akn/3.0/CSD09}inlinereqreq"">', '*', '&lt;attGroup', 'ref=""{http://docs.oasis-open.org/legaldocml/ns/akn/3.0/CSD09}role""/>', '*', '&lt;/extension>', '*', '&lt;/complexContent>', '*', '&lt;/complexType>', '*', '</pre>', '*', '*', '*/', '@XmlAccessorType(XmlAccessType.FIELD)', '@XmlType(name', '=', '"""")', '@XmlRootElement(name', '=', '""judge"")', 'public', 'class', 'Judge', 'extends', 'Inlinereqreq', '{', '@XmlAttribute(name', '=', '""as"")', '@XmlSchemaType(name', '=', '""anyURI"")', 'protected', 'String', 'as;', '/**', '*', 'Gets', 'the', 'value', 'of', 'the', 'as', 'property.', '*', '*', '@return', '*', 'possible', 'object', 'is', '*', '{@link', 'String', '}', '*', '*/', 'public', 'String', 'getAs()', '{', 'return', 'as;', '}', '/**', '*', 'Sets', 'the', 'value', 'of', 'the', 'as', 'property.', '*', '*', '@param', 'value', '*', 'allowed', 'object', 'is', '*', '{@link', 'String', '}', '*', '*/', 'public', 'void', 'setAs(String', 'value)', '{', 'this.as', '=', 'value;', '}', '}', '```']",challenge not surrounded by ''': ,
"import sodium.*;

public class value1 {
    public static void main(String[] args) {
        CellSink<Integer> x = new CellSink<>(0);
        x.send(1);
        Listener l = Operational.value(x).listen(x_ -> {
            System.out.println(x_);
        });
        x.send(2);
        x.send(3);
        l.unlisten();
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'sodium.*;', 'public', 'class', 'value1', '{', 'public', 'static', 'void', 'main(String[]', 'args)', '{', 'CellSink<Integer>', 'x', '=', 'new', 'CellSink<>(0);', 'x.send(1);', 'Listener', 'l', '=', 'Operational.value(x).listen(x_', '->', '{', 'System.out.println(x_);', '});', 'x.send(2);', 'x.send(3);', 'l.unlisten();', '}', '}', '```']",challenge not surrounded by ''': ,
"package com.archosResearch.jCHEKS.messageChecker;

import com.archosResearch.jCHEKS.messageChecker.exception.MessageCheckerException;
import java.io.UnsupportedEncodingException;
import java.security.*;
import java.util.Base64;
import javax.crypto.Mac;
import javax.crypto.spec.SecretKeySpec;

/**
 *
 * @author Thomas Lepage thomas.lepage@hotmail.ca
 */
public class MessageChecker {
    
    private static final int keyLength = 16;
    
    public static String encodeMessage(byte[] key, String message) throws MessageCheckerException {
        try {
            Mac hmac = Mac.getInstance(""HmacSHA256"");
            SecretKeySpec secretKey = new SecretKeySpec(key, ""HmacSHA256"");
            hmac.init(secretKey);
            
            return Base64.getEncoder().encodeToString(hmac.doFinal(message.getBytes(""UTF-8"")));
        } catch (NoSuchAlgorithmException | InvalidKeyException | UnsupportedEncodingException ex) {
            throw new MessageCheckerException(""Error while encoding the message check."", ex);
        }
    }
    
    public static boolean validateMessage(byte[] key, String message, String encodedMessage) throws MessageCheckerException {
        try {
            String messageToValidate = MessageChecker.encodeMessage(key, message);            
            
            return messageToValidate.equals(encodedMessage);
        } catch (MessageCheckerException ex) {
            throw new MessageCheckerException(""Error while validating the message"");
        }
    }
    
    public static int getKeyLength() {
        return MessageChecker.keyLength * 8;
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.archosResearch.jCHEKS.messageChecker;', 'import', 'com.archosResearch.jCHEKS.messageChecker.exception.MessageCheckerException;', 'import', 'java.io.UnsupportedEncodingException;', 'import', 'java.security.*;', 'import', 'java.util.Base64;', 'import', 'javax.crypto.Mac;', 'import', 'javax.crypto.spec.SecretKeySpec;', '/**', '*', '*', '@author', 'Thomas', 'Lepage', 'thomas.lepage@hotmail.ca', '*/', 'public', 'class', 'MessageChecker', '{', 'private', 'static', 'final', 'int', 'keyLength', '=', '16;', 'public', 'static', 'String', 'encodeMessage(byte[]', 'key,', 'String', 'message)', 'throws', 'MessageCheckerException', '{', 'try', '{', 'Mac', 'hmac', '=', 'Mac.getInstance(""HmacSHA256"");', 'SecretKeySpec', 'secretKey', '=', 'new', 'SecretKeySpec(key,', '""HmacSHA256"");', 'hmac.init(secretKey);', 'return', 'Base64.getEncoder().encodeToString(hmac.doFinal(message.getBytes(""UTF-8"")));', '}', 'catch', '(NoSuchAlgorithmException', '|', 'InvalidKeyException', '|', 'UnsupportedEncodingException', 'ex)', '{', 'throw', 'new', 'MessageCheckerException(""Error', 'while', 'encoding', 'the', 'message', 'check."",', 'ex);', '}', '}', 'public', 'static', 'boolean', 'validateMessage(byte[]', 'key,', 'String', 'message,', 'String', 'encodedMessage)', 'throws', 'MessageCheckerException', '{', 'try', '{', 'String', 'messageToValidate', '=', 'MessageChecker.encodeMessage(key,', 'message);', 'return', 'messageToValidate.equals(encodedMessage);', '}', 'catch', '(MessageCheckerException', 'ex)', '{', 'throw', 'new', 'MessageCheckerException(""Error', 'while', 'validating', 'the', 'message"");', '}', '}', 'public', 'static', 'int', 'getKeyLength()', '{', 'return', 'MessageChecker.keyLength', '*', '8;', '}', '}', '```']",challenge not surrounded by ''': ,
"<footer-button>
    <div each={ buttons } class=""button {selected: activeTab === type}"" onclick=""{ footerButtonClick }"">
        <div class=""icon"">{ this.root.innerHTML = icon }</div>
        <div class=""title"">{ title }</div>
    </div>
    <div class=""button {selected: this.selected === true}"">
    </div>

    <script>
        var tag = this;
        tag.icon = opts.icon;
        tag.title = opts.title;
        tag.selected = opts.selected;
    </script>
</footer-button>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<footer-button>', '<div', 'each={', 'buttons', '}', 'class=""button', '{selected:', 'activeTab', '===', 'type}""', 'onclick=""{', 'footerButtonClick', '}"">', '<div', 'class=""icon"">{', 'this.root.innerHTML', '=', 'icon', '}</div>', '<div', 'class=""title"">{', 'title', '}</div>', '</div>', '<div', 'class=""button', '{selected:', 'this.selected', '===', 'true}"">', '</div>', '<script>', 'var', 'tag', '=', 'this;', 'tag.icon', '=', 'opts.icon;', 'tag.title', '=', 'opts.title;', 'tag.selected', '=', 'opts.selected;', '</script>', '</footer-button>', '```']",challenge not surrounded by ''': ,
"package io.dropwizard.metrics;

import com.google.common.collect.ImmutableSet;

interface StringMatchingStrategy {
    boolean containsMatch(ImmutableSet<String> matchExpressions, String metricName);
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'io.dropwizard.metrics;', 'import', 'com.google.common.collect.ImmutableSet;', 'interface', 'StringMatchingStrategy', '{', 'boolean', 'containsMatch(ImmutableSet<String>', 'matchExpressions,', 'String', 'metricName);', '}', '```']",challenge not surrounded by ''': ,
"package com.alphatica.genotick.genotick;

import com.alphatica.genotick.data.DataSetName;
import com.alphatica.genotick.processor.NotEnoughDataException;

import java.util.ArrayList;
import java.util.List;

public class RobotData {
    private final List<double[]> data;
    private final double lastChange;
    private final DataSetName name;

    public static RobotData createData(List<double[]> newData, DataSetName name) {
        return new RobotData(newData, name);
    }

    public static RobotData createEmptyData(DataSetName name) {
        List<double []> list = new ArrayList<>();
        list.add(new double[0]);
        return createData(list, name);
    }

    private RobotData(List<double[]> newData, DataSetName name) {
        data = newData;
        this.name = name;
        this.lastChange = calculateLastChange(newData);
    }

    public double getLastChange() {
        return lastChange;
    }

    public double getData(int dataColumn, int dataOffset) {
        if (dataOffset >= data.get(dataColumn).length)
            throw new NotEnoughDataException();
        else
            return data.get(dataColumn)[dataOffset];
    }

    public DataSetName getName() {
        return name;
    }

    public boolean isEmpty() {
        return data.get(0).length == 0;
    }

    public int getColumns() {
        return data.size();
    }

    double getLastOpen() {
        return data.get(0)[0];
    }

    private double calculateLastChange(List<double[]> newData) {
        if(data.get(0).length < 2) {
            return 0;
        }
        double last = newData.get(0)[0];
        double previous = newData.get(0)[1];
        return 100 * (last - previous) / previous;
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.alphatica.genotick.genotick;', 'import', 'com.alphatica.genotick.data.DataSetName;', 'import', 'com.alphatica.genotick.processor.NotEnoughDataException;', 'import', 'java.util.ArrayList;', 'import', 'java.util.List;', 'public', 'class', 'RobotData', '{', 'private', 'final', 'List<double[]>', 'data;', 'private', 'final', 'double', 'lastChange;', 'private', 'final', 'DataSetName', 'name;', 'public', 'static', 'RobotData', 'createData(List<double[]>', 'newData,', 'DataSetName', 'name)', '{', 'return', 'new', 'RobotData(newData,', 'name);', '}', 'public', 'static', 'RobotData', 'createEmptyData(DataSetName', 'name)', '{', 'List<double', '[]>', 'list', '=', 'new', 'ArrayList<>();', 'list.add(new', 'double[0]);', 'return', 'createData(list,', 'name);', '}', 'private', 'RobotData(List<double[]>', 'newData,', 'DataSetName', 'name)', '{', 'data', '=', 'newData;', 'this.name', '=', 'name;', 'this.lastChange', '=', 'calculateLastChange(newData);', '}', 'public', 'double', 'getLastChange()', '{', 'return', 'lastChange;', '}', 'public', 'double', 'getData(int', 'dataColumn,', 'int', 'dataOffset)', '{', 'if', '(dataOffset', '>=', 'data.get(dataColumn).length)', 'throw', 'new', 'NotEnoughDataException();', 'else', 'return', 'data.get(dataColumn)[dataOffset];', '}', 'public', 'DataSetName', 'getName()', '{', 'return', 'name;', '}', 'public', 'boolean', 'isEmpty()', '{', 'return', 'data.get(0).length', '==', '0;', '}', 'public', 'int', 'getColumns()', '{', 'return', 'data.size();', '}', 'double', 'getLastOpen()', '{', 'return', 'data.get(0)[0];', '}', 'private', 'double', 'calculateLastChange(List<double[]>', 'newData)', '{', 'if(data.get(0).length', '<', '2)', '{', 'return', '0;', '}', 'double', 'last', '=', 'newData.get(0)[0];', 'double', 'previous', '=', 'newData.get(0)[1];', 'return', '100', '*', '(last', '-', 'previous)', '/', 'previous;', '}', '}', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright 2010 Outerthought bvba
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.lilyproject.util.zookeeper;

public class ZkConnectException extends Exception {
    public ZkConnectException(String message) {
        super(message);
    }

    public ZkConnectException(String message, Exception cause) {
        super(message, cause);
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '2010', 'Outerthought', 'bvba', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'org.lilyproject.util.zookeeper;', 'public', 'class', 'ZkConnectException', 'extends', 'Exception', '{', 'public', 'ZkConnectException(String', 'message)', '{', 'super(message);', '}', 'public', 'ZkConnectException(String', 'message,', 'Exception', 'cause)', '{', 'super(message,', 'cause);', '}', '}', '```']",challenge not surrounded by ''': ,
"// Copyright © 2004-2007 ASERT. Released under the Canoo Webtest license.
package com.canoo.webtest.extension;

import java.util.List;

import org.apache.tools.ant.Task;

import com.canoo.webtest.engine.Context;
import com.canoo.webtest.engine.WebClientContext;
import com.canoo.webtest.interfaces.IComputeValue;

/**
 * Abstract class used for processing content.
 */
public abstract class AbstractProcessContentStep extends AbstractProcessFiltersStep implements IComputeValue {
    private String fPropertyName;
    private String fPropertyType;
    private String fComputedValue;

    /**
     * Sets the target property type.
     *
     * @param type The Property type
     * @webtest.parameter required=""no""
     * description=""The target property type. Either \""ant\"" or \""dynamic\"".""
     * default=""the \""defaultPropertyType\"" as specified in the \""config\"" element is used.""
     */
    public void setPropertyType(final String type) {
        fPropertyType = type;
    }

    public String getPropertyType() {
        return fPropertyType;
    }

    /**
     * Sets the target property name.
     *
     * @param name The Property Name
     * @webtest.parameter
     *   required=""yes""
     *   description=""The target property name.""
     */
    public void setProperty(final String name) {
        fPropertyName = name;
    }

    public String getProperty() {
        return fPropertyName;
    }

    public void doExecute() {
        final List steps = getSteps();
        final Context context = getContext();
        final WebClientContext.StoredResponses origResponses = context.getResponses();
        // TODO: just make table like a normal filter, i.e. add to list of steps to execute
        applyTableFilterIfNeeded(context);
        applyExtractionIfNeeded(context);
        for (int i = 0; i < steps.size(); i++) {
            final Task step = (Task) steps.get(i);
            executeContainedStep(step);
//            context = step.getContext();
        }
//        setWebtestProperty(fPropertyName, processContent(context), fPropertyType);
    	fComputedValue = processContent(getContext());
        setWebtestProperty(getProperty(), fComputedValue, getPropertyType());
        getContext().restoreResponses(origResponses);
    }

    protected abstract String processContent(Context text);

    /**
     * Verifies the parameters
     */
    protected void verifyParameters() {
        super.verifyParameters();
        nullParamCheck(getProperty(), ""property"");
        nullResponseCheck();
    }
    
	public String getComputedValue() {
		return fComputedValue;
	}
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//', 'Copyright', '©', '2004-2007', 'ASERT.', 'Released', 'under', 'the', 'Canoo', 'Webtest', 'license.', 'package', 'com.canoo.webtest.extension;', 'import', 'java.util.List;', 'import', 'org.apache.tools.ant.Task;', 'import', 'com.canoo.webtest.engine.Context;', 'import', 'com.canoo.webtest.engine.WebClientContext;', 'import', 'com.canoo.webtest.interfaces.IComputeValue;', '/**', '*', 'Abstract', 'class', 'used', 'for', 'processing', 'content.', '*/', 'public', 'abstract', 'class', 'AbstractProcessContentStep', 'extends', 'AbstractProcessFiltersStep', 'implements', 'IComputeValue', '{', 'private', 'String', 'fPropertyName;', 'private', 'String', 'fPropertyType;', 'private', 'String', 'fComputedValue;', '/**', '*', 'Sets', 'the', 'target', 'property', 'type.', '*', '*', '@param', 'type', 'The', 'Property', 'type', '*', '@webtest.parameter', 'required=""no""', '*', 'description=""The', 'target', 'property', 'type.', 'Either', '\\""ant\\""', 'or', '\\""dynamic\\"".""', '*', 'default=""the', '\\""defaultPropertyType\\""', 'as', 'specified', 'in', 'the', '\\""config\\""', 'element', 'is', 'used.""', '*/', 'public', 'void', 'setPropertyType(final', 'String', 'type)', '{', 'fPropertyType', '=', 'type;', '}', 'public', 'String', 'getPropertyType()', '{', 'return', 'fPropertyType;', '}', '/**', '*', 'Sets', 'the', 'target', 'property', 'name.', '*', '*', '@param', 'name', 'The', 'Property', 'Name', '*', '@webtest.parameter', '*', 'required=""yes""', '*', 'description=""The', 'target', 'property', 'name.""', '*/', 'public', 'void', 'setProperty(final', 'String', 'name)', '{', 'fPropertyName', '=', 'name;', '}', 'public', 'String', 'getProperty()', '{', 'return', 'fPropertyName;', '}', 'public', 'void', 'doExecute()', '{', 'final', 'List', 'steps', '=', 'getSteps();', 'final', 'Context', 'context', '=', 'getContext();', 'final', 'WebClientContext.StoredResponses', 'origResponses', '=', 'context.getResponses();', '//', 'TODO:', 'just', 'make', 'table', 'like', 'a', 'normal', 'filter,', 'i.e.', 'add', 'to', 'list', 'of', 'steps', 'to', 'execute', 'applyTableFilterIfNeeded(context);', 'applyExtractionIfNeeded(context);', 'for', '(int', 'i', '=', '0;', 'i', '<', 'steps.size();', 'i++)', '{', 'final', 'Task', 'step', '=', '(Task)', 'steps.get(i);', 'executeContainedStep(step);', '//', 'context', '=', 'step.getContext();', '}', '//', 'setWebtestProperty(fPropertyName,', 'processContent(context),', 'fPropertyType);', 'fComputedValue', '=', 'processContent(getContext());', 'setWebtestProperty(getProperty(),', 'fComputedValue,', 'getPropertyType());', 'getContext().restoreResponses(origResponses);', '}', 'protected', 'abstract', 'String', 'processContent(Context', 'text);', '/**', '*', 'Verifies', 'the', 'parameters', '*/', 'protected', 'void', 'verifyParameters()', '{', 'super.verifyParameters();', 'nullParamCheck(getProperty(),', '""property"");', 'nullResponseCheck();', '}', 'public', 'String', 'getComputedValue()', '{', 'return', 'fComputedValue;', '}', '}', '```']",challenge not surrounded by ''': ,
"dfdfdfttttttpackage org.kohsuke.github.extras;

import com.squareup.okhttp.OkHttpClient;
import com.squareup.okhttp.OkUrlFactory;
import org.kohsuke.github.HttpConnector;

import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.URL;

/**
 * {@link HttpConnector} for {@link OkHttpClient}.
 *
 * Unlike {@link #DEFAULT}, OkHttp does response caching.
 * Making a conditional request against GitHubAPI and receiving a 304
 * response does not count against the rate limit.
 * See http://developer.github.com/v3/#conditional-requests
 *
 * @author Roberto Tyley
 * @author Kohsuke Kawaguchi
 */
public class OkHttpConnector implements HttpConnector {
    private final OkUrlFactory urlFactory;

    public OkHttpConnector(OkUrlFactory urlFactory) {
        this.urlFactory = urlFactory;
    }

    public HttpURLConnection connect(URL url) throws IOException {
        return urlFactory.open(url);
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```dfdfdfttttttpackage', 'org.kohsuke.github.extras;', 'import', 'com.squareup.okhttp.OkHttpClient;', 'import', 'com.squareup.okhttp.OkUrlFactory;', 'import', 'org.kohsuke.github.HttpConnector;', 'import', 'java.io.IOException;', 'import', 'java.net.HttpURLConnection;', 'import', 'java.net.URL;', '/**', '*', '{@link', 'HttpConnector}', 'for', '{@link', 'OkHttpClient}.', '*', '*', 'Unlike', '{@link', '#DEFAULT},', 'OkHttp', 'does', 'response', 'caching.', '*', 'Making', 'a', 'conditional', 'request', 'against', 'GitHubAPI', 'and', 'receiving', 'a', '304', '*', 'response', 'does', 'not', 'count', 'against', 'the', 'rate', 'limit.', '*', 'See', 'http://developer.github.com/v3/#conditional-requests', '*', '*', '@author', 'Roberto', 'Tyley', '*', '@author', 'Kohsuke', 'Kawaguchi', '*/', 'public', 'class', 'OkHttpConnector', 'implements', 'HttpConnector', '{', 'private', 'final', 'OkUrlFactory', 'urlFactory;', 'public', 'OkHttpConnector(OkUrlFactory', 'urlFactory)', '{', 'this.urlFactory', '=', 'urlFactory;', '}', 'public', 'HttpURLConnection', 'connect(URL', 'url)', 'throws', 'IOException', '{', 'return', 'urlFactory.open(url);', '}', '}', '```']",challenge not surrounded by ''': ,
"Ext.ns('Martview.results');

Martview.results.Itemized = Ext.extend(Ext.grid.GridPanel, {
                                         
  // soft config
  fields: [],
  columns: [],

  // hard config
  initComponent: function() {
    var config = {
      enableColumnHide: false,
      enableHdMenu: false,
      disableSelection: true,
      stripeRows: true,
      border: false,
      cls: 'itemized',
      hideHeaders: true,
      viewConfig: {
        forceFit: true,
        enableRowBody: true
      },
      store: new Ext.data.JsonStore({
        autoDestroy: true,
        root: 'rows',
        fields: this.fields
      }),
      autoExpandColumn: 'item',
      cm: new Ext.grid.ColumnModel({
        columns: [{
          xtype: 'templatecolumn',
          id: 'item',
          sortable: false,
          tpl: new Ext.XTemplate( //
          '<tpl for=""."">', //
          '<table style=""width: 100%;"">', //
          '<tr>', //
          '<td style=""width: 50px; align: right; vertical-align: top; font-weight: bold; color: #333;"">', //
          '{pdb_id}<img src=""./ico/arrow-000-small.png"" style=""vertical-align: middle;"" />', //
          '</td>', //
          '<td style=""font-weight: bold; color: #333;"">', //
          '{title}', //
          '</td>', //
          '</tr>', //
          '<tr>', //
          '<td style=""width: 50px; align: center; vertical-align: top;"">', //
          '<img style=""width: 50px;"" src=""http://www.rcsb.org/pdb/images/{pdb_id}_asym_r_250.jpg"" />', //
          '</td>', //
          '<td>', //
          '<div style=""color: #666;"">Experiment type: {experiment_type}</div>', //
          '<div style=""color: #666;"">Resolution: {resolution}</div>', //
          '<div style=""color: #666;"">Space group: {space_group}</div>', //
          '<div style=""color: #666;"">R work: {r_work}</div>', //
          '</td>', //
          '</tr>', //
          '</table>', //
          '</tpl>' //
          )
        }]
      })
    };

    // apply config
    Ext.apply(this, Ext.apply(this.initialConfig, config));

    // call parent
    Martview.results.Itemized.superclass.initComponent.apply(this, arguments);
  },

  load: function(args) {
    var grid = this;
    var store = grid.getStore();
    store.removeAll();
    store.loadData({
      rows: args.rows
    });
    grid.ownerCt.counter.setText(store.getTotalCount() + ' of ' + args.count);
  },

  reset: function() {
    var grid = this;
    // TODO
  }
});

Ext.reg('itemizedresults', Martview.results.Itemized);
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', ""```Ext.ns('Martview.results');"", 'Martview.results.Itemized', '=', 'Ext.extend(Ext.grid.GridPanel,', '{', '//', 'soft', 'config', 'fields:', '[],', 'columns:', '[],', '//', 'hard', 'config', 'initComponent:', 'function()', '{', 'var', 'config', '=', '{', 'enableColumnHide:', 'false,', 'enableHdMenu:', 'false,', 'disableSelection:', 'true,', 'stripeRows:', 'true,', 'border:', 'false,', 'cls:', ""'itemized',"", 'hideHeaders:', 'true,', 'viewConfig:', '{', 'forceFit:', 'true,', 'enableRowBody:', 'true', '},', 'store:', 'new', 'Ext.data.JsonStore({', 'autoDestroy:', 'true,', 'root:', ""'rows',"", 'fields:', 'this.fields', '}),', 'autoExpandColumn:', ""'item',"", 'cm:', 'new', 'Ext.grid.ColumnModel({', 'columns:', '[{', 'xtype:', ""'templatecolumn',"", 'id:', ""'item',"", 'sortable:', 'false,', 'tpl:', 'new', 'Ext.XTemplate(', '//', ""'<tpl"", 'for=""."">\',', '//', ""'<table"", 'style=""width:', '100%;"">\',', '//', ""'<tr>',"", '//', ""'<td"", 'style=""width:', '50px;', 'align:', 'right;', 'vertical-align:', 'top;', 'font-weight:', 'bold;', 'color:', '#333;"">\',', '//', ""'{pdb_id}<img"", 'src=""./ico/arrow-000-small.png""', 'style=""vertical-align:', 'middle;""', ""/>',"", '//', ""'</td>',"", '//', ""'<td"", 'style=""font-weight:', 'bold;', 'color:', '#333;"">\',', '//', ""'{title}',"", '//', ""'</td>',"", '//', ""'</tr>',"", '//', ""'<tr>',"", '//', ""'<td"", 'style=""width:', '50px;', 'align:', 'center;', 'vertical-align:', 'top;"">\',', '//', ""'<img"", 'style=""width:', '50px;""', 'src=""http://www.rcsb.org/pdb/images/{pdb_id}_asym_r_250.jpg""', ""/>',"", '//', ""'</td>',"", '//', ""'<td>',"", '//', ""'<div"", 'style=""color:', '#666;"">Experiment', 'type:', ""{experiment_type}</div>',"", '//', ""'<div"", 'style=""color:', '#666;"">Resolution:', ""{resolution}</div>',"", '//', ""'<div"", 'style=""color:', '#666;"">Space', 'group:', ""{space_group}</div>',"", '//', ""'<div"", 'style=""color:', '#666;"">R', 'work:', ""{r_work}</div>',"", '//', ""'</td>',"", '//', ""'</tr>',"", '//', ""'</table>',"", '//', ""'</tpl>'"", '//', ')', '}]', '})', '};', '//', 'apply', 'config', 'Ext.apply(this,', 'Ext.apply(this.initialConfig,', 'config));', '//', 'call', 'parent', 'Martview.results.Itemized.superclass.initComponent.apply(this,', 'arguments);', '},', 'load:', 'function(args)', '{', 'var', 'grid', '=', 'this;', 'var', 'store', '=', 'grid.getStore();', 'store.removeAll();', 'store.loadData({', 'rows:', 'args.rows', '});', 'grid.ownerCt.counter.setText(store.getTotalCount()', '+', ""'"", 'of', ""'"", '+', 'args.count);', '},', 'reset:', 'function()', '{', 'var', 'grid', '=', 'this;', '//', 'TODO', '}', '});', ""Ext.reg('itemizedresults',"", 'Martview.results.Itemized);', '```']",challenge not surrounded by ''': ,
"""""""
Test module for stats hook (cxflow.hooks.compute_stats_hook).
""""""

import numpy as np
import pytest

from cxflow.hooks.compute_stats import ComputeStats


def get_batch(batch_id):
    accuracy = batch_id * (np.ones(5) + 1)
    nan_accuracy = batch_id * (np.ones(5) + 2)
    nan_accuracy[0] = nan_accuracy[3] = np.nan
    loss = batch_id * (np.ones(5) + 3)
    return {'accuracy': accuracy,
            'nan_accuracy': nan_accuracy,
            'loss': loss}


def test_raise_on_init():
    """"""Tests raising error if specified aggregation is not supported.""""""

    variables = [{'loss': ['mean', 'median', 'max']},
                 {'accuracy': ['mean', 'median', 'not_supported']}]
    with pytest.raises(ValueError):
        ComputeStats(variables=variables)


def test_compute_save_stats():
    """"""Tests correctness of computed aggregations and their saving.""""""

    variables = ['loss',
                 {'accuracy': ['mean', 'std', 'min', 'max', 'median',
                               'nanmean', 'nanfraction', 'nancount']},
                 {'nan_accuracy': ['mean', 'nanmean', 'nanfraction', 'nancount']}]

    hook = ComputeStats(variables=variables)

    epoch_data = {'train': {'accuracy': None, 'nan_accuracy': None, 'loss': None},
                  'test': {'accuracy': None, 'nan_accuracy': None, 'loss': None}}

    for batch_id in range(1, 3):
        for stream in epoch_data.keys():
            hook.after_batch(stream, get_batch(batch_id))

    hook.after_epoch(epoch_data)

    valid_aggrs = {'loss': {'mean': 6.0},
                   'accuracy': {'mean': 3, 'std': 1, 'min': 2, 'max': 4, 'median': 3,
                                'nanmean': 3, 'nanfraction': 0., 'nancount': 0},
                   'nan_accuracy': {'mean': np.nan, 'nanmean': 4.5,
                                    'nanfraction': 0.4, 'nancount': 4}}
    valid_aggrs = {'train': valid_aggrs, 'test': valid_aggrs}

    assert epoch_data.keys() == \
                     valid_aggrs.keys()
    for stream in epoch_data.keys():
        assert epoch_data[stream].keys() == \
                         valid_aggrs[stream].keys()
        for variable in epoch_data[stream]:
            assert epoch_data[stream][variable].keys() == \
                             valid_aggrs[stream][variable].keys()
            for aggr in epoch_data[stream][variable]:
                # to compare NaN values, NumPy assert is required
                np.testing.assert_equal(epoch_data[stream][variable][aggr],
                                        valid_aggrs[stream][variable][aggr])
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```""""""', 'Test', 'module', 'for', 'stats', 'hook', '(cxflow.hooks.compute_stats_hook).', '""""""', 'import', 'numpy', 'as', 'np', 'import', 'pytest', 'from', 'cxflow.hooks.compute_stats', 'import', 'ComputeStats', 'def', 'get_batch(batch_id):', 'accuracy', '=', 'batch_id', '*', '(np.ones(5)', '+', '1)', 'nan_accuracy', '=', 'batch_id', '*', '(np.ones(5)', '+', '2)', 'nan_accuracy[0]', '=', 'nan_accuracy[3]', '=', 'np.nan', 'loss', '=', 'batch_id', '*', '(np.ones(5)', '+', '3)', 'return', ""{'accuracy':"", 'accuracy,', ""'nan_accuracy':"", 'nan_accuracy,', ""'loss':"", 'loss}', 'def', 'test_raise_on_init():', '""""""Tests', 'raising', 'error', 'if', 'specified', 'aggregation', 'is', 'not', 'supported.""""""', 'variables', '=', ""[{'loss':"", ""['mean',"", ""'median',"", ""'max']},"", ""{'accuracy':"", ""['mean',"", ""'median',"", ""'not_supported']}]"", 'with', 'pytest.raises(ValueError):', 'ComputeStats(variables=variables)', 'def', 'test_compute_save_stats():', '""""""Tests', 'correctness', 'of', 'computed', 'aggregations', 'and', 'their', 'saving.""""""', 'variables', '=', ""['loss',"", ""{'accuracy':"", ""['mean',"", ""'std',"", ""'min',"", ""'max',"", ""'median',"", ""'nanmean',"", ""'nanfraction',"", ""'nancount']},"", ""{'nan_accuracy':"", ""['mean',"", ""'nanmean',"", ""'nanfraction',"", ""'nancount']}]"", 'hook', '=', 'ComputeStats(variables=variables)', 'epoch_data', '=', ""{'train':"", ""{'accuracy':"", 'None,', ""'nan_accuracy':"", 'None,', ""'loss':"", 'None},', ""'test':"", ""{'accuracy':"", 'None,', ""'nan_accuracy':"", 'None,', ""'loss':"", 'None}}', 'for', 'batch_id', 'in', 'range(1,', '3):', 'for', 'stream', 'in', 'epoch_data.keys():', 'hook.after_batch(stream,', 'get_batch(batch_id))', 'hook.after_epoch(epoch_data)', 'valid_aggrs', '=', ""{'loss':"", ""{'mean':"", '6.0},', ""'accuracy':"", ""{'mean':"", '3,', ""'std':"", '1,', ""'min':"", '2,', ""'max':"", '4,', ""'median':"", '3,', ""'nanmean':"", '3,', ""'nanfraction':"", '0.,', ""'nancount':"", '0},', ""'nan_accuracy':"", ""{'mean':"", 'np.nan,', ""'nanmean':"", '4.5,', ""'nanfraction':"", '0.4,', ""'nancount':"", '4}}', 'valid_aggrs', '=', ""{'train':"", 'valid_aggrs,', ""'test':"", 'valid_aggrs}', 'assert', 'epoch_data.keys()', '==', '\\', 'valid_aggrs.keys()', 'for', 'stream', 'in', 'epoch_data.keys():', 'assert', 'epoch_data[stream].keys()', '==', '\\', 'valid_aggrs[stream].keys()', 'for', 'variable', 'in', 'epoch_data[stream]:', 'assert', 'epoch_data[stream][variable].keys()', '==', '\\', 'valid_aggrs[stream][variable].keys()', 'for', 'aggr', 'in', 'epoch_data[stream][variable]:', '#', 'to', 'compare', 'NaN', 'values,', 'NumPy', 'assert', 'is', 'required', 'np.testing.assert_equal(epoch_data[stream][variable][aggr],', 'valid_aggrs[stream][variable][aggr])', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright (c) 2008-2021, Hazelcast, Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.hazelcast.client.impl.connection;


import com.hazelcast.cluster.Address;

/**
 * Provides initial addresses for client to find and connect to a node &
 * Translates given address if necessary when connecting a service
 */
public interface AddressProvider {

    /**
     * @return The possible member addresses to connect to.
     * @throws Exception when a remote service can not provide addressee
     */
    Addresses loadAddresses() throws Exception;

    /**
     * Translates the given address to another address specific to
     * network or service
     *
     * @param address to be translated
     * @return new address if given address is known, otherwise return null
     * @throws Exception when a remote service can not provide addressee
     */
    Address translate(Address address) throws Exception;
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '(c)', '2008-2021,', 'Hazelcast,', 'Inc.', 'All', 'Rights', 'Reserved.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'com.hazelcast.client.impl.connection;', 'import', 'com.hazelcast.cluster.Address;', '/**', '*', 'Provides', 'initial', 'addresses', 'for', 'client', 'to', 'find', 'and', 'connect', 'to', 'a', 'node', '&', '*', 'Translates', 'given', 'address', 'if', 'necessary', 'when', 'connecting', 'a', 'service', '*/', 'public', 'interface', 'AddressProvider', '{', '/**', '*', '@return', 'The', 'possible', 'member', 'addresses', 'to', 'connect', 'to.', '*', '@throws', 'Exception', 'when', 'a', 'remote', 'service', 'can', 'not', 'provide', 'addressee', '*/', 'Addresses', 'loadAddresses()', 'throws', 'Exception;', '/**', '*', 'Translates', 'the', 'given', 'address', 'to', 'another', 'address', 'specific', 'to', '*', 'network', 'or', 'service', '*', '*', '@param', 'address', 'to', 'be', 'translated', '*', '@return', 'new', 'address', 'if', 'given', 'address', 'is', 'known,', 'otherwise', 'return', 'null', '*', '@throws', 'Exception', 'when', 'a', 'remote', 'service', 'can', 'not', 'provide', 'addressee', '*/', 'Address', 'translate(Address', 'address)', 'throws', 'Exception;', '}', '```']",challenge not surrounded by ''': ,
"from newrelic.agent import wrap_object, register_database_client

from .database_psycopg2 import instance_name

def instrument_postgresql_driver_dbapi20(module):
    register_database_client(module, database_name='Postgres',
            quoting_style='single', explain_query='explain',
            explain_stmts=('select', 'insert', 'update', 'delete'),
            instance_name=instance_name)

    from .database_psycopg2 import ConnectionFactory

    wrap_object(module, 'connect', ConnectionFactory, (module,))

def instrument_postgresql_interface_proboscis_dbapi2(module):
    register_database_client(module, database_name='Postgres',
            quoting_style='single', explain_query='explain',
            explain_stmts=('select', 'insert', 'update', 'delete'),
            instance_name=instance_name)

    from .database_dbapi2 import ConnectionFactory

    wrap_object(module, 'connect', ConnectionFactory, (module,))
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```from', 'newrelic.agent', 'import', 'wrap_object,', 'register_database_client', 'from', '.database_psycopg2', 'import', 'instance_name', 'def', 'instrument_postgresql_driver_dbapi20(module):', 'register_database_client(module,', ""database_name='Postgres',"", ""quoting_style='single',"", ""explain_query='explain',"", ""explain_stmts=('select',"", ""'insert',"", ""'update',"", ""'delete'),"", 'instance_name=instance_name)', 'from', '.database_psycopg2', 'import', 'ConnectionFactory', 'wrap_object(module,', ""'connect',"", 'ConnectionFactory,', '(module,))', 'def', 'instrument_postgresql_interface_proboscis_dbapi2(module):', 'register_database_client(module,', ""database_name='Postgres',"", ""quoting_style='single',"", ""explain_query='explain',"", ""explain_stmts=('select',"", ""'insert',"", ""'update',"", ""'delete'),"", 'instance_name=instance_name)', 'from', '.database_dbapi2', 'import', 'ConnectionFactory', 'wrap_object(module,', ""'connect',"", 'ConnectionFactory,', '(module,))', '```']",challenge not surrounded by ''': ,
"/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package encryption.algorithm;

import encryption.Configuration;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author marko
 */
public class StreamAlgorithm extends Algorithm{

    public StreamAlgorithm(Configuration configuration){
        super(configuration);
    }

    public byte encryptByte(byte in) {
        return in;
    }

    public void encrypt(InputStream in, OutputStream out) {
        int read;
        try {
            while((read = in.read()) != -1){
                byte inputByte = (byte) read;
                out.write((int) encryptByte(inputByte));
            }
            in.close();
            out.close();
        } catch (IOException ex) {
            Logger.getLogger(A51.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void decrypt(InputStream in, OutputStream out) {
        encrypt(in, out);
    }


    // Utility methods

    protected byte[] explodeByte(byte b) {
        byte[] result = new byte[8];
        for(int i= 0; i < 8; i++){
            result[i] = (byte) ((b & (1 << i)) >> i);
        }
        return result;
    }

    protected byte implodeByte(byte[] bits) {
        byte result = 0;
        for(int i = 0; i < 8; i++)
            result += bits[i] << i;
        return result;
    }

    public static void printBytes(byte[] bytes){
        for(int i = 0; i < bytes.length; i++){
            String byteStr = String.valueOf(bytes[i]);
            while(byteStr.length() < 4) 
                byteStr = "" "" + byteStr;
            System.out.print(byteStr + "" "");
        }
        System.out.println();
    }
    
    public static void printBytes(int[] bytes){
        for(int i = 0; i < bytes.length; i++){
            String byteStr = String.valueOf(bytes[i]);
            while(byteStr.length() < 4) 
                byteStr = "" "" + byteStr;
            System.out.print(byteStr + "" "");
        }
        System.out.println();
    }
    
    public static boolean compareBytes(int[] a, int[] b) {
        if(a.length != b.length) return false;
        for(int i = 0; i < a.length; i++)
            if(a[i] != b[i]) return false;
        return true;
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'To', 'change', 'this', 'template,', 'choose', 'Tools', '|', 'Templates', '*', 'and', 'open', 'the', 'template', 'in', 'the', 'editor.', '*/', 'package', 'encryption.algorithm;', 'import', 'encryption.Configuration;', 'import', 'java.io.IOException;', 'import', 'java.io.InputStream;', 'import', 'java.io.OutputStream;', 'import', 'java.util.logging.Level;', 'import', 'java.util.logging.Logger;', '/**', '*', '*', '@author', 'marko', '*/', 'public', 'class', 'StreamAlgorithm', 'extends', 'Algorithm{', 'public', 'StreamAlgorithm(Configuration', 'configuration){', 'super(configuration);', '}', 'public', 'byte', 'encryptByte(byte', 'in)', '{', 'return', 'in;', '}', 'public', 'void', 'encrypt(InputStream', 'in,', 'OutputStream', 'out)', '{', 'int', 'read;', 'try', '{', 'while((read', '=', 'in.read())', '!=', '-1){', 'byte', 'inputByte', '=', '(byte)', 'read;', 'out.write((int)', 'encryptByte(inputByte));', '}', 'in.close();', 'out.close();', '}', 'catch', '(IOException', 'ex)', '{', 'Logger.getLogger(A51.class.getName()).log(Level.SEVERE,', 'null,', 'ex);', '}', '}', 'public', 'void', 'decrypt(InputStream', 'in,', 'OutputStream', 'out)', '{', 'encrypt(in,', 'out);', '}', '//', 'Utility', 'methods', 'protected', 'byte[]', 'explodeByte(byte', 'b)', '{', 'byte[]', 'result', '=', 'new', 'byte[8];', 'for(int', 'i=', '0;', 'i', '<', '8;', 'i++){', 'result[i]', '=', '(byte)', '((b', '&', '(1', '<<', 'i))', '>>', 'i);', '}', 'return', 'result;', '}', 'protected', 'byte', 'implodeByte(byte[]', 'bits)', '{', 'byte', 'result', '=', '0;', 'for(int', 'i', '=', '0;', 'i', '<', '8;', 'i++)', 'result', '+=', 'bits[i]', '<<', 'i;', 'return', 'result;', '}', 'public', 'static', 'void', 'printBytes(byte[]', 'bytes){', 'for(int', 'i', '=', '0;', 'i', '<', 'bytes.length;', 'i++){', 'String', 'byteStr', '=', 'String.valueOf(bytes[i]);', 'while(byteStr.length()', '<', '4)', 'byteStr', '=', '""', '""', '+', 'byteStr;', 'System.out.print(byteStr', '+', '""', '"");', '}', 'System.out.println();', '}', 'public', 'static', 'void', 'printBytes(int[]', 'bytes){', 'for(int', 'i', '=', '0;', 'i', '<', 'bytes.length;', 'i++){', 'String', 'byteStr', '=', 'String.valueOf(bytes[i]);', 'while(byteStr.length()', '<', '4)', 'byteStr', '=', '""', '""', '+', 'byteStr;', 'System.out.print(byteStr', '+', '""', '"");', '}', 'System.out.println();', '}', 'public', 'static', 'boolean', 'compareBytes(int[]', 'a,', 'int[]', 'b)', '{', 'if(a.length', '!=', 'b.length)', 'return', 'false;', 'for(int', 'i', '=', '0;', 'i', '<', 'a.length;', 'i++)', 'if(a[i]', '!=', 'b[i])', 'return', 'false;', 'return', 'true;', '}', '}', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright 2017-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the ""License""). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 * 
 * http://aws.amazon.com/apache2.0
 * 
 * or in the ""license"" file accompanying this file. This file is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */
package com.amazonaws.services.costexplorer.model.transform;

import java.util.List;
import javax.annotation.Generated;

import com.amazonaws.SdkClientException;
import com.amazonaws.services.costexplorer.model.*;

import com.amazonaws.protocol.*;
import com.amazonaws.annotation.SdkInternalApi;

/**
 * ReservationPurchaseRecommendationMarshaller
 */
@Generated(""com.amazonaws:aws-java-sdk-code-generator"")
@SdkInternalApi
public class ReservationPurchaseRecommendationMarshaller {

    private static final MarshallingInfo<String> ACCOUNTSCOPE_BINDING = MarshallingInfo.builder(MarshallingType.STRING)
            .marshallLocation(MarshallLocation.PAYLOAD).marshallLocationName(""AccountScope"").build();
    private static final MarshallingInfo<String> LOOKBACKPERIODINDAYS_BINDING = MarshallingInfo.builder(MarshallingType.STRING)
            .marshallLocation(MarshallLocation.PAYLOAD).marshallLocationName(""LookbackPeriodInDays"").build();
    private static final MarshallingInfo<String> TERMINYEARS_BINDING = MarshallingInfo.builder(MarshallingType.STRING)
            .marshallLocation(MarshallLocation.PAYLOAD).marshallLocationName(""TermInYears"").build();
    private static final MarshallingInfo<String> PAYMENTOPTION_BINDING = MarshallingInfo.builder(MarshallingType.STRING)
            .marshallLocation(MarshallLocation.PAYLOAD).marshallLocationName(""PaymentOption"").build();
    private static final MarshallingInfo<StructuredPojo> SERVICESPECIFICATION_BINDING = MarshallingInfo.builder(MarshallingType.STRUCTURED)
            .marshallLocation(MarshallLocation.PAYLOAD).marshallLocationName(""ServiceSpecification"").build();
    private static final MarshallingInfo<List> RECOMMENDATIONDETAILS_BINDING = MarshallingInfo.builder(MarshallingType.LIST)
            .marshallLocation(MarshallLocation.PAYLOAD).marshallLocationName(""RecommendationDetails"").build();
    private static final MarshallingInfo<StructuredPojo> RECOMMENDATIONSUMMARY_BINDING = MarshallingInfo.builder(MarshallingType.STRUCTURED)
            .marshallLocation(MarshallLocation.PAYLOAD).marshallLocationName(""RecommendationSummary"").build();

    private static final ReservationPurchaseRecommendationMarshaller instance = new ReservationPurchaseRecommendationMarshaller();

    public static ReservationPurchaseRecommendationMarshaller getInstance() {
        return instance;
    }

    /**
     * Marshall the given parameter object.
     */
    public void marshall(ReservationPurchaseRecommendation reservationPurchaseRecommendation, ProtocolMarshaller protocolMarshaller) {

        if (reservationPurchaseRecommendation == null) {
            throw new SdkClientException(""Invalid argument passed to marshall(...)"");
        }

        try {
            protocolMarshaller.marshall(reservationPurchaseRecommendation.getAccountScope(), ACCOUNTSCOPE_BINDING);
            protocolMarshaller.marshall(reservationPurchaseRecommendation.getLookbackPeriodInDays(), LOOKBACKPERIODINDAYS_BINDING);
            protocolMarshaller.marshall(reservationPurchaseRecommendation.getTermInYears(), TERMINYEARS_BINDING);
            protocolMarshaller.marshall(reservationPurchaseRecommendation.getPaymentOption(), PAYMENTOPTION_BINDING);
            protocolMarshaller.marshall(reservationPurchaseRecommendation.getServiceSpecification(), SERVICESPECIFICATION_BINDING);
            protocolMarshaller.marshall(reservationPurchaseRecommendation.getRecommendationDetails(), RECOMMENDATIONDETAILS_BINDING);
            protocolMarshaller.marshall(reservationPurchaseRecommendation.getRecommendationSummary(), RECOMMENDATIONSUMMARY_BINDING);
        } catch (Exception e) {
            throw new SdkClientException(""Unable to marshall request to JSON: "" + e.getMessage(), e);
        }
    }

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '2017-2022', 'Amazon.com,', 'Inc.', 'or', 'its', 'affiliates.', 'All', 'Rights', 'Reserved.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"").', 'You', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', '*', 'the', 'License.', 'A', 'copy', 'of', 'the', 'License', 'is', 'located', 'at', '*', '*', 'http://aws.amazon.com/apache2.0', '*', '*', 'or', 'in', 'the', '""license""', 'file', 'accompanying', 'this', 'file.', 'This', 'file', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', 'WITHOUT', 'WARRANTIES', 'OR', '*', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', '*', 'and', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'com.amazonaws.services.costexplorer.model.transform;', 'import', 'java.util.List;', 'import', 'javax.annotation.Generated;', 'import', 'com.amazonaws.SdkClientException;', 'import', 'com.amazonaws.services.costexplorer.model.*;', 'import', 'com.amazonaws.protocol.*;', 'import', 'com.amazonaws.annotation.SdkInternalApi;', '/**', '*', 'ReservationPurchaseRecommendationMarshaller', '*/', '@Generated(""com.amazonaws:aws-java-sdk-code-generator"")', '@SdkInternalApi', 'public', 'class', 'ReservationPurchaseRecommendationMarshaller', '{', 'private', 'static', 'final', 'MarshallingInfo<String>', 'ACCOUNTSCOPE_BINDING', '=', 'MarshallingInfo.builder(MarshallingType.STRING)', '.marshallLocation(MarshallLocation.PAYLOAD).marshallLocationName(""AccountScope"").build();', 'private', 'static', 'final', 'MarshallingInfo<String>', 'LOOKBACKPERIODINDAYS_BINDING', '=', 'MarshallingInfo.builder(MarshallingType.STRING)', '.marshallLocation(MarshallLocation.PAYLOAD).marshallLocationName(""LookbackPeriodInDays"").build();', 'private', 'static', 'final', 'MarshallingInfo<String>', 'TERMINYEARS_BINDING', '=', 'MarshallingInfo.builder(MarshallingType.STRING)', '.marshallLocation(MarshallLocation.PAYLOAD).marshallLocationName(""TermInYears"").build();', 'private', 'static', 'final', 'MarshallingInfo<String>', 'PAYMENTOPTION_BINDING', '=', 'MarshallingInfo.builder(MarshallingType.STRING)', '.marshallLocation(MarshallLocation.PAYLOAD).marshallLocationName(""PaymentOption"").build();', 'private', 'static', 'final', 'MarshallingInfo<StructuredPojo>', 'SERVICESPECIFICATION_BINDING', '=', 'MarshallingInfo.builder(MarshallingType.STRUCTURED)', '.marshallLocation(MarshallLocation.PAYLOAD).marshallLocationName(""ServiceSpecification"").build();', 'private', 'static', 'final', 'MarshallingInfo<List>', 'RECOMMENDATIONDETAILS_BINDING', '=', 'MarshallingInfo.builder(MarshallingType.LIST)', '.marshallLocation(MarshallLocation.PAYLOAD).marshallLocationName(""RecommendationDetails"").build();', 'private', 'static', 'final', 'MarshallingInfo<StructuredPojo>', 'RECOMMENDATIONSUMMARY_BINDING', '=', 'MarshallingInfo.builder(MarshallingType.STRUCTURED)', '.marshallLocation(MarshallLocation.PAYLOAD).marshallLocationName(""RecommendationSummary"").build();', 'private', 'static', 'final', 'ReservationPurchaseRecommendationMarshaller', 'instance', '=', 'new', 'ReservationPurchaseRecommendationMarshaller();', 'public', 'static', 'ReservationPurchaseRecommendationMarshaller', 'getInstance()', '{', 'return', 'instance;', '}', '/**', '*', 'Marshall', 'the', 'given', 'parameter', 'object.', '*/', 'public', 'void', 'marshall(ReservationPurchaseRecommendation', 'reservationPurchaseRecommendation,', 'ProtocolMarshaller', 'protocolMarshaller)', '{', 'if', '(reservationPurchaseRecommendation', '==', 'null)', '{', 'throw', 'new', 'SdkClientException(""Invalid', 'argument', 'passed', 'to', 'marshall(...)"");', '}', 'try', '{', 'protocolMarshaller.marshall(reservationPurchaseRecommendation.getAccountScope(),', 'ACCOUNTSCOPE_BINDING);', 'protocolMarshaller.marshall(reservationPurchaseRecommendation.getLookbackPeriodInDays(),', 'LOOKBACKPERIODINDAYS_BINDING);', 'protocolMarshaller.marshall(reservationPurchaseRecommendation.getTermInYears(),', 'TERMINYEARS_BINDING);', 'protocolMarshaller.marshall(reservationPurchaseRecommendation.getPaymentOption(),', 'PAYMENTOPTION_BINDING);', 'protocolMarshaller.marshall(reservationPurchaseRecommendation.getServiceSpecification(),', 'SERVICESPECIFICATION_BINDING);', 'protocolMarshaller.marshall(reservationPurchaseRecommendation.getRecommendationDetails(),', 'RECOMMENDATIONDETAILS_BINDING);', 'protocolMarshaller.marshall(reservationPurchaseRecommendation.getRecommendationSummary(),', 'RECOMMENDATIONSUMMARY_BINDING);', '}', 'catch', '(Exception', 'e)', '{', 'throw', 'new', 'SdkClientException(""Unable', 'to', 'marshall', 'request', 'to', 'JSON:', '""', '+', 'e.getMessage(),', 'e);', '}', '}', '}', '```']",challenge not surrounded by ''': ,
"from dateutil.tz import tzlocal
from datetime import datetime
from pytz import timezone
from lxml import etree

from django.core.management.base import BaseCommand
from django.conf import settings
from django.db import IntegrityError

from ...models import PTSchedule, Station
from ...fields import TRANSPORT_TYPES


class Command(BaseCommand):
    help = 'Updates public transport schedule and cleans past connections.'

    def handle(self, *args, **options):
        # insert new connections
        for station in Station.objects.all():
            parser = etree.XMLParser(ns_clean=True)
            # xml parsing and xpath magic
            url = 'http://mobil.efa.de/mobile3/XSLT_DM_REQUEST'
            args = '?outputFormat=xml&mode=direct&name_dm=' \
                + '%s&limit=30&type_dm=stopID' % station.dm_id

            tree = etree.parse(url + args, parser)
            departures = tree.xpath('/itdRequest/itdDepartureMonitor' +
                                    'Request/itdDepartureList/itdDeparture[*]')

            for departure in departures:
                # date and time
                date = departure.xpath('./itdDateTime/itdDate')[0].attrib
                # convert date attributes to int
                date = {k: int(v) for k, v in date.items()}
                time = departure.xpath(""./itdDateTime/itdTime"")[0].attrib
                # convert time attributes to int
                time = {k: int(v) for k, v in time.items() if v.isdigit()}
                # create datetime object and localize it
                date_time = datetime(date['year'], date['month'],
                                     date['day'], time['hour'], time['minute'])
                date_time = timezone(settings.TIME_ZONE).localize(date_time)

                # line, number and direction
                lineElement = departure.xpath('./itdServingLine')[0]
                number = lineElement.get('number')
                direction = lineElement.get('direction')

                transport = lineElement.xpath('./itdNoTrain')[0].get('name')
                # reverse mapping
                transport_to_id = {v: k for k, v in TRANSPORT_TYPES}
                transport_id = transport_to_id[transport]

                try:
                    # create public transport schedule object and save it
                    schedule = PTSchedule(
                        date=date_time,
                        station=station,
                        line=number, direction=direction,
                        transport_type=transport_id
                    )
                    schedule.save()
                except IntegrityError:
                    # ignore duplicates
                    pass

            self.stdout.write('Successfully updated schedule for %s (%s).'
                              % (station.name, station.dm_id))

        # clear past connections
        PTSchedule.objects.filter(date__lt=datetime.now(tzlocal())).delete()
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```from', 'dateutil.tz', 'import', 'tzlocal', 'from', 'datetime', 'import', 'datetime', 'from', 'pytz', 'import', 'timezone', 'from', 'lxml', 'import', 'etree', 'from', 'django.core.management.base', 'import', 'BaseCommand', 'from', 'django.conf', 'import', 'settings', 'from', 'django.db', 'import', 'IntegrityError', 'from', '...models', 'import', 'PTSchedule,', 'Station', 'from', '...fields', 'import', 'TRANSPORT_TYPES', 'class', 'Command(BaseCommand):', 'help', '=', ""'Updates"", 'public', 'transport', 'schedule', 'and', 'cleans', 'past', ""connections.'"", 'def', 'handle(self,', '*args,', '**options):', '#', 'insert', 'new', 'connections', 'for', 'station', 'in', 'Station.objects.all():', 'parser', '=', 'etree.XMLParser(ns_clean=True)', '#', 'xml', 'parsing', 'and', 'xpath', 'magic', 'url', '=', ""'http://mobil.efa.de/mobile3/XSLT_DM_REQUEST'"", 'args', '=', ""'?outputFormat=xml&mode=direct&name_dm='"", '\\', '+', ""'%s&limit=30&type_dm=stopID'"", '%', 'station.dm_id', 'tree', '=', 'etree.parse(url', '+', 'args,', 'parser)', 'departures', '=', ""tree.xpath('/itdRequest/itdDepartureMonitor'"", '+', ""'Request/itdDepartureList/itdDeparture[*]')"", 'for', 'departure', 'in', 'departures:', '#', 'date', 'and', 'time', 'date', '=', ""departure.xpath('./itdDateTime/itdDate')[0].attrib"", '#', 'convert', 'date', 'attributes', 'to', 'int', 'date', '=', '{k:', 'int(v)', 'for', 'k,', 'v', 'in', 'date.items()}', 'time', '=', 'departure.xpath(""./itdDateTime/itdTime"")[0].attrib', '#', 'convert', 'time', 'attributes', 'to', 'int', 'time', '=', '{k:', 'int(v)', 'for', 'k,', 'v', 'in', 'time.items()', 'if', 'v.isdigit()}', '#', 'create', 'datetime', 'object', 'and', 'localize', 'it', 'date_time', '=', ""datetime(date['year'],"", ""date['month'],"", ""date['day'],"", ""time['hour'],"", ""time['minute'])"", 'date_time', '=', 'timezone(settings.TIME_ZONE).localize(date_time)', '#', 'line,', 'number', 'and', 'direction', 'lineElement', '=', ""departure.xpath('./itdServingLine')[0]"", 'number', '=', ""lineElement.get('number')"", 'direction', '=', ""lineElement.get('direction')"", 'transport', '=', ""lineElement.xpath('./itdNoTrain')[0].get('name')"", '#', 'reverse', 'mapping', 'transport_to_id', '=', '{v:', 'k', 'for', 'k,', 'v', 'in', 'TRANSPORT_TYPES}', 'transport_id', '=', 'transport_to_id[transport]', 'try:', '#', 'create', 'public', 'transport', 'schedule', 'object', 'and', 'save', 'it', 'schedule', '=', 'PTSchedule(', 'date=date_time,', 'station=station,', 'line=number,', 'direction=direction,', 'transport_type=transport_id', ')', 'schedule.save()', 'except', 'IntegrityError:', '#', 'ignore', 'duplicates', 'pass', ""self.stdout.write('Successfully"", 'updated', 'schedule', 'for', '%s', ""(%s).'"", '%', '(station.name,', 'station.dm_id))', '#', 'clear', 'past', 'connections', 'PTSchedule.objects.filter(date__lt=datetime.now(tzlocal())).delete()', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright 2015 MongoDB, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.mongodb.m101j.crud;

import com.mongodb.BasicDBObject;
import com.mongodb.MongoClient;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoCursor;
import com.mongodb.client.MongoDatabase;
import com.mongodb.client.model.Filters;
import org.bson.Document;
import org.bson.conversions.Bson;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;

import static com.mongodb.client.model.Filters.*;
import static com.mongodb.m101j.util.Helpers.printJson;

public class FindWithFilterTest {
    public static void main(String[] args) {
        MongoClient client = new MongoClient();
        MongoDatabase database = client.getDatabase(""course"");
        MongoCollection<Document> collection = database.getCollection(""findWithFilterTest"");

        collection.drop();

        // insert 10 documents with two random integers
        for (int i = 0; i < 10; i++) {
            collection.insertOne(new Document()
                                 .append(""x"", new Random().nextInt(2))
                                 .append(""y"", new Random().nextInt(100)));
        }

//        Bson filter = new Document(""x"", 0)
//        .append(""y"", new Document(""$gt"", 10).append(""$lt"", 90));

        Bson filter = and(eq(""x"", 0), gt(""y"", 10), lt(""y"", 90));

        List<Document> all = collection.find(filter).into(new ArrayList<Document>());

        for (Document cur : all) {
            printJson(cur);
        }

        long count = collection.count(filter);
        System.out.println();
        System.out.println(count);
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '2015', 'MongoDB,', 'Inc.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'com.mongodb.m101j.crud;', 'import', 'com.mongodb.BasicDBObject;', 'import', 'com.mongodb.MongoClient;', 'import', 'com.mongodb.client.MongoCollection;', 'import', 'com.mongodb.client.MongoCursor;', 'import', 'com.mongodb.client.MongoDatabase;', 'import', 'com.mongodb.client.model.Filters;', 'import', 'org.bson.Document;', 'import', 'org.bson.conversions.Bson;', 'import', 'java.util.ArrayList;', 'import', 'java.util.List;', 'import', 'java.util.Random;', 'import', 'static', 'com.mongodb.client.model.Filters.*;', 'import', 'static', 'com.mongodb.m101j.util.Helpers.printJson;', 'public', 'class', 'FindWithFilterTest', '{', 'public', 'static', 'void', 'main(String[]', 'args)', '{', 'MongoClient', 'client', '=', 'new', 'MongoClient();', 'MongoDatabase', 'database', '=', 'client.getDatabase(""course"");', 'MongoCollection<Document>', 'collection', '=', 'database.getCollection(""findWithFilterTest"");', 'collection.drop();', '//', 'insert', '10', 'documents', 'with', 'two', 'random', 'integers', 'for', '(int', 'i', '=', '0;', 'i', '<', '10;', 'i++)', '{', 'collection.insertOne(new', 'Document()', '.append(""x"",', 'new', 'Random().nextInt(2))', '.append(""y"",', 'new', 'Random().nextInt(100)));', '}', '//', 'Bson', 'filter', '=', 'new', 'Document(""x"",', '0)', '//', '.append(""y"",', 'new', 'Document(""$gt"",', '10).append(""$lt"",', '90));', 'Bson', 'filter', '=', 'and(eq(""x"",', '0),', 'gt(""y"",', '10),', 'lt(""y"",', '90));', 'List<Document>', 'all', '=', 'collection.find(filter).into(new', 'ArrayList<Document>());', 'for', '(Document', 'cur', ':', 'all)', '{', 'printJson(cur);', '}', 'long', 'count', '=', 'collection.count(filter);', 'System.out.println();', 'System.out.println(count);', '}', '}', '```']",challenge not surrounded by ''': ,
"﻿/* global require */
var d3 = require('d3'),
    dictionary = {},
    topojson = require('topojson'),
    topojson_countries = require('./topo_countries_110m.json'),
    countries = topojson.feature(topojson_countries,
        topojson_countries.objects.countries_110m).features,
    neighbors = topojson.neighbors(
        topojson_countries.objects.countries_110m.geometries);

for (var i = 0; i < countries.length; i++) {
  dictionary[countries[i].id] =
  countries[i].color = d3.max(neighbors[i], function(n){ return countries[n].color;}) + 1 || 0;
}
console.log(JSON.stringify(dictionary));


/*
for (var i = 0; i < countries.length; i++) {
  var color = countries[i].color,
      match = neighbors[i]
        .map(function (d) { return countries[d]; })
        .filter(function (d) { return d.color = color; });

  if (match.length) {
    console.log(i, countries[i].id + ',' + countries[i].color, neighbors[i]);
  }
}
*/


","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```\ufeff/*', 'global', 'require', '*/', 'var', 'd3', '=', ""require('d3'),"", 'dictionary', '=', '{},', 'topojson', '=', ""require('topojson'),"", 'topojson_countries', '=', ""require('./topo_countries_110m.json'),"", 'countries', '=', 'topojson.feature(topojson_countries,', 'topojson_countries.objects.countries_110m).features,', 'neighbors', '=', 'topojson.neighbors(', 'topojson_countries.objects.countries_110m.geometries);', 'for', '(var', 'i', '=', '0;', 'i', '<', 'countries.length;', 'i++)', '{', 'dictionary[countries[i].id]', '=', 'countries[i].color', '=', 'd3.max(neighbors[i],', 'function(n){', 'return', 'countries[n].color;})', '+', '1', '||', '0;', '}', 'console.log(JSON.stringify(dictionary));', '/*', 'for', '(var', 'i', '=', '0;', 'i', '<', 'countries.length;', 'i++)', '{', 'var', 'color', '=', 'countries[i].color,', 'match', '=', 'neighbors[i]', '.map(function', '(d)', '{', 'return', 'countries[d];', '})', '.filter(function', '(d)', '{', 'return', 'd.color', '=', 'color;', '});', 'if', '(match.length)', '{', 'console.log(i,', 'countries[i].id', '+', ""','"", '+', 'countries[i].color,', 'neighbors[i]);', '}', '}', '*/', '```']",challenge not surrounded by ''': ,
"#!/usr/bin/env python

""""""
jaraco.windows.message

Windows Messaging support
""""""

import ctypes
from ctypes.wintypes import HWND, UINT, WPARAM, LPARAM, DWORD, LPVOID

import six

LRESULT = LPARAM

class LPARAM_wstr(LPARAM):
	""""""
	A special instance of LPARAM that can be constructed from a string
	instance (for functions such as SendMessage, whose LPARAM may point to
	a unicode string).
	""""""
	@classmethod
	def from_param(cls, param):
		if isinstance(param, six.string_types):
			return LPVOID.from_param(six.text_type(param))
		return LPARAM.from_param(param)

SendMessage = ctypes.windll.user32.SendMessageW
SendMessage.argtypes = (HWND, UINT, WPARAM, LPARAM_wstr)
SendMessage.restype = LRESULT

HWND_BROADCAST=0xFFFF
WM_SETTINGCHANGE=0x1A

# constants from http://msdn.microsoft.com/en-us/library/ms644952%28v=vs.85%29.aspx
SMTO_ABORTIFHUNG = 0x02
SMTO_BLOCK = 0x01
SMTO_NORMAL = 0x00
SMTO_NOTIMEOUTIFNOTHUNG = 0x08
SMTO_ERRORONEXIT = 0x20

SendMessageTimeout = ctypes.windll.user32.SendMessageTimeoutW
SendMessageTimeout.argtypes = SendMessage.argtypes + (
	UINT, UINT, ctypes.POINTER(DWORD)
)
SendMessageTimeout.restype = LRESULT

def unicode_as_lparam(source):
	pointer = ctypes.cast(ctypes.c_wchar_p(source), ctypes.c_void_p)
	return LPARAM(pointer.value)
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/usr/bin/env', 'python', '""""""', 'jaraco.windows.message', 'Windows', 'Messaging', 'support', '""""""', 'import', 'ctypes', 'from', 'ctypes.wintypes', 'import', 'HWND,', 'UINT,', 'WPARAM,', 'LPARAM,', 'DWORD,', 'LPVOID', 'import', 'six', 'LRESULT', '=', 'LPARAM', 'class', 'LPARAM_wstr(LPARAM):', '""""""', 'A', 'special', 'instance', 'of', 'LPARAM', 'that', 'can', 'be', 'constructed', 'from', 'a', 'string', 'instance', '(for', 'functions', 'such', 'as', 'SendMessage,', 'whose', 'LPARAM', 'may', 'point', 'to', 'a', 'unicode', 'string).', '""""""', '@classmethod', 'def', 'from_param(cls,', 'param):', 'if', 'isinstance(param,', 'six.string_types):', 'return', 'LPVOID.from_param(six.text_type(param))', 'return', 'LPARAM.from_param(param)', 'SendMessage', '=', 'ctypes.windll.user32.SendMessageW', 'SendMessage.argtypes', '=', '(HWND,', 'UINT,', 'WPARAM,', 'LPARAM_wstr)', 'SendMessage.restype', '=', 'LRESULT', 'HWND_BROADCAST=0xFFFF', 'WM_SETTINGCHANGE=0x1A', '#', 'constants', 'from', 'http://msdn.microsoft.com/en-us/library/ms644952%28v=vs.85%29.aspx', 'SMTO_ABORTIFHUNG', '=', '0x02', 'SMTO_BLOCK', '=', '0x01', 'SMTO_NORMAL', '=', '0x00', 'SMTO_NOTIMEOUTIFNOTHUNG', '=', '0x08', 'SMTO_ERRORONEXIT', '=', '0x20', 'SendMessageTimeout', '=', 'ctypes.windll.user32.SendMessageTimeoutW', 'SendMessageTimeout.argtypes', '=', 'SendMessage.argtypes', '+', '(', 'UINT,', 'UINT,', 'ctypes.POINTER(DWORD)', ')', 'SendMessageTimeout.restype', '=', 'LRESULT', 'def', 'unicode_as_lparam(source):', 'pointer', '=', 'ctypes.cast(ctypes.c_wchar_p(source),', 'ctypes.c_void_p)', 'return', 'LPARAM(pointer.value)', '```']",challenge not surrounded by ''': ,
"<HTML>
<HEAD>
    <TITLE>
        &xwp;: Voeg Uitlijnen op Raster toe
    </TITLE>
</HEAD>
<BODY>
<B>""Voeg Uitlijnen op Raster toe""</B> zal een ""Raster uitlijnen"" menu onderdeel
toevoegen aan deze mappen
<A HREF=""glossary/gls_popmenu.html"">&popmenu;</A>
(alleen voor Pictogram overzichten en alleen als ""Sorteervolgorde Altijd behouden"" uitgeschakeld
is voor deze map).

<P>Wijzigen van deze instelling maakt de standaard instelling gespecificeerd in
de ""Uitlijnen op Raster"" pagina in het
<A HREF=""objects/obj_wps.html"">""Workplace Shell"" object</A> ongedaan.

<IFNDEF __NOXWPSETUP__>
<P>Deze instelling wordt uitgeschakeld als ""Uitlijnen op Raster"" ook is uitgeschakeld
in het
<A HREF=""objects/obj_xwpsetup.html"">""&xwp; Instellingen"" object</A>.
</IFNDEF>

<BR>
</BODY>
</HTML>

","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<HTML>', '<HEAD>', '<TITLE>', '&xwp;:', 'Voeg', 'Uitlijnen', 'op', 'Raster', 'toe', '</TITLE>', '</HEAD>', '<BODY>', '<B>""Voeg', 'Uitlijnen', 'op', 'Raster', 'toe""</B>', 'zal', 'een', '""Raster', 'uitlijnen""', 'menu', 'onderdeel', 'toevoegen', 'aan', 'deze', 'mappen', '<A', 'HREF=""glossary/gls_popmenu.html"">&popmenu;</A>', '(alleen', 'voor', 'Pictogram', 'overzichten', 'en', 'alleen', 'als', '""Sorteervolgorde', 'Altijd', 'behouden""', 'uitgeschakeld', 'is', 'voor', 'deze', 'map).', '<P>Wijzigen', 'van', 'deze', 'instelling', 'maakt', 'de', 'standaard', 'instelling', 'gespecificeerd', 'in', 'de', '""Uitlijnen', 'op', 'Raster""', 'pagina', 'in', 'het', '<A', 'HREF=""objects/obj_wps.html"">""Workplace', 'Shell""', 'object</A>', 'ongedaan.', '<IFNDEF', '__NOXWPSETUP__>', '<P>Deze', 'instelling', 'wordt', 'uitgeschakeld', 'als', '""Uitlijnen', 'op', 'Raster""', 'ook', 'is', 'uitgeschakeld', 'in', 'het', '<A', 'HREF=""objects/obj_xwpsetup.html"">""&xwp;', 'Instellingen""', 'object</A>.', '</IFNDEF>', '<BR>', '</BODY>', '</HTML>', '```']",challenge not surrounded by ''': ,
"/*
 * This file is part of Sponge, licensed under the MIT License (MIT).
 *
 * Copyright (c) SpongePowered <https://www.spongepowered.org>
 * Copyright (c) contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the ""Software""), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package org.spongepowered.forge.mixin.core.minecraftforge.event.world;

import net.minecraft.core.BlockPos;
import net.minecraft.world.level.LevelAccessor;
import net.minecraft.world.level.block.state.BlockState;
import net.minecraftforge.event.world.BlockEvent;
import org.spongepowered.asm.mixin.Mixin;
import org.spongepowered.asm.mixin.Shadow;

@Mixin(value = BlockEvent.class, remap = false)
public abstract class BlockEventMixin_Forge {

    // @formatter:off
    @Shadow public abstract LevelAccessor shadow$getWorld();
    @Shadow public abstract BlockPos shadow$getPos();
    @Shadow public abstract BlockState shadow$getState();
    // @formatter:on

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'This', 'file', 'is', 'part', 'of', 'Sponge,', 'licensed', 'under', 'the', 'MIT', 'License', '(MIT).', '*', '*', 'Copyright', '(c)', 'SpongePowered', '<https://www.spongepowered.org>', '*', 'Copyright', '(c)', 'contributors', '*', '*', 'Permission', 'is', 'hereby', 'granted,', 'free', 'of', 'charge,', 'to', 'any', 'person', 'obtaining', 'a', 'copy', '*', 'of', 'this', 'software', 'and', 'associated', 'documentation', 'files', '(the', '""Software""),', 'to', 'deal', '*', 'in', 'the', 'Software', 'without', 'restriction,', 'including', 'without', 'limitation', 'the', 'rights', '*', 'to', 'use,', 'copy,', 'modify,', 'merge,', 'publish,', 'distribute,', 'sublicense,', 'and/or', 'sell', '*', 'copies', 'of', 'the', 'Software,', 'and', 'to', 'permit', 'persons', 'to', 'whom', 'the', 'Software', 'is', '*', 'furnished', 'to', 'do', 'so,', 'subject', 'to', 'the', 'following', 'conditions:', '*', '*', 'The', 'above', 'copyright', 'notice', 'and', 'this', 'permission', 'notice', 'shall', 'be', 'included', 'in', '*', 'all', 'copies', 'or', 'substantial', 'portions', 'of', 'the', 'Software.', '*', '*', 'THE', 'SOFTWARE', 'IS', 'PROVIDED', '""AS', 'IS"",', 'WITHOUT', 'WARRANTY', 'OF', 'ANY', 'KIND,', 'EXPRESS', 'OR', '*', 'IMPLIED,', 'INCLUDING', 'BUT', 'NOT', 'LIMITED', 'TO', 'THE', 'WARRANTIES', 'OF', 'MERCHANTABILITY,', '*', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE', 'AND', 'NONINFRINGEMENT.', 'IN', 'NO', 'EVENT', 'SHALL', 'THE', '*', 'AUTHORS', 'OR', 'COPYRIGHT', 'HOLDERS', 'BE', 'LIABLE', 'FOR', 'ANY', 'CLAIM,', 'DAMAGES', 'OR', 'OTHER', '*', 'LIABILITY,', 'WHETHER', 'IN', 'AN', 'ACTION', 'OF', 'CONTRACT,', 'TORT', 'OR', 'OTHERWISE,', 'ARISING', 'FROM,', '*', 'OUT', 'OF', 'OR', 'IN', 'CONNECTION', 'WITH', 'THE', 'SOFTWARE', 'OR', 'THE', 'USE', 'OR', 'OTHER', 'DEALINGS', 'IN', '*', 'THE', 'SOFTWARE.', '*/', 'package', 'org.spongepowered.forge.mixin.core.minecraftforge.event.world;', 'import', 'net.minecraft.core.BlockPos;', 'import', 'net.minecraft.world.level.LevelAccessor;', 'import', 'net.minecraft.world.level.block.state.BlockState;', 'import', 'net.minecraftforge.event.world.BlockEvent;', 'import', 'org.spongepowered.asm.mixin.Mixin;', 'import', 'org.spongepowered.asm.mixin.Shadow;', '@Mixin(value', '=', 'BlockEvent.class,', 'remap', '=', 'false)', 'public', 'abstract', 'class', 'BlockEventMixin_Forge', '{', '//', '@formatter:off', '@Shadow', 'public', 'abstract', 'LevelAccessor', 'shadow$getWorld();', '@Shadow', 'public', 'abstract', 'BlockPos', 'shadow$getPos();', '@Shadow', 'public', 'abstract', 'BlockState', 'shadow$getState();', '//', '@formatter:on', '}', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE html>
<!--
Copyright (c) 2012 Intel Corporation.

Redistribution and use in source and binary forms, with or without modification,
are permitted provided that the following conditions are met:

* Redistributions of works must retain the original copyright notice, this list
  of conditions and the following disclaimer.
* Redistributions in binary form must reproduce the original copyright notice,
  this list of conditions and the following disclaimer in the documentation
  and/or other materials provided with the distribution.
* Neither the name of Intel Corporation nor the names of its contributors
  may be used to endorse or promote products derived from this work without
  specific prior written permission.

THIS SOFTWARE IS PROVIDED BY INTEL CORPORATION ""AS IS""
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL INTEL CORPORATION BE LIABLE FOR ANY DIRECT,
INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Authors:
         Cao, Jun <junx.cao@intel.com>

-->

<html>
  <head>
    <title>WebMessaging Test: webmessaging_MessagePort_postMessage_same_port</title>
    <link rel=""author"" title=""Intel"" href=""http://www.intel.com"" />
    <link rel=""help"" href=""http://www.w3.org/TR/2012/CR-webmessaging-20120501/#dom-messageport-postmessage"" />
    <meta name=""flags"" content="""" />
    <meta name=""assert"" content=""Check if MessagePort.port1 will not receive message that from itself"" />
    <script src=""../resources/testharness.js""></script>
    <script src=""../resources/testharnessreport.js""></script>
  </head>
  <body>
    <div id=""log""></div>
    <script type=""text/javascript"">
        var t = async_test();
        function runTest () {
            var channel = new MessageChannel();
            channel.port1.postMessage(""ok"");
            channel.port1.onmessage =  function (e) {
                t.step( function () {
                    assert_true(false, ""port1 will not receive message that from itself"");
                });
                t.done();
            }

            window.setTimeout(t.step_func( function () {
                t.done();
            }), 500);
        }
        runTest();
    </script>
  </body>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'html>', '<!--', 'Copyright', '(c)', '2012', 'Intel', 'Corporation.', 'Redistribution', 'and', 'use', 'in', 'source', 'and', 'binary', 'forms,', 'with', 'or', 'without', 'modification,', 'are', 'permitted', 'provided', 'that', 'the', 'following', 'conditions', 'are', 'met:', '*', 'Redistributions', 'of', 'works', 'must', 'retain', 'the', 'original', 'copyright', 'notice,', 'this', 'list', 'of', 'conditions', 'and', 'the', 'following', 'disclaimer.', '*', 'Redistributions', 'in', 'binary', 'form', 'must', 'reproduce', 'the', 'original', 'copyright', 'notice,', 'this', 'list', 'of', 'conditions', 'and', 'the', 'following', 'disclaimer', 'in', 'the', 'documentation', 'and/or', 'other', 'materials', 'provided', 'with', 'the', 'distribution.', '*', 'Neither', 'the', 'name', 'of', 'Intel', 'Corporation', 'nor', 'the', 'names', 'of', 'its', 'contributors', 'may', 'be', 'used', 'to', 'endorse', 'or', 'promote', 'products', 'derived', 'from', 'this', 'work', 'without', 'specific', 'prior', 'written', 'permission.', 'THIS', 'SOFTWARE', 'IS', 'PROVIDED', 'BY', 'INTEL', 'CORPORATION', '""AS', 'IS""', 'AND', 'ANY', 'EXPRESS', 'OR', 'IMPLIED', 'WARRANTIES,', 'INCLUDING,', 'BUT', 'NOT', 'LIMITED', 'TO,', 'THE', 'IMPLIED', 'WARRANTIES', 'OF', 'MERCHANTABILITY', 'AND', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE', 'ARE', 'DISCLAIMED.', 'IN', 'NO', 'EVENT', 'SHALL', 'INTEL', 'CORPORATION', 'BE', 'LIABLE', 'FOR', 'ANY', 'DIRECT,', 'INDIRECT,', 'INCIDENTAL,', 'SPECIAL,', 'EXEMPLARY,', 'OR', 'CONSEQUENTIAL', 'DAMAGES', '(INCLUDING,', 'BUT', 'NOT', 'LIMITED', 'TO,', 'PROCUREMENT', 'OF', 'SUBSTITUTE', 'GOODS', 'OR', 'SERVICES;', 'LOSS', 'OF', 'USE,', 'DATA,', 'OR', 'PROFITS;', 'OR', 'BUSINESS', 'INTERRUPTION)', 'HOWEVER', 'CAUSED', 'AND', 'ON', 'ANY', 'THEORY', 'OF', 'LIABILITY,', 'WHETHER', 'IN', 'CONTRACT,', 'STRICT', 'LIABILITY,', 'OR', 'TORT', '(INCLUDING', 'NEGLIGENCE', 'OR', 'OTHERWISE)', 'ARISING', 'IN', 'ANY', 'WAY', 'OUT', 'OF', 'THE', 'USE', 'OF', 'THIS', 'SOFTWARE,', 'EVEN', 'IF', 'ADVISED', 'OF', 'THE', 'POSSIBILITY', 'OF', 'SUCH', 'DAMAGE.', 'Authors:', 'Cao,', 'Jun', '<junx.cao@intel.com>', '-->', '<html>', '<head>', '<title>WebMessaging', 'Test:', 'webmessaging_MessagePort_postMessage_same_port</title>', '<link', 'rel=""author""', 'title=""Intel""', 'href=""http://www.intel.com""', '/>', '<link', 'rel=""help""', 'href=""http://www.w3.org/TR/2012/CR-webmessaging-20120501/#dom-messageport-postmessage""', '/>', '<meta', 'name=""flags""', 'content=""""', '/>', '<meta', 'name=""assert""', 'content=""Check', 'if', 'MessagePort.port1', 'will', 'not', 'receive', 'message', 'that', 'from', 'itself""', '/>', '<script', 'src=""../resources/testharness.js""></script>', '<script', 'src=""../resources/testharnessreport.js""></script>', '</head>', '<body>', '<div', 'id=""log""></div>', '<script', 'type=""text/javascript"">', 'var', 't', '=', 'async_test();', 'function', 'runTest', '()', '{', 'var', 'channel', '=', 'new', 'MessageChannel();', 'channel.port1.postMessage(""ok"");', 'channel.port1.onmessage', '=', 'function', '(e)', '{', 't.step(', 'function', '()', '{', 'assert_true(false,', '""port1', 'will', 'not', 'receive', 'message', 'that', 'from', 'itself"");', '});', 't.done();', '}', 'window.setTimeout(t.step_func(', 'function', '()', '{', 't.done();', '}),', '500);', '}', 'runTest();', '</script>', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"package org.xwalk.embedded.api.sample;

import android.os.Bundle;
import org.xwalk.core.XWalkActivity;
import org.xwalk.core.XWalkView;

import android.app.AlertDialog;

public class ContactExtensionActivity extends XWalkActivity {
    private ExtensionContact mExtension;
    private XWalkView mXWalkView;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.xwview_layout);
        mXWalkView = (XWalkView) findViewById(R.id.xwalkview);                
    }
    
	@Override
	protected void onXWalkReady() {
		// TODO Auto-generated method stub
        StringBuffer mess = new StringBuffer();
        mess.append(""Test Purpose: \n\n"")
        .append(""Verifies extension can be supported .\n\n"")
        .append(""Test  Step:\n\n"")
        .append(""1. Input one contact name and contact phone number.\n\n"")
        .append(""2. Click Write Contact button\n\n"")
        .append(""3. Click Read Contact button\n\n"")
        .append(""Expected Result:\n\n"")
        .append(""Test passes if the display of Write & Read contact contains 'passed' in green color."");
        new  AlertDialog.Builder(this)
        .setTitle(""Info"" )
        .setMessage(mess.toString())
        .setPositiveButton(""confirm"" ,  null )
        .show();

        mExtension = new ExtensionContact(ContactExtensionActivity.this);
        mXWalkView.load(""file:///android_asset/contact.html"", null);
	}

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'org.xwalk.embedded.api.sample;', 'import', 'android.os.Bundle;', 'import', 'org.xwalk.core.XWalkActivity;', 'import', 'org.xwalk.core.XWalkView;', 'import', 'android.app.AlertDialog;', 'public', 'class', 'ContactExtensionActivity', 'extends', 'XWalkActivity', '{', 'private', 'ExtensionContact', 'mExtension;', 'private', 'XWalkView', 'mXWalkView;', '@Override', 'protected', 'void', 'onCreate(Bundle', 'savedInstanceState)', '{', 'super.onCreate(savedInstanceState);', 'setContentView(R.layout.xwview_layout);', 'mXWalkView', '=', '(XWalkView)', 'findViewById(R.id.xwalkview);', '}', '@Override', 'protected', 'void', 'onXWalkReady()', '{', '//', 'TODO', 'Auto-generated', 'method', 'stub', 'StringBuffer', 'mess', '=', 'new', 'StringBuffer();', 'mess.append(""Test', 'Purpose:', '\\n\\n"")', '.append(""Verifies', 'extension', 'can', 'be', 'supported', '.\\n\\n"")', '.append(""Test', 'Step:\\n\\n"")', '.append(""1.', 'Input', 'one', 'contact', 'name', 'and', 'contact', 'phone', 'number.\\n\\n"")', '.append(""2.', 'Click', 'Write', 'Contact', 'button\\n\\n"")', '.append(""3.', 'Click', 'Read', 'Contact', 'button\\n\\n"")', '.append(""Expected', 'Result:\\n\\n"")', '.append(""Test', 'passes', 'if', 'the', 'display', 'of', 'Write', '&', 'Read', 'contact', 'contains', ""'passed'"", 'in', 'green', 'color."");', 'new', 'AlertDialog.Builder(this)', '.setTitle(""Info""', ')', '.setMessage(mess.toString())', '.setPositiveButton(""confirm""', ',', 'null', ')', '.show();', 'mExtension', '=', 'new', 'ExtensionContact(ContactExtensionActivity.this);', 'mXWalkView.load(""file:///android_asset/contact.html"",', 'null);', '}', '}', '```']",challenge not surrounded by ''': ,
"package org.bpunit.assertions.behaviors;

/**
 * An interface describing how a {@link org.bpunit.assertions.POJOAsserter} will behave in exceptional situations.
 */
public interface Behavior {
    void behave(String message, Throwable t);
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'org.bpunit.assertions.behaviors;', '/**', '*', 'An', 'interface', 'describing', 'how', 'a', '{@link', 'org.bpunit.assertions.POJOAsserter}', 'will', 'behave', 'in', 'exceptional', 'situations.', '*/', 'public', 'interface', 'Behavior', '{', 'void', 'behave(String', 'message,', 'Throwable', 't);', '}', '```']",challenge not surrounded by ''': ,
"/**
 * jQuery custom cover dom in page
 *
 * Copyright (c) 2009 Mike Chen (achievo.mike.chen@gmail.com)
 *
 * @version 1.0.0
 * @author Mike Chen
 * @mailto achievo.mike.chen@gmail.com
 * @modify Mike Chen
**/

(function($){
var cout = 1,//计数器
dom = {}; //保存对应的DOM的jQuery对象
//bd = $('body'), doc = $(document), win = $(window);
//监控对象的变化
$(window).resize(function(){
    setTimeout(function(){
        $.each(dom, function(i, v){
            v[1].css({width: v[0].outerWidth(), height:v[0].outerHeight()});
        });
    }, 0);
});
$.extend($.fn,{
cover: function(os) { //os: options
    //全局设置
    var st = {
        bg: '#FFF', //背景颜色
        opacity: 0,  //透明度
        zIndex: 8888, //z-index
        owndom: document
    };
    if(os){$.extend(st, os);}
    //绑定注销事件
    $(st.owndom).bind('empty', function(){
        $.each(dom, function(i, v){
            v[1].remove();
            delete(dom[i]);//删除对应的对象
        });
    });
    return this.each(function(){
        var t = $(this);
        var i = t.data('coverIndex');
        if(i && dom[i]){//是否存在Cover
            return;
        }
        var o = $('<div></div>');
        o.css({
            position: 'absolute',
            width: t.outerWidth(),
            height: t.outerHeight(),
            overflow: 'hidden',
            background: st.bg,
            opacity: st.opacity,
            zIndex: st.zIndex
        });
        t.before(o);
        dom[cout] = [t, o];
        t.data('coverIndex', cout);
        cout ++;
    });

},
//取消Cover
uncover: function(){
    return this.each(function(){
        var i = $(this).data('coverIndex');
        if(!i || !dom[i]){return;}
        dom[i][1].remove();
        delete(dom[i]);
    });
}
});

})(jQuery);
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', 'jQuery', 'custom', 'cover', 'dom', 'in', 'page', '*', '*', 'Copyright', '(c)', '2009', 'Mike', 'Chen', '(achievo.mike.chen@gmail.com)', '*', '*', '@version', '1.0.0', '*', '@author', 'Mike', 'Chen', '*', '@mailto', 'achievo.mike.chen@gmail.com', '*', '@modify', 'Mike', 'Chen', '**/', '(function($){', 'var', 'cout', '=', '1,//计数器', 'dom', '=', '{};', '//保存对应的DOM的jQuery对象', '//bd', '=', ""$('body'),"", 'doc', '=', '$(document),', 'win', '=', '$(window);', '//监控对象的变化', '$(window).resize(function(){', 'setTimeout(function(){', '$.each(dom,', 'function(i,', 'v){', 'v[1].css({width:', 'v[0].outerWidth(),', 'height:v[0].outerHeight()});', '});', '},', '0);', '});', '$.extend($.fn,{', 'cover:', 'function(os)', '{', '//os:', 'options', '//全局设置', 'var', 'st', '=', '{', 'bg:', ""'#FFF',"", '//背景颜色', 'opacity:', '0,', '//透明度', 'zIndex:', '8888,', '//z-index', 'owndom:', 'document', '};', 'if(os){$.extend(st,', 'os);}', '//绑定注销事件', ""$(st.owndom).bind('empty',"", 'function(){', '$.each(dom,', 'function(i,', 'v){', 'v[1].remove();', 'delete(dom[i]);//删除对应的对象', '});', '});', 'return', 'this.each(function(){', 'var', 't', '=', '$(this);', 'var', 'i', '=', ""t.data('coverIndex');"", 'if(i', '&&', 'dom[i]){//是否存在Cover', 'return;', '}', 'var', 'o', '=', ""$('<div></div>');"", 'o.css({', 'position:', ""'absolute',"", 'width:', 't.outerWidth(),', 'height:', 't.outerHeight(),', 'overflow:', ""'hidden',"", 'background:', 'st.bg,', 'opacity:', 'st.opacity,', 'zIndex:', 'st.zIndex', '});', 't.before(o);', 'dom[cout]', '=', '[t,', 'o];', ""t.data('coverIndex',"", 'cout);', 'cout', '++;', '});', '},', '//取消Cover', 'uncover:', 'function(){', 'return', 'this.each(function(){', 'var', 'i', '=', ""$(this).data('coverIndex');"", 'if(!i', '||', '!dom[i]){return;}', 'dom[i][1].remove();', 'delete(dom[i]);', '});', '}', '});', '})(jQuery);', '```']",challenge not surrounded by ''': ,
"import * as spaniel from 'spaniel';
import emberSpanielEngine from './../spaniel-engines/ember-spaniel-engine';

export function initialize() {
  spaniel.setGlobalEngine(emberSpanielEngine);
}

export default {
  name: 'spaniel',
  initialize
};
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', '*', 'as', 'spaniel', 'from', ""'spaniel';"", 'import', 'emberSpanielEngine', 'from', ""'./../spaniel-engines/ember-spaniel-engine';"", 'export', 'function', 'initialize()', '{', 'spaniel.setGlobalEngine(emberSpanielEngine);', '}', 'export', 'default', '{', 'name:', ""'spaniel',"", 'initialize', '};', '```']",challenge not surrounded by ''': ,
"#!/usr/bin/env bash
#
# Test script

mvn test
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/usr/bin/env', 'bash', '#', '#', 'Test', 'script', 'mvn', 'test', '```']",challenge not surrounded by ''': ,
"package command.remote;

public class CeilingFanOnCommand implements Command {
	
	CeilingFan ceilingFan;
	
	CeilingFanOnCommand(CeilingFan ceilingFan) {
		this.ceilingFan = ceilingFan;
	}
	
	public void execute() {
		ceilingFan.high();
	}
}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'command.remote;', 'public', 'class', 'CeilingFanOnCommand', 'implements', 'Command', '{', 'CeilingFan', 'ceilingFan;', 'CeilingFanOnCommand(CeilingFan', 'ceilingFan)', '{', 'this.ceilingFan', '=', 'ceilingFan;', '}', 'public', 'void', 'execute()', '{', 'ceilingFan.high();', '}', '}```']",challenge not surrounded by ''': ,
"# vim: tabstop=4 shiftwidth=4 softtabstop=4

# Copyright 2013 Cloudbase Solutions Srl
#
#    Licensed under the Apache License, Version 2.0 (the ""License""); you may
#    not use this file except in compliance with the License. You may obtain
#    a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT
#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#    License for the specific language governing permissions and limitations
#    under the License.

import mock
import unittest

from cloudbaseinit import exception
from cloudbaseinit.metadata import factory


class MetadataServiceFactoryTests(unittest.TestCase):

    @mock.patch('cloudbaseinit.utils.classloader.ClassLoader.load_class')
    def _test_get_metadata_service(self, mock_load_class, ret_value):
        mock_load_class.side_effect = ret_value
        if ret_value is exception.CloudbaseInitException:
            self.assertRaises(exception.CloudbaseInitException,
                              factory.get_metadata_service)
        else:
            response = factory.get_metadata_service()
            self.assertEqual(mock_load_class()(), response)

    def test_get_metadata_service(self):
        m = mock.MagicMock()
        self._test_get_metadata_service(ret_value=m)

    def test_get_metadata_service_exception(self):
        self._test_get_metadata_service(
            ret_value=exception.CloudbaseInitException)
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', 'vim:', 'tabstop=4', 'shiftwidth=4', 'softtabstop=4', '#', 'Copyright', '2013', 'Cloudbase', 'Solutions', 'Srl', '#', '#', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', 'you', 'may', '#', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', 'You', 'may', 'obtain', '#', 'a', 'copy', 'of', 'the', 'License', 'at', '#', '#', 'http://www.apache.org/licenses/LICENSE-2.0', '#', '#', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '#', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', 'WITHOUT', '#', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', 'See', 'the', '#', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', 'limitations', '#', 'under', 'the', 'License.', 'import', 'mock', 'import', 'unittest', 'from', 'cloudbaseinit', 'import', 'exception', 'from', 'cloudbaseinit.metadata', 'import', 'factory', 'class', 'MetadataServiceFactoryTests(unittest.TestCase):', ""@mock.patch('cloudbaseinit.utils.classloader.ClassLoader.load_class')"", 'def', '_test_get_metadata_service(self,', 'mock_load_class,', 'ret_value):', 'mock_load_class.side_effect', '=', 'ret_value', 'if', 'ret_value', 'is', 'exception.CloudbaseInitException:', 'self.assertRaises(exception.CloudbaseInitException,', 'factory.get_metadata_service)', 'else:', 'response', '=', 'factory.get_metadata_service()', 'self.assertEqual(mock_load_class()(),', 'response)', 'def', 'test_get_metadata_service(self):', 'm', '=', 'mock.MagicMock()', 'self._test_get_metadata_service(ret_value=m)', 'def', 'test_get_metadata_service_exception(self):', 'self._test_get_metadata_service(', 'ret_value=exception.CloudbaseInitException)', '```']",challenge not surrounded by ''': ,
"# Copyright 2015 Metaswitch Networks
#
# Licensed under the Apache License, Version 2.0 (the ""License"");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an ""AS IS"" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
""""""
Usage:
  calicoctl ipam release <IP>
  calicoctl ipam info <IP>

Description:
  Manage Calico assigned IP addresses

Warnings:
  -  Releasing an in-use IP address can result in it being assigned to multiple
     workloads.
""""""
import sys

from netaddr import IPAddress
from pycalico.block import AddressNotAssignedError
from pycalico.util import validate_ip

from connectors import client


def validate_arguments(arguments):
    """"""
    Validate argument values:
        <IP>

    :param arguments: Docopt processed arguments
    """"""
    # Validate IP
    container_ip_ok = arguments.get(""<IP>"") is None or \
                      validate_ip(arguments[""<IP>""], 4) or \
                      validate_ip(arguments[""<IP>""], 6)

    # Print error message and exit if not valid argument
    if not container_ip_ok:
        print ""Invalid IP address specified.""
        sys.exit(1)


def ipam(arguments):
    """"""
    Main dispatcher for ipam commands. Calls the corresponding helper
    function.

    :param arguments: A dictionary of arguments already processed through
    this file's docstring with docopt
    :return: None
    """"""
    validate_arguments(arguments)

    if arguments.get(""release""):
        release(arguments[""<IP>""])
    elif arguments.get(""info""):
        info(arguments[""<IP>""])


def release(ip):
    """"""
    Release an IP address

    :param ip: The IP address (as a string).
    """"""
    address = IPAddress(ip)
    if client.release_ips({address}):
        print ""Failed to release address""
    else:
        print ""Address successfully released""


def info(ip):
    """"""
    Print the attributes defined for an IP address

    :param ip: The IP address (as a string).
    """"""
    address = IPAddress(ip)
    try:
        attributes = client.get_assignment_attributes(address)
        if attributes:
            print attributes
        else:
            print ""No attributes defined for %s"" % address
    except AddressNotAssignedError:
        print ""IP %s is not currently assigned"" % address
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', 'Copyright', '2015', 'Metaswitch', 'Networks', '#', '#', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '#', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '#', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '#', '#', 'http://www.apache.org/licenses/LICENSE-2.0', '#', '#', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '#', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '#', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '#', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '#', 'limitations', 'under', 'the', 'License.', '""""""', 'Usage:', 'calicoctl', 'ipam', 'release', '<IP>', 'calicoctl', 'ipam', 'info', '<IP>', 'Description:', 'Manage', 'Calico', 'assigned', 'IP', 'addresses', 'Warnings:', '-', 'Releasing', 'an', 'in-use', 'IP', 'address', 'can', 'result', 'in', 'it', 'being', 'assigned', 'to', 'multiple', 'workloads.', '""""""', 'import', 'sys', 'from', 'netaddr', 'import', 'IPAddress', 'from', 'pycalico.block', 'import', 'AddressNotAssignedError', 'from', 'pycalico.util', 'import', 'validate_ip', 'from', 'connectors', 'import', 'client', 'def', 'validate_arguments(arguments):', '""""""', 'Validate', 'argument', 'values:', '<IP>', ':param', 'arguments:', 'Docopt', 'processed', 'arguments', '""""""', '#', 'Validate', 'IP', 'container_ip_ok', '=', 'arguments.get(""<IP>"")', 'is', 'None', 'or', '\\', 'validate_ip(arguments[""<IP>""],', '4)', 'or', '\\', 'validate_ip(arguments[""<IP>""],', '6)', '#', 'Print', 'error', 'message', 'and', 'exit', 'if', 'not', 'valid', 'argument', 'if', 'not', 'container_ip_ok:', 'print', '""Invalid', 'IP', 'address', 'specified.""', 'sys.exit(1)', 'def', 'ipam(arguments):', '""""""', 'Main', 'dispatcher', 'for', 'ipam', 'commands.', 'Calls', 'the', 'corresponding', 'helper', 'function.', ':param', 'arguments:', 'A', 'dictionary', 'of', 'arguments', 'already', 'processed', 'through', 'this', ""file's"", 'docstring', 'with', 'docopt', ':return:', 'None', '""""""', 'validate_arguments(arguments)', 'if', 'arguments.get(""release""):', 'release(arguments[""<IP>""])', 'elif', 'arguments.get(""info""):', 'info(arguments[""<IP>""])', 'def', 'release(ip):', '""""""', 'Release', 'an', 'IP', 'address', ':param', 'ip:', 'The', 'IP', 'address', '(as', 'a', 'string).', '""""""', 'address', '=', 'IPAddress(ip)', 'if', 'client.release_ips({address}):', 'print', '""Failed', 'to', 'release', 'address""', 'else:', 'print', '""Address', 'successfully', 'released""', 'def', 'info(ip):', '""""""', 'Print', 'the', 'attributes', 'defined', 'for', 'an', 'IP', 'address', ':param', 'ip:', 'The', 'IP', 'address', '(as', 'a', 'string).', '""""""', 'address', '=', 'IPAddress(ip)', 'try:', 'attributes', '=', 'client.get_assignment_attributes(address)', 'if', 'attributes:', 'print', 'attributes', 'else:', 'print', '""No', 'attributes', 'defined', 'for', '%s""', '%', 'address', 'except', 'AddressNotAssignedError:', 'print', '""IP', '%s', 'is', 'not', 'currently', 'assigned""', '%', 'address', '```']",challenge not surrounded by ''': ,
"# zshrc color

export LSCOLORS=Exfxcxdxbxegedabagacad
export LS_COLORS='di=01;34:ln=01;35:so=01;32:ex=01;31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'
export ZLS_COLORS=$LS_COLORS
export CLICOLOR=true

autoload -U colors; colors
autoload -Uz vcs_info

setopt prompt_subst

zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':vcs_info:git:*' check-for-changes true
zstyle ':vcs_info:git:*' stagedstr ""%F{yellow}!""
zstyle ':vcs_info:git:*' unstagedstr ""%F{red}+""
zstyle ':vcs_info:*' formats ""%F{green}%c%u[%b]%f""
zstyle ':vcs_info:*' actionformats '[%b|%a]'
precmd () { vcs_info }

tmp_prompt=""%{${fg[cyan]}%}%n%# %{${reset_color}%}""
tmp_prompt2=""%{${fg[cyan]}%}%_> %{${reset_color}%}""
tmp_rprompt=""%{${fg[green]}%}[%~]%{${reset_color}%}""
tmp_sprompt=""%{${fg[yellow]}%}%r is correct? [Yes, No, Abort, Edit]:%{${reset_color}%}""

PROMPT=$tmp_prompt
PROMPT2=$tmp_prompt2
RPROMPT='${vcs_info_msg_0_}'$tmp_rprompt
SPROMPT=$tmp_sprompt

# root
if [ ${UID} -eq 0 ]; then
  tmp_prompt=""%B%U${tmp_prompt}%u%b""
  tmp_prompt2=""%B%U${tmp_prompt2}%u%b""
  tmp_rprompt=""%B%U${tmp_rprompt}%u%b""
  tmp_sprompt=""%B%U${tmp_sprompt}%u%b""
fi

# SSH
[ -n ""${REMOTEHOST}${SSH_CONNECTION}"" ] && PROMPT=""%{${fg[white]}%}${HOST%%.*} ${PROMPT}""
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', 'zshrc', 'color', 'export', 'LSCOLORS=Exfxcxdxbxegedabagacad', 'export', ""LS_COLORS='di=01;34:ln=01;35:so=01;32:ex=01;31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'"", 'export', 'ZLS_COLORS=$LS_COLORS', 'export', 'CLICOLOR=true', 'autoload', '-U', 'colors;', 'colors', 'autoload', '-Uz', 'vcs_info', 'setopt', 'prompt_subst', 'zstyle', ""':completion:*:default'"", 'list-colors', '${(s.:.)LS_COLORS}', 'zstyle', ""':vcs_info:git:*'"", 'check-for-changes', 'true', 'zstyle', ""':vcs_info:git:*'"", 'stagedstr', '""%F{yellow}!""', 'zstyle', ""':vcs_info:git:*'"", 'unstagedstr', '""%F{red}+""', 'zstyle', ""':vcs_info:*'"", 'formats', '""%F{green}%c%u[%b]%f""', 'zstyle', ""':vcs_info:*'"", 'actionformats', ""'[%b|%a]'"", 'precmd', '()', '{', 'vcs_info', '}', 'tmp_prompt=""%{${fg[cyan]}%}%n%#', '%{${reset_color}%}""', 'tmp_prompt2=""%{${fg[cyan]}%}%_>', '%{${reset_color}%}""', 'tmp_rprompt=""%{${fg[green]}%}[%~]%{${reset_color}%}""', 'tmp_sprompt=""%{${fg[yellow]}%}%r', 'is', 'correct?', '[Yes,', 'No,', 'Abort,', 'Edit]:%{${reset_color}%}""', 'PROMPT=$tmp_prompt', 'PROMPT2=$tmp_prompt2', ""RPROMPT='${vcs_info_msg_0_}'$tmp_rprompt"", 'SPROMPT=$tmp_sprompt', '#', 'root', 'if', '[', '${UID}', '-eq', '0', '];', 'then', 'tmp_prompt=""%B%U${tmp_prompt}%u%b""', 'tmp_prompt2=""%B%U${tmp_prompt2}%u%b""', 'tmp_rprompt=""%B%U${tmp_rprompt}%u%b""', 'tmp_sprompt=""%B%U${tmp_sprompt}%u%b""', 'fi', '#', 'SSH', '[', '-n', '""${REMOTEHOST}${SSH_CONNECTION}""', ']', '&&', 'PROMPT=""%{${fg[white]}%}${HOST%%.*}', '${PROMPT}""', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright 2014-present Open Networking Laboratory
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.onosproject.net.topology;

import com.google.common.testing.EqualsTester;
import org.junit.Test;
import org.onosproject.net.DeviceId;

import static org.junit.Assert.*;
import static org.onosproject.net.DeviceId.deviceId;

/**
 * Tests of the topology graph vertex.
 */
public class DefaultTopologyVertexTest {

    private static final DeviceId D1 = deviceId(""1"");
    private static final DeviceId D2 = deviceId(""2"");

    @Test
    public void basics() {
        DefaultTopologyVertex v = new DefaultTopologyVertex(D1);
        assertEquals(""incorrect device id"", D1, v.deviceId());

        new EqualsTester()
                .addEqualityGroup(new DefaultTopologyVertex(D1),
                                  new DefaultTopologyVertex(D1))
                .addEqualityGroup(new DefaultTopologyVertex(D2),
                                  new DefaultTopologyVertex(D2)).testEquals();
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '2014-present', 'Open', 'Networking', 'Laboratory', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'org.onosproject.net.topology;', 'import', 'com.google.common.testing.EqualsTester;', 'import', 'org.junit.Test;', 'import', 'org.onosproject.net.DeviceId;', 'import', 'static', 'org.junit.Assert.*;', 'import', 'static', 'org.onosproject.net.DeviceId.deviceId;', '/**', '*', 'Tests', 'of', 'the', 'topology', 'graph', 'vertex.', '*/', 'public', 'class', 'DefaultTopologyVertexTest', '{', 'private', 'static', 'final', 'DeviceId', 'D1', '=', 'deviceId(""1"");', 'private', 'static', 'final', 'DeviceId', 'D2', '=', 'deviceId(""2"");', '@Test', 'public', 'void', 'basics()', '{', 'DefaultTopologyVertex', 'v', '=', 'new', 'DefaultTopologyVertex(D1);', 'assertEquals(""incorrect', 'device', 'id"",', 'D1,', 'v.deviceId());', 'new', 'EqualsTester()', '.addEqualityGroup(new', 'DefaultTopologyVertex(D1),', 'new', 'DefaultTopologyVertex(D1))', '.addEqualityGroup(new', 'DefaultTopologyVertex(D2),', 'new', 'DefaultTopologyVertex(D2)).testEquals();', '}', '}', '```']",challenge not surrounded by ''': ,
"var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {""classes"":[{""el"":74,""id"":82163,""methods"":[{""el"":41,""sc"":2,""sl"":35},{""el"":45,""sc"":2,""sl"":43},{""el"":49,""sc"":2,""sl"":47},{""el"":53,""sc"":2,""sl"":51},{""el"":62,""sc"":2,""sl"":55},{""el"":73,""sc"":2,""sl"":64}],""name"":""Transaction"",""sl"":29}]}

// JSON: {test_ID : {""methods"": [ID1, ID2, ID3...], ""name"" : ""testXXX() void""}, ...};
clover.testTargets = {}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```var', 'clover', '=', 'new', 'Object();', '//', 'JSON:', '{classes', ':', '[{name,', 'id,', 'sl,', 'el,', 'methods', ':', '[{sl,', 'el},', '...]},', '...]}', 'clover.pageData', '=', '{""classes"":[{""el"":74,""id"":82163,""methods"":[{""el"":41,""sc"":2,""sl"":35},{""el"":45,""sc"":2,""sl"":43},{""el"":49,""sc"":2,""sl"":47},{""el"":53,""sc"":2,""sl"":51},{""el"":62,""sc"":2,""sl"":55},{""el"":73,""sc"":2,""sl"":64}],""name"":""Transaction"",""sl"":29}]}', '//', 'JSON:', '{test_ID', ':', '{""methods"":', '[ID1,', 'ID2,', 'ID3...],', '""name""', ':', '""testXXX()', 'void""},', '...};', 'clover.testTargets', '=', '{}', '//', 'JSON:', '{', 'lines', ':', '[{tests', ':', '[testid1,', 'testid2,', 'testid3,', '...]},', '...]};', 'clover.srcFileLines```']",challenge not surrounded by ''': ,
"/*
 * ItemTextEdit.h
 *
 * Copyright (C) 2010-2017 Julien Eychenne
 *
 * This file is part of Dolmen.
 *
 * Dolmen is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License (GPL) as
 * published by the Free Software Foundation, either version 2 of the
 * License, or (at your option) any later version.
 *
 * Dolmen is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Dolmen. If not, see <http://www.gnu.org/licenses/>.
 *
 * Author:  Julien Eychenne
 * Purpose: A custom line edit for editing an item's text in a TierView
 * Created: 14/08/2011
 */


#include ""ItemTextEdit.h""

ItemTextEdit::ItemTextEdit(QWidget *parent) :
    QTextEdit(parent)
{
    this->setFocusPolicy(Qt::StrongFocus);
}

QString ItemTextEdit::text() const
{
    return this->toPlainText();
}

void ItemTextEdit::keyPressEvent(QKeyEvent *event)
{
    if (event->key() == Qt::Key_Return || event->key() == Qt::Key_Enter)
    {
        event->ignore();
        emit editingFinished();
    }
    else if (event->key() == Qt::Key_Escape)
    {
        event->ignore();
        emit editingCancelled();
    }
    else
        QTextEdit::keyPressEvent(event);
}

void ItemTextEdit::exit()
{
	this->hide();
	emit editingFinished();
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'ItemTextEdit.h', '*', '*', 'Copyright', '(C)', '2010-2017', 'Julien', 'Eychenne', '*', '*', 'This', 'file', 'is', 'part', 'of', 'Dolmen.', '*', '*', 'Dolmen', 'is', 'free', 'software:', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', '*', 'it', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'General', 'Public', 'License', '(GPL)', 'as', '*', 'published', 'by', 'the', 'Free', 'Software', 'Foundation,', 'either', 'version', '2', 'of', 'the', '*', 'License,', 'or', '(at', 'your', 'option)', 'any', 'later', 'version.', '*', '*', 'Dolmen', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', '*', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', '*', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', '*', 'GNU', 'General', 'Public', 'License', 'for', 'more', 'details.', '*', '*', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'General', 'Public', 'License', '*', 'along', 'with', 'Dolmen.', 'If', 'not,', 'see', '<http://www.gnu.org/licenses/>.', '*', '*', 'Author:', 'Julien', 'Eychenne', '*', 'Purpose:', 'A', 'custom', 'line', 'edit', 'for', 'editing', 'an', ""item's"", 'text', 'in', 'a', 'TierView', '*', 'Created:', '14/08/2011', '*/', '#include', '""ItemTextEdit.h""', 'ItemTextEdit::ItemTextEdit(QWidget', '*parent)', ':', 'QTextEdit(parent)', '{', 'this->setFocusPolicy(Qt::StrongFocus);', '}', 'QString', 'ItemTextEdit::text()', 'const', '{', 'return', 'this->toPlainText();', '}', 'void', 'ItemTextEdit::keyPressEvent(QKeyEvent', '*event)', '{', 'if', '(event->key()', '==', 'Qt::Key_Return', '||', 'event->key()', '==', 'Qt::Key_Enter)', '{', 'event->ignore();', 'emit', 'editingFinished();', '}', 'else', 'if', '(event->key()', '==', 'Qt::Key_Escape)', '{', 'event->ignore();', 'emit', 'editingCancelled();', '}', 'else', 'QTextEdit::keyPressEvent(event);', '}', 'void', 'ItemTextEdit::exit()', '{', 'this->hide();', 'emit', 'editingFinished();', '}', '```']",challenge not surrounded by ''': ,
"package com.ryanheise.persistp;

import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.ElementType;
import java.lang.annotation.Target;

@Retention(RetentionPolicy.RUNTIME)
@Target(ElementType.FIELD)
public @interface Prop {
	public String name() default """";
	public String value() default """";
	public String initial() default """";
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.ryanheise.persistp;', 'import', 'java.lang.annotation.Retention;', 'import', 'java.lang.annotation.RetentionPolicy;', 'import', 'java.lang.annotation.ElementType;', 'import', 'java.lang.annotation.Target;', '@Retention(RetentionPolicy.RUNTIME)', '@Target(ElementType.FIELD)', 'public', '@interface', 'Prop', '{', 'public', 'String', 'name()', 'default', '"""";', 'public', 'String', 'value()', 'default', '"""";', 'public', 'String', 'initial()', 'default', '"""";', '}', '```']",challenge not surrounded by ''': ,
"/*
 * #%L
 * ACS AEM Commons Bundle
 * %%
 * Copyright (C) 2019 Adobe
 * %%
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * #L%
 */

package com.adobe.acs.commons.mcp.impl.processes;

import java.util.Map;
import java.util.stream.Collectors;
import java.util.stream.Stream;

import org.osgi.service.component.annotations.Component;
import org.osgi.service.component.annotations.Reference;

import com.adobe.acs.commons.mcp.AdministratorsOnlyProcessDefinitionFactory;
import com.adobe.acs.commons.mcp.ProcessDefinitionFactory;
import com.adobe.acs.commons.mcp.form.SelectComponent;
import com.adobe.acs.commons.mcp.util.StringUtil;
import com.adobe.acs.commons.workflow.bulk.removal.WorkflowInstanceRemover;

@Component(service = ProcessDefinitionFactory.class)
public class WorkflowRemoverFactory extends AdministratorsOnlyProcessDefinitionFactory<WorkflowRemover> {

    private static final String NAME = ""Workflow Remover"";

    @Reference
    private WorkflowInstanceRemover workflowInstanceRemover;

    @Override
    public String getName() {
        return NAME;
    }

    @Override
    public WorkflowRemover createProcessDefinitionInstance() {
        return new WorkflowRemover(workflowInstanceRemover);
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', '#%L', '*', 'ACS', 'AEM', 'Commons', 'Bundle', '*', '%%', '*', 'Copyright', '(C)', '2019', 'Adobe', '*', '%%', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*', '#L%', '*/', 'package', 'com.adobe.acs.commons.mcp.impl.processes;', 'import', 'java.util.Map;', 'import', 'java.util.stream.Collectors;', 'import', 'java.util.stream.Stream;', 'import', 'org.osgi.service.component.annotations.Component;', 'import', 'org.osgi.service.component.annotations.Reference;', 'import', 'com.adobe.acs.commons.mcp.AdministratorsOnlyProcessDefinitionFactory;', 'import', 'com.adobe.acs.commons.mcp.ProcessDefinitionFactory;', 'import', 'com.adobe.acs.commons.mcp.form.SelectComponent;', 'import', 'com.adobe.acs.commons.mcp.util.StringUtil;', 'import', 'com.adobe.acs.commons.workflow.bulk.removal.WorkflowInstanceRemover;', '@Component(service', '=', 'ProcessDefinitionFactory.class)', 'public', 'class', 'WorkflowRemoverFactory', 'extends', 'AdministratorsOnlyProcessDefinitionFactory<WorkflowRemover>', '{', 'private', 'static', 'final', 'String', 'NAME', '=', '""Workflow', 'Remover"";', '@Reference', 'private', 'WorkflowInstanceRemover', 'workflowInstanceRemover;', '@Override', 'public', 'String', 'getName()', '{', 'return', 'NAME;', '}', '@Override', 'public', 'WorkflowRemover', 'createProcessDefinitionInstance()', '{', 'return', 'new', 'WorkflowRemover(workflowInstanceRemover);', '}', '}', '```']",challenge not surrounded by ''': ,
"/// Copyright (c) 2012 Ecma International.  All rights reserved. 
/**
 * @path ch15/15.2/15.2.3/15.2.3.6/15.2.3.6-4-323-1.js
 * @description Object.defineProperty - ''O' is an Arguments object of a function that has formal parameters, 'P' is own accessor property of 'O', test TypeError is thrown when updating the [[Enumerable]] attribute value of 'P' which is not configurable (10.6 [[DefineOwnProperty]] step 4)
 */


function testcase() {
        return (function (a, b, c) {
            function setFunc(value) {
                this.genericPropertyString = value;
            }
            Object.defineProperty(arguments, ""genericProperty"", {
                set: setFunc,
                enumerable: true,
                configurable: false
            });
            try {
                Object.defineProperty(arguments, ""genericProperty"", {
                    enumerable: false
                });
            } catch (e) {
                verifyFormal = c === 3;
                return e instanceof TypeError &&
                    accessorPropertyAttributesAreCorrect(arguments, ""genericProperty"", undefined, setFunc, ""genericPropertyString"", true, false) && verifyFormal;
            }
            return false;
        }(1, 2, 3));
    }
runTestCase(testcase);
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```///', 'Copyright', '(c)', '2012', 'Ecma', 'International.', 'All', 'rights', 'reserved.', '/**', '*', '@path', 'ch15/15.2/15.2.3/15.2.3.6/15.2.3.6-4-323-1.js', '*', '@description', 'Object.defineProperty', '-', ""''O'"", 'is', 'an', 'Arguments', 'object', 'of', 'a', 'function', 'that', 'has', 'formal', 'parameters,', ""'P'"", 'is', 'own', 'accessor', 'property', 'of', ""'O',"", 'test', 'TypeError', 'is', 'thrown', 'when', 'updating', 'the', '[[Enumerable]]', 'attribute', 'value', 'of', ""'P'"", 'which', 'is', 'not', 'configurable', '(10.6', '[[DefineOwnProperty]]', 'step', '4)', '*/', 'function', 'testcase()', '{', 'return', '(function', '(a,', 'b,', 'c)', '{', 'function', 'setFunc(value)', '{', 'this.genericPropertyString', '=', 'value;', '}', 'Object.defineProperty(arguments,', '""genericProperty"",', '{', 'set:', 'setFunc,', 'enumerable:', 'true,', 'configurable:', 'false', '});', 'try', '{', 'Object.defineProperty(arguments,', '""genericProperty"",', '{', 'enumerable:', 'false', '});', '}', 'catch', '(e)', '{', 'verifyFormal', '=', 'c', '===', '3;', 'return', 'e', 'instanceof', 'TypeError', '&&', 'accessorPropertyAttributesAreCorrect(arguments,', '""genericProperty"",', 'undefined,', 'setFunc,', '""genericPropertyString"",', 'true,', 'false)', '&&', 'verifyFormal;', '}', 'return', 'false;', '}(1,', '2,', '3));', '}', 'runTestCase(testcase);', '```']",challenge not surrounded by ''': ,
"'use strict';

Object.defineProperty(exports, ""__esModule"", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactIconBase = require('react-icon-base');

var _reactIconBase2 = _interopRequireDefault(_reactIconBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var TiGlobe = function TiGlobe(props) {
    return _react2.default.createElement(
        _reactIconBase2.default,
        _extends({ viewBox: '0 0 40 40' }, props),
        _react2.default.createElement(
            'g',
            null,
            _react2.default.createElement('path', { d: 'm18.3 33.3h-6.6c-1 0-1.7 0.8-1.7 1.7s0.7 1.7 1.7 1.7h16.6c1 0 1.7-0.8 1.7-1.7s-0.7-1.7-1.7-1.7h-6.6v-2c2.7-0.6 5.2-2 7.2-4 2.9-2.9 4.4-6.6 4.4-10.6 0-3.5-1.1-6.7-3.2-9.4l1.1-1.1c0.6-0.7 0.6-1.7 0-2.4-0.7-0.6-1.7-0.6-2.4 0l-3.4 3.4 1.2 1.2c2.2 2.2 3.4 5.2 3.4 8.3s-1.2 6-3.4 8.2-5.1 3.4-8.3 3.4-6-1.2-8.2-3.4c-0.7-0.6-1.7-0.6-2.4 0-0.6 0.7-0.6 1.7 0 2.4 2.9 2.8 6.6 4.4 10.6 4.4v1.6z m0-26.6c2.8 0 5.3 1.1 7.1 2.9 1.8 1.8 2.9 4.3 2.9 7.1 0 2.7-1.1 5.2-2.9 7-1.8 1.8-4.3 3-7.1 3-2.7 0-5.2-1.2-7-3-1.8-1.8-3-4.3-3-7s1.2-5.3 3-7.1c1.8-1.8 4.3-2.9 7-2.9z' })
        )
    );
};

exports.default = TiGlobe;
module.exports = exports['default'];","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', ""```'use"", ""strict';"", 'Object.defineProperty(exports,', '""__esModule"",', '{', 'value:', 'true', '});', 'var', '_extends', '=', 'Object.assign', '||', 'function', '(target)', '{', 'for', '(var', 'i', '=', '1;', 'i', '<', 'arguments.length;', 'i++)', '{', 'var', 'source', '=', 'arguments[i];', 'for', '(var', 'key', 'in', 'source)', '{', 'if', '(Object.prototype.hasOwnProperty.call(source,', 'key))', '{', 'target[key]', '=', 'source[key];', '}', '}', '}', 'return', 'target;', '};', 'var', '_react', '=', ""require('react');"", 'var', '_react2', '=', '_interopRequireDefault(_react);', 'var', '_reactIconBase', '=', ""require('react-icon-base');"", 'var', '_reactIconBase2', '=', '_interopRequireDefault(_reactIconBase);', 'function', '_interopRequireDefault(obj)', '{', 'return', 'obj', '&&', 'obj.__esModule', '?', 'obj', ':', '{', 'default:', 'obj', '};', '}', 'var', 'TiGlobe', '=', 'function', 'TiGlobe(props)', '{', 'return', '_react2.default.createElement(', '_reactIconBase2.default,', '_extends({', 'viewBox:', ""'0"", '0', '40', ""40'"", '},', 'props),', '_react2.default.createElement(', ""'g',"", 'null,', ""_react2.default.createElement('path',"", '{', 'd:', ""'m18.3"", '33.3h-6.6c-1', '0-1.7', '0.8-1.7', '1.7s0.7', '1.7', '1.7', '1.7h16.6c1', '0', '1.7-0.8', '1.7-1.7s-0.7-1.7-1.7-1.7h-6.6v-2c2.7-0.6', '5.2-2', '7.2-4', '2.9-2.9', '4.4-6.6', '4.4-10.6', '0-3.5-1.1-6.7-3.2-9.4l1.1-1.1c0.6-0.7', '0.6-1.7', '0-2.4-0.7-0.6-1.7-0.6-2.4', '0l-3.4', '3.4', '1.2', '1.2c2.2', '2.2', '3.4', '5.2', '3.4', '8.3s-1.2', '6-3.4', '8.2-5.1', '3.4-8.3', '3.4-6-1.2-8.2-3.4c-0.7-0.6-1.7-0.6-2.4', '0-0.6', '0.7-0.6', '1.7', '0', '2.4', '2.9', '2.8', '6.6', '4.4', '10.6', '4.4v1.6z', 'm0-26.6c2.8', '0', '5.3', '1.1', '7.1', '2.9', '1.8', '1.8', '2.9', '4.3', '2.9', '7.1', '0', '2.7-1.1', '5.2-2.9', '7-1.8', '1.8-4.3', '3-7.1', '3-2.7', '0-5.2-1.2-7-3-1.8-1.8-3-4.3-3-7s1.2-5.3', '3-7.1c1.8-1.8', '4.3-2.9', ""7-2.9z'"", '})', ')', ');', '};', 'exports.default', '=', 'TiGlobe;', 'module.exports', '=', ""exports['default'];```""]",challenge not surrounded by ''': ,
"package org.succlz123.s1go.ui.base;

import com.squareup.leakcanary.RefWatcher;

import org.succlz123.s1go.MainApplication;

import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;

import rx.subscriptions.CompositeSubscription;

/**
 * Created by succlz123 on 2015/7/8.
 */
public abstract class BaseActivity extends AppCompatActivity {

    public CompositeSubscription compositeSubscription;

    private boolean mFragmentStateSaved;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        compositeSubscription = new CompositeSubscription();
    }

    @Override
    protected void onStart() {
        super.onStart();
        mFragmentStateSaved = false;
    }

    @Override
    protected void onStop() {
        super.onStop();
        mFragmentStateSaved = true;
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        if (compositeSubscription != null) {
            compositeSubscription.unsubscribe();
            compositeSubscription = null;
        }
        RefWatcher refWatcher = MainApplication.getInstance().refWatcher;
        refWatcher.watch(this);
    }

    public boolean isFragmentStateSaved() {
        return mFragmentStateSaved;
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'org.succlz123.s1go.ui.base;', 'import', 'com.squareup.leakcanary.RefWatcher;', 'import', 'org.succlz123.s1go.MainApplication;', 'import', 'android.os.Bundle;', 'import', 'android.support.v7.app.AppCompatActivity;', 'import', 'rx.subscriptions.CompositeSubscription;', '/**', '*', 'Created', 'by', 'succlz123', 'on', '2015/7/8.', '*/', 'public', 'abstract', 'class', 'BaseActivity', 'extends', 'AppCompatActivity', '{', 'public', 'CompositeSubscription', 'compositeSubscription;', 'private', 'boolean', 'mFragmentStateSaved;', '@Override', 'protected', 'void', 'onCreate(Bundle', 'savedInstanceState)', '{', 'super.onCreate(savedInstanceState);', 'compositeSubscription', '=', 'new', 'CompositeSubscription();', '}', '@Override', 'protected', 'void', 'onStart()', '{', 'super.onStart();', 'mFragmentStateSaved', '=', 'false;', '}', '@Override', 'protected', 'void', 'onStop()', '{', 'super.onStop();', 'mFragmentStateSaved', '=', 'true;', '}', '@Override', 'protected', 'void', 'onDestroy()', '{', 'super.onDestroy();', 'if', '(compositeSubscription', '!=', 'null)', '{', 'compositeSubscription.unsubscribe();', 'compositeSubscription', '=', 'null;', '}', 'RefWatcher', 'refWatcher', '=', 'MainApplication.getInstance().refWatcher;', 'refWatcher.watch(this);', '}', 'public', 'boolean', 'isFragmentStateSaved()', '{', 'return', 'mFragmentStateSaved;', '}', '}', '```']",challenge not surrounded by ''': ,
"package osh.esc.grid;

import java.util.Map;
import java.util.Set;
import java.util.UUID;

import it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap;
import it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap;
import osh.datatypes.commodity.AncillaryMeterState;
import osh.datatypes.commodity.Commodity;
import osh.esc.LimitedCommodityStateMap;
import osh.esc.UUIDCommodityMap;

/**
 * 
 * @author Ingo Mauser, Sebastian Kramer
 *
 */
public interface EnergyGrid {
	
	// optimization, speeds up grid calculation by considering only relations
	// for every future calculation for the given UUIDs
	/**
	 * Initialize grid by loading all relations into lists
	 */
	public void initializeGrid(Set<UUID> allActiveNodes, Set<UUID> activeNeedsInputNodes, 
			Set<UUID> passiveNodes, Object2IntOpenHashMap<UUID> uuidToIntMap, Object2ObjectOpenHashMap<UUID, Commodity[]> uuidOutputMap);
	
	/**
	 * Finalize grid by unloading all relations
	 */
	public void finalizeGrid();
	
	/**
	 * Simulation: <br>
	 * Do grid calculation and update states
	 */
	public void doCalculation(
			Map<UUID, LimitedCommodityStateMap> commodityStates,
			Map<UUID, LimitedCommodityStateMap> totalInputStates,
//			UUIDEnumMap totalInputStates,
//			EnumMap<AncillaryCommodity, AncillaryCommodityState> totalAncillaryInputStates);
			AncillaryMeterState ancillaryMeterState);
	
	/**
	 * O/C-Simulation: <br>
	 * Do active to passive part update
	 */
	public void doActiveToPassiveCalculation(
			Set<UUID> passiveNodes,
//			Map<UUID, EnumMap<Commodity, RealCommodityState>> activeStates,
			UUIDCommodityMap activeStates,
			UUIDCommodityMap totalInputStates,
//			EnumMap<AncillaryCommodity, AncillaryCommodityState> totalAncillaryInputStates);
			AncillaryMeterState ancillaryMeterState);
	
	/**
	 * O/C-Simulation: <br>
	 * Do passive to active part update
	 */
	public void doPassiveToActiveCalculation(
			Set<UUID> activeNodes,
//			Map<UUID, EnumMap<Commodity, RealCommodityState>> passiveStates,
			UUIDCommodityMap passiveStates,
			UUIDCommodityMap totalInputStates);
	
	/**
	 * Get virtual meters
	 * @return Virtual meters
	 */
	public Set<UUID> getMeterUUIDs();
	
	/**
	 * Get UUIDs of active IPPs
	 * @return UUIDs of active IPPs
	 */
	public Set<UUID> getActiveUUIDs();
	
	/**
	 * Get UUIDs of passive IPPs
	 * @return UUIDs of passive IPPs
	 */
	public Set<UUID> getPassiveUUIDs();

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'osh.esc.grid;', 'import', 'java.util.Map;', 'import', 'java.util.Set;', 'import', 'java.util.UUID;', 'import', 'it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap;', 'import', 'it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap;', 'import', 'osh.datatypes.commodity.AncillaryMeterState;', 'import', 'osh.datatypes.commodity.Commodity;', 'import', 'osh.esc.LimitedCommodityStateMap;', 'import', 'osh.esc.UUIDCommodityMap;', '/**', '*', '*', '@author', 'Ingo', 'Mauser,', 'Sebastian', 'Kramer', '*', '*/', 'public', 'interface', 'EnergyGrid', '{', '//', 'optimization,', 'speeds', 'up', 'grid', 'calculation', 'by', 'considering', 'only', 'relations', '//', 'for', 'every', 'future', 'calculation', 'for', 'the', 'given', 'UUIDs', '/**', '*', 'Initialize', 'grid', 'by', 'loading', 'all', 'relations', 'into', 'lists', '*/', 'public', 'void', 'initializeGrid(Set<UUID>', 'allActiveNodes,', 'Set<UUID>', 'activeNeedsInputNodes,', 'Set<UUID>', 'passiveNodes,', 'Object2IntOpenHashMap<UUID>', 'uuidToIntMap,', 'Object2ObjectOpenHashMap<UUID,', 'Commodity[]>', 'uuidOutputMap);', '/**', '*', 'Finalize', 'grid', 'by', 'unloading', 'all', 'relations', '*/', 'public', 'void', 'finalizeGrid();', '/**', '*', 'Simulation:', '<br>', '*', 'Do', 'grid', 'calculation', 'and', 'update', 'states', '*/', 'public', 'void', 'doCalculation(', 'Map<UUID,', 'LimitedCommodityStateMap>', 'commodityStates,', 'Map<UUID,', 'LimitedCommodityStateMap>', 'totalInputStates,', '//', 'UUIDEnumMap', 'totalInputStates,', '//', 'EnumMap<AncillaryCommodity,', 'AncillaryCommodityState>', 'totalAncillaryInputStates);', 'AncillaryMeterState', 'ancillaryMeterState);', '/**', '*', 'O/C-Simulation:', '<br>', '*', 'Do', 'active', 'to', 'passive', 'part', 'update', '*/', 'public', 'void', 'doActiveToPassiveCalculation(', 'Set<UUID>', 'passiveNodes,', '//', 'Map<UUID,', 'EnumMap<Commodity,', 'RealCommodityState>>', 'activeStates,', 'UUIDCommodityMap', 'activeStates,', 'UUIDCommodityMap', 'totalInputStates,', '//', 'EnumMap<AncillaryCommodity,', 'AncillaryCommodityState>', 'totalAncillaryInputStates);', 'AncillaryMeterState', 'ancillaryMeterState);', '/**', '*', 'O/C-Simulation:', '<br>', '*', 'Do', 'passive', 'to', 'active', 'part', 'update', '*/', 'public', 'void', 'doPassiveToActiveCalculation(', 'Set<UUID>', 'activeNodes,', '//', 'Map<UUID,', 'EnumMap<Commodity,', 'RealCommodityState>>', 'passiveStates,', 'UUIDCommodityMap', 'passiveStates,', 'UUIDCommodityMap', 'totalInputStates);', '/**', '*', 'Get', 'virtual', 'meters', '*', '@return', 'Virtual', 'meters', '*/', 'public', 'Set<UUID>', 'getMeterUUIDs();', '/**', '*', 'Get', 'UUIDs', 'of', 'active', 'IPPs', '*', '@return', 'UUIDs', 'of', 'active', 'IPPs', '*/', 'public', 'Set<UUID>', 'getActiveUUIDs();', '/**', '*', 'Get', 'UUIDs', 'of', 'passive', 'IPPs', '*', '@return', 'UUIDs', 'of', 'passive', 'IPPs', '*/', 'public', 'Set<UUID>', 'getPassiveUUIDs();', '}', '```']",challenge not surrounded by ''': ,
"// -*- mode: C++; c-indent-level: 4; c-basic-offset: 4; indent-tabs-mode: nil; -*-
/**
 * @title Using Rcpp to access the C API of xts 
 * @author Dirk Eddelbuettel
 * @license GPL (>= 2)
 * @tags featured xts
 * @summary This post shows how to use the exported API functions of xts
 *
 * The [xts](https://r-forge.r-project.org/projects/xts/) package by Jeff Ryan and Josh Ulrich is an immensely powerful
 * tool that is widely used for timeseries work with R.  Recently, the question about how to
 * use it from Rcpp came up [on StackOverflow](http://stackoverflow.com/questions/14274055/how-to-use-c-api-of-xts-package-in-rcpp)
 * and in [a thread on the rcpp-devel list](http://thread.gmane.org/gmane.comp.lang.r.rcpp/4697).
 *
 * In fact, xts has had an exposed API since 2008, but it wasn't used
 * and as I found out also not quite for two key functions. Jeff kindly gave me SVN access, 
 * and I updated `init.c` (to export) and a new `xtsAPI.h` header (access these).
 *
 * This short post will show how to access this functionality using the new 
 * [RcppXts](http://cran.r-project.org/web/packages/RcppXts/index.html) package.
 *
 * We start by repeating the (updated) `createXts()` function from the
 * [previous post on xts and Rcpp](../creating-xts-from-c++). This
 * helper function (or an improved version of it) should probably go into RcppXts.
 */

#include <Rcpp.h>

using namespace Rcpp;

// [[Rcpp::export]]
Rcpp::NumericVector createXts(int sv, int ev) {

    IntegerVector ind = seq(sv, ev);     // values

    NumericVector dv(ind);               // date(time)s are real values
    dv = dv * 86400;                     // scaled to days
    dv.attr(""tzone"")    = ""UTC"";         // the index has attributes
    dv.attr(""tclass"")   = ""Date"";

    NumericVector xv(ind);               // data her same index
    xv.attr(""dim"")         = IntegerVector::create(ev-sv+1,1);
    xv.attr(""index"")       = dv;
    CharacterVector klass  = CharacterVector::create(""xts"", ""zoo"");
    xv.attr(""class"")       = klass;
    xv.attr("".indexCLASS"") = ""Date"";
    xv.attr(""tclass"")      = ""Date"";
    xv.attr("".indexTZ"")    = ""UTC"";
    xv.attr(""tzone"")       = ""UTC"";
    
    return xv;

}

/*** R
createXts(2,5)
*/

/**
 * Next, we show how to use this. Rcpp attributes will find the xts
 * header file if use a `depends()` attribute, and as the functions we
 * access are registered with the surrounding R process, no linking is
 * needed.
 */

#include <Rcpp.h>

// next two lines connect us to the xts API
#include <xtsAPI.h>
// [[Rcpp::depends(xts)]]

using namespace Rcpp;

// [[Rcpp::export]]
Rcpp::NumericVector rbindXts(NumericMatrix ma, NumericMatrix mb, bool dup=true) {
  NumericMatrix mc = xtsRbind(ma, mb, wrap(dup));
  return mc;
}

/**
 * Thanks to this new (tree-line !!) function, we can combine `xts` object at the source level. 
 */

/*** R
x1 <- createXts(2,5)
x2 <- createXts(4,9)
rbindXts(x1, x2)
rbindXts(x1, x2, FALSE)
*/

/**
 * Notice the difference between the results driven by the third
 * argument about removal of duplicates which has a default value of `TRUE`.
 *
 * While this example was obviously very simple, we can see the power and promise of this. 
 * It derives from being able to work on large numbers of `xts` objects directly at the C++ 
 * level without having to call back to R. So even though 
 * [xts](https://r-forge.r-project.org/projects/xts/) is about as efficient as it gets, we 
 * should be able to make nice gains (for simple enough tasks) by doing them at the C++ level.
 */
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//', '-*-', 'mode:', 'C++;', 'c-indent-level:', '4;', 'c-basic-offset:', '4;', 'indent-tabs-mode:', 'nil;', '-*-', '/**', '*', '@title', 'Using', 'Rcpp', 'to', 'access', 'the', 'C', 'API', 'of', 'xts', '*', '@author', 'Dirk', 'Eddelbuettel', '*', '@license', 'GPL', '(>=', '2)', '*', '@tags', 'featured', 'xts', '*', '@summary', 'This', 'post', 'shows', 'how', 'to', 'use', 'the', 'exported', 'API', 'functions', 'of', 'xts', '*', '*', 'The', '[xts](https://r-forge.r-project.org/projects/xts/)', 'package', 'by', 'Jeff', 'Ryan', 'and', 'Josh', 'Ulrich', 'is', 'an', 'immensely', 'powerful', '*', 'tool', 'that', 'is', 'widely', 'used', 'for', 'timeseries', 'work', 'with', 'R.', 'Recently,', 'the', 'question', 'about', 'how', 'to', '*', 'use', 'it', 'from', 'Rcpp', 'came', 'up', '[on', 'StackOverflow](http://stackoverflow.com/questions/14274055/how-to-use-c-api-of-xts-package-in-rcpp)', '*', 'and', 'in', '[a', 'thread', 'on', 'the', 'rcpp-devel', 'list](http://thread.gmane.org/gmane.comp.lang.r.rcpp/4697).', '*', '*', 'In', 'fact,', 'xts', 'has', 'had', 'an', 'exposed', 'API', 'since', '2008,', 'but', 'it', ""wasn't"", 'used', '*', 'and', 'as', 'I', 'found', 'out', 'also', 'not', 'quite', 'for', 'two', 'key', 'functions.', 'Jeff', 'kindly', 'gave', 'me', 'SVN', 'access,', '*', 'and', 'I', 'updated', '`init.c`', '(to', 'export)', 'and', 'a', 'new', '`xtsAPI.h`', 'header', '(access', 'these).', '*', '*', 'This', 'short', 'post', 'will', 'show', 'how', 'to', 'access', 'this', 'functionality', 'using', 'the', 'new', '*', '[RcppXts](http://cran.r-project.org/web/packages/RcppXts/index.html)', 'package.', '*', '*', 'We', 'start', 'by', 'repeating', 'the', '(updated)', '`createXts()`', 'function', 'from', 'the', '*', '[previous', 'post', 'on', 'xts', 'and', 'Rcpp](../creating-xts-from-c++).', 'This', '*', 'helper', 'function', '(or', 'an', 'improved', 'version', 'of', 'it)', 'should', 'probably', 'go', 'into', 'RcppXts.', '*/', '#include', '<Rcpp.h>', 'using', 'namespace', 'Rcpp;', '//', '[[Rcpp::export]]', 'Rcpp::NumericVector', 'createXts(int', 'sv,', 'int', 'ev)', '{', 'IntegerVector', 'ind', '=', 'seq(sv,', 'ev);', '//', 'values', 'NumericVector', 'dv(ind);', '//', 'date(time)s', 'are', 'real', 'values', 'dv', '=', 'dv', '*', '86400;', '//', 'scaled', 'to', 'days', 'dv.attr(""tzone"")', '=', '""UTC"";', '//', 'the', 'index', 'has', 'attributes', 'dv.attr(""tclass"")', '=', '""Date"";', 'NumericVector', 'xv(ind);', '//', 'data', 'her', 'same', 'index', 'xv.attr(""dim"")', '=', 'IntegerVector::create(ev-sv+1,1);', 'xv.attr(""index"")', '=', 'dv;', 'CharacterVector', 'klass', '=', 'CharacterVector::create(""xts"",', '""zoo"");', 'xv.attr(""class"")', '=', 'klass;', 'xv.attr("".indexCLASS"")', '=', '""Date"";', 'xv.attr(""tclass"")', '=', '""Date"";', 'xv.attr("".indexTZ"")', '=', '""UTC"";', 'xv.attr(""tzone"")', '=', '""UTC"";', 'return', 'xv;', '}', '/***', 'R', 'createXts(2,5)', '*/', '/**', '*', 'Next,', 'we', 'show', 'how', 'to', 'use', 'this.', 'Rcpp', 'attributes', 'will', 'find', 'the', 'xts', '*', 'header', 'file', 'if', 'use', 'a', '`depends()`', 'attribute,', 'and', 'as', 'the', 'functions', 'we', '*', 'access', 'are', 'registered', 'with', 'the', 'surrounding', 'R', 'process,', 'no', 'linking', 'is', '*', 'needed.', '*/', '#include', '<Rcpp.h>', '//', 'next', 'two', 'lines', 'connect', 'us', 'to', 'the', 'xts', 'API', '#include', '<xtsAPI.h>', '//', '[[Rcpp::depends(xts)]]', 'using', 'namespace', 'Rcpp;', '//', '[[Rcpp::export]]', 'Rcpp::NumericVector', 'rbindXts(NumericMatrix', 'ma,', 'NumericMatrix', 'mb,', 'bool', 'dup=true)', '{', 'NumericMatrix', 'mc', '=', 'xtsRbind(ma,', 'mb,', 'wrap(dup));', 'return', 'mc;', '}', '/**', '*', 'Thanks', 'to', 'this', 'new', '(tree-line', '!!)', 'function,', 'we', 'can', 'combine', '`xts`', 'object', 'at', 'the', 'source', 'level.', '*/', '/***', 'R', 'x1', '<-', 'createXts(2,5)', 'x2', '<-', 'createXts(4,9)', 'rbindXts(x1,', 'x2)', 'rbindXts(x1,', 'x2,', 'FALSE)', '*/', '/**', '*', 'Notice', 'the', 'difference', 'between', 'the', 'results', 'driven', 'by', 'the', 'third', '*', 'argument', 'about', 'removal', 'of', 'duplicates', 'which', 'has', 'a', 'default', 'value', 'of', '`TRUE`.', '*', '*', 'While', 'this', 'example', 'was', 'obviously', 'very', 'simple,', 'we', 'can', 'see', 'the', 'power', 'and', 'promise', 'of', 'this.', '*', 'It', 'derives', 'from', 'being', 'able', 'to', 'work', 'on', 'large', 'numbers', 'of', '`xts`', 'objects', 'directly', 'at', 'the', 'C++', '*', 'level', 'without', 'having', 'to', 'call', 'back', 'to', 'R.', 'So', 'even', 'though', '*', '[xts](https://r-forge.r-project.org/projects/xts/)', 'is', 'about', 'as', 'efficient', 'as', 'it', 'gets,', 'we', '*', 'should', 'be', 'able', 'to', 'make', 'nice', 'gains', '(for', 'simple', 'enough', 'tasks)', 'by', 'doing', 'them', 'at', 'the', 'C++', 'level.', '*/', '```']",challenge not surrounded by ''': ,
"<form action=""/linkrequest/new"" method=""post"">
	<table class=""info"">
		<tr>
			<th>FTN-адрес</th>
			<td><input type=""text"" size=""16"" name=""addr"" /></td>
		</tr>
		<tr>
			<th>Хост:Порт</th>
			<td><input type=""text"" size=""10"" name=""host"" />:<input
				type=""text"" size=""5"" name=""port"" /></td>
		</tr>
	</table>
	<input type=""submit"" name=""_s"" value=""Отправить"" class=""button"" />
</form>","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<form', 'action=""/linkrequest/new""', 'method=""post"">', '<table', 'class=""info"">', '<tr>', '<th>FTN-адрес</th>', '<td><input', 'type=""text""', 'size=""16""', 'name=""addr""', '/></td>', '</tr>', '<tr>', '<th>Хост:Порт</th>', '<td><input', 'type=""text""', 'size=""10""', 'name=""host""', '/>:<input', 'type=""text""', 'size=""5""', 'name=""port""', '/></td>', '</tr>', '</table>', '<input', 'type=""submit""', 'name=""_s""', 'value=""Отправить""', 'class=""button""', '/>', '</form>```']",challenge not surrounded by ''': ,
"$(window).resize(function(){
	deviceDimensions;	
	verticalAlignMenu;
	setContentHeight;
});

var verticalAlignMenu =	(function(element){
							deviceHeight = $(window).height();
							elementHeight = $('.menu-list').height();
							marginTop = (deviceHeight - elementHeight) / 2;
							$('.menu-list').css('margin-top', marginTop);
						}())

var setContentHeight = 	(function(){
							deviceHeight = $(window).height();
							headerHeight = 	$('.window-header').height();
							$('.window-content').height(deviceHeight - headerHeight);
						}())

var deviceDimensions = 	(function(){
							deviceHeight = $(window).height();
							deviceWidth = $(window).width();
						}())","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```$(window).resize(function(){', 'deviceDimensions;', 'verticalAlignMenu;', 'setContentHeight;', '});', 'var', 'verticalAlignMenu', '=', '(function(element){', 'deviceHeight', '=', '$(window).height();', 'elementHeight', '=', ""$('.menu-list').height();"", 'marginTop', '=', '(deviceHeight', '-', 'elementHeight)', '/', '2;', ""$('.menu-list').css('margin-top',"", 'marginTop);', '}())', 'var', 'setContentHeight', '=', '(function(){', 'deviceHeight', '=', '$(window).height();', 'headerHeight', '=', ""$('.window-header').height();"", ""$('.window-content').height(deviceHeight"", '-', 'headerHeight);', '}())', 'var', 'deviceDimensions', '=', '(function(){', 'deviceHeight', '=', '$(window).height();', 'deviceWidth', '=', '$(window).width();', '}())```']",challenge not surrounded by ''': ,
"const Tom = require('test-runner').Tom
const MockResponse = require('./')
const Lws = require('lws')
const fetch = require('node-fetch')
const a = require('assert').strict

const tom = module.exports = new Tom('mock')

tom.test('simple', async function () {
  const port = 8000 + this.index
  class Mock {
    mocks () {
      return [
        {
          route: '/one',
          responses: [
            { response: { body: 'one' } }
          ]
        }
      ]
    }
  }
  const lws = Lws.create({
    port,
    stack: MockResponse,
    mocks: Mock
  })
  const response = await fetch(`http://localhost:${port}/one`)
  lws.server.close()
  a.equal(response.status, 200)
  const body = await response.text()
  a.equal(body, 'one')
})
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```const', 'Tom', '=', ""require('test-runner').Tom"", 'const', 'MockResponse', '=', ""require('./')"", 'const', 'Lws', '=', ""require('lws')"", 'const', 'fetch', '=', ""require('node-fetch')"", 'const', 'a', '=', ""require('assert').strict"", 'const', 'tom', '=', 'module.exports', '=', 'new', ""Tom('mock')"", ""tom.test('simple',"", 'async', 'function', '()', '{', 'const', 'port', '=', '8000', '+', 'this.index', 'class', 'Mock', '{', 'mocks', '()', '{', 'return', '[', '{', 'route:', ""'/one',"", 'responses:', '[', '{', 'response:', '{', 'body:', ""'one'"", '}', '}', ']', '}', ']', '}', '}', 'const', 'lws', '=', 'Lws.create({', 'port,', 'stack:', 'MockResponse,', 'mocks:', 'Mock', '})', 'const', 'response', '=', 'await', 'fetch(`http://localhost:${port}/one`)', 'lws.server.close()', 'a.equal(response.status,', '200)', 'const', 'body', '=', 'await', 'response.text()', 'a.equal(body,', ""'one')"", '})', '```']",challenge not surrounded by ''': ,
"var express = require('express');
var app = express();
var config = require( __dirname + ""/config"");
app.set('config', config ); 



var db = require( __dirname + '/lib/dblayer.js');
var User = require( __dirname + '/lib/user.js');

var user = new User(
                    { 
                        first_name: ""Admin"",
                        last_name: ""Admin"",
                        email: ""piotr@mobile.com"",
                        password: '123456',
                        type:  ""super"",
                        state: ""active"",
                        version: 1,
                        fk_company: null
                    } );

function saveUser() {
    db.userSave( user, function(error) {
            if(error)
                console.log(""No luck saving user"");
            else
                console.log(""Saved"");
            db.disconnect();
        });
    
}


function lookupUser() {
    console.log(""looking up user by email: "" + user.email);
    db.userFindByEmail( user.email, function(err, found) {
            if(err) {
                console.log(""error finding user"");
            } 
            else {
                if( found )
                    found.set('email', 'hest');
                console.log(""Found user:"" + JSON.stringify( found));
            }
            db.disconnect();
        });

}

function authTest() {
    console.log(""Trying to authenticate"");
    db.userAuthenticate( user.email, user.password, function(err, user) {
            if(err)
                console.log(""auth error "" + err );
            else
                console.log(""user authenticated"");
            db.disconnect();
        });
}

db.connect(app, function( err ) {
        if(err)
            return;
        //saveUser();
        authTest();
    });
           
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```var', 'express', '=', ""require('express');"", 'var', 'app', '=', 'express();', 'var', 'config', '=', 'require(', '__dirname', '+', '""/config"");', ""app.set('config',"", 'config', ');', 'var', 'db', '=', 'require(', '__dirname', '+', ""'/lib/dblayer.js');"", 'var', 'User', '=', 'require(', '__dirname', '+', ""'/lib/user.js');"", 'var', 'user', '=', 'new', 'User(', '{', 'first_name:', '""Admin"",', 'last_name:', '""Admin"",', 'email:', '""piotr@mobile.com"",', 'password:', ""'123456',"", 'type:', '""super"",', 'state:', '""active"",', 'version:', '1,', 'fk_company:', 'null', '}', ');', 'function', 'saveUser()', '{', 'db.userSave(', 'user,', 'function(error)', '{', 'if(error)', 'console.log(""No', 'luck', 'saving', 'user"");', 'else', 'console.log(""Saved"");', 'db.disconnect();', '});', '}', 'function', 'lookupUser()', '{', 'console.log(""looking', 'up', 'user', 'by', 'email:', '""', '+', 'user.email);', 'db.userFindByEmail(', 'user.email,', 'function(err,', 'found)', '{', 'if(err)', '{', 'console.log(""error', 'finding', 'user"");', '}', 'else', '{', 'if(', 'found', ')', ""found.set('email',"", ""'hest');"", 'console.log(""Found', 'user:""', '+', 'JSON.stringify(', 'found));', '}', 'db.disconnect();', '});', '}', 'function', 'authTest()', '{', 'console.log(""Trying', 'to', 'authenticate"");', 'db.userAuthenticate(', 'user.email,', 'user.password,', 'function(err,', 'user)', '{', 'if(err)', 'console.log(""auth', 'error', '""', '+', 'err', ');', 'else', 'console.log(""user', 'authenticated"");', 'db.disconnect();', '});', '}', 'db.connect(app,', 'function(', 'err', ')', '{', 'if(err)', 'return;', '//saveUser();', 'authTest();', '});', '```']",challenge not surrounded by ''': ,
"#!/usr/bin/env python
#
# A library that provides a Python interface to the Telegram Bot API
# Copyright (C) 2015-2016
# Leandro Toledo de Souza <devs@python-telegram-bot.org>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see [http://www.gnu.org/licenses/].
""""""This module contains a object that represents Tests for Telegram
InlineQueryResultContact""""""

import sys

if sys.version_info[0:2] == (2, 6):
    import unittest2 as unittest
else:
    import unittest

sys.path.append('.')

import telegram
from tests.base import BaseTest


class InlineQueryResultContactTest(BaseTest, unittest.TestCase):
    """"""This object represents Tests for Telegram InlineQueryResultContact.""""""

    def setUp(self):
        self.id = 'id'
        self.type = 'contact'
        self.phone_number = 'phone_number'
        self.first_name = 'first_name'
        self.last_name = 'last_name'
        self.thumb_url = 'thumb url'
        self.thumb_width = 10
        self.thumb_height = 15
        self.input_message_content = telegram.InputTextMessageContent('input_message_content')
        self.reply_markup = telegram.InlineKeyboardMarkup([[
            telegram.InlineKeyboardButton('reply_markup')
        ]])
        self.json_dict = {
            'id': self.id,
            'type': self.type,
            'phone_number': self.phone_number,
            'first_name': self.first_name,
            'last_name': self.last_name,
            'thumb_url': self.thumb_url,
            'thumb_width': self.thumb_width,
            'thumb_height': self.thumb_height,
            'input_message_content': self.input_message_content.to_dict(),
            'reply_markup': self.reply_markup.to_dict(),
        }

    def test_contact_de_json(self):
        contact = telegram.InlineQueryResultContact.de_json(self.json_dict)

        self.assertEqual(contact.id, self.id)
        self.assertEqual(contact.type, self.type)
        self.assertEqual(contact.phone_number, self.phone_number)
        self.assertEqual(contact.first_name, self.first_name)
        self.assertEqual(contact.last_name, self.last_name)
        self.assertEqual(contact.thumb_url, self.thumb_url)
        self.assertEqual(contact.thumb_width, self.thumb_width)
        self.assertEqual(contact.thumb_height, self.thumb_height)
        self.assertDictEqual(contact.input_message_content.to_dict(),
                             self.input_message_content.to_dict())
        self.assertDictEqual(contact.reply_markup.to_dict(), self.reply_markup.to_dict())

    def test_contact_to_json(self):
        contact = telegram.InlineQueryResultContact.de_json(self.json_dict)

        self.assertTrue(self.is_json(contact.to_json()))

    def test_contact_to_dict(self):
        contact = telegram.InlineQueryResultContact.de_json(self.json_dict).to_dict()

        self.assertTrue(self.is_dict(contact))
        self.assertDictEqual(self.json_dict, contact)


if __name__ == '__main__':
    unittest.main()
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/usr/bin/env', 'python', '#', '#', 'A', 'library', 'that', 'provides', 'a', 'Python', 'interface', 'to', 'the', 'Telegram', 'Bot', 'API', '#', 'Copyright', '(C)', '2015-2016', '#', 'Leandro', 'Toledo', 'de', 'Souza', '<devs@python-telegram-bot.org>', '#', '#', 'This', 'program', 'is', 'free', 'software:', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', '#', 'it', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'as', 'published', 'by', '#', 'the', 'Free', 'Software', 'Foundation,', 'either', 'version', '3', 'of', 'the', 'License,', 'or', '#', '(at', 'your', 'option)', 'any', 'later', 'version.', '#', '#', 'This', 'program', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', '#', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', '#', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', '#', 'GNU', 'General', 'Public', 'License', 'for', 'more', 'details.', '#', '#', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'General', 'Public', 'License', '#', 'along', 'with', 'this', 'program.', 'If', 'not,', 'see', '[http://www.gnu.org/licenses/].', '""""""This', 'module', 'contains', 'a', 'object', 'that', 'represents', 'Tests', 'for', 'Telegram', 'InlineQueryResultContact""""""', 'import', 'sys', 'if', 'sys.version_info[0:2]', '==', '(2,', '6):', 'import', 'unittest2', 'as', 'unittest', 'else:', 'import', 'unittest', ""sys.path.append('.')"", 'import', 'telegram', 'from', 'tests.base', 'import', 'BaseTest', 'class', 'InlineQueryResultContactTest(BaseTest,', 'unittest.TestCase):', '""""""This', 'object', 'represents', 'Tests', 'for', 'Telegram', 'InlineQueryResultContact.""""""', 'def', 'setUp(self):', 'self.id', '=', ""'id'"", 'self.type', '=', ""'contact'"", 'self.phone_number', '=', ""'phone_number'"", 'self.first_name', '=', ""'first_name'"", 'self.last_name', '=', ""'last_name'"", 'self.thumb_url', '=', ""'thumb"", ""url'"", 'self.thumb_width', '=', '10', 'self.thumb_height', '=', '15', 'self.input_message_content', '=', ""telegram.InputTextMessageContent('input_message_content')"", 'self.reply_markup', '=', 'telegram.InlineKeyboardMarkup([[', ""telegram.InlineKeyboardButton('reply_markup')"", ']])', 'self.json_dict', '=', '{', ""'id':"", 'self.id,', ""'type':"", 'self.type,', ""'phone_number':"", 'self.phone_number,', ""'first_name':"", 'self.first_name,', ""'last_name':"", 'self.last_name,', ""'thumb_url':"", 'self.thumb_url,', ""'thumb_width':"", 'self.thumb_width,', ""'thumb_height':"", 'self.thumb_height,', ""'input_message_content':"", 'self.input_message_content.to_dict(),', ""'reply_markup':"", 'self.reply_markup.to_dict(),', '}', 'def', 'test_contact_de_json(self):', 'contact', '=', 'telegram.InlineQueryResultContact.de_json(self.json_dict)', 'self.assertEqual(contact.id,', 'self.id)', 'self.assertEqual(contact.type,', 'self.type)', 'self.assertEqual(contact.phone_number,', 'self.phone_number)', 'self.assertEqual(contact.first_name,', 'self.first_name)', 'self.assertEqual(contact.last_name,', 'self.last_name)', 'self.assertEqual(contact.thumb_url,', 'self.thumb_url)', 'self.assertEqual(contact.thumb_width,', 'self.thumb_width)', 'self.assertEqual(contact.thumb_height,', 'self.thumb_height)', 'self.assertDictEqual(contact.input_message_content.to_dict(),', 'self.input_message_content.to_dict())', 'self.assertDictEqual(contact.reply_markup.to_dict(),', 'self.reply_markup.to_dict())', 'def', 'test_contact_to_json(self):', 'contact', '=', 'telegram.InlineQueryResultContact.de_json(self.json_dict)', 'self.assertTrue(self.is_json(contact.to_json()))', 'def', 'test_contact_to_dict(self):', 'contact', '=', 'telegram.InlineQueryResultContact.de_json(self.json_dict).to_dict()', 'self.assertTrue(self.is_dict(contact))', 'self.assertDictEqual(self.json_dict,', 'contact)', 'if', '__name__', '==', ""'__main__':"", 'unittest.main()', '```']",challenge not surrounded by ''': ,
"import { run } from '@ember/runloop';
import { hash } from 'rsvp';
import Service, { inject as service } from '@ember/service';
import Ember from 'ember';
import config from '../config/environment';
import rtlDetect from 'hospitalrun/utils/rtl-detect';

export const DEFAULT_LANGUAGE = config.intl.defaultLocale || 'en';

export default Service.extend({
  intl: service(),
  config: service(),

  loadUserLanguagePreference() {
    return hash({
      user: this.getConfig().getCurrentUser(),
      preferences: this.fetchOrCreatePreferences()
    }).then(({ user, preferences }) => user && user.name && preferences[user.name] && preferences[user.name].intl || DEFAULT_LANGUAGE)
      .catch(() => DEFAULT_LANGUAGE)
      .then(this.setApplicationLanguage.bind(this));
  },

  setApplicationLanguage(selectedLanguage) {
    // this will set the locale to the selected language but allow
    // translation fallbacks to DEFAULT_LANGUAGE
    run(() => this.set('intl.locale', [selectedLanguage, DEFAULT_LANGUAGE].uniq()));

    // allows for the browser to set direction (rtl for right-to-left)
    document.body.dir = rtlDetect.isRtlLang(selectedLanguage) ? 'rtl' : 'auto';

    return selectedLanguage;
  },

  saveUserLanguagePreference(selectedLanguage) {
    this.setApplicationLanguage(selectedLanguage);
    return hash({
      user: this.getConfig().getCurrentUser(),
      preferences: this.fetchOrCreatePreferences().then(
        (preferences) => preferences,
        () => ({
          _id: 'preferences'
        })
      )
    }).then(({ user, preferences }) => {
      preferences[user.name] = preferences[user.name] || {};
      preferences[user.name].intl = selectedLanguage;
      return this.getConfig().getConfigDB().put(preferences);
    }).catch((err) => Ember.Logger.error(err));
  },

  fetchOrCreatePreferences() {
    return this.getConfig().getConfigDB().get('preferences');
  },

  getConfig() {
    return this.get('config');
  }
});
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', '{', 'run', '}', 'from', ""'@ember/runloop';"", 'import', '{', 'hash', '}', 'from', ""'rsvp';"", 'import', 'Service,', '{', 'inject', 'as', 'service', '}', 'from', ""'@ember/service';"", 'import', 'Ember', 'from', ""'ember';"", 'import', 'config', 'from', ""'../config/environment';"", 'import', 'rtlDetect', 'from', ""'hospitalrun/utils/rtl-detect';"", 'export', 'const', 'DEFAULT_LANGUAGE', '=', 'config.intl.defaultLocale', '||', ""'en';"", 'export', 'default', 'Service.extend({', 'intl:', 'service(),', 'config:', 'service(),', 'loadUserLanguagePreference()', '{', 'return', 'hash({', 'user:', 'this.getConfig().getCurrentUser(),', 'preferences:', 'this.fetchOrCreatePreferences()', '}).then(({', 'user,', 'preferences', '})', '=>', 'user', '&&', 'user.name', '&&', 'preferences[user.name]', '&&', 'preferences[user.name].intl', '||', 'DEFAULT_LANGUAGE)', '.catch(()', '=>', 'DEFAULT_LANGUAGE)', '.then(this.setApplicationLanguage.bind(this));', '},', 'setApplicationLanguage(selectedLanguage)', '{', '//', 'this', 'will', 'set', 'the', 'locale', 'to', 'the', 'selected', 'language', 'but', 'allow', '//', 'translation', 'fallbacks', 'to', 'DEFAULT_LANGUAGE', 'run(()', '=>', ""this.set('intl.locale',"", '[selectedLanguage,', 'DEFAULT_LANGUAGE].uniq()));', '//', 'allows', 'for', 'the', 'browser', 'to', 'set', 'direction', '(rtl', 'for', 'right-to-left)', 'document.body.dir', '=', 'rtlDetect.isRtlLang(selectedLanguage)', '?', ""'rtl'"", ':', ""'auto';"", 'return', 'selectedLanguage;', '},', 'saveUserLanguagePreference(selectedLanguage)', '{', 'this.setApplicationLanguage(selectedLanguage);', 'return', 'hash({', 'user:', 'this.getConfig().getCurrentUser(),', 'preferences:', 'this.fetchOrCreatePreferences().then(', '(preferences)', '=>', 'preferences,', '()', '=>', '({', '_id:', ""'preferences'"", '})', ')', '}).then(({', 'user,', 'preferences', '})', '=>', '{', 'preferences[user.name]', '=', 'preferences[user.name]', '||', '{};', 'preferences[user.name].intl', '=', 'selectedLanguage;', 'return', 'this.getConfig().getConfigDB().put(preferences);', '}).catch((err)', '=>', 'Ember.Logger.error(err));', '},', 'fetchOrCreatePreferences()', '{', 'return', ""this.getConfig().getConfigDB().get('preferences');"", '},', 'getConfig()', '{', 'return', ""this.get('config');"", '}', '});', '```']",challenge not surrounded by ''': ,
"'use strict';
const {
  SymbolFor,
} = primordials;

class MessageEvent {
  constructor(data, target, type) {
    this.data = data;
    this.target = target;
    this.type = type;
  }
}

const kHybridDispatch = SymbolFor('nodejs.internal.kHybridDispatch');

exports.emitMessage = function(data, type) {
  if (typeof this[kHybridDispatch] === 'function') {
    this[kHybridDispatch](data, type, undefined);
    return;
  }

  const event = new MessageEvent(data, this, type);
  if (type === 'message') {
    if (typeof this.onmessage === 'function')
      this.onmessage(event);
  } else {
    // eslint-disable-next-line no-lonely-if
    if (typeof this.onmessageerror === 'function')
      this.onmessageerror(event);
  }
};
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', ""```'use"", ""strict';"", 'const', '{', 'SymbolFor,', '}', '=', 'primordials;', 'class', 'MessageEvent', '{', 'constructor(data,', 'target,', 'type)', '{', 'this.data', '=', 'data;', 'this.target', '=', 'target;', 'this.type', '=', 'type;', '}', '}', 'const', 'kHybridDispatch', '=', ""SymbolFor('nodejs.internal.kHybridDispatch');"", 'exports.emitMessage', '=', 'function(data,', 'type)', '{', 'if', '(typeof', 'this[kHybridDispatch]', '===', ""'function')"", '{', 'this[kHybridDispatch](data,', 'type,', 'undefined);', 'return;', '}', 'const', 'event', '=', 'new', 'MessageEvent(data,', 'this,', 'type);', 'if', '(type', '===', ""'message')"", '{', 'if', '(typeof', 'this.onmessage', '===', ""'function')"", 'this.onmessage(event);', '}', 'else', '{', '//', 'eslint-disable-next-line', 'no-lonely-if', 'if', '(typeof', 'this.onmessageerror', '===', ""'function')"", 'this.onmessageerror(event);', '}', '};', '```']",challenge not surrounded by ''': ,
"package edu.indiana.lib.osid.base.repository.http;

/**********************************************************************************
 * $URL: https://source.sakaiproject.org/svn/citations/tags/sakai-10.6/citations-osid/web2bridge/src/java/edu/indiana/lib/osid/base/repository/http/TypeIterator.java $
 * $Id: TypeIterator.java 105079 2012-02-24 23:08:11Z ottenhoff@longsight.com $
 **********************************************************************************
 *
 * Copyright (c) 2003, 2004, 2005, 2007, 2008 The Sakai Foundation
 *
 * Licensed under the Educational Community License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 **********************************************************************************/
/**
 * @author Massachusetts Institute of Techbology, Sakai Software Development Team
 * @version
 */
public class TypeIterator extends edu.indiana.lib.osid.base.repository.TypeIterator
{
		private static org.apache.commons.logging.Log	_log = edu.indiana.lib.twinpeaks.util.LogUtils.getLog(TypeIterator.class);
		
    private java.util.Vector vector = new java.util.Vector();
    private int i = 0;

    public TypeIterator(java.util.Vector vector)
    throws org.osid.shared.SharedException
    {
        this.vector = vector;
    }

    public boolean hasNextType()
    throws org.osid.shared.SharedException
    {
        return i < vector.size();
    }

    public org.osid.shared.Type nextType()
    throws org.osid.shared.SharedException
    {
        if (i < vector.size())
        {
            return (org.osid.shared.Type)vector.elementAt(i++);
        }
        else
        {
            throw new org.osid.shared.SharedException(org.osid.shared.SharedException.NO_MORE_ITERATOR_ELEMENTS);
        }
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'edu.indiana.lib.osid.base.repository.http;', '/**********************************************************************************', '*', '$URL:', 'https://source.sakaiproject.org/svn/citations/tags/sakai-10.6/citations-osid/web2bridge/src/java/edu/indiana/lib/osid/base/repository/http/TypeIterator.java', '$', '*', '$Id:', 'TypeIterator.java', '105079', '2012-02-24', '23:08:11Z', 'ottenhoff@longsight.com', '$', '**********************************************************************************', '*', '*', 'Copyright', '(c)', '2003,', '2004,', '2005,', '2007,', '2008', 'The', 'Sakai', 'Foundation', '*', '*', 'Licensed', 'under', 'the', 'Educational', 'Community', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.opensource.org/licenses/ECL-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*', '**********************************************************************************/', '/**', '*', '@author', 'Massachusetts', 'Institute', 'of', 'Techbology,', 'Sakai', 'Software', 'Development', 'Team', '*', '@version', '*/', 'public', 'class', 'TypeIterator', 'extends', 'edu.indiana.lib.osid.base.repository.TypeIterator', '{', 'private', 'static', 'org.apache.commons.logging.Log', '_log', '=', 'edu.indiana.lib.twinpeaks.util.LogUtils.getLog(TypeIterator.class);', 'private', 'java.util.Vector', 'vector', '=', 'new', 'java.util.Vector();', 'private', 'int', 'i', '=', '0;', 'public', 'TypeIterator(java.util.Vector', 'vector)', 'throws', 'org.osid.shared.SharedException', '{', 'this.vector', '=', 'vector;', '}', 'public', 'boolean', 'hasNextType()', 'throws', 'org.osid.shared.SharedException', '{', 'return', 'i', '<', 'vector.size();', '}', 'public', 'org.osid.shared.Type', 'nextType()', 'throws', 'org.osid.shared.SharedException', '{', 'if', '(i', '<', 'vector.size())', '{', 'return', '(org.osid.shared.Type)vector.elementAt(i++);', '}', 'else', '{', 'throw', 'new', 'org.osid.shared.SharedException(org.osid.shared.SharedException.NO_MORE_ITERATOR_ELEMENTS);', '}', '}', '}', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE html>
<html >
<head>
<meta http-equiv=""Content-Type"" content=""text/html; charset=UTF-8"">
<meta name=""generator"" content=""hevea 2.29+5 of 2017-05-18"">
<link rel=""stylesheet"" type=""text/css"" href=""cascmd_en.css"">
<title>Image structure in Xcas</title>
</head>
<body >
<a href=""cascmd_en1021.html""><img src=""previous_motif.gif"" alt=""Previous""></a>
<a href=""index.html""><img src=""contents_motif.gif"" alt=""Up""></a>
<a href=""cascmd_en1023.html""><img src=""next_motif.gif"" alt=""Next""></a>
<hr>
<h3 id=""sec1309"" class=""subsection"">14.2.1  Image structure in <span style=""font-family:monospace"">Xcas</span></h3>
<p>
<a id=""sec:imagestruct""></a></p><p>An image in <span style=""font-family:monospace"">Xcas</span> is a list with the following elements.
</p><ul class=""itemize""><li class=""li-itemize"">
The first element is itself a list of three integers; the
number of channels (which will be 3 or 4), the number <span style=""font-family:monospace"">n</span> of
rows and the number <span style=""font-family:monospace"">p</span> of columns used for the dimension of
the image. Each channel will be an <span style=""font-family:monospace"">n</span>×<span style=""font-family:monospace"">p</span> matrix of
integers between 0 and 255.
</li><li class=""li-itemize"">A red channel.
</li><li class=""li-itemize"">A green channel.
</li><li class=""li-itemize"">A transparency channel.
</li><li class=""li-itemize"">A blue channel.
</li></ul><p>
The color of the point at line <span style=""font-family:monospace"">i</span> and column <span style=""font-family:monospace"">j</span> is
determined by the values of the <span style=""font-family:monospace"">i</span>,<span style=""font-family:monospace"">j</span>th entry of
the matrices.</p><p>Note that the number of points in the structure isn’t necessarily the
same as the number of pixels on the screen when it is drawn. It is
possible that a single point in the structure is represented by a
small rectangle of pixels when it is displayed on the screen.</p>
<hr>
<a href=""cascmd_en1021.html""><img src=""previous_motif.gif"" alt=""Previous""></a>
<a href=""index.html""><img src=""contents_motif.gif"" alt=""Up""></a>
<a href=""cascmd_en1023.html""><img src=""next_motif.gif"" alt=""Next""></a>
</body>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'html>', '<html', '>', '<head>', '<meta', 'http-equiv=""Content-Type""', 'content=""text/html;', 'charset=UTF-8"">', '<meta', 'name=""generator""', 'content=""hevea', '2.29+5', 'of', '2017-05-18"">', '<link', 'rel=""stylesheet""', 'type=""text/css""', 'href=""cascmd_en.css"">', '<title>Image', 'structure', 'in', 'Xcas</title>', '</head>', '<body', '>', '<a', 'href=""cascmd_en1021.html""><img', 'src=""previous_motif.gif""', 'alt=""Previous""></a>', '<a', 'href=""index.html""><img', 'src=""contents_motif.gif""', 'alt=""Up""></a>', '<a', 'href=""cascmd_en1023.html""><img', 'src=""next_motif.gif""', 'alt=""Next""></a>', '<hr>', '<h3', 'id=""sec1309""', 'class=""subsection"">14.2.1', 'Image', 'structure', 'in', '<span', 'style=""font-family:monospace"">Xcas</span></h3>', '<p>', '<a', 'id=""sec:imagestruct""></a></p><p>An', 'image', 'in', '<span', 'style=""font-family:monospace"">Xcas</span>', 'is', 'a', 'list', 'with', 'the', 'following', 'elements.', '</p><ul', 'class=""itemize""><li', 'class=""li-itemize"">', 'The', 'first', 'element', 'is', 'itself', 'a', 'list', 'of', 'three', 'integers;', 'the', 'number', 'of', 'channels', '(which', 'will', 'be', '3', 'or', '4),', 'the', 'number', '<span', 'style=""font-family:monospace"">n</span>', 'of', 'rows', 'and', 'the', 'number', '<span', 'style=""font-family:monospace"">p</span>', 'of', 'columns', 'used', 'for', 'the', 'dimension', 'of', 'the', 'image.', 'Each', 'channel', 'will', 'be', 'an', '<span', 'style=""font-family:monospace"">n</span>×<span', 'style=""font-family:monospace"">p</span>', 'matrix', 'of', 'integers', 'between', '0', 'and', '255.', '</li><li', 'class=""li-itemize"">A', 'red', 'channel.', '</li><li', 'class=""li-itemize"">A', 'green', 'channel.', '</li><li', 'class=""li-itemize"">A', 'transparency', 'channel.', '</li><li', 'class=""li-itemize"">A', 'blue', 'channel.', '</li></ul><p>', 'The', 'color', 'of', 'the', 'point', 'at', 'line', '<span', 'style=""font-family:monospace"">i</span>', 'and', 'column', '<span', 'style=""font-family:monospace"">j</span>', 'is', 'determined', 'by', 'the', 'values', 'of', 'the', '<span', 'style=""font-family:monospace"">i</span>,<span', 'style=""font-family:monospace"">j</span>th', 'entry', 'of', 'the', 'matrices.</p><p>Note', 'that', 'the', 'number', 'of', 'points', 'in', 'the', 'structure', 'isn’t', 'necessarily', 'the', 'same', 'as', 'the', 'number', 'of', 'pixels', 'on', 'the', 'screen', 'when', 'it', 'is', 'drawn.', 'It', 'is', 'possible', 'that', 'a', 'single', 'point', 'in', 'the', 'structure', 'is', 'represented', 'by', 'a', 'small', 'rectangle', 'of', 'pixels', 'when', 'it', 'is', 'displayed', 'on', 'the', 'screen.</p>', '<hr>', '<a', 'href=""cascmd_en1021.html""><img', 'src=""previous_motif.gif""', 'alt=""Previous""></a>', '<a', 'href=""index.html""><img', 'src=""contents_motif.gif""', 'alt=""Up""></a>', '<a', 'href=""cascmd_en1023.html""><img', 'src=""next_motif.gif""', 'alt=""Next""></a>', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"var expect = require('expect.js'),
    regEscape = require('regexp-escape'),
    Connection = require('ssh2'),
    zlib = require('zlib'),
    weblog = require('./weblog');

module.exports.listLogFiles = listLogFiles;
function listLogFiles(auth, cb) {
  var conn = new Connection();
  conn.on('ready', function() {
    conn.sftp(function(err, sftp) {
      if (err) return cb(err);
      sftp.readdir('/var/log/apache2', function (err, list) {
        if (err) return done(err);
        var logs = list
          .filter(function (item) {
            return getFileIndex(item.filename) >= 0;
          })
          .sort(fileIndexCompare());

        cb(null, logs);
      });
    });
  }).connect(auth);
}

module.exports.createReadStream = createReadStream;
function createReadStream(auth, filename, opts, cb) {
  if (typeof opts === 'function') {
    cb = opts;
    opts = {};
  }

  var conn = new Connection();
  conn.on('ready', function() {
    conn.sftp(function(err, sftp) {
      if (err) return cb(err);
      var s = sftp.createReadStream('/var/log/apache2/' + filename, opts);
      if (/\.gz$/.test(filename)) {
        s = s.pipe(zlib.createGunzip());
      }
      s = s.pipe(weblog());
      cb(null, s);
    });
  }).connect(auth);
}

function getFileIndex(prefix, fileName) {
  if (typeof fileName === 'undefined') {
    fileName = prefix;
    prefix = 'access.log';
  }
  if (prefix === fileName) return 0;

  prefix = RegExp.escape(prefix);

  if (!fileName) return 0;

  var m = new RegExp('^' + prefix + '\\.([0-9]+)(\\.gz$)?').exec(fileName);
  if (m) {
    return parseInt(m[1]);
  }

  return -1;
}

function fileIndexCompare(dir) {
  if (typeof dir === 'undefined') dir = true;
  var mul = 1;
  if (!dir) mul = -1;
  return function (a, b) {
    var aNum = getFileIndex(a.filename);
    var bNum = getFileIndex(b.filename);
    if (aNum < bNum) return mul*-1;
    if (aNum > bNum) return mul*1;
    return 0;
  };
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```var', 'expect', '=', ""require('expect.js'),"", 'regEscape', '=', ""require('regexp-escape'),"", 'Connection', '=', ""require('ssh2'),"", 'zlib', '=', ""require('zlib'),"", 'weblog', '=', ""require('./weblog');"", 'module.exports.listLogFiles', '=', 'listLogFiles;', 'function', 'listLogFiles(auth,', 'cb)', '{', 'var', 'conn', '=', 'new', 'Connection();', ""conn.on('ready',"", 'function()', '{', 'conn.sftp(function(err,', 'sftp)', '{', 'if', '(err)', 'return', 'cb(err);', ""sftp.readdir('/var/log/apache2',"", 'function', '(err,', 'list)', '{', 'if', '(err)', 'return', 'done(err);', 'var', 'logs', '=', 'list', '.filter(function', '(item)', '{', 'return', 'getFileIndex(item.filename)', '>=', '0;', '})', '.sort(fileIndexCompare());', 'cb(null,', 'logs);', '});', '});', '}).connect(auth);', '}', 'module.exports.createReadStream', '=', 'createReadStream;', 'function', 'createReadStream(auth,', 'filename,', 'opts,', 'cb)', '{', 'if', '(typeof', 'opts', '===', ""'function')"", '{', 'cb', '=', 'opts;', 'opts', '=', '{};', '}', 'var', 'conn', '=', 'new', 'Connection();', ""conn.on('ready',"", 'function()', '{', 'conn.sftp(function(err,', 'sftp)', '{', 'if', '(err)', 'return', 'cb(err);', 'var', 's', '=', ""sftp.createReadStream('/var/log/apache2/'"", '+', 'filename,', 'opts);', 'if', '(/\\.gz$/.test(filename))', '{', 's', '=', 's.pipe(zlib.createGunzip());', '}', 's', '=', 's.pipe(weblog());', 'cb(null,', 's);', '});', '}).connect(auth);', '}', 'function', 'getFileIndex(prefix,', 'fileName)', '{', 'if', '(typeof', 'fileName', '===', ""'undefined')"", '{', 'fileName', '=', 'prefix;', 'prefix', '=', ""'access.log';"", '}', 'if', '(prefix', '===', 'fileName)', 'return', '0;', 'prefix', '=', 'RegExp.escape(prefix);', 'if', '(!fileName)', 'return', '0;', 'var', 'm', '=', 'new', ""RegExp('^'"", '+', 'prefix', '+', ""'\\\\.([0-9]+)(\\\\.gz$)?').exec(fileName);"", 'if', '(m)', '{', 'return', 'parseInt(m[1]);', '}', 'return', '-1;', '}', 'function', 'fileIndexCompare(dir)', '{', 'if', '(typeof', 'dir', '===', ""'undefined')"", 'dir', '=', 'true;', 'var', 'mul', '=', '1;', 'if', '(!dir)', 'mul', '=', '-1;', 'return', 'function', '(a,', 'b)', '{', 'var', 'aNum', '=', 'getFileIndex(a.filename);', 'var', 'bNum', '=', 'getFileIndex(b.filename);', 'if', '(aNum', '<', 'bNum)', 'return', 'mul*-1;', 'if', '(aNum', '>', 'bNum)', 'return', 'mul*1;', 'return', '0;', '};', '}', '```']",challenge not surrounded by ''': ,
"var searchData=
[
  ['fileresourceloader',['FileResourceLoader',['../classsfg_1_1FileResourceLoader.html',1,'sfg']]],
  ['fileresourceloader_2ehpp',['FileResourceLoader.hpp',['../FileResourceLoader_8hpp.html',1,'']]],
  ['fill',['FILL',['../classsfg_1_1Table.html#ab850ea1070b81c61ba624d6ca2011b9dacbaa4e23a9231eff173879e75df613e6',1,'sfg::Table']]],
  ['fixed',['Fixed',['../classsfg_1_1Fixed.html',1,'sfg']]],
  ['fixed',['Fixed',['../classsfg_1_1Fixed.html#a31309cfcede9e7eac87710195e599c2e',1,'sfg::Fixed']]],
  ['fixed_2ehpp',['Fixed.hpp',['../Fixed_8hpp.html',1,'']]],
  ['fontid',['FontID',['../classsfg_1_1Renderer.html#a5fa5686adf6d24320954057f40dddcc7',1,'sfg::Renderer']]],
  ['frame',['Frame',['../classsfg_1_1Frame.html#a2b5ed2e4b119585b2ae3d1f0185e9fc3',1,'sfg::Frame']]],
  ['frame',['Frame',['../classsfg_1_1Frame.html',1,'sfg']]],
  ['frame_2ehpp',['Frame.hpp',['../Frame_8hpp.html',1,'']]]
];
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```var', 'searchData=', '[', ""['fileresourceloader',['FileResourceLoader',['../classsfg_1_1FileResourceLoader.html',1,'sfg']]],"", ""['fileresourceloader_2ehpp',['FileResourceLoader.hpp',['../FileResourceLoader_8hpp.html',1,'']]],"", ""['fill',['FILL',['../classsfg_1_1Table.html#ab850ea1070b81c61ba624d6ca2011b9dacbaa4e23a9231eff173879e75df613e6',1,'sfg::Table']]],"", ""['fixed',['Fixed',['../classsfg_1_1Fixed.html',1,'sfg']]],"", ""['fixed',['Fixed',['../classsfg_1_1Fixed.html#a31309cfcede9e7eac87710195e599c2e',1,'sfg::Fixed']]],"", ""['fixed_2ehpp',['Fixed.hpp',['../Fixed_8hpp.html',1,'']]],"", ""['fontid',['FontID',['../classsfg_1_1Renderer.html#a5fa5686adf6d24320954057f40dddcc7',1,'sfg::Renderer']]],"", ""['frame',['Frame',['../classsfg_1_1Frame.html#a2b5ed2e4b119585b2ae3d1f0185e9fc3',1,'sfg::Frame']]],"", ""['frame',['Frame',['../classsfg_1_1Frame.html',1,'sfg']]],"", ""['frame_2ehpp',['Frame.hpp',['../Frame_8hpp.html',1,'']]]"", '];', '```']",challenge not surrounded by ''': ,
"-- Licensed to the Apache Software Foundation (ASF) under one
-- or more contributor license agreements.  See the NOTICE file
-- distributed with this work for additional information
-- regarding copyright ownership.  The ASF licenses this file
-- to you under the Apache License, Version 2.0 (the
-- ""License""); you may not use this file except in compliance
-- with the License.  You may obtain a copy of the License at
--
--     http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an ""AS IS"" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

with sr_items as
 (select i_item_id item_id,
        sum(sr_return_quantity) sr_item_qty
 from store_returns,
      item,
      date_dim
 where sr_item_sk = i_item_sk
 and   d_date    in 
	(select d_date
	from date_dim
	where d_week_seq in 
		(select d_week_seq
		from date_dim
	  where d_date in ('1998-01-02','1998-10-15','1998-11-10')))
 and   sr_returned_date_sk   = d_date_sk
 group by i_item_id),
 cr_items as
 (select i_item_id item_id,
        sum(cr_return_quantity) cr_item_qty
 from catalog_returns,
      item,
      date_dim
 where cr_item_sk = i_item_sk
 and   d_date    in 
	(select d_date
	from date_dim
	where d_week_seq in 
		(select d_week_seq
		from date_dim
	  where d_date in ('1998-01-02','1998-10-15','1998-11-10')))
 and   cr_returned_date_sk   = d_date_sk
 group by i_item_id),
 wr_items as
 (select i_item_id item_id,
        sum(wr_return_quantity) wr_item_qty
 from web_returns,
      item,
      date_dim
 where wr_item_sk = i_item_sk
 and   d_date    in 
	(select d_date
	from date_dim
	where d_week_seq in 
		(select d_week_seq
		from date_dim
		where d_date in ('1998-01-02','1998-10-15','1998-11-10')))
 and   wr_returned_date_sk   = d_date_sk
 group by i_item_id)
  select  sr_items.item_id
       ,sr_item_qty
       ,sr_item_qty/(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 * 100 sr_dev
       ,cr_item_qty
       ,cr_item_qty/(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 * 100 cr_dev
       ,wr_item_qty
       ,wr_item_qty/(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 * 100 wr_dev
       ,(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 average
 from sr_items
     ,cr_items
     ,wr_items
 where sr_items.item_id=cr_items.item_id
   and sr_items.item_id=wr_items.item_id 
 order by sr_items.item_id
         ,sr_item_qty
 limit 100
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```--', 'Licensed', 'to', 'the', 'Apache', 'Software', 'Foundation', '(ASF)', 'under', 'one', '--', 'or', 'more', 'contributor', 'license', 'agreements.', 'See', 'the', 'NOTICE', 'file', '--', 'distributed', 'with', 'this', 'work', 'for', 'additional', 'information', '--', 'regarding', 'copyright', 'ownership.', 'The', 'ASF', 'licenses', 'this', 'file', '--', 'to', 'you', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '--', '""License"");', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', '--', 'with', 'the', 'License.', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '--', '--', 'http://www.apache.org/licenses/LICENSE-2.0', '--', '--', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '--', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '--', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '--', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '--', 'limitations', 'under', 'the', 'License.', 'with', 'sr_items', 'as', '(select', 'i_item_id', 'item_id,', 'sum(sr_return_quantity)', 'sr_item_qty', 'from', 'store_returns,', 'item,', 'date_dim', 'where', 'sr_item_sk', '=', 'i_item_sk', 'and', 'd_date', 'in', '(select', 'd_date', 'from', 'date_dim', 'where', 'd_week_seq', 'in', '(select', 'd_week_seq', 'from', 'date_dim', 'where', 'd_date', 'in', ""('1998-01-02','1998-10-15','1998-11-10')))"", 'and', 'sr_returned_date_sk', '=', 'd_date_sk', 'group', 'by', 'i_item_id),', 'cr_items', 'as', '(select', 'i_item_id', 'item_id,', 'sum(cr_return_quantity)', 'cr_item_qty', 'from', 'catalog_returns,', 'item,', 'date_dim', 'where', 'cr_item_sk', '=', 'i_item_sk', 'and', 'd_date', 'in', '(select', 'd_date', 'from', 'date_dim', 'where', 'd_week_seq', 'in', '(select', 'd_week_seq', 'from', 'date_dim', 'where', 'd_date', 'in', ""('1998-01-02','1998-10-15','1998-11-10')))"", 'and', 'cr_returned_date_sk', '=', 'd_date_sk', 'group', 'by', 'i_item_id),', 'wr_items', 'as', '(select', 'i_item_id', 'item_id,', 'sum(wr_return_quantity)', 'wr_item_qty', 'from', 'web_returns,', 'item,', 'date_dim', 'where', 'wr_item_sk', '=', 'i_item_sk', 'and', 'd_date', 'in', '(select', 'd_date', 'from', 'date_dim', 'where', 'd_week_seq', 'in', '(select', 'd_week_seq', 'from', 'date_dim', 'where', 'd_date', 'in', ""('1998-01-02','1998-10-15','1998-11-10')))"", 'and', 'wr_returned_date_sk', '=', 'd_date_sk', 'group', 'by', 'i_item_id)', 'select', 'sr_items.item_id', ',sr_item_qty', ',sr_item_qty/(sr_item_qty+cr_item_qty+wr_item_qty)/3.0', '*', '100', 'sr_dev', ',cr_item_qty', ',cr_item_qty/(sr_item_qty+cr_item_qty+wr_item_qty)/3.0', '*', '100', 'cr_dev', ',wr_item_qty', ',wr_item_qty/(sr_item_qty+cr_item_qty+wr_item_qty)/3.0', '*', '100', 'wr_dev', ',(sr_item_qty+cr_item_qty+wr_item_qty)/3.0', 'average', 'from', 'sr_items', ',cr_items', ',wr_items', 'where', 'sr_items.item_id=cr_items.item_id', 'and', 'sr_items.item_id=wr_items.item_id', 'order', 'by', 'sr_items.item_id', ',sr_item_qty', 'limit', '100', '```']",challenge not surrounded by ''': ,
"#### NOTICE: THIS FILE IS AUTOGENERATED
#### MODIFICATIONS MAY BE LOST IF DONE IMPROPERLY
#### PLEASE SEE THE ONLINE DOCUMENTATION FOR EXAMPLES

from swgpy.object import *	

def create(kernel):
	result = Tangible()

	result.template = ""object/tangible/food/crafted/shared_dessert_deneelian_fizz_pudding.iff""
	result.attribute_template_id = 5
	result.stfName(""food_name"",""deneelian_fizz_pudding"")		
	
	#### BEGIN MODIFICATIONS ####
	####  END MODIFICATIONS  ####
	
	return result","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```####', 'NOTICE:', 'THIS', 'FILE', 'IS', 'AUTOGENERATED', '####', 'MODIFICATIONS', 'MAY', 'BE', 'LOST', 'IF', 'DONE', 'IMPROPERLY', '####', 'PLEASE', 'SEE', 'THE', 'ONLINE', 'DOCUMENTATION', 'FOR', 'EXAMPLES', 'from', 'swgpy.object', 'import', '*', 'def', 'create(kernel):', 'result', '=', 'Tangible()', 'result.template', '=', '""object/tangible/food/crafted/shared_dessert_deneelian_fizz_pudding.iff""', 'result.attribute_template_id', '=', '5', 'result.stfName(""food_name"",""deneelian_fizz_pudding"")', '####', 'BEGIN', 'MODIFICATIONS', '####', '####', 'END', 'MODIFICATIONS', '####', 'return', 'result```']",challenge not surrounded by ''': ,
"package asp4j.mapping.object.atom;

import asp4j.lang.Atom;
import asp4j.mapping.object.Mapping;

/**
 *
 * @author hbeck May 31, 2013
 */
public interface AtomMapping<T> extends AtomInputMapping<T>, AtomOutputMapping<T>, Mapping<T,Atom> {
    
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'asp4j.mapping.object.atom;', 'import', 'asp4j.lang.Atom;', 'import', 'asp4j.mapping.object.Mapping;', '/**', '*', '*', '@author', 'hbeck', 'May', '31,', '2013', '*/', 'public', 'interface', 'AtomMapping<T>', 'extends', 'AtomInputMapping<T>,', 'AtomOutputMapping<T>,', 'Mapping<T,Atom>', '{', '}', '```']",challenge not surrounded by ''': ,
"/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * ""License""); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package org.apache.axis.test.interop.mock;

import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.xml.transform.OutputKeys;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerConfigurationException;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.factory.InitializingBean;
import org.springframework.core.io.Resource;
import org.w3c.dom.Element;

public class MockGetHandler extends SOAPHandler implements InitializingBean {
    private static final Log log = LogFactory.getLog(MockGetHandler.class);
    
    private Resource response;
    private Element responseMessage;
    private String responseContentType;

    public void setResponse(Resource response) {
        this.response = response;
    }

    public void afterPropertiesSet() throws Exception {
        responseMessage = DOMUtil.parse(response).getDocumentElement();
        DOMUtil.removeWhitespace(responseMessage);
        responseContentType = SOAPUtil.getContentType(responseMessage);
    }

    @Override
    protected void handleSOAPRequest(HttpServletRequest httpRequest, HttpServletResponse httpResponse) throws ServletException, IOException {
        if (!httpRequest.getMethod().equals(""GET"")) {
            httpResponse.sendError(HttpServletResponse.SC_BAD_REQUEST, ""This endpoint only supports GET requests"");
            return;
        }
        httpResponse.setContentType(responseContentType + ""; "" + Constants.CHARSET_PARAM + ""=UTF-8"");
        Transformer transformer;
        try {
            transformer = TransformerFactory.newInstance().newTransformer();
        } catch (TransformerConfigurationException ex) {
            throw new ServletException(""Unexpected exception"", ex);
        }
        transformer.setOutputProperty(OutputKeys.ENCODING, ""UTF-8"");
        if (log.isDebugEnabled()) {
            log.debug(""Returning "" + response);
        }
        try {
            transformer.transform(new DOMSource(responseMessage), new StreamResult(httpResponse.getOutputStream()));
        } catch (TransformerException ex) {
            throw new ServletException(ex);
        }
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Licensed', 'to', 'the', 'Apache', 'Software', 'Foundation', '(ASF)', 'under', 'one', '*', 'or', 'more', 'contributor', 'license', 'agreements.', 'See', 'the', 'NOTICE', 'file', '*', 'distributed', 'with', 'this', 'work', 'for', 'additional', 'information', '*', 'regarding', 'copyright', 'ownership.', 'The', 'ASF', 'licenses', 'this', 'file', '*', 'to', 'you', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '*', '""License"");', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', '*', 'with', 'the', 'License.', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', '*', 'software', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '*', '""AS', 'IS""', 'BASIS,', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', '*', 'KIND,', 'either', 'express', 'or', 'implied.', 'See', 'the', 'License', 'for', 'the', '*', 'specific', 'language', 'governing', 'permissions', 'and', 'limitations', '*', 'under', 'the', 'License.', '*/', 'package', 'org.apache.axis.test.interop.mock;', 'import', 'java.io.IOException;', 'import', 'javax.servlet.ServletException;', 'import', 'javax.servlet.http.HttpServletRequest;', 'import', 'javax.servlet.http.HttpServletResponse;', 'import', 'javax.xml.transform.OutputKeys;', 'import', 'javax.xml.transform.Transformer;', 'import', 'javax.xml.transform.TransformerConfigurationException;', 'import', 'javax.xml.transform.TransformerException;', 'import', 'javax.xml.transform.TransformerFactory;', 'import', 'javax.xml.transform.dom.DOMSource;', 'import', 'javax.xml.transform.stream.StreamResult;', 'import', 'org.apache.commons.logging.Log;', 'import', 'org.apache.commons.logging.LogFactory;', 'import', 'org.springframework.beans.factory.InitializingBean;', 'import', 'org.springframework.core.io.Resource;', 'import', 'org.w3c.dom.Element;', 'public', 'class', 'MockGetHandler', 'extends', 'SOAPHandler', 'implements', 'InitializingBean', '{', 'private', 'static', 'final', 'Log', 'log', '=', 'LogFactory.getLog(MockGetHandler.class);', 'private', 'Resource', 'response;', 'private', 'Element', 'responseMessage;', 'private', 'String', 'responseContentType;', 'public', 'void', 'setResponse(Resource', 'response)', '{', 'this.response', '=', 'response;', '}', 'public', 'void', 'afterPropertiesSet()', 'throws', 'Exception', '{', 'responseMessage', '=', 'DOMUtil.parse(response).getDocumentElement();', 'DOMUtil.removeWhitespace(responseMessage);', 'responseContentType', '=', 'SOAPUtil.getContentType(responseMessage);', '}', '@Override', 'protected', 'void', 'handleSOAPRequest(HttpServletRequest', 'httpRequest,', 'HttpServletResponse', 'httpResponse)', 'throws', 'ServletException,', 'IOException', '{', 'if', '(!httpRequest.getMethod().equals(""GET""))', '{', 'httpResponse.sendError(HttpServletResponse.SC_BAD_REQUEST,', '""This', 'endpoint', 'only', 'supports', 'GET', 'requests"");', 'return;', '}', 'httpResponse.setContentType(responseContentType', '+', '"";', '""', '+', 'Constants.CHARSET_PARAM', '+', '""=UTF-8"");', 'Transformer', 'transformer;', 'try', '{', 'transformer', '=', 'TransformerFactory.newInstance().newTransformer();', '}', 'catch', '(TransformerConfigurationException', 'ex)', '{', 'throw', 'new', 'ServletException(""Unexpected', 'exception"",', 'ex);', '}', 'transformer.setOutputProperty(OutputKeys.ENCODING,', '""UTF-8"");', 'if', '(log.isDebugEnabled())', '{', 'log.debug(""Returning', '""', '+', 'response);', '}', 'try', '{', 'transformer.transform(new', 'DOMSource(responseMessage),', 'new', 'StreamResult(httpResponse.getOutputStream()));', '}', 'catch', '(TransformerException', 'ex)', '{', 'throw', 'new', 'ServletException(ex);', '}', '}', '}', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the ""License""); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */


package org.wso2.carbon.device.mgt.core.archival.beans;

public class ArchiveEnrolmentOperationMap {


    private int id;
    private int enrolmentId;
    private int operationId;
    private String status;
    private int createdTimestamp;
    private int updatedTimestamp;

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public int getEnrolmentId() {
        return enrolmentId;
    }

    public void setEnrolmentId(int enrolmentId) {
        this.enrolmentId = enrolmentId;
    }

    public int getOperationId() {
        return operationId;
    }

    public void setOperationId(int operationId) {
        this.operationId = operationId;
    }

    public String getStatus() {
        return status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    public int getCreatedTimestamp() {
        return createdTimestamp;
    }

    public void setCreatedTimestamp(int createdTimestamp) {
        this.createdTimestamp = createdTimestamp;
    }

    public int getUpdatedTimestamp() {
        return updatedTimestamp;
    }

    public void setUpdatedTimestamp(int updatedTimestamp) {
        this.updatedTimestamp = updatedTimestamp;
    }
}

","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '(c)', '2018,', 'WSO2', 'Inc.', '(http://www.wso2.org)', 'All', 'Rights', 'Reserved.', '*', '*', 'WSO2', 'Inc.', 'licenses', 'this', 'file', 'to', 'you', 'under', 'the', 'Apache', 'License,', '*', 'Version', '2.0', '(the', '""License"");', 'you', 'may', 'not', 'use', 'this', 'file', 'except', '*', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', '*', 'software', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '*', '""AS', 'IS""', 'BASIS,', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', '*', 'KIND,', 'either', 'express', 'or', 'implied.', 'See', 'the', 'License', 'for', 'the', '*', 'specific', 'language', 'governing', 'permissions', 'and', 'limitations', '*', 'under', 'the', 'License.', '*/', 'package', 'org.wso2.carbon.device.mgt.core.archival.beans;', 'public', 'class', 'ArchiveEnrolmentOperationMap', '{', 'private', 'int', 'id;', 'private', 'int', 'enrolmentId;', 'private', 'int', 'operationId;', 'private', 'String', 'status;', 'private', 'int', 'createdTimestamp;', 'private', 'int', 'updatedTimestamp;', 'public', 'int', 'getId()', '{', 'return', 'id;', '}', 'public', 'void', 'setId(int', 'id)', '{', 'this.id', '=', 'id;', '}', 'public', 'int', 'getEnrolmentId()', '{', 'return', 'enrolmentId;', '}', 'public', 'void', 'setEnrolmentId(int', 'enrolmentId)', '{', 'this.enrolmentId', '=', 'enrolmentId;', '}', 'public', 'int', 'getOperationId()', '{', 'return', 'operationId;', '}', 'public', 'void', 'setOperationId(int', 'operationId)', '{', 'this.operationId', '=', 'operationId;', '}', 'public', 'String', 'getStatus()', '{', 'return', 'status;', '}', 'public', 'void', 'setStatus(String', 'status)', '{', 'this.status', '=', 'status;', '}', 'public', 'int', 'getCreatedTimestamp()', '{', 'return', 'createdTimestamp;', '}', 'public', 'void', 'setCreatedTimestamp(int', 'createdTimestamp)', '{', 'this.createdTimestamp', '=', 'createdTimestamp;', '}', 'public', 'int', 'getUpdatedTimestamp()', '{', 'return', 'updatedTimestamp;', '}', 'public', 'void', 'setUpdatedTimestamp(int', 'updatedTimestamp)', '{', 'this.updatedTimestamp', '=', 'updatedTimestamp;', '}', '}', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright 1999-2011 Alibaba Group Holding Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.alibaba.druid.stat;

import org.springframework.beans.factory.FactoryBean;

public class JdbcStatManagerFactoryBean implements FactoryBean<JdbcStatManager> {

    @Override
    public JdbcStatManager getObject() throws Exception {
        return JdbcStatManager.getInstance();
    }

    @Override
    public Class<?> getObjectType() {
        return JdbcStatManager.class;
    }

    @Override
    public boolean isSingleton() {
        return true;
    }

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '1999-2011', 'Alibaba', 'Group', 'Holding', 'Ltd.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'com.alibaba.druid.stat;', 'import', 'org.springframework.beans.factory.FactoryBean;', 'public', 'class', 'JdbcStatManagerFactoryBean', 'implements', 'FactoryBean<JdbcStatManager>', '{', '@Override', 'public', 'JdbcStatManager', 'getObject()', 'throws', 'Exception', '{', 'return', 'JdbcStatManager.getInstance();', '}', '@Override', 'public', 'Class<?>', 'getObjectType()', '{', 'return', 'JdbcStatManager.class;', '}', '@Override', 'public', 'boolean', 'isSingleton()', '{', 'return', 'true;', '}', '}', '```']",challenge not surrounded by ''': ,
"<HTML><HEAD>
<TITLE>Review for Pushing Tin (1999)</TITLE>
<LINK REL=""STYLESHEET"" TYPE=""text/css"" HREF=""/ramr.css"">
</HEAD>
<BODY BGCOLOR=""#FFFFFF"" TEXT=""#000000"">
<H1 ALIGN=""CENTER"" CLASS=""title""><A HREF=""/Title?0120797"">Pushing Tin (1999)</A></H1><H3 ALIGN=CENTER>reviewed by<BR><A HREF=""/ReviewsBy?Akiva+Gottlieb"">Akiva Gottlieb</A></H3><HR WIDTH=""40%"" SIZE=""4"">
<PRE>Pushing Tin ***</PRE>
<P>rated R
starring John Cusack, Billy Bob Thornton, Cate Blanchett, Angelina Jolie,
Jake Weber, Kurt Fuller, Vicki Lewis
based on the article ""Something's Got To Give"" by Darcy Frey
written by Glen Charles and Les Charles
directed by Mike Newell</P>
<P>According to a character in PUSHING TIN, Mike Newell's very
interesting new comedy, air traffic controllers have a higher risk of
depression, alcoholism, and suicide than workers in any other
profession. When I first heard the remark, I took it as a joke, but
after the film was through, I understood that it was indeed a fact.</P>
<P>John Cusack stars as Nick Falzone, a New York area air traffic
controller who, according to himself, ""pushes tin"" better than any of
his colleagues. His marriage to Connie(Oscar nominee Cate Blanchett)
is working out fairly nice, and he doesn't let the fact that he has to
make thousands of fateful choices every day bring him down.</P>
<P>But then Russell Bell(Billy Bob Thornton), the Marlboro Man of air
traffic control, gets shipped from his southern post to New York. An
intense rivalry between Nick and Russell begins. Nick begins to crush
on Russell's young, voluptuous, alcoholic wife Mary(Angelina Jolie),
while Russell starts to take a liking to Connie. Nick and Russell's
rivarly ensues during work and at home, with each character trying to
outdo each other so intensely that they end up trying to control not
only planes but their own lives.</P>
<P>John Cusack is fine as always as the protagonist, and PUSHING TIN is a
film in which he can show off his dramatic and comedic chops. It has
been a while since Cusack's sarcasm and charisma totally shine in one
performance.</P>
<P>Billy Bob Thornton stays low-key during most of the film, but he
portrays his villain nicely. Thornton is indeed talented, but I'd like
to see him play more SLING BLADE-type roles instead of being typecast
as a southern devil who just happens to have a certain amount of
grace.</P>
<P>Cate Blanchett's performance, though, is questionable. First of all,
why should this actress of tremendous skill be miscast in her first
American role? She tries hard enough to perfect a New York drawl but
her Australian voice pops through one too many times. Blanchett is a
commanding actress, and she deserves a role with more prowess.</P>
<P>And then there is the great Jolie. Angelina Jolie. There is nothing
that special about her performance in PUSHING TIN(she is very
underused), but she is much different than her characted in PLAYING BY
HEART, so I guess I'll say that she shows some depth. Seriously,
everyone should take notice. Angelina Jolie is going to take over
Hollywood.</P>
<P>Director Mike Newell has shown his knack for drama(DONNIE BRASCO) and
comedy(FOUR WEDDINGS AND A FUNERAL), and PUSHING TIN gives him the
chance to combine both.  For the most part, it works very well, but
the last 1/3 of the film features a couple plot elements that are too
contrived to take seriously. If nothing else, Newell has provided a
film that works on many levels, both as a drama and a comedy, and also
the film shows us very interestingly a job that many of us have never
seen or even thought about. PUSHING TIN is also partly a romance, but
mostly it's just the kind of film you want to see. That's my
recommedation.</P>
<P>a review by Akiva Gottlieb, The Teenage Movie Critic
<A HREF=""mailto:akiva@excite.com"">akiva@excite.com</A>
<A HREF=""http://www.angelfire.com/mo/film"">http://www.angelfire.com/mo/film</A>
watch me on TBS' ""Dinner And A Movie"" May 21, 8:05pm EST</P>
<P><HR>Get your free, private email at <A HREF=""http://mail.excite.com/"">http://mail.excite.com/</A></P>
<HR><P CLASS=flush><SMALL>The review above was posted to the
<A HREF=""news:rec.arts.movies.reviews"">rec.arts.movies.reviews</A> newsgroup (<A HREF=""news:de.rec.film.kritiken"">de.rec.film.kritiken</A> for German reviews).<BR>
The Internet Movie Database accepts no responsibility for the contents of the
review and has no editorial control. Unless stated otherwise, the copyright
belongs to the author.<BR>
Please direct comments/criticisms of the review to relevant newsgroups.<BR>
Broken URLs inthe reviews are the responsibility of the author.<BR>
The formatting of the review is likely to differ from the original due
to ASCII to HTML conversion.
</SMALL></P>
<P ALIGN=CENTER>Related links: <A HREF=""/Reviews/"">index of all rec.arts.movies.reviews reviews</A></P>



</P></BODY></HTML>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<HTML><HEAD>', '<TITLE>Review', 'for', 'Pushing', 'Tin', '(1999)</TITLE>', '<LINK', 'REL=""STYLESHEET""', 'TYPE=""text/css""', 'HREF=""/ramr.css"">', '</HEAD>', '<BODY', 'BGCOLOR=""#FFFFFF""', 'TEXT=""#000000"">', '<H1', 'ALIGN=""CENTER""', 'CLASS=""title""><A', 'HREF=""/Title?0120797"">Pushing', 'Tin', '(1999)</A></H1><H3', 'ALIGN=CENTER>reviewed', 'by<BR><A', 'HREF=""/ReviewsBy?Akiva+Gottlieb"">Akiva', 'Gottlieb</A></H3><HR', 'WIDTH=""40%""', 'SIZE=""4"">', '<PRE>Pushing', 'Tin', '***</PRE>', '<P>rated', 'R', 'starring', 'John', 'Cusack,', 'Billy', 'Bob', 'Thornton,', 'Cate', 'Blanchett,', 'Angelina', 'Jolie,', 'Jake', 'Weber,', 'Kurt', 'Fuller,', 'Vicki', 'Lewis', 'based', 'on', 'the', 'article', '""Something\'s', 'Got', 'To', 'Give""', 'by', 'Darcy', 'Frey', 'written', 'by', 'Glen', 'Charles', 'and', 'Les', 'Charles', 'directed', 'by', 'Mike', 'Newell</P>', '<P>According', 'to', 'a', 'character', 'in', 'PUSHING', 'TIN,', 'Mike', ""Newell's"", 'very', 'interesting', 'new', 'comedy,', 'air', 'traffic', 'controllers', 'have', 'a', 'higher', 'risk', 'of', 'depression,', 'alcoholism,', 'and', 'suicide', 'than', 'workers', 'in', 'any', 'other', 'profession.', 'When', 'I', 'first', 'heard', 'the', 'remark,', 'I', 'took', 'it', 'as', 'a', 'joke,', 'but', 'after', 'the', 'film', 'was', 'through,', 'I', 'understood', 'that', 'it', 'was', 'indeed', 'a', 'fact.</P>', '<P>John', 'Cusack', 'stars', 'as', 'Nick', 'Falzone,', 'a', 'New', 'York', 'area', 'air', 'traffic', 'controller', 'who,', 'according', 'to', 'himself,', '""pushes', 'tin""', 'better', 'than', 'any', 'of', 'his', 'colleagues.', 'His', 'marriage', 'to', 'Connie(Oscar', 'nominee', 'Cate', 'Blanchett)', 'is', 'working', 'out', 'fairly', 'nice,', 'and', 'he', ""doesn't"", 'let', 'the', 'fact', 'that', 'he', 'has', 'to', 'make', 'thousands', 'of', 'fateful', 'choices', 'every', 'day', 'bring', 'him', 'down.</P>', '<P>But', 'then', 'Russell', 'Bell(Billy', 'Bob', 'Thornton),', 'the', 'Marlboro', 'Man', 'of', 'air', 'traffic', 'control,', 'gets', 'shipped', 'from', 'his', 'southern', 'post', 'to', 'New', 'York.', 'An', 'intense', 'rivalry', 'between', 'Nick', 'and', 'Russell', 'begins.', 'Nick', 'begins', 'to', 'crush', 'on', ""Russell's"", 'young,', 'voluptuous,', 'alcoholic', 'wife', 'Mary(Angelina', 'Jolie),', 'while', 'Russell', 'starts', 'to', 'take', 'a', 'liking', 'to', 'Connie.', 'Nick', 'and', ""Russell's"", 'rivarly', 'ensues', 'during', 'work', 'and', 'at', 'home,', 'with', 'each', 'character', 'trying', 'to', 'outdo', 'each', 'other', 'so', 'intensely', 'that', 'they', 'end', 'up', 'trying', 'to', 'control', 'not', 'only', 'planes', 'but', 'their', 'own', 'lives.</P>', '<P>John', 'Cusack', 'is', 'fine', 'as', 'always', 'as', 'the', 'protagonist,', 'and', 'PUSHING', 'TIN', 'is', 'a', 'film', 'in', 'which', 'he', 'can', 'show', 'off', 'his', 'dramatic', 'and', 'comedic', 'chops.', 'It', 'has', 'been', 'a', 'while', 'since', ""Cusack's"", 'sarcasm', 'and', 'charisma', 'totally', 'shine', 'in', 'one', 'performance.</P>', '<P>Billy', 'Bob', 'Thornton', 'stays', 'low-key', 'during', 'most', 'of', 'the', 'film,', 'but', 'he', 'portrays', 'his', 'villain', 'nicely.', 'Thornton', 'is', 'indeed', 'talented,', 'but', ""I'd"", 'like', 'to', 'see', 'him', 'play', 'more', 'SLING', 'BLADE-type', 'roles', 'instead', 'of', 'being', 'typecast', 'as', 'a', 'southern', 'devil', 'who', 'just', 'happens', 'to', 'have', 'a', 'certain', 'amount', 'of', 'grace.</P>', '<P>Cate', ""Blanchett's"", 'performance,', 'though,', 'is', 'questionable.', 'First', 'of', 'all,', 'why', 'should', 'this', 'actress', 'of', 'tremendous', 'skill', 'be', 'miscast', 'in', 'her', 'first', 'American', 'role?', 'She', 'tries', 'hard', 'enough', 'to', 'perfect', 'a', 'New', 'York', 'drawl', 'but', 'her', 'Australian', 'voice', 'pops', 'through', 'one', 'too', 'many', 'times.', 'Blanchett', 'is', 'a', 'commanding', 'actress,', 'and', 'she', 'deserves', 'a', 'role', 'with', 'more', 'prowess.</P>', '<P>And', 'then', 'there', 'is', 'the', 'great', 'Jolie.', 'Angelina', 'Jolie.', 'There', 'is', 'nothing', 'that', 'special', 'about', 'her', 'performance', 'in', 'PUSHING', 'TIN(she', 'is', 'very', 'underused),', 'but', 'she', 'is', 'much', 'different', 'than', 'her', 'characted', 'in', 'PLAYING', 'BY', 'HEART,', 'so', 'I', 'guess', ""I'll"", 'say', 'that', 'she', 'shows', 'some', 'depth.', 'Seriously,', 'everyone', 'should', 'take', 'notice.', 'Angelina', 'Jolie', 'is', 'going', 'to', 'take', 'over', 'Hollywood.</P>', '<P>Director', 'Mike', 'Newell', 'has', 'shown', 'his', 'knack', 'for', 'drama(DONNIE', 'BRASCO)', 'and', 'comedy(FOUR', 'WEDDINGS', 'AND', 'A', 'FUNERAL),', 'and', 'PUSHING', 'TIN', 'gives', 'him', 'the', 'chance', 'to', 'combine', 'both.', 'For', 'the', 'most', 'part,', 'it', 'works', 'very', 'well,', 'but', 'the', 'last', '1/3', 'of', 'the', 'film', 'features', 'a', 'couple', 'plot', 'elements', 'that', 'are', 'too', 'contrived', 'to', 'take', 'seriously.', 'If', 'nothing', 'else,', 'Newell', 'has', 'provided', 'a', 'film', 'that', 'works', 'on', 'many', 'levels,', 'both', 'as', 'a', 'drama', 'and', 'a', 'comedy,', 'and', 'also', 'the', 'film', 'shows', 'us', 'very', 'interestingly', 'a', 'job', 'that', 'many', 'of', 'us', 'have', 'never', 'seen', 'or', 'even', 'thought', 'about.', 'PUSHING', 'TIN', 'is', 'also', 'partly', 'a', 'romance,', 'but', 'mostly', ""it's"", 'just', 'the', 'kind', 'of', 'film', 'you', 'want', 'to', 'see.', ""That's"", 'my', 'recommedation.</P>', '<P>a', 'review', 'by', 'Akiva', 'Gottlieb,', 'The', 'Teenage', 'Movie', 'Critic', '<A', 'HREF=""mailto:akiva@excite.com"">akiva@excite.com</A>', '<A', 'HREF=""http://www.angelfire.com/mo/film"">http://www.angelfire.com/mo/film</A>', 'watch', 'me', 'on', ""TBS'"", '""Dinner', 'And', 'A', 'Movie""', 'May', '21,', '8:05pm', 'EST</P>', '<P><HR>Get', 'your', 'free,', 'private', 'email', 'at', '<A', 'HREF=""http://mail.excite.com/"">http://mail.excite.com/</A></P>', '<HR><P', 'CLASS=flush><SMALL>The', 'review', 'above', 'was', 'posted', 'to', 'the', '<A', 'HREF=""news:rec.arts.movies.reviews"">rec.arts.movies.reviews</A>', 'newsgroup', '(<A', 'HREF=""news:de.rec.film.kritiken"">de.rec.film.kritiken</A>', 'for', 'German', 'reviews).<BR>', 'The', 'Internet', 'Movie', 'Database', 'accepts', 'no', 'responsibility', 'for', 'the', 'contents', 'of', 'the', 'review', 'and', 'has', 'no', 'editorial', 'control.', 'Unless', 'stated', 'otherwise,', 'the', 'copyright', 'belongs', 'to', 'the', 'author.<BR>', 'Please', 'direct', 'comments/criticisms', 'of', 'the', 'review', 'to', 'relevant', 'newsgroups.<BR>', 'Broken', 'URLs', 'inthe', 'reviews', 'are', 'the', 'responsibility', 'of', 'the', 'author.<BR>', 'The', 'formatting', 'of', 'the', 'review', 'is', 'likely', 'to', 'differ', 'from', 'the', 'original', 'due', 'to', 'ASCII', 'to', 'HTML', 'conversion.', '</SMALL></P>', '<P', 'ALIGN=CENTER>Related', 'links:', '<A', 'HREF=""/Reviews/"">index', 'of', 'all', 'rec.arts.movies.reviews', 'reviews</A></P>', '</P></BODY></HTML>', '```']",challenge not surrounded by ''': ,
"/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * ""License""); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

package com.jgeppert.struts2.bootstrap.showcase;

import com.opensymphony.xwork2.ActionSupport;
import org.apache.struts2.convention.annotation.ParentPackage;

@ParentPackage(value = ""showcase"")
public class Echo extends ActionSupport {

    private String echo;

    public String execute() throws Exception {

        addActionMessage(""Welcome ""+echo+""!"");

        return SUCCESS;
    }

    public String getEcho() {
        return echo;
    }

    public void setEcho(String echo) {
        this.echo = echo;
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Licensed', 'to', 'the', 'Apache', 'Software', 'Foundation', '(ASF)', 'under', 'one', '*', 'or', 'more', 'contributor', 'license', 'agreements.', 'See', 'the', 'NOTICE', 'file', '*', 'distributed', 'with', 'this', 'work', 'for', 'additional', 'information', '*', 'regarding', 'copyright', 'ownership.', 'The', 'ASF', 'licenses', 'this', 'file', '*', 'to', 'you', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '*', '""License"");', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', '*', 'with', 'the', 'License.', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', '*', 'software', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '*', '""AS', 'IS""', 'BASIS,', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', '*', 'KIND,', 'either', 'express', 'or', 'implied.', 'See', 'the', 'License', 'for', 'the', '*', 'specific', 'language', 'governing', 'permissions', 'and', 'limitations', '*', 'under', 'the', 'License.', '*/', 'package', 'com.jgeppert.struts2.bootstrap.showcase;', 'import', 'com.opensymphony.xwork2.ActionSupport;', 'import', 'org.apache.struts2.convention.annotation.ParentPackage;', '@ParentPackage(value', '=', '""showcase"")', 'public', 'class', 'Echo', 'extends', 'ActionSupport', '{', 'private', 'String', 'echo;', 'public', 'String', 'execute()', 'throws', 'Exception', '{', 'addActionMessage(""Welcome', '""+echo+""!"");', 'return', 'SUCCESS;', '}', 'public', 'String', 'getEcho()', '{', 'return', 'echo;', '}', 'public', 'void', 'setEcho(String', 'echo)', '{', 'this.echo', '=', 'echo;', '}', '}', '```']",challenge not surrounded by ''': ,
"ALTER TABLE event ADD COLUMN 
(
  unified_event_id 	INT UNSIGNED,
  unified_event_ref	INT UNSIGNED,
  unified_ref_time	DATETIME
);
UPDATE version SET version=""0.11"", installed = now();
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```ALTER', 'TABLE', 'event', 'ADD', 'COLUMN', '(', 'unified_event_id', 'INT', 'UNSIGNED,', 'unified_event_ref', 'INT', 'UNSIGNED,', 'unified_ref_time', 'DATETIME', ');', 'UPDATE', 'version', 'SET', 'version=""0.11"",', 'installed', '=', 'now();', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE html><!--
@license
Copyright (c) 2015 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
--><html><head>
  <meta charset=""UTF-8"">
  <title>demo-snippet tests</title>
  <meta name=""viewport"" content=""width=device-width, initial-scale=1.0, maximum-scale=1.0"">

  <script src=""../../webcomponentsjs/webcomponents-lite.js""></script>
  <script src=""../../web-component-tester/browser.js""></script>
  <link rel=""import"" href=""../demo-snippet.html"">
  <link rel=""import"" href=""../../paper-checkbox/paper-checkbox.html"">

</head>
<body>

  <test-fixture id=""empty-demo"">
    <template>
      <demo-snippet></demo-snippet>
    </template>
  </test-fixture>

  <test-fixture id=""native-demo"">
    <template>
      <demo-snippet>
        <template>
          <input disabled="""">
        </template>
      </demo-snippet>
    </template>
  </test-fixture>

  <test-fixture id=""custom-demo"">
    <template>
      <demo-snippet>
        <template>
          <paper-checkbox disabled=""""></paper-checkbox>
        </template>
      </demo-snippet>
    </template>
  </test-fixture>

  <test-fixture id=""demo-with-attributes"">
    <template>
      <demo-snippet>
        <template>
          <input type=""date"" disabled="""">
        </template>
      </demo-snippet>
    </template>
  </test-fixture>


  <script src=""basic.html.0.js""></script>


</body></html>","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'html><!--', '@license', 'Copyright', '(c)', '2015', 'The', 'Polymer', 'Project', 'Authors.', 'All', 'rights', 'reserved.', 'This', 'code', 'may', 'only', 'be', 'used', 'under', 'the', 'BSD', 'style', 'license', 'found', 'at', 'http://polymer.github.io/LICENSE.txt', 'The', 'complete', 'set', 'of', 'authors', 'may', 'be', 'found', 'at', 'http://polymer.github.io/AUTHORS.txt', 'The', 'complete', 'set', 'of', 'contributors', 'may', 'be', 'found', 'at', 'http://polymer.github.io/CONTRIBUTORS.txt', 'Code', 'distributed', 'by', 'Google', 'as', 'part', 'of', 'the', 'polymer', 'project', 'is', 'also', 'subject', 'to', 'an', 'additional', 'IP', 'rights', 'grant', 'found', 'at', 'http://polymer.github.io/PATENTS.txt', '--><html><head>', '<meta', 'charset=""UTF-8"">', '<title>demo-snippet', 'tests</title>', '<meta', 'name=""viewport""', 'content=""width=device-width,', 'initial-scale=1.0,', 'maximum-scale=1.0"">', '<script', 'src=""../../webcomponentsjs/webcomponents-lite.js""></script>', '<script', 'src=""../../web-component-tester/browser.js""></script>', '<link', 'rel=""import""', 'href=""../demo-snippet.html"">', '<link', 'rel=""import""', 'href=""../../paper-checkbox/paper-checkbox.html"">', '</head>', '<body>', '<test-fixture', 'id=""empty-demo"">', '<template>', '<demo-snippet></demo-snippet>', '</template>', '</test-fixture>', '<test-fixture', 'id=""native-demo"">', '<template>', '<demo-snippet>', '<template>', '<input', 'disabled="""">', '</template>', '</demo-snippet>', '</template>', '</test-fixture>', '<test-fixture', 'id=""custom-demo"">', '<template>', '<demo-snippet>', '<template>', '<paper-checkbox', 'disabled=""""></paper-checkbox>', '</template>', '</demo-snippet>', '</template>', '</test-fixture>', '<test-fixture', 'id=""demo-with-attributes"">', '<template>', '<demo-snippet>', '<template>', '<input', 'type=""date""', 'disabled="""">', '</template>', '</demo-snippet>', '</template>', '</test-fixture>', '<script', 'src=""basic.html.0.js""></script>', '</body></html>```']",challenge not surrounded by ''': ,
"<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN""
        ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
<html xmlns=""http://www.w3.org/1999/xhtml"" xml:lang=""en"" lang=""en"">
<head>
  <title>JavaScript unit test file</title>
  <meta http-equiv=""content-type"" content=""text/html; charset=utf-8"" />
  <script src=""../assets/jsunittest.js"" type=""text/javascript""></script>
  <script src=""../../src/js-strfdate_strfdate.js"" type=""text/javascript""></script>
  
  <link rel=""stylesheet"" href=""../assets/unittest.css"" type=""text/css"" />
</head>
<body>

<div id=""content"">

  <div id=""header"">
    <h1>JavaScript unit test file</h1>
    <p>
      This file tests <strong>js-strfdate.js</strong>.
    </p>
  </div>

  <!-- Log output (one per Runner, via {testLog: ""testlog""} option)-->
  <div id=""testlog""></div>
  
  <!-- Put sample/test html here -->
  <div id=""sample""></div>
</div>

<script type=""text/javascript"">
// <![CDATA[
var ourRunner = new Test.Unit.Runner({
  // replace this with your real tests
  setup: function() {
    
  },
  
  teardown: function() {
    
  },
  
  testTruth: function() { with(this) {
    assert(true);
  }},

  testCanDoMonth: function() { with(this) {
    a = new Date(2009, 05 -1, 31);	//javascript dates are 0=January, etc
		assertEqual( 5, a.getMonth() +1 );
    assertEqual( ""05"", a.strfdate(""%m"") );
  }},
  
  testCanDoMonthDateYear: function() { with(this) {
    a = new Date(2009, 05 -1, 05);
    assertEqual( ""05-05-2009"", a.strfdate(""%m-%d-%Y"") );
  }},

  testDoublePercentDoesEscapePercent: function() { with(this) {
		a = new Date(2009, 05 -1, 31);
		assertEqual( ""%"", a.strfdate(""%%"") );
		//alert(""ran"");
	}}
    
}, {testLog: ""testlog""}); 
// For each Test.UnitRunner instance, specify the element id where results will be
// published; e.g. <div id=""testlog""/> above.
// That is, you can have multiple ""new Test.Unit.Runner() { ... }"" on this page, just
// create more <div id=""testlog2""></div> etc, and pass the element id to the hash above:
// e.g. {testLog: ""testlog2""}
// ]]>
</script>

</body>
</html>","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'html', 'PUBLIC', '""-//W3C//DTD', 'XHTML', '1.0', 'Transitional//EN""', '""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">', '<html', 'xmlns=""http://www.w3.org/1999/xhtml""', 'xml:lang=""en""', 'lang=""en"">', '<head>', '<title>JavaScript', 'unit', 'test', 'file</title>', '<meta', 'http-equiv=""content-type""', 'content=""text/html;', 'charset=utf-8""', '/>', '<script', 'src=""../assets/jsunittest.js""', 'type=""text/javascript""></script>', '<script', 'src=""../../src/js-strfdate_strfdate.js""', 'type=""text/javascript""></script>', '<link', 'rel=""stylesheet""', 'href=""../assets/unittest.css""', 'type=""text/css""', '/>', '</head>', '<body>', '<div', 'id=""content"">', '<div', 'id=""header"">', '<h1>JavaScript', 'unit', 'test', 'file</h1>', '<p>', 'This', 'file', 'tests', '<strong>js-strfdate.js</strong>.', '</p>', '</div>', '<!--', 'Log', 'output', '(one', 'per', 'Runner,', 'via', '{testLog:', '""testlog""}', 'option)-->', '<div', 'id=""testlog""></div>', '<!--', 'Put', 'sample/test', 'html', 'here', '-->', '<div', 'id=""sample""></div>', '</div>', '<script', 'type=""text/javascript"">', '//', '<![CDATA[', 'var', 'ourRunner', '=', 'new', 'Test.Unit.Runner({', '//', 'replace', 'this', 'with', 'your', 'real', 'tests', 'setup:', 'function()', '{', '},', 'teardown:', 'function()', '{', '},', 'testTruth:', 'function()', '{', 'with(this)', '{', 'assert(true);', '}},', 'testCanDoMonth:', 'function()', '{', 'with(this)', '{', 'a', '=', 'new', 'Date(2009,', '05', '-1,', '31);', '//javascript', 'dates', 'are', '0=January,', 'etc', 'assertEqual(', '5,', 'a.getMonth()', '+1', ');', 'assertEqual(', '""05"",', 'a.strfdate(""%m"")', ');', '}},', 'testCanDoMonthDateYear:', 'function()', '{', 'with(this)', '{', 'a', '=', 'new', 'Date(2009,', '05', '-1,', '05);', 'assertEqual(', '""05-05-2009"",', 'a.strfdate(""%m-%d-%Y"")', ');', '}},', 'testDoublePercentDoesEscapePercent:', 'function()', '{', 'with(this)', '{', 'a', '=', 'new', 'Date(2009,', '05', '-1,', '31);', 'assertEqual(', '""%"",', 'a.strfdate(""%%"")', ');', '//alert(""ran"");', '}}', '},', '{testLog:', '""testlog""});', '//', 'For', 'each', 'Test.UnitRunner', 'instance,', 'specify', 'the', 'element', 'id', 'where', 'results', 'will', 'be', '//', 'published;', 'e.g.', '<div', 'id=""testlog""/>', 'above.', '//', 'That', 'is,', 'you', 'can', 'have', 'multiple', '""new', 'Test.Unit.Runner()', '{', '...', '}""', 'on', 'this', 'page,', 'just', '//', 'create', 'more', '<div', 'id=""testlog2""></div>', 'etc,', 'and', 'pass', 'the', 'element', 'id', 'to', 'the', 'hash', 'above:', '//', 'e.g.', '{testLog:', '""testlog2""}', '//', ']]>', '</script>', '</body>', '</html>```']",challenge not surrounded by ''': ,
"/*
 * Copyright 2000-2016 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.siyeh.ipp.junit;

import com.siyeh.IntentionPowerPackBundle;
import com.siyeh.ipp.IPPTestCase;

/**
 * @see com.siyeh.ipp.junit.ReplaceAssertLiteralWithAssertEqualsIntention
 * @author Bas Leijdekkers
 */
public class ReplaceAssertLiteralWithAssertEqualsIntentionTest extends IPPTestCase {

  public void testOutsideTestMethod() { doTest(); }

  @Override
  protected void setUp() throws Exception {
    super.setUp();
    myFixture.addClass(""package org.junit;"" +
                       ""public class Assert {"" +
                       ""  static public void assertNull(Object actual) {}"" +
                       ""  static public void assertEquals(Object expected, Object actual) {}"" +
                       ""}"");
  }

  @Override
  protected String getRelativePath() {
    return ""junit/replace_assert_literal_with_assert_equals"";
  }

  @Override
  protected String getIntentionName() {
    return IntentionPowerPackBundle.message(""replace.assert.literal.with.assert.equals.intention.name"", ""assertNull"", ""null"");
  }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '2000-2016', 'JetBrains', 's.r.o.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'com.siyeh.ipp.junit;', 'import', 'com.siyeh.IntentionPowerPackBundle;', 'import', 'com.siyeh.ipp.IPPTestCase;', '/**', '*', '@see', 'com.siyeh.ipp.junit.ReplaceAssertLiteralWithAssertEqualsIntention', '*', '@author', 'Bas', 'Leijdekkers', '*/', 'public', 'class', 'ReplaceAssertLiteralWithAssertEqualsIntentionTest', 'extends', 'IPPTestCase', '{', 'public', 'void', 'testOutsideTestMethod()', '{', 'doTest();', '}', '@Override', 'protected', 'void', 'setUp()', 'throws', 'Exception', '{', 'super.setUp();', 'myFixture.addClass(""package', 'org.junit;""', '+', '""public', 'class', 'Assert', '{""', '+', '""', 'static', 'public', 'void', 'assertNull(Object', 'actual)', '{}""', '+', '""', 'static', 'public', 'void', 'assertEquals(Object', 'expected,', 'Object', 'actual)', '{}""', '+', '""}"");', '}', '@Override', 'protected', 'String', 'getRelativePath()', '{', 'return', '""junit/replace_assert_literal_with_assert_equals"";', '}', '@Override', 'protected', 'String', 'getIntentionName()', '{', 'return', 'IntentionPowerPackBundle.message(""replace.assert.literal.with.assert.equals.intention.name"",', '""assertNull"",', '""null"");', '}', '}', '```']",challenge not surrounded by ''': ,
"package com.supermap.desktop.newtheme.guidPanel;

import com.supermap.desktop.mapview.MapViewProperties;
import com.supermap.desktop.newtheme.commonUtils.ThemeGuideFactory;
import com.supermap.desktop.ui.controls.InternalImageIconFactory;

import javax.swing.*;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

public class GridRangeThemePanel extends JPanel {
	private static final long serialVersionUID = 1L;
	private transient ThemeGuidDialog themeGuidDialog;
	private ThemeLabelDecorator labelGridRangeTheme;
	private LocalMouseListener localMouseListener = new LocalMouseListener();

	public GridRangeThemePanel(ThemeGuidDialog themeGuidDialog) {
		this.themeGuidDialog = themeGuidDialog;
		initComponents();
		registListener();
	}

	private void initComponents() {
		// @formatter:off
		this.labelGridRangeTheme = new ThemeLabelDecorator(InternalImageIconFactory.THEMEGUIDE_GRIDRANGE,MapViewProperties.getString(""String_Default""));
		this.labelGridRangeTheme.selected(true);
		this.setBackground(Color.WHITE);
		this.setBorder(new LineBorder(Color.LIGHT_GRAY));
		GroupLayout groupLayout = new GroupLayout(this);
		groupLayout.setHorizontalGroup(groupLayout.createParallelGroup(Alignment.LEADING).addGroup(
				groupLayout.createSequentialGroup().addComponent(labelGridRangeTheme).addContainerGap(160, Short.MAX_VALUE)));
		groupLayout.setVerticalGroup(groupLayout.createParallelGroup(Alignment.LEADING).addGroup(
				groupLayout.createSequentialGroup().addComponent(labelGridRangeTheme).addContainerGap(240, Short.MAX_VALUE)));
		setLayout(groupLayout);
		// @formatter:on
	}

	/**
	 * 注册事件
	 */
	private void registListener() {
		this.labelGridRangeTheme.addMouseListener(this.localMouseListener);
	}

	public void unregistListener() {
		this.labelGridRangeTheme.removeMouseListener(this.localMouseListener);
	}

	class LocalMouseListener extends MouseAdapter {

		@Override
		public void mouseClicked(MouseEvent e) {
			if (e.getClickCount() == 2) {
				// 单值专题图
				ThemeGuideFactory.buildGridRangeTheme();
				themeGuidDialog.dispose();
				unregistListener();
			}
		}
	}
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.supermap.desktop.newtheme.guidPanel;', 'import', 'com.supermap.desktop.mapview.MapViewProperties;', 'import', 'com.supermap.desktop.newtheme.commonUtils.ThemeGuideFactory;', 'import', 'com.supermap.desktop.ui.controls.InternalImageIconFactory;', 'import', 'javax.swing.*;', 'import', 'javax.swing.GroupLayout.Alignment;', 'import', 'javax.swing.border.LineBorder;', 'import', 'java.awt.*;', 'import', 'java.awt.event.MouseAdapter;', 'import', 'java.awt.event.MouseEvent;', 'public', 'class', 'GridRangeThemePanel', 'extends', 'JPanel', '{', 'private', 'static', 'final', 'long', 'serialVersionUID', '=', '1L;', 'private', 'transient', 'ThemeGuidDialog', 'themeGuidDialog;', 'private', 'ThemeLabelDecorator', 'labelGridRangeTheme;', 'private', 'LocalMouseListener', 'localMouseListener', '=', 'new', 'LocalMouseListener();', 'public', 'GridRangeThemePanel(ThemeGuidDialog', 'themeGuidDialog)', '{', 'this.themeGuidDialog', '=', 'themeGuidDialog;', 'initComponents();', 'registListener();', '}', 'private', 'void', 'initComponents()', '{', '//', '@formatter:off', 'this.labelGridRangeTheme', '=', 'new', 'ThemeLabelDecorator(InternalImageIconFactory.THEMEGUIDE_GRIDRANGE,MapViewProperties.getString(""String_Default""));', 'this.labelGridRangeTheme.selected(true);', 'this.setBackground(Color.WHITE);', 'this.setBorder(new', 'LineBorder(Color.LIGHT_GRAY));', 'GroupLayout', 'groupLayout', '=', 'new', 'GroupLayout(this);', 'groupLayout.setHorizontalGroup(groupLayout.createParallelGroup(Alignment.LEADING).addGroup(', 'groupLayout.createSequentialGroup().addComponent(labelGridRangeTheme).addContainerGap(160,', 'Short.MAX_VALUE)));', 'groupLayout.setVerticalGroup(groupLayout.createParallelGroup(Alignment.LEADING).addGroup(', 'groupLayout.createSequentialGroup().addComponent(labelGridRangeTheme).addContainerGap(240,', 'Short.MAX_VALUE)));', 'setLayout(groupLayout);', '//', '@formatter:on', '}', '/**', '*', '注册事件', '*/', 'private', 'void', 'registListener()', '{', 'this.labelGridRangeTheme.addMouseListener(this.localMouseListener);', '}', 'public', 'void', 'unregistListener()', '{', 'this.labelGridRangeTheme.removeMouseListener(this.localMouseListener);', '}', 'class', 'LocalMouseListener', 'extends', 'MouseAdapter', '{', '@Override', 'public', 'void', 'mouseClicked(MouseEvent', 'e)', '{', 'if', '(e.getClickCount()', '==', '2)', '{', '//', '单值专题图', 'ThemeGuideFactory.buildGridRangeTheme();', 'themeGuidDialog.dispose();', 'unregistListener();', '}', '}', '}', '}', '```']",challenge not surrounded by ''': ,
"import sys
from services.spawn import MobileTemplate
from services.spawn import WeaponTemplate
from resources.datatables import WeaponType
from resources.datatables import Difficulty
from resources.datatables import Options
from java.util import Vector


def addTemplate(core):
	mobileTemplate = MobileTemplate()
	
	mobileTemplate.setCreatureName('')
	mobileTemplate.setCustomName('Baritha')
	mobileTemplate.setLevel(81)
	mobileTemplate.setDifficulty(Difficulty.ELITE)

	mobileTemplate.setMinSpawnDistance(4)
	mobileTemplate.setMaxSpawnDistance(6)
	mobileTemplate.setSocialGroup('nightsister')
	mobileTemplate.setRespawnTime(300)
	mobileTemplate.setOptionsBitmask(Options.CONVERSABLE | Options.INVULNERABLE)
	
	templates = Vector()
	templates.add('object/mobile/shared_dressed_dathomir_nightsister_spellweaver.iff')
	mobileTemplate.setTemplates(templates)
	
	weaponTemplates = Vector()
	weapontemplate = WeaponTemplate('object/weapon/melee/sword/shared_sword_01.iff', WeaponType.ONEHANDEDMELEE, 1.0, 5, 'kinetic')
	weaponTemplates.add(weapontemplate)
	mobileTemplate.setWeaponTemplateVector(weaponTemplates)
	
	attacks = Vector()
	mobileTemplate.setDefaultAttack('meleehit')
	mobileTemplate.setAttacks(attacks)
	
	core.spawnService.addMobileTemplate('baritha', mobileTemplate)
	","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'sys', 'from', 'services.spawn', 'import', 'MobileTemplate', 'from', 'services.spawn', 'import', 'WeaponTemplate', 'from', 'resources.datatables', 'import', 'WeaponType', 'from', 'resources.datatables', 'import', 'Difficulty', 'from', 'resources.datatables', 'import', 'Options', 'from', 'java.util', 'import', 'Vector', 'def', 'addTemplate(core):', 'mobileTemplate', '=', 'MobileTemplate()', ""mobileTemplate.setCreatureName('')"", ""mobileTemplate.setCustomName('Baritha')"", 'mobileTemplate.setLevel(81)', 'mobileTemplate.setDifficulty(Difficulty.ELITE)', 'mobileTemplate.setMinSpawnDistance(4)', 'mobileTemplate.setMaxSpawnDistance(6)', ""mobileTemplate.setSocialGroup('nightsister')"", 'mobileTemplate.setRespawnTime(300)', 'mobileTemplate.setOptionsBitmask(Options.CONVERSABLE', '|', 'Options.INVULNERABLE)', 'templates', '=', 'Vector()', ""templates.add('object/mobile/shared_dressed_dathomir_nightsister_spellweaver.iff')"", 'mobileTemplate.setTemplates(templates)', 'weaponTemplates', '=', 'Vector()', 'weapontemplate', '=', ""WeaponTemplate('object/weapon/melee/sword/shared_sword_01.iff',"", 'WeaponType.ONEHANDEDMELEE,', '1.0,', '5,', ""'kinetic')"", 'weaponTemplates.add(weapontemplate)', 'mobileTemplate.setWeaponTemplateVector(weaponTemplates)', 'attacks', '=', 'Vector()', ""mobileTemplate.setDefaultAttack('meleehit')"", 'mobileTemplate.setAttacks(attacks)', ""core.spawnService.addMobileTemplate('baritha',"", 'mobileTemplate)', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright 2013 NGDATA nv
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.ngdata.hbaseindexer.parse.extract;

import static com.ngdata.hbaseindexer.parse.extract.ExtractTestUtil.assertByteArraysEquals;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertTrue;

import com.google.common.collect.Lists;
import com.ngdata.hbaseindexer.parse.ByteArrayExtractor;
import org.apache.hadoop.hbase.KeyValue;
import org.apache.hadoop.hbase.client.Result;
import org.apache.hadoop.hbase.util.Bytes;
import org.junit.Before;
import org.junit.Test;

import static com.ngdata.sep.impl.HBaseShims.newResultFromObject;

public class PrefixMatchingCellExtractorTest {

    private static final byte[] ROW = new byte[] { 1, 2, 3 };
    private static final byte[] COLFAM_A = Bytes.toBytes(""A"");
    private static final byte[] COLFAM_B = Bytes.toBytes(""B"");
    private static final byte[] QUALIFIER_A1 = Bytes.toBytes(""A1"");
    private static final byte[] QUALIFIER_A2 = Bytes.toBytes(""A2"");
    private static final byte[] QUALIFIER_B1 = Bytes.toBytes(""B1"");
    private static final byte[] VALUE_A1 = Bytes.toBytes(""value a1"");
    private static final byte[] VALUE_A2 = Bytes.toBytes(""value a2"");
    private static final byte[] VALUE_B1 = Bytes.toBytes(""value b1"");

    private Result result;

    @Before
    public void setUp() {
        KeyValue kvA1 = new KeyValue(ROW, COLFAM_A, QUALIFIER_A1, VALUE_A1);
        KeyValue kvA2 = new KeyValue(ROW, COLFAM_A, QUALIFIER_A2, VALUE_A2);
        KeyValue kvB1 = new KeyValue(ROW, COLFAM_B, QUALIFIER_B1, VALUE_B1);

        result = newResultFromObject(Lists.newArrayList((Object) kvA1, (Object) kvA2, (Object) kvB1));
    }

    @Test
    public void testExtract() {
        ByteArrayExtractor extractor = new PrefixMatchingCellExtractor(COLFAM_A, Bytes.toBytes(""A""));
        assertByteArraysEquals(Lists.newArrayList(VALUE_A1, VALUE_A2), extractor.extract(result));
    }

    @Test
    public void testExtract_EmptyPrefix() {
        ByteArrayExtractor extractor = new PrefixMatchingCellExtractor(COLFAM_A, new byte[0]);
        assertByteArraysEquals(Lists.newArrayList(VALUE_A1, VALUE_A2), extractor.extract(result));
    }

    @Test
    public void testExtract_FullCellName() {
        ByteArrayExtractor extractor = new PrefixMatchingCellExtractor(COLFAM_A, Bytes.toBytes(""A1""));
        assertByteArraysEquals(Lists.newArrayList(VALUE_A1), extractor.extract(result));
    }

    @Test
    public void testExtract_NoMatches() {
        ByteArrayExtractor extractor = new PrefixMatchingCellExtractor(COLFAM_A, Bytes.toBytes(""doesnt exist""));
        assertTrue(extractor.extract(result).isEmpty());
    }
    
    @Test
    public void testGetColumnQualifier() {
        assertNull(new PrefixMatchingCellExtractor(COLFAM_A, Bytes.toBytes(""A1"")).getColumnQualifier());
    }

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '2013', 'NGDATA', 'nv', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'com.ngdata.hbaseindexer.parse.extract;', 'import', 'static', 'com.ngdata.hbaseindexer.parse.extract.ExtractTestUtil.assertByteArraysEquals;', 'import', 'static', 'org.junit.Assert.assertNull;', 'import', 'static', 'org.junit.Assert.assertTrue;', 'import', 'com.google.common.collect.Lists;', 'import', 'com.ngdata.hbaseindexer.parse.ByteArrayExtractor;', 'import', 'org.apache.hadoop.hbase.KeyValue;', 'import', 'org.apache.hadoop.hbase.client.Result;', 'import', 'org.apache.hadoop.hbase.util.Bytes;', 'import', 'org.junit.Before;', 'import', 'org.junit.Test;', 'import', 'static', 'com.ngdata.sep.impl.HBaseShims.newResultFromObject;', 'public', 'class', 'PrefixMatchingCellExtractorTest', '{', 'private', 'static', 'final', 'byte[]', 'ROW', '=', 'new', 'byte[]', '{', '1,', '2,', '3', '};', 'private', 'static', 'final', 'byte[]', 'COLFAM_A', '=', 'Bytes.toBytes(""A"");', 'private', 'static', 'final', 'byte[]', 'COLFAM_B', '=', 'Bytes.toBytes(""B"");', 'private', 'static', 'final', 'byte[]', 'QUALIFIER_A1', '=', 'Bytes.toBytes(""A1"");', 'private', 'static', 'final', 'byte[]', 'QUALIFIER_A2', '=', 'Bytes.toBytes(""A2"");', 'private', 'static', 'final', 'byte[]', 'QUALIFIER_B1', '=', 'Bytes.toBytes(""B1"");', 'private', 'static', 'final', 'byte[]', 'VALUE_A1', '=', 'Bytes.toBytes(""value', 'a1"");', 'private', 'static', 'final', 'byte[]', 'VALUE_A2', '=', 'Bytes.toBytes(""value', 'a2"");', 'private', 'static', 'final', 'byte[]', 'VALUE_B1', '=', 'Bytes.toBytes(""value', 'b1"");', 'private', 'Result', 'result;', '@Before', 'public', 'void', 'setUp()', '{', 'KeyValue', 'kvA1', '=', 'new', 'KeyValue(ROW,', 'COLFAM_A,', 'QUALIFIER_A1,', 'VALUE_A1);', 'KeyValue', 'kvA2', '=', 'new', 'KeyValue(ROW,', 'COLFAM_A,', 'QUALIFIER_A2,', 'VALUE_A2);', 'KeyValue', 'kvB1', '=', 'new', 'KeyValue(ROW,', 'COLFAM_B,', 'QUALIFIER_B1,', 'VALUE_B1);', 'result', '=', 'newResultFromObject(Lists.newArrayList((Object)', 'kvA1,', '(Object)', 'kvA2,', '(Object)', 'kvB1));', '}', '@Test', 'public', 'void', 'testExtract()', '{', 'ByteArrayExtractor', 'extractor', '=', 'new', 'PrefixMatchingCellExtractor(COLFAM_A,', 'Bytes.toBytes(""A""));', 'assertByteArraysEquals(Lists.newArrayList(VALUE_A1,', 'VALUE_A2),', 'extractor.extract(result));', '}', '@Test', 'public', 'void', 'testExtract_EmptyPrefix()', '{', 'ByteArrayExtractor', 'extractor', '=', 'new', 'PrefixMatchingCellExtractor(COLFAM_A,', 'new', 'byte[0]);', 'assertByteArraysEquals(Lists.newArrayList(VALUE_A1,', 'VALUE_A2),', 'extractor.extract(result));', '}', '@Test', 'public', 'void', 'testExtract_FullCellName()', '{', 'ByteArrayExtractor', 'extractor', '=', 'new', 'PrefixMatchingCellExtractor(COLFAM_A,', 'Bytes.toBytes(""A1""));', 'assertByteArraysEquals(Lists.newArrayList(VALUE_A1),', 'extractor.extract(result));', '}', '@Test', 'public', 'void', 'testExtract_NoMatches()', '{', 'ByteArrayExtractor', 'extractor', '=', 'new', 'PrefixMatchingCellExtractor(COLFAM_A,', 'Bytes.toBytes(""doesnt', 'exist""));', 'assertTrue(extractor.extract(result).isEmpty());', '}', '@Test', 'public', 'void', 'testGetColumnQualifier()', '{', 'assertNull(new', 'PrefixMatchingCellExtractor(COLFAM_A,', 'Bytes.toBytes(""A1"")).getColumnQualifier());', '}', '}', '```']",challenge not surrounded by ''': ,
"
#include ""StdAfx.h""
#ifndef SHDTREEVIEWH
#include <windows.h>
#endif

#include <KFParams.h>

#define DBGH
#include <dbg.h>

#include <crtdbg.h>

//#include <shdhandler.h>
//#include <shdelem.h>

CKFParams::CKFParams()
{
	InitParams();
}

CKFParams::~CKFParams()
{
	DestroyObjs();
};

int CKFParams::InitParams()
{
//	int m_frameno;
//	int m_iparams[ KFPINUM ];
//	double m_dparams[ KFPDNUM ];

	m_frameno = -1;
	ZeroMemory( m_iparams, sizeof( int ) * KFPINUM );
	ZeroMemory( m_dparams, sizeof( double ) * KFPDNUM );

	return 0;
}
int CKFParams::DestroyObjs()
{

	return 0;
}


int CKFParams::SetIParam( int srcindex, int srcival )
{
	if( (srcindex < 0) || (srcindex >= KFPINUM) ){
		DbgOut( ""kfp : SetIParam : srcindex error !!!\n"" );
		_ASSERT( 0 );
		return 1;
	}

	m_iparams[ srcindex ] = srcival;

	return 0;
}
int CKFParams::SetDParam( int srcindex, double srcdval )
{
	if( (srcindex < 0) || (srcindex >= KFPINUM) ){
		DbgOut( ""kfp : SetDParam : srcindex error !!!\n"" );
		_ASSERT( 0 );
		return 1;
	}

	m_dparams[ srcindex ] = srcdval;

	return 0;
}

","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```', '#include', '""StdAfx.h""', '#ifndef', 'SHDTREEVIEWH', '#include', '<windows.h>', '#endif', '#include', '<KFParams.h>', '#define', 'DBGH', '#include', '<dbg.h>', '#include', '<crtdbg.h>', '//#include', '<shdhandler.h>', '//#include', '<shdelem.h>', 'CKFParams::CKFParams()', '{', 'InitParams();', '}', 'CKFParams::~CKFParams()', '{', 'DestroyObjs();', '};', 'int', 'CKFParams::InitParams()', '{', '//', 'int', 'm_frameno;', '//', 'int', 'm_iparams[', 'KFPINUM', '];', '//', 'double', 'm_dparams[', 'KFPDNUM', '];', 'm_frameno', '=', '-1;', 'ZeroMemory(', 'm_iparams,', 'sizeof(', 'int', ')', '*', 'KFPINUM', ');', 'ZeroMemory(', 'm_dparams,', 'sizeof(', 'double', ')', '*', 'KFPDNUM', ');', 'return', '0;', '}', 'int', 'CKFParams::DestroyObjs()', '{', 'return', '0;', '}', 'int', 'CKFParams::SetIParam(', 'int', 'srcindex,', 'int', 'srcival', ')', '{', 'if(', '(srcindex', '<', '0)', '||', '(srcindex', '>=', 'KFPINUM)', '){', 'DbgOut(', '""kfp', ':', 'SetIParam', ':', 'srcindex', 'error', '!!!\\n""', ');', '_ASSERT(', '0', ');', 'return', '1;', '}', 'm_iparams[', 'srcindex', ']', '=', 'srcival;', 'return', '0;', '}', 'int', 'CKFParams::SetDParam(', 'int', 'srcindex,', 'double', 'srcdval', ')', '{', 'if(', '(srcindex', '<', '0)', '||', '(srcindex', '>=', 'KFPINUM)', '){', 'DbgOut(', '""kfp', ':', 'SetDParam', ':', 'srcindex', 'error', '!!!\\n""', ');', '_ASSERT(', '0', ');', 'return', '1;', '}', 'm_dparams[', 'srcindex', ']', '=', 'srcdval;', 'return', '0;', '}', '```']",challenge not surrounded by ''': ,
"/**
 * <copyright>
 * </copyright>
 *
 * 
 */
package genericity.language.gbind.analysis;

public class GbindINTEGERTokenResolver implements genericity.language.gbind.IGbindTokenResolver {
	
	private genericity.language.gbind.analysis.GbindDefaultTokenResolver defaultTokenResolver = new genericity.language.gbind.analysis.GbindDefaultTokenResolver(true);
	
	public String deResolve(Object value, org.eclipse.emf.ecore.EStructuralFeature feature, org.eclipse.emf.ecore.EObject container) {
		// By default token de-resolving is delegated to the DefaultTokenResolver.
		String result = defaultTokenResolver.deResolve(value, feature, container, null, null, null);
		return result;
	}
	
	public void resolve(String lexem, org.eclipse.emf.ecore.EStructuralFeature feature, genericity.language.gbind.IGbindTokenResolveResult result) {
		// By default token resolving is delegated to the DefaultTokenResolver.
		defaultTokenResolver.resolve(lexem, feature, result, null, null, null);
	}
	
	public void setOptions(java.util.Map<?,?> options) {
		defaultTokenResolver.setOptions(options);
	}
	
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', '<copyright>', '*', '</copyright>', '*', '*', '*/', 'package', 'genericity.language.gbind.analysis;', 'public', 'class', 'GbindINTEGERTokenResolver', 'implements', 'genericity.language.gbind.IGbindTokenResolver', '{', 'private', 'genericity.language.gbind.analysis.GbindDefaultTokenResolver', 'defaultTokenResolver', '=', 'new', 'genericity.language.gbind.analysis.GbindDefaultTokenResolver(true);', 'public', 'String', 'deResolve(Object', 'value,', 'org.eclipse.emf.ecore.EStructuralFeature', 'feature,', 'org.eclipse.emf.ecore.EObject', 'container)', '{', '//', 'By', 'default', 'token', 'de-resolving', 'is', 'delegated', 'to', 'the', 'DefaultTokenResolver.', 'String', 'result', '=', 'defaultTokenResolver.deResolve(value,', 'feature,', 'container,', 'null,', 'null,', 'null);', 'return', 'result;', '}', 'public', 'void', 'resolve(String', 'lexem,', 'org.eclipse.emf.ecore.EStructuralFeature', 'feature,', 'genericity.language.gbind.IGbindTokenResolveResult', 'result)', '{', '//', 'By', 'default', 'token', 'resolving', 'is', 'delegated', 'to', 'the', 'DefaultTokenResolver.', 'defaultTokenResolver.resolve(lexem,', 'feature,', 'result,', 'null,', 'null,', 'null);', '}', 'public', 'void', 'setOptions(java.util.Map<?,?>', 'options)', '{', 'defaultTokenResolver.setOptions(options);', '}', '}', '```']",challenge not surrounded by ''': ,
"export const listOfPosts = (state) => {
    return state.posts
}

export const listOfFriends = (state) => {
    return state.friends 
}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```export', 'const', 'listOfPosts', '=', '(state)', '=>', '{', 'return', 'state.posts', '}', 'export', 'const', 'listOfFriends', '=', '(state)', '=>', '{', 'return', 'state.friends', '}```']",challenge not surrounded by ''': ,
"#!/usr/bin/env python
import os
import sys

if __name__ == ""__main__"":
    os.environ.setdefault(""DJANGO_SETTINGS_MODULE"", ""dwarehouse.settings"")

    from django.core.management import execute_from_command_line

    execute_from_command_line(sys.argv)
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/usr/bin/env', 'python', 'import', 'os', 'import', 'sys', 'if', '__name__', '==', '""__main__"":', 'os.environ.setdefault(""DJANGO_SETTINGS_MODULE"",', '""dwarehouse.settings"")', 'from', 'django.core.management', 'import', 'execute_from_command_line', 'execute_from_command_line(sys.argv)', '```']",challenge not surrounded by ''': ,
"import math
import itertools
import random

from app import *

import pygame
import animation
import color

class TivoliMaster(MasterApp):

  def __init__(self, owner):
    super().__init__(owner)

  def event(self, ev):
    if ev.type == pygame.KEYDOWN:
      if (ev.key == pygame.K_q):
        self.stop = True

  def run(self):
    return not self.stop



class TivoliSlave(SlaveApp):


  def __init__(self, owner):
    super().__init__(owner)
    self.clock = pygame.time.Clock()
    self.font = pygame.font.SysFont(""sans"", 16)

    # A terrible, animating background
    self.bspeed = 1200
    self.bcolors = itertools.cycle([ color.darken(c, 0.5) for c in color.RAINBOW])
    self.bblender = animation.Interpolate(next(self.bcolors), next(self.bcolors), self.bspeed)

    # Some text scrolling across the screen
    self.messages = itertools.cycle([
                      ""The kjoob is alive with the sound of silence!"",
                      ""There isn't much else to show, really."",
                      ""But let's do it anyway!""
                      ])
    self.message_text = next(self.messages)
    self.txpos = None
    self.txpos = None
    self.tcolor = (255, 255, 255)
    self.tperiod = 9000

    # The total width of the text message, one character at a time
    textwidth = 0
    for c in self.message_text:
      lbl = self.font.render(c, True, (1,1,1))
      textwidth += lbl.get_width()
    self.textwidth = textwidth

  def message(self, msg):
    return None

  def run(self, screen):
    self.clock.tick()

    # Smoothly changing background color
    bcolor = self.bblender.get()
    if (self.bblender.done()):
      # Pick a new destination color
      self.bblender = animation.Interpolate(bcolor, next(self.bcolors), self.bspeed)
    screen.fill(bcolor)

    # The scrolling text
    (w, h) = screen.get_size()
    if (self.txpos is None):
      # Initialize these values, now that we know the size of the window
      self.txpos = animation.Interpolate(w, -self.textwidth, self.tperiod)
      self.typos = h / 2
      self.tmagn = h / 6    # Sine wave magnitude
      self.tfreq = w / 2    # Sine wave frequency

    if (self.txpos.done()):
      self.message_text = next(self.messages)
      self.typos = (h / 2) * (0.5 + random.random())
      self.txpos.restart()

    xpos = self.txpos.get()
    for c in self.message_text:
      yoff = self.tmagn * math.sin(xpos * 2 * math.pi/ self.tfreq)
      label = self.font.render(c, True, self.tcolor)
      screen.blit(label, (xpos, self.typos + yoff))
      xpos += label.get_width()

    return not self.stop

App.register_app(TivoliMaster, TivoliSlave, name=""Tivoli"")
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'math', 'import', 'itertools', 'import', 'random', 'from', 'app', 'import', '*', 'import', 'pygame', 'import', 'animation', 'import', 'color', 'class', 'TivoliMaster(MasterApp):', 'def', '__init__(self,', 'owner):', 'super().__init__(owner)', 'def', 'event(self,', 'ev):', 'if', 'ev.type', '==', 'pygame.KEYDOWN:', 'if', '(ev.key', '==', 'pygame.K_q):', 'self.stop', '=', 'True', 'def', 'run(self):', 'return', 'not', 'self.stop', 'class', 'TivoliSlave(SlaveApp):', 'def', '__init__(self,', 'owner):', 'super().__init__(owner)', 'self.clock', '=', 'pygame.time.Clock()', 'self.font', '=', 'pygame.font.SysFont(""sans"",', '16)', '#', 'A', 'terrible,', 'animating', 'background', 'self.bspeed', '=', '1200', 'self.bcolors', '=', 'itertools.cycle([', 'color.darken(c,', '0.5)', 'for', 'c', 'in', 'color.RAINBOW])', 'self.bblender', '=', 'animation.Interpolate(next(self.bcolors),', 'next(self.bcolors),', 'self.bspeed)', '#', 'Some', 'text', 'scrolling', 'across', 'the', 'screen', 'self.messages', '=', 'itertools.cycle([', '""The', 'kjoob', 'is', 'alive', 'with', 'the', 'sound', 'of', 'silence!"",', '""There', ""isn't"", 'much', 'else', 'to', 'show,', 'really."",', '""But', ""let's"", 'do', 'it', 'anyway!""', '])', 'self.message_text', '=', 'next(self.messages)', 'self.txpos', '=', 'None', 'self.txpos', '=', 'None', 'self.tcolor', '=', '(255,', '255,', '255)', 'self.tperiod', '=', '9000', '#', 'The', 'total', 'width', 'of', 'the', 'text', 'message,', 'one', 'character', 'at', 'a', 'time', 'textwidth', '=', '0', 'for', 'c', 'in', 'self.message_text:', 'lbl', '=', 'self.font.render(c,', 'True,', '(1,1,1))', 'textwidth', '+=', 'lbl.get_width()', 'self.textwidth', '=', 'textwidth', 'def', 'message(self,', 'msg):', 'return', 'None', 'def', 'run(self,', 'screen):', 'self.clock.tick()', '#', 'Smoothly', 'changing', 'background', 'color', 'bcolor', '=', 'self.bblender.get()', 'if', '(self.bblender.done()):', '#', 'Pick', 'a', 'new', 'destination', 'color', 'self.bblender', '=', 'animation.Interpolate(bcolor,', 'next(self.bcolors),', 'self.bspeed)', 'screen.fill(bcolor)', '#', 'The', 'scrolling', 'text', '(w,', 'h)', '=', 'screen.get_size()', 'if', '(self.txpos', 'is', 'None):', '#', 'Initialize', 'these', 'values,', 'now', 'that', 'we', 'know', 'the', 'size', 'of', 'the', 'window', 'self.txpos', '=', 'animation.Interpolate(w,', '-self.textwidth,', 'self.tperiod)', 'self.typos', '=', 'h', '/', '2', 'self.tmagn', '=', 'h', '/', '6', '#', 'Sine', 'wave', 'magnitude', 'self.tfreq', '=', 'w', '/', '2', '#', 'Sine', 'wave', 'frequency', 'if', '(self.txpos.done()):', 'self.message_text', '=', 'next(self.messages)', 'self.typos', '=', '(h', '/', '2)', '*', '(0.5', '+', 'random.random())', 'self.txpos.restart()', 'xpos', '=', 'self.txpos.get()', 'for', 'c', 'in', 'self.message_text:', 'yoff', '=', 'self.tmagn', '*', 'math.sin(xpos', '*', '2', '*', 'math.pi/', 'self.tfreq)', 'label', '=', 'self.font.render(c,', 'True,', 'self.tcolor)', 'screen.blit(label,', '(xpos,', 'self.typos', '+', 'yoff))', 'xpos', '+=', 'label.get_width()', 'return', 'not', 'self.stop', 'App.register_app(TivoliMaster,', 'TivoliSlave,', 'name=""Tivoli"")', '```']",challenge not surrounded by ''': ,
"/**
 *  Copyright (c) 2012, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *  Licensed under the Apache License, Version 2.0 (the ""License"");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an ""AS IS"" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.wso2.carbon.ntask.core.impl;

import org.quartz.DisallowConcurrentExecution;

/**
 * This class is a Quartz Job implementation which simply extends the functionality of TaskQuartzJobAdapter,
 * to not to allow concurrent execution of tasks.
 */
@DisallowConcurrentExecution
public class NonConcurrentTaskQuartzJobAdapter extends TaskQuartzJobAdapter {

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', 'Copyright', '(c)', '2012,', 'WSO2', 'Inc.', '(http://www.wso2.org)', 'All', 'Rights', 'Reserved.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'org.wso2.carbon.ntask.core.impl;', 'import', 'org.quartz.DisallowConcurrentExecution;', '/**', '*', 'This', 'class', 'is', 'a', 'Quartz', 'Job', 'implementation', 'which', 'simply', 'extends', 'the', 'functionality', 'of', 'TaskQuartzJobAdapter,', '*', 'to', 'not', 'to', 'allow', 'concurrent', 'execution', 'of', 'tasks.', '*/', '@DisallowConcurrentExecution', 'public', 'class', 'NonConcurrentTaskQuartzJobAdapter', 'extends', 'TaskQuartzJobAdapter', '{', '}', '```']",challenge not surrounded by ''': ,
"<html>
<head>
<meta http-equiv=""Content-Type"" content=""text/html; charset=US-ASCII"">
<title>Struct template result&lt;This(Expr)&gt;</title>
<link rel=""stylesheet"" href=""../../../../../../doc/src/boostbook.css"" type=""text/css"">
<meta name=""generator"" content=""DocBook XSL Stylesheets V1.76.1"">
<link rel=""home"" href=""../../../../index.html"" title=""The Boost C++ Libraries BoostBook Documentation Subset"">
<link rel=""up"" href=""../child_c.html#id2737768"" title=""Description"">
<link rel=""prev"" href=""../child_c.html"" title=""Struct template child_c"">
<link rel=""next"" href=""../child.html"" title=""Struct template child"">
</head>
<body bgcolor=""white"" text=""black"" link=""#0000FF"" vlink=""#840084"" alink=""#0000FF"">
<table cellpadding=""2"" width=""100%""><tr>
<td valign=""top""><img alt=""Boost C++ Libraries"" width=""277"" height=""86"" src=""../../../../../../boost.png""></td>
<td align=""center""><a href=""../../../../../../index.html"">Home</a></td>
<td align=""center""><a href=""../../../../../../libs/libraries.htm"">Libraries</a></td>
<td align=""center""><a href=""http://www.boost.org/users/people.html"">People</a></td>
<td align=""center""><a href=""http://www.boost.org/users/faq.html"">FAQ</a></td>
<td align=""center""><a href=""../../../../../../more/index.htm"">More</a></td>
</tr></table>
<hr>
<div class=""spirit-nav"">
<a accesskey=""p"" href=""../child_c.html""><img src=""../../../../../../doc/src/images/prev.png"" alt=""Prev""></a><a accesskey=""u"" href=""../child_c.html#id2737768""><img src=""../../../../../../doc/src/images/up.png"" alt=""Up""></a><a accesskey=""h"" href=""../../../../index.html""><img src=""../../../../../../doc/src/images/home.png"" alt=""Home""></a><a accesskey=""n"" href=""../child.html""><img src=""../../../../../../doc/src/images/next.png"" alt=""Next""></a>
</div>
<div class=""refentry"">
<a name=""boost.proto.functional.child_c.result_This(Expr)_id1475409""></a><div class=""titlepage""></div>
<div class=""refnamediv"">
<h2><span class=""refentrytitle"">Struct template result&lt;This(Expr)&gt;</span></h2>
<p>boost::proto::functional::child_c::result&lt;This(Expr)&gt;</p>
</div>
<h2 xmlns:rev=""http://www.cs.rpi.edu/~gregod/boost/tools/doc/revision"" class=""refsynopsisdiv-title"">Synopsis</h2>
<div xmlns:rev=""http://www.cs.rpi.edu/~gregod/boost/tools/doc/revision"" class=""refsynopsisdiv""><pre class=""synopsis""><span class=""comment"">// In header: &lt;<a class=""link"" href=""../../../../proto/reference.html#header.boost.proto.traits_hpp"" title=""Header &lt;boost/proto/traits.hpp&gt;"">boost/proto/traits.hpp</a>&gt;

</span>
<span class=""keyword"">template</span><span class=""special"">&lt;</span><span class=""keyword"">typename</span> This<span class=""special"">,</span> <span class=""keyword"">typename</span> <a class=""link"" href=""../../../../Expr.html"" title=""Concept Expr"">Expr</a><span class=""special"">&gt;</span> 
<span class=""keyword"">struct</span> <a class=""link"" href=""result_This_Expr__id1475409.html"" title=""Struct template result&lt;This(Expr)&gt;"">result</a><span class=""special"">&lt;</span><span class=""identifier"">This</span><span class=""special"">(</span><span class=""identifier"">Expr</span><span class=""special"">)</span><span class=""special"">&gt;</span> <span class=""special"">:</span> <span class=""keyword""></span> <a class=""link"" href=""../../result_of/child_c.html"" title=""Struct template child_c"">proto::result_of::child_c</a>&lt; Expr, N &gt; <span class=""special"">{</span>
<span class=""special"">}</span><span class=""special"">;</span></pre></div>
</div>
<table xmlns:rev=""http://www.cs.rpi.edu/~gregod/boost/tools/doc/revision"" width=""100%""><tr>
<td align=""left""></td>
<td align=""right""><div class=""copyright-footer"">Copyright &#169; 2008 Eric Niebler<p>
        Distributed under the Boost Software License, Version 1.0. (See accompanying
        file LICENSE_1_0.txt or copy at <a href=""http://www.boost.org/LICENSE_1_0.txt"" target=""_top"">http://www.boost.org/LICENSE_1_0.txt</a>)
      </p>
</div></td>
</tr></table>
<hr>
<div class=""spirit-nav"">
<a accesskey=""p"" href=""../child_c.html""><img src=""../../../../../../doc/src/images/prev.png"" alt=""Prev""></a><a accesskey=""u"" href=""../child_c.html#id2737768""><img src=""../../../../../../doc/src/images/up.png"" alt=""Up""></a><a accesskey=""h"" href=""../../../../index.html""><img src=""../../../../../../doc/src/images/home.png"" alt=""Home""></a><a accesskey=""n"" href=""../child.html""><img src=""../../../../../../doc/src/images/next.png"" alt=""Next""></a>
</div>
</body>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<html>', '<head>', '<meta', 'http-equiv=""Content-Type""', 'content=""text/html;', 'charset=US-ASCII"">', '<title>Struct', 'template', 'result&lt;This(Expr)&gt;</title>', '<link', 'rel=""stylesheet""', 'href=""../../../../../../doc/src/boostbook.css""', 'type=""text/css"">', '<meta', 'name=""generator""', 'content=""DocBook', 'XSL', 'Stylesheets', 'V1.76.1"">', '<link', 'rel=""home""', 'href=""../../../../index.html""', 'title=""The', 'Boost', 'C++', 'Libraries', 'BoostBook', 'Documentation', 'Subset"">', '<link', 'rel=""up""', 'href=""../child_c.html#id2737768""', 'title=""Description"">', '<link', 'rel=""prev""', 'href=""../child_c.html""', 'title=""Struct', 'template', 'child_c"">', '<link', 'rel=""next""', 'href=""../child.html""', 'title=""Struct', 'template', 'child"">', '</head>', '<body', 'bgcolor=""white""', 'text=""black""', 'link=""#0000FF""', 'vlink=""#840084""', 'alink=""#0000FF"">', '<table', 'cellpadding=""2""', 'width=""100%""><tr>', '<td', 'valign=""top""><img', 'alt=""Boost', 'C++', 'Libraries""', 'width=""277""', 'height=""86""', 'src=""../../../../../../boost.png""></td>', '<td', 'align=""center""><a', 'href=""../../../../../../index.html"">Home</a></td>', '<td', 'align=""center""><a', 'href=""../../../../../../libs/libraries.htm"">Libraries</a></td>', '<td', 'align=""center""><a', 'href=""http://www.boost.org/users/people.html"">People</a></td>', '<td', 'align=""center""><a', 'href=""http://www.boost.org/users/faq.html"">FAQ</a></td>', '<td', 'align=""center""><a', 'href=""../../../../../../more/index.htm"">More</a></td>', '</tr></table>', '<hr>', '<div', 'class=""spirit-nav"">', '<a', 'accesskey=""p""', 'href=""../child_c.html""><img', 'src=""../../../../../../doc/src/images/prev.png""', 'alt=""Prev""></a><a', 'accesskey=""u""', 'href=""../child_c.html#id2737768""><img', 'src=""../../../../../../doc/src/images/up.png""', 'alt=""Up""></a><a', 'accesskey=""h""', 'href=""../../../../index.html""><img', 'src=""../../../../../../doc/src/images/home.png""', 'alt=""Home""></a><a', 'accesskey=""n""', 'href=""../child.html""><img', 'src=""../../../../../../doc/src/images/next.png""', 'alt=""Next""></a>', '</div>', '<div', 'class=""refentry"">', '<a', 'name=""boost.proto.functional.child_c.result_This(Expr)_id1475409""></a><div', 'class=""titlepage""></div>', '<div', 'class=""refnamediv"">', '<h2><span', 'class=""refentrytitle"">Struct', 'template', 'result&lt;This(Expr)&gt;</span></h2>', '<p>boost::proto::functional::child_c::result&lt;This(Expr)&gt;</p>', '</div>', '<h2', 'xmlns:rev=""http://www.cs.rpi.edu/~gregod/boost/tools/doc/revision""', 'class=""refsynopsisdiv-title"">Synopsis</h2>', '<div', 'xmlns:rev=""http://www.cs.rpi.edu/~gregod/boost/tools/doc/revision""', 'class=""refsynopsisdiv""><pre', 'class=""synopsis""><span', 'class=""comment"">//', 'In', 'header:', '&lt;<a', 'class=""link""', 'href=""../../../../proto/reference.html#header.boost.proto.traits_hpp""', 'title=""Header', '&lt;boost/proto/traits.hpp&gt;"">boost/proto/traits.hpp</a>&gt;', '</span>', '<span', 'class=""keyword"">template</span><span', 'class=""special"">&lt;</span><span', 'class=""keyword"">typename</span>', 'This<span', 'class=""special"">,</span>', '<span', 'class=""keyword"">typename</span>', '<a', 'class=""link""', 'href=""../../../../Expr.html""', 'title=""Concept', 'Expr"">Expr</a><span', 'class=""special"">&gt;</span>', '<span', 'class=""keyword"">struct</span>', '<a', 'class=""link""', 'href=""result_This_Expr__id1475409.html""', 'title=""Struct', 'template', 'result&lt;This(Expr)&gt;"">result</a><span', 'class=""special"">&lt;</span><span', 'class=""identifier"">This</span><span', 'class=""special"">(</span><span', 'class=""identifier"">Expr</span><span', 'class=""special"">)</span><span', 'class=""special"">&gt;</span>', '<span', 'class=""special"">:</span>', '<span', 'class=""keyword""></span>', '<a', 'class=""link""', 'href=""../../result_of/child_c.html""', 'title=""Struct', 'template', 'child_c"">proto::result_of::child_c</a>&lt;', 'Expr,', 'N', '&gt;', '<span', 'class=""special"">{</span>', '<span', 'class=""special"">}</span><span', 'class=""special"">;</span></pre></div>', '</div>', '<table', 'xmlns:rev=""http://www.cs.rpi.edu/~gregod/boost/tools/doc/revision""', 'width=""100%""><tr>', '<td', 'align=""left""></td>', '<td', 'align=""right""><div', 'class=""copyright-footer"">Copyright', '&#169;', '2008', 'Eric', 'Niebler<p>', 'Distributed', 'under', 'the', 'Boost', 'Software', 'License,', 'Version', '1.0.', '(See', 'accompanying', 'file', 'LICENSE_1_0.txt', 'or', 'copy', 'at', '<a', 'href=""http://www.boost.org/LICENSE_1_0.txt""', 'target=""_top"">http://www.boost.org/LICENSE_1_0.txt</a>)', '</p>', '</div></td>', '</tr></table>', '<hr>', '<div', 'class=""spirit-nav"">', '<a', 'accesskey=""p""', 'href=""../child_c.html""><img', 'src=""../../../../../../doc/src/images/prev.png""', 'alt=""Prev""></a><a', 'accesskey=""u""', 'href=""../child_c.html#id2737768""><img', 'src=""../../../../../../doc/src/images/up.png""', 'alt=""Up""></a><a', 'accesskey=""h""', 'href=""../../../../index.html""><img', 'src=""../../../../../../doc/src/images/home.png""', 'alt=""Home""></a><a', 'accesskey=""n""', 'href=""../child.html""><img', 'src=""../../../../../../doc/src/images/next.png""', 'alt=""Next""></a>', '</div>', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"/********************************************************************
 * 2014 -
 * open source under Apache License Version 2.0
 ********************************************************************/
/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * ""License""); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#include ""RpcConfig.h""

#include <vector>

namespace Hdfs {
namespace Internal {

size_t RpcConfig::hash_value() const {
    size_t values[] = { Int32Hasher(maxIdleTime), Int32Hasher(pingTimeout),
                        Int32Hasher(connectTimeout), Int32Hasher(readTimeout), Int32Hasher(
                            writeTimeout), Int32Hasher(maxRetryOnConnect), Int32Hasher(
                            lingerTimeout), Int32Hasher(rpcTimeout), BoolHasher(tcpNoDelay)
                      };
    return CombineHasher(values, sizeof(values) / sizeof(values[0]));
}

}
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/********************************************************************', '*', '2014', '-', '*', 'open', 'source', 'under', 'Apache', 'License', 'Version', '2.0', '********************************************************************/', '/**', '*', 'Licensed', 'to', 'the', 'Apache', 'Software', 'Foundation', '(ASF)', 'under', 'one', '*', 'or', 'more', 'contributor', 'license', 'agreements.', 'See', 'the', 'NOTICE', 'file', '*', 'distributed', 'with', 'this', 'work', 'for', 'additional', 'information', '*', 'regarding', 'copyright', 'ownership.', 'The', 'ASF', 'licenses', 'this', 'file', '*', 'to', 'you', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '*', '""License"");', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', '*', 'with', 'the', 'License.', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', '#include', '""RpcConfig.h""', '#include', '<vector>', 'namespace', 'Hdfs', '{', 'namespace', 'Internal', '{', 'size_t', 'RpcConfig::hash_value()', 'const', '{', 'size_t', 'values[]', '=', '{', 'Int32Hasher(maxIdleTime),', 'Int32Hasher(pingTimeout),', 'Int32Hasher(connectTimeout),', 'Int32Hasher(readTimeout),', 'Int32Hasher(', 'writeTimeout),', 'Int32Hasher(maxRetryOnConnect),', 'Int32Hasher(', 'lingerTimeout),', 'Int32Hasher(rpcTimeout),', 'BoolHasher(tcpNoDelay)', '};', 'return', 'CombineHasher(values,', 'sizeof(values)', '/', 'sizeof(values[0]));', '}', '}', '}', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright (c) 2019, Oracle and/or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Oracle designates this
 * particular file as subject to the ""Classpath"" exception as provided
 * by Oracle in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 */
package org.graalvm.compiler.phases.common.util;

import org.graalvm.compiler.debug.TTY;
import org.graalvm.compiler.graph.Graph.NodeEvent;
import org.graalvm.compiler.graph.Graph.NodeEventListener;
import org.graalvm.compiler.graph.Node;

/**
 * A simple {@link NodeEventListener} implementation that traces events to TTY for debugging
 * purposes.
 */
public class TracingNodeEventListener extends NodeEventListener {

    @Override
    public void changed(NodeEvent e, Node node) {
        TTY.println(e.toString() + "": "" + node);
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '(c)', '2019,', 'Oracle', 'and/or', 'its', 'affiliates.', 'All', 'rights', 'reserved.', '*', 'DO', 'NOT', 'ALTER', 'OR', 'REMOVE', 'COPYRIGHT', 'NOTICES', 'OR', 'THIS', 'FILE', 'HEADER.', '*', '*', 'This', 'code', 'is', 'free', 'software;', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', 'it', '*', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'version', '2', 'only,', 'as', '*', 'published', 'by', 'the', 'Free', 'Software', 'Foundation.', 'Oracle', 'designates', 'this', '*', 'particular', 'file', 'as', 'subject', 'to', 'the', '""Classpath""', 'exception', 'as', 'provided', '*', 'by', 'Oracle', 'in', 'the', 'LICENSE', 'file', 'that', 'accompanied', 'this', 'code.', '*', '*', 'This', 'code', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', 'but', 'WITHOUT', '*', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', 'MERCHANTABILITY', 'or', '*', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', 'GNU', 'General', 'Public', 'License', '*', 'version', '2', 'for', 'more', 'details', '(a', 'copy', 'is', 'included', 'in', 'the', 'LICENSE', 'file', 'that', '*', 'accompanied', 'this', 'code).', '*', '*', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'version', '*', '2', 'along', 'with', 'this', 'work;', 'if', 'not,', 'write', 'to', 'the', 'Free', 'Software', 'Foundation,', '*', 'Inc.,', '51', 'Franklin', 'St,', 'Fifth', 'Floor,', 'Boston,', 'MA', '02110-1301', 'USA.', '*', '*', 'Please', 'contact', 'Oracle,', '500', 'Oracle', 'Parkway,', 'Redwood', 'Shores,', 'CA', '94065', 'USA', '*', 'or', 'visit', 'www.oracle.com', 'if', 'you', 'need', 'additional', 'information', 'or', 'have', 'any', '*', 'questions.', '*/', 'package', 'org.graalvm.compiler.phases.common.util;', 'import', 'org.graalvm.compiler.debug.TTY;', 'import', 'org.graalvm.compiler.graph.Graph.NodeEvent;', 'import', 'org.graalvm.compiler.graph.Graph.NodeEventListener;', 'import', 'org.graalvm.compiler.graph.Node;', '/**', '*', 'A', 'simple', '{@link', 'NodeEventListener}', 'implementation', 'that', 'traces', 'events', 'to', 'TTY', 'for', 'debugging', '*', 'purposes.', '*/', 'public', 'class', 'TracingNodeEventListener', 'extends', 'NodeEventListener', '{', '@Override', 'public', 'void', 'changed(NodeEvent', 'e,', 'Node', 'node)', '{', 'TTY.println(e.toString()', '+', '"":', '""', '+', 'node);', '}', '}', '```']",challenge not surrounded by ''': ,
"/*
 *  Copyright 2012 Eric F. Savage, code@efsavage.com
 *
 *   Licensed under the Apache License, Version 2.0 (the ""License"");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an ""AS IS"" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 */
package com.ajah.spring.jdbc.err;

/**
 * This is thrown when an insert or update would violate a unique key.
 * 
 * @author <a href=""http://efsavage.com"">Eric F. Savage</a>, <a
 *         href=""mailto:code@efsavage.com"">code@efsavage.com</a>.
 */
public class DuplicateKeyException extends DataOperationException {

	/**
	 * @see DataOperationException#DataOperationException(Throwable)
	 */
	public DuplicateKeyException(final Throwable cause) {
		super(cause);
	}

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '2012', 'Eric', 'F.', 'Savage,', 'code@efsavage.com', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'com.ajah.spring.jdbc.err;', '/**', '*', 'This', 'is', 'thrown', 'when', 'an', 'insert', 'or', 'update', 'would', 'violate', 'a', 'unique', 'key.', '*', '*', '@author', '<a', 'href=""http://efsavage.com"">Eric', 'F.', 'Savage</a>,', '<a', '*', 'href=""mailto:code@efsavage.com"">code@efsavage.com</a>.', '*/', 'public', 'class', 'DuplicateKeyException', 'extends', 'DataOperationException', '{', '/**', '*', '@see', 'DataOperationException#DataOperationException(Throwable)', '*/', 'public', 'DuplicateKeyException(final', 'Throwable', 'cause)', '{', 'super(cause);', '}', '}', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright 2013-2017 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.cloudfoundry.operations.routes;

/**
 * What level to query for routes at
 */
public enum Level {

    /**
     * List routes for all the spaces in the current organisation
     */
    ORGANIZATION,

    /**
     * List routes for the current space in the current organisation
     */
    SPACE

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '2013-2017', 'the', 'original', 'author', 'or', 'authors.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'org.cloudfoundry.operations.routes;', '/**', '*', 'What', 'level', 'to', 'query', 'for', 'routes', 'at', '*/', 'public', 'enum', 'Level', '{', '/**', '*', 'List', 'routes', 'for', 'all', 'the', 'spaces', 'in', 'the', 'current', 'organisation', '*/', 'ORGANIZATION,', '/**', '*', 'List', 'routes', 'for', 'the', 'current', 'space', 'in', 'the', 'current', 'organisation', '*/', 'SPACE', '}', '```']",challenge not surrounded by ''': ,
"function subscribe(){


$('.error').fadeOut('slow'); 
		var error = false;
		var activate;
		
		var firstname = $('input#firstname').val(); 
		if(firstname == """" || firstname == "" "") {
			$('#err-fname').fadeIn('slow'); 
			error = true; 
		}
		
		var lastname = $('input#lastname').val(); 
		if(lastname == """" || lastname == "" "") {
			$('#err-lname').fadeIn('slow'); 
			error = true; 
		}

		var email_compare = /^([a-z0-9_.-]+)@([da-z.-]+).([a-z.]{2,6})$/; 
		var email = $('input#email').val(); 
		if (email == """" || email == "" "") { 
			$('#err-email').fadeIn('slow'); 
			error = true;
		}else if (!email_compare.test(email)) { 
			$('#err-emailvld').fadeIn('slow'); 
			error = true;
		}
		
		/*var mobile = $('input#mobile').val(); 
		if(mobile == """" || mobile == "" "") {
			$('#err-mobile').fadeIn('slow'); 
			error = true; 
		}*/
		
		
		if(error != true){
		/*jQuery.post(the_ajax_script.ajaxurl, jQuery(""#ajax-form"").serialize(),*/
		$.post(""http://email.somagazine.co.uk/interface/list.php"", $(""#ajax-form"").serialize());
		}

/*function(response_from_the_action_function){
jQuery(""#ajaxsuccess"").html(response_from_the_action_function);
}*/
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```function', 'subscribe(){', ""$('.error').fadeOut('slow');"", 'var', 'error', '=', 'false;', 'var', 'activate;', 'var', 'firstname', '=', ""$('input#firstname').val();"", 'if(firstname', '==', '""""', '||', 'firstname', '==', '""', '"")', '{', ""$('#err-fname').fadeIn('slow');"", 'error', '=', 'true;', '}', 'var', 'lastname', '=', ""$('input#lastname').val();"", 'if(lastname', '==', '""""', '||', 'lastname', '==', '""', '"")', '{', ""$('#err-lname').fadeIn('slow');"", 'error', '=', 'true;', '}', 'var', 'email_compare', '=', '/^([a-z0-9_.-]+)@([da-z.-]+).([a-z.]{2,6})$/;', 'var', 'email', '=', ""$('input#email').val();"", 'if', '(email', '==', '""""', '||', 'email', '==', '""', '"")', '{', ""$('#err-email').fadeIn('slow');"", 'error', '=', 'true;', '}else', 'if', '(!email_compare.test(email))', '{', ""$('#err-emailvld').fadeIn('slow');"", 'error', '=', 'true;', '}', '/*var', 'mobile', '=', ""$('input#mobile').val();"", 'if(mobile', '==', '""""', '||', 'mobile', '==', '""', '"")', '{', ""$('#err-mobile').fadeIn('slow');"", 'error', '=', 'true;', '}*/', 'if(error', '!=', 'true){', '/*jQuery.post(the_ajax_script.ajaxurl,', 'jQuery(""#ajax-form"").serialize(),*/', '$.post(""http://email.somagazine.co.uk/interface/list.php"",', '$(""#ajax-form"").serialize());', '}', '/*function(response_from_the_action_function){', 'jQuery(""#ajaxsuccess"").html(response_from_the_action_function);', '}*/', '}', '```']",challenge not surrounded by ''': ,
"from match import match

class tolerable(object):
    """"""
    Tests if two paths agree by tolerable guidelines.
    """"""
    def __init__(self, overlap = 0.5, tolerance = 0.1, mistakes = 0):
        self.overlap = overlap
        self.tolerance = tolerance
        self.mistakes = mistakes

    def __call__(self, first, second):
        """"""
        Allows this object to be called as a function to invoke validation.
        """"""
        return self.validate(first, second)

    def validate(self, first, second):
        """"""
        Compares first to second to determine if they sufficiently agree.
        """"""
        matches = match(first, second,
                        lambda x, y: self.overlapcost(x, y))
        return sum(x[2] != 0 for x in matches) <= self.mistakes

    def overlapcost(self, first, second):
        """"""
        Computes the overlap cost between first and second. Both will be
        linearly filled.
        """"""
        firstboxes  = first.getboxes(interpolate = True)
        secondboxes = second.getboxes(interpolate = True)

        horrible = max(len(firstboxes), len(secondboxes)) + 1
        if first.label != second.label:
            return horrible
        if len(firstboxes) != len(secondboxes):
            return horrible

        cost = 0
        for f, s in zip(firstboxes, secondboxes):
            if f.lost != s.lost:
                cost += 1
            elif f.percentoverlap(s) < self.overlap:
                cost += 1
        return max(0, cost - float(len(firstboxes)) * self.tolerance)

    def __hash__(self):
        """"""
        Computes a hash for this type. Breaks duck typing because we hash on
        the type of the object as well.
        """"""
        return hash((type(self), self.overlap, self.tolerance, self.mistakes))

    def __eq__(self, other):
        """"""
        Checks equality between objects. Breaks duck typing because the types
        must now match.
        """"""
        try:
            return (self.overlap == other.overlap and
                    self.tolerance == other.tolerance and 
                    self.mistakes == other.mistakes and
                    type(self) is type(other))
        except AttributeError:
            return False

    def __ne__(self, other):
        """"""
        Checks inequality between classes. See __eq__().
        """"""
        return not (self == other)

    def __repr__(self):
        return ""tolerable({0}, {1}, {2})"".format(self.overlap,
                                                 self.tolerance,
                                                 self.mistakes)
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```from', 'match', 'import', 'match', 'class', 'tolerable(object):', '""""""', 'Tests', 'if', 'two', 'paths', 'agree', 'by', 'tolerable', 'guidelines.', '""""""', 'def', '__init__(self,', 'overlap', '=', '0.5,', 'tolerance', '=', '0.1,', 'mistakes', '=', '0):', 'self.overlap', '=', 'overlap', 'self.tolerance', '=', 'tolerance', 'self.mistakes', '=', 'mistakes', 'def', '__call__(self,', 'first,', 'second):', '""""""', 'Allows', 'this', 'object', 'to', 'be', 'called', 'as', 'a', 'function', 'to', 'invoke', 'validation.', '""""""', 'return', 'self.validate(first,', 'second)', 'def', 'validate(self,', 'first,', 'second):', '""""""', 'Compares', 'first', 'to', 'second', 'to', 'determine', 'if', 'they', 'sufficiently', 'agree.', '""""""', 'matches', '=', 'match(first,', 'second,', 'lambda', 'x,', 'y:', 'self.overlapcost(x,', 'y))', 'return', 'sum(x[2]', '!=', '0', 'for', 'x', 'in', 'matches)', '<=', 'self.mistakes', 'def', 'overlapcost(self,', 'first,', 'second):', '""""""', 'Computes', 'the', 'overlap', 'cost', 'between', 'first', 'and', 'second.', 'Both', 'will', 'be', 'linearly', 'filled.', '""""""', 'firstboxes', '=', 'first.getboxes(interpolate', '=', 'True)', 'secondboxes', '=', 'second.getboxes(interpolate', '=', 'True)', 'horrible', '=', 'max(len(firstboxes),', 'len(secondboxes))', '+', '1', 'if', 'first.label', '!=', 'second.label:', 'return', 'horrible', 'if', 'len(firstboxes)', '!=', 'len(secondboxes):', 'return', 'horrible', 'cost', '=', '0', 'for', 'f,', 's', 'in', 'zip(firstboxes,', 'secondboxes):', 'if', 'f.lost', '!=', 's.lost:', 'cost', '+=', '1', 'elif', 'f.percentoverlap(s)', '<', 'self.overlap:', 'cost', '+=', '1', 'return', 'max(0,', 'cost', '-', 'float(len(firstboxes))', '*', 'self.tolerance)', 'def', '__hash__(self):', '""""""', 'Computes', 'a', 'hash', 'for', 'this', 'type.', 'Breaks', 'duck', 'typing', 'because', 'we', 'hash', 'on', 'the', 'type', 'of', 'the', 'object', 'as', 'well.', '""""""', 'return', 'hash((type(self),', 'self.overlap,', 'self.tolerance,', 'self.mistakes))', 'def', '__eq__(self,', 'other):', '""""""', 'Checks', 'equality', 'between', 'objects.', 'Breaks', 'duck', 'typing', 'because', 'the', 'types', 'must', 'now', 'match.', '""""""', 'try:', 'return', '(self.overlap', '==', 'other.overlap', 'and', 'self.tolerance', '==', 'other.tolerance', 'and', 'self.mistakes', '==', 'other.mistakes', 'and', 'type(self)', 'is', 'type(other))', 'except', 'AttributeError:', 'return', 'False', 'def', '__ne__(self,', 'other):', '""""""', 'Checks', 'inequality', 'between', 'classes.', 'See', '__eq__().', '""""""', 'return', 'not', '(self', '==', 'other)', 'def', '__repr__(self):', 'return', '""tolerable({0},', '{1},', '{2})"".format(self.overlap,', 'self.tolerance,', 'self.mistakes)', '```']",challenge not surrounded by ''': ,
"/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * ""License""); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.apache.hadoop.hive.ql.ddl.view.materialized.update;

import org.apache.hadoop.hive.common.ValidTxnWriteIdList;
import org.apache.hadoop.hive.metastore.api.CreationMetadata;
import org.apache.hadoop.hive.metastore.utils.MetaStoreUtils;
import org.apache.hadoop.hive.ql.ddl.DDLOperation;
import org.apache.hadoop.hive.ql.ddl.DDLOperationContext;
import org.apache.hadoop.hive.ql.metadata.HiveException;
import org.apache.hadoop.hive.ql.metadata.HiveMaterializedViewsRegistry;
import org.apache.hadoop.hive.ql.metadata.Table;
import org.apache.hadoop.hive.ql.parse.ExplainConfiguration.AnalyzeState;

import com.google.common.collect.ImmutableSet;

/**
 * Operation process of updating a materialized view.
 */
public class MaterializedViewUpdateOperation extends DDLOperation<MaterializedViewUpdateDesc> {
  public MaterializedViewUpdateOperation(DDLOperationContext context, MaterializedViewUpdateDesc desc) {
    super(context, desc);
  }

  @Override
  public int execute() throws HiveException {
    if (context.getContext().getExplainAnalyze() == AnalyzeState.RUNNING) {
      return 0;
    }

    try {
      if (desc.isRetrieveAndInclude()) {
        Table mvTable = context.getDb().getTable(desc.getName());
        HiveMaterializedViewsRegistry.get().createMaterializedView(context.getDb().getConf(), mvTable);
      } else if (desc.isDisableRewrite()) {
        // Disabling rewriting, removing from cache
        String[] names = desc.getName().split(""\\."");
        HiveMaterializedViewsRegistry.get().dropMaterializedView(names[0], names[1]);
      } else if (desc.isUpdateCreationMetadata()) {
        // We need to update the status of the creation signature
        Table mvTable = context.getDb().getTable(desc.getName());
        CreationMetadata cm = new CreationMetadata(MetaStoreUtils.getDefaultCatalog(context.getConf()),
            mvTable.getDbName(), mvTable.getTableName(),
            ImmutableSet.copyOf(mvTable.getCreationMetadata().getTablesUsed()));
        cm.setValidTxnList(context.getConf().get(ValidTxnWriteIdList.VALID_TABLES_WRITEIDS_KEY));
        context.getDb().updateCreationMetadata(mvTable.getDbName(), mvTable.getTableName(), cm);
        mvTable.setCreationMetadata(cm);
        HiveMaterializedViewsRegistry.get().createMaterializedView(context.getDb().getConf(), mvTable);
      }
    } catch (HiveException e) {
      LOG.debug(""Exception during materialized view cache update"", e);
      context.getTask().setException(e);
    }

    return 0;
  }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Licensed', 'to', 'the', 'Apache', 'Software', 'Foundation', '(ASF)', 'under', 'one', '*', 'or', 'more', 'contributor', 'license', 'agreements.', 'See', 'the', 'NOTICE', 'file', '*', 'distributed', 'with', 'this', 'work', 'for', 'additional', 'information', '*', 'regarding', 'copyright', 'ownership.', 'The', 'ASF', 'licenses', 'this', 'file', '*', 'to', 'you', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '*', '""License"");', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', '*', 'with', 'the', 'License.', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'org.apache.hadoop.hive.ql.ddl.view.materialized.update;', 'import', 'org.apache.hadoop.hive.common.ValidTxnWriteIdList;', 'import', 'org.apache.hadoop.hive.metastore.api.CreationMetadata;', 'import', 'org.apache.hadoop.hive.metastore.utils.MetaStoreUtils;', 'import', 'org.apache.hadoop.hive.ql.ddl.DDLOperation;', 'import', 'org.apache.hadoop.hive.ql.ddl.DDLOperationContext;', 'import', 'org.apache.hadoop.hive.ql.metadata.HiveException;', 'import', 'org.apache.hadoop.hive.ql.metadata.HiveMaterializedViewsRegistry;', 'import', 'org.apache.hadoop.hive.ql.metadata.Table;', 'import', 'org.apache.hadoop.hive.ql.parse.ExplainConfiguration.AnalyzeState;', 'import', 'com.google.common.collect.ImmutableSet;', '/**', '*', 'Operation', 'process', 'of', 'updating', 'a', 'materialized', 'view.', '*/', 'public', 'class', 'MaterializedViewUpdateOperation', 'extends', 'DDLOperation<MaterializedViewUpdateDesc>', '{', 'public', 'MaterializedViewUpdateOperation(DDLOperationContext', 'context,', 'MaterializedViewUpdateDesc', 'desc)', '{', 'super(context,', 'desc);', '}', '@Override', 'public', 'int', 'execute()', 'throws', 'HiveException', '{', 'if', '(context.getContext().getExplainAnalyze()', '==', 'AnalyzeState.RUNNING)', '{', 'return', '0;', '}', 'try', '{', 'if', '(desc.isRetrieveAndInclude())', '{', 'Table', 'mvTable', '=', 'context.getDb().getTable(desc.getName());', 'HiveMaterializedViewsRegistry.get().createMaterializedView(context.getDb().getConf(),', 'mvTable);', '}', 'else', 'if', '(desc.isDisableRewrite())', '{', '//', 'Disabling', 'rewriting,', 'removing', 'from', 'cache', 'String[]', 'names', '=', 'desc.getName().split(""\\\\."");', 'HiveMaterializedViewsRegistry.get().dropMaterializedView(names[0],', 'names[1]);', '}', 'else', 'if', '(desc.isUpdateCreationMetadata())', '{', '//', 'We', 'need', 'to', 'update', 'the', 'status', 'of', 'the', 'creation', 'signature', 'Table', 'mvTable', '=', 'context.getDb().getTable(desc.getName());', 'CreationMetadata', 'cm', '=', 'new', 'CreationMetadata(MetaStoreUtils.getDefaultCatalog(context.getConf()),', 'mvTable.getDbName(),', 'mvTable.getTableName(),', 'ImmutableSet.copyOf(mvTable.getCreationMetadata().getTablesUsed()));', 'cm.setValidTxnList(context.getConf().get(ValidTxnWriteIdList.VALID_TABLES_WRITEIDS_KEY));', 'context.getDb().updateCreationMetadata(mvTable.getDbName(),', 'mvTable.getTableName(),', 'cm);', 'mvTable.setCreationMetadata(cm);', 'HiveMaterializedViewsRegistry.get().createMaterializedView(context.getDb().getConf(),', 'mvTable);', '}', '}', 'catch', '(HiveException', 'e)', '{', 'LOG.debug(""Exception', 'during', 'materialized', 'view', 'cache', 'update"",', 'e);', 'context.getTask().setException(e);', '}', 'return', '0;', '}', '}', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE html>
<html lang=""en"">
  <head>
    <meta charset=""utf-8"">
    <title>18 --> 19</title>
    <link href=""./../../assets/style.css"" rel=""stylesheet"">
  </head>
  <body>
    <h2>You have to be fast</h2>
    <a href=""./1cb16d2880f8bae80e935d84e0d60955ac25bc006494ce7c9cb4e982f5e38f2e.html"">Teleport</a>
    <hr>
    <a href=""./../../about.md"">About</a> (Spoilers! )
    <script src=""./../../assets/md5.js""></script>
    <script>
      window.currentLevel = 7;
    </script>
    <script src=""./../../assets/script.js""></script>
  </body>
</html>","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'html>', '<html', 'lang=""en"">', '<head>', '<meta', 'charset=""utf-8"">', '<title>18', '-->', '19</title>', '<link', 'href=""./../../assets/style.css""', 'rel=""stylesheet"">', '</head>', '<body>', '<h2>You', 'have', 'to', 'be', 'fast</h2>', '<a', 'href=""./1cb16d2880f8bae80e935d84e0d60955ac25bc006494ce7c9cb4e982f5e38f2e.html"">Teleport</a>', '<hr>', '<a', 'href=""./../../about.md"">About</a>', '(Spoilers!', ')', '<script', 'src=""./../../assets/md5.js""></script>', '<script>', 'window.currentLevel', '=', '7;', '</script>', '<script', 'src=""./../../assets/script.js""></script>', '</body>', '</html>```']",challenge not surrounded by ''': ,
"from setuptools import setup, find_packages
from pkg_resources import Requirement, resource_filename
import os

filename = resource_filename(Requirement.parse(""hook""), ""default.yml"")

setup(
    name = ""hook"",
    version = ""0.0.2"",

    author = ""Sam Sherar"",
    author_email = ""sbsherar@gmail.com"",
    license = ""MIT license"",
    url = ""https://github.com/ssherar/hook"",
    packages = find_packages(),

    description = ""A config based hook framework for github and others"",
    long_description = open(""README.md"").read(),

    install_requires = [
        ""pyyaml==3.11"",
        ""flask==0.10.1""
    ],

    classifiers = [
        'Development Status :: 3 - Alpha',
        'License :: OSI Approved :: MIT License',
        'Programming Language :: Python',
        'Programming Language :: Python :: 3',
        'Programming Language :: Python :: 3.3',
        'Programming Language :: Python :: 3.4'
    ],

    data_files = {
        '': ['*.yml']
    }
)
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```from', 'setuptools', 'import', 'setup,', 'find_packages', 'from', 'pkg_resources', 'import', 'Requirement,', 'resource_filename', 'import', 'os', 'filename', '=', 'resource_filename(Requirement.parse(""hook""),', '""default.yml"")', 'setup(', 'name', '=', '""hook"",', 'version', '=', '""0.0.2"",', 'author', '=', '""Sam', 'Sherar"",', 'author_email', '=', '""sbsherar@gmail.com"",', 'license', '=', '""MIT', 'license"",', 'url', '=', '""https://github.com/ssherar/hook"",', 'packages', '=', 'find_packages(),', 'description', '=', '""A', 'config', 'based', 'hook', 'framework', 'for', 'github', 'and', 'others"",', 'long_description', '=', 'open(""README.md"").read(),', 'install_requires', '=', '[', '""pyyaml==3.11"",', '""flask==0.10.1""', '],', 'classifiers', '=', '[', ""'Development"", 'Status', '::', '3', '-', ""Alpha',"", ""'License"", '::', 'OSI', 'Approved', '::', 'MIT', ""License',"", ""'Programming"", 'Language', '::', ""Python',"", ""'Programming"", 'Language', '::', 'Python', '::', ""3',"", ""'Programming"", 'Language', '::', 'Python', '::', ""3.3',"", ""'Programming"", 'Language', '::', 'Python', '::', ""3.4'"", '],', 'data_files', '=', '{', ""'':"", ""['*.yml']"", '}', ')', '```']",challenge not surrounded by ''': ,
"
package org.robovm.bindings.admob;

import org.robovm.apple.foundation.NSObjectProtocol;
import org.robovm.objc.annotation.Method;

/** In-app purchase delegate protocol for custom purchase handling. The delegate must handle the product purchase flow then call
 * the GADInAppPurchase object's reportPurchaseStatus: method. */
public interface GADInAppPurchaseDelegate extends NSObjectProtocol {
    /** Called when the user clicks on the buy button of an in-app purchase ad. After the receiver handles the purchase, it must
     * call the {@link GADInAppPurchase#reportPurchaseStatus(GADInAppPurchaseStatus)} method.
     * @param purchase */
    @Method(selector = ""didReceiveInAppPurchase:"")
    void didReceiveInAppPurchase (GADInAppPurchase purchase);
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```', 'package', 'org.robovm.bindings.admob;', 'import', 'org.robovm.apple.foundation.NSObjectProtocol;', 'import', 'org.robovm.objc.annotation.Method;', '/**', 'In-app', 'purchase', 'delegate', 'protocol', 'for', 'custom', 'purchase', 'handling.', 'The', 'delegate', 'must', 'handle', 'the', 'product', 'purchase', 'flow', 'then', 'call', '*', 'the', 'GADInAppPurchase', ""object's"", 'reportPurchaseStatus:', 'method.', '*/', 'public', 'interface', 'GADInAppPurchaseDelegate', 'extends', 'NSObjectProtocol', '{', '/**', 'Called', 'when', 'the', 'user', 'clicks', 'on', 'the', 'buy', 'button', 'of', 'an', 'in-app', 'purchase', 'ad.', 'After', 'the', 'receiver', 'handles', 'the', 'purchase,', 'it', 'must', '*', 'call', 'the', '{@link', 'GADInAppPurchase#reportPurchaseStatus(GADInAppPurchaseStatus)}', 'method.', '*', '@param', 'purchase', '*/', '@Method(selector', '=', '""didReceiveInAppPurchase:"")', 'void', 'didReceiveInAppPurchase', '(GADInAppPurchase', 'purchase);', '}', '```']",challenge not surrounded by ''': ,
"/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */
#include <sstream>
#include <limits>

#include ""ifcpp/model/AttributeObject.h""
#include ""ifcpp/model/BuildingException.h""
#include ""ifcpp/model/BuildingGuid.h""
#include ""ifcpp/reader/ReaderUtil.h""
#include ""ifcpp/writer/WriterUtil.h""
#include ""ifcpp/IFC4/include/IfcAxis2Placement3D.h""
#include ""ifcpp/IFC4/include/IfcCsgPrimitive3D.h""
#include ""ifcpp/IFC4/include/IfcPresentationLayerAssignment.h""
#include ""ifcpp/IFC4/include/IfcStyledItem.h""

// ENTITY IfcCsgPrimitive3D 
IfcCsgPrimitive3D::IfcCsgPrimitive3D( int id ) { m_entity_id = id; }
shared_ptr<BuildingObject> IfcCsgPrimitive3D::getDeepCopy( BuildingCopyOptions& options )
{
	shared_ptr<IfcCsgPrimitive3D> copy_self( new IfcCsgPrimitive3D() );
	if( m_Position ) { copy_self->m_Position = dynamic_pointer_cast<IfcAxis2Placement3D>( m_Position->getDeepCopy(options) ); }
	return copy_self;
}
void IfcCsgPrimitive3D::getStepLine( std::stringstream& stream ) const
{
	stream << ""#"" << m_entity_id << ""= IFCCSGPRIMITIVE3D"" << ""("";
	if( m_Position ) { stream << ""#"" << m_Position->m_entity_id; } else { stream << ""$""; }
	stream << "");"";
}
void IfcCsgPrimitive3D::getStepParameter( std::stringstream& stream, bool /*is_select_type*/ ) const { stream << ""#"" << m_entity_id; }
const std::wstring IfcCsgPrimitive3D::toString() const { return L""IfcCsgPrimitive3D""; }
void IfcCsgPrimitive3D::readStepArguments( const std::vector<std::wstring>& args, const std::map<int,shared_ptr<BuildingEntity> >& map )
{
	const size_t num_args = args.size();
	if( num_args != 1 ){ std::stringstream err; err << ""Wrong parameter count for entity IfcCsgPrimitive3D, expecting 1, having "" << num_args << "". Entity ID: "" << m_entity_id << std::endl; throw BuildingException( err.str().c_str() ); }
	readEntityReference( args[0], m_Position, map );
}
void IfcCsgPrimitive3D::getAttributes( std::vector<std::pair<std::string, shared_ptr<BuildingObject> > >& vec_attributes ) const
{
	IfcGeometricRepresentationItem::getAttributes( vec_attributes );
	vec_attributes.emplace_back( std::make_pair( ""Position"", m_Position ) );
}
void IfcCsgPrimitive3D::getAttributesInverse( std::vector<std::pair<std::string, shared_ptr<BuildingObject> > >& vec_attributes_inverse ) const
{
	IfcGeometricRepresentationItem::getAttributesInverse( vec_attributes_inverse );
}
void IfcCsgPrimitive3D::setInverseCounterparts( shared_ptr<BuildingEntity> ptr_self_entity )
{
	IfcGeometricRepresentationItem::setInverseCounterparts( ptr_self_entity );
}
void IfcCsgPrimitive3D::unlinkFromInverseCounterparts()
{
	IfcGeometricRepresentationItem::unlinkFromInverseCounterparts();
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', 'Code', 'generated', 'by', 'IfcQuery', 'EXPRESS', 'generator,', 'www.ifcquery.com', '*/', '#include', '<sstream>', '#include', '<limits>', '#include', '""ifcpp/model/AttributeObject.h""', '#include', '""ifcpp/model/BuildingException.h""', '#include', '""ifcpp/model/BuildingGuid.h""', '#include', '""ifcpp/reader/ReaderUtil.h""', '#include', '""ifcpp/writer/WriterUtil.h""', '#include', '""ifcpp/IFC4/include/IfcAxis2Placement3D.h""', '#include', '""ifcpp/IFC4/include/IfcCsgPrimitive3D.h""', '#include', '""ifcpp/IFC4/include/IfcPresentationLayerAssignment.h""', '#include', '""ifcpp/IFC4/include/IfcStyledItem.h""', '//', 'ENTITY', 'IfcCsgPrimitive3D', 'IfcCsgPrimitive3D::IfcCsgPrimitive3D(', 'int', 'id', ')', '{', 'm_entity_id', '=', 'id;', '}', 'shared_ptr<BuildingObject>', 'IfcCsgPrimitive3D::getDeepCopy(', 'BuildingCopyOptions&', 'options', ')', '{', 'shared_ptr<IfcCsgPrimitive3D>', 'copy_self(', 'new', 'IfcCsgPrimitive3D()', ');', 'if(', 'm_Position', ')', '{', 'copy_self->m_Position', '=', 'dynamic_pointer_cast<IfcAxis2Placement3D>(', 'm_Position->getDeepCopy(options)', ');', '}', 'return', 'copy_self;', '}', 'void', 'IfcCsgPrimitive3D::getStepLine(', 'std::stringstream&', 'stream', ')', 'const', '{', 'stream', '<<', '""#""', '<<', 'm_entity_id', '<<', '""=', 'IFCCSGPRIMITIVE3D""', '<<', '""("";', 'if(', 'm_Position', ')', '{', 'stream', '<<', '""#""', '<<', 'm_Position->m_entity_id;', '}', 'else', '{', 'stream', '<<', '""$"";', '}', 'stream', '<<', '"");"";', '}', 'void', 'IfcCsgPrimitive3D::getStepParameter(', 'std::stringstream&', 'stream,', 'bool', '/*is_select_type*/', ')', 'const', '{', 'stream', '<<', '""#""', '<<', 'm_entity_id;', '}', 'const', 'std::wstring', 'IfcCsgPrimitive3D::toString()', 'const', '{', 'return', 'L""IfcCsgPrimitive3D"";', '}', 'void', 'IfcCsgPrimitive3D::readStepArguments(', 'const', 'std::vector<std::wstring>&', 'args,', 'const', 'std::map<int,shared_ptr<BuildingEntity>', '>&', 'map', ')', '{', 'const', 'size_t', 'num_args', '=', 'args.size();', 'if(', 'num_args', '!=', '1', '){', 'std::stringstream', 'err;', 'err', '<<', '""Wrong', 'parameter', 'count', 'for', 'entity', 'IfcCsgPrimitive3D,', 'expecting', '1,', 'having', '""', '<<', 'num_args', '<<', '"".', 'Entity', 'ID:', '""', '<<', 'm_entity_id', '<<', 'std::endl;', 'throw', 'BuildingException(', 'err.str().c_str()', ');', '}', 'readEntityReference(', 'args[0],', 'm_Position,', 'map', ');', '}', 'void', 'IfcCsgPrimitive3D::getAttributes(', 'std::vector<std::pair<std::string,', 'shared_ptr<BuildingObject>', '>', '>&', 'vec_attributes', ')', 'const', '{', 'IfcGeometricRepresentationItem::getAttributes(', 'vec_attributes', ');', 'vec_attributes.emplace_back(', 'std::make_pair(', '""Position"",', 'm_Position', ')', ');', '}', 'void', 'IfcCsgPrimitive3D::getAttributesInverse(', 'std::vector<std::pair<std::string,', 'shared_ptr<BuildingObject>', '>', '>&', 'vec_attributes_inverse', ')', 'const', '{', 'IfcGeometricRepresentationItem::getAttributesInverse(', 'vec_attributes_inverse', ');', '}', 'void', 'IfcCsgPrimitive3D::setInverseCounterparts(', 'shared_ptr<BuildingEntity>', 'ptr_self_entity', ')', '{', 'IfcGeometricRepresentationItem::setInverseCounterparts(', 'ptr_self_entity', ');', '}', 'void', 'IfcCsgPrimitive3D::unlinkFromInverseCounterparts()', '{', 'IfcGeometricRepresentationItem::unlinkFromInverseCounterparts();', '}', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright (c) 2008-2018, Hazelcast, Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.hazelcast.core;

/**
 * Base interface for all distributed objects.
 *
 * All distributed objects are not garbage collectable unless {@link #destroy()} is called first.
 * Note: Failure to destroy after you are done using a distributed object will lead to memory leaks.
 *
 * @see IMap
 * @see IQueue
 * @see MultiMap
 * @see ITopic
 * @see ILock
 * @see IExecutorService
 * @see TransactionalMap
 * @see TransactionalQueue
 * @see TransactionalMultiMap
 */
public interface DistributedObject {

    /**
     * Returns the key of the partition that this DistributedObject is assigned to. The returned value only has meaning
     * for a non-partitioned data structure like an {@link IAtomicLong}. For a partitioned data structure like an {@link IMap},
     * the returned value will not be null, but otherwise undefined.
     *
     * @return the partition key.
     */
    String getPartitionKey();

    /**
     * Returns the unique name for this DistributedObject. The returned value will never be null.
     *
     * The suggested way for getting name is retrieving it through
     * {@link com.hazelcast.core.DistributedObjectUtil#getName(DistributedObject)}
     * because this might be also a {@link com.hazelcast.core.PrefixedDistributedObject}.
     *
     * @return the unique name for this object.
     */
    String getName();

    /**
     * Returns the service name for this object.
     *
     * @return the service name for this object.
     */
    String getServiceName();

    /**
     * Destroys this object cluster-wide.
     * Clears and releases all resources for this object.
     */
    void destroy();
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '(c)', '2008-2018,', 'Hazelcast,', 'Inc.', 'All', 'Rights', 'Reserved.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'com.hazelcast.core;', '/**', '*', 'Base', 'interface', 'for', 'all', 'distributed', 'objects.', '*', '*', 'All', 'distributed', 'objects', 'are', 'not', 'garbage', 'collectable', 'unless', '{@link', '#destroy()}', 'is', 'called', 'first.', '*', 'Note:', 'Failure', 'to', 'destroy', 'after', 'you', 'are', 'done', 'using', 'a', 'distributed', 'object', 'will', 'lead', 'to', 'memory', 'leaks.', '*', '*', '@see', 'IMap', '*', '@see', 'IQueue', '*', '@see', 'MultiMap', '*', '@see', 'ITopic', '*', '@see', 'ILock', '*', '@see', 'IExecutorService', '*', '@see', 'TransactionalMap', '*', '@see', 'TransactionalQueue', '*', '@see', 'TransactionalMultiMap', '*/', 'public', 'interface', 'DistributedObject', '{', '/**', '*', 'Returns', 'the', 'key', 'of', 'the', 'partition', 'that', 'this', 'DistributedObject', 'is', 'assigned', 'to.', 'The', 'returned', 'value', 'only', 'has', 'meaning', '*', 'for', 'a', 'non-partitioned', 'data', 'structure', 'like', 'an', '{@link', 'IAtomicLong}.', 'For', 'a', 'partitioned', 'data', 'structure', 'like', 'an', '{@link', 'IMap},', '*', 'the', 'returned', 'value', 'will', 'not', 'be', 'null,', 'but', 'otherwise', 'undefined.', '*', '*', '@return', 'the', 'partition', 'key.', '*/', 'String', 'getPartitionKey();', '/**', '*', 'Returns', 'the', 'unique', 'name', 'for', 'this', 'DistributedObject.', 'The', 'returned', 'value', 'will', 'never', 'be', 'null.', '*', '*', 'The', 'suggested', 'way', 'for', 'getting', 'name', 'is', 'retrieving', 'it', 'through', '*', '{@link', 'com.hazelcast.core.DistributedObjectUtil#getName(DistributedObject)}', '*', 'because', 'this', 'might', 'be', 'also', 'a', '{@link', 'com.hazelcast.core.PrefixedDistributedObject}.', '*', '*', '@return', 'the', 'unique', 'name', 'for', 'this', 'object.', '*/', 'String', 'getName();', '/**', '*', 'Returns', 'the', 'service', 'name', 'for', 'this', 'object.', '*', '*', '@return', 'the', 'service', 'name', 'for', 'this', 'object.', '*/', 'String', 'getServiceName();', '/**', '*', 'Destroys', 'this', 'object', 'cluster-wide.', '*', 'Clears', 'and', 'releases', 'all', 'resources', 'for', 'this', 'object.', '*/', 'void', 'destroy();', '}', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright 2016 Google Inc.
 *
 * Use of this source code is governed by a BSD-style license that can be
 * found in the LICENSE file.
 */

#include ""gm.h""

#include ""SkCanvas.h""
#include ""SkTextBlob.h""

namespace skiagm {
class TextBlobBlockReordering : public GM {
public:
    // This gm tests that textblobs translate properly when their draw order is different from their
    // flush order
    TextBlobBlockReordering() { }

protected:
    void onOnceBeforeDraw() override {
        SkTextBlobBuilder builder;

        // make textblob
        // Large text is used to trigger atlas eviction
        SkPaint paint;
        paint.setTextSize(56);
        const char* text = ""AB"";
        sk_tool_utils::set_portable_typeface(&paint);

        SkRect bounds;
        paint.measureText(text, strlen(text), &bounds);

        SkScalar yOffset = bounds.height();
        sk_tool_utils::add_to_text_blob(&builder, text, paint, 0, yOffset - 30);

        // build
        fBlob = builder.make();
    }

    SkString onShortName() override {
        return SkString(""textblobblockreordering"");
    }

    SkISize onISize() override {
        return SkISize::Make(kWidth, kHeight);
    }

    // This draws the same text blob 3 times.  The second draw used a different
    // xfer mode so it doens't get batched with the first and third.
    // ultimately thye iwll be flushed in the order first, third, and then second
    void onDraw(SkCanvas* canvas) override {
        canvas->drawColor(sk_tool_utils::color_to_565(SK_ColorGRAY));

        SkPaint paint;
        canvas->translate(10, 40);

        SkRect bounds = fBlob->bounds();
        const int yDelta = SkScalarFloorToInt(bounds.height()) + 20;
        const int xDelta = SkScalarFloorToInt(bounds.width());

        canvas->drawTextBlob(fBlob, 0, 0, paint);

        canvas->translate(SkIntToScalar(xDelta), SkIntToScalar(yDelta));

	// draw a rect where the text should be, and then twiddle the xfermode
        // so we don't batch
        SkPaint redPaint;
        redPaint.setColor(SK_ColorRED);
        canvas->drawRect(bounds, redPaint);
        SkPaint srcInPaint(paint);
        srcInPaint.setBlendMode(SkBlendMode::kSrcIn);
        canvas->drawTextBlob(fBlob, 0, 0, srcInPaint);

        canvas->translate(SkIntToScalar(xDelta), SkIntToScalar(yDelta));
        canvas->drawTextBlob(fBlob, 0, 0, paint);
    }

private:
    sk_sp<SkTextBlob> fBlob;

    static constexpr int kWidth = 275;
    static constexpr int kHeight = 200;

    typedef GM INHERITED;
};

//////////////////////////////////////////////////////////////////////////////

DEF_GM(return new TextBlobBlockReordering;)
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '2016', 'Google', 'Inc.', '*', '*', 'Use', 'of', 'this', 'source', 'code', 'is', 'governed', 'by', 'a', 'BSD-style', 'license', 'that', 'can', 'be', '*', 'found', 'in', 'the', 'LICENSE', 'file.', '*/', '#include', '""gm.h""', '#include', '""SkCanvas.h""', '#include', '""SkTextBlob.h""', 'namespace', 'skiagm', '{', 'class', 'TextBlobBlockReordering', ':', 'public', 'GM', '{', 'public:', '//', 'This', 'gm', 'tests', 'that', 'textblobs', 'translate', 'properly', 'when', 'their', 'draw', 'order', 'is', 'different', 'from', 'their', '//', 'flush', 'order', 'TextBlobBlockReordering()', '{', '}', 'protected:', 'void', 'onOnceBeforeDraw()', 'override', '{', 'SkTextBlobBuilder', 'builder;', '//', 'make', 'textblob', '//', 'Large', 'text', 'is', 'used', 'to', 'trigger', 'atlas', 'eviction', 'SkPaint', 'paint;', 'paint.setTextSize(56);', 'const', 'char*', 'text', '=', '""AB"";', 'sk_tool_utils::set_portable_typeface(&paint);', 'SkRect', 'bounds;', 'paint.measureText(text,', 'strlen(text),', '&bounds);', 'SkScalar', 'yOffset', '=', 'bounds.height();', 'sk_tool_utils::add_to_text_blob(&builder,', 'text,', 'paint,', '0,', 'yOffset', '-', '30);', '//', 'build', 'fBlob', '=', 'builder.make();', '}', 'SkString', 'onShortName()', 'override', '{', 'return', 'SkString(""textblobblockreordering"");', '}', 'SkISize', 'onISize()', 'override', '{', 'return', 'SkISize::Make(kWidth,', 'kHeight);', '}', '//', 'This', 'draws', 'the', 'same', 'text', 'blob', '3', 'times.', 'The', 'second', 'draw', 'used', 'a', 'different', '//', 'xfer', 'mode', 'so', 'it', ""doens't"", 'get', 'batched', 'with', 'the', 'first', 'and', 'third.', '//', 'ultimately', 'thye', 'iwll', 'be', 'flushed', 'in', 'the', 'order', 'first,', 'third,', 'and', 'then', 'second', 'void', 'onDraw(SkCanvas*', 'canvas)', 'override', '{', 'canvas->drawColor(sk_tool_utils::color_to_565(SK_ColorGRAY));', 'SkPaint', 'paint;', 'canvas->translate(10,', '40);', 'SkRect', 'bounds', '=', 'fBlob->bounds();', 'const', 'int', 'yDelta', '=', 'SkScalarFloorToInt(bounds.height())', '+', '20;', 'const', 'int', 'xDelta', '=', 'SkScalarFloorToInt(bounds.width());', 'canvas->drawTextBlob(fBlob,', '0,', '0,', 'paint);', 'canvas->translate(SkIntToScalar(xDelta),', 'SkIntToScalar(yDelta));', '//', 'draw', 'a', 'rect', 'where', 'the', 'text', 'should', 'be,', 'and', 'then', 'twiddle', 'the', 'xfermode', '//', 'so', 'we', ""don't"", 'batch', 'SkPaint', 'redPaint;', 'redPaint.setColor(SK_ColorRED);', 'canvas->drawRect(bounds,', 'redPaint);', 'SkPaint', 'srcInPaint(paint);', 'srcInPaint.setBlendMode(SkBlendMode::kSrcIn);', 'canvas->drawTextBlob(fBlob,', '0,', '0,', 'srcInPaint);', 'canvas->translate(SkIntToScalar(xDelta),', 'SkIntToScalar(yDelta));', 'canvas->drawTextBlob(fBlob,', '0,', '0,', 'paint);', '}', 'private:', 'sk_sp<SkTextBlob>', 'fBlob;', 'static', 'constexpr', 'int', 'kWidth', '=', '275;', 'static', 'constexpr', 'int', 'kHeight', '=', '200;', 'typedef', 'GM', 'INHERITED;', '};', '//////////////////////////////////////////////////////////////////////////////', 'DEF_GM(return', 'new', 'TextBlobBlockReordering;)', '}', '```']",challenge not surrounded by ''': ,
"from shadowcraft.core.exceptions import InvalidLevelException

# tiered parameters for use in armor mitigation calculations. first tuple
# element is the minimum level of the tier. the tuples must be in descending
# order of minimum level for the lookup to work. parameters taken from
# http://code.google.com/p/simulationcraft/source/browse/branches/mop/engine/sc_player.cpp#1365
PARAMETERS = [ (91, 1938, 3610.0), #lvl 100 371830 3610.0
               (86, 1044, 1945.0), #lvl 90
               (81, 8000, 1047.0), #lvl 85
               (60, 4000,  747.0),
               ( 1, 85.0,  157.0) ]

def _get_appropriate_level_for_armor_table(level):
    for i in xrange(0, len(PARAMETERS)):
        if level >= PARAMETERS[i][0]:
            return i

def lookup_parameters(level):
    for parameters in PARAMETERS:
        if level >= parameters[0]:
            return parameters
    raise InvalidLevelException(_('No armor mitigation parameters available for level {level}').format(level=level))

def parameter(level=100):
    parameters = lookup_parameters(level)
    return level * parameters[1] - parameters[2]

# this is the fraction of damage reduced by the armor
def mitigation(armor, level=100, cached_parameter=None):
    if cached_parameter == None:
        cached_parameter = parameter(level)
        #cached_parameter = lookup_parameters(level)
    return armor / (armor + cached_parameter)

# this is the fraction of damage retained despite the armor, 1 - mitigation. 
def multiplier(armor, level=100, cached_parameter=None):
    table_level = _get_appropriate_level_for_armor_table(level)
    return PARAMETERS[table_level][2] / (PARAMETERS[table_level][1] + PARAMETERS[table_level][2])","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```from', 'shadowcraft.core.exceptions', 'import', 'InvalidLevelException', '#', 'tiered', 'parameters', 'for', 'use', 'in', 'armor', 'mitigation', 'calculations.', 'first', 'tuple', '#', 'element', 'is', 'the', 'minimum', 'level', 'of', 'the', 'tier.', 'the', 'tuples', 'must', 'be', 'in', 'descending', '#', 'order', 'of', 'minimum', 'level', 'for', 'the', 'lookup', 'to', 'work.', 'parameters', 'taken', 'from', '#', 'http://code.google.com/p/simulationcraft/source/browse/branches/mop/engine/sc_player.cpp#1365', 'PARAMETERS', '=', '[', '(91,', '1938,', '3610.0),', '#lvl', '100', '371830', '3610.0', '(86,', '1044,', '1945.0),', '#lvl', '90', '(81,', '8000,', '1047.0),', '#lvl', '85', '(60,', '4000,', '747.0),', '(', '1,', '85.0,', '157.0)', ']', 'def', '_get_appropriate_level_for_armor_table(level):', 'for', 'i', 'in', 'xrange(0,', 'len(PARAMETERS)):', 'if', 'level', '>=', 'PARAMETERS[i][0]:', 'return', 'i', 'def', 'lookup_parameters(level):', 'for', 'parameters', 'in', 'PARAMETERS:', 'if', 'level', '>=', 'parameters[0]:', 'return', 'parameters', 'raise', ""InvalidLevelException(_('No"", 'armor', 'mitigation', 'parameters', 'available', 'for', 'level', ""{level}').format(level=level))"", 'def', 'parameter(level=100):', 'parameters', '=', 'lookup_parameters(level)', 'return', 'level', '*', 'parameters[1]', '-', 'parameters[2]', '#', 'this', 'is', 'the', 'fraction', 'of', 'damage', 'reduced', 'by', 'the', 'armor', 'def', 'mitigation(armor,', 'level=100,', 'cached_parameter=None):', 'if', 'cached_parameter', '==', 'None:', 'cached_parameter', '=', 'parameter(level)', '#cached_parameter', '=', 'lookup_parameters(level)', 'return', 'armor', '/', '(armor', '+', 'cached_parameter)', '#', 'this', 'is', 'the', 'fraction', 'of', 'damage', 'retained', 'despite', 'the', 'armor,', '1', '-', 'mitigation.', 'def', 'multiplier(armor,', 'level=100,', 'cached_parameter=None):', 'table_level', '=', '_get_appropriate_level_for_armor_table(level)', 'return', 'PARAMETERS[table_level][2]', '/', '(PARAMETERS[table_level][1]', '+', 'PARAMETERS[table_level][2])```']",challenge not surrounded by ''': ,
"/*
 * dalserver-interop library - implementation of DAL server for interoperability
 * Copyright (C) 2015  Diversity Arrays Technology
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.diversityarrays.dal.server;

import java.io.File;

import com.diversityarrays.dal.db.DalDatabase;

public interface DalServerFactory {
	DalServer create(String hostName, int port, File wwwRoot, DalDatabase dalDatabase);
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'dalserver-interop', 'library', '-', 'implementation', 'of', 'DAL', 'server', 'for', 'interoperability', '*', 'Copyright', '(C)', '2015', 'Diversity', 'Arrays', 'Technology', '*', '*', 'This', 'program', 'is', 'free', 'software:', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', '*', 'it', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'as', 'published', 'by', '*', 'the', 'Free', 'Software', 'Foundation,', 'either', 'version', '3', 'of', 'the', 'License,', 'or', '*', '(at', 'your', 'option)', 'any', 'later', 'version.', '*', '*', 'This', 'program', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', '*', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', '*', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', '*', 'GNU', 'General', 'Public', 'License', 'for', 'more', 'details.', '*', '*', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'General', 'Public', 'License', '*', 'along', 'with', 'this', 'program.', 'If', 'not,', 'see', '<http://www.gnu.org/licenses/>.', '*/', 'package', 'com.diversityarrays.dal.server;', 'import', 'java.io.File;', 'import', 'com.diversityarrays.dal.db.DalDatabase;', 'public', 'interface', 'DalServerFactory', '{', 'DalServer', 'create(String', 'hostName,', 'int', 'port,', 'File', 'wwwRoot,', 'DalDatabase', 'dalDatabase);', '}', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright 2012-2021 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Examples for the ""Spring Boot Features - Validation"" section.
 */
package org.springframework.boot.docs.springbootfeatures.validation;
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '2012-2021', 'the', 'original', 'author', 'or', 'authors.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'https://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', '/**', '*', 'Examples', 'for', 'the', '""Spring', 'Boot', 'Features', '-', 'Validation""', 'section.', '*/', 'package', 'org.springframework.boot.docs.springbootfeatures.validation;', '```']",challenge not surrounded by ''': ,
"from datetime import datetime
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import scipy.sparse as sp

from time import time

# Given index_of_users and index_of_items,
## build user-item matrix from a df with columns (user_col, item_col, rating_col) containing triples (uid, item_id, rating)
def buildUserItemMat(df, index_of_users, index_of_items, user_col = 'uid', item_col = 'item_id', rating_col = 'rating'):
    
    n_user, n_item = len(index_of_users.keys()), len(index_of_items.keys())
    print('# users in index: %d' %n_user)
    print('# items in index: %d' %n_item)

    print('Mapping user ids to internal user indices...')
    row_ind = list(df.apply(lambda r: index_of_users[r[user_col]], axis=1))
    print('Mapping item ids to internal item indices...')
    col_ind = list(df.apply(lambda r: index_of_items[r[item_col]], axis=1))
    ratings = list(df[rating_col])
    
    user_item_mat = sp.csr_matrix((ratings, (row_ind, col_ind)), shape=(n_user, n_item))
    print('User-Item matrix built')
    return user_item_mat

def mkUserIndex(df, user_col='user_id'):
    user_ids = np.unique(df[user_col])
    index_of_users = { user_ids[i]:i for i in range(len(user_ids)) }
    return index_of_users

def mkItemIndex(df, item_col = 'item_id'):
    
    item_ids = np.unique(df[item_col])
    index_of_items = { item_ids[i]:i for i in range(len(item_ids))}
    return index_of_items

def printInfo(sp_mat):
    print ('Dims of matrix: {}'.format(sp_mat.shape))
    print('# non-zero entries: %d' %sp_mat.nnz)
    print('Max entry: %d' %sp_mat.max())

def toDate(date_str):
    date_format = '%Y-%m-%d'
    return datetime.strptime(date_str, date_format)

def calDuration(app_df):
    user_apply_job_cases = app_df[['uid', 'job_title', 'apply_date']].groupby(by=['uid', 'job_title'])
    print('Finished grouping by user-job cases. Totally we have {} cases.'.format(len(user_apply_job_cases)))
    
    t0 = time()
    print('Calculating duration of application for each case...')
    res = user_apply_job_cases['apply_date'].agg([min, max, 'nunique'])
    res['duration'] = np.subtract(map(toDate, res['max']), map(toDate, res['min']))
    print('Done after: {}s'.format(time()-t0))
    # Get duration in days
    res['duration'] = map(lambda x: x.days, res['duration'])
    res.rename(columns={'min': 'first_apply_date', 'max': 'last_apply_date', 'duration': 'total_duration_in_day', 
                        'nunique': 'n_active_day'}, inplace=True)
    return res

def loglog(series, xl, yl):
    
    h = series.value_counts()
    uniq_vals, counts = h.keys(), h.values
    
    plt.scatter(x=uniq_vals, y=counts)
    plt.loglog()
    
    plt.xlabel(xl), plt.ylabel(yl)
    plt.xlim(min(uniq_vals), max(uniq_vals))
    plt.grid(True)
#     plt.show()
#     return fig

# change dots in column names to dashes
def dot2dash(df):
    return df.rename(columns= {name: name.replace('.', '_') for name in df.columns})","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```from', 'datetime', 'import', 'datetime', 'import', 'numpy', 'as', 'np', 'import', 'pandas', 'as', 'pd', 'import', 'matplotlib.pyplot', 'as', 'plt', 'import', 'scipy.sparse', 'as', 'sp', 'from', 'time', 'import', 'time', '#', 'Given', 'index_of_users', 'and', 'index_of_items,', '##', 'build', 'user-item', 'matrix', 'from', 'a', 'df', 'with', 'columns', '(user_col,', 'item_col,', 'rating_col)', 'containing', 'triples', '(uid,', 'item_id,', 'rating)', 'def', 'buildUserItemMat(df,', 'index_of_users,', 'index_of_items,', 'user_col', '=', ""'uid',"", 'item_col', '=', ""'item_id',"", 'rating_col', '=', ""'rating'):"", 'n_user,', 'n_item', '=', 'len(index_of_users.keys()),', 'len(index_of_items.keys())', ""print('#"", 'users', 'in', 'index:', ""%d'"", '%n_user)', ""print('#"", 'items', 'in', 'index:', ""%d'"", '%n_item)', ""print('Mapping"", 'user', 'ids', 'to', 'internal', 'user', ""indices...')"", 'row_ind', '=', 'list(df.apply(lambda', 'r:', 'index_of_users[r[user_col]],', 'axis=1))', ""print('Mapping"", 'item', 'ids', 'to', 'internal', 'item', ""indices...')"", 'col_ind', '=', 'list(df.apply(lambda', 'r:', 'index_of_items[r[item_col]],', 'axis=1))', 'ratings', '=', 'list(df[rating_col])', 'user_item_mat', '=', 'sp.csr_matrix((ratings,', '(row_ind,', 'col_ind)),', 'shape=(n_user,', 'n_item))', ""print('User-Item"", 'matrix', ""built')"", 'return', 'user_item_mat', 'def', 'mkUserIndex(df,', ""user_col='user_id'):"", 'user_ids', '=', 'np.unique(df[user_col])', 'index_of_users', '=', '{', 'user_ids[i]:i', 'for', 'i', 'in', 'range(len(user_ids))', '}', 'return', 'index_of_users', 'def', 'mkItemIndex(df,', 'item_col', '=', ""'item_id'):"", 'item_ids', '=', 'np.unique(df[item_col])', 'index_of_items', '=', '{', 'item_ids[i]:i', 'for', 'i', 'in', 'range(len(item_ids))}', 'return', 'index_of_items', 'def', 'printInfo(sp_mat):', 'print', ""('Dims"", 'of', 'matrix:', ""{}'.format(sp_mat.shape))"", ""print('#"", 'non-zero', 'entries:', ""%d'"", '%sp_mat.nnz)', ""print('Max"", 'entry:', ""%d'"", '%sp_mat.max())', 'def', 'toDate(date_str):', 'date_format', '=', ""'%Y-%m-%d'"", 'return', 'datetime.strptime(date_str,', 'date_format)', 'def', 'calDuration(app_df):', 'user_apply_job_cases', '=', ""app_df[['uid',"", ""'job_title',"", ""'apply_date']].groupby(by=['uid',"", ""'job_title'])"", ""print('Finished"", 'grouping', 'by', 'user-job', 'cases.', 'Totally', 'we', 'have', '{}', ""cases.'.format(len(user_apply_job_cases)))"", 't0', '=', 'time()', ""print('Calculating"", 'duration', 'of', 'application', 'for', 'each', ""case...')"", 'res', '=', ""user_apply_job_cases['apply_date'].agg([min,"", 'max,', ""'nunique'])"", ""res['duration']"", '=', 'np.subtract(map(toDate,', ""res['max']),"", 'map(toDate,', ""res['min']))"", ""print('Done"", 'after:', ""{}s'.format(time()-t0))"", '#', 'Get', 'duration', 'in', 'days', ""res['duration']"", '=', 'map(lambda', 'x:', 'x.days,', ""res['duration'])"", ""res.rename(columns={'min':"", ""'first_apply_date',"", ""'max':"", ""'last_apply_date',"", ""'duration':"", ""'total_duration_in_day',"", ""'nunique':"", ""'n_active_day'},"", 'inplace=True)', 'return', 'res', 'def', 'loglog(series,', 'xl,', 'yl):', 'h', '=', 'series.value_counts()', 'uniq_vals,', 'counts', '=', 'h.keys(),', 'h.values', 'plt.scatter(x=uniq_vals,', 'y=counts)', 'plt.loglog()', 'plt.xlabel(xl),', 'plt.ylabel(yl)', 'plt.xlim(min(uniq_vals),', 'max(uniq_vals))', 'plt.grid(True)', '#', 'plt.show()', '#', 'return', 'fig', '#', 'change', 'dots', 'in', 'column', 'names', 'to', 'dashes', 'def', 'dot2dash(df):', 'return', 'df.rename(columns=', '{name:', ""name.replace('.',"", ""'_')"", 'for', 'name', 'in', 'df.columns})```']",challenge not surrounded by ''': ,
"package com.kzmen.sczxjf.test.utils;

import android.text.TextUtils;

import java.util.regex.Pattern;

/**
 * author zaaach on 2016/1/28.
 */
public class PinyinUtils {
    /**
     * 获取拼音的首字母（大写）
     * @param pinyin
     * @return
     */
    public static String getFirstLetter(final String pinyin){
        if (TextUtils.isEmpty(pinyin)) return ""定位"";
        String c = pinyin.substring(0, 1);
        Pattern pattern = Pattern.compile(""^[A-Za-z]+$"");
        if (pattern.matcher(c).matches()){
            return c.toUpperCase();
        } else if (""0"".equals(c)){
            return ""定位"";
        } else if (""1"".equals(c)){
            return ""热门"";
        }
        return ""定位"";
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.kzmen.sczxjf.test.utils;', 'import', 'android.text.TextUtils;', 'import', 'java.util.regex.Pattern;', '/**', '*', 'author', 'zaaach', 'on', '2016/1/28.', '*/', 'public', 'class', 'PinyinUtils', '{', '/**', '*', '获取拼音的首字母（大写）', '*', '@param', 'pinyin', '*', '@return', '*/', 'public', 'static', 'String', 'getFirstLetter(final', 'String', 'pinyin){', 'if', '(TextUtils.isEmpty(pinyin))', 'return', '""定位"";', 'String', 'c', '=', 'pinyin.substring(0,', '1);', 'Pattern', 'pattern', '=', 'Pattern.compile(""^[A-Za-z]+$"");', 'if', '(pattern.matcher(c).matches()){', 'return', 'c.toUpperCase();', '}', 'else', 'if', '(""0"".equals(c)){', 'return', '""定位"";', '}', 'else', 'if', '(""1"".equals(c)){', 'return', '""热门"";', '}', 'return', '""定位"";', '}', '}', '```']",challenge not surrounded by ''': ,
"import pycurl
import cStringIO
import base64

def http_send(url, method, data):
    '''
    @param url: Access url.
    @param auth: Authorization info.
    @param method: [GET, POST, PUT, DELETE]
    @param data: Send data
    
    @return: code, get_data.
    '''
    
    if url is None:
        raise Exception(""No url to send."")
        
    conn = pycurl.Curl()
        
    conn.setopt(pycurl.URL, url)
        
    # set response buffer
    response = cStringIO.StringIO()
    conn.setopt(pycurl.WRITEFUNCTION, response.write)
    
    # set request buffer
    if data is not None:
        conn.setopt(pycurl.POST, 1)
        conn.setopt(pycurl.POSTFIELDSIZE, len(data))
        conn.setopt(pycurl.POSTFIELDS, data)
#         conn.setopt(conn.HTTPHEADER, [""Content-Type: application/json""])
        
        
#         print ""Send data[%s]"" % (data)
#         conn.setopt(pycurl.POSTFIELDS, data)

    # set method    
    if method == ""POST"":
        conn.setopt(pycurl.POST, 1)
    elif method == ""GET"":
        conn.setopt(pycurl.HTTPGET, 1)
    elif method == ""PUT"":
        conn.setopt(pycurl.CUSTOMREQUEST, ""PUT"")
    elif method == ""DELETE"":
        conn.setopt(pycurl.CUSTOMREQUEST, ""DELETE"")
    else:
        raise Exception(""Unsupported method."")

    # perform
    conn.perform()
    
    # return    
    return conn.getinfo(pycurl.HTTP_CODE), response.getvalue()

","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'pycurl', 'import', 'cStringIO', 'import', 'base64', 'def', 'http_send(url,', 'method,', 'data):', ""'''"", '@param', 'url:', 'Access', 'url.', '@param', 'auth:', 'Authorization', 'info.', '@param', 'method:', '[GET,', 'POST,', 'PUT,', 'DELETE]', '@param', 'data:', 'Send', 'data', '@return:', 'code,', 'get_data.', ""'''"", 'if', 'url', 'is', 'None:', 'raise', 'Exception(""No', 'url', 'to', 'send."")', 'conn', '=', 'pycurl.Curl()', 'conn.setopt(pycurl.URL,', 'url)', '#', 'set', 'response', 'buffer', 'response', '=', 'cStringIO.StringIO()', 'conn.setopt(pycurl.WRITEFUNCTION,', 'response.write)', '#', 'set', 'request', 'buffer', 'if', 'data', 'is', 'not', 'None:', 'conn.setopt(pycurl.POST,', '1)', 'conn.setopt(pycurl.POSTFIELDSIZE,', 'len(data))', 'conn.setopt(pycurl.POSTFIELDS,', 'data)', '#', 'conn.setopt(conn.HTTPHEADER,', '[""Content-Type:', 'application/json""])', '#', 'print', '""Send', 'data[%s]""', '%', '(data)', '#', 'conn.setopt(pycurl.POSTFIELDS,', 'data)', '#', 'set', 'method', 'if', 'method', '==', '""POST"":', 'conn.setopt(pycurl.POST,', '1)', 'elif', 'method', '==', '""GET"":', 'conn.setopt(pycurl.HTTPGET,', '1)', 'elif', 'method', '==', '""PUT"":', 'conn.setopt(pycurl.CUSTOMREQUEST,', '""PUT"")', 'elif', 'method', '==', '""DELETE"":', 'conn.setopt(pycurl.CUSTOMREQUEST,', '""DELETE"")', 'else:', 'raise', 'Exception(""Unsupported', 'method."")', '#', 'perform', 'conn.perform()', '#', 'return', 'return', 'conn.getinfo(pycurl.HTTP_CODE),', 'response.getvalue()', '```']",challenge not surrounded by ''': ,
"import express from 'express'
import path from 'path'
import open from 'open'
import compression from 'compression' // this enables gzip compression

/* eslint-disable no-console */

const port = 3000
const app = express()

app.use(compression())
app.use(express.static('dist'))

app.get('*', function (req, res) { // Because we are creating a singlepage app, we want express to serve index.html for ALL requests.
  res.sendFile(path.join(__dirname, '../dist/index.html'))
})

app.listen(port, function (err) { // Starts the server.
  if (err) {
    console.log(err)
  } else {
    open(`http://localhost:${port}`) // Open is a NPM package
  }
})
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'express', 'from', ""'express'"", 'import', 'path', 'from', ""'path'"", 'import', 'open', 'from', ""'open'"", 'import', 'compression', 'from', ""'compression'"", '//', 'this', 'enables', 'gzip', 'compression', '/*', 'eslint-disable', 'no-console', '*/', 'const', 'port', '=', '3000', 'const', 'app', '=', 'express()', 'app.use(compression())', ""app.use(express.static('dist'))"", ""app.get('*',"", 'function', '(req,', 'res)', '{', '//', 'Because', 'we', 'are', 'creating', 'a', 'singlepage', 'app,', 'we', 'want', 'express', 'to', 'serve', 'index.html', 'for', 'ALL', 'requests.', 'res.sendFile(path.join(__dirname,', ""'../dist/index.html'))"", '})', 'app.listen(port,', 'function', '(err)', '{', '//', 'Starts', 'the', 'server.', 'if', '(err)', '{', 'console.log(err)', '}', 'else', '{', 'open(`http://localhost:${port}`)', '//', 'Open', 'is', 'a', 'NPM', 'package', '}', '})', '```']",challenge not surrounded by ''': ,
"var form = document.getElementById('form1');
var newInput = document.createElement('input');

setTimeout(function () {

  // Test changing placeholder attribute value
  document
  .getElementById('handle1')
  .setAttribute('placeholder', 'This value has changed');

  // Test created placeholder attribute value
  document
  .getElementById('handle2')
  .setAttribute('placeholder', 'This value has been added');

  // Test new input element added to the DOM after page load
  newInput.setAttribute('type', 'text');
  newInput.setAttribute('placeholder', 'Test created element');
  document.body.appendChild(newInput);

  // Test input type changing after page load
  try {
    document.getElementById('handle3').type = 'password';
  } catch ( e ) {
    // This will fail in IE < 9
  }

  document.getElementById('handle4').removeAttribute('placeholder');

}, 1000);

// Bind a submit event handler to the test form
function submitHandler( e ) {
  e.returnValue = false;
  return false;
}

if ( form.addEventListener ) {
  form.addEventListener('submit', submitHandler);
} else if ( form.attachEvent ) {
  form.attachEvent('onsubmit', submitHandler);
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```var', 'form', '=', ""document.getElementById('form1');"", 'var', 'newInput', '=', ""document.createElement('input');"", 'setTimeout(function', '()', '{', '//', 'Test', 'changing', 'placeholder', 'attribute', 'value', 'document', "".getElementById('handle1')"", "".setAttribute('placeholder',"", ""'This"", 'value', 'has', ""changed');"", '//', 'Test', 'created', 'placeholder', 'attribute', 'value', 'document', "".getElementById('handle2')"", "".setAttribute('placeholder',"", ""'This"", 'value', 'has', 'been', ""added');"", '//', 'Test', 'new', 'input', 'element', 'added', 'to', 'the', 'DOM', 'after', 'page', 'load', ""newInput.setAttribute('type',"", ""'text');"", ""newInput.setAttribute('placeholder',"", ""'Test"", 'created', ""element');"", 'document.body.appendChild(newInput);', '//', 'Test', 'input', 'type', 'changing', 'after', 'page', 'load', 'try', '{', ""document.getElementById('handle3').type"", '=', ""'password';"", '}', 'catch', '(', 'e', ')', '{', '//', 'This', 'will', 'fail', 'in', 'IE', '<', '9', '}', ""document.getElementById('handle4').removeAttribute('placeholder');"", '},', '1000);', '//', 'Bind', 'a', 'submit', 'event', 'handler', 'to', 'the', 'test', 'form', 'function', 'submitHandler(', 'e', ')', '{', 'e.returnValue', '=', 'false;', 'return', 'false;', '}', 'if', '(', 'form.addEventListener', ')', '{', ""form.addEventListener('submit',"", 'submitHandler);', '}', 'else', 'if', '(', 'form.attachEvent', ')', '{', ""form.attachEvent('onsubmit',"", 'submitHandler);', '}', '```']",challenge not surrounded by ''': ,
"package com.github.stigmata.spi;

import com.github.stigmata.BirthmarkComparator;
import com.github.stigmata.BirthmarkExtractor;
import com.github.stigmata.BirthmarkPreprocessor;

/**
 * Birthmark service provider interface.
 *
 * @author Haruaki TAMADA
 */
public interface BirthmarkService{
    /**
     * returns a type of the birthmark this service provides.
     */
    String getType();

    /**
     * returns that given type string is compatible this birthmark type.
     * @param givenType
     * @return
     */
    boolean isType(String givenType);

    /**
     * returns a description of the birthmark this service provides.
     */
    String getDescription();

    /**
     * returns a preprocessor for the birthmark of this service.
     */
    BirthmarkPreprocessor getPreprocessor();

    /**
     * returns a extractor for the birthmark of this service.
     */
    BirthmarkExtractor getExtractor();

    /**
     * returns a comparator for the birthmark of this service.
     */
    BirthmarkComparator getComparator();

    boolean isExperimental();

    boolean isUserDefined();
}

","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.github.stigmata.spi;', 'import', 'com.github.stigmata.BirthmarkComparator;', 'import', 'com.github.stigmata.BirthmarkExtractor;', 'import', 'com.github.stigmata.BirthmarkPreprocessor;', '/**', '*', 'Birthmark', 'service', 'provider', 'interface.', '*', '*', '@author', 'Haruaki', 'TAMADA', '*/', 'public', 'interface', 'BirthmarkService{', '/**', '*', 'returns', 'a', 'type', 'of', 'the', 'birthmark', 'this', 'service', 'provides.', '*/', 'String', 'getType();', '/**', '*', 'returns', 'that', 'given', 'type', 'string', 'is', 'compatible', 'this', 'birthmark', 'type.', '*', '@param', 'givenType', '*', '@return', '*/', 'boolean', 'isType(String', 'givenType);', '/**', '*', 'returns', 'a', 'description', 'of', 'the', 'birthmark', 'this', 'service', 'provides.', '*/', 'String', 'getDescription();', '/**', '*', 'returns', 'a', 'preprocessor', 'for', 'the', 'birthmark', 'of', 'this', 'service.', '*/', 'BirthmarkPreprocessor', 'getPreprocessor();', '/**', '*', 'returns', 'a', 'extractor', 'for', 'the', 'birthmark', 'of', 'this', 'service.', '*/', 'BirthmarkExtractor', 'getExtractor();', '/**', '*', 'returns', 'a', 'comparator', 'for', 'the', 'birthmark', 'of', 'this', 'service.', '*/', 'BirthmarkComparator', 'getComparator();', 'boolean', 'isExperimental();', 'boolean', 'isUserDefined();', '}', '```']",challenge not surrounded by ''': ,
"//===----------------------------------------------------------------------===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is dual licensed under the MIT and the University of Illinois Open
// Source Licenses. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//

// <deque>

// class deque

// bool empty() const noexcept;

#include <deque>
#include <cassert>

#include ""test_macros.h""
#include ""min_allocator.h""

int main()
{
    {
    typedef std::deque<int> C;
    C c;
    ASSERT_NOEXCEPT(c.empty());
    assert(c.empty());
    c.push_back(C::value_type(1));
    assert(!c.empty());
    c.clear();
    assert(c.empty());
    }
#if TEST_STD_VER >= 11
    {
    typedef std::deque<int, min_allocator<int>> C;
    C c;
    ASSERT_NOEXCEPT(c.empty());
    assert(c.empty());
    c.push_back(C::value_type(1));
    assert(!c.empty());
    c.clear();
    assert(c.empty());
    }
#endif
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//===----------------------------------------------------------------------===//', '//', '//', 'The', 'LLVM', 'Compiler', 'Infrastructure', '//', '//', 'This', 'file', 'is', 'dual', 'licensed', 'under', 'the', 'MIT', 'and', 'the', 'University', 'of', 'Illinois', 'Open', '//', 'Source', 'Licenses.', 'See', 'LICENSE.TXT', 'for', 'details.', '//', '//===----------------------------------------------------------------------===//', '//', '<deque>', '//', 'class', 'deque', '//', 'bool', 'empty()', 'const', 'noexcept;', '#include', '<deque>', '#include', '<cassert>', '#include', '""test_macros.h""', '#include', '""min_allocator.h""', 'int', 'main()', '{', '{', 'typedef', 'std::deque<int>', 'C;', 'C', 'c;', 'ASSERT_NOEXCEPT(c.empty());', 'assert(c.empty());', 'c.push_back(C::value_type(1));', 'assert(!c.empty());', 'c.clear();', 'assert(c.empty());', '}', '#if', 'TEST_STD_VER', '>=', '11', '{', 'typedef', 'std::deque<int,', 'min_allocator<int>>', 'C;', 'C', 'c;', 'ASSERT_NOEXCEPT(c.empty());', 'assert(c.empty());', 'c.push_back(C::value_type(1));', 'assert(!c.empty());', 'c.clear();', 'assert(c.empty());', '}', '#endif', '}', '```']",challenge not surrounded by ''': ,
"package org.wildfly.swarm.connector;

import org.wildfly.swarm.container.RuntimeModuleProvider;

/**
 * @author Bob McWhirter
 */
public class ConnectorRuntimeModuleProvider implements RuntimeModuleProvider {
    public String getModuleName() {
        return ""org.wildfly.swarm.runtime.connector"";
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'org.wildfly.swarm.connector;', 'import', 'org.wildfly.swarm.container.RuntimeModuleProvider;', '/**', '*', '@author', 'Bob', 'McWhirter', '*/', 'public', 'class', 'ConnectorRuntimeModuleProvider', 'implements', 'RuntimeModuleProvider', '{', 'public', 'String', 'getModuleName()', '{', 'return', '""org.wildfly.swarm.runtime.connector"";', '}', '}', '```']",challenge not surrounded by ''': ,
"package eu.europa.esig.dss.cades.validation;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.OutputStream;

import org.bouncycastle.asn1.ASN1ObjectIdentifier;
import org.bouncycastle.asn1.x509.AlgorithmIdentifier;
import org.bouncycastle.operator.DigestCalculator;
import org.bouncycastle.operator.DigestCalculatorProvider;
import org.bouncycastle.operator.OperatorCreationException;

import eu.europa.esig.dss.DSSException;
import eu.europa.esig.dss.DigestAlgorithm;
import eu.europa.esig.dss.DigestDocument;
import eu.europa.esig.dss.utils.Utils;

/**
 * This class allows to provide digest values without original document
 */
public class PrecomputedDigestCalculatorProvider implements DigestCalculatorProvider {

	private final DigestDocument digestDocument;

	public PrecomputedDigestCalculatorProvider(DigestDocument digestDocument) {
		this.digestDocument = digestDocument;
	}

	@Override
	public DigestCalculator get(final AlgorithmIdentifier digestAlgorithmIdentifier) throws OperatorCreationException {

		ASN1ObjectIdentifier algorithmOid = digestAlgorithmIdentifier.getAlgorithm();
		final String digestBase64 = digestDocument.getDigest(DigestAlgorithm.forOID(algorithmOid.getId()));

		return new DigestCalculator() {

			@Override
			public OutputStream getOutputStream() {
				OutputStream os = new ByteArrayOutputStream();
				try {
					Utils.write(getDigest(), os);
				} catch (IOException e) {
					throw new DSSException(""Unable to get outputstream"", e);
				}
				return os;
			}

			@Override
			public byte[] getDigest() {
				return Utils.fromBase64(digestBase64);
			}

			@Override
			public AlgorithmIdentifier getAlgorithmIdentifier() {
				return digestAlgorithmIdentifier;
			}

		};
	}

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'eu.europa.esig.dss.cades.validation;', 'import', 'java.io.ByteArrayOutputStream;', 'import', 'java.io.IOException;', 'import', 'java.io.OutputStream;', 'import', 'org.bouncycastle.asn1.ASN1ObjectIdentifier;', 'import', 'org.bouncycastle.asn1.x509.AlgorithmIdentifier;', 'import', 'org.bouncycastle.operator.DigestCalculator;', 'import', 'org.bouncycastle.operator.DigestCalculatorProvider;', 'import', 'org.bouncycastle.operator.OperatorCreationException;', 'import', 'eu.europa.esig.dss.DSSException;', 'import', 'eu.europa.esig.dss.DigestAlgorithm;', 'import', 'eu.europa.esig.dss.DigestDocument;', 'import', 'eu.europa.esig.dss.utils.Utils;', '/**', '*', 'This', 'class', 'allows', 'to', 'provide', 'digest', 'values', 'without', 'original', 'document', '*/', 'public', 'class', 'PrecomputedDigestCalculatorProvider', 'implements', 'DigestCalculatorProvider', '{', 'private', 'final', 'DigestDocument', 'digestDocument;', 'public', 'PrecomputedDigestCalculatorProvider(DigestDocument', 'digestDocument)', '{', 'this.digestDocument', '=', 'digestDocument;', '}', '@Override', 'public', 'DigestCalculator', 'get(final', 'AlgorithmIdentifier', 'digestAlgorithmIdentifier)', 'throws', 'OperatorCreationException', '{', 'ASN1ObjectIdentifier', 'algorithmOid', '=', 'digestAlgorithmIdentifier.getAlgorithm();', 'final', 'String', 'digestBase64', '=', 'digestDocument.getDigest(DigestAlgorithm.forOID(algorithmOid.getId()));', 'return', 'new', 'DigestCalculator()', '{', '@Override', 'public', 'OutputStream', 'getOutputStream()', '{', 'OutputStream', 'os', '=', 'new', 'ByteArrayOutputStream();', 'try', '{', 'Utils.write(getDigest(),', 'os);', '}', 'catch', '(IOException', 'e)', '{', 'throw', 'new', 'DSSException(""Unable', 'to', 'get', 'outputstream"",', 'e);', '}', 'return', 'os;', '}', '@Override', 'public', 'byte[]', 'getDigest()', '{', 'return', 'Utils.fromBase64(digestBase64);', '}', '@Override', 'public', 'AlgorithmIdentifier', 'getAlgorithmIdentifier()', '{', 'return', 'digestAlgorithmIdentifier;', '}', '};', '}', '}', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE html>
<html lang=""en-us"">
  <head>
    <meta charset=""UTF-8"">
    <title>Lovingshuang.GitHub.io by lovingshuang</title>
    <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
    <link rel=""stylesheet"" type=""text/css"" href=""stylesheets/normalize.css"" media=""screen"">
    <link href='http://fonts.googleapis.com/css?family=Open+Sans:400,700' rel='stylesheet' type='text/css'>
    <link rel=""stylesheet"" type=""text/css"" href=""stylesheets/stylesheet.css"" media=""screen"">
    <link rel=""stylesheet"" type=""text/css"" href=""stylesheets/github-light.css"" media=""screen"">
  </head>
  <body>
    <section class=""page-header"">
      <h1 class=""project-name"">Lovingshuang.GitHub.io</h1>
      <h2 class=""project-tagline"">生日快乐</h2>
    </section>

    <section class=""main-content"">
      <h3>
<a id=""welcome-to-github-pages"" class=""anchor"" href=""#welcome-to-github-pages"" aria-hidden=""true""><span class=""octicon octicon-link""></span></a>Welcome to GitHub Pages.</h3>

<p>This automatic page generator is the easiest way to create beautiful pages for all of your projects. Author your page content here <a href=""https://guides.github.com/features/mastering-markdown/"">using GitHub Flavored Markdown</a>, select a template crafted by a designer, and publish. After your page is generated, you can check out the new <code>gh-pages</code> branch locally. If you’re using GitHub for Mac or GitHub for Windows, simply sync your repository and you’ll see the new branch.</p>

<h3>
<a id=""designer-templates"" class=""anchor"" href=""#designer-templates"" aria-hidden=""true""><span class=""octicon octicon-link""></span></a>Designer Templates</h3>

<p>We’ve crafted some handsome templates for you to use. Go ahead and click 'Continue to layouts' to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved.</p>

<h3>
<a id=""creating-pages-manually"" class=""anchor"" href=""#creating-pages-manually"" aria-hidden=""true""><span class=""octicon octicon-link""></span></a>Creating pages manually</h3>

<p>If you prefer to not use the automatic generator, push a branch named <code>gh-pages</code> to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.</p>

<h3>
<a id=""authors-and-contributors"" class=""anchor"" href=""#authors-and-contributors"" aria-hidden=""true""><span class=""octicon octicon-link""></span></a>Authors and Contributors</h3>

<p>You can <a href=""https://github.com/blog/821"" class=""user-mention"">@mention</a> a GitHub username to generate a link to their profile. The resulting <code>&lt;a&gt;</code> element will link to the contributor’s GitHub Profile. For example: In 2007, Chris Wanstrath (<a href=""https://github.com/defunkt"" class=""user-mention"">@defunkt</a>), PJ Hyett (<a href=""https://github.com/pjhyett"" class=""user-mention"">@pjhyett</a>), and Tom Preston-Werner (<a href=""https://github.com/mojombo"" class=""user-mention"">@mojombo</a>) founded GitHub.</p>

<h3>
<a id=""support-or-contact"" class=""anchor"" href=""#support-or-contact"" aria-hidden=""true""><span class=""octicon octicon-link""></span></a>Support or Contact</h3>

<p>Having trouble with Pages? Check out our <a href=""https://help.github.com/pages"">documentation</a> or <a href=""https://github.com/contact"">contact support</a> and we’ll help you sort it out.</p>

      <footer class=""site-footer"">

        <span class=""site-footer-credits"">This page was generated by <a href=""https://pages.github.com"">GitHub Pages</a> using the <a href=""https://github.com/jasonlong/cayman-theme"">Cayman theme</a> by <a href=""https://twitter.com/jasonlong"">Jason Long</a>.</span>
      </footer>

    </section>

  
  </body>
</html>

","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'html>', '<html', 'lang=""en-us"">', '<head>', '<meta', 'charset=""UTF-8"">', '<title>Lovingshuang.GitHub.io', 'by', 'lovingshuang</title>', '<meta', 'name=""viewport""', 'content=""width=device-width,', 'initial-scale=1"">', '<link', 'rel=""stylesheet""', 'type=""text/css""', 'href=""stylesheets/normalize.css""', 'media=""screen"">', '<link', ""href='http://fonts.googleapis.com/css?family=Open+Sans:400,700'"", ""rel='stylesheet'"", ""type='text/css'>"", '<link', 'rel=""stylesheet""', 'type=""text/css""', 'href=""stylesheets/stylesheet.css""', 'media=""screen"">', '<link', 'rel=""stylesheet""', 'type=""text/css""', 'href=""stylesheets/github-light.css""', 'media=""screen"">', '</head>', '<body>', '<section', 'class=""page-header"">', '<h1', 'class=""project-name"">Lovingshuang.GitHub.io</h1>', '<h2', 'class=""project-tagline"">生日快乐</h2>', '</section>', '<section', 'class=""main-content"">', '<h3>', '<a', 'id=""welcome-to-github-pages""', 'class=""anchor""', 'href=""#welcome-to-github-pages""', 'aria-hidden=""true""><span', 'class=""octicon', 'octicon-link""></span></a>Welcome', 'to', 'GitHub', 'Pages.</h3>', '<p>This', 'automatic', 'page', 'generator', 'is', 'the', 'easiest', 'way', 'to', 'create', 'beautiful', 'pages', 'for', 'all', 'of', 'your', 'projects.', 'Author', 'your', 'page', 'content', 'here', '<a', 'href=""https://guides.github.com/features/mastering-markdown/"">using', 'GitHub', 'Flavored', 'Markdown</a>,', 'select', 'a', 'template', 'crafted', 'by', 'a', 'designer,', 'and', 'publish.', 'After', 'your', 'page', 'is', 'generated,', 'you', 'can', 'check', 'out', 'the', 'new', '<code>gh-pages</code>', 'branch', 'locally.', 'If', 'you’re', 'using', 'GitHub', 'for', 'Mac', 'or', 'GitHub', 'for', 'Windows,', 'simply', 'sync', 'your', 'repository', 'and', 'you’ll', 'see', 'the', 'new', 'branch.</p>', '<h3>', '<a', 'id=""designer-templates""', 'class=""anchor""', 'href=""#designer-templates""', 'aria-hidden=""true""><span', 'class=""octicon', 'octicon-link""></span></a>Designer', 'Templates</h3>', '<p>We’ve', 'crafted', 'some', 'handsome', 'templates', 'for', 'you', 'to', 'use.', 'Go', 'ahead', 'and', 'click', ""'Continue"", 'to', ""layouts'"", 'to', 'browse', 'through', 'them.', 'You', 'can', 'easily', 'go', 'back', 'to', 'edit', 'your', 'page', 'before', 'publishing.', 'After', 'publishing', 'your', 'page,', 'you', 'can', 'revisit', 'the', 'page', 'generator', 'and', 'switch', 'to', 'another', 'theme.', 'Your', 'Page', 'content', 'will', 'be', 'preserved.</p>', '<h3>', '<a', 'id=""creating-pages-manually""', 'class=""anchor""', 'href=""#creating-pages-manually""', 'aria-hidden=""true""><span', 'class=""octicon', 'octicon-link""></span></a>Creating', 'pages', 'manually</h3>', '<p>If', 'you', 'prefer', 'to', 'not', 'use', 'the', 'automatic', 'generator,', 'push', 'a', 'branch', 'named', '<code>gh-pages</code>', 'to', 'your', 'repository', 'to', 'create', 'a', 'page', 'manually.', 'In', 'addition', 'to', 'supporting', 'regular', 'HTML', 'content,', 'GitHub', 'Pages', 'support', 'Jekyll,', 'a', 'simple,', 'blog', 'aware', 'static', 'site', 'generator.', 'Jekyll', 'makes', 'it', 'easy', 'to', 'create', 'site-wide', 'headers', 'and', 'footers', 'without', 'having', 'to', 'copy', 'them', 'across', 'every', 'page.', 'It', 'also', 'offers', 'intelligent', 'blog', 'support', 'and', 'other', 'advanced', 'templating', 'features.</p>', '<h3>', '<a', 'id=""authors-and-contributors""', 'class=""anchor""', 'href=""#authors-and-contributors""', 'aria-hidden=""true""><span', 'class=""octicon', 'octicon-link""></span></a>Authors', 'and', 'Contributors</h3>', '<p>You', 'can', '<a', 'href=""https://github.com/blog/821""', 'class=""user-mention"">@mention</a>', 'a', 'GitHub', 'username', 'to', 'generate', 'a', 'link', 'to', 'their', 'profile.', 'The', 'resulting', '<code>&lt;a&gt;</code>', 'element', 'will', 'link', 'to', 'the', 'contributor’s', 'GitHub', 'Profile.', 'For', 'example:', 'In', '2007,', 'Chris', 'Wanstrath', '(<a', 'href=""https://github.com/defunkt""', 'class=""user-mention"">@defunkt</a>),', 'PJ', 'Hyett', '(<a', 'href=""https://github.com/pjhyett""', 'class=""user-mention"">@pjhyett</a>),', 'and', 'Tom', 'Preston-Werner', '(<a', 'href=""https://github.com/mojombo""', 'class=""user-mention"">@mojombo</a>)', 'founded', 'GitHub.</p>', '<h3>', '<a', 'id=""support-or-contact""', 'class=""anchor""', 'href=""#support-or-contact""', 'aria-hidden=""true""><span', 'class=""octicon', 'octicon-link""></span></a>Support', 'or', 'Contact</h3>', '<p>Having', 'trouble', 'with', 'Pages?', 'Check', 'out', 'our', '<a', 'href=""https://help.github.com/pages"">documentation</a>', 'or', '<a', 'href=""https://github.com/contact"">contact', 'support</a>', 'and', 'we’ll', 'help', 'you', 'sort', 'it', 'out.</p>', '<footer', 'class=""site-footer"">', '<span', 'class=""site-footer-credits"">This', 'page', 'was', 'generated', 'by', '<a', 'href=""https://pages.github.com"">GitHub', 'Pages</a>', 'using', 'the', '<a', 'href=""https://github.com/jasonlong/cayman-theme"">Cayman', 'theme</a>', 'by', '<a', 'href=""https://twitter.com/jasonlong"">Jason', 'Long</a>.</span>', '</footer>', '</section>', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"package org.ssascaling.actuator;

import org.ssascaling.executor.Executor;
import org.ssascaling.primitive.Type;

/**
 * This is not used anymore.
 * @author tao
 *
 */
public class ThreadActuator implements Actuator {
	
	private Invoker invoker;
	
	
	
	public ThreadActuator(Invoker invoker) {
		super();
		this.invoker = invoker;
	}



	@Override
	public boolean execute(String alias, long... value) {	
		if (Executor.isTest) {
			System.out.print(""Setting "" + alias + "" with thread "" + value[0] + ""\n"");
			return true;
		}
		return true;
	}

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'org.ssascaling.actuator;', 'import', 'org.ssascaling.executor.Executor;', 'import', 'org.ssascaling.primitive.Type;', '/**', '*', 'This', 'is', 'not', 'used', 'anymore.', '*', '@author', 'tao', '*', '*/', 'public', 'class', 'ThreadActuator', 'implements', 'Actuator', '{', 'private', 'Invoker', 'invoker;', 'public', 'ThreadActuator(Invoker', 'invoker)', '{', 'super();', 'this.invoker', '=', 'invoker;', '}', '@Override', 'public', 'boolean', 'execute(String', 'alias,', 'long...', 'value)', '{', 'if', '(Executor.isTest)', '{', 'System.out.print(""Setting', '""', '+', 'alias', '+', '""', 'with', 'thread', '""', '+', 'value[0]', '+', '""\\n"");', 'return', 'true;', '}', 'return', 'true;', '}', '}', '```']",challenge not surrounded by ''': ,
"---
title: ""लावा ने लाॅन्च किया जेड91, फेस रिकाॅग्निशन के साथ, फुल व्यू एचडीप्लस डिस्प्ले स्मार्टफोन""
layout: item
category: [""business""]
date: 2018-04-02T06:27:09.307Z
image: 1522670229306lava.jpg
---
<p>मोबाइल हैंडसेट इंडस्ट्री में एक अग्रणी भारतीय बहुराष्ट्रीय कंपनी लावा इंटरनेशनल लिमिटेड ने लावा जेड91 की लाॅन्चिंग के साथ स्मार्टफोन की अपनी सबसे कामयाब जेड सीरीज के विस्तार का एलान किया। जेड91 डिजाइन और नई प्रौद्योगिकियों का एकदम सही संयोजन है - यह फेस रिकाॅग्निशन जैसे कई नए फीचर्स के साथ आता है, जो उपयोगकर्ता के फेस को स्कैन करते हुए 0.7 सेकेंड के भीतर आसानी से फोन को अनलॉक करता है। </p>

<p>जेड91 अपने चमकदार नीले रंग, 18ः9 चैड़ी स्क्रीन डिस्प्ले और एक असाधारण ग्लासफिनिश के साथ शानदार नजर आता है। 9,999 रुपए की कीमत के साथ यह डिवाइस मध्य अप्रैल- 2018 तक 100,000 से अधिक खुदरा दुकानों पर उपलब्ध होगी।</p>

<p>ड्यूअल-सिम लावा जेड91 की डिजाइन बहुत प्रभावशाली है, जो 5.7 इंच एचडीप्लस डिस्प्ले (18ः9) रिजॉल्यूशन, 2.5 डी घुमावदार डिजाइन, बहुत स्लीक बाॅडी (7.7 मिमी मोटी) के साथ आता है। साथ ही यह वन हैंड नेविगेशन की सुविधा प्रदान करता है।</p>","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```---', 'title:', '""लावा', 'ने', 'लाॅन्च', 'किया', 'जेड91,', 'फेस', 'रिकाॅग्निशन', 'के', 'साथ,', 'फुल', 'व्यू', 'एचडीप्लस', 'डिस्प्ले', 'स्मार्टफोन""', 'layout:', 'item', 'category:', '[""business""]', 'date:', '2018-04-02T06:27:09.307Z', 'image:', '1522670229306lava.jpg', '---', '<p>मोबाइल', 'हैंडसेट', 'इंडस्ट्री', 'में', 'एक', 'अग्रणी', 'भारतीय', 'बहुराष्ट्रीय', 'कंपनी', 'लावा', 'इंटरनेशनल', 'लिमिटेड', 'ने', 'लावा', 'जेड91', 'की', 'लाॅन्चिंग', 'के', 'साथ', 'स्मार्टफोन', 'की', 'अपनी', 'सबसे', 'कामयाब', 'जेड', 'सीरीज', 'के', 'विस्तार', 'का', 'एलान', 'किया।', 'जेड91', 'डिजाइन', 'और', 'नई', 'प्रौद्योगिकियों', 'का', 'एकदम', 'सही', 'संयोजन', 'है', '-', 'यह', 'फेस', 'रिकाॅग्निशन', 'जैसे', 'कई', 'नए', 'फीचर्स', 'के', 'साथ', 'आता', 'है,', 'जो', 'उपयोगकर्ता', 'के', 'फेस', 'को', 'स्कैन', 'करते', 'हुए', '0.7', 'सेकेंड', 'के', 'भीतर', 'आसानी', 'से', 'फोन', 'को', 'अनलॉक', 'करता', 'है।', '</p>', '<p>जेड91', 'अपने', 'चमकदार', 'नीले', 'रंग,', '18ः9', 'चैड़ी', 'स्क्रीन', 'डिस्प्ले', 'और', 'एक', 'असाधारण', 'ग्लासफिनिश', 'के', 'साथ', 'शानदार', 'नजर', 'आता', 'है।', '9,999', 'रुपए', 'की', 'कीमत', 'के', 'साथ', 'यह', 'डिवाइस', 'मध्य', 'अप्रैल-', '2018', 'तक', '100,000', 'से', 'अधिक', 'खुदरा', 'दुकानों', 'पर', 'उपलब्ध', 'होगी।</p>', '<p>ड्यूअल-सिम', 'लावा', 'जेड91', 'की', 'डिजाइन', 'बहुत', 'प्रभावशाली', 'है,', 'जो', '5.7', 'इंच', 'एचडीप्लस', 'डिस्प्ले', '(18ः9)', 'रिजॉल्यूशन,', '2.5', 'डी', 'घुमावदार', 'डिजाइन,', 'बहुत', 'स्लीक', 'बाॅडी', '(7.7', 'मिमी', 'मोटी)', 'के', 'साथ', 'आता', 'है।', 'साथ', 'ही', 'यह', 'वन', 'हैंड', 'नेविगेशन', 'की', 'सुविधा', 'प्रदान', 'करता', 'है।</p>```']",challenge not surrounded by ''': ,
"package freenet.support;

import java.util.HashMap;

import com.db4o.ObjectContainer;


@SuppressWarnings(""serial"") 
public class DebuggingHashMap<K extends Object, V extends Object> extends HashMap<K, V> {
	
	private static volatile boolean logMINOR;
	
	static {
		Logger.registerLogThresholdCallback(new LogThresholdCallback() {
			
			@Override
			public void shouldUpdate() {
				logMINOR = Logger.shouldLog(Logger.MINOR, this);
			}
		});
	}
	
	public boolean objectCanUpdate(ObjectContainer container) {
		if(logMINOR)
			Logger.minor(this, ""objectCanUpdate() on DebuggingHashMap ""+this+"" stored=""+container.ext().isStored(this)+"" active=""+container.ext().isActive(this)+"" size=""+size(), new Exception(""debug""));
		return true;
	}
	
	public boolean objectCanNew(ObjectContainer container) {
		if(logMINOR)
			Logger.minor(this, ""objectCanNew() on DebuggingHashMap ""+this+"" stored=""+container.ext().isStored(this)+"" active=""+container.ext().isActive(this)+"" size=""+size(), new Exception(""debug""));
		return true;
	}
	
	public void objectOnUpdate(ObjectContainer container) {
		if(logMINOR)
			Logger.minor(this, ""objectOnUpdate() on DebuggingHashMap ""+this+"" stored=""+container.ext().isStored(this)+"" active=""+container.ext().isActive(this)+"" size=""+size(), new Exception(""debug""));
	}
	
	public void objectOnNew(ObjectContainer container) {
		if(logMINOR)
			Logger.minor(this, ""objectOnNew() on DebuggingHashMap ""+this+"" stored=""+container.ext().isStored(this)+"" active=""+container.ext().isActive(this)+"" size=""+size(), new Exception(""debug""));
	}
	
	private transient boolean activating = false;
	
	public boolean objectCanActivate(ObjectContainer container) {
		if(logMINOR)
			Logger.minor(this, ""objectCanActivate() on DebuggingHashMap stored=""+container.ext().isStored(this)+"" active=""+container.ext().isActive(this)+"" size=""+size(), new Exception(""debug""));
		
		/** FIXME: This was an attempt to ensure we always activate to depth 2. It didn't work. :( */
		
//		if(activating) {
//			activating = false;
//			return true;
//		}
//		activating = true;
//		container.activate(this, 2);
//		return false;
		return true;
	}
	
}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'freenet.support;', 'import', 'java.util.HashMap;', 'import', 'com.db4o.ObjectContainer;', '@SuppressWarnings(""serial"")', 'public', 'class', 'DebuggingHashMap<K', 'extends', 'Object,', 'V', 'extends', 'Object>', 'extends', 'HashMap<K,', 'V>', '{', 'private', 'static', 'volatile', 'boolean', 'logMINOR;', 'static', '{', 'Logger.registerLogThresholdCallback(new', 'LogThresholdCallback()', '{', '@Override', 'public', 'void', 'shouldUpdate()', '{', 'logMINOR', '=', 'Logger.shouldLog(Logger.MINOR,', 'this);', '}', '});', '}', 'public', 'boolean', 'objectCanUpdate(ObjectContainer', 'container)', '{', 'if(logMINOR)', 'Logger.minor(this,', '""objectCanUpdate()', 'on', 'DebuggingHashMap', '""+this+""', 'stored=""+container.ext().isStored(this)+""', 'active=""+container.ext().isActive(this)+""', 'size=""+size(),', 'new', 'Exception(""debug""));', 'return', 'true;', '}', 'public', 'boolean', 'objectCanNew(ObjectContainer', 'container)', '{', 'if(logMINOR)', 'Logger.minor(this,', '""objectCanNew()', 'on', 'DebuggingHashMap', '""+this+""', 'stored=""+container.ext().isStored(this)+""', 'active=""+container.ext().isActive(this)+""', 'size=""+size(),', 'new', 'Exception(""debug""));', 'return', 'true;', '}', 'public', 'void', 'objectOnUpdate(ObjectContainer', 'container)', '{', 'if(logMINOR)', 'Logger.minor(this,', '""objectOnUpdate()', 'on', 'DebuggingHashMap', '""+this+""', 'stored=""+container.ext().isStored(this)+""', 'active=""+container.ext().isActive(this)+""', 'size=""+size(),', 'new', 'Exception(""debug""));', '}', 'public', 'void', 'objectOnNew(ObjectContainer', 'container)', '{', 'if(logMINOR)', 'Logger.minor(this,', '""objectOnNew()', 'on', 'DebuggingHashMap', '""+this+""', 'stored=""+container.ext().isStored(this)+""', 'active=""+container.ext().isActive(this)+""', 'size=""+size(),', 'new', 'Exception(""debug""));', '}', 'private', 'transient', 'boolean', 'activating', '=', 'false;', 'public', 'boolean', 'objectCanActivate(ObjectContainer', 'container)', '{', 'if(logMINOR)', 'Logger.minor(this,', '""objectCanActivate()', 'on', 'DebuggingHashMap', 'stored=""+container.ext().isStored(this)+""', 'active=""+container.ext().isActive(this)+""', 'size=""+size(),', 'new', 'Exception(""debug""));', '/**', 'FIXME:', 'This', 'was', 'an', 'attempt', 'to', 'ensure', 'we', 'always', 'activate', 'to', 'depth', '2.', 'It', ""didn't"", 'work.', ':(', '*/', '//', 'if(activating)', '{', '//', 'activating', '=', 'false;', '//', 'return', 'true;', '//', '}', '//', 'activating', '=', 'true;', '//', 'container.activate(this,', '2);', '//', 'return', 'false;', 'return', 'true;', '}', '}```']",challenge not surrounded by ''': ,
"/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

""use strict"";

const gHotKeys = (function () {

  let allHotKeys = new Map();

  self.port.on(""hotkeys"", function (hotkeys) {
    allHotKeys = new Map();

    for (let id of Object.keys(hotkeys)) {
      allHotKeys.set(id, hotkeys[id]);
    }
  });

  return {
    get(id) {
      return allHotKeys.get(id);
    },

    getCombination(hotkey) {
      return gModifiers.toText(hotkey.modifiers) +
             hotkey.key[0].toUpperCase() +
             hotkey.key.slice(1);
    },

    find(fun) {
      return [...allHotKeys.values()].find(fun);
    },

    filter(fun) {
      let filtered = new Map();

      for (let key of allHotKeys.values()) {
        if (fun(key)) {
          filtered.set(key.id, key);
        }
      }

      return filtered;
    }
  };
})();
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', 'This', 'Source', 'Code', 'Form', 'is', 'subject', 'to', 'the', 'terms', 'of', 'the', 'Mozilla', 'Public', '*', 'License,', 'v.', '2.0.', 'If', 'a', 'copy', 'of', 'the', 'MPL', 'was', 'not', 'distributed', 'with', 'this', '*', 'file,', 'You', 'can', 'obtain', 'one', 'at', 'http://mozilla.org/MPL/2.0/.', '*/', '""use', 'strict"";', 'const', 'gHotKeys', '=', '(function', '()', '{', 'let', 'allHotKeys', '=', 'new', 'Map();', 'self.port.on(""hotkeys"",', 'function', '(hotkeys)', '{', 'allHotKeys', '=', 'new', 'Map();', 'for', '(let', 'id', 'of', 'Object.keys(hotkeys))', '{', 'allHotKeys.set(id,', 'hotkeys[id]);', '}', '});', 'return', '{', 'get(id)', '{', 'return', 'allHotKeys.get(id);', '},', 'getCombination(hotkey)', '{', 'return', 'gModifiers.toText(hotkey.modifiers)', '+', 'hotkey.key[0].toUpperCase()', '+', 'hotkey.key.slice(1);', '},', 'find(fun)', '{', 'return', '[...allHotKeys.values()].find(fun);', '},', 'filter(fun)', '{', 'let', 'filtered', '=', 'new', 'Map();', 'for', '(let', 'key', 'of', 'allHotKeys.values())', '{', 'if', '(fun(key))', '{', 'filtered.set(key.id,', 'key);', '}', '}', 'return', 'filtered;', '}', '};', '})();', '```']",challenge not surrounded by ''': ,
"package ca.uhn.fhir.rest.server.exceptions;

import ca.uhn.fhir.rest.server.Constants;
import ca.uhn.fhir.util.CoverageIgnore;

/*
 * #%L
 * HAPI FHIR - Core Library
 * %%
 * Copyright (C) 2014 - 2017 University Health Network
 * %%
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * #L%
 */

/**
 * Represents an <b>HTTP 401 Client Unauthorized</b> response, which means that the client needs to provide credentials, or has provided invalid credentials.
 */
@CoverageIgnore
public class AuthenticationException extends BaseServerResponseException {

	public static final int STATUS_CODE = Constants.STATUS_HTTP_401_CLIENT_UNAUTHORIZED;

	private static final long serialVersionUID = 1L;

	public AuthenticationException() {
		super(STATUS_CODE, ""Client unauthorized"");
	}

	public AuthenticationException(String theMessage) {
		super(STATUS_CODE, theMessage);
	}

	public AuthenticationException(String theMessage, Throwable theCause) {
		super(STATUS_CODE, theMessage, theCause);
	}
	
	/**
	 * Adds a <code>WWW-Authenticate</code> header to the response, of the form:<br/>
	 * <code>WWW-Authenticate: Basic realm=""theRealm""</code> 
	 * 
	 * @return Returns a reference to <code>this</code> for easy method chaining
	 */
	public AuthenticationException addAuthenticateHeaderForRealm(String theRealm) {
		addResponseHeader(""WWW-Authenticate"", ""Basic realm=\"""" + theRealm + ""\"""");
		return this;
	}

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'ca.uhn.fhir.rest.server.exceptions;', 'import', 'ca.uhn.fhir.rest.server.Constants;', 'import', 'ca.uhn.fhir.util.CoverageIgnore;', '/*', '*', '#%L', '*', 'HAPI', 'FHIR', '-', 'Core', 'Library', '*', '%%', '*', 'Copyright', '(C)', '2014', '-', '2017', 'University', 'Health', 'Network', '*', '%%', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*', '#L%', '*/', '/**', '*', 'Represents', 'an', '<b>HTTP', '401', 'Client', 'Unauthorized</b>', 'response,', 'which', 'means', 'that', 'the', 'client', 'needs', 'to', 'provide', 'credentials,', 'or', 'has', 'provided', 'invalid', 'credentials.', '*/', '@CoverageIgnore', 'public', 'class', 'AuthenticationException', 'extends', 'BaseServerResponseException', '{', 'public', 'static', 'final', 'int', 'STATUS_CODE', '=', 'Constants.STATUS_HTTP_401_CLIENT_UNAUTHORIZED;', 'private', 'static', 'final', 'long', 'serialVersionUID', '=', '1L;', 'public', 'AuthenticationException()', '{', 'super(STATUS_CODE,', '""Client', 'unauthorized"");', '}', 'public', 'AuthenticationException(String', 'theMessage)', '{', 'super(STATUS_CODE,', 'theMessage);', '}', 'public', 'AuthenticationException(String', 'theMessage,', 'Throwable', 'theCause)', '{', 'super(STATUS_CODE,', 'theMessage,', 'theCause);', '}', '/**', '*', 'Adds', 'a', '<code>WWW-Authenticate</code>', 'header', 'to', 'the', 'response,', 'of', 'the', 'form:<br/>', '*', '<code>WWW-Authenticate:', 'Basic', 'realm=""theRealm""</code>', '*', '*', '@return', 'Returns', 'a', 'reference', 'to', '<code>this</code>', 'for', 'easy', 'method', 'chaining', '*/', 'public', 'AuthenticationException', 'addAuthenticateHeaderForRealm(String', 'theRealm)', '{', 'addResponseHeader(""WWW-Authenticate"",', '""Basic', 'realm=\\""""', '+', 'theRealm', '+', '""\\"""");', 'return', 'this;', '}', '}', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright (C) 2012 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package cn.jamesli.example.at99swiperefreshwithgridview.common.logger;

import android.util.Log;

/**
 * Helper class which wraps Android's native Log utility in the Logger interface.  This way
 * normal DDMS output can be one of the many targets receiving and outputting logs simultaneously.
 */
public class LogWrapper implements LogNode {

    // For piping:  The next node to receive Log data after this one has done its work.
    private LogNode mNext;

    /**
     * Returns the next LogNode in the linked list.
     */
    public LogNode getNext() {
        return mNext;
    }

    /**
     * Sets the LogNode data will be sent to..
     */
    public void setNext(LogNode node) {
        mNext = node;
    }

    /**
     * Prints data out to the console using Android's native log mechanism.
     * @param priority Log level of the data being logged.  Verbose, Error, etc.
     * @param tag Tag for for the log data.  Can be used to organize log statements.
     * @param msg The actual message to be logged. The actual message to be logged.
     * @param tr If an exception was thrown, this can be sent along for the logging facilities
     *           to extract and print useful information.
     */
    @Override
    public void println(int priority, String tag, String msg, Throwable tr) {
        // There actually are log methods that don't take a msg parameter.  For now,
        // if that's the case, just convert null to the empty string and move on.
        String useMsg = msg;
        if (useMsg == null) {
            useMsg = """";
        }

        // If an exeption was provided, convert that exception to a usable string and attach
        // it to the end of the msg method.
        if (tr != null) {
            msg += ""\n"" + Log.getStackTraceString(tr);
        }

        // This is functionally identical to Log.x(tag, useMsg);
        // For instance, if priority were Log.VERBOSE, this would be the same as Log.v(tag, useMsg)
        Log.println(priority, tag, useMsg);

        // If this isn't the last node in the chain, move things along.
        if (mNext != null) {
            mNext.println(priority, tag, msg, tr);
        }
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '(C)', '2012', 'The', 'Android', 'Open', 'Source', 'Project', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'cn.jamesli.example.at99swiperefreshwithgridview.common.logger;', 'import', 'android.util.Log;', '/**', '*', 'Helper', 'class', 'which', 'wraps', ""Android's"", 'native', 'Log', 'utility', 'in', 'the', 'Logger', 'interface.', 'This', 'way', '*', 'normal', 'DDMS', 'output', 'can', 'be', 'one', 'of', 'the', 'many', 'targets', 'receiving', 'and', 'outputting', 'logs', 'simultaneously.', '*/', 'public', 'class', 'LogWrapper', 'implements', 'LogNode', '{', '//', 'For', 'piping:', 'The', 'next', 'node', 'to', 'receive', 'Log', 'data', 'after', 'this', 'one', 'has', 'done', 'its', 'work.', 'private', 'LogNode', 'mNext;', '/**', '*', 'Returns', 'the', 'next', 'LogNode', 'in', 'the', 'linked', 'list.', '*/', 'public', 'LogNode', 'getNext()', '{', 'return', 'mNext;', '}', '/**', '*', 'Sets', 'the', 'LogNode', 'data', 'will', 'be', 'sent', 'to..', '*/', 'public', 'void', 'setNext(LogNode', 'node)', '{', 'mNext', '=', 'node;', '}', '/**', '*', 'Prints', 'data', 'out', 'to', 'the', 'console', 'using', ""Android's"", 'native', 'log', 'mechanism.', '*', '@param', 'priority', 'Log', 'level', 'of', 'the', 'data', 'being', 'logged.', 'Verbose,', 'Error,', 'etc.', '*', '@param', 'tag', 'Tag', 'for', 'for', 'the', 'log', 'data.', 'Can', 'be', 'used', 'to', 'organize', 'log', 'statements.', '*', '@param', 'msg', 'The', 'actual', 'message', 'to', 'be', 'logged.', 'The', 'actual', 'message', 'to', 'be', 'logged.', '*', '@param', 'tr', 'If', 'an', 'exception', 'was', 'thrown,', 'this', 'can', 'be', 'sent', 'along', 'for', 'the', 'logging', 'facilities', '*', 'to', 'extract', 'and', 'print', 'useful', 'information.', '*/', '@Override', 'public', 'void', 'println(int', 'priority,', 'String', 'tag,', 'String', 'msg,', 'Throwable', 'tr)', '{', '//', 'There', 'actually', 'are', 'log', 'methods', 'that', ""don't"", 'take', 'a', 'msg', 'parameter.', 'For', 'now,', '//', 'if', ""that's"", 'the', 'case,', 'just', 'convert', 'null', 'to', 'the', 'empty', 'string', 'and', 'move', 'on.', 'String', 'useMsg', '=', 'msg;', 'if', '(useMsg', '==', 'null)', '{', 'useMsg', '=', '"""";', '}', '//', 'If', 'an', 'exeption', 'was', 'provided,', 'convert', 'that', 'exception', 'to', 'a', 'usable', 'string', 'and', 'attach', '//', 'it', 'to', 'the', 'end', 'of', 'the', 'msg', 'method.', 'if', '(tr', '!=', 'null)', '{', 'msg', '+=', '""\\n""', '+', 'Log.getStackTraceString(tr);', '}', '//', 'This', 'is', 'functionally', 'identical', 'to', 'Log.x(tag,', 'useMsg);', '//', 'For', 'instance,', 'if', 'priority', 'were', 'Log.VERBOSE,', 'this', 'would', 'be', 'the', 'same', 'as', 'Log.v(tag,', 'useMsg)', 'Log.println(priority,', 'tag,', 'useMsg);', '//', 'If', 'this', ""isn't"", 'the', 'last', 'node', 'in', 'the', 'chain,', 'move', 'things', 'along.', 'if', '(mNext', '!=', 'null)', '{', 'mNext.println(priority,', 'tag,', 'msg,', 'tr);', '}', '}', '}', '```']",challenge not surrounded by ''': ,
"
var Extm;

Extm = (function ( global, Backbone, _ , Marionette, Mustache, async) {

    ""use strict"";

    Extm = {};
    Extm.$ = Backbone.$;

    //@include ../extm.wp.model.js

    //@include ../extm.controllers.js

    //@include ../extm.applauncher.js
    //@include ../extm.store.js
    //@include ../extm.msgbus.js

    //@include ../extm.application.js
    //@include ../extm.region.controller.js
    //@include ../extm.marionette.renderer.js

    //@include ../extm.formview.js
    //@include ../extm.formlayoutview.js

    return Extm;

})( this, Backbone, _, Marionette, Mustache, async );","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```', 'var', 'Extm;', 'Extm', '=', '(function', '(', 'global,', 'Backbone,', '_', ',', 'Marionette,', 'Mustache,', 'async)', '{', '""use', 'strict"";', 'Extm', '=', '{};', 'Extm.$', '=', 'Backbone.$;', '//@include', '../extm.wp.model.js', '//@include', '../extm.controllers.js', '//@include', '../extm.applauncher.js', '//@include', '../extm.store.js', '//@include', '../extm.msgbus.js', '//@include', '../extm.application.js', '//@include', '../extm.region.controller.js', '//@include', '../extm.marionette.renderer.js', '//@include', '../extm.formview.js', '//@include', '../extm.formlayoutview.js', 'return', 'Extm;', '})(', 'this,', 'Backbone,', '_,', 'Marionette,', 'Mustache,', 'async', ');```']",challenge not surrounded by ''': ,
"package ast;

public class Assignment extends Command implements Statement {
	
	private Expression dest;
	private Expression source;

	public Assignment(int lineNum, int charPos, Expression dest, Expression source) {
		super(lineNum, charPos);
		this.dest = dest;
		this.source = source;
	}
	
	public Expression destination()
	{
		return dest;
	}
	
	public Expression source()
	{
		return source;
	}

	@Override
	public void accept(CommandVisitor visitor) {
		visitor.visit(this);
	}

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'ast;', 'public', 'class', 'Assignment', 'extends', 'Command', 'implements', 'Statement', '{', 'private', 'Expression', 'dest;', 'private', 'Expression', 'source;', 'public', 'Assignment(int', 'lineNum,', 'int', 'charPos,', 'Expression', 'dest,', 'Expression', 'source)', '{', 'super(lineNum,', 'charPos);', 'this.dest', '=', 'dest;', 'this.source', '=', 'source;', '}', 'public', 'Expression', 'destination()', '{', 'return', 'dest;', '}', 'public', 'Expression', 'source()', '{', 'return', 'source;', '}', '@Override', 'public', 'void', 'accept(CommandVisitor', 'visitor)', '{', 'visitor.visit(this);', '}', '}', '```']",challenge not surrounded by ''': ,
"/**
 * Copyright (c) 2016-present, RxJava Contributors.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License""); you may not use this file except in
 * compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is
 * distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See
 * the License for the specific language governing permissions and limitations under the License.
 */

package io.reactivex;

import io.reactivex.annotations.*;
import org.reactivestreams.Subscriber;

/**
 * Interface to map/wrap a downstream subscriber to an upstream subscriber.
 *
 * @param <Downstream> the value type of the downstream
 * @param <Upstream> the value type of the upstream
 */
public interface FlowableOperator<Downstream, Upstream> {
    /**
     * Applies a function to the child Subscriber and returns a new parent Subscriber.
     * @param subscriber the child Subscriber instance
     * @return the parent Subscriber instance
     * @throws Exception on failure
     */
    @NonNull
    Subscriber<? super Upstream> apply(@NonNull Subscriber<? super Downstream> subscriber) throws Exception;
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', 'Copyright', '(c)', '2016-present,', 'RxJava', 'Contributors.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', '*', 'compliance', 'with', 'the', 'License.', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', 'distributed', 'under', 'the', 'License', 'is', '*', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', 'See', '*', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'io.reactivex;', 'import', 'io.reactivex.annotations.*;', 'import', 'org.reactivestreams.Subscriber;', '/**', '*', 'Interface', 'to', 'map/wrap', 'a', 'downstream', 'subscriber', 'to', 'an', 'upstream', 'subscriber.', '*', '*', '@param', '<Downstream>', 'the', 'value', 'type', 'of', 'the', 'downstream', '*', '@param', '<Upstream>', 'the', 'value', 'type', 'of', 'the', 'upstream', '*/', 'public', 'interface', 'FlowableOperator<Downstream,', 'Upstream>', '{', '/**', '*', 'Applies', 'a', 'function', 'to', 'the', 'child', 'Subscriber', 'and', 'returns', 'a', 'new', 'parent', 'Subscriber.', '*', '@param', 'subscriber', 'the', 'child', 'Subscriber', 'instance', '*', '@return', 'the', 'parent', 'Subscriber', 'instance', '*', '@throws', 'Exception', 'on', 'failure', '*/', '@NonNull', 'Subscriber<?', 'super', 'Upstream>', 'apply(@NonNull', 'Subscriber<?', 'super', 'Downstream>', 'subscriber)', 'throws', 'Exception;', '}', '```']",challenge not surrounded by ''': ,
"/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

import { expect } from ""chai"";
import React from ""react"";
import { Provider } from ""react-redux"";
import configureStore from ""redux-mock-store"";

import { initialState } from ""../mock-redux-state"";
import mountWithL10n from ""test/mocks/l10n"";
import { startNewItem } from ""src/webextension/list/actions"";
import AddItem from ""src/webextension/list/manage/containers/add-item"";

const middlewares = [];
const mockStore = configureStore(middlewares);

describe(""list > manage > containers > <AddItem/>"", () => {
  it(""startNewItem() dispatched"", () => {
    const store = mockStore(initialState);
    const wrapper = mountWithL10n(
      <Provider store={store}>
        <AddItem/>
      </Provider>
    );
    wrapper.simulate(""click"");
    expect(store.getActions()).to.deep.equal([startNewItem()]);
  });

  it(""disabled when editing an item"", () => {
    const store = mockStore({
      ...initialState,
      editor: {
        ...initialState.editor,
        editing: true,
      },
    });
    const wrapper = mountWithL10n(
      <Provider store={store}>
        <AddItem/>
      </Provider>
    );
    wrapper.simulate(""click"");
    expect(store.getActions()).to.deep.equal([]);
  });
});
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', 'This', 'Source', 'Code', 'Form', 'is', 'subject', 'to', 'the', 'terms', 'of', 'the', 'Mozilla', 'Public', '*', 'License,', 'v.', '2.0.', 'If', 'a', 'copy', 'of', 'the', 'MPL', 'was', 'not', 'distributed', 'with', 'this', '*', 'file,', 'You', 'can', 'obtain', 'one', 'at', 'http://mozilla.org/MPL/2.0/.', '*/', 'import', '{', 'expect', '}', 'from', '""chai"";', 'import', 'React', 'from', '""react"";', 'import', '{', 'Provider', '}', 'from', '""react-redux"";', 'import', 'configureStore', 'from', '""redux-mock-store"";', 'import', '{', 'initialState', '}', 'from', '""../mock-redux-state"";', 'import', 'mountWithL10n', 'from', '""test/mocks/l10n"";', 'import', '{', 'startNewItem', '}', 'from', '""src/webextension/list/actions"";', 'import', 'AddItem', 'from', '""src/webextension/list/manage/containers/add-item"";', 'const', 'middlewares', '=', '[];', 'const', 'mockStore', '=', 'configureStore(middlewares);', 'describe(""list', '>', 'manage', '>', 'containers', '>', '<AddItem/>"",', '()', '=>', '{', 'it(""startNewItem()', 'dispatched"",', '()', '=>', '{', 'const', 'store', '=', 'mockStore(initialState);', 'const', 'wrapper', '=', 'mountWithL10n(', '<Provider', 'store={store}>', '<AddItem/>', '</Provider>', ');', 'wrapper.simulate(""click"");', 'expect(store.getActions()).to.deep.equal([startNewItem()]);', '});', 'it(""disabled', 'when', 'editing', 'an', 'item"",', '()', '=>', '{', 'const', 'store', '=', 'mockStore({', '...initialState,', 'editor:', '{', '...initialState.editor,', 'editing:', 'true,', '},', '});', 'const', 'wrapper', '=', 'mountWithL10n(', '<Provider', 'store={store}>', '<AddItem/>', '</Provider>', ');', 'wrapper.simulate(""click"");', 'expect(store.getActions()).to.deep.equal([]);', '});', '});', '```']",challenge not surrounded by ''': ,
"/** global.hpp **/

#ifndef GLOBAL_HPP
#define GLOBAL_HPP

#include <SDL/SDL.h>
#include <SDL/SDL_opengl.h>

#define DRAW_3D false

#define PI 3.14159265f

extern const short WIDTH;
extern const short HEIGHT;
extern short BLUR_WIDTH, BLUR_HEIGHT;

extern Uint8 *playerinputs;

#endif
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', 'global.hpp', '**/', '#ifndef', 'GLOBAL_HPP', '#define', 'GLOBAL_HPP', '#include', '<SDL/SDL.h>', '#include', '<SDL/SDL_opengl.h>', '#define', 'DRAW_3D', 'false', '#define', 'PI', '3.14159265f', 'extern', 'const', 'short', 'WIDTH;', 'extern', 'const', 'short', 'HEIGHT;', 'extern', 'short', 'BLUR_WIDTH,', 'BLUR_HEIGHT;', 'extern', 'Uint8', '*playerinputs;', '#endif', '```']",challenge not surrounded by ''': ,
"<ul class=""topnav"" id=""menuTopNav"">
    <li ng-repeat=""item in vm.items"">
        <a href=""item.route"">{{ item.name }}</a>
    </li>
    <li class=""icon"">
        <a href=""javascript:void(0);"" ng-click=""vm.openMenu()"">&#9776;</a>
    </li>
</ul>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<ul', 'class=""topnav""', 'id=""menuTopNav"">', '<li', 'ng-repeat=""item', 'in', 'vm.items"">', '<a', 'href=""item.route"">{{', 'item.name', '}}</a>', '</li>', '<li', 'class=""icon"">', '<a', 'href=""javascript:void(0);""', 'ng-click=""vm.openMenu()"">&#9776;</a>', '</li>', '</ul>', '```']",challenge not surrounded by ''': ,
"FROM haproxy:1.7.2
MAINTAINER Robert Sigler <rsigler@gmail.com>
LABEL version=1.0
LABEL description=""HAProxy for ELK Stack""
LABEL builder=rmrfslashbin
LABEL imageName=haproxy

COPY tls/ /tls/
COPY haproxy/ /usr/local/etc/haproxy/
EXPOSE 80 443 9200
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```FROM', 'haproxy:1.7.2', 'MAINTAINER', 'Robert', 'Sigler', '<rsigler@gmail.com>', 'LABEL', 'version=1.0', 'LABEL', 'description=""HAProxy', 'for', 'ELK', 'Stack""', 'LABEL', 'builder=rmrfslashbin', 'LABEL', 'imageName=haproxy', 'COPY', 'tls/', '/tls/', 'COPY', 'haproxy/', '/usr/local/etc/haproxy/', 'EXPOSE', '80', '443', '9200', '```']",challenge not surrounded by ''': ,
"<html dir=""LTR"">
  <head>
    <meta http-equiv=""Content-Type"" content=""text/html; charset=Windows-1252"" />
    <meta name=""vs_targetSchema"" content=""http://schemas.microsoft.com/intellisense/ie5"" />
    <title>About Constructor (Assembly)</title>
    <xml>
    </xml>
    <link rel=""stylesheet"" type=""text/css"" href=""MSDN.css"" />
  </head>
  <body id=""bodyID"" class=""dtBODY"">
    <div id=""nsbanner"">
      <div id=""bannerrow1"">
        <table class=""bannerparthead"" cellspacing=""0"">
          <tr id=""hdr"">
            <td class=""runninghead"">SQL Schema Tool Help</td>
            <td class=""product"">
            </td>
          </tr>
        </table>
      </div>
      <div id=""TitleRow"">
        <h1 class=""dtH1"">About Constructor (Assembly)</h1>
      </div>
    </div>
    <div id=""nstext"">
      <p> The about class constructor </p>
      <div class=""syntax"">public About(<br />   <a href=""ms-help://MS.NETFrameworkSDKv1.1/cpref/html/frlrfSystemReflectionAssemblyClassTopic.htm"">Assembly</a> <i>a</i><br />);</div>
      <h4 class=""dtH4"">Parameters</h4>
      <dl>
        <dt>
          <i>a</i>
        </dt>
        <dd>assembly</dd>
      </dl>
      <h4 class=""dtH4"">See Also</h4>
      <p>
        <a href=""Lewis.SST.Help.About.html"">About Class</a> | <a href=""Lewis.SST.Help.html"">Lewis.SST.Help Namespace</a> | <a href=""Lewis.SST.Help.AboutConstructor.html"">About Constructor Overload List</a></p>
      <hr />
      <div id=""footer"">
        <p>
        </p>
        <p>Generated from assembly SST [1.0.2793.35291]</p>
      </div>
    </div>
  </body>
</html>","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<html', 'dir=""LTR"">', '<head>', '<meta', 'http-equiv=""Content-Type""', 'content=""text/html;', 'charset=Windows-1252""', '/>', '<meta', 'name=""vs_targetSchema""', 'content=""http://schemas.microsoft.com/intellisense/ie5""', '/>', '<title>About', 'Constructor', '(Assembly)</title>', '<xml>', '</xml>', '<link', 'rel=""stylesheet""', 'type=""text/css""', 'href=""MSDN.css""', '/>', '</head>', '<body', 'id=""bodyID""', 'class=""dtBODY"">', '<div', 'id=""nsbanner"">', '<div', 'id=""bannerrow1"">', '<table', 'class=""bannerparthead""', 'cellspacing=""0"">', '<tr', 'id=""hdr"">', '<td', 'class=""runninghead"">SQL', 'Schema', 'Tool', 'Help</td>', '<td', 'class=""product"">', '</td>', '</tr>', '</table>', '</div>', '<div', 'id=""TitleRow"">', '<h1', 'class=""dtH1"">About', 'Constructor', '(Assembly)</h1>', '</div>', '</div>', '<div', 'id=""nstext"">', '<p>', 'The', 'about', 'class', 'constructor', '</p>', '<div', 'class=""syntax"">public', 'About(<br', '/>', '<a', 'href=""ms-help://MS.NETFrameworkSDKv1.1/cpref/html/frlrfSystemReflectionAssemblyClassTopic.htm"">Assembly</a>', '<i>a</i><br', '/>);</div>', '<h4', 'class=""dtH4"">Parameters</h4>', '<dl>', '<dt>', '<i>a</i>', '</dt>', '<dd>assembly</dd>', '</dl>', '<h4', 'class=""dtH4"">See', 'Also</h4>', '<p>', '<a', 'href=""Lewis.SST.Help.About.html"">About', 'Class</a>', '|', '<a', 'href=""Lewis.SST.Help.html"">Lewis.SST.Help', 'Namespace</a>', '|', '<a', 'href=""Lewis.SST.Help.AboutConstructor.html"">About', 'Constructor', 'Overload', 'List</a></p>', '<hr', '/>', '<div', 'id=""footer"">', '<p>', '</p>', '<p>Generated', 'from', 'assembly', 'SST', '[1.0.2793.35291]</p>', '</div>', '</div>', '</body>', '</html>```']",challenge not surrounded by ''': ,
"/*
 *  Copyright 2009 The Apache Software Foundation
 *
 *  Licensed under the Apache License, Version 2.0 (the ""License"");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an ""AS IS"" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.apache.ibatis.ibator.generator.ibatis3.javamapper.elements;

import org.apache.ibatis.ibator.api.dom.java.Interface;
import org.apache.ibatis.ibator.generator.AbstractGenerator;

/**
 * 
 * @author Jeff Butler
 */
public abstract class AbstractJavaMapperMethodGenerator extends AbstractGenerator {
    public abstract void addInterfaceElements(Interface interfaze);

    public AbstractJavaMapperMethodGenerator() {
        super();
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '2009', 'The', 'Apache', 'Software', 'Foundation', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'org.apache.ibatis.ibator.generator.ibatis3.javamapper.elements;', 'import', 'org.apache.ibatis.ibator.api.dom.java.Interface;', 'import', 'org.apache.ibatis.ibator.generator.AbstractGenerator;', '/**', '*', '*', '@author', 'Jeff', 'Butler', '*/', 'public', 'abstract', 'class', 'AbstractJavaMapperMethodGenerator', 'extends', 'AbstractGenerator', '{', 'public', 'abstract', 'void', 'addInterfaceElements(Interface', 'interfaze);', 'public', 'AbstractJavaMapperMethodGenerator()', '{', 'super();', '}', '}', '```']",challenge not surrounded by ''': ,
"### Basic assignment
var=foo
var=bar
###
var=bar

### Multiple assignments
var1=foo var2=bar
###
var1=foo
var2=bar

### Local assignment
var=foo pwd
###
# empty

### Argument, not assignment
echo var=foo
###
# empty

### Empty assignment
var1= var2=bar
###
var1=
var2=bar

### Strange names
_0z=foo
0var=bar # not an assignment
###
_0z=foo

### Compound assignment
var=foo var+=bar
###
var=foobar

### Assignment builtins
export var1=foo
export var2=(foo bar)
###
var1=foo
var2=(foo bar)
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```###', 'Basic', 'assignment', 'var=foo', 'var=bar', '###', 'var=bar', '###', 'Multiple', 'assignments', 'var1=foo', 'var2=bar', '###', 'var1=foo', 'var2=bar', '###', 'Local', 'assignment', 'var=foo', 'pwd', '###', '#', 'empty', '###', 'Argument,', 'not', 'assignment', 'echo', 'var=foo', '###', '#', 'empty', '###', 'Empty', 'assignment', 'var1=', 'var2=bar', '###', 'var1=', 'var2=bar', '###', 'Strange', 'names', '_0z=foo', '0var=bar', '#', 'not', 'an', 'assignment', '###', '_0z=foo', '###', 'Compound', 'assignment', 'var=foo', 'var+=bar', '###', 'var=foobar', '###', 'Assignment', 'builtins', 'export', 'var1=foo', 'export', 'var2=(foo', 'bar)', '###', 'var1=foo', 'var2=(foo', 'bar)', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright (C) 2012 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.nativescript.widgets.image;

import android.annotation.TargetApi;
import android.os.Build;
import android.os.Build.VERSION_CODES;
import android.os.StrictMode;

/**
 * Class containing some static utility methods.
 */
public class Utils {
    private Utils() {};

    public static boolean hasFroyo() {
        // Can use static final constants like FROYO, declared in later versions
        // of the OS since they are inlined at compile time. This is guaranteed behavior.
        return Build.VERSION.SDK_INT >= VERSION_CODES.FROYO;
    }

    public static boolean hasGingerbread() {
        return Build.VERSION.SDK_INT >= VERSION_CODES.GINGERBREAD;
    }

    public static boolean hasHoneycomb() {
        return Build.VERSION.SDK_INT >= VERSION_CODES.HONEYCOMB;
    }

    public static boolean hasHoneycombMR1() {
        return Build.VERSION.SDK_INT >= VERSION_CODES.HONEYCOMB_MR1;
    }

    public static boolean hasJellyBean() {
        return Build.VERSION.SDK_INT >= VERSION_CODES.JELLY_BEAN;
    }

    public static boolean hasKitKat() {
        return Build.VERSION.SDK_INT >= VERSION_CODES.KITKAT;
    }

    public static boolean hasN() {
        return Build.VERSION.SDK_INT >= VERSION_CODES.N;
    }
}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '(C)', '2012', 'The', 'Android', 'Open', 'Source', 'Project', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'org.nativescript.widgets.image;', 'import', 'android.annotation.TargetApi;', 'import', 'android.os.Build;', 'import', 'android.os.Build.VERSION_CODES;', 'import', 'android.os.StrictMode;', '/**', '*', 'Class', 'containing', 'some', 'static', 'utility', 'methods.', '*/', 'public', 'class', 'Utils', '{', 'private', 'Utils()', '{};', 'public', 'static', 'boolean', 'hasFroyo()', '{', '//', 'Can', 'use', 'static', 'final', 'constants', 'like', 'FROYO,', 'declared', 'in', 'later', 'versions', '//', 'of', 'the', 'OS', 'since', 'they', 'are', 'inlined', 'at', 'compile', 'time.', 'This', 'is', 'guaranteed', 'behavior.', 'return', 'Build.VERSION.SDK_INT', '>=', 'VERSION_CODES.FROYO;', '}', 'public', 'static', 'boolean', 'hasGingerbread()', '{', 'return', 'Build.VERSION.SDK_INT', '>=', 'VERSION_CODES.GINGERBREAD;', '}', 'public', 'static', 'boolean', 'hasHoneycomb()', '{', 'return', 'Build.VERSION.SDK_INT', '>=', 'VERSION_CODES.HONEYCOMB;', '}', 'public', 'static', 'boolean', 'hasHoneycombMR1()', '{', 'return', 'Build.VERSION.SDK_INT', '>=', 'VERSION_CODES.HONEYCOMB_MR1;', '}', 'public', 'static', 'boolean', 'hasJellyBean()', '{', 'return', 'Build.VERSION.SDK_INT', '>=', 'VERSION_CODES.JELLY_BEAN;', '}', 'public', 'static', 'boolean', 'hasKitKat()', '{', 'return', 'Build.VERSION.SDK_INT', '>=', 'VERSION_CODES.KITKAT;', '}', 'public', 'static', 'boolean', 'hasN()', '{', 'return', 'Build.VERSION.SDK_INT', '>=', 'VERSION_CODES.N;', '}', '}```']",challenge not surrounded by ''': ,
"from Products.CMFCore.utils import getToolByName
from Products.Scrawl.config import BLOG_ENTRY_NAME, GLOBALS
from Products.Scrawl import HAS_PLONE30
from Products.Archetypes.Extensions.utils import install_subskin
import string
from StringIO import StringIO

def install(portal):
    out = StringIO()

    # copy the News Item for our blog entry
    portal_types = getToolByName(portal, 'portal_types')
    if BLOG_ENTRY_NAME not in portal_types.objectIds():
        cb_copy_data = portal_types.manage_copyObjects(['News Item'])
        paste_data = portal_types.manage_pasteObjects(cb_copy_data)
        temp_id = paste_data[0]['new_id']
        portal_types.manage_renameObject(temp_id, BLOG_ENTRY_NAME)
        getattr(portal_types, BLOG_ENTRY_NAME).title = BLOG_ENTRY_NAME
        getattr(portal_types, BLOG_ENTRY_NAME).i18n_domain = 'cynin'
        out.write(""Duplicated 'News Item' FTI info as '%s'"" % BLOG_ENTRY_NAME)

    # tweak Blog Entry FTI settings
    blog = getattr(portal_types, BLOG_ENTRY_NAME)
    blog.default_view = 'blogentry_view'
    blog.immediate_view = 'blogentry_view'
    view = 'blogentry_view'
    if view not in blog.view_methods:
        blog._updateProperty('view_methods', blog.view_methods + (view,))
    blog.allow_discussion = True
    out.write(""Tweaked %s FTU settings"" % BLOG_ENTRY_NAME)

    # make Blog Entry use portal factory, so we don't have any blog entry skeletons
    factory = getToolByName(portal, 'portal_factory')
    types = factory.getFactoryTypes().keys()
    if 'Blog Entry' not in types:
        types.append('Blog Entry')
        factory.manage_setPortalFactoryTypes(listOfTypeIds=types)
        print >> out, ""Added Blog Entry to portal factory""

    # install our skins
    install_subskin(portal, out, GLOBALS)
    skins_tool = getToolByName(portal, ""portal_skins"")
    if HAS_PLONE30:
        bad_skin = ""scrawl""
    else:
        bad_skin = ""scrawl_30""

    # Iterate over all existing skins and remove the one we don't want
    skins = skins_tool.getSkinSelections()
    for skin in skins:
        path = skins_tool.getSkinPath(skin)
        path = map(string.strip, string.split(path,','))
        if bad_skin in path:
            path.remove(bad_skin)
            path = string.join(path, ', ')
            # addSkinSelection will replace existing skins as well.
            skins_tool.addSkinSelection(skin, path)


    # make blog view available to Smart Folders
    view = 'blog_view'
    topic = portal_types.Topic
    if view not in topic.view_methods:
        topic._updateProperty('view_methods', topic.view_methods + (view,))
        print >> out, ""Made %s available for topics.\n"" % view

    return out.getvalue()

def uninstall(portal, reinstall=False):
    # remove skins
    skins_tool = getToolByName(portal, ""portal_skins"")
    skin_names = (""scrawl"",""scrawl_30"")
    skins = skins_tool.getSkinSelections()
    for skin in skins:
        path = skins_tool.getSkinPath(skin)
        path = map(string.strip, string.split(path,','))
        path = [s for s in path if s not in skin_names]
        path = string.join(path, ', ')
        skins_tool.addSkinSelection(skin, path)

    # remove blog_view from Topics
    view = 'blog_view'
    portal_types = getToolByName(portal, 'portal_types')
    topic = portal_types.Topic
    if view in topic.view_methods:
        view_methods = [v for v in topic.view_methods if v != view]
        topic._updateProperty('view_methods', view_methods)

    # remove Blog Entry from portal factory
    factory = getToolByName(portal, 'portal_factory')
    types = factory.getFactoryTypes().keys()
    if 'Blog Entry' in types:
        types.remove('Blog Entry')
        factory.manage_setPortalFactoryTypes(listOfTypeIds=types)
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```from', 'Products.CMFCore.utils', 'import', 'getToolByName', 'from', 'Products.Scrawl.config', 'import', 'BLOG_ENTRY_NAME,', 'GLOBALS', 'from', 'Products.Scrawl', 'import', 'HAS_PLONE30', 'from', 'Products.Archetypes.Extensions.utils', 'import', 'install_subskin', 'import', 'string', 'from', 'StringIO', 'import', 'StringIO', 'def', 'install(portal):', 'out', '=', 'StringIO()', '#', 'copy', 'the', 'News', 'Item', 'for', 'our', 'blog', 'entry', 'portal_types', '=', 'getToolByName(portal,', ""'portal_types')"", 'if', 'BLOG_ENTRY_NAME', 'not', 'in', 'portal_types.objectIds():', 'cb_copy_data', '=', ""portal_types.manage_copyObjects(['News"", ""Item'])"", 'paste_data', '=', 'portal_types.manage_pasteObjects(cb_copy_data)', 'temp_id', '=', ""paste_data[0]['new_id']"", 'portal_types.manage_renameObject(temp_id,', 'BLOG_ENTRY_NAME)', 'getattr(portal_types,', 'BLOG_ENTRY_NAME).title', '=', 'BLOG_ENTRY_NAME', 'getattr(portal_types,', 'BLOG_ENTRY_NAME).i18n_domain', '=', ""'cynin'"", 'out.write(""Duplicated', ""'News"", ""Item'"", 'FTI', 'info', 'as', '\'%s\'""', '%', 'BLOG_ENTRY_NAME)', '#', 'tweak', 'Blog', 'Entry', 'FTI', 'settings', 'blog', '=', 'getattr(portal_types,', 'BLOG_ENTRY_NAME)', 'blog.default_view', '=', ""'blogentry_view'"", 'blog.immediate_view', '=', ""'blogentry_view'"", 'view', '=', ""'blogentry_view'"", 'if', 'view', 'not', 'in', 'blog.view_methods:', ""blog._updateProperty('view_methods',"", 'blog.view_methods', '+', '(view,))', 'blog.allow_discussion', '=', 'True', 'out.write(""Tweaked', '%s', 'FTU', 'settings""', '%', 'BLOG_ENTRY_NAME)', '#', 'make', 'Blog', 'Entry', 'use', 'portal', 'factory,', 'so', 'we', ""don't"", 'have', 'any', 'blog', 'entry', 'skeletons', 'factory', '=', 'getToolByName(portal,', ""'portal_factory')"", 'types', '=', 'factory.getFactoryTypes().keys()', 'if', ""'Blog"", ""Entry'"", 'not', 'in', 'types:', ""types.append('Blog"", ""Entry')"", 'factory.manage_setPortalFactoryTypes(listOfTypeIds=types)', 'print', '>>', 'out,', '""Added', 'Blog', 'Entry', 'to', 'portal', 'factory""', '#', 'install', 'our', 'skins', 'install_subskin(portal,', 'out,', 'GLOBALS)', 'skins_tool', '=', 'getToolByName(portal,', '""portal_skins"")', 'if', 'HAS_PLONE30:', 'bad_skin', '=', '""scrawl""', 'else:', 'bad_skin', '=', '""scrawl_30""', '#', 'Iterate', 'over', 'all', 'existing', 'skins', 'and', 'remove', 'the', 'one', 'we', ""don't"", 'want', 'skins', '=', 'skins_tool.getSkinSelections()', 'for', 'skin', 'in', 'skins:', 'path', '=', 'skins_tool.getSkinPath(skin)', 'path', '=', 'map(string.strip,', ""string.split(path,','))"", 'if', 'bad_skin', 'in', 'path:', 'path.remove(bad_skin)', 'path', '=', 'string.join(path,', ""',"", ""')"", '#', 'addSkinSelection', 'will', 'replace', 'existing', 'skins', 'as', 'well.', 'skins_tool.addSkinSelection(skin,', 'path)', '#', 'make', 'blog', 'view', 'available', 'to', 'Smart', 'Folders', 'view', '=', ""'blog_view'"", 'topic', '=', 'portal_types.Topic', 'if', 'view', 'not', 'in', 'topic.view_methods:', ""topic._updateProperty('view_methods',"", 'topic.view_methods', '+', '(view,))', 'print', '>>', 'out,', '""Made', '%s', 'available', 'for', 'topics.\\n""', '%', 'view', 'return', 'out.getvalue()', 'def', 'uninstall(portal,', 'reinstall=False):', '#', 'remove', 'skins', 'skins_tool', '=', 'getToolByName(portal,', '""portal_skins"")', 'skin_names', '=', '(""scrawl"",""scrawl_30"")', 'skins', '=', 'skins_tool.getSkinSelections()', 'for', 'skin', 'in', 'skins:', 'path', '=', 'skins_tool.getSkinPath(skin)', 'path', '=', 'map(string.strip,', ""string.split(path,','))"", 'path', '=', '[s', 'for', 's', 'in', 'path', 'if', 's', 'not', 'in', 'skin_names]', 'path', '=', 'string.join(path,', ""',"", ""')"", 'skins_tool.addSkinSelection(skin,', 'path)', '#', 'remove', 'blog_view', 'from', 'Topics', 'view', '=', ""'blog_view'"", 'portal_types', '=', 'getToolByName(portal,', ""'portal_types')"", 'topic', '=', 'portal_types.Topic', 'if', 'view', 'in', 'topic.view_methods:', 'view_methods', '=', '[v', 'for', 'v', 'in', 'topic.view_methods', 'if', 'v', '!=', 'view]', ""topic._updateProperty('view_methods',"", 'view_methods)', '#', 'remove', 'Blog', 'Entry', 'from', 'portal', 'factory', 'factory', '=', 'getToolByName(portal,', ""'portal_factory')"", 'types', '=', 'factory.getFactoryTypes().keys()', 'if', ""'Blog"", ""Entry'"", 'in', 'types:', ""types.remove('Blog"", ""Entry')"", 'factory.manage_setPortalFactoryTypes(listOfTypeIds=types)', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright (C) 2009.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 3 or
 * version 2 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 */
package uk.me.parabola.imgfmt.app.mdr;

import java.nio.ByteBuffer;

import uk.me.parabola.imgfmt.app.BufferedImgFileWriter;
import uk.me.parabola.imgfmt.app.ImgFileWriter;

/**
 * Each map has one of these and it is used to provide a list of records
 * in the various sections that actually belong to this map.
 *
 * @author Steve Ratcliffe
 */
public class Mdr1MapIndex {
	private final Mdr1SubHeader subHeader = new Mdr1SubHeader();
	private final BufferedImgFileWriter subWriter = new BufferedImgFileWriter(null);

	private int pointerSize;

	public Mdr1MapIndex() {
		// skip over where the header will be
		this.subWriter.position(subHeader.getHeaderLen());
	}

	public void startSection(int n) {
	}

	public void endSection(int n) {
		int sn = sectionToSubsection(n);
		if (sn != 0)
			subHeader.setEndSubsection(sn, subWriter.position());
	}

	public void addPointer(int recordNumber) {
		subWriter.putNu(pointerSize, recordNumber);
	}
	
	private int sectionToSubsection(int n) {
		int sn;
		switch (n) {
		case 11: sn = 1; break;
		case 10: sn = 2; break;
		case 7:  sn = 3; break;
		case 5:  sn = 4; break;
		case 6:  sn = 5; break;
		case 20:  sn = 6; break;
		case 21:  sn = 7; break;
		case 22:  sn = 8; break;
		default: sn = 0; break;
		}
		return sn;
	}

	public void writeSubSection(ImgFileWriter writer) {
		subHeader.writeFileHeader(writer);

		ByteBuffer buffer = subWriter.getBuffer();
		byte[] bytes = buffer.array();
		int hl = (int) subHeader.getHeaderLen();
		writer.put(bytes, hl, buffer.position() - hl);
	}

	public void setPointerSize(int sectionNumber, int pointerSize) {
		this.pointerSize = pointerSize;
		int sn = sectionToSubsection(sectionNumber);
		if (sn != 0)
			subHeader.setItemSize(sn, pointerSize);
	}
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '(C)', '2009.', '*', '*', 'This', 'program', 'is', 'free', 'software;', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', '*', 'it', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'version', '3', 'or', '*', 'version', '2', 'as', 'published', 'by', 'the', 'Free', 'Software', 'Foundation.', '*', '*', 'This', 'program', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', 'but', '*', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', '*', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', 'GNU', '*', 'General', 'Public', 'License', 'for', 'more', 'details.', '*/', 'package', 'uk.me.parabola.imgfmt.app.mdr;', 'import', 'java.nio.ByteBuffer;', 'import', 'uk.me.parabola.imgfmt.app.BufferedImgFileWriter;', 'import', 'uk.me.parabola.imgfmt.app.ImgFileWriter;', '/**', '*', 'Each', 'map', 'has', 'one', 'of', 'these', 'and', 'it', 'is', 'used', 'to', 'provide', 'a', 'list', 'of', 'records', '*', 'in', 'the', 'various', 'sections', 'that', 'actually', 'belong', 'to', 'this', 'map.', '*', '*', '@author', 'Steve', 'Ratcliffe', '*/', 'public', 'class', 'Mdr1MapIndex', '{', 'private', 'final', 'Mdr1SubHeader', 'subHeader', '=', 'new', 'Mdr1SubHeader();', 'private', 'final', 'BufferedImgFileWriter', 'subWriter', '=', 'new', 'BufferedImgFileWriter(null);', 'private', 'int', 'pointerSize;', 'public', 'Mdr1MapIndex()', '{', '//', 'skip', 'over', 'where', 'the', 'header', 'will', 'be', 'this.subWriter.position(subHeader.getHeaderLen());', '}', 'public', 'void', 'startSection(int', 'n)', '{', '}', 'public', 'void', 'endSection(int', 'n)', '{', 'int', 'sn', '=', 'sectionToSubsection(n);', 'if', '(sn', '!=', '0)', 'subHeader.setEndSubsection(sn,', 'subWriter.position());', '}', 'public', 'void', 'addPointer(int', 'recordNumber)', '{', 'subWriter.putNu(pointerSize,', 'recordNumber);', '}', 'private', 'int', 'sectionToSubsection(int', 'n)', '{', 'int', 'sn;', 'switch', '(n)', '{', 'case', '11:', 'sn', '=', '1;', 'break;', 'case', '10:', 'sn', '=', '2;', 'break;', 'case', '7:', 'sn', '=', '3;', 'break;', 'case', '5:', 'sn', '=', '4;', 'break;', 'case', '6:', 'sn', '=', '5;', 'break;', 'case', '20:', 'sn', '=', '6;', 'break;', 'case', '21:', 'sn', '=', '7;', 'break;', 'case', '22:', 'sn', '=', '8;', 'break;', 'default:', 'sn', '=', '0;', 'break;', '}', 'return', 'sn;', '}', 'public', 'void', 'writeSubSection(ImgFileWriter', 'writer)', '{', 'subHeader.writeFileHeader(writer);', 'ByteBuffer', 'buffer', '=', 'subWriter.getBuffer();', 'byte[]', 'bytes', '=', 'buffer.array();', 'int', 'hl', '=', '(int)', 'subHeader.getHeaderLen();', 'writer.put(bytes,', 'hl,', 'buffer.position()', '-', 'hl);', '}', 'public', 'void', 'setPointerSize(int', 'sectionNumber,', 'int', 'pointerSize)', '{', 'this.pointerSize', '=', 'pointerSize;', 'int', 'sn', '=', 'sectionToSubsection(sectionNumber);', 'if', '(sn', '!=', '0)', 'subHeader.setItemSize(sn,', 'pointerSize);', '}', '}', '```']",challenge not surrounded by ''': ,
"from mdt import CompartmentTemplate, FreeParameterTemplate, LibraryFunctionTemplate

__author__ = 'Robbert Harms'
__date__ = '2019-11-14'
__maintainer__ = 'Robbert Harms'
__email__ = 'robbert@xkls.nl'
__licence__ = 'LGPL v3'


class CylindersPoissonDistr(CompartmentTemplate):
    """"""Poisson Distributed Radii cylinders, for use in AxCaliber modelling.""""""
    description = '''
        Compartment model for a distribution of VanGelderen Cylinders with a continuous Poisson distribution
    '''
    parameters = ('g', 'b', 'G', 'Delta', 'delta', 'd', 'theta', 'phi', 'poisson_lambda', '@cache')
    dependencies = ('VanGelderenCylinder', 'SphericalToCartesian', 'PoissonPDF',)
    cl_code = '''
        double direction_2 = pown(dot(g, SphericalToCartesian(theta, phi)), 2);
        double diffusivity_par = -b * d * direction_2;

        double radius;
        double diffusivity_perp;
        double weight_sum = 0;
        double signal_sum = 0;

        for(uint i = 0; i < PDRCylinders_nmr_radii; i++){
            radius = PDRCylinders_radii[i] * 1e-6;

            diffusivity_perp = (1 - direction_2) * VanGelderenCylinder(G, Delta, delta, d, radius);
            signal_sum += cache->weights[i] * exp(diffusivity_par + diffusivity_perp);
            weight_sum += cache->weights[i];
        }
        return signal_sum / weight_sum;
    '''
    cl_extra = '''
        constant const int PDRCylinders_nmr_radii = 18;
        constant const double PDRCylinders_radii[] = {
            0.05, 0.1, 0.25, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 5.5, 6, 7.5, 10, 15
        }; // micrometers
    '''
    cache_info = {
        'fields': [('double', 'weights', 18)],
        'cl_code': '''
            double radius;
            for(uint i = 0; i < PDRCylinders_nmr_radii; i++){
                radius = PDRCylinders_radii[i];

                // area without * M_PI since it is a constant
                cache->weights[i] = PoissonPDF(poisson_lambda, radius)  * (radius * radius);
            }
        '''
    }
    extra_optimization_maps = [
        lambda results: {'diameter': results['poisson_lambda'] * 2}]

    class poisson_lambda(FreeParameterTemplate):
        init_value = 1
        lower_bound = 1e-5
        upper_bound = 20
        parameter_transform = 'CosSqrClamp'
        sampling_proposal_std = 0.01

    class PoissonPDF(LibraryFunctionTemplate):
        description = '''
            Computes the (continuous) Poisson probability density function, parameterised by lambda.

            This computes the Poisson PDF as: :math:`{\frac {\lamdbda^{x} e^{-\lambda}}{\Gamma (x+1)}`

            With x the desired position, :math:`\lambda` the paramater.
        '''
        return_type = 'double'
        parameters = ['double lambda',
                      'double x']
        cl_code = '''
            return ( pow(lambda, x) * exp(-lambda)) / (tgamma(x+1));
        '''
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```from', 'mdt', 'import', 'CompartmentTemplate,', 'FreeParameterTemplate,', 'LibraryFunctionTemplate', '__author__', '=', ""'Robbert"", ""Harms'"", '__date__', '=', ""'2019-11-14'"", '__maintainer__', '=', ""'Robbert"", ""Harms'"", '__email__', '=', ""'robbert@xkls.nl'"", '__licence__', '=', ""'LGPL"", ""v3'"", 'class', 'CylindersPoissonDistr(CompartmentTemplate):', '""""""Poisson', 'Distributed', 'Radii', 'cylinders,', 'for', 'use', 'in', 'AxCaliber', 'modelling.""""""', 'description', '=', ""'''"", 'Compartment', 'model', 'for', 'a', 'distribution', 'of', 'VanGelderen', 'Cylinders', 'with', 'a', 'continuous', 'Poisson', 'distribution', ""'''"", 'parameters', '=', ""('g',"", ""'b',"", ""'G',"", ""'Delta',"", ""'delta',"", ""'d',"", ""'theta',"", ""'phi',"", ""'poisson_lambda',"", ""'@cache')"", 'dependencies', '=', ""('VanGelderenCylinder',"", ""'SphericalToCartesian',"", ""'PoissonPDF',)"", 'cl_code', '=', ""'''"", 'double', 'direction_2', '=', 'pown(dot(g,', 'SphericalToCartesian(theta,', 'phi)),', '2);', 'double', 'diffusivity_par', '=', '-b', '*', 'd', '*', 'direction_2;', 'double', 'radius;', 'double', 'diffusivity_perp;', 'double', 'weight_sum', '=', '0;', 'double', 'signal_sum', '=', '0;', 'for(uint', 'i', '=', '0;', 'i', '<', 'PDRCylinders_nmr_radii;', 'i++){', 'radius', '=', 'PDRCylinders_radii[i]', '*', '1e-6;', 'diffusivity_perp', '=', '(1', '-', 'direction_2)', '*', 'VanGelderenCylinder(G,', 'Delta,', 'delta,', 'd,', 'radius);', 'signal_sum', '+=', 'cache->weights[i]', '*', 'exp(diffusivity_par', '+', 'diffusivity_perp);', 'weight_sum', '+=', 'cache->weights[i];', '}', 'return', 'signal_sum', '/', 'weight_sum;', ""'''"", 'cl_extra', '=', ""'''"", 'constant', 'const', 'int', 'PDRCylinders_nmr_radii', '=', '18;', 'constant', 'const', 'double', 'PDRCylinders_radii[]', '=', '{', '0.05,', '0.1,', '0.25,', '0.5,', '1,', '1.5,', '2,', '2.5,', '3,', '3.5,', '4,', '4.5,', '5,', '5.5,', '6,', '7.5,', '10,', '15', '};', '//', 'micrometers', ""'''"", 'cache_info', '=', '{', ""'fields':"", ""[('double',"", ""'weights',"", '18)],', ""'cl_code':"", ""'''"", 'double', 'radius;', 'for(uint', 'i', '=', '0;', 'i', '<', 'PDRCylinders_nmr_radii;', 'i++){', 'radius', '=', 'PDRCylinders_radii[i];', '//', 'area', 'without', '*', 'M_PI', 'since', 'it', 'is', 'a', 'constant', 'cache->weights[i]', '=', 'PoissonPDF(poisson_lambda,', 'radius)', '*', '(radius', '*', 'radius);', '}', ""'''"", '}', 'extra_optimization_maps', '=', '[', 'lambda', 'results:', ""{'diameter':"", ""results['poisson_lambda']"", '*', '2}]', 'class', 'poisson_lambda(FreeParameterTemplate):', 'init_value', '=', '1', 'lower_bound', '=', '1e-5', 'upper_bound', '=', '20', 'parameter_transform', '=', ""'CosSqrClamp'"", 'sampling_proposal_std', '=', '0.01', 'class', 'PoissonPDF(LibraryFunctionTemplate):', 'description', '=', ""'''"", 'Computes', 'the', '(continuous)', 'Poisson', 'probability', 'density', 'function,', 'parameterised', 'by', 'lambda.', 'This', 'computes', 'the', 'Poisson', 'PDF', 'as:', ':math:`{\\frac', '{\\lamdbda^{x}', 'e^{-\\lambda}}{\\Gamma', '(x+1)}`', 'With', 'x', 'the', 'desired', 'position,', ':math:`\\lambda`', 'the', 'paramater.', ""'''"", 'return_type', '=', ""'double'"", 'parameters', '=', ""['double"", ""lambda',"", ""'double"", ""x']"", 'cl_code', '=', ""'''"", 'return', '(', 'pow(lambda,', 'x)', '*', 'exp(-lambda))', '/', '(tgamma(x+1));', ""'''"", '```']",challenge not surrounded by ''': ,
"---
layout: default
---
<article class=""c-article"">
  <header class=""c-header c-article__header"" id=""header"">
    <div class=""u-container"">
      <h1 class=""c-header__title"">{{ page.title }}</h1>
    </div>
  </header>

  {% include underbar.html %}

  <div class=""c-article__main"">
    {{ content }}
  </div>

  {% include feedback.html %}
</article>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```---', 'layout:', 'default', '---', '<article', 'class=""c-article"">', '<header', 'class=""c-header', 'c-article__header""', 'id=""header"">', '<div', 'class=""u-container"">', '<h1', 'class=""c-header__title"">{{', 'page.title', '}}</h1>', '</div>', '</header>', '{%', 'include', 'underbar.html', '%}', '<div', 'class=""c-article__main"">', '{{', 'content', '}}', '</div>', '{%', 'include', 'feedback.html', '%}', '</article>', '```']",challenge not surrounded by ''': ,
"package org.bgp4j.net;

import org.apache.commons.lang3.StringUtils;

/**
 * Subsequent address family as defined in RFC 2858
 * 
 * @author rainer
 *
 */
public enum SubsequentAddressFamily {
	NLRI_UNICAST_FORWARDING,
	NLRI_MULTICAST_FORWARDING,
	NLRI_UNICAST_MULTICAST_FORWARDING;
	
	private static final String ENCODING_UNICAST_MULTICAST = ""Unicast+Multicast"";
	private static final String ENCODING_MULTICAST = ""Multicast"";
	private static final String ENCODING_UNICAST = ""Unicast"";

	public int toCode() {
		switch(this) {
		case NLRI_UNICAST_FORWARDING:
			return 1;
		case NLRI_MULTICAST_FORWARDING:
			return 2;
		case NLRI_UNICAST_MULTICAST_FORWARDING:
			return 3;
		default:
			throw new IllegalArgumentException(""Unknown subsequent address family: "" + this);
		}
	}
	
	public static SubsequentAddressFamily fromCode(int code) {
		switch(code) {
		case 1:
			return NLRI_UNICAST_FORWARDING;
		case 2:
			return NLRI_MULTICAST_FORWARDING;
		case 3:
			return NLRI_UNICAST_MULTICAST_FORWARDING;
		default:
			throw new IllegalArgumentException(""Unknown subsequent address family code: "" + code);
		}
	}
	
	public static SubsequentAddressFamily fromString(String value) {
		if(StringUtils.equalsIgnoreCase(ENCODING_UNICAST, value) || StringUtils.equalsIgnoreCase(""NLRI_UNICAST_FORWARDING"", value)) {
			return NLRI_UNICAST_FORWARDING;
		} else if(StringUtils.equalsIgnoreCase(ENCODING_MULTICAST, value) || StringUtils.equalsIgnoreCase(""NLRI_MULTICAST_FORWARDING"", value)) {
			return NLRI_MULTICAST_FORWARDING;
		} else if(StringUtils.equalsIgnoreCase(ENCODING_UNICAST_MULTICAST, value) || StringUtils.equalsIgnoreCase(""NLRI_UNICAST_MULTICAST_FORWARDING"", value)) {
			return NLRI_UNICAST_MULTICAST_FORWARDING;
		} else
			throw new IllegalArgumentException(""Unknown subsequent address family: "" + value);
	}
	
	public String toString() {
		switch(this) {
		case NLRI_UNICAST_FORWARDING:
			return ENCODING_UNICAST;
		case NLRI_MULTICAST_FORWARDING:
			return ENCODING_MULTICAST;
		case NLRI_UNICAST_MULTICAST_FORWARDING:
			return ENCODING_UNICAST_MULTICAST;
		default:
			throw new IllegalArgumentException(""Unknown subsequent address family: "" + this);
		}		
	}
}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'org.bgp4j.net;', 'import', 'org.apache.commons.lang3.StringUtils;', '/**', '*', 'Subsequent', 'address', 'family', 'as', 'defined', 'in', 'RFC', '2858', '*', '*', '@author', 'rainer', '*', '*/', 'public', 'enum', 'SubsequentAddressFamily', '{', 'NLRI_UNICAST_FORWARDING,', 'NLRI_MULTICAST_FORWARDING,', 'NLRI_UNICAST_MULTICAST_FORWARDING;', 'private', 'static', 'final', 'String', 'ENCODING_UNICAST_MULTICAST', '=', '""Unicast+Multicast"";', 'private', 'static', 'final', 'String', 'ENCODING_MULTICAST', '=', '""Multicast"";', 'private', 'static', 'final', 'String', 'ENCODING_UNICAST', '=', '""Unicast"";', 'public', 'int', 'toCode()', '{', 'switch(this)', '{', 'case', 'NLRI_UNICAST_FORWARDING:', 'return', '1;', 'case', 'NLRI_MULTICAST_FORWARDING:', 'return', '2;', 'case', 'NLRI_UNICAST_MULTICAST_FORWARDING:', 'return', '3;', 'default:', 'throw', 'new', 'IllegalArgumentException(""Unknown', 'subsequent', 'address', 'family:', '""', '+', 'this);', '}', '}', 'public', 'static', 'SubsequentAddressFamily', 'fromCode(int', 'code)', '{', 'switch(code)', '{', 'case', '1:', 'return', 'NLRI_UNICAST_FORWARDING;', 'case', '2:', 'return', 'NLRI_MULTICAST_FORWARDING;', 'case', '3:', 'return', 'NLRI_UNICAST_MULTICAST_FORWARDING;', 'default:', 'throw', 'new', 'IllegalArgumentException(""Unknown', 'subsequent', 'address', 'family', 'code:', '""', '+', 'code);', '}', '}', 'public', 'static', 'SubsequentAddressFamily', 'fromString(String', 'value)', '{', 'if(StringUtils.equalsIgnoreCase(ENCODING_UNICAST,', 'value)', '||', 'StringUtils.equalsIgnoreCase(""NLRI_UNICAST_FORWARDING"",', 'value))', '{', 'return', 'NLRI_UNICAST_FORWARDING;', '}', 'else', 'if(StringUtils.equalsIgnoreCase(ENCODING_MULTICAST,', 'value)', '||', 'StringUtils.equalsIgnoreCase(""NLRI_MULTICAST_FORWARDING"",', 'value))', '{', 'return', 'NLRI_MULTICAST_FORWARDING;', '}', 'else', 'if(StringUtils.equalsIgnoreCase(ENCODING_UNICAST_MULTICAST,', 'value)', '||', 'StringUtils.equalsIgnoreCase(""NLRI_UNICAST_MULTICAST_FORWARDING"",', 'value))', '{', 'return', 'NLRI_UNICAST_MULTICAST_FORWARDING;', '}', 'else', 'throw', 'new', 'IllegalArgumentException(""Unknown', 'subsequent', 'address', 'family:', '""', '+', 'value);', '}', 'public', 'String', 'toString()', '{', 'switch(this)', '{', 'case', 'NLRI_UNICAST_FORWARDING:', 'return', 'ENCODING_UNICAST;', 'case', 'NLRI_MULTICAST_FORWARDING:', 'return', 'ENCODING_MULTICAST;', 'case', 'NLRI_UNICAST_MULTICAST_FORWARDING:', 'return', 'ENCODING_UNICAST_MULTICAST;', 'default:', 'throw', 'new', 'IllegalArgumentException(""Unknown', 'subsequent', 'address', 'family:', '""', '+', 'this);', '}', '}', '}```']",challenge not surrounded by ''': ,
"/*******************************************************************************
 * Copyright (c) 2018 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *******************************************************************************/
package com.ibm.ws.http2.test.exceptions;

/**
 *
 */
public class ReceivedFrameAfterEndOfStream extends Exception {

    /**  */
    private static final long serialVersionUID = 1L;

    /**
     *
     */
    public ReceivedFrameAfterEndOfStream() {
        // TODO Auto-generated constructor stub
    }

    /**
     * @param message
     */
    public ReceivedFrameAfterEndOfStream(String message) {
        super(message);
        // TODO Auto-generated constructor stub
    }

    /**
     * @param cause
     */
    public ReceivedFrameAfterEndOfStream(Throwable cause) {
        super(cause);
        // TODO Auto-generated constructor stub
    }

    /**
     * @param message
     * @param cause
     */
    public ReceivedFrameAfterEndOfStream(String message, Throwable cause) {
        super(message, cause);
        // TODO Auto-generated constructor stub
    }

    /**
     * @param message
     * @param cause
     * @param enableSuppression
     * @param writableStackTrace
     */
    public ReceivedFrameAfterEndOfStream(String message, Throwable cause, boolean enableSuppression, boolean writableStackTrace) {
        super(message, cause, enableSuppression, writableStackTrace);
        // TODO Auto-generated constructor stub
    }

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*******************************************************************************', '*', 'Copyright', '(c)', '2018', 'IBM', 'Corporation', 'and', 'others.', '*', 'All', 'rights', 'reserved.', 'This', 'program', 'and', 'the', 'accompanying', 'materials', '*', 'are', 'made', 'available', 'under', 'the', 'terms', 'of', 'the', 'Eclipse', 'Public', 'License', 'v1.0', '*', 'which', 'accompanies', 'this', 'distribution,', 'and', 'is', 'available', 'at', '*', 'http://www.eclipse.org/legal/epl-v10.html', '*', '*', 'Contributors:', '*', 'IBM', 'Corporation', '-', 'initial', 'API', 'and', 'implementation', '*******************************************************************************/', 'package', 'com.ibm.ws.http2.test.exceptions;', '/**', '*', '*/', 'public', 'class', 'ReceivedFrameAfterEndOfStream', 'extends', 'Exception', '{', '/**', '*/', 'private', 'static', 'final', 'long', 'serialVersionUID', '=', '1L;', '/**', '*', '*/', 'public', 'ReceivedFrameAfterEndOfStream()', '{', '//', 'TODO', 'Auto-generated', 'constructor', 'stub', '}', '/**', '*', '@param', 'message', '*/', 'public', 'ReceivedFrameAfterEndOfStream(String', 'message)', '{', 'super(message);', '//', 'TODO', 'Auto-generated', 'constructor', 'stub', '}', '/**', '*', '@param', 'cause', '*/', 'public', 'ReceivedFrameAfterEndOfStream(Throwable', 'cause)', '{', 'super(cause);', '//', 'TODO', 'Auto-generated', 'constructor', 'stub', '}', '/**', '*', '@param', 'message', '*', '@param', 'cause', '*/', 'public', 'ReceivedFrameAfterEndOfStream(String', 'message,', 'Throwable', 'cause)', '{', 'super(message,', 'cause);', '//', 'TODO', 'Auto-generated', 'constructor', 'stub', '}', '/**', '*', '@param', 'message', '*', '@param', 'cause', '*', '@param', 'enableSuppression', '*', '@param', 'writableStackTrace', '*/', 'public', 'ReceivedFrameAfterEndOfStream(String', 'message,', 'Throwable', 'cause,', 'boolean', 'enableSuppression,', 'boolean', 'writableStackTrace)', '{', 'super(message,', 'cause,', 'enableSuppression,', 'writableStackTrace);', '//', 'TODO', 'Auto-generated', 'constructor', 'stub', '}', '}', '```']",challenge not surrounded by ''': ,
"autocommit off;
select 2 from class db_user
union
select 2.3e0 from class db_user;
rollback;
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```autocommit', 'off;', 'select', '2', 'from', 'class', 'db_user', 'union', 'select', '2.3e0', 'from', 'class', 'db_user;', 'rollback;', '```']",challenge not surrounded by ''': ,
"define( function ( require ) {
    alert(require( '../amd/circleDependency/index' ))
    return function () {
        var count = 9999;
        var beforeTime = new Date;
        for ( var i = 0; i < count; i++ ) {
            if ( require( '../amd/circleDependency/index' ).name !== 'amd/circleDependency/index' ) {
                alert( 'require fail' );
            }
        }
        alert( (new Date) - beforeTime );
    };
});","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```define(', 'function', '(', 'require', ')', '{', 'alert(require(', ""'../amd/circleDependency/index'"", '))', 'return', 'function', '()', '{', 'var', 'count', '=', '9999;', 'var', 'beforeTime', '=', 'new', 'Date;', 'for', '(', 'var', 'i', '=', '0;', 'i', '<', 'count;', 'i++', ')', '{', 'if', '(', 'require(', ""'../amd/circleDependency/index'"", ').name', '!==', ""'amd/circleDependency/index'"", ')', '{', 'alert(', ""'require"", ""fail'"", ');', '}', '}', 'alert(', '(new', 'Date)', '-', 'beforeTime', ');', '};', '});```']",challenge not surrounded by ''': ,
"<!-- Start page header -->
<div class=""header-content"">
    <h2><i class=""fa fa-list-alt""></i> {if isset($title)} {$title} {/if} <span></span></h2>
    <div class=""breadcrumb-wrapper hidden-xs"">
        <span class=""label"">You are here:</span>
        <ol class=""breadcrumb"">
            <li>
                <i class=""fa fa-home""></i>
                <a href=""{base_url('production/admin/codeigniter/dashboard')}"">Dashboard</a>
                <i class=""fa fa-angle-right""></i>
            </li>
            <li>
                <a href=""#"">Forms</a>
                <i class=""fa fa-angle-right""></i>
            </li>
            <li class=""active"">Form Elements</li>
        </ol>
    </div><!-- /.breadcrumb-wrapper -->
</div><!-- /.header-content -->
<!--/ End page header -->

<!-- Start body content -->
<div class=""body-content animated fadeIn"">

<div class=""row"">
<div class=""col-md-8 col-md-offset-2"">
    <!-- Start input fields - basic form -->
    <div class=""panel rounded shadow"">
        <div class=""panel-heading"">
            <div class=""pull-left"">
                <h3 class=""panel-title"">Thông Tin Danh Mục</h3>
            </div>
            <div class=""pull-right"">
                <button class=""btn btn-sm"" data-container=""body"" data-action=""collapse"" data-toggle=""tooltip"" data-placement=""top"" data-title=""Collapse""><i class=""fa fa-angle-up""></i></button>
                <button class=""btn btn-sm"" data-container=""body"" data-action=""remove"" data-toggle=""tooltip"" data-placement=""top"" data-title=""Remove""><i class=""fa fa-times""></i></button>
            </div>
            <div class=""clearfix""></div>
        </div><!-- /.panel-heading -->
        <div class=""panel-sub-heading"">

            <!-- kiểm tra nếu nó không rỗng, thì sẽ xuất ra div chứa nội dung lỗi -->
            {if !empty(validation_errors())}
            <div class=""callout callout-info""><p>{validation_errors()}</p></div>
            {/if}

        </div>
        <div class=""panel-body no-padding"">
            {form_open(current_url(), 'method=""POST""')}
                <div class=""form-body"">
                    <div class=""form-group"">
                        <label class=""control-label"">Tên Danh Mục</label>
                        {$Input_TenDanhMuc = [
                        'name' => 'TenDanhMuc',
                        'id' => 'TenDanhMuc',
                        'value' => $DanhMuc->TenDanhMuc,
                        'class' => 'form-control',
                        'type' => 'text']}
                        {form_input($Input_TenDanhMuc)}
                        <!--  form_input truyền vô dữ liệu mong muốn -->
                    </div><!-- /.form-group <--></-->

                    <div class=""form-group"">
                        <label class=""control-label"">Mã Danh Mục Cha</label>
                        {$Input_DanhMuc = [
                        'id' => 'MaDanhMucCha',
                        'class' => 'form-control input-sm mb-15']}  
                        {form_dropdown('MaDanhMucCha',$dsDanhMuc, $DanhMuc->MaDanhMucCha,$Input_DanhMuc)}

                    </div><!-- /.form-group -->

                    <div class=""form-group"">
                        <label class=""control-label"" for=""readonlyinput1"">Slug</label>
                        <input id=""slug"" value=""{$DanhMuc->Slug}"" class=""form-control"" readonly=""readonly"" type=""text"">
                    </div><!-- /.form-group -->

                </div><!-- /.form-body -->
                <div class=""form-footer"">
                    <div class=""pull-left"">
                        <button class=""btn btn-success"" type=""submit"">Submit</button>
                        <button class=""btn btn-danger mr-5"">Cancel</button>
                    </div>
                    <div class=""clearfix""></div>
                </div><!-- /.form-footer -->
            {form_close()}
        </div><!-- /.panel-body -->
    </div><!-- /.panel -->
    <!--/ End input fields - basic form-->
</div><!-- /.row -->


</div><!-- /.body-content -->
<!--/ End body content -->","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!--', 'Start', 'page', 'header', '-->', '<div', 'class=""header-content"">', '<h2><i', 'class=""fa', 'fa-list-alt""></i>', '{if', 'isset($title)}', '{$title}', '{/if}', '<span></span></h2>', '<div', 'class=""breadcrumb-wrapper', 'hidden-xs"">', '<span', 'class=""label"">You', 'are', 'here:</span>', '<ol', 'class=""breadcrumb"">', '<li>', '<i', 'class=""fa', 'fa-home""></i>', '<a', 'href=""{base_url(\'production/admin/codeigniter/dashboard\')}"">Dashboard</a>', '<i', 'class=""fa', 'fa-angle-right""></i>', '</li>', '<li>', '<a', 'href=""#"">Forms</a>', '<i', 'class=""fa', 'fa-angle-right""></i>', '</li>', '<li', 'class=""active"">Form', 'Elements</li>', '</ol>', '</div><!--', '/.breadcrumb-wrapper', '-->', '</div><!--', '/.header-content', '-->', '<!--/', 'End', 'page', 'header', '-->', '<!--', 'Start', 'body', 'content', '-->', '<div', 'class=""body-content', 'animated', 'fadeIn"">', '<div', 'class=""row"">', '<div', 'class=""col-md-8', 'col-md-offset-2"">', '<!--', 'Start', 'input', 'fields', '-', 'basic', 'form', '-->', '<div', 'class=""panel', 'rounded', 'shadow"">', '<div', 'class=""panel-heading"">', '<div', 'class=""pull-left"">', '<h3', 'class=""panel-title"">Thông', 'Tin', 'Danh', 'Mục</h3>', '</div>', '<div', 'class=""pull-right"">', '<button', 'class=""btn', 'btn-sm""', 'data-container=""body""', 'data-action=""collapse""', 'data-toggle=""tooltip""', 'data-placement=""top""', 'data-title=""Collapse""><i', 'class=""fa', 'fa-angle-up""></i></button>', '<button', 'class=""btn', 'btn-sm""', 'data-container=""body""', 'data-action=""remove""', 'data-toggle=""tooltip""', 'data-placement=""top""', 'data-title=""Remove""><i', 'class=""fa', 'fa-times""></i></button>', '</div>', '<div', 'class=""clearfix""></div>', '</div><!--', '/.panel-heading', '-->', '<div', 'class=""panel-sub-heading"">', '<!--', 'kiểm', 'tra', 'nếu', 'nó', 'không', 'rỗng,', 'thì', 'sẽ', 'xuất', 'ra', 'div', 'chứa', 'nội', 'dung', 'lỗi', '-->', '{if', '!empty(validation_errors())}', '<div', 'class=""callout', 'callout-info""><p>{validation_errors()}</p></div>', '{/if}', '</div>', '<div', 'class=""panel-body', 'no-padding"">', '{form_open(current_url(),', '\'method=""POST""\')}', '<div', 'class=""form-body"">', '<div', 'class=""form-group"">', '<label', 'class=""control-label"">Tên', 'Danh', 'Mục</label>', '{$Input_TenDanhMuc', '=', '[', ""'name'"", '=>', ""'TenDanhMuc',"", ""'id'"", '=>', ""'TenDanhMuc',"", ""'value'"", '=>', '$DanhMuc->TenDanhMuc,', ""'class'"", '=>', ""'form-control',"", ""'type'"", '=>', ""'text']}"", '{form_input($Input_TenDanhMuc)}', '<!--', 'form_input', 'truyền', 'vô', 'dữ', 'liệu', 'mong', 'muốn', '-->', '</div><!--', '/.form-group', '<--></-->', '<div', 'class=""form-group"">', '<label', 'class=""control-label"">Mã', 'Danh', 'Mục', 'Cha</label>', '{$Input_DanhMuc', '=', '[', ""'id'"", '=>', ""'MaDanhMucCha',"", ""'class'"", '=>', ""'form-control"", 'input-sm', ""mb-15']}"", ""{form_dropdown('MaDanhMucCha',$dsDanhMuc,"", '$DanhMuc->MaDanhMucCha,$Input_DanhMuc)}', '</div><!--', '/.form-group', '-->', '<div', 'class=""form-group"">', '<label', 'class=""control-label""', 'for=""readonlyinput1"">Slug</label>', '<input', 'id=""slug""', 'value=""{$DanhMuc->Slug}""', 'class=""form-control""', 'readonly=""readonly""', 'type=""text"">', '</div><!--', '/.form-group', '-->', '</div><!--', '/.form-body', '-->', '<div', 'class=""form-footer"">', '<div', 'class=""pull-left"">', '<button', 'class=""btn', 'btn-success""', 'type=""submit"">Submit</button>', '<button', 'class=""btn', 'btn-danger', 'mr-5"">Cancel</button>', '</div>', '<div', 'class=""clearfix""></div>', '</div><!--', '/.form-footer', '-->', '{form_close()}', '</div><!--', '/.panel-body', '-->', '</div><!--', '/.panel', '-->', '<!--/', 'End', 'input', 'fields', '-', 'basic', 'form-->', '</div><!--', '/.row', '-->', '</div><!--', '/.body-content', '-->', '<!--/', 'End', 'body', 'content', '-->```']",challenge not surrounded by ''': ,
"'use strict';

//Address filter used for format an address object
angular.module('aurea')
    .filter('address', function () {
        return function (input) {
            return input && [input.street, input.zipCode, input.city, input.province].join(' ');
        };
    });
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', ""```'use"", ""strict';"", '//Address', 'filter', 'used', 'for', 'format', 'an', 'address', 'object', ""angular.module('aurea')"", "".filter('address',"", 'function', '()', '{', 'return', 'function', '(input)', '{', 'return', 'input', '&&', '[input.street,', 'input.zipCode,', 'input.city,', ""input.province].join('"", ""');"", '};', '});', '```']",challenge not surrounded by ''': ,
"package cern.colt.function.tfcomplex;

public interface FComplexFComplexRealFunction {
    abstract public float apply(float[] x, float[] y);
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'cern.colt.function.tfcomplex;', 'public', 'interface', 'FComplexFComplexRealFunction', '{', 'abstract', 'public', 'float', 'apply(float[]', 'x,', 'float[]', 'y);', '}', '```']",challenge not surrounded by ''': ,
"package algorithm.Classification.DataMining_ID3;

/**
 * ID3决策树分类算法测试场景类
 * @author lyq
 *
 */
public class Client {
    public static void main(String[] args){
        String filePath = ""E:\\CourseExercises\\java\\ProjectTest\\src\\algorithm\\Classification\\DataMining_ID3\\input.txt"";
        
        ID3Tool tool = new ID3Tool(filePath);
        tool.startBuildingTree(true);
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'algorithm.Classification.DataMining_ID3;', '/**', '*', 'ID3决策树分类算法测试场景类', '*', '@author', 'lyq', '*', '*/', 'public', 'class', 'Client', '{', 'public', 'static', 'void', 'main(String[]', 'args){', 'String', 'filePath', '=', '""E:\\\\CourseExercises\\\\java\\\\ProjectTest\\\\src\\\\algorithm\\\\Classification\\\\DataMining_ID3\\\\input.txt"";', 'ID3Tool', 'tool', '=', 'new', 'ID3Tool(filePath);', 'tool.startBuildingTree(true);', '}', '}', '```']",challenge not surrounded by ''': ,
"/////
// accounts config
/////

Accounts.ui.config({
  passwordSignupFields: 'USERNAME_AND_EMAIL'
});

/////
// routing
/////

Router.configure({
  layoutTemplate: 'app_layout'
});

Router.route('/', function () {
  this.render('main');
});

Router.route('/upload');

/////
// collections subscriptions
/////

Meteor.subscribe(""bills"");
Meteor.subscribe(""billfiles"");

/////
// template helpers
/////

// ref: http://stackoverflow.com/a/28710902/913827
Template.registerHelper('equals',
  function(v1, v2) {
    return (v1 === v2);
  }
);

Template.app_layout.helpers({
  activeIf:function(templatePath) {
    // console.log(Router.current().route.path());
    return (templatePath == Router.current().route.path() ? 'active' : '');
  }
});

Template.main.helpers({
  bills:function() {
    return Bills.find({});
  }
});

Template.bill.helpers({
  getBill:function (billId) {
    return Bills.findOne({_id: billId});
  }
});

Template.upload.helpers({
  billfiles:function() {
    return BillFiles.find({});
  }
});

/////
// template events
/////
Template.app_layout.events({
  'submit .js-nav-search':function (event) {
    console.log('not implemented yet');
    return false; // stop the form submit from reloading the page
  }
});

Template.upload.events({
  // Catch the dropped event
  'dropped #dropzone': function(event, temp) {
    var files = event.originalEvent.dataTransfer.files;
    console.log(`${files.length} files dropped`);
    for (var i=0; i < files.length; ++i) {
      var file = files[i];
      console.log(`File #${i+1}: ${file.name} (${file.size} bytes, ` +
                  `type ${file.type})`);
    }

    FS.Utility.eachFile(event, function(file) {
      BillFiles.insert(file, function (err, fileObj) {
        //If !err, we have inserted new doc with ID fileObj._id, and
        //kicked off the data upload using HTTP
        if (err) {
          console.log('error!');
          console.log(err);
        } else {
          console.log(`Inserted file ${fileObj._id}`);
        }
      });
    });
  }
});
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/////', '//', 'accounts', 'config', '/////', 'Accounts.ui.config({', 'passwordSignupFields:', ""'USERNAME_AND_EMAIL'"", '});', '/////', '//', 'routing', '/////', 'Router.configure({', 'layoutTemplate:', ""'app_layout'"", '});', ""Router.route('/',"", 'function', '()', '{', ""this.render('main');"", '});', ""Router.route('/upload');"", '/////', '//', 'collections', 'subscriptions', '/////', 'Meteor.subscribe(""bills"");', 'Meteor.subscribe(""billfiles"");', '/////', '//', 'template', 'helpers', '/////', '//', 'ref:', 'http://stackoverflow.com/a/28710902/913827', ""Template.registerHelper('equals',"", 'function(v1,', 'v2)', '{', 'return', '(v1', '===', 'v2);', '}', ');', 'Template.app_layout.helpers({', 'activeIf:function(templatePath)', '{', '//', 'console.log(Router.current().route.path());', 'return', '(templatePath', '==', 'Router.current().route.path()', '?', ""'active'"", ':', ""'');"", '}', '});', 'Template.main.helpers({', 'bills:function()', '{', 'return', 'Bills.find({});', '}', '});', 'Template.bill.helpers({', 'getBill:function', '(billId)', '{', 'return', 'Bills.findOne({_id:', 'billId});', '}', '});', 'Template.upload.helpers({', 'billfiles:function()', '{', 'return', 'BillFiles.find({});', '}', '});', '/////', '//', 'template', 'events', '/////', 'Template.app_layout.events({', ""'submit"", "".js-nav-search':function"", '(event)', '{', ""console.log('not"", 'implemented', ""yet');"", 'return', 'false;', '//', 'stop', 'the', 'form', 'submit', 'from', 'reloading', 'the', 'page', '}', '});', 'Template.upload.events({', '//', 'Catch', 'the', 'dropped', 'event', ""'dropped"", ""#dropzone':"", 'function(event,', 'temp)', '{', 'var', 'files', '=', 'event.originalEvent.dataTransfer.files;', 'console.log(`${files.length}', 'files', 'dropped`);', 'for', '(var', 'i=0;', 'i', '<', 'files.length;', '++i)', '{', 'var', 'file', '=', 'files[i];', 'console.log(`File', '#${i+1}:', '${file.name}', '(${file.size}', 'bytes,', '`', '+', '`type', '${file.type})`);', '}', 'FS.Utility.eachFile(event,', 'function(file)', '{', 'BillFiles.insert(file,', 'function', '(err,', 'fileObj)', '{', '//If', '!err,', 'we', 'have', 'inserted', 'new', 'doc', 'with', 'ID', 'fileObj._id,', 'and', '//kicked', 'off', 'the', 'data', 'upload', 'using', 'HTTP', 'if', '(err)', '{', ""console.log('error!');"", 'console.log(err);', '}', 'else', '{', 'console.log(`Inserted', 'file', '${fileObj._id}`);', '}', '});', '});', '}', '});', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"" ""http://www.w3.org/TR/html4/loose.dtd"">
<!-- NewPage -->
<html lang=""en"">
<head>
<!-- Generated by javadoc (version 1.7.0_75) on Tue Apr 21 10:58:53 CEST 2015 -->
<title>de.uni_potsdam.hpi.bpt.bp2014</title>
<meta name=""date"" content=""2015-04-21"">
<link rel=""stylesheet"" type=""text/css"" href=""../../../../../stylesheet.css"" title=""Style"">
</head>
<body>
<h1 class=""bar""><a href=""../../../../../de/uni_potsdam/hpi/bpt/bp2014/package-summary.html"" target=""classFrame"">de.uni_potsdam.hpi.bpt.bp2014</a></h1>
<div class=""indexContainer"">
<h2 title=""Classes"">Classes</h2>
<ul title=""Classes"">
<li><a href=""AbstractTest.html"" title=""class in de.uni_potsdam.hpi.bpt.bp2014"" target=""classFrame"">AbstractTest</a></li>
</ul>
</div>
</body>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'HTML', 'PUBLIC', '""-//W3C//DTD', 'HTML', '4.01', 'Transitional//EN""', '""http://www.w3.org/TR/html4/loose.dtd"">', '<!--', 'NewPage', '-->', '<html', 'lang=""en"">', '<head>', '<!--', 'Generated', 'by', 'javadoc', '(version', '1.7.0_75)', 'on', 'Tue', 'Apr', '21', '10:58:53', 'CEST', '2015', '-->', '<title>de.uni_potsdam.hpi.bpt.bp2014</title>', '<meta', 'name=""date""', 'content=""2015-04-21"">', '<link', 'rel=""stylesheet""', 'type=""text/css""', 'href=""../../../../../stylesheet.css""', 'title=""Style"">', '</head>', '<body>', '<h1', 'class=""bar""><a', 'href=""../../../../../de/uni_potsdam/hpi/bpt/bp2014/package-summary.html""', 'target=""classFrame"">de.uni_potsdam.hpi.bpt.bp2014</a></h1>', '<div', 'class=""indexContainer"">', '<h2', 'title=""Classes"">Classes</h2>', '<ul', 'title=""Classes"">', '<li><a', 'href=""AbstractTest.html""', 'title=""class', 'in', 'de.uni_potsdam.hpi.bpt.bp2014""', 'target=""classFrame"">AbstractTest</a></li>', '</ul>', '</div>', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"package org.cfeclipse.cfmledit.editor.document;

import org.cfeclipse.cfmledit.editor.partitioner.CFMPartitionScanner;
import org.eclipse.core.runtime.CoreException;
import org.eclipse.jface.text.IDocument;
import org.eclipse.jface.text.IDocumentPartitioner;
import org.eclipse.jface.text.rules.FastPartitioner;
import org.eclipse.ui.editors.text.FileDocumentProvider;

public class CFMLDocumentProvider extends FileDocumentProvider {

	protected IDocument createDocument(Object element) throws CoreException {
		IDocument document = super.createDocument(element);
		if (document != null){
		//Attach the partitioner for .cfm files. looks for and comments tags mainly
		IDocumentPartitioner cmfPartitioner = 
				new FastPartitioner(
				new CFMPartitionScanner(), 
				new String[]{
					CFMPartitionScanner.CF_COMMENT
				}
				);
		
		cmfPartitioner.connect(document);
		document.setDocumentPartitioner(cmfPartitioner);
		}
		return document;
	}


}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'org.cfeclipse.cfmledit.editor.document;', 'import', 'org.cfeclipse.cfmledit.editor.partitioner.CFMPartitionScanner;', 'import', 'org.eclipse.core.runtime.CoreException;', 'import', 'org.eclipse.jface.text.IDocument;', 'import', 'org.eclipse.jface.text.IDocumentPartitioner;', 'import', 'org.eclipse.jface.text.rules.FastPartitioner;', 'import', 'org.eclipse.ui.editors.text.FileDocumentProvider;', 'public', 'class', 'CFMLDocumentProvider', 'extends', 'FileDocumentProvider', '{', 'protected', 'IDocument', 'createDocument(Object', 'element)', 'throws', 'CoreException', '{', 'IDocument', 'document', '=', 'super.createDocument(element);', 'if', '(document', '!=', 'null){', '//Attach', 'the', 'partitioner', 'for', '.cfm', 'files.', 'looks', 'for', 'and', 'comments', 'tags', 'mainly', 'IDocumentPartitioner', 'cmfPartitioner', '=', 'new', 'FastPartitioner(', 'new', 'CFMPartitionScanner(),', 'new', 'String[]{', 'CFMPartitionScanner.CF_COMMENT', '}', ');', 'cmfPartitioner.connect(document);', 'document.setDocumentPartitioner(cmfPartitioner);', '}', 'return', 'document;', '}', '}', '```']",challenge not surrounded by ''': ,
"# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [(""app1"", ""3_auto"")]

    operations = [
        migrations.RunPython(migrations.RunPython.noop)
    ]
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', '-*-', 'coding:', 'utf-8', '-*-', 'from', '__future__', 'import', 'unicode_literals', 'from', 'django.db', 'import', 'migrations', 'class', 'Migration(migrations.Migration):', 'dependencies', '=', '[(""app1"",', '""3_auto"")]', 'operations', '=', '[', 'migrations.RunPython(migrations.RunPython.noop)', ']', '```']",challenge not surrounded by ''': ,
"# -*- coding: utf-8 -*-
import datetime
from south.db import db
from south.v2 import SchemaMigration
from django.db import models


class Migration(SchemaMigration):

    def forwards(self, orm):

        # Changing field 'Entry.image_urls'
        db.alter_column('wiki_entry', 'image_urls', self.gf('django.db.models.fields.CharField')(max_length=1000, null=True))

    def backwards(self, orm):

        # Changing field 'Entry.image_urls'
        db.alter_column('wiki_entry', 'image_urls', self.gf('django.db.models.fields.CharField')(max_length=1000))

    models = {
        'auth.group': {
            'Meta': {'object_name': 'Group'},
            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'name': ('django.db.models.fields.CharField', [], {'unique': 'True', 'max_length': '80'}),
            'permissions': ('django.db.models.fields.related.ManyToManyField', [], {'to': ""orm['auth.Permission']"", 'symmetrical': 'False', 'blank': 'True'})
        },
        'auth.permission': {
            'Meta': {'ordering': ""('content_type__app_label', 'content_type__model', 'codename')"", 'unique_together': ""(('content_type', 'codename'),)"", 'object_name': 'Permission'},
            'codename': ('django.db.models.fields.CharField', [], {'max_length': '100'}),
            'content_type': ('django.db.models.fields.related.ForeignKey', [], {'to': ""orm['contenttypes.ContentType']""}),
            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'name': ('django.db.models.fields.CharField', [], {'max_length': '50'})
        },
        'auth.user': {
            'Meta': {'object_name': 'User'},
            'date_joined': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now'}),
            'email': ('django.db.models.fields.EmailField', [], {'max_length': '75', 'blank': 'True'}),
            'first_name': ('django.db.models.fields.CharField', [], {'max_length': '30', 'blank': 'True'}),
            'groups': ('django.db.models.fields.related.ManyToManyField', [], {'to': ""orm['auth.Group']"", 'symmetrical': 'False', 'blank': 'True'}),
            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'is_active': ('django.db.models.fields.BooleanField', [], {'default': 'True'}),
            'is_staff': ('django.db.models.fields.BooleanField', [], {'default': 'False'}),
            'is_superuser': ('django.db.models.fields.BooleanField', [], {'default': 'False'}),
            'last_login': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now'}),
            'last_name': ('django.db.models.fields.CharField', [], {'max_length': '30', 'blank': 'True'}),
            'password': ('django.db.models.fields.CharField', [], {'max_length': '128'}),
            'user_permissions': ('django.db.models.fields.related.ManyToManyField', [], {'to': ""orm['auth.Permission']"", 'symmetrical': 'False', 'blank': 'True'}),
            'username': ('django.db.models.fields.CharField', [], {'unique': 'True', 'max_length': '30'})
        },
        'contenttypes.contenttype': {
            'Meta': {'ordering': ""('name',)"", 'unique_together': ""(('app_label', 'model'),)"", 'object_name': 'ContentType', 'db_table': ""'django_content_type'""},
            'app_label': ('django.db.models.fields.CharField', [], {'max_length': '100'}),
            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'model': ('django.db.models.fields.CharField', [], {'max_length': '100'}),
            'name': ('django.db.models.fields.CharField', [], {'max_length': '100'})
        },
        'wiki.category': {
            'Meta': {'object_name': 'Category'},
            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'name': ('django.db.models.fields.CharField', [], {'unique': 'True', 'max_length': '20'})
        },
        'wiki.entry': {
            'Meta': {'ordering': ""['public', '-sub_time']"", 'object_name': 'Entry'},
            'allow_comment': ('django.db.models.fields.BooleanField', [], {'default': 'True'}),
            'author': ('django.db.models.fields.related.ForeignKey', [], {'default': '1', 'to': ""orm['auth.User']""}),
            'category': ('django.db.models.fields.related.ForeignKey', [], {'default': '1', 'to': ""orm['wiki.Category']""}),
            'click_time': ('django.db.models.fields.PositiveIntegerField', [], {'default': '0', 'max_length': '10', 'null': 'True', 'blank': 'True'}),
            'content': ('django.db.models.fields.TextField', [], {}),
            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'image_urls': ('django.db.models.fields.CharField', [], {'default': ""''"", 'max_length': '1000', 'null': 'True', 'blank': 'True'}),
            'md_content': ('django.db.models.fields.TextField', [], {'default': ""''""}),
            'plink': ('django.db.models.fields.CharField', [], {'max_length': '15', 'null': 'True', 'blank': 'True'}),
            'public': ('django.db.models.fields.BooleanField', [], {'default': 'False'}),
            'source': ('django.db.models.fields.URLField', [], {'default': ""''"", 'max_length': '200', 'null': 'True', 'blank': 'True'}),
            'sub_time': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now'}),
            'tag': ('django.db.models.fields.related.ManyToManyField', [], {'symmetrical': 'False', 'to': ""orm['wiki.Tag']"", 'null': 'True', 'blank': 'True'}),
            'title': ('django.db.models.fields.CharField', [], {'max_length': '300'})
        },
        'wiki.tag': {
            'Meta': {'object_name': 'Tag'},
            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'name': ('django.db.models.fields.CharField', [], {'unique': 'True', 'max_length': '10'}),
            'remark': ('django.db.models.fields.CharField', [], {'max_length': '300', 'null': 'True', 'blank': 'True'})
        }
    }

    complete_apps = ['wiki']","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', '-*-', 'coding:', 'utf-8', '-*-', 'import', 'datetime', 'from', 'south.db', 'import', 'db', 'from', 'south.v2', 'import', 'SchemaMigration', 'from', 'django.db', 'import', 'models', 'class', 'Migration(SchemaMigration):', 'def', 'forwards(self,', 'orm):', '#', 'Changing', 'field', ""'Entry.image_urls'"", ""db.alter_column('wiki_entry',"", ""'image_urls',"", ""self.gf('django.db.models.fields.CharField')(max_length=1000,"", 'null=True))', 'def', 'backwards(self,', 'orm):', '#', 'Changing', 'field', ""'Entry.image_urls'"", ""db.alter_column('wiki_entry',"", ""'image_urls',"", ""self.gf('django.db.models.fields.CharField')(max_length=1000))"", 'models', '=', '{', ""'auth.group':"", '{', ""'Meta':"", ""{'object_name':"", ""'Group'},"", ""'id':"", ""('django.db.models.fields.AutoField',"", '[],', ""{'primary_key':"", ""'True'}),"", ""'name':"", ""('django.db.models.fields.CharField',"", '[],', ""{'unique':"", ""'True',"", ""'max_length':"", ""'80'}),"", ""'permissions':"", ""('django.db.models.fields.related.ManyToManyField',"", '[],', ""{'to':"", '""orm[\'auth.Permission\']"",', ""'symmetrical':"", ""'False',"", ""'blank':"", ""'True'})"", '},', ""'auth.permission':"", '{', ""'Meta':"", ""{'ordering':"", '""(\'content_type__app_label\',', ""'content_type__model',"", '\'codename\')"",', ""'unique_together':"", '""((\'content_type\',', '\'codename\'),)"",', ""'object_name':"", ""'Permission'},"", ""'codename':"", ""('django.db.models.fields.CharField',"", '[],', ""{'max_length':"", ""'100'}),"", ""'content_type':"", ""('django.db.models.fields.related.ForeignKey',"", '[],', ""{'to':"", '""orm[\'contenttypes.ContentType\']""}),', ""'id':"", ""('django.db.models.fields.AutoField',"", '[],', ""{'primary_key':"", ""'True'}),"", ""'name':"", ""('django.db.models.fields.CharField',"", '[],', ""{'max_length':"", ""'50'})"", '},', ""'auth.user':"", '{', ""'Meta':"", ""{'object_name':"", ""'User'},"", ""'date_joined':"", ""('django.db.models.fields.DateTimeField',"", '[],', ""{'default':"", ""'datetime.datetime.now'}),"", ""'email':"", ""('django.db.models.fields.EmailField',"", '[],', ""{'max_length':"", ""'75',"", ""'blank':"", ""'True'}),"", ""'first_name':"", ""('django.db.models.fields.CharField',"", '[],', ""{'max_length':"", ""'30',"", ""'blank':"", ""'True'}),"", ""'groups':"", ""('django.db.models.fields.related.ManyToManyField',"", '[],', ""{'to':"", '""orm[\'auth.Group\']"",', ""'symmetrical':"", ""'False',"", ""'blank':"", ""'True'}),"", ""'id':"", ""('django.db.models.fields.AutoField',"", '[],', ""{'primary_key':"", ""'True'}),"", ""'is_active':"", ""('django.db.models.fields.BooleanField',"", '[],', ""{'default':"", ""'True'}),"", ""'is_staff':"", ""('django.db.models.fields.BooleanField',"", '[],', ""{'default':"", ""'False'}),"", ""'is_superuser':"", ""('django.db.models.fields.BooleanField',"", '[],', ""{'default':"", ""'False'}),"", ""'last_login':"", ""('django.db.models.fields.DateTimeField',"", '[],', ""{'default':"", ""'datetime.datetime.now'}),"", ""'last_name':"", ""('django.db.models.fields.CharField',"", '[],', ""{'max_length':"", ""'30',"", ""'blank':"", ""'True'}),"", ""'password':"", ""('django.db.models.fields.CharField',"", '[],', ""{'max_length':"", ""'128'}),"", ""'user_permissions':"", ""('django.db.models.fields.related.ManyToManyField',"", '[],', ""{'to':"", '""orm[\'auth.Permission\']"",', ""'symmetrical':"", ""'False',"", ""'blank':"", ""'True'}),"", ""'username':"", ""('django.db.models.fields.CharField',"", '[],', ""{'unique':"", ""'True',"", ""'max_length':"", ""'30'})"", '},', ""'contenttypes.contenttype':"", '{', ""'Meta':"", ""{'ordering':"", '""(\'name\',)"",', ""'unique_together':"", '""((\'app_label\',', '\'model\'),)"",', ""'object_name':"", ""'ContentType',"", ""'db_table':"", '""\'django_content_type\'""},', ""'app_label':"", ""('django.db.models.fields.CharField',"", '[],', ""{'max_length':"", ""'100'}),"", ""'id':"", ""('django.db.models.fields.AutoField',"", '[],', ""{'primary_key':"", ""'True'}),"", ""'model':"", ""('django.db.models.fields.CharField',"", '[],', ""{'max_length':"", ""'100'}),"", ""'name':"", ""('django.db.models.fields.CharField',"", '[],', ""{'max_length':"", ""'100'})"", '},', ""'wiki.category':"", '{', ""'Meta':"", ""{'object_name':"", ""'Category'},"", ""'id':"", ""('django.db.models.fields.AutoField',"", '[],', ""{'primary_key':"", ""'True'}),"", ""'name':"", ""('django.db.models.fields.CharField',"", '[],', ""{'unique':"", ""'True',"", ""'max_length':"", ""'20'})"", '},', ""'wiki.entry':"", '{', ""'Meta':"", ""{'ordering':"", '""[\'public\',', '\'-sub_time\']"",', ""'object_name':"", ""'Entry'},"", ""'allow_comment':"", ""('django.db.models.fields.BooleanField',"", '[],', ""{'default':"", ""'True'}),"", ""'author':"", ""('django.db.models.fields.related.ForeignKey',"", '[],', ""{'default':"", ""'1',"", ""'to':"", '""orm[\'auth.User\']""}),', ""'category':"", ""('django.db.models.fields.related.ForeignKey',"", '[],', ""{'default':"", ""'1',"", ""'to':"", '""orm[\'wiki.Category\']""}),', ""'click_time':"", ""('django.db.models.fields.PositiveIntegerField',"", '[],', ""{'default':"", ""'0',"", ""'max_length':"", ""'10',"", ""'null':"", ""'True',"", ""'blank':"", ""'True'}),"", ""'content':"", ""('django.db.models.fields.TextField',"", '[],', '{}),', ""'id':"", ""('django.db.models.fields.AutoField',"", '[],', ""{'primary_key':"", ""'True'}),"", ""'image_urls':"", ""('django.db.models.fields.CharField',"", '[],', ""{'default':"", '""\'\'"",', ""'max_length':"", ""'1000',"", ""'null':"", ""'True',"", ""'blank':"", ""'True'}),"", ""'md_content':"", ""('django.db.models.fields.TextField',"", '[],', ""{'default':"", '""\'\'""}),', ""'plink':"", ""('django.db.models.fields.CharField',"", '[],', ""{'max_length':"", ""'15',"", ""'null':"", ""'True',"", ""'blank':"", ""'True'}),"", ""'public':"", ""('django.db.models.fields.BooleanField',"", '[],', ""{'default':"", ""'False'}),"", ""'source':"", ""('django.db.models.fields.URLField',"", '[],', ""{'default':"", '""\'\'"",', ""'max_length':"", ""'200',"", ""'null':"", ""'True',"", ""'blank':"", ""'True'}),"", ""'sub_time':"", ""('django.db.models.fields.DateTimeField',"", '[],', ""{'default':"", ""'datetime.datetime.now'}),"", ""'tag':"", ""('django.db.models.fields.related.ManyToManyField',"", '[],', ""{'symmetrical':"", ""'False',"", ""'to':"", '""orm[\'wiki.Tag\']"",', ""'null':"", ""'True',"", ""'blank':"", ""'True'}),"", ""'title':"", ""('django.db.models.fields.CharField',"", '[],', ""{'max_length':"", ""'300'})"", '},', ""'wiki.tag':"", '{', ""'Meta':"", ""{'object_name':"", ""'Tag'},"", ""'id':"", ""('django.db.models.fields.AutoField',"", '[],', ""{'primary_key':"", ""'True'}),"", ""'name':"", ""('django.db.models.fields.CharField',"", '[],', ""{'unique':"", ""'True',"", ""'max_length':"", ""'10'}),"", ""'remark':"", ""('django.db.models.fields.CharField',"", '[],', ""{'max_length':"", ""'300',"", ""'null':"", ""'True',"", ""'blank':"", ""'True'})"", '}', '}', 'complete_apps', '=', ""['wiki']```""]",challenge not surrounded by ''': ,
"package com.tianma.simpleweather.util;

import android.util.Log;

import com.tianma.simpleweather.BuildConfig;


public class XLog {

    private static final String LOG_TAG = BuildConfig.LOG_TAG;
    private static final int LOG_LEVEL = BuildConfig.LOG_LEVEL;

    private XLog() {
    }

    private static void log(int priority, String message, Object... args) {
        if (priority < LOG_LEVEL)
            return;

        message = String.format(message, args);

        if (args.length > 0 && args[args.length - 1] instanceof Throwable) {
            Throwable throwable = (Throwable) args[args.length - 1];
            String stacktraceStr = Log.getStackTraceString(throwable);
            message += '\n' + stacktraceStr;
        }

        // Write to the default log tag
        Log.println(priority, LOG_TAG, message);
    }

    public static void v(String message, Object... args) {
        log(Log.VERBOSE, message, args);
    }

    public static void d(String message, Object... args) {
        log(Log.DEBUG, message, args);
    }

    public static void i(String message, Object... args) {
        log(Log.INFO, message, args);
    }

    public static void w(String message, Object... args) {
        log(Log.WARN, message, args);
    }

    public static void e(String message, Object... args) {
        log(Log.ERROR, message, args);
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.tianma.simpleweather.util;', 'import', 'android.util.Log;', 'import', 'com.tianma.simpleweather.BuildConfig;', 'public', 'class', 'XLog', '{', 'private', 'static', 'final', 'String', 'LOG_TAG', '=', 'BuildConfig.LOG_TAG;', 'private', 'static', 'final', 'int', 'LOG_LEVEL', '=', 'BuildConfig.LOG_LEVEL;', 'private', 'XLog()', '{', '}', 'private', 'static', 'void', 'log(int', 'priority,', 'String', 'message,', 'Object...', 'args)', '{', 'if', '(priority', '<', 'LOG_LEVEL)', 'return;', 'message', '=', 'String.format(message,', 'args);', 'if', '(args.length', '>', '0', '&&', 'args[args.length', '-', '1]', 'instanceof', 'Throwable)', '{', 'Throwable', 'throwable', '=', '(Throwable)', 'args[args.length', '-', '1];', 'String', 'stacktraceStr', '=', 'Log.getStackTraceString(throwable);', 'message', '+=', ""'\\n'"", '+', 'stacktraceStr;', '}', '//', 'Write', 'to', 'the', 'default', 'log', 'tag', 'Log.println(priority,', 'LOG_TAG,', 'message);', '}', 'public', 'static', 'void', 'v(String', 'message,', 'Object...', 'args)', '{', 'log(Log.VERBOSE,', 'message,', 'args);', '}', 'public', 'static', 'void', 'd(String', 'message,', 'Object...', 'args)', '{', 'log(Log.DEBUG,', 'message,', 'args);', '}', 'public', 'static', 'void', 'i(String', 'message,', 'Object...', 'args)', '{', 'log(Log.INFO,', 'message,', 'args);', '}', 'public', 'static', 'void', 'w(String', 'message,', 'Object...', 'args)', '{', 'log(Log.WARN,', 'message,', 'args);', '}', 'public', 'static', 'void', 'e(String', 'message,', 'Object...', 'args)', '{', 'log(Log.ERROR,', 'message,', 'args);', '}', '}', '```']",challenge not surrounded by ''': ,
"package view.editor.gameeditor;

import api.IEntity;
import api.ILevel;
import datamanagement.XMLWriter;
import javafx.collections.ObservableList;
import view.enums.DefaultStrings;
import view.enums.Indexes;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

/**
 * @author calinelson
 */
public class GameSaver {


    @SuppressWarnings(""unchecked"")
    public void saveGame (ObservableList<ILevel> levels, ObservableList<IEntity> entityList, List<String> details) {
        String fileName = getDirectory(details);
        new XMLWriter<List<String>>().writeToFile(fileName + DefaultStrings.METADATA_LOC.getDefault(), details);
        new XMLWriter<List<IEntity>>().writeToFile(fileName + DefaultStrings.ENTITIES_LOC.getDefault(), new ArrayList<IEntity>(entityList));
        saveLevels(levels, fileName);
    }


    private void saveLevels (ObservableList<ILevel> levels, String fileName) {
        File levelFile = new File(fileName + DefaultStrings.LEVELS_LOC.getDefault());
        levelFile.mkdirs();
        for (ILevel level : levels) {
            new XMLWriter<ILevel>().writeToFile(fileName + DefaultStrings.LEVELS_LOC.getDefault() + level.getName() + DefaultStrings.XML.getDefault(), level);
        }
    }


    private String getDirectory (List<String> details) {
        String fileName = DefaultStrings.CREATE_LOC.getDefault() + details.get(Indexes.GAME_NAME.getIndex());
        File file = new File(fileName);
        if (file.exists()) {
            file.delete();
        }
        file.mkdirs();
        return fileName;
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'view.editor.gameeditor;', 'import', 'api.IEntity;', 'import', 'api.ILevel;', 'import', 'datamanagement.XMLWriter;', 'import', 'javafx.collections.ObservableList;', 'import', 'view.enums.DefaultStrings;', 'import', 'view.enums.Indexes;', 'import', 'java.io.File;', 'import', 'java.util.ArrayList;', 'import', 'java.util.List;', '/**', '*', '@author', 'calinelson', '*/', 'public', 'class', 'GameSaver', '{', '@SuppressWarnings(""unchecked"")', 'public', 'void', 'saveGame', '(ObservableList<ILevel>', 'levels,', 'ObservableList<IEntity>', 'entityList,', 'List<String>', 'details)', '{', 'String', 'fileName', '=', 'getDirectory(details);', 'new', 'XMLWriter<List<String>>().writeToFile(fileName', '+', 'DefaultStrings.METADATA_LOC.getDefault(),', 'details);', 'new', 'XMLWriter<List<IEntity>>().writeToFile(fileName', '+', 'DefaultStrings.ENTITIES_LOC.getDefault(),', 'new', 'ArrayList<IEntity>(entityList));', 'saveLevels(levels,', 'fileName);', '}', 'private', 'void', 'saveLevels', '(ObservableList<ILevel>', 'levels,', 'String', 'fileName)', '{', 'File', 'levelFile', '=', 'new', 'File(fileName', '+', 'DefaultStrings.LEVELS_LOC.getDefault());', 'levelFile.mkdirs();', 'for', '(ILevel', 'level', ':', 'levels)', '{', 'new', 'XMLWriter<ILevel>().writeToFile(fileName', '+', 'DefaultStrings.LEVELS_LOC.getDefault()', '+', 'level.getName()', '+', 'DefaultStrings.XML.getDefault(),', 'level);', '}', '}', 'private', 'String', 'getDirectory', '(List<String>', 'details)', '{', 'String', 'fileName', '=', 'DefaultStrings.CREATE_LOC.getDefault()', '+', 'details.get(Indexes.GAME_NAME.getIndex());', 'File', 'file', '=', 'new', 'File(fileName);', 'if', '(file.exists())', '{', 'file.delete();', '}', 'file.mkdirs();', 'return', 'fileName;', '}', '}', '```']",challenge not surrounded by ''': ,
"<!doctype html>
<html lang=""en"">
<head>
  <meta charset=""UTF-8"">
  <title>Example - example-orderBy-static-production</title>
  <link href=""style.css"" rel=""stylesheet"" type=""text/css"">
  

  <script src=""//ajax.googleapis.com/ajax/libs/angularjs/1.6.6/angular.min.js""></script>
  <script src=""script.js""></script>
  

  
</head>
<body ng-app=""orderByExample1"">
  <div ng-controller=""ExampleController"">
  <table class=""friends"">
    <tr>
      <th>Name</th>
      <th>Phone Number</th>
      <th>Age</th>
    </tr>
    <tr ng-repeat=""friend in friends | orderBy:'-age'"">
      <td>{{friend.name}}</td>
      <td>{{friend.phone}}</td>
      <td>{{friend.age}}</td>
    </tr>
  </table>
</div>
</body>
</html>","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!doctype', 'html>', '<html', 'lang=""en"">', '<head>', '<meta', 'charset=""UTF-8"">', '<title>Example', '-', 'example-orderBy-static-production</title>', '<link', 'href=""style.css""', 'rel=""stylesheet""', 'type=""text/css"">', '<script', 'src=""//ajax.googleapis.com/ajax/libs/angularjs/1.6.6/angular.min.js""></script>', '<script', 'src=""script.js""></script>', '</head>', '<body', 'ng-app=""orderByExample1"">', '<div', 'ng-controller=""ExampleController"">', '<table', 'class=""friends"">', '<tr>', '<th>Name</th>', '<th>Phone', 'Number</th>', '<th>Age</th>', '</tr>', '<tr', 'ng-repeat=""friend', 'in', 'friends', '|', 'orderBy:\'-age\'"">', '<td>{{friend.name}}</td>', '<td>{{friend.phone}}</td>', '<td>{{friend.age}}</td>', '</tr>', '</table>', '</div>', '</body>', '</html>```']",challenge not surrounded by ''': ,
"package com.sequenceiq.it.cloudbreak.action.freeipa;

import static java.lang.String.format;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.sequenceiq.freeipa.api.v1.freeipa.stack.model.attachchildenv.AttachChildEnvironmentRequest;
import com.sequenceiq.freeipa.api.v1.freeipa.stack.model.detachchildenv.DetachChildEnvironmentRequest;
import com.sequenceiq.it.cloudbreak.FreeIpaClient;
import com.sequenceiq.it.cloudbreak.action.Action;
import com.sequenceiq.it.cloudbreak.context.TestContext;
import com.sequenceiq.it.cloudbreak.dto.freeipa.FreeIpaChildEnvironmentTestDto;
import com.sequenceiq.it.cloudbreak.log.Log;

public class FreeIpaDetachChildEnvironmentAction implements Action<FreeIpaChildEnvironmentTestDto, FreeIpaClient> {

    private static final Logger LOGGER = LoggerFactory.getLogger(FreeIpaDetachChildEnvironmentAction.class);

    @Override
    public FreeIpaChildEnvironmentTestDto action(TestContext testContext, FreeIpaChildEnvironmentTestDto testDto, FreeIpaClient client) throws Exception {
        DetachChildEnvironmentRequest request = convertRequest(testDto.getRequest());
        Log.whenJson(LOGGER, format("" FreeIPA detach child environment:%n""), request);
        client.getDefaultClient()
                .getFreeIpaV1Endpoint()
                .detachChildEnvironment(request);
        Log.when(LOGGER, "" FreeIPA detached child environment successfully."");
        return testDto;
    }

    private DetachChildEnvironmentRequest convertRequest(AttachChildEnvironmentRequest attachChildEnvironmentRequest) {
        DetachChildEnvironmentRequest detachChildEnvironmentRequest = new DetachChildEnvironmentRequest();
        detachChildEnvironmentRequest.setParentEnvironmentCrn(attachChildEnvironmentRequest.getParentEnvironmentCrn());
        detachChildEnvironmentRequest.setChildEnvironmentCrn(attachChildEnvironmentRequest.getChildEnvironmentCrn());
        return detachChildEnvironmentRequest;
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.sequenceiq.it.cloudbreak.action.freeipa;', 'import', 'static', 'java.lang.String.format;', 'import', 'org.slf4j.Logger;', 'import', 'org.slf4j.LoggerFactory;', 'import', 'com.sequenceiq.freeipa.api.v1.freeipa.stack.model.attachchildenv.AttachChildEnvironmentRequest;', 'import', 'com.sequenceiq.freeipa.api.v1.freeipa.stack.model.detachchildenv.DetachChildEnvironmentRequest;', 'import', 'com.sequenceiq.it.cloudbreak.FreeIpaClient;', 'import', 'com.sequenceiq.it.cloudbreak.action.Action;', 'import', 'com.sequenceiq.it.cloudbreak.context.TestContext;', 'import', 'com.sequenceiq.it.cloudbreak.dto.freeipa.FreeIpaChildEnvironmentTestDto;', 'import', 'com.sequenceiq.it.cloudbreak.log.Log;', 'public', 'class', 'FreeIpaDetachChildEnvironmentAction', 'implements', 'Action<FreeIpaChildEnvironmentTestDto,', 'FreeIpaClient>', '{', 'private', 'static', 'final', 'Logger', 'LOGGER', '=', 'LoggerFactory.getLogger(FreeIpaDetachChildEnvironmentAction.class);', '@Override', 'public', 'FreeIpaChildEnvironmentTestDto', 'action(TestContext', 'testContext,', 'FreeIpaChildEnvironmentTestDto', 'testDto,', 'FreeIpaClient', 'client)', 'throws', 'Exception', '{', 'DetachChildEnvironmentRequest', 'request', '=', 'convertRequest(testDto.getRequest());', 'Log.whenJson(LOGGER,', 'format(""', 'FreeIPA', 'detach', 'child', 'environment:%n""),', 'request);', 'client.getDefaultClient()', '.getFreeIpaV1Endpoint()', '.detachChildEnvironment(request);', 'Log.when(LOGGER,', '""', 'FreeIPA', 'detached', 'child', 'environment', 'successfully."");', 'return', 'testDto;', '}', 'private', 'DetachChildEnvironmentRequest', 'convertRequest(AttachChildEnvironmentRequest', 'attachChildEnvironmentRequest)', '{', 'DetachChildEnvironmentRequest', 'detachChildEnvironmentRequest', '=', 'new', 'DetachChildEnvironmentRequest();', 'detachChildEnvironmentRequest.setParentEnvironmentCrn(attachChildEnvironmentRequest.getParentEnvironmentCrn());', 'detachChildEnvironmentRequest.setChildEnvironmentCrn(attachChildEnvironmentRequest.getChildEnvironmentCrn());', 'return', 'detachChildEnvironmentRequest;', '}', '}', '```']",challenge not surrounded by ''': ,
"var start = new Date().getTime()
	log = function(message) {
		var log = document.getElementById('log'),
			div = document.createElement('div');

		div.innerHTML = (new Date().getTime() - start) + 'ms: ' + message;

		log.appendChild(div);
	},
	success = function() {
		var body = document.getElementsByTagName('body')[0];

		body.style.backgroundColor = ""green"";
	};

require.config({
	paths: {
		// Alias for CSS plugin
		'css':		'../css'
	}
});","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```var', 'start', '=', 'new', 'Date().getTime()', 'log', '=', 'function(message)', '{', 'var', 'log', '=', ""document.getElementById('log'),"", 'div', '=', ""document.createElement('div');"", 'div.innerHTML', '=', '(new', 'Date().getTime()', '-', 'start)', '+', ""'ms:"", ""'"", '+', 'message;', 'log.appendChild(div);', '},', 'success', '=', 'function()', '{', 'var', 'body', '=', ""document.getElementsByTagName('body')[0];"", 'body.style.backgroundColor', '=', '""green"";', '};', 'require.config({', 'paths:', '{', '//', 'Alias', 'for', 'CSS', 'plugin', ""'css':"", ""'../css'"", '}', '});```']",challenge not surrounded by ''': ,
"<!doctype html public ""-//W3C//DTD HTML 4.0 Transitional//EN"" ""http://www.w3.org/TR/REC-html40/loose.dtd"">
<html>
<head>
    <title>PHPXRef 0.7.1 : Unnamed Project : Variable Reference: $possible_keys</title>
    <link rel=""stylesheet"" href=""../sample.css"" type=""text/css"">
    <link rel=""stylesheet"" href=""../sample-print.css"" type=""text/css"" media=""print"">
    <style id=""hilight"" type=""text/css""></style>
    <meta http-equiv=""content-type"" content=""text/html;charset=iso-8859-1"">
</head>
<body bgcolor=""#ffffff"" text=""#000000"" link=""#801800"" vlink=""#300540"" alink=""#ffffff"">
<table class=""pagetitle"" width=""100%"">
	<tr>
        <td valign=""top"" class=""pagetitle"">
            [ <a href=""../index.html"">Index</a> ]
        </td>
        <td align=""right"" class=""pagetitle"">
		    <h2 style=""margin-bottom: 0px"">PHP Cross Reference of Unnamed Project</h2>
	    </td>
    </tr>
</table>


<!-- Generated by PHPXref 0.7.1 at Thu Oct 23 18:57:41 2014 -->
<!-- PHPXref (c) 2000-2010 Gareth Watts - gareth@omnipotent.net -->
<!-- http://phpxref.sourceforge.net/ -->

<script src=""../phpxref.js"" type=""text/javascript""></script>
<script language=""JavaScript"" type=""text/javascript"">
<!--
ext='.html';
relbase='../';
subdir='_variables';
filename='index.html';
cookiekey='phpxref';
handleNavFrame(relbase, subdir, filename);
logVariable('possible_keys');
// -->
</script>
<script language=""JavaScript"" type=""text/javascript"">
if (gwGetCookie('xrefnav')=='off')
  document.write('<p class=""navlinks"">[ <a href=""javascript:navOn()"">Show Explorer<\/a> ]<\/p>');
else
  document.write('<p class=""navlinks"">[ <a href=""javascript:navOff()"">Hide Explorer<\/a> ]<\/p>');
</script>
<noscript>
<p class=""navlinks"">
[ <a href=""../nav.html"" target=""_top"">Show Explorer</a> ]
[ <a href=""index.html"" target=""_top"">Hide Navbar</a> ]
</p>
</noscript>
[<a href=""../index.html"">Top level directory</a>]<br>
<script language=""JavaScript"" type=""text/javascript"">
<!--

document.writeln('<table align=""right"" class=""searchbox-link""><tr><td><a class=""searchbox-link"" href=""javascript:void(0)"" onMouseOver=""showSearchBox()"">Search</a><br>');
document.writeln('<table border=""0"" cellspacing=""0"" cellpadding=""0"" class=""searchbox"" id=""searchbox"">');
document.writeln('<tr><td class=""searchbox-title"">');
document.writeln('<a class=""searchbox-title"" href=""javascript:showSearchPopup()"">Search History +</a>');
document.writeln('<\/td><\/tr>');

document.writeln('<tr><td class=""searchbox-body"" id=""searchbox-body"">');
document.writeln('<form name=""search"" style=""margin:0px; padding:0px"" onSubmit=\'return jump()\'>');
document.writeln('<a class=""searchbox-body"" href=""../_classes/index.html"">Class<\/a>: ');
document.writeln('<input type=""text"" size=10 value="""" name=""classname""><br>');
document.writeln('<a id=""funcsearchlink"" class=""searchbox-body"" href=""../_functions/index.html"">Function<\/a>: ');
document.writeln('<input type=""text"" size=10 value="""" name=""funcname""><br>');
document.writeln('<a class=""searchbox-body"" href=""../_variables/index.html"">Variable<\/a>: ');
document.writeln('<input type=""text"" size=10 value="""" name=""varname""><br>');
document.writeln('<a class=""searchbox-body"" href=""../_constants/index.html"">Constant<\/a>: ');
document.writeln('<input type=""text"" size=10 value="""" name=""constname""><br>');
document.writeln('<a class=""searchbox-body"" href=""../_tables/index.html"">Table<\/a>: ');
document.writeln('<input type=""text"" size=10 value="""" name=""tablename""><br>');
document.writeln('<input type=""submit"" class=""searchbox-button"" value=""Search"">');
document.writeln('<\/form>');
document.writeln('<\/td><\/tr><\/table>');
document.writeln('<\/td><\/tr><\/table>');
// -->
</script>
<div id=""search-popup"" class=""searchpopup""><p id=""searchpopup-title"" class=""searchpopup-title"">title</p><div id=""searchpopup-body"" class=""searchpopup-body"">Body</div><p class=""searchpopup-close""><a href=""javascript:gwCloseActive()"">[close]</a></p></div>
<h3>Variable Cross Reference</h3>
<h2><a href=""index.html#possible_keys"">$possible_keys</a></h2>

<br><b>Referenced 1 times:</b><ul>
<li><a href=""../application/libraries/Profiler.php.html"">/application/libraries/Profiler.php</a>  -> <a href=""../application/libraries/Profiler.php.source.html#l233""> line 233</a></li>
</ul>
<!-- A link to the phpxref site in your customized footer file is appreciated ;-) -->
<br><hr>
<table width=""100%"">
	<tr><td>Generated: Thu Oct 23 18:57:41 2014</td>
	<td align=""right""><i>Cross-referenced by <a href=""http://phpxref.sourceforge.net/"">PHPXref 0.7.1</a></i></td>
	</tr>
</table>
</body></html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!doctype', 'html', 'public', '""-//W3C//DTD', 'HTML', '4.0', 'Transitional//EN""', '""http://www.w3.org/TR/REC-html40/loose.dtd"">', '<html>', '<head>', '<title>PHPXRef', '0.7.1', ':', 'Unnamed', 'Project', ':', 'Variable', 'Reference:', '$possible_keys</title>', '<link', 'rel=""stylesheet""', 'href=""../sample.css""', 'type=""text/css"">', '<link', 'rel=""stylesheet""', 'href=""../sample-print.css""', 'type=""text/css""', 'media=""print"">', '<style', 'id=""hilight""', 'type=""text/css""></style>', '<meta', 'http-equiv=""content-type""', 'content=""text/html;charset=iso-8859-1"">', '</head>', '<body', 'bgcolor=""#ffffff""', 'text=""#000000""', 'link=""#801800""', 'vlink=""#300540""', 'alink=""#ffffff"">', '<table', 'class=""pagetitle""', 'width=""100%"">', '<tr>', '<td', 'valign=""top""', 'class=""pagetitle"">', '[', '<a', 'href=""../index.html"">Index</a>', ']', '</td>', '<td', 'align=""right""', 'class=""pagetitle"">', '<h2', 'style=""margin-bottom:', '0px"">PHP', 'Cross', 'Reference', 'of', 'Unnamed', 'Project</h2>', '</td>', '</tr>', '</table>', '<!--', 'Generated', 'by', 'PHPXref', '0.7.1', 'at', 'Thu', 'Oct', '23', '18:57:41', '2014', '-->', '<!--', 'PHPXref', '(c)', '2000-2010', 'Gareth', 'Watts', '-', 'gareth@omnipotent.net', '-->', '<!--', 'http://phpxref.sourceforge.net/', '-->', '<script', 'src=""../phpxref.js""', 'type=""text/javascript""></script>', '<script', 'language=""JavaScript""', 'type=""text/javascript"">', '<!--', ""ext='.html';"", ""relbase='../';"", ""subdir='_variables';"", ""filename='index.html';"", ""cookiekey='phpxref';"", 'handleNavFrame(relbase,', 'subdir,', 'filename);', ""logVariable('possible_keys');"", '//', '-->', '</script>', '<script', 'language=""JavaScript""', 'type=""text/javascript"">', 'if', ""(gwGetCookie('xrefnav')=='off')"", ""document.write('<p"", 'class=""navlinks"">[', '<a', 'href=""javascript:navOn()"">Show', 'Explorer<\\/a>', ""]<\\/p>');"", 'else', ""document.write('<p"", 'class=""navlinks"">[', '<a', 'href=""javascript:navOff()"">Hide', 'Explorer<\\/a>', ""]<\\/p>');"", '</script>', '<noscript>', '<p', 'class=""navlinks"">', '[', '<a', 'href=""../nav.html""', 'target=""_top"">Show', 'Explorer</a>', ']', '[', '<a', 'href=""index.html""', 'target=""_top"">Hide', 'Navbar</a>', ']', '</p>', '</noscript>', '[<a', 'href=""../index.html"">Top', 'level', 'directory</a>]<br>', '<script', 'language=""JavaScript""', 'type=""text/javascript"">', '<!--', ""document.writeln('<table"", 'align=""right""', 'class=""searchbox-link""><tr><td><a', 'class=""searchbox-link""', 'href=""javascript:void(0)""', 'onMouseOver=""showSearchBox()"">Search</a><br>\');', ""document.writeln('<table"", 'border=""0""', 'cellspacing=""0""', 'cellpadding=""0""', 'class=""searchbox""', 'id=""searchbox"">\');', ""document.writeln('<tr><td"", 'class=""searchbox-title"">\');', ""document.writeln('<a"", 'class=""searchbox-title""', 'href=""javascript:showSearchPopup()"">Search', 'History', ""+</a>');"", ""document.writeln('<\\/td><\\/tr>');"", ""document.writeln('<tr><td"", 'class=""searchbox-body""', 'id=""searchbox-body"">\');', ""document.writeln('<form"", 'name=""search""', 'style=""margin:0px;', 'padding:0px""', ""onSubmit=\\'return"", ""jump()\\'>');"", ""document.writeln('<a"", 'class=""searchbox-body""', 'href=""../_classes/index.html"">Class<\\/a>:', ""');"", ""document.writeln('<input"", 'type=""text""', 'size=10', 'value=""""', 'name=""classname""><br>\');', ""document.writeln('<a"", 'id=""funcsearchlink""', 'class=""searchbox-body""', 'href=""../_functions/index.html"">Function<\\/a>:', ""');"", ""document.writeln('<input"", 'type=""text""', 'size=10', 'value=""""', 'name=""funcname""><br>\');', ""document.writeln('<a"", 'class=""searchbox-body""', 'href=""../_variables/index.html"">Variable<\\/a>:', ""');"", ""document.writeln('<input"", 'type=""text""', 'size=10', 'value=""""', 'name=""varname""><br>\');', ""document.writeln('<a"", 'class=""searchbox-body""', 'href=""../_constants/index.html"">Constant<\\/a>:', ""');"", ""document.writeln('<input"", 'type=""text""', 'size=10', 'value=""""', 'name=""constname""><br>\');', ""document.writeln('<a"", 'class=""searchbox-body""', 'href=""../_tables/index.html"">Table<\\/a>:', ""');"", ""document.writeln('<input"", 'type=""text""', 'size=10', 'value=""""', 'name=""tablename""><br>\');', ""document.writeln('<input"", 'type=""submit""', 'class=""searchbox-button""', 'value=""Search"">\');', ""document.writeln('<\\/form>');"", ""document.writeln('<\\/td><\\/tr><\\/table>');"", ""document.writeln('<\\/td><\\/tr><\\/table>');"", '//', '-->', '</script>', '<div', 'id=""search-popup""', 'class=""searchpopup""><p', 'id=""searchpopup-title""', 'class=""searchpopup-title"">title</p><div', 'id=""searchpopup-body""', 'class=""searchpopup-body"">Body</div><p', 'class=""searchpopup-close""><a', 'href=""javascript:gwCloseActive()"">[close]</a></p></div>', '<h3>Variable', 'Cross', 'Reference</h3>', '<h2><a', 'href=""index.html#possible_keys"">$possible_keys</a></h2>', '<br><b>Referenced', '1', 'times:</b><ul>', '<li><a', 'href=""../application/libraries/Profiler.php.html"">/application/libraries/Profiler.php</a>', '->', '<a', 'href=""../application/libraries/Profiler.php.source.html#l233"">', 'line', '233</a></li>', '</ul>', '<!--', 'A', 'link', 'to', 'the', 'phpxref', 'site', 'in', 'your', 'customized', 'footer', 'file', 'is', 'appreciated', ';-)', '-->', '<br><hr>', '<table', 'width=""100%"">', '<tr><td>Generated:', 'Thu', 'Oct', '23', '18:57:41', '2014</td>', '<td', 'align=""right""><i>Cross-referenced', 'by', '<a', 'href=""http://phpxref.sourceforge.net/"">PHPXref', '0.7.1</a></i></td>', '</tr>', '</table>', '</body></html>', '```']",challenge not surrounded by ''': ,
"// This file was procedurally generated from the following sources:
// - src/dstr-binding/obj-ptrn-id-get-value-err.case
// - src/dstr-binding/error/cls-expr-async-gen-meth-static.template
/*---
description: Error thrown when accessing the corresponding property of the value object (static class expression async generator method)
esid: sec-class-definitions-runtime-semantics-evaluation
features: [async-iteration]
flags: [generated]
info: |
    ClassExpression : class BindingIdentifieropt ClassTail

    1. If BindingIdentifieropt is not present, let className be undefined.
    2. Else, let className be StringValue of BindingIdentifier.
    3. Let value be the result of ClassDefinitionEvaluation of ClassTail
       with argument className.
    [...]

    14.5.14 Runtime Semantics: ClassDefinitionEvaluation

    21. For each ClassElement m in order from methods
        a. If IsStatic of m is false, then
        b. Else,
           Let status be the result of performing PropertyDefinitionEvaluation
           for m with arguments F and false.
    [...]

    Runtime Semantics: PropertyDefinitionEvaluation

    AsyncGeneratorMethod :
        async [no LineTerminator here] * PropertyName ( UniqueFormalParameters )
            { AsyncGeneratorBody }

    1. Let propKey be the result of evaluating PropertyName.
    2. ReturnIfAbrupt(propKey).
    3. If the function code for this AsyncGeneratorMethod is strict mode code, let strict be true.
       Otherwise let strict be false.
    4. Let scope be the running execution context's LexicalEnvironment.
    5. Let closure be ! AsyncGeneratorFunctionCreate(Method, UniqueFormalParameters,
       AsyncGeneratorBody, scope, strict).
    [...]

    13.3.3.7 Runtime Semantics: KeyedBindingInitialization

    SingleNameBinding : BindingIdentifier Initializeropt

    [...]
    4. Let v be GetV(value, propertyName).
    5. ReturnIfAbrupt(v).
---*/
var poisonedProperty = Object.defineProperty({}, 'poisoned', {
  get: function() {
    throw new Test262Error();
  }
});


var C = class {
  static async *method({ poisoned }) {
    
  }
};

var method = C.method;

assert.throws(Test262Error, function() {
  method(poisonedProperty);
});
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//', 'This', 'file', 'was', 'procedurally', 'generated', 'from', 'the', 'following', 'sources:', '//', '-', 'src/dstr-binding/obj-ptrn-id-get-value-err.case', '//', '-', 'src/dstr-binding/error/cls-expr-async-gen-meth-static.template', '/*---', 'description:', 'Error', 'thrown', 'when', 'accessing', 'the', 'corresponding', 'property', 'of', 'the', 'value', 'object', '(static', 'class', 'expression', 'async', 'generator', 'method)', 'esid:', 'sec-class-definitions-runtime-semantics-evaluation', 'features:', '[async-iteration]', 'flags:', '[generated]', 'info:', '|', 'ClassExpression', ':', 'class', 'BindingIdentifieropt', 'ClassTail', '1.', 'If', 'BindingIdentifieropt', 'is', 'not', 'present,', 'let', 'className', 'be', 'undefined.', '2.', 'Else,', 'let', 'className', 'be', 'StringValue', 'of', 'BindingIdentifier.', '3.', 'Let', 'value', 'be', 'the', 'result', 'of', 'ClassDefinitionEvaluation', 'of', 'ClassTail', 'with', 'argument', 'className.', '[...]', '14.5.14', 'Runtime', 'Semantics:', 'ClassDefinitionEvaluation', '21.', 'For', 'each', 'ClassElement', 'm', 'in', 'order', 'from', 'methods', 'a.', 'If', 'IsStatic', 'of', 'm', 'is', 'false,', 'then', 'b.', 'Else,', 'Let', 'status', 'be', 'the', 'result', 'of', 'performing', 'PropertyDefinitionEvaluation', 'for', 'm', 'with', 'arguments', 'F', 'and', 'false.', '[...]', 'Runtime', 'Semantics:', 'PropertyDefinitionEvaluation', 'AsyncGeneratorMethod', ':', 'async', '[no', 'LineTerminator', 'here]', '*', 'PropertyName', '(', 'UniqueFormalParameters', ')', '{', 'AsyncGeneratorBody', '}', '1.', 'Let', 'propKey', 'be', 'the', 'result', 'of', 'evaluating', 'PropertyName.', '2.', 'ReturnIfAbrupt(propKey).', '3.', 'If', 'the', 'function', 'code', 'for', 'this', 'AsyncGeneratorMethod', 'is', 'strict', 'mode', 'code,', 'let', 'strict', 'be', 'true.', 'Otherwise', 'let', 'strict', 'be', 'false.', '4.', 'Let', 'scope', 'be', 'the', 'running', 'execution', ""context's"", 'LexicalEnvironment.', '5.', 'Let', 'closure', 'be', '!', 'AsyncGeneratorFunctionCreate(Method,', 'UniqueFormalParameters,', 'AsyncGeneratorBody,', 'scope,', 'strict).', '[...]', '13.3.3.7', 'Runtime', 'Semantics:', 'KeyedBindingInitialization', 'SingleNameBinding', ':', 'BindingIdentifier', 'Initializeropt', '[...]', '4.', 'Let', 'v', 'be', 'GetV(value,', 'propertyName).', '5.', 'ReturnIfAbrupt(v).', '---*/', 'var', 'poisonedProperty', '=', 'Object.defineProperty({},', ""'poisoned',"", '{', 'get:', 'function()', '{', 'throw', 'new', 'Test262Error();', '}', '});', 'var', 'C', '=', 'class', '{', 'static', 'async', '*method({', 'poisoned', '})', '{', '}', '};', 'var', 'method', '=', 'C.method;', 'assert.throws(Test262Error,', 'function()', '{', 'method(poisonedProperty);', '});', '```']",challenge not surrounded by ''': ,
"""""""
Annotations Tool Mixin
This file contains global variables and functions used in the various Annotation Tools.
""""""


from os.path import basename, splitext

from lxml import etree
from six.moves.html_parser import HTMLParser
from six.moves.urllib.parse import urlparse


def get_instructions(xmltree):
    """""" Removes <instructions> from the xmltree and returns them as a string, otherwise None. """"""
    instructions = xmltree.find('instructions')
    if instructions is not None:
        instructions.tag = 'div'
        xmltree.remove(instructions)
        return etree.tostring(instructions, encoding='unicode')
    return None


def get_extension(srcurl):
    """"""get the extension of a given url """"""
    if 'youtu' in srcurl:
        return 'video/youtube'
    else:
        disassembled = urlparse(srcurl)
        file_ext = splitext(basename(disassembled.path))[1]
        return 'video/' + file_ext.replace('.', '')


class MLStripper(HTMLParser):
    ""helper function for html_to_text below""
    def __init__(self):
        HTMLParser.__init__(self)
        self.reset()
        self.fed = []

    def handle_data(self, data):
        """"""takes the data in separate chunks""""""
        self.fed.append(data)

    def handle_entityref(self, name):
        """"""appends the reference to the body""""""
        self.fed.append('&%s;' % name)

    def get_data(self):
        """"""joins together the seperate chunks into one cohesive string""""""
        return ''.join(self.fed)


def html_to_text(html):
    ""strips the html tags off of the text to return plaintext""
    htmlstripper = MLStripper()
    htmlstripper.feed(html)
    return htmlstripper.get_data()
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```""""""', 'Annotations', 'Tool', 'Mixin', 'This', 'file', 'contains', 'global', 'variables', 'and', 'functions', 'used', 'in', 'the', 'various', 'Annotation', 'Tools.', '""""""', 'from', 'os.path', 'import', 'basename,', 'splitext', 'from', 'lxml', 'import', 'etree', 'from', 'six.moves.html_parser', 'import', 'HTMLParser', 'from', 'six.moves.urllib.parse', 'import', 'urlparse', 'def', 'get_instructions(xmltree):', '""""""', 'Removes', '<instructions>', 'from', 'the', 'xmltree', 'and', 'returns', 'them', 'as', 'a', 'string,', 'otherwise', 'None.', '""""""', 'instructions', '=', ""xmltree.find('instructions')"", 'if', 'instructions', 'is', 'not', 'None:', 'instructions.tag', '=', ""'div'"", 'xmltree.remove(instructions)', 'return', 'etree.tostring(instructions,', ""encoding='unicode')"", 'return', 'None', 'def', 'get_extension(srcurl):', '""""""get', 'the', 'extension', 'of', 'a', 'given', 'url', '""""""', 'if', ""'youtu'"", 'in', 'srcurl:', 'return', ""'video/youtube'"", 'else:', 'disassembled', '=', 'urlparse(srcurl)', 'file_ext', '=', 'splitext(basename(disassembled.path))[1]', 'return', ""'video/'"", '+', ""file_ext.replace('.',"", ""'')"", 'class', 'MLStripper(HTMLParser):', '""helper', 'function', 'for', 'html_to_text', 'below""', 'def', '__init__(self):', 'HTMLParser.__init__(self)', 'self.reset()', 'self.fed', '=', '[]', 'def', 'handle_data(self,', 'data):', '""""""takes', 'the', 'data', 'in', 'separate', 'chunks""""""', 'self.fed.append(data)', 'def', 'handle_entityref(self,', 'name):', '""""""appends', 'the', 'reference', 'to', 'the', 'body""""""', ""self.fed.append('&%s;'"", '%', 'name)', 'def', 'get_data(self):', '""""""joins', 'together', 'the', 'seperate', 'chunks', 'into', 'one', 'cohesive', 'string""""""', 'return', ""''.join(self.fed)"", 'def', 'html_to_text(html):', '""strips', 'the', 'html', 'tags', 'off', 'of', 'the', 'text', 'to', 'return', 'plaintext""', 'htmlstripper', '=', 'MLStripper()', 'htmlstripper.feed(html)', 'return', 'htmlstripper.get_data()', '```']",challenge not surrounded by ''': ,
"#!/usr/bin/env bash

if [[ ""${TRAVIS_OS_NAME}"" == ""osx"" && ""${GENERATE_DOC}"" == ""YES"" ]]; then
  gem install jazzy --no-document --quiet
fi
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/usr/bin/env', 'bash', 'if', '[[', '""${TRAVIS_OS_NAME}""', '==', '""osx""', '&&', '""${GENERATE_DOC}""', '==', '""YES""', ']];', 'then', 'gem', 'install', 'jazzy', '--no-document', '--quiet', 'fi', '```']",challenge not surrounded by ''': ,
"package ro.pub.cti.utils;

public class Constants {
	public static final Float DEFAULT_X = 0.06f;
	public static final Float DEFAULT_Y = 0.1f;
	public static final Float DEFAULT_TETHA = 0.0f;
	public static final Float DEFAULT_SPEED = 0.0f;
	public static final Integer DEFAULT_NR_STEPS = 1;
	public static final Integer LIST_LIMIT = 10;
	public static final Float DELTA_X = 0.1f;
	public static final Float DELTA_Y = 0.1f;
	public static final Double DELTA_TETHA = Math.toRadians(10.0);
	public static final Double PI = 14*Math.PI/16;
	public static final Double SCALE = 0.1;
	
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'ro.pub.cti.utils;', 'public', 'class', 'Constants', '{', 'public', 'static', 'final', 'Float', 'DEFAULT_X', '=', '0.06f;', 'public', 'static', 'final', 'Float', 'DEFAULT_Y', '=', '0.1f;', 'public', 'static', 'final', 'Float', 'DEFAULT_TETHA', '=', '0.0f;', 'public', 'static', 'final', 'Float', 'DEFAULT_SPEED', '=', '0.0f;', 'public', 'static', 'final', 'Integer', 'DEFAULT_NR_STEPS', '=', '1;', 'public', 'static', 'final', 'Integer', 'LIST_LIMIT', '=', '10;', 'public', 'static', 'final', 'Float', 'DELTA_X', '=', '0.1f;', 'public', 'static', 'final', 'Float', 'DELTA_Y', '=', '0.1f;', 'public', 'static', 'final', 'Double', 'DELTA_TETHA', '=', 'Math.toRadians(10.0);', 'public', 'static', 'final', 'Double', 'PI', '=', '14*Math.PI/16;', 'public', 'static', 'final', 'Double', 'SCALE', '=', '0.1;', '}', '```']",challenge not surrounded by ''': ,
"package pl.edu.uj.ii.smartdom.server.listeners;

/**
 * Created by Mohru on 27.08.2017.
 */

public interface OpenBlindSubscriberListener extends OnErrorListener {

    void onOpenBlindResult();
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'pl.edu.uj.ii.smartdom.server.listeners;', '/**', '*', 'Created', 'by', 'Mohru', 'on', '27.08.2017.', '*/', 'public', 'interface', 'OpenBlindSubscriberListener', 'extends', 'OnErrorListener', '{', 'void', 'onOpenBlindResult();', '}', '```']",challenge not surrounded by ''': ,
"package com.codigoparallevar.deliver;

/**
 * Interfaz para la implementación del callbacks genéricos.
 *
 */
public interface Callback{
    /**
     * Ejecución del callback.
     *
     */
    public abstract void call();
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.codigoparallevar.deliver;', '/**', '*', 'Interfaz', 'para', 'la', 'implementación', 'del', 'callbacks', 'genéricos.', '*', '*/', 'public', 'interface', 'Callback{', '/**', '*', 'Ejecución', 'del', 'callback.', '*', '*/', 'public', 'abstract', 'void', 'call();', '}', '```']",challenge not surrounded by ''': ,
"
export * from './builder';
export * from './model';
export * from './viewport';
export * from './view';
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```', 'export', '*', 'from', ""'./builder';"", 'export', '*', 'from', ""'./model';"", 'export', '*', 'from', ""'./viewport';"", 'export', '*', 'from', ""'./view';"", '```']",challenge not surrounded by ''': ,
"""""""Test xoinvader.__init__ module.""""""

import pytest

import xoinvader
from xoinvader.common import Settings
from xoinvader.utils import dotdict


# pylint: disable=missing-docstring
def test_init():
    Settings.system.test_section = dotdict(key=""value"")
    xoinvader.init()
    xoinvader.init({""test_section"": dotdict(another_key=""another-value"")})
    assert Settings.system.test_section.another_key == ""another-value""

    with pytest.raises(xoinvader.XOInitializationError):
        xoinvader.init(""bad-value"")

    with pytest.raises(xoinvader.XOInitializationError):
        xoinvader.init({""bad-key"": ""value""})
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```""""""Test', 'xoinvader.__init__', 'module.""""""', 'import', 'pytest', 'import', 'xoinvader', 'from', 'xoinvader.common', 'import', 'Settings', 'from', 'xoinvader.utils', 'import', 'dotdict', '#', 'pylint:', 'disable=missing-docstring', 'def', 'test_init():', 'Settings.system.test_section', '=', 'dotdict(key=""value"")', 'xoinvader.init()', 'xoinvader.init({""test_section"":', 'dotdict(another_key=""another-value"")})', 'assert', 'Settings.system.test_section.another_key', '==', '""another-value""', 'with', 'pytest.raises(xoinvader.XOInitializationError):', 'xoinvader.init(""bad-value"")', 'with', 'pytest.raises(xoinvader.XOInitializationError):', 'xoinvader.init({""bad-key"":', '""value""})', '```']",challenge not surrounded by ''': ,
"# AUTOGENERATED FILE
FROM balenalib/hummingboard2-ubuntu:xenial-run

# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

# Default to UTF-8 file.encoding
ENV LANG C.UTF-8

# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
RUN { \
		echo '#!/bin/sh'; \
		echo 'set -e'; \
		echo; \
		echo 'dirname ""$(dirname ""$(readlink -f ""$(which javac || which java)"")"")""'; \
	} > /usr/local/bin/docker-java-home \
	&& chmod +x /usr/local/bin/docker-java-home

# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
RUN ln -svT ""/usr/lib/jvm/java-8-openjdk-$(dpkg --print-architecture)"" /docker-java-home
ENV JAVA_HOME /docker-java-home

RUN set -ex; \
	\
# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
	if [ ! -d /usr/share/man/man1 ]; then \
		mkdir -p /usr/share/man/man1; \
	fi; \
	\
	apt-get update; \
	apt-get install -y --no-install-recommends \
		software-properties-common \
	; \
	add-apt-repository ppa:openjdk-r/ppa; \
	apt-get update; \
	apt-get install -y --no-install-recommends \
		openjdk-8-jre \
	; \
	rm -rf /var/lib/apt/lists/*; \
	\
# verify that ""docker-java-home"" returns what we expect
	[ ""$(readlink -f ""$JAVA_HOME"")"" = ""$(docker-java-home)"" ]; \
	\
# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
	update-alternatives --get-selections | awk -v home=""$(readlink -f ""$JAVA_HOME"")"" 'index($3, home) == 1 { $2 = ""manual""; print | ""update-alternatives --set-selections"" }'; \
# ... and verify that it actually worked for one of the alternatives we care about
	update-alternatives --query java | grep -q 'Status: manual'

CMD [""echo"",""'No CMD command was set in Dockerfile! Details about CMD command could be found in Dockerfile Guide section in our Docs. Here's the link: https://balena.io/docs""]

RUN [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \nArchitecture: ARM v7 \nOS: Ubuntu xenial \nVariant: run variant \nDefault variable(s): UDEV=off \nThe following software stack is preinstalled: \nOpenJDK v8-jre \nExtra features: \n- Easy way to install packages with `install_packages <package-name>` command \n- Run anywhere with cross-build feature  (for ARM only) \n- Keep the container idling with `balena-idle` command \n- Show base image details with `balena-info` command' > /.balena/messages/image-info

RUN echo '#!/bin/sh.real\nbalena-info\nrm -f /bin/sh\ncp /bin/sh.real /bin/sh\n/bin/sh ""$@""' > /bin/sh-shim \
	&& chmod +x /bin/sh-shim \
	&& cp /bin/sh /bin/sh.real \
	&& mv /bin/sh-shim /bin/sh","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', 'AUTOGENERATED', 'FILE', 'FROM', 'balenalib/hummingboard2-ubuntu:xenial-run', '#', 'A', 'few', 'reasons', 'for', 'installing', 'distribution-provided', 'OpenJDK:', '#', '#', '1.', 'Oracle.', 'Licensing', 'prevents', 'us', 'from', 'redistributing', 'the', 'official', 'JDK.', '#', '#', '2.', 'Compiling', 'OpenJDK', 'also', 'requires', 'the', 'JDK', 'to', 'be', 'installed,', 'and', 'it', 'gets', '#', 'really', 'hairy.', '#', '#', 'For', 'some', 'sample', 'build', 'times,', 'see', ""Debian's"", 'buildd', 'logs:', '#', 'https://buildd.debian.org/status/logs.php?pkg=openjdk-7', '#', 'Default', 'to', 'UTF-8', 'file.encoding', 'ENV', 'LANG', 'C.UTF-8', '#', 'add', 'a', 'simple', 'script', 'that', 'can', 'auto-detect', 'the', 'appropriate', 'JAVA_HOME', 'value', '#', 'based', 'on', 'whether', 'the', 'JDK', 'or', 'only', 'the', 'JRE', 'is', 'installed', 'RUN', '{', '\\', 'echo', ""'#!/bin/sh';"", '\\', 'echo', ""'set"", ""-e';"", '\\', 'echo;', '\\', 'echo', ""'dirname"", '""$(dirname', '""$(readlink', '-f', '""$(which', 'javac', '||', 'which', 'java)"")"")""\';', '\\', '}', '>', '/usr/local/bin/docker-java-home', '\\', '&&', 'chmod', '+x', '/usr/local/bin/docker-java-home', '#', 'do', 'some', 'fancy', 'footwork', 'to', 'create', 'a', 'JAVA_HOME', ""that's"", 'cross-architecture-safe', 'RUN', 'ln', '-svT', '""/usr/lib/jvm/java-8-openjdk-$(dpkg', '--print-architecture)""', '/docker-java-home', 'ENV', 'JAVA_HOME', '/docker-java-home', 'RUN', 'set', '-ex;', '\\', '\\', '#', 'deal', 'with', 'slim', 'variants', 'not', 'having', 'man', 'page', 'directories', '(which', 'causes', '""update-alternatives""', 'to', 'fail)', 'if', '[', '!', '-d', '/usr/share/man/man1', '];', 'then', '\\', 'mkdir', '-p', '/usr/share/man/man1;', '\\', 'fi;', '\\', '\\', 'apt-get', 'update;', '\\', 'apt-get', 'install', '-y', '--no-install-recommends', '\\', 'software-properties-common', '\\', ';', '\\', 'add-apt-repository', 'ppa:openjdk-r/ppa;', '\\', 'apt-get', 'update;', '\\', 'apt-get', 'install', '-y', '--no-install-recommends', '\\', 'openjdk-8-jre', '\\', ';', '\\', 'rm', '-rf', '/var/lib/apt/lists/*;', '\\', '\\', '#', 'verify', 'that', '""docker-java-home""', 'returns', 'what', 'we', 'expect', '[', '""$(readlink', '-f', '""$JAVA_HOME"")""', '=', '""$(docker-java-home)""', '];', '\\', '\\', '#', 'update-alternatives', 'so', 'that', 'future', 'installs', 'of', 'other', 'OpenJDK', 'versions', ""don't"", 'change', '/usr/bin/java', 'update-alternatives', '--get-selections', '|', 'awk', '-v', 'home=""$(readlink', '-f', '""$JAVA_HOME"")""', ""'index($3,"", 'home)', '==', '1', '{', '$2', '=', '""manual"";', 'print', '|', '""update-alternatives', '--set-selections""', ""}';"", '\\', '#', '...', 'and', 'verify', 'that', 'it', 'actually', 'worked', 'for', 'one', 'of', 'the', 'alternatives', 'we', 'care', 'about', 'update-alternatives', '--query', 'java', '|', 'grep', '-q', ""'Status:"", ""manual'"", 'CMD', '[""echo"",""\'No', 'CMD', 'command', 'was', 'set', 'in', 'Dockerfile!', 'Details', 'about', 'CMD', 'command', 'could', 'be', 'found', 'in', 'Dockerfile', 'Guide', 'section', 'in', 'our', 'Docs.', ""Here's"", 'the', 'link:', 'https://balena.io/docs""]', 'RUN', '[', '!', '-d', '/.balena/messages', ']', '&&', 'mkdir', '-p', '/.balena/messages;', 'echo', ""'Here"", 'are', 'a', 'few', 'details', 'about', 'this', 'Docker', 'image', '(For', 'more', 'information', 'please', 'visit', 'https://www.balena.io/docs/reference/base-images/base-images/):', '\\nArchitecture:', 'ARM', 'v7', '\\nOS:', 'Ubuntu', 'xenial', '\\nVariant:', 'run', 'variant', '\\nDefault', 'variable(s):', 'UDEV=off', '\\nThe', 'following', 'software', 'stack', 'is', 'preinstalled:', '\\nOpenJDK', 'v8-jre', '\\nExtra', 'features:', '\\n-', 'Easy', 'way', 'to', 'install', 'packages', 'with', '`install_packages', '<package-name>`', 'command', '\\n-', 'Run', 'anywhere', 'with', 'cross-build', 'feature', '(for', 'ARM', 'only)', '\\n-', 'Keep', 'the', 'container', 'idling', 'with', '`balena-idle`', 'command', '\\n-', 'Show', 'base', 'image', 'details', 'with', '`balena-info`', ""command'"", '>', '/.balena/messages/image-info', 'RUN', 'echo', ""'#!/bin/sh.real\\nbalena-info\\nrm"", '-f', '/bin/sh\\ncp', '/bin/sh.real', '/bin/sh\\n/bin/sh', '""$@""\'', '>', '/bin/sh-shim', '\\', '&&', 'chmod', '+x', '/bin/sh-shim', '\\', '&&', 'cp', '/bin/sh', '/bin/sh.real', '\\', '&&', 'mv', '/bin/sh-shim', '/bin/sh```']",challenge not surrounded by ''': ,
"{% extends ""site_base.html"" %}

{% block title %}Server error (500){% endblock %}

{% block body_base %}
<h1>Server Error <em>(500)</em></h1>
<p>There's been an error. It's been reported to the site administrators via e-mail and will be fixed. Thanks for your patience.</p>

{% endblock %}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```{%', 'extends', '""site_base.html""', '%}', '{%', 'block', 'title', '%}Server', 'error', '(500){%', 'endblock', '%}', '{%', 'block', 'body_base', '%}', '<h1>Server', 'Error', '<em>(500)</em></h1>', ""<p>There's"", 'been', 'an', 'error.', ""It's"", 'been', 'reported', 'to', 'the', 'site', 'administrators', 'via', 'e-mail', 'and', 'will', 'be', 'fixed.', 'Thanks', 'for', 'your', 'patience.</p>', '{%', 'endblock', '%}', '```']",challenge not surrounded by ''': ,
"# bash completion for tuned-adm

_tuned_adm()
{
	local commands=""active list off profile recommend""
	local current=""${COMP_WORDS[$COMP_CWORD]}""
	local previous=""${COMP_WORDS[$COMP_CWORD-1]}""

	if [[ $COMP_CWORD -eq 1 ]]; then
		COMPREPLY=( $(compgen -W ""$commands"" -- ""$current"" ) )
	elif [[ $COMP_CWORD -eq 2 && ""$previous"" == ""profile"" ]]; then
		COMPREPLY=( $(compgen -W ""$(command find /usr/lib/tuned /etc/tuned -mindepth 1 -maxdepth 1 -type d -printf ""%f\n"")"" -- ""$current"" ) )
	else
		COMPREPLY=()
	fi

	return 0
} &&
complete -F _tuned_adm tuned-adm
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', 'bash', 'completion', 'for', 'tuned-adm', '_tuned_adm()', '{', 'local', 'commands=""active', 'list', 'off', 'profile', 'recommend""', 'local', 'current=""${COMP_WORDS[$COMP_CWORD]}""', 'local', 'previous=""${COMP_WORDS[$COMP_CWORD-1]}""', 'if', '[[', '$COMP_CWORD', '-eq', '1', ']];', 'then', 'COMPREPLY=(', '$(compgen', '-W', '""$commands""', '--', '""$current""', ')', ')', 'elif', '[[', '$COMP_CWORD', '-eq', '2', '&&', '""$previous""', '==', '""profile""', ']];', 'then', 'COMPREPLY=(', '$(compgen', '-W', '""$(command', 'find', '/usr/lib/tuned', '/etc/tuned', '-mindepth', '1', '-maxdepth', '1', '-type', 'd', '-printf', '""%f\\n"")""', '--', '""$current""', ')', ')', 'else', 'COMPREPLY=()', 'fi', 'return', '0', '}', '&&', 'complete', '-F', '_tuned_adm', 'tuned-adm', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright 2004-2009 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.compass.core.test.dynamicproperty.valuearray;

import org.compass.core.CompassSession;
import org.compass.core.test.AbstractTestCase;

/**
 * @author kimchy
 */
public class ValueArrayDynamicPropertyTests extends AbstractTestCase {

    @Override
    protected String[] getMappings() {
        return new String[]{""dynamicproperty/valuearray/mapping.cpm.xml""};
    }

    public void testValueArrayDynamicProperty() {
        CompassSession session = openSession();

        A a = new A();
        a.id = 1;
        a.dyna = new Dyna(2, 5, 6, 7);

        session.save(a);

        assertEquals(1, session.find(""002:0005"").length());
        assertEquals(1, session.find(""002:0006"").length());
        assertEquals(1, session.find(""002:0007"").length());

        session.close();
    }
}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '2004-2009', 'the', 'original', 'author', 'or', 'authors.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'org.compass.core.test.dynamicproperty.valuearray;', 'import', 'org.compass.core.CompassSession;', 'import', 'org.compass.core.test.AbstractTestCase;', '/**', '*', '@author', 'kimchy', '*/', 'public', 'class', 'ValueArrayDynamicPropertyTests', 'extends', 'AbstractTestCase', '{', '@Override', 'protected', 'String[]', 'getMappings()', '{', 'return', 'new', 'String[]{""dynamicproperty/valuearray/mapping.cpm.xml""};', '}', 'public', 'void', 'testValueArrayDynamicProperty()', '{', 'CompassSession', 'session', '=', 'openSession();', 'A', 'a', '=', 'new', 'A();', 'a.id', '=', '1;', 'a.dyna', '=', 'new', 'Dyna(2,', '5,', '6,', '7);', 'session.save(a);', 'assertEquals(1,', 'session.find(""002:0005"").length());', 'assertEquals(1,', 'session.find(""002:0006"").length());', 'assertEquals(1,', 'session.find(""002:0007"").length());', 'session.close();', '}', '}```']",challenge not surrounded by ''': ,
"/*
 * Copyright (c) 2001-2010, Inversoft Inc., All Rights Reserved
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the specific
 * language governing permissions and limitations under the License.
 */
package org.primeframework.mvc.action.result;

import org.primeframework.mvc.workflow.Workflow;

/**
 * This interface defines how results are invoked based on the result from the Actions or the URI.
 *
 * @author Brian Pontarelli
 */
public interface ResultInvocationWorkflow extends Workflow {
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '(c)', '2001-2010,', 'Inversoft', 'Inc.,', 'All', 'Rights', 'Reserved', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', '*', 'software', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '*', '""AS', 'IS""', 'BASIS,', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', '*', 'either', 'express', 'or', 'implied.', 'See', 'the', 'License', 'for', 'the', 'specific', '*', 'language', 'governing', 'permissions', 'and', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'org.primeframework.mvc.action.result;', 'import', 'org.primeframework.mvc.workflow.Workflow;', '/**', '*', 'This', 'interface', 'defines', 'how', 'results', 'are', 'invoked', 'based', 'on', 'the', 'result', 'from', 'the', 'Actions', 'or', 'the', 'URI.', '*', '*', '@author', 'Brian', 'Pontarelli', '*/', 'public', 'interface', 'ResultInvocationWorkflow', 'extends', 'Workflow', '{', '}', '```']",challenge not surrounded by ''': ,
"{% extends ""eighth/admin/eighth_admin_page_base.html"" %}

{% block admin_main %}
    <h4>Are you sure you want to unschedule this activity?</h4>
    <br>
    <br>
    <form action="""" method=""post"">
        {% csrf_token %}
        <a class=""button"" href=""{% url 'eighth_admin_dashboard' %}"">Cancel</a>
        <input type=""submit"" value=""Unschedule"">
    </form>
{% endblock %}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```{%', 'extends', '""eighth/admin/eighth_admin_page_base.html""', '%}', '{%', 'block', 'admin_main', '%}', '<h4>Are', 'you', 'sure', 'you', 'want', 'to', 'unschedule', 'this', 'activity?</h4>', '<br>', '<br>', '<form', 'action=""""', 'method=""post"">', '{%', 'csrf_token', '%}', '<a', 'class=""button""', 'href=""{%', 'url', ""'eighth_admin_dashboard'"", '%}"">Cancel</a>', '<input', 'type=""submit""', 'value=""Unschedule"">', '</form>', '{%', 'endblock', '%}', '```']",challenge not surrounded by ''': ,
"package com.xianyue.basictype.concurrent;

import java.util.Random;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.atomic.AtomicInteger;

/**
 * @author Xianyue
 */
public class CASLock {
    private AtomicInteger reflashFlag = new AtomicInteger(1);
    AtomicInteger num = new AtomicInteger(0);
    CountDownLatch latch = new CountDownLatch(200);
    Random random = new Random();

    public void reflash() throws InterruptedException {
        int flag = reflashFlag.get();
        Thread.sleep(100);
        if (reflashFlag.compareAndSet(flag, flag + 1)) {
            num.getAndIncrement();
            System.out.printf(""i am in. flag is %d, now is %d "", flag, reflashFlag.get());
            System.out.println();
        } else {
            System.out.printf(""failed. falge is %d, now is %d"", flag, reflashFlag.get());
            System.out.println();
        }
    }


    public static void main(String[] args) throws InterruptedException {
        CASLock lock = new CASLock();
        ExecutorService service = Executors.newFixedThreadPool(4);
        for (int i = 0; i < 200; i++) {
            service.execute(new Runnable() {
                @Override
                public void run() {
                    try {
                        lock.reflash();
                        lock.latch.countDown();
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                }
            });
        }
        lock.latch.await();
        System.out.println(""--------- "" + lock.num.get());
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.xianyue.basictype.concurrent;', 'import', 'java.util.Random;', 'import', 'java.util.concurrent.CountDownLatch;', 'import', 'java.util.concurrent.ExecutorService;', 'import', 'java.util.concurrent.Executors;', 'import', 'java.util.concurrent.atomic.AtomicInteger;', '/**', '*', '@author', 'Xianyue', '*/', 'public', 'class', 'CASLock', '{', 'private', 'AtomicInteger', 'reflashFlag', '=', 'new', 'AtomicInteger(1);', 'AtomicInteger', 'num', '=', 'new', 'AtomicInteger(0);', 'CountDownLatch', 'latch', '=', 'new', 'CountDownLatch(200);', 'Random', 'random', '=', 'new', 'Random();', 'public', 'void', 'reflash()', 'throws', 'InterruptedException', '{', 'int', 'flag', '=', 'reflashFlag.get();', 'Thread.sleep(100);', 'if', '(reflashFlag.compareAndSet(flag,', 'flag', '+', '1))', '{', 'num.getAndIncrement();', 'System.out.printf(""i', 'am', 'in.', 'flag', 'is', '%d,', 'now', 'is', '%d', '"",', 'flag,', 'reflashFlag.get());', 'System.out.println();', '}', 'else', '{', 'System.out.printf(""failed.', 'falge', 'is', '%d,', 'now', 'is', '%d"",', 'flag,', 'reflashFlag.get());', 'System.out.println();', '}', '}', 'public', 'static', 'void', 'main(String[]', 'args)', 'throws', 'InterruptedException', '{', 'CASLock', 'lock', '=', 'new', 'CASLock();', 'ExecutorService', 'service', '=', 'Executors.newFixedThreadPool(4);', 'for', '(int', 'i', '=', '0;', 'i', '<', '200;', 'i++)', '{', 'service.execute(new', 'Runnable()', '{', '@Override', 'public', 'void', 'run()', '{', 'try', '{', 'lock.reflash();', 'lock.latch.countDown();', '}', 'catch', '(InterruptedException', 'e)', '{', 'e.printStackTrace();', '}', '}', '});', '}', 'lock.latch.await();', 'System.out.println(""---------', '""', '+', 'lock.num.get());', '}', '}', '```']",challenge not surrounded by ''': ,
"-- Evergreen DB patch 0642.data.acq-worksheet-hold-count.sql
BEGIN;

-- check whether patch can be applied
SELECT evergreen.upgrade_deps_block_check('0642', :eg_version);

UPDATE action_trigger.event_definition SET template = 
$$
[%- USE date -%]
[%- SET li = target; -%]
<div class=""wrapper"">
    <div class=""summary"" style='font-size:110%; font-weight:bold;'>

        <div>Title: [% helpers.get_li_attr(""title"", """", li.attributes) %]</div>
        <div>Author: [% helpers.get_li_attr(""author"", """", li.attributes) %]</div>
        <div class=""count"">Item Count: [% li.lineitem_details.size %]</div>
        <div class=""lineid"">Lineitem ID: [% li.id %]</div>
        <div>Open Holds: [% helpers.bre_open_hold_count(li.eg_bib_id) %]</div>

        [% IF li.distribution_formulas.size > 0 %]
            [% SET forms = [] %]
            [% FOREACH form IN li.distribution_formulas; forms.push(form.formula.name); END %]
            <div>Distribution Formulas: [% forms.join(',') %]</div>
        [% END %]

        [% IF li.lineitem_notes.size > 0 %]
            Lineitem Notes:
            <ul>
                [%- FOR note IN li.lineitem_notes -%]
                    <li>
                    [% IF note.alert_text %]
                        [% note.alert_text.code -%] 
                        [% IF note.value -%]
                            : [% note.value %]
                        [% END %]
                    [% ELSE %]
                        [% note.value -%] 
                    [% END %]
                    </li>
                [% END %]
            </ul>
        [% END %]
    </div>
    <br/>
    <table>
        <thead>
            <tr>
                <th>Branch</th>
                <th>Barcode</th>
                <th>Call Number</th>
                <th>Fund</th>
                <th>Shelving Location</th>
                <th>Recd.</th>
                <th>Notes</th>
            </tr>
        </thead>
        <tbody>
        [% FOREACH detail IN li.lineitem_details.sort('owning_lib') %]
            [% 
                IF detail.eg_copy_id;
                    SET copy = detail.eg_copy_id;
                    SET cn_label = copy.call_number.label;
                ELSE; 
                    SET copy = detail; 
                    SET cn_label = detail.cn_label;
                END 
            %]
            <tr>
                <!-- acq.lineitem_detail.id = [%- detail.id -%] -->
                <td style='padding:5px;'>[% detail.owning_lib.shortname %]</td>
                <td style='padding:5px;'>[% IF copy.barcode   %]<span class=""barcode""  >[% detail.barcode   %]</span>[% END %]</td>
                <td style='padding:5px;'>[% IF cn_label %]<span class=""cn_label"" >[% cn_label  %]</span>[% END %]</td>
                <td style='padding:5px;'>[% IF detail.fund %]<span class=""fund"">[% detail.fund.code %] ([% detail.fund.year %])</span>[% END %]</td>
                <td style='padding:5px;'>[% copy.location.name %]</td>
                <td style='padding:5px;'>[% IF detail.recv_time %]<span class=""recv_time"">[% detail.recv_time %]</span>[% END %]</td>
                <td style='padding:5px;'>[% detail.note %]</td>
            </tr>
        [% END %]
        </tbody>
    </table>
</div>
$$
WHERE id = 14;

COMMIT;
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```--', 'Evergreen', 'DB', 'patch', '0642.data.acq-worksheet-hold-count.sql', 'BEGIN;', '--', 'check', 'whether', 'patch', 'can', 'be', 'applied', 'SELECT', ""evergreen.upgrade_deps_block_check('0642',"", ':eg_version);', 'UPDATE', 'action_trigger.event_definition', 'SET', 'template', '=', '$$', '[%-', 'USE', 'date', '-%]', '[%-', 'SET', 'li', '=', 'target;', '-%]', '<div', 'class=""wrapper"">', '<div', 'class=""summary""', ""style='font-size:110%;"", ""font-weight:bold;'>"", '<div>Title:', '[%', 'helpers.get_li_attr(""title"",', '"""",', 'li.attributes)', '%]</div>', '<div>Author:', '[%', 'helpers.get_li_attr(""author"",', '"""",', 'li.attributes)', '%]</div>', '<div', 'class=""count"">Item', 'Count:', '[%', 'li.lineitem_details.size', '%]</div>', '<div', 'class=""lineid"">Lineitem', 'ID:', '[%', 'li.id', '%]</div>', '<div>Open', 'Holds:', '[%', 'helpers.bre_open_hold_count(li.eg_bib_id)', '%]</div>', '[%', 'IF', 'li.distribution_formulas.size', '>', '0', '%]', '[%', 'SET', 'forms', '=', '[]', '%]', '[%', 'FOREACH', 'form', 'IN', 'li.distribution_formulas;', 'forms.push(form.formula.name);', 'END', '%]', '<div>Distribution', 'Formulas:', '[%', ""forms.join(',')"", '%]</div>', '[%', 'END', '%]', '[%', 'IF', 'li.lineitem_notes.size', '>', '0', '%]', 'Lineitem', 'Notes:', '<ul>', '[%-', 'FOR', 'note', 'IN', 'li.lineitem_notes', '-%]', '<li>', '[%', 'IF', 'note.alert_text', '%]', '[%', 'note.alert_text.code', '-%]', '[%', 'IF', 'note.value', '-%]', ':', '[%', 'note.value', '%]', '[%', 'END', '%]', '[%', 'ELSE', '%]', '[%', 'note.value', '-%]', '[%', 'END', '%]', '</li>', '[%', 'END', '%]', '</ul>', '[%', 'END', '%]', '</div>', '<br/>', '<table>', '<thead>', '<tr>', '<th>Branch</th>', '<th>Barcode</th>', '<th>Call', 'Number</th>', '<th>Fund</th>', '<th>Shelving', 'Location</th>', '<th>Recd.</th>', '<th>Notes</th>', '</tr>', '</thead>', '<tbody>', '[%', 'FOREACH', 'detail', 'IN', ""li.lineitem_details.sort('owning_lib')"", '%]', '[%', 'IF', 'detail.eg_copy_id;', 'SET', 'copy', '=', 'detail.eg_copy_id;', 'SET', 'cn_label', '=', 'copy.call_number.label;', 'ELSE;', 'SET', 'copy', '=', 'detail;', 'SET', 'cn_label', '=', 'detail.cn_label;', 'END', '%]', '<tr>', '<!--', 'acq.lineitem_detail.id', '=', '[%-', 'detail.id', '-%]', '-->', '<td', ""style='padding:5px;'>[%"", 'detail.owning_lib.shortname', '%]</td>', '<td', ""style='padding:5px;'>[%"", 'IF', 'copy.barcode', '%]<span', 'class=""barcode""', '>[%', 'detail.barcode', '%]</span>[%', 'END', '%]</td>', '<td', ""style='padding:5px;'>[%"", 'IF', 'cn_label', '%]<span', 'class=""cn_label""', '>[%', 'cn_label', '%]</span>[%', 'END', '%]</td>', '<td', ""style='padding:5px;'>[%"", 'IF', 'detail.fund', '%]<span', 'class=""fund"">[%', 'detail.fund.code', '%]', '([%', 'detail.fund.year', '%])</span>[%', 'END', '%]</td>', '<td', ""style='padding:5px;'>[%"", 'copy.location.name', '%]</td>', '<td', ""style='padding:5px;'>[%"", 'IF', 'detail.recv_time', '%]<span', 'class=""recv_time"">[%', 'detail.recv_time', '%]</span>[%', 'END', '%]</td>', '<td', ""style='padding:5px;'>[%"", 'detail.note', '%]</td>', '</tr>', '[%', 'END', '%]', '</tbody>', '</table>', '</div>', '$$', 'WHERE', 'id', '=', '14;', 'COMMIT;', '```']",challenge not surrounded by ''': ,
"%embed ""include/design.tmpl"";

<h1>Time</h1>

<form action="""" method=""post"">
<input type=""hidden"" name=""do"" value=""Time.advance"" />
<input type=""hidden"" name=""delta"" value=""1m"" />
<button type=""submit"" name="""">+ 1 minute</button>
</form>

<hr />

<form action="""" method=""post"">
<input type=""hidden"" name=""do"" value=""Time.advance"" />
<input type=""hidden"" name=""delta"" value=""1h"" />
<button type=""submit"" name="""">+ 1 hour</button>
</form>

<hr />

<form action="""" method=""post"">
<input type=""hidden"" name=""do"" value=""Time.advance"" />
<input type=""hidden"" name=""delta"" value=""1d"" />
<button type=""submit"" name="""">+ 1 day</button>
</form>

<hr />

<form action="""" method=""post"">
<input type=""hidden"" name=""do"" value=""Time.advance"" />
<input type=""text"" name=""delta"" value="""" />
<button type=""submit"" name="""">Advance Time</button>
</form>

<hr />

<form action="""" method=""post"">
<input type=""hidden"" name=""do"" value=""Time.setSpeed"" />
<input type=""text"" name=""speed"" value="""" />
<button type=""submit"" name="""">Set Speed</button>
</form>


","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```%embed', '""include/design.tmpl"";', '<h1>Time</h1>', '<form', 'action=""""', 'method=""post"">', '<input', 'type=""hidden""', 'name=""do""', 'value=""Time.advance""', '/>', '<input', 'type=""hidden""', 'name=""delta""', 'value=""1m""', '/>', '<button', 'type=""submit""', 'name="""">+', '1', 'minute</button>', '</form>', '<hr', '/>', '<form', 'action=""""', 'method=""post"">', '<input', 'type=""hidden""', 'name=""do""', 'value=""Time.advance""', '/>', '<input', 'type=""hidden""', 'name=""delta""', 'value=""1h""', '/>', '<button', 'type=""submit""', 'name="""">+', '1', 'hour</button>', '</form>', '<hr', '/>', '<form', 'action=""""', 'method=""post"">', '<input', 'type=""hidden""', 'name=""do""', 'value=""Time.advance""', '/>', '<input', 'type=""hidden""', 'name=""delta""', 'value=""1d""', '/>', '<button', 'type=""submit""', 'name="""">+', '1', 'day</button>', '</form>', '<hr', '/>', '<form', 'action=""""', 'method=""post"">', '<input', 'type=""hidden""', 'name=""do""', 'value=""Time.advance""', '/>', '<input', 'type=""text""', 'name=""delta""', 'value=""""', '/>', '<button', 'type=""submit""', 'name="""">Advance', 'Time</button>', '</form>', '<hr', '/>', '<form', 'action=""""', 'method=""post"">', '<input', 'type=""hidden""', 'name=""do""', 'value=""Time.setSpeed""', '/>', '<input', 'type=""text""', 'name=""speed""', 'value=""""', '/>', '<button', 'type=""submit""', 'name="""">Set', 'Speed</button>', '</form>', '```']",challenge not surrounded by ''': ,
"#include ""nssm.h""

/* See if we were launched from a console window. */
bool check_console() {
  /* If we're running in a service context there will be no console window. */
  HWND console = GetConsoleWindow();
  if (! console) return false;

  unsigned long pid;
  if (! GetWindowThreadProcessId(console, &pid)) return false;

  /*
    If the process associated with the console window handle is the same as
    this process, we were not launched from an existing console.  The user
    probably double-clicked our executable.
  */
  if (GetCurrentProcessId() != pid) return true;

  /* We close our new console so that subsequent messages appear in a popup. */
  FreeConsole();
  return false;
}

void alloc_console(nssm_service_t *service) {
  if (service->no_console) return;

  AllocConsole();
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#include', '""nssm.h""', '/*', 'See', 'if', 'we', 'were', 'launched', 'from', 'a', 'console', 'window.', '*/', 'bool', 'check_console()', '{', '/*', 'If', ""we're"", 'running', 'in', 'a', 'service', 'context', 'there', 'will', 'be', 'no', 'console', 'window.', '*/', 'HWND', 'console', '=', 'GetConsoleWindow();', 'if', '(!', 'console)', 'return', 'false;', 'unsigned', 'long', 'pid;', 'if', '(!', 'GetWindowThreadProcessId(console,', '&pid))', 'return', 'false;', '/*', 'If', 'the', 'process', 'associated', 'with', 'the', 'console', 'window', 'handle', 'is', 'the', 'same', 'as', 'this', 'process,', 'we', 'were', 'not', 'launched', 'from', 'an', 'existing', 'console.', 'The', 'user', 'probably', 'double-clicked', 'our', 'executable.', '*/', 'if', '(GetCurrentProcessId()', '!=', 'pid)', 'return', 'true;', '/*', 'We', 'close', 'our', 'new', 'console', 'so', 'that', 'subsequent', 'messages', 'appear', 'in', 'a', 'popup.', '*/', 'FreeConsole();', 'return', 'false;', '}', 'void', 'alloc_console(nssm_service_t', '*service)', '{', 'if', '(service->no_console)', 'return;', 'AllocConsole();', '}', '```']",challenge not surrounded by ''': ,
"/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * ""License""); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

//
// This source code implements specifications defined by the Java
// Community Process. In order to remain compliant with the specification
// DO NOT add / change / or delete method signatures!
//

package javax.security.jacc;

import java.security.Permission;
import java.security.PermissionCollection;

/**
 * @version $Rev$ $Date$
 */
public interface PolicyConfiguration {

    public String getContextID() throws PolicyContextException;
    
    public void addToRole(String roleName, PermissionCollection permissions) throws PolicyContextException;
    
    public void addToRole(String roleName, Permission permission) throws PolicyContextException;
    
    public void addToUncheckedPolicy(PermissionCollection permissions) throws PolicyContextException;
    
    public void addToUncheckedPolicy(Permission permission) throws PolicyContextException;
    
    public void addToExcludedPolicy(PermissionCollection permissions) throws PolicyContextException;
    
    public void addToExcludedPolicy(Permission permission) throws PolicyContextException;
    
    public void removeRole(String roleName) throws PolicyContextException;
    
    public void removeUncheckedPolicy() throws PolicyContextException;
    
    public void removeExcludedPolicy() throws PolicyContextException;
    
    public void linkConfiguration(PolicyConfiguration link) throws PolicyContextException;
    
    public void delete() throws PolicyContextException;
    
    public void commit() throws PolicyContextException;
    
    public boolean inService() throws PolicyContextException;
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Licensed', 'to', 'the', 'Apache', 'Software', 'Foundation', '(ASF)', 'under', 'one', '*', 'or', 'more', 'contributor', 'license', 'agreements.', 'See', 'the', 'NOTICE', 'file', '*', 'distributed', 'with', 'this', 'work', 'for', 'additional', 'information', '*', 'regarding', 'copyright', 'ownership.', 'The', 'ASF', 'licenses', 'this', 'file', '*', 'to', 'you', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '*', '""License"");', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', '*', 'with', 'the', 'License.', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', '*', 'software', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '*', '""AS', 'IS""', 'BASIS,', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', '*', 'KIND,', 'either', 'express', 'or', 'implied.', 'See', 'the', 'License', 'for', 'the', '*', 'specific', 'language', 'governing', 'permissions', 'and', 'limitations', '*', 'under', 'the', 'License.', '*/', '//', '//', 'This', 'source', 'code', 'implements', 'specifications', 'defined', 'by', 'the', 'Java', '//', 'Community', 'Process.', 'In', 'order', 'to', 'remain', 'compliant', 'with', 'the', 'specification', '//', 'DO', 'NOT', 'add', '/', 'change', '/', 'or', 'delete', 'method', 'signatures!', '//', 'package', 'javax.security.jacc;', 'import', 'java.security.Permission;', 'import', 'java.security.PermissionCollection;', '/**', '*', '@version', '$Rev$', '$Date$', '*/', 'public', 'interface', 'PolicyConfiguration', '{', 'public', 'String', 'getContextID()', 'throws', 'PolicyContextException;', 'public', 'void', 'addToRole(String', 'roleName,', 'PermissionCollection', 'permissions)', 'throws', 'PolicyContextException;', 'public', 'void', 'addToRole(String', 'roleName,', 'Permission', 'permission)', 'throws', 'PolicyContextException;', 'public', 'void', 'addToUncheckedPolicy(PermissionCollection', 'permissions)', 'throws', 'PolicyContextException;', 'public', 'void', 'addToUncheckedPolicy(Permission', 'permission)', 'throws', 'PolicyContextException;', 'public', 'void', 'addToExcludedPolicy(PermissionCollection', 'permissions)', 'throws', 'PolicyContextException;', 'public', 'void', 'addToExcludedPolicy(Permission', 'permission)', 'throws', 'PolicyContextException;', 'public', 'void', 'removeRole(String', 'roleName)', 'throws', 'PolicyContextException;', 'public', 'void', 'removeUncheckedPolicy()', 'throws', 'PolicyContextException;', 'public', 'void', 'removeExcludedPolicy()', 'throws', 'PolicyContextException;', 'public', 'void', 'linkConfiguration(PolicyConfiguration', 'link)', 'throws', 'PolicyContextException;', 'public', 'void', 'delete()', 'throws', 'PolicyContextException;', 'public', 'void', 'commit()', 'throws', 'PolicyContextException;', 'public', 'boolean', 'inService()', 'throws', 'PolicyContextException;', '}', '```']",challenge not surrounded by ''': ,
"	</head>
	<body >
		<div class=""main-wrap"">
			<div class=""slidey"" id=""tray"">
				<div class=""wrap"">
					<form id=""search"" action=""/search"" method=""get"">
						<label for=""q"">Search my blog:</label>
						{% set search_term = search_term if search_term is defined else '' %}
						<input type=""search"" id=""q"" name=""q"" placeholder=""To search, type and hit enter&hellip;"" value=""{{ search_term }}"">
					</form>

					<aside>
						<b>Categories</b>
						<ul>
							{% for c in site_categories() %}
							<li>
								<a href=""{{c.category_url()}}"" title=""{{c.description}}"">
									{{c.title}} <span> {{c.category_count()}}</span>
								</a>
							</li>
							{% endfor %}
						</ul>
					</aside>
				</div>
			</div>

			<header id=""top"">
				<a id=""logo"" href=""{{url_for('site.page')}}"">{{site.sitename()}}</a>
				{% set menus = menus() %}
				{% if menus %}
				{% macro menu_active(menu) %}
						{% if page is defined  and page.slug == menu.slug and page.pid == menu.pid %}
							class=""active""
						{% endif %}
				{% endmacro %}
				<nav id=""main"" role=""navigation"">
					<ul>	
						{% for menu in menus %}
						<li {{menu_active(menu)}}>
							<a href=""{{menu.url()}}"" title=""{{menu.title}}"">{{menu.name}}</a>
						</li>
						{% endfor %}

						<li class=""tray"">
							<a href=""#tray"" class=""linky""><img src=""{{url_for('static', filename='theme/default/img/categories.png')}}"" alt=""Categories"" title=""View my posts by category""></a>
						</li>
					</ul>
				</nav>
				{% endif %}
			</header>","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```', '</head>', '<body', '>', '<div', 'class=""main-wrap"">', '<div', 'class=""slidey""', 'id=""tray"">', '<div', 'class=""wrap"">', '<form', 'id=""search""', 'action=""/search""', 'method=""get"">', '<label', 'for=""q"">Search', 'my', 'blog:</label>', '{%', 'set', 'search_term', '=', 'search_term', 'if', 'search_term', 'is', 'defined', 'else', ""''"", '%}', '<input', 'type=""search""', 'id=""q""', 'name=""q""', 'placeholder=""To', 'search,', 'type', 'and', 'hit', 'enter&hellip;""', 'value=""{{', 'search_term', '}}"">', '</form>', '<aside>', '<b>Categories</b>', '<ul>', '{%', 'for', 'c', 'in', 'site_categories()', '%}', '<li>', '<a', 'href=""{{c.category_url()}}""', 'title=""{{c.description}}"">', '{{c.title}}', '<span>', '{{c.category_count()}}</span>', '</a>', '</li>', '{%', 'endfor', '%}', '</ul>', '</aside>', '</div>', '</div>', '<header', 'id=""top"">', '<a', 'id=""logo""', 'href=""{{url_for(\'site.page\')}}"">{{site.sitename()}}</a>', '{%', 'set', 'menus', '=', 'menus()', '%}', '{%', 'if', 'menus', '%}', '{%', 'macro', 'menu_active(menu)', '%}', '{%', 'if', 'page', 'is', 'defined', 'and', 'page.slug', '==', 'menu.slug', 'and', 'page.pid', '==', 'menu.pid', '%}', 'class=""active""', '{%', 'endif', '%}', '{%', 'endmacro', '%}', '<nav', 'id=""main""', 'role=""navigation"">', '<ul>', '{%', 'for', 'menu', 'in', 'menus', '%}', '<li', '{{menu_active(menu)}}>', '<a', 'href=""{{menu.url()}}""', 'title=""{{menu.title}}"">{{menu.name}}</a>', '</li>', '{%', 'endfor', '%}', '<li', 'class=""tray"">', '<a', 'href=""#tray""', 'class=""linky""><img', 'src=""{{url_for(\'static\',', 'filename=\'theme/default/img/categories.png\')}}""', 'alt=""Categories""', 'title=""View', 'my', 'posts', 'by', 'category""></a>', '</li>', '</ul>', '</nav>', '{%', 'endif', '%}', '</header>```']",challenge not surrounded by ''': ,
"package com.azoft.events.sample;

import android.app.Fragment;
import android.os.Bundle;
import android.os.Handler;
import android.util.Log;
import android.widget.Toast;

import com.azoft.events.Event;
import com.azoft.events.EventCallback;
import com.azoft.events.Events;
import com.azoft.events.sample.base.BaseActivity;

public final class SampleActivity extends BaseActivity {

    private static final String TAG = SampleActivity.class.getSimpleName();

    private String mEvent2Result;

    @Override
    protected void onCreate(final Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        setContentView(R.layout.activity_main);

        mEvent2Result = null == savedInstanceState ? null : savedInstanceState.getString(""event_2_result"");

        Events.post(R.id.event_1);
        if (null == mEvent2Result) {
            // single event is good for activity recreation. we can be sure that only one event is executing in the moment event if we send a lot of single events
            // postTo is good to be sure that event result will be triggered only for this Activity instance (activity recreations are handled in sdk,
            // so this different instances because of recreation are the same for postTo method). This is true because of using EventsActivity and EventsFragment class for registering
//            Events.create(R.id.event_2).single().data(""hello"").postTo(this);
            Events.create(R.id.event_2).single().data(""hello"").single().post();
            Events.create(R.id.event_2).single().data(""hello"").single().post().cancel();
        }

        Events.create(R.id.event_broadcast_3).data(""broadcast for all!"").post();

        final Fragment sampleFragment = getFragmentManager().findFragmentById(R.id.fr_sample);
        Events.create(R.id.event_broadcast_4).data(""broadcast for fragment only!"").postTo(sampleFragment);
    }

    @Events.Callback(R.id.event_1)
    private void onCallback1(final EventCallback callback) {
        Log.d(TAG, ""Callback 1: "" + callback.getStatus());
        if (callback.isFinished()) {
            Toast.makeText(this, ""Event 1 was handled"", Toast.LENGTH_SHORT).show();
        }
    }

    @Events.Callback(R.id.event_2)
    private void onCallback2(final EventCallback callback) {
        Log.d(TAG, ""Callback 2: "" + callback.getStatus());
        if (callback.isFinished()) {
            new Handler().post(new Runnable() {
                @Override
                public void run() {
//                    callback.getEvent().cancel();
                }
            });
        }
        if (callback.isResult()) {
            mEvent2Result = callback.getResult();
            Toast.makeText(this, ""Event 2 was handled: "" + mEvent2Result, Toast.LENGTH_SHORT).show();
        }
    }

    @Events.Receiver(R.id.event_broadcast_3)
    private void onBroadcastEvent3(final Event event) {
        Log.d(TAG, ""onBroadcastEvent3 in Activity"");
        Toast.makeText(this, ""Event Broadcast 3 in Activity was handled: "" + event.getData(), Toast.LENGTH_SHORT).show();
    }

    @Events.Receiver(R.id.event_broadcast_4)
    private void onBroadcastEvent4(final Event event) {
        Log.d(TAG, ""onBroadcastEvent4 in Activity"");
        // this code should never be called due to postTo
        Toast.makeText(this, ""Event Broadcast 4 in Activity was handled: "" + event.getData(), Toast.LENGTH_SHORT).show();
    }

    @Override
    protected void onSaveInstanceState(final Bundle outState) {
        super.onSaveInstanceState(outState);

        outState.putString(""event_2_result"", mEvent2Result);
    }
}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.azoft.events.sample;', 'import', 'android.app.Fragment;', 'import', 'android.os.Bundle;', 'import', 'android.os.Handler;', 'import', 'android.util.Log;', 'import', 'android.widget.Toast;', 'import', 'com.azoft.events.Event;', 'import', 'com.azoft.events.EventCallback;', 'import', 'com.azoft.events.Events;', 'import', 'com.azoft.events.sample.base.BaseActivity;', 'public', 'final', 'class', 'SampleActivity', 'extends', 'BaseActivity', '{', 'private', 'static', 'final', 'String', 'TAG', '=', 'SampleActivity.class.getSimpleName();', 'private', 'String', 'mEvent2Result;', '@Override', 'protected', 'void', 'onCreate(final', 'Bundle', 'savedInstanceState)', '{', 'super.onCreate(savedInstanceState);', 'setContentView(R.layout.activity_main);', 'mEvent2Result', '=', 'null', '==', 'savedInstanceState', '?', 'null', ':', 'savedInstanceState.getString(""event_2_result"");', 'Events.post(R.id.event_1);', 'if', '(null', '==', 'mEvent2Result)', '{', '//', 'single', 'event', 'is', 'good', 'for', 'activity', 'recreation.', 'we', 'can', 'be', 'sure', 'that', 'only', 'one', 'event', 'is', 'executing', 'in', 'the', 'moment', 'event', 'if', 'we', 'send', 'a', 'lot', 'of', 'single', 'events', '//', 'postTo', 'is', 'good', 'to', 'be', 'sure', 'that', 'event', 'result', 'will', 'be', 'triggered', 'only', 'for', 'this', 'Activity', 'instance', '(activity', 'recreations', 'are', 'handled', 'in', 'sdk,', '//', 'so', 'this', 'different', 'instances', 'because', 'of', 'recreation', 'are', 'the', 'same', 'for', 'postTo', 'method).', 'This', 'is', 'true', 'because', 'of', 'using', 'EventsActivity', 'and', 'EventsFragment', 'class', 'for', 'registering', '//', 'Events.create(R.id.event_2).single().data(""hello"").postTo(this);', 'Events.create(R.id.event_2).single().data(""hello"").single().post();', 'Events.create(R.id.event_2).single().data(""hello"").single().post().cancel();', '}', 'Events.create(R.id.event_broadcast_3).data(""broadcast', 'for', 'all!"").post();', 'final', 'Fragment', 'sampleFragment', '=', 'getFragmentManager().findFragmentById(R.id.fr_sample);', 'Events.create(R.id.event_broadcast_4).data(""broadcast', 'for', 'fragment', 'only!"").postTo(sampleFragment);', '}', '@Events.Callback(R.id.event_1)', 'private', 'void', 'onCallback1(final', 'EventCallback', 'callback)', '{', 'Log.d(TAG,', '""Callback', '1:', '""', '+', 'callback.getStatus());', 'if', '(callback.isFinished())', '{', 'Toast.makeText(this,', '""Event', '1', 'was', 'handled"",', 'Toast.LENGTH_SHORT).show();', '}', '}', '@Events.Callback(R.id.event_2)', 'private', 'void', 'onCallback2(final', 'EventCallback', 'callback)', '{', 'Log.d(TAG,', '""Callback', '2:', '""', '+', 'callback.getStatus());', 'if', '(callback.isFinished())', '{', 'new', 'Handler().post(new', 'Runnable()', '{', '@Override', 'public', 'void', 'run()', '{', '//', 'callback.getEvent().cancel();', '}', '});', '}', 'if', '(callback.isResult())', '{', 'mEvent2Result', '=', 'callback.getResult();', 'Toast.makeText(this,', '""Event', '2', 'was', 'handled:', '""', '+', 'mEvent2Result,', 'Toast.LENGTH_SHORT).show();', '}', '}', '@Events.Receiver(R.id.event_broadcast_3)', 'private', 'void', 'onBroadcastEvent3(final', 'Event', 'event)', '{', 'Log.d(TAG,', '""onBroadcastEvent3', 'in', 'Activity"");', 'Toast.makeText(this,', '""Event', 'Broadcast', '3', 'in', 'Activity', 'was', 'handled:', '""', '+', 'event.getData(),', 'Toast.LENGTH_SHORT).show();', '}', '@Events.Receiver(R.id.event_broadcast_4)', 'private', 'void', 'onBroadcastEvent4(final', 'Event', 'event)', '{', 'Log.d(TAG,', '""onBroadcastEvent4', 'in', 'Activity"");', '//', 'this', 'code', 'should', 'never', 'be', 'called', 'due', 'to', 'postTo', 'Toast.makeText(this,', '""Event', 'Broadcast', '4', 'in', 'Activity', 'was', 'handled:', '""', '+', 'event.getData(),', 'Toast.LENGTH_SHORT).show();', '}', '@Override', 'protected', 'void', 'onSaveInstanceState(final', 'Bundle', 'outState)', '{', 'super.onSaveInstanceState(outState);', 'outState.putString(""event_2_result"",', 'mEvent2Result);', '}', '}```']",challenge not surrounded by ''': ,
"#!/bin/bash
set -e
pegasus_lite_version_major=""4""
pegasus_lite_version_minor=""6""
pegasus_lite_version_patch=""0""

. pegasus-lite-common.sh

pegasus_lite_init

# cleanup in case of failures
trap pegasus_lite_exit INT TERM EXIT

echo -e ""\n################################ Setting up workdir ################################""  1>&2
# work dir
export pegasus_lite_work_dir=$PWD
pegasus_lite_setup_work_dir

echo -e ""\n###################### figuring out the worker package to use ######################""  1>&2
# figure out the worker package to use
pegasus_lite_worker_package

echo -e ""\n##################### setting the xbit for executables staged #####################""  1>&2
# set the xbit for any executables staged
/bin/chmod +x example_workflow-import_7-1.0 

echo -e ""\n############################# executing the user tasks #############################""  1>&2
# execute the tasks
set +e
pegasus-kickstart -n example_workflow::import_7:1.0 -N ID0000008 -R condorpool  -L example_workflow -T 2016-04-27T18:21:44+00:00 ./example_workflow-import_7-1.0 
job_ec=$?
set -e

","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/bin/bash', 'set', '-e', 'pegasus_lite_version_major=""4""', 'pegasus_lite_version_minor=""6""', 'pegasus_lite_version_patch=""0""', '.', 'pegasus-lite-common.sh', 'pegasus_lite_init', '#', 'cleanup', 'in', 'case', 'of', 'failures', 'trap', 'pegasus_lite_exit', 'INT', 'TERM', 'EXIT', 'echo', '-e', '""\\n################################', 'Setting', 'up', 'workdir', '################################""', '1>&2', '#', 'work', 'dir', 'export', 'pegasus_lite_work_dir=$PWD', 'pegasus_lite_setup_work_dir', 'echo', '-e', '""\\n######################', 'figuring', 'out', 'the', 'worker', 'package', 'to', 'use', '######################""', '1>&2', '#', 'figure', 'out', 'the', 'worker', 'package', 'to', 'use', 'pegasus_lite_worker_package', 'echo', '-e', '""\\n#####################', 'setting', 'the', 'xbit', 'for', 'executables', 'staged', '#####################""', '1>&2', '#', 'set', 'the', 'xbit', 'for', 'any', 'executables', 'staged', '/bin/chmod', '+x', 'example_workflow-import_7-1.0', 'echo', '-e', '""\\n#############################', 'executing', 'the', 'user', 'tasks', '#############################""', '1>&2', '#', 'execute', 'the', 'tasks', 'set', '+e', 'pegasus-kickstart', '-n', 'example_workflow::import_7:1.0', '-N', 'ID0000008', '-R', 'condorpool', '-L', 'example_workflow', '-T', '2016-04-27T18:21:44+00:00', './example_workflow-import_7-1.0', 'job_ec=$?', 'set', '-e', '```']",challenge not surrounded by ''': ,
"/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.urservices.urerp.managedbean;

import com.urservices.urerp.entities.Paiement;
import com.urservices.urerp.entities.Produit;
import com.urservices.urerp.metier.IPaiementEJBMetierLocal;
import java.io.Serializable;
import java.util.List;
import javax.ejb.EJB;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.ViewScoped;

/**
 *
 * @author samuel
 */
@ManagedBean(name = ""paiementListBean"")
@ViewScoped
public class PaiementListBean implements Serializable{
    
    private Paiement paiement;
    private List<Paiement> paiements;
    private Produit produit;
    private List<Produit> produits;
    private boolean buttonDisabled = true;
    
    @EJB
    private IPaiementEJBMetierLocal iPaiementEJBMetierLocal;

    public PaiementListBean() {
        paiement = new Paiement();
        buttonDisabled = true;
    }

    public Paiement getPaiement() {
        return paiement;
    }

    public List<Paiement> getPaiements() {
        return paiements;
    }

    public Produit getProduit() {
        return produit;
    }

    public List<Produit> getProduits() {
        return produits;
    }

    public void setPaiement(Paiement paiement) {
        this.paiement = paiement;
        buttonDisabled = false;
    }

    public void setPaiements(List<Paiement> paiements) {
        this.paiements = paiements;
    }

    public void setProduit(Produit produit) {
        this.produit = produit;
    }

    public void setProduits(List<Produit> produits) {
        this.produits = produits;
    }

    public boolean isButtonDisabled() {
        return buttonDisabled;
    }
    
    public String getEditUrl() {
        return ""/paiement/edit"";
    }

    public String getShowUrl() {
        return ""/paiement/show"";
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'To', 'change', 'this', 'license', 'header,', 'choose', 'License', 'Headers', 'in', 'Project', 'Properties.', '*', 'To', 'change', 'this', 'template', 'file,', 'choose', 'Tools', '|', 'Templates', '*', 'and', 'open', 'the', 'template', 'in', 'the', 'editor.', '*/', 'package', 'com.urservices.urerp.managedbean;', 'import', 'com.urservices.urerp.entities.Paiement;', 'import', 'com.urservices.urerp.entities.Produit;', 'import', 'com.urservices.urerp.metier.IPaiementEJBMetierLocal;', 'import', 'java.io.Serializable;', 'import', 'java.util.List;', 'import', 'javax.ejb.EJB;', 'import', 'javax.faces.bean.ManagedBean;', 'import', 'javax.faces.bean.ViewScoped;', '/**', '*', '*', '@author', 'samuel', '*/', '@ManagedBean(name', '=', '""paiementListBean"")', '@ViewScoped', 'public', 'class', 'PaiementListBean', 'implements', 'Serializable{', 'private', 'Paiement', 'paiement;', 'private', 'List<Paiement>', 'paiements;', 'private', 'Produit', 'produit;', 'private', 'List<Produit>', 'produits;', 'private', 'boolean', 'buttonDisabled', '=', 'true;', '@EJB', 'private', 'IPaiementEJBMetierLocal', 'iPaiementEJBMetierLocal;', 'public', 'PaiementListBean()', '{', 'paiement', '=', 'new', 'Paiement();', 'buttonDisabled', '=', 'true;', '}', 'public', 'Paiement', 'getPaiement()', '{', 'return', 'paiement;', '}', 'public', 'List<Paiement>', 'getPaiements()', '{', 'return', 'paiements;', '}', 'public', 'Produit', 'getProduit()', '{', 'return', 'produit;', '}', 'public', 'List<Produit>', 'getProduits()', '{', 'return', 'produits;', '}', 'public', 'void', 'setPaiement(Paiement', 'paiement)', '{', 'this.paiement', '=', 'paiement;', 'buttonDisabled', '=', 'false;', '}', 'public', 'void', 'setPaiements(List<Paiement>', 'paiements)', '{', 'this.paiements', '=', 'paiements;', '}', 'public', 'void', 'setProduit(Produit', 'produit)', '{', 'this.produit', '=', 'produit;', '}', 'public', 'void', 'setProduits(List<Produit>', 'produits)', '{', 'this.produits', '=', 'produits;', '}', 'public', 'boolean', 'isButtonDisabled()', '{', 'return', 'buttonDisabled;', '}', 'public', 'String', 'getEditUrl()', '{', 'return', '""/paiement/edit"";', '}', 'public', 'String', 'getShowUrl()', '{', 'return', '""/paiement/show"";', '}', '}', '```']",challenge not surrounded by ''': ,
"package nl.omgwtfbbq.delver;

import java.text.SimpleDateFormat;
import java.util.Date;

/**
 * Simple ""logger"" for the Delver instrumentation without using fancy frameworks. We don't want to rely
 * on too many dependencies, and the basic java.util.Logging requires more configuration than necessary.
 * The log entries are only used to write to stdout en stderr.
 */
public final class Logger {

    private static final SimpleDateFormat SDF = new SimpleDateFormat(""yyyy-MM-dd HH:mm:ss"");

    public static boolean verbose = true;

    public static void debug(String s, Object... args) {
        if (!verbose) {
            return;
        }

        System.out.printf(""[DELVER] DEBUG [%s]: %s\n"",
                SDF.format(new Date()),
                String.format(s, args));
    }

    public static void warn(String s, Object... args) {
        System.out.printf(""[DELVER] WARN  [%s]: %s\n"",
                SDF.format(new Date()),
                String.format(s, args));
    }

    public static void error(String s, Object... args) {
        System.err.printf(""[DELVER] ERROR [%s]: %s\n"",
                SDF.format(new Date()),
                String.format(s, args));
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'nl.omgwtfbbq.delver;', 'import', 'java.text.SimpleDateFormat;', 'import', 'java.util.Date;', '/**', '*', 'Simple', '""logger""', 'for', 'the', 'Delver', 'instrumentation', 'without', 'using', 'fancy', 'frameworks.', 'We', ""don't"", 'want', 'to', 'rely', '*', 'on', 'too', 'many', 'dependencies,', 'and', 'the', 'basic', 'java.util.Logging', 'requires', 'more', 'configuration', 'than', 'necessary.', '*', 'The', 'log', 'entries', 'are', 'only', 'used', 'to', 'write', 'to', 'stdout', 'en', 'stderr.', '*/', 'public', 'final', 'class', 'Logger', '{', 'private', 'static', 'final', 'SimpleDateFormat', 'SDF', '=', 'new', 'SimpleDateFormat(""yyyy-MM-dd', 'HH:mm:ss"");', 'public', 'static', 'boolean', 'verbose', '=', 'true;', 'public', 'static', 'void', 'debug(String', 's,', 'Object...', 'args)', '{', 'if', '(!verbose)', '{', 'return;', '}', 'System.out.printf(""[DELVER]', 'DEBUG', '[%s]:', '%s\\n"",', 'SDF.format(new', 'Date()),', 'String.format(s,', 'args));', '}', 'public', 'static', 'void', 'warn(String', 's,', 'Object...', 'args)', '{', 'System.out.printf(""[DELVER]', 'WARN', '[%s]:', '%s\\n"",', 'SDF.format(new', 'Date()),', 'String.format(s,', 'args));', '}', 'public', 'static', 'void', 'error(String', 's,', 'Object...', 'args)', '{', 'System.err.printf(""[DELVER]', 'ERROR', '[%s]:', '%s\\n"",', 'SDF.format(new', 'Date()),', 'String.format(s,', 'args));', '}', '}', '```']",challenge not surrounded by ''': ,
"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.pluto.maven;

import java.io.File;

import org.apache.maven.plugin.AbstractMojo;
import org.apache.maven.plugin.MojoExecutionException;
import org.apache.maven.project.MavenProject;

/**
 * @todo Document
 * @since Jul 30, 2005
 */
public abstract class AbstractPlutoMojo extends AbstractMojo {

    /**
     * @parameter expression=""${installDir}""
     */
    protected File installationDirectory;

    /**
     * @parameter expression=""${project}""
     * @required
     * @readonly
     */
    protected MavenProject project;

    public void execute() throws MojoExecutionException {
        // Validation of the installDir property is done by maven.
        try {
            doValidate();
            doExecute();
        } catch (MojoExecutionException ex) {
            throw ex;
        } catch (Exception ex) {
            throw new MojoExecutionException(""Error Installing Pluto"", ex);
        }
    }

    /**
     * Process the actual execution.
     * @throws Exception
     */
    protected abstract void doExecute() throws Exception;

    protected abstract void doValidate() throws Exception;
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Licensed', 'to', 'the', 'Apache', 'Software', 'Foundation', '(ASF)', 'under', 'one', 'or', 'more', '*', 'contributor', 'license', 'agreements.', 'See', 'the', 'NOTICE', 'file', 'distributed', 'with', '*', 'this', 'work', 'for', 'additional', 'information', 'regarding', 'copyright', 'ownership.', '*', 'The', 'ASF', 'licenses', 'this', 'file', 'to', 'You', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '*', '(the', '""License"");', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', '*', 'the', 'License.', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'org.apache.pluto.maven;', 'import', 'java.io.File;', 'import', 'org.apache.maven.plugin.AbstractMojo;', 'import', 'org.apache.maven.plugin.MojoExecutionException;', 'import', 'org.apache.maven.project.MavenProject;', '/**', '*', '@todo', 'Document', '*', '@since', 'Jul', '30,', '2005', '*/', 'public', 'abstract', 'class', 'AbstractPlutoMojo', 'extends', 'AbstractMojo', '{', '/**', '*', '@parameter', 'expression=""${installDir}""', '*/', 'protected', 'File', 'installationDirectory;', '/**', '*', '@parameter', 'expression=""${project}""', '*', '@required', '*', '@readonly', '*/', 'protected', 'MavenProject', 'project;', 'public', 'void', 'execute()', 'throws', 'MojoExecutionException', '{', '//', 'Validation', 'of', 'the', 'installDir', 'property', 'is', 'done', 'by', 'maven.', 'try', '{', 'doValidate();', 'doExecute();', '}', 'catch', '(MojoExecutionException', 'ex)', '{', 'throw', 'ex;', '}', 'catch', '(Exception', 'ex)', '{', 'throw', 'new', 'MojoExecutionException(""Error', 'Installing', 'Pluto"",', 'ex);', '}', '}', '/**', '*', 'Process', 'the', 'actual', 'execution.', '*', '@throws', 'Exception', '*/', 'protected', 'abstract', 'void', 'doExecute()', 'throws', 'Exception;', 'protected', 'abstract', 'void', 'doValidate()', 'throws', 'Exception;', '}', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN""
                ""http://www.w3.org/TR/REC-html40/loose.dtd"">
<html>
<head>
  <title>Description of set_rp_kinetics</title>
  <meta name=""keywords"" content=""set_rp_kinetics"">
  <meta name=""description"" content=""kinetics = set_rp_kinetics(network,parameters)"">
  <meta http-equiv=""Content-Type"" content=""text/html; charset=iso-8859-1"">
  <meta name=""generator"" content=""m2html v1.5 &copy; 2003-2005 Guillaume Flandin"">
  <meta name=""robots"" content=""index, follow"">
  <link type=""text/css"" rel=""stylesheet"" href=""../../../../../m2html.css"">
</head>
<body>
<a name=""_top""></a>
<div><a href=""../../../../../index.html"">Home</a> &gt;  <a href=""#"">mnt</a> &gt; <a href=""../../../index.html"">mnt-basic</a> &gt; <a href=""../../index.html"">mnt_kinetics</a> &gt; <a href=""../index.html"">modular_rate_laws</a> &gt; <a href=""index.html"">rp_rate_law</a> &gt; set_rp_kinetics.m</div>

<!--<table width=""100%""><tr><td align=""left""><a href=""../../../../../index.html""><img alt=""<"" border=""0"" src=""../../../../../left.png"">&nbsp;Master index</a></td>
<td align=""right""><a href=""index.html"">Index for mnt/mnt-basic/mnt_kinetics/modular_rate_laws/rp_rate_law&nbsp;<img alt="">"" border=""0"" src=""../../../../../right.png""></a></td></tr></table>-->

<h1>set_rp_kinetics
</h1>

<h2><a name=""_name""></a>PURPOSE <a href=""#_top""><img alt=""^"" border=""0"" src=""../../../../../up.png""></a></h2>
<div class=""box""><strong>kinetics = set_rp_kinetics(network,parameters)</strong></div>

<h2><a name=""_synopsis""></a>SYNOPSIS <a href=""#_top""><img alt=""^"" border=""0"" src=""../../../../../up.png""></a></h2>
<div class=""box""><strong>function kinetics = set_rp_kinetics(network,parameters) </strong></div>

<h2><a name=""_description""></a>DESCRIPTION <a href=""#_top""><img alt=""^"" border=""0"" src=""../../../../../up.png""></a></h2>
<div class=""fragment""><pre class=""comment""> kinetics = set_rp_kinetics(network,parameters)</pre></div>

<!-- crossreference -->
<h2><a name=""_cross""></a>CROSS-REFERENCE INFORMATION <a href=""#_top""><img alt=""^"" border=""0"" src=""../../../../../up.png""></a></h2>
This function calls:
<ul style=""list-style-image:url(../../../../../matlabicon.gif)"">
<li><a href=""../../../../../mnt/mnt-basic/mnt_kinetics/modular_rate_laws/ms_rate_law/set_ms_kinetics.html"" class=""code"" title=""function kinetics = set_ms_kinetics(network,parameters)"">set_ms_kinetics</a>	kinetics = set_ms_kinetics(network,parameters)</li></ul>
This function is called by:
<ul style=""list-style-image:url(../../../../../matlabicon.gif)"">
<li><a href=""../../../../../mnt/mnt-basic/mnt_kinetics/kinetics/set_kinetics.html"" class=""code"" title=""function kinetics = set_kinetics(network,type,parameters)"">set_kinetics</a>	kinetics = set_kinetics(network,type,parameters)</li><li><a href=""../../../../../mnt/mnt-basic/mnt_kinetics/modular_rate_laws/modular_rate_law_functions/set_modular_kinetics.html"" class=""code"" title=""function kinetics = set_modular_kinetics(network,kinetic_law);"">set_modular_kinetics</a>	kinetics = set_modular_kinetics(network,kinetic_law);</li></ul>
<!-- crossreference -->




<hr><address>Generated on Wed 02-Jan-2019 19:42:46 by <strong><a href=""http://www.artefact.tk/software/matlab/m2html/"" title=""Matlab Documentation in HTML"">m2html</a></strong> &copy; 2005</address>
</body>
</html>","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'HTML', 'PUBLIC', '""-//W3C//DTD', 'HTML', '4.01', 'Transitional//EN""', '""http://www.w3.org/TR/REC-html40/loose.dtd"">', '<html>', '<head>', '<title>Description', 'of', 'set_rp_kinetics</title>', '<meta', 'name=""keywords""', 'content=""set_rp_kinetics"">', '<meta', 'name=""description""', 'content=""kinetics', '=', 'set_rp_kinetics(network,parameters)"">', '<meta', 'http-equiv=""Content-Type""', 'content=""text/html;', 'charset=iso-8859-1"">', '<meta', 'name=""generator""', 'content=""m2html', 'v1.5', '&copy;', '2003-2005', 'Guillaume', 'Flandin"">', '<meta', 'name=""robots""', 'content=""index,', 'follow"">', '<link', 'type=""text/css""', 'rel=""stylesheet""', 'href=""../../../../../m2html.css"">', '</head>', '<body>', '<a', 'name=""_top""></a>', '<div><a', 'href=""../../../../../index.html"">Home</a>', '&gt;', '<a', 'href=""#"">mnt</a>', '&gt;', '<a', 'href=""../../../index.html"">mnt-basic</a>', '&gt;', '<a', 'href=""../../index.html"">mnt_kinetics</a>', '&gt;', '<a', 'href=""../index.html"">modular_rate_laws</a>', '&gt;', '<a', 'href=""index.html"">rp_rate_law</a>', '&gt;', 'set_rp_kinetics.m</div>', '<!--<table', 'width=""100%""><tr><td', 'align=""left""><a', 'href=""../../../../../index.html""><img', 'alt=""<""', 'border=""0""', 'src=""../../../../../left.png"">&nbsp;Master', 'index</a></td>', '<td', 'align=""right""><a', 'href=""index.html"">Index', 'for', 'mnt/mnt-basic/mnt_kinetics/modular_rate_laws/rp_rate_law&nbsp;<img', 'alt="">""', 'border=""0""', 'src=""../../../../../right.png""></a></td></tr></table>-->', '<h1>set_rp_kinetics', '</h1>', '<h2><a', 'name=""_name""></a>PURPOSE', '<a', 'href=""#_top""><img', 'alt=""^""', 'border=""0""', 'src=""../../../../../up.png""></a></h2>', '<div', 'class=""box""><strong>kinetics', '=', 'set_rp_kinetics(network,parameters)</strong></div>', '<h2><a', 'name=""_synopsis""></a>SYNOPSIS', '<a', 'href=""#_top""><img', 'alt=""^""', 'border=""0""', 'src=""../../../../../up.png""></a></h2>', '<div', 'class=""box""><strong>function', 'kinetics', '=', 'set_rp_kinetics(network,parameters)', '</strong></div>', '<h2><a', 'name=""_description""></a>DESCRIPTION', '<a', 'href=""#_top""><img', 'alt=""^""', 'border=""0""', 'src=""../../../../../up.png""></a></h2>', '<div', 'class=""fragment""><pre', 'class=""comment"">', 'kinetics', '=', 'set_rp_kinetics(network,parameters)</pre></div>', '<!--', 'crossreference', '-->', '<h2><a', 'name=""_cross""></a>CROSS-REFERENCE', 'INFORMATION', '<a', 'href=""#_top""><img', 'alt=""^""', 'border=""0""', 'src=""../../../../../up.png""></a></h2>', 'This', 'function', 'calls:', '<ul', 'style=""list-style-image:url(../../../../../matlabicon.gif)"">', '<li><a', 'href=""../../../../../mnt/mnt-basic/mnt_kinetics/modular_rate_laws/ms_rate_law/set_ms_kinetics.html""', 'class=""code""', 'title=""function', 'kinetics', '=', 'set_ms_kinetics(network,parameters)"">set_ms_kinetics</a>', 'kinetics', '=', 'set_ms_kinetics(network,parameters)</li></ul>', 'This', 'function', 'is', 'called', 'by:', '<ul', 'style=""list-style-image:url(../../../../../matlabicon.gif)"">', '<li><a', 'href=""../../../../../mnt/mnt-basic/mnt_kinetics/kinetics/set_kinetics.html""', 'class=""code""', 'title=""function', 'kinetics', '=', 'set_kinetics(network,type,parameters)"">set_kinetics</a>', 'kinetics', '=', 'set_kinetics(network,type,parameters)</li><li><a', 'href=""../../../../../mnt/mnt-basic/mnt_kinetics/modular_rate_laws/modular_rate_law_functions/set_modular_kinetics.html""', 'class=""code""', 'title=""function', 'kinetics', '=', 'set_modular_kinetics(network,kinetic_law);"">set_modular_kinetics</a>', 'kinetics', '=', 'set_modular_kinetics(network,kinetic_law);</li></ul>', '<!--', 'crossreference', '-->', '<hr><address>Generated', 'on', 'Wed', '02-Jan-2019', '19:42:46', 'by', '<strong><a', 'href=""http://www.artefact.tk/software/matlab/m2html/""', 'title=""Matlab', 'Documentation', 'in', 'HTML"">m2html</a></strong>', '&copy;', '2005</address>', '</body>', '</html>```']",challenge not surrounded by ''': ,
"<!DOCTYPE html>
<html xml:lang=""en-GB"" lang=""en-GB"" xmlns=""http://www.w3.org/1999/xhtml"">
<head lang=""en-GB"">
	<title>Ross Gammon’s Family Tree - Surname - ELKIN</title>
	<meta charset=""UTF-8"" />
	<meta name =""viewport"" content=""width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=1"" />
	<meta name =""apple-mobile-web-app-capable"" content=""yes"" />
	<meta name=""generator"" content=""Gramps 4.2.8 http://gramps-project.org/"" />
	<meta name=""author"" content="""" />
	<link href=""../../../images/favicon2.ico"" rel=""shortcut icon"" type=""image/x-icon"" />
	<link href=""../../../css/narrative-screen.css"" media=""screen"" rel=""stylesheet"" type=""text/css"" />
	<link href=""../../../css/narrative-print.css"" media=""print"" rel=""stylesheet"" type=""text/css"" />
</head>
<body>
	<div id=""header"">
		<h1 id=""SiteTitle"">Ross Gammon’s Family Tree</h1>
	</div>
	<div class=""wrapper"" id=""nav"" role=""navigation"">
		<div class=""container"">
			<ul class=""menu"" id=""dropmenu"">
				<li><a href=""../../../individuals.html"" title=""Individuals"">Individuals</a></li>
				<li class = ""CurrentSection""><a href=""../../../index.html"" title=""Surnames"">Surnames</a></li>
				<li><a href=""../../../families.html"" title=""Families"">Families</a></li>
				<li><a href=""../../../events.html"" title=""Events"">Events</a></li>
				<li><a href=""../../../places.html"" title=""Places"">Places</a></li>
				<li><a href=""../../../sources.html"" title=""Sources"">Sources</a></li>
				<li><a href=""../../../repositories.html"" title=""Repositories"">Repositories</a></li>
				<li><a href=""../../../media.html"" title=""Media"">Media</a></li>
				<li><a href=""../../../thumbnails.html"" title=""Thumbnails"">Thumbnails</a></li>
			</ul>
		</div>
	</div>
	<div class=""content"" id=""SurnameDetail"">
		<h3>ELKIN</h3>
		<p id=""description"">
		This page contains an index of all the individuals in the database with the surname of ELKIN. Selecting the person&#8217;s name will take you to that person&#8217;s individual page.
		</p>
		<table class=""infolist primobjlist surname"">
			<thead>
				<tr>
					<th class=""ColumnName"">Given Name</th>
					<th class=""ColumnDate"">Birth</th>
					<th class=""ColumnDate"">Death</th>
					<th class=""ColumnPartner"">Partner</th>
					<th class=""ColumnParents"">Parents</th>
				</tr>
			</thead>
			<tbody>
				<tr>
					<td class=""ColumnName"">
						<a href=""../../../ppl/b/6/d15f5ff3eba58af2c8e5517a56b.html"">Neil Allan<span class=""grampsid""> [I5082]</span></a>
					</td>
					<td class=""ColumnBirth"">&nbsp;</td>
					<td class=""ColumnDeath"">&nbsp;</td>
					<td class=""ColumnPartner"">
						<a href=""../../../ppl/0/4/d15f5ff3e9c67287de54dfc9740.html"">MULLINS, Judith Joy<span class=""grampsid""> [I5081]</span></a>
					</td>
					<td class=""ColumnParents"">&nbsp;</td>
				</tr>
				<tr>
					<td class=""ColumnName"">
						<a href=""../../../ppl/6/4/d15f5ffc73295197a80e750746.html"">Neil Allan<span class=""grampsid""> [I5850]</span></a>
					</td>
					<td class=""ColumnBirth"">&nbsp;</td>
					<td class=""ColumnDeath"">&nbsp;</td>
					<td class=""ColumnPartner"">
						<a href=""../../../ppl/0/d/d15f5ffc717662d4187b19414d0.html"">MULLINS, Judith Joy<span class=""grampsid""> [I5849]</span></a>
					</td>
					<td class=""ColumnParents"">&nbsp;</td>
				</tr>
			</tbody>
		</table>
	</div>
	<div class=""fullclear""></div>
	<div id=""footer"">
		<p id=""createdate"">
		Generated by <a href=""http://gramps-project.org/"">Gramps</a> 4.2.8<br />Last change was the 2015-08-05 19:54:25<br />Created for <a href=""../../../ppl/9/e/d15f5fb48902c4fc1b421d249e9.html"">GAMMON, Francis</a>
		</p>
		<p id=""copyright"">
		
		</p>
	</div>
</body>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'html>', '<html', 'xml:lang=""en-GB""', 'lang=""en-GB""', 'xmlns=""http://www.w3.org/1999/xhtml"">', '<head', 'lang=""en-GB"">', '<title>Ross', 'Gammon’s', 'Family', 'Tree', '-', 'Surname', '-', 'ELKIN</title>', '<meta', 'charset=""UTF-8""', '/>', '<meta', 'name', '=""viewport""', 'content=""width=device-width,', 'initial-scale=1.0,', 'maximum-scale=1.0,', 'user-scalable=1""', '/>', '<meta', 'name', '=""apple-mobile-web-app-capable""', 'content=""yes""', '/>', '<meta', 'name=""generator""', 'content=""Gramps', '4.2.8', 'http://gramps-project.org/""', '/>', '<meta', 'name=""author""', 'content=""""', '/>', '<link', 'href=""../../../images/favicon2.ico""', 'rel=""shortcut', 'icon""', 'type=""image/x-icon""', '/>', '<link', 'href=""../../../css/narrative-screen.css""', 'media=""screen""', 'rel=""stylesheet""', 'type=""text/css""', '/>', '<link', 'href=""../../../css/narrative-print.css""', 'media=""print""', 'rel=""stylesheet""', 'type=""text/css""', '/>', '</head>', '<body>', '<div', 'id=""header"">', '<h1', 'id=""SiteTitle"">Ross', 'Gammon’s', 'Family', 'Tree</h1>', '</div>', '<div', 'class=""wrapper""', 'id=""nav""', 'role=""navigation"">', '<div', 'class=""container"">', '<ul', 'class=""menu""', 'id=""dropmenu"">', '<li><a', 'href=""../../../individuals.html""', 'title=""Individuals"">Individuals</a></li>', '<li', 'class', '=', '""CurrentSection""><a', 'href=""../../../index.html""', 'title=""Surnames"">Surnames</a></li>', '<li><a', 'href=""../../../families.html""', 'title=""Families"">Families</a></li>', '<li><a', 'href=""../../../events.html""', 'title=""Events"">Events</a></li>', '<li><a', 'href=""../../../places.html""', 'title=""Places"">Places</a></li>', '<li><a', 'href=""../../../sources.html""', 'title=""Sources"">Sources</a></li>', '<li><a', 'href=""../../../repositories.html""', 'title=""Repositories"">Repositories</a></li>', '<li><a', 'href=""../../../media.html""', 'title=""Media"">Media</a></li>', '<li><a', 'href=""../../../thumbnails.html""', 'title=""Thumbnails"">Thumbnails</a></li>', '</ul>', '</div>', '</div>', '<div', 'class=""content""', 'id=""SurnameDetail"">', '<h3>ELKIN</h3>', '<p', 'id=""description"">', 'This', 'page', 'contains', 'an', 'index', 'of', 'all', 'the', 'individuals', 'in', 'the', 'database', 'with', 'the', 'surname', 'of', 'ELKIN.', 'Selecting', 'the', 'person&#8217;s', 'name', 'will', 'take', 'you', 'to', 'that', 'person&#8217;s', 'individual', 'page.', '</p>', '<table', 'class=""infolist', 'primobjlist', 'surname"">', '<thead>', '<tr>', '<th', 'class=""ColumnName"">Given', 'Name</th>', '<th', 'class=""ColumnDate"">Birth</th>', '<th', 'class=""ColumnDate"">Death</th>', '<th', 'class=""ColumnPartner"">Partner</th>', '<th', 'class=""ColumnParents"">Parents</th>', '</tr>', '</thead>', '<tbody>', '<tr>', '<td', 'class=""ColumnName"">', '<a', 'href=""../../../ppl/b/6/d15f5ff3eba58af2c8e5517a56b.html"">Neil', 'Allan<span', 'class=""grampsid"">', '[I5082]</span></a>', '</td>', '<td', 'class=""ColumnBirth"">&nbsp;</td>', '<td', 'class=""ColumnDeath"">&nbsp;</td>', '<td', 'class=""ColumnPartner"">', '<a', 'href=""../../../ppl/0/4/d15f5ff3e9c67287de54dfc9740.html"">MULLINS,', 'Judith', 'Joy<span', 'class=""grampsid"">', '[I5081]</span></a>', '</td>', '<td', 'class=""ColumnParents"">&nbsp;</td>', '</tr>', '<tr>', '<td', 'class=""ColumnName"">', '<a', 'href=""../../../ppl/6/4/d15f5ffc73295197a80e750746.html"">Neil', 'Allan<span', 'class=""grampsid"">', '[I5850]</span></a>', '</td>', '<td', 'class=""ColumnBirth"">&nbsp;</td>', '<td', 'class=""ColumnDeath"">&nbsp;</td>', '<td', 'class=""ColumnPartner"">', '<a', 'href=""../../../ppl/0/d/d15f5ffc717662d4187b19414d0.html"">MULLINS,', 'Judith', 'Joy<span', 'class=""grampsid"">', '[I5849]</span></a>', '</td>', '<td', 'class=""ColumnParents"">&nbsp;</td>', '</tr>', '</tbody>', '</table>', '</div>', '<div', 'class=""fullclear""></div>', '<div', 'id=""footer"">', '<p', 'id=""createdate"">', 'Generated', 'by', '<a', 'href=""http://gramps-project.org/"">Gramps</a>', '4.2.8<br', '/>Last', 'change', 'was', 'the', '2015-08-05', '19:54:25<br', '/>Created', 'for', '<a', 'href=""../../../ppl/9/e/d15f5fb48902c4fc1b421d249e9.html"">GAMMON,', 'Francis</a>', '</p>', '<p', 'id=""copyright"">', '</p>', '</div>', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE html>
<html lang=""en"">
  <head>
    <meta charset=""utf-8"">
    <title>18 --> 19</title>
    <link href=""./../../assets/style.css"" rel=""stylesheet"">
  </head>
  <body>
    <h2>You have to be fast</h2>
    <a href=""./6d45d24b2a9460a3e8c6728f51916524b2f592d09c955298c921bd723ebfaaa7.html"">Teleport</a>
    <hr>
    <a href=""./../../about.md"">About</a> (Spoilers! )
    <script src=""./../../assets/md5.js""></script>
    <script>
      window.currentLevel = 7;
    </script>
    <script src=""./../../assets/script.js""></script>
  </body>
</html>","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'html>', '<html', 'lang=""en"">', '<head>', '<meta', 'charset=""utf-8"">', '<title>18', '-->', '19</title>', '<link', 'href=""./../../assets/style.css""', 'rel=""stylesheet"">', '</head>', '<body>', '<h2>You', 'have', 'to', 'be', 'fast</h2>', '<a', 'href=""./6d45d24b2a9460a3e8c6728f51916524b2f592d09c955298c921bd723ebfaaa7.html"">Teleport</a>', '<hr>', '<a', 'href=""./../../about.md"">About</a>', '(Spoilers!', ')', '<script', 'src=""./../../assets/md5.js""></script>', '<script>', 'window.currentLevel', '=', '7;', '</script>', '<script', 'src=""./../../assets/script.js""></script>', '</body>', '</html>```']",challenge not surrounded by ''': ,
"/****************************************************************
 * Licensed to the AOS Community (AOS) under one or more        *
 * contributor license agreements.  See the NOTICE file         *
 * distributed with this work for additional information        *
 * regarding copyright ownership.  The AOS licenses this file   *
 * to you under the Apache License, Version 2.0 (the            *
 * ""License""); you may not use this file except in compliance   *
 * with the License.  You may obtain a copy of the License at   *
 *                                                              *
 *   http://www.apache.org/licenses/LICENSE-2.0                 *
 *                                                              *
 * Unless required by applicable law or agreed to in writing,   *
 * software distributed under the License is distributed on an  *
 * ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY       *
 * KIND, either express or implied.  See the License for the    *
 * specific language governing permissions and limitations      *
 * under the License.                                           *
 ****************************************************************/
package io.aos.guice.annotation;

public class MySqlDatabaseTransactionLog extends DatabaseTransactionLog{
	public String toString(){
		return this.getClass().getName();
	}

	public MySqlDatabaseTransactionLog() {
		System.out.println(""MySqlDatabaseTransactionLog Constructor"");
	}


}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/****************************************************************', '*', 'Licensed', 'to', 'the', 'AOS', 'Community', '(AOS)', 'under', 'one', 'or', 'more', '*', '*', 'contributor', 'license', 'agreements.', 'See', 'the', 'NOTICE', 'file', '*', '*', 'distributed', 'with', 'this', 'work', 'for', 'additional', 'information', '*', '*', 'regarding', 'copyright', 'ownership.', 'The', 'AOS', 'licenses', 'this', 'file', '*', '*', 'to', 'you', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '*', '*', '""License"");', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', '*', '*', 'with', 'the', 'License.', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', '*', '*', 'software', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '*', '*', '""AS', 'IS""', 'BASIS,', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', '*', '*', 'KIND,', 'either', 'express', 'or', 'implied.', 'See', 'the', 'License', 'for', 'the', '*', '*', 'specific', 'language', 'governing', 'permissions', 'and', 'limitations', '*', '*', 'under', 'the', 'License.', '*', '****************************************************************/', 'package', 'io.aos.guice.annotation;', 'public', 'class', 'MySqlDatabaseTransactionLog', 'extends', 'DatabaseTransactionLog{', 'public', 'String', 'toString(){', 'return', 'this.getClass().getName();', '}', 'public', 'MySqlDatabaseTransactionLog()', '{', 'System.out.println(""MySqlDatabaseTransactionLog', 'Constructor"");', '}', '}', '```']",challenge not surrounded by ''': ,
"from templates import Plugin
import base64

class Droidian(Plugin):

	NAME = 'droidian'

	def recon(self):
		for cls in self.dvm.get_classes():
			for field in cls.get_fields():
				if field.name in ['backupURL', 'encodedURL']:
					self.droidian_service = cls
					return True
		return False
		
	def extract(self):
		hosts = set()
		string = None
		for method in self.droidian_service.get_methods():
			if method.name == '<init>':
				for inst in method.get_instructions():
					if inst.get_name() == 'const-string':
						string = inst.get_output().split(',')[-1].strip("" '"")
						try:
							string = base64.b64decode(string)
						except:
							string = None
					elif string and inst.get_name() == 'iput-object' and inst.get_output().split('->')[-1].startswith('encodedURL') or inst.get_output().split('->')[-1].startswith('backupURL'):
						hosts.add(string)
						
		return {'c2': list(hosts)}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```from', 'templates', 'import', 'Plugin', 'import', 'base64', 'class', 'Droidian(Plugin):', 'NAME', '=', ""'droidian'"", 'def', 'recon(self):', 'for', 'cls', 'in', 'self.dvm.get_classes():', 'for', 'field', 'in', 'cls.get_fields():', 'if', 'field.name', 'in', ""['backupURL',"", ""'encodedURL']:"", 'self.droidian_service', '=', 'cls', 'return', 'True', 'return', 'False', 'def', 'extract(self):', 'hosts', '=', 'set()', 'string', '=', 'None', 'for', 'method', 'in', 'self.droidian_service.get_methods():', 'if', 'method.name', '==', ""'<init>':"", 'for', 'inst', 'in', 'method.get_instructions():', 'if', 'inst.get_name()', '==', ""'const-string':"", 'string', '=', 'inst.get_output().split(\',\')[-1].strip(""', '\'"")', 'try:', 'string', '=', 'base64.b64decode(string)', 'except:', 'string', '=', 'None', 'elif', 'string', 'and', 'inst.get_name()', '==', ""'iput-object'"", 'and', ""inst.get_output().split('->')[-1].startswith('encodedURL')"", 'or', ""inst.get_output().split('->')[-1].startswith('backupURL'):"", 'hosts.add(string)', 'return', ""{'c2':"", 'list(hosts)}', '```']",challenge not surrounded by ''': ,
"/* Copyright (c) 2019 PaddlePaddle Authors. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the ""License"");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an ""AS IS"" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License. */

#include ""paddle/fluid/framework/op_registry.h""

#if defined(PADDLE_WITH_NCCL) || defined(PADDLE_WITH_RCCL)
#include ""paddle/fluid/platform/device/gpu/nccl_helper.h""
#endif
#include ""paddle/fluid/framework/convert_utils.h""

namespace ops = paddle::operators;
namespace plat = paddle::platform;

namespace paddle {
namespace operators {

template <typename T>
class NCCLBroadcastOpKernel : public framework::OpKernel<T> {
 public:
  void Compute(const framework::ExecutionContext& ctx) const override {
    PADDLE_ENFORCE_EQ(
        platform::is_gpu_place(ctx.GetPlace()), true,
        platform::errors::PreconditionNotMet(
            ""The place of ExecutionContext should be CUDAPlace.""));

#if defined(PADDLE_WITH_NCCL) || defined(PADDLE_WITH_RCCL)
    int dev_id = ctx.GetPlace().device;
    int root_dev_id = ctx.Attr<int>(""root"");

    auto in = ctx.Input<framework::Tensor>(""X"");
    auto out = ctx.Output<framework::Tensor>(""Out"");
    PADDLE_ENFORCE_EQ(
        out->IsInitialized(), true,
        platform::errors::PreconditionNotMet(
            ""Currently, the output of broadcast op must be initialized,""
            ""because this op can only be an In-Place operation.""));
    void* send_recv_buffer = out->mutable_data<T>(ctx.GetPlace());
    PADDLE_ENFORCE_EQ(
        send_recv_buffer, in->data(),
        platform::errors::PreconditionNotMet(""Currently, the broadcast op can ""
                                             ""only be an In-Place operation.""));

    auto& dev_ctx = ctx.template device_context<platform::CUDADeviceContext>();
    auto comm = dev_ctx.nccl_comm();
    auto stream = dev_ctx.stream();

    PADDLE_ENFORCE_GPU_SUCCESS(platform::dynload::ncclBcast(
        send_recv_buffer, static_cast<size_t>(in->numel()),
        platform::ToNCCLDataType(framework::TransToProtoVarType(in->dtype())),
        root_dev_id, comm, stream));

    VLOG(3) << ""Bcast "" << ctx.InputNames(""X"")[0] << "", ("" << in->numel() << "")""
            << "" From "" << root_dev_id << "" to "" << dev_id;

    if (ctx.Attr<bool>(""sync_mode"")) {
      platform::GpuStreamSync(stream);
    }
#else
    PADDLE_THROW(platform::errors::PreconditionNotMet(
        ""PaddlePaddle should compile with GPU.""));
#endif
  }
};

}  // namespace operators
}  // namespace paddle

REGISTER_OP_CUDA_KERNEL(broadcast, ops::NCCLBroadcastOpKernel<float>,
                        ops::NCCLBroadcastOpKernel<double>,
                        ops::NCCLBroadcastOpKernel<int>,
                        ops::NCCLBroadcastOpKernel<int64_t>,
                        ops::NCCLBroadcastOpKernel<plat::float16>);
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', 'Copyright', '(c)', '2019', 'PaddlePaddle', 'Authors.', 'All', 'Rights', 'Reserved.', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', 'http://www.apache.org/licenses/LICENSE-2.0', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', 'limitations', 'under', 'the', 'License.', '*/', '#include', '""paddle/fluid/framework/op_registry.h""', '#if', 'defined(PADDLE_WITH_NCCL)', '||', 'defined(PADDLE_WITH_RCCL)', '#include', '""paddle/fluid/platform/device/gpu/nccl_helper.h""', '#endif', '#include', '""paddle/fluid/framework/convert_utils.h""', 'namespace', 'ops', '=', 'paddle::operators;', 'namespace', 'plat', '=', 'paddle::platform;', 'namespace', 'paddle', '{', 'namespace', 'operators', '{', 'template', '<typename', 'T>', 'class', 'NCCLBroadcastOpKernel', ':', 'public', 'framework::OpKernel<T>', '{', 'public:', 'void', 'Compute(const', 'framework::ExecutionContext&', 'ctx)', 'const', 'override', '{', 'PADDLE_ENFORCE_EQ(', 'platform::is_gpu_place(ctx.GetPlace()),', 'true,', 'platform::errors::PreconditionNotMet(', '""The', 'place', 'of', 'ExecutionContext', 'should', 'be', 'CUDAPlace.""));', '#if', 'defined(PADDLE_WITH_NCCL)', '||', 'defined(PADDLE_WITH_RCCL)', 'int', 'dev_id', '=', 'ctx.GetPlace().device;', 'int', 'root_dev_id', '=', 'ctx.Attr<int>(""root"");', 'auto', 'in', '=', 'ctx.Input<framework::Tensor>(""X"");', 'auto', 'out', '=', 'ctx.Output<framework::Tensor>(""Out"");', 'PADDLE_ENFORCE_EQ(', 'out->IsInitialized(),', 'true,', 'platform::errors::PreconditionNotMet(', '""Currently,', 'the', 'output', 'of', 'broadcast', 'op', 'must', 'be', 'initialized,""', '""because', 'this', 'op', 'can', 'only', 'be', 'an', 'In-Place', 'operation.""));', 'void*', 'send_recv_buffer', '=', 'out->mutable_data<T>(ctx.GetPlace());', 'PADDLE_ENFORCE_EQ(', 'send_recv_buffer,', 'in->data(),', 'platform::errors::PreconditionNotMet(""Currently,', 'the', 'broadcast', 'op', 'can', '""', '""only', 'be', 'an', 'In-Place', 'operation.""));', 'auto&', 'dev_ctx', '=', 'ctx.template', 'device_context<platform::CUDADeviceContext>();', 'auto', 'comm', '=', 'dev_ctx.nccl_comm();', 'auto', 'stream', '=', 'dev_ctx.stream();', 'PADDLE_ENFORCE_GPU_SUCCESS(platform::dynload::ncclBcast(', 'send_recv_buffer,', 'static_cast<size_t>(in->numel()),', 'platform::ToNCCLDataType(framework::TransToProtoVarType(in->dtype())),', 'root_dev_id,', 'comm,', 'stream));', 'VLOG(3)', '<<', '""Bcast', '""', '<<', 'ctx.InputNames(""X"")[0]', '<<', '"",', '(""', '<<', 'in->numel()', '<<', '"")""', '<<', '""', 'From', '""', '<<', 'root_dev_id', '<<', '""', 'to', '""', '<<', 'dev_id;', 'if', '(ctx.Attr<bool>(""sync_mode""))', '{', 'platform::GpuStreamSync(stream);', '}', '#else', 'PADDLE_THROW(platform::errors::PreconditionNotMet(', '""PaddlePaddle', 'should', 'compile', 'with', 'GPU.""));', '#endif', '}', '};', '}', '//', 'namespace', 'operators', '}', '//', 'namespace', 'paddle', 'REGISTER_OP_CUDA_KERNEL(broadcast,', 'ops::NCCLBroadcastOpKernel<float>,', 'ops::NCCLBroadcastOpKernel<double>,', 'ops::NCCLBroadcastOpKernel<int>,', 'ops::NCCLBroadcastOpKernel<int64_t>,', 'ops::NCCLBroadcastOpKernel<plat::float16>);', '```']",challenge not surrounded by ''': ,
"package com.github.theholywaffle.teamspeak3.api.wrapper;

/*
 * #%L
 * TeamSpeak 3 Java API
 * %%
 * Copyright (C) 2016 Bert De Geyter, Roger Baumgartner
 * %%
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the ""Software""), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * #L%
 */

import java.util.Map;

public class FileListEntry extends FileInfo {

	public FileListEntry(Map<String, String> map) {
		super(map);
	}

	@Override
	public String getPath() {
		return getParentPath() + getName();
	}

	@Override
	public String getName() {
		return get(""name"");
	}

	@Override
	public String getParentPath() {
		return get(""path"");
	}

	@Override
	public long getFileSize() {
		// Present if still uploading and returns
		final long finishedSize = getLong(""incompletesize"");
		return (finishedSize > 0) ? finishedSize : super.getFileSize();
	}

	@Override
	public int getType() {
		return getInt(""type"");
	}

	@Override
	public boolean isFile() {
		return getType() == 1;
	}

	@Override
	public boolean isDirectory() {
		return getType() == 0;
	}

	/**
	 * Returns {@code true} if this file was actively being uploaded at the time
	 * this object was created. Note that this will return {@code false} if a
	 * client has paused an upload.
	 *
	 * @return whether this file is actively being uploaded
	 */
	public boolean isStillUploading() {
		return getLong(""incompletesize"") > 0;
	}

	/**
	 * If this file is still uploading, this method will return how many bytes have already
	 * been uploaded. Otherwise the normal file size is returned.
	 *
	 * @return how many bytes of this file have been uploaded
	 */
	public long getUploadedBytes() {
		return super.getFileSize();
	}
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.github.theholywaffle.teamspeak3.api.wrapper;', '/*', '*', '#%L', '*', 'TeamSpeak', '3', 'Java', 'API', '*', '%%', '*', 'Copyright', '(C)', '2016', 'Bert', 'De', 'Geyter,', 'Roger', 'Baumgartner', '*', '%%', '*', 'Permission', 'is', 'hereby', 'granted,', 'free', 'of', 'charge,', 'to', 'any', 'person', 'obtaining', 'a', 'copy', '*', 'of', 'this', 'software', 'and', 'associated', 'documentation', 'files', '(the', '""Software""),', 'to', 'deal', '*', 'in', 'the', 'Software', 'without', 'restriction,', 'including', 'without', 'limitation', 'the', 'rights', '*', 'to', 'use,', 'copy,', 'modify,', 'merge,', 'publish,', 'distribute,', 'sublicense,', 'and/or', 'sell', '*', 'copies', 'of', 'the', 'Software,', 'and', 'to', 'permit', 'persons', 'to', 'whom', 'the', 'Software', 'is', '*', 'furnished', 'to', 'do', 'so,', 'subject', 'to', 'the', 'following', 'conditions:', '*', '*', 'The', 'above', 'copyright', 'notice', 'and', 'this', 'permission', 'notice', 'shall', 'be', 'included', 'in', '*', 'all', 'copies', 'or', 'substantial', 'portions', 'of', 'the', 'Software.', '*', '*', 'THE', 'SOFTWARE', 'IS', 'PROVIDED', '""AS', 'IS"",', 'WITHOUT', 'WARRANTY', 'OF', 'ANY', 'KIND,', 'EXPRESS', 'OR', '*', 'IMPLIED,', 'INCLUDING', 'BUT', 'NOT', 'LIMITED', 'TO', 'THE', 'WARRANTIES', 'OF', 'MERCHANTABILITY,', '*', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE', 'AND', 'NONINFRINGEMENT.', 'IN', 'NO', 'EVENT', 'SHALL', 'THE', '*', 'AUTHORS', 'OR', 'COPYRIGHT', 'HOLDERS', 'BE', 'LIABLE', 'FOR', 'ANY', 'CLAIM,', 'DAMAGES', 'OR', 'OTHER', '*', 'LIABILITY,', 'WHETHER', 'IN', 'AN', 'ACTION', 'OF', 'CONTRACT,', 'TORT', 'OR', 'OTHERWISE,', 'ARISING', 'FROM,', '*', 'OUT', 'OF', 'OR', 'IN', 'CONNECTION', 'WITH', 'THE', 'SOFTWARE', 'OR', 'THE', 'USE', 'OR', 'OTHER', 'DEALINGS', 'IN', '*', 'THE', 'SOFTWARE.', '*', '#L%', '*/', 'import', 'java.util.Map;', 'public', 'class', 'FileListEntry', 'extends', 'FileInfo', '{', 'public', 'FileListEntry(Map<String,', 'String>', 'map)', '{', 'super(map);', '}', '@Override', 'public', 'String', 'getPath()', '{', 'return', 'getParentPath()', '+', 'getName();', '}', '@Override', 'public', 'String', 'getName()', '{', 'return', 'get(""name"");', '}', '@Override', 'public', 'String', 'getParentPath()', '{', 'return', 'get(""path"");', '}', '@Override', 'public', 'long', 'getFileSize()', '{', '//', 'Present', 'if', 'still', 'uploading', 'and', 'returns', 'final', 'long', 'finishedSize', '=', 'getLong(""incompletesize"");', 'return', '(finishedSize', '>', '0)', '?', 'finishedSize', ':', 'super.getFileSize();', '}', '@Override', 'public', 'int', 'getType()', '{', 'return', 'getInt(""type"");', '}', '@Override', 'public', 'boolean', 'isFile()', '{', 'return', 'getType()', '==', '1;', '}', '@Override', 'public', 'boolean', 'isDirectory()', '{', 'return', 'getType()', '==', '0;', '}', '/**', '*', 'Returns', '{@code', 'true}', 'if', 'this', 'file', 'was', 'actively', 'being', 'uploaded', 'at', 'the', 'time', '*', 'this', 'object', 'was', 'created.', 'Note', 'that', 'this', 'will', 'return', '{@code', 'false}', 'if', 'a', '*', 'client', 'has', 'paused', 'an', 'upload.', '*', '*', '@return', 'whether', 'this', 'file', 'is', 'actively', 'being', 'uploaded', '*/', 'public', 'boolean', 'isStillUploading()', '{', 'return', 'getLong(""incompletesize"")', '>', '0;', '}', '/**', '*', 'If', 'this', 'file', 'is', 'still', 'uploading,', 'this', 'method', 'will', 'return', 'how', 'many', 'bytes', 'have', 'already', '*', 'been', 'uploaded.', 'Otherwise', 'the', 'normal', 'file', 'size', 'is', 'returned.', '*', '*', '@return', 'how', 'many', 'bytes', 'of', 'this', 'file', 'have', 'been', 'uploaded', '*/', 'public', 'long', 'getUploadedBytes()', '{', 'return', 'super.getFileSize();', '}', '}', '```']",challenge not surrounded by ''': ,
"/**
 * File : addBranch.js
 * 
 * This file contain the validation of add branch form
 * 
 * Using validation plugin : jquery.validate.js
 * 
 * @author Kishor Mali
 */

$(document).ready(function(){
	
	var addBranchForm = $(""#addBranch"");
	
	var validator = addBranchForm.validate({
		
		rules:{
			fname :{ required : true },
			mobile : { required : true, digits : true },
			address : { required : true}
		},
		messages:{
			fname :{ required : ""This field is required"" },
			
			mobile : { required : ""This field is required"", digits : ""Please enter numbers only"" },
			
			address :{ required : ""This field is required"" }
			
		}
	});
});
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', 'File', ':', 'addBranch.js', '*', '*', 'This', 'file', 'contain', 'the', 'validation', 'of', 'add', 'branch', 'form', '*', '*', 'Using', 'validation', 'plugin', ':', 'jquery.validate.js', '*', '*', '@author', 'Kishor', 'Mali', '*/', '$(document).ready(function(){', 'var', 'addBranchForm', '=', '$(""#addBranch"");', 'var', 'validator', '=', 'addBranchForm.validate({', 'rules:{', 'fname', ':{', 'required', ':', 'true', '},', 'mobile', ':', '{', 'required', ':', 'true,', 'digits', ':', 'true', '},', 'address', ':', '{', 'required', ':', 'true}', '},', 'messages:{', 'fname', ':{', 'required', ':', '""This', 'field', 'is', 'required""', '},', 'mobile', ':', '{', 'required', ':', '""This', 'field', 'is', 'required"",', 'digits', ':', '""Please', 'enter', 'numbers', 'only""', '},', 'address', ':{', 'required', ':', '""This', 'field', 'is', 'required""', '}', '}', '});', '});', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE html>
<html>
<head>
	<link style=""text/css"" rel=""stylesheet"" href=""stylesheets\dbc1.css""/>
	<title>Matthew Hein</title>
</head>
<body>
<h1>Matthew Hein</h1>
<img src=""images\chicago.jpg"">
<h2>About Me</h2>
	<p>I am a recent graduate from UIC. I love <strong>Chicago</strong>! I have lived in the <em>suburbs</em> of Chicago<br> my whole life. Even though I am fairly new to programming, I love learning and building!<br>Enjoy my first website!</p>
<h3>Some of my favorite activities</h3>
	<ul>
		<li><strong>Coding</strong>!</li>
		<li>sports</li>
		<li>Movies</li>
		<li>Video Games</li>
	</ul>
<p>Most of my time other than learning how to code is spent watching my favorite sports.</p>
<h4 class=""class1"">Favorite Sports</h4>
	<ol>
		<li>Soccer</li>
		<ul><li>Preimiere league</li><li>Chicago Fire</li></ul>
		<li>Baseball</li>
		<ul><li>Chicago White Sox</li><li>The Cubs... I guess</li></ul>
		<li>Hockey</li>
		<ul><li>Chicago Blackhawks!!!</li><ul>
	</ol>
	<h5 id=""id1"">Keep your fingers crossed!</h5>
	<a href=""http://blackhawks.nhl.com/""><img src=""images\hawks.jpg""/></a>
<p>Don't be afraid to contact me!</p>
<h6 class=""class1"">Links</h6>
<ul>
<li><a href=""https://github.com/Mvhls"">Github</a></li>
<li><a href=""mailto:mvernhein@gmail.com"">mvernhein@gmail.com</a></li>
</ul>
</body>
</html>","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'html>', '<html>', '<head>', '<link', 'style=""text/css""', 'rel=""stylesheet""', 'href=""stylesheets\\dbc1.css""/>', '<title>Matthew', 'Hein</title>', '</head>', '<body>', '<h1>Matthew', 'Hein</h1>', '<img', 'src=""images\\chicago.jpg"">', '<h2>About', 'Me</h2>', '<p>I', 'am', 'a', 'recent', 'graduate', 'from', 'UIC.', 'I', 'love', '<strong>Chicago</strong>!', 'I', 'have', 'lived', 'in', 'the', '<em>suburbs</em>', 'of', 'Chicago<br>', 'my', 'whole', 'life.', 'Even', 'though', 'I', 'am', 'fairly', 'new', 'to', 'programming,', 'I', 'love', 'learning', 'and', 'building!<br>Enjoy', 'my', 'first', 'website!</p>', '<h3>Some', 'of', 'my', 'favorite', 'activities</h3>', '<ul>', '<li><strong>Coding</strong>!</li>', '<li>sports</li>', '<li>Movies</li>', '<li>Video', 'Games</li>', '</ul>', '<p>Most', 'of', 'my', 'time', 'other', 'than', 'learning', 'how', 'to', 'code', 'is', 'spent', 'watching', 'my', 'favorite', 'sports.</p>', '<h4', 'class=""class1"">Favorite', 'Sports</h4>', '<ol>', '<li>Soccer</li>', '<ul><li>Preimiere', 'league</li><li>Chicago', 'Fire</li></ul>', '<li>Baseball</li>', '<ul><li>Chicago', 'White', 'Sox</li><li>The', 'Cubs...', 'I', 'guess</li></ul>', '<li>Hockey</li>', '<ul><li>Chicago', 'Blackhawks!!!</li><ul>', '</ol>', '<h5', 'id=""id1"">Keep', 'your', 'fingers', 'crossed!</h5>', '<a', 'href=""http://blackhawks.nhl.com/""><img', 'src=""images\\hawks.jpg""/></a>', ""<p>Don't"", 'be', 'afraid', 'to', 'contact', 'me!</p>', '<h6', 'class=""class1"">Links</h6>', '<ul>', '<li><a', 'href=""https://github.com/Mvhls"">Github</a></li>', '<li><a', 'href=""mailto:mvernhein@gmail.com"">mvernhein@gmail.com</a></li>', '</ul>', '</body>', '</html>```']",challenge not surrounded by ''': ,
"/*
 * Copyright 2017-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the ""License""). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 * 
 * http://aws.amazon.com/apache2.0
 * 
 * or in the ""license"" file accompanying this file. This file is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */
package com.amazonaws.services.cloudwatch.model.transform;

import javax.xml.stream.events.XMLEvent;
import javax.annotation.Generated;

import com.amazonaws.services.cloudwatch.model.*;
import com.amazonaws.transform.Unmarshaller;

import com.amazonaws.transform.StaxUnmarshallerContext;
import com.amazonaws.transform.SimpleTypeStaxUnmarshallers.*;

/**
 * LabelOptions StAX Unmarshaller
 */

@Generated(""com.amazonaws:aws-java-sdk-code-generator"")
public class LabelOptionsStaxUnmarshaller implements Unmarshaller<LabelOptions, StaxUnmarshallerContext> {

    public LabelOptions unmarshall(StaxUnmarshallerContext context) throws Exception {
        LabelOptions labelOptions = new LabelOptions();
        int originalDepth = context.getCurrentDepth();
        int targetDepth = originalDepth + 1;

        if (context.isStartOfDocument())
            targetDepth += 1;

        while (true) {
            XMLEvent xmlEvent = context.nextEvent();
            if (xmlEvent.isEndDocument())
                return labelOptions;

            if (xmlEvent.isAttribute() || xmlEvent.isStartElement()) {

                if (context.testExpression(""Timezone"", targetDepth)) {
                    labelOptions.setTimezone(StringStaxUnmarshaller.getInstance().unmarshall(context));
                    continue;
                }
            } else if (xmlEvent.isEndElement()) {
                if (context.getCurrentDepth() < originalDepth) {
                    return labelOptions;
                }
            }
        }
    }

    private static LabelOptionsStaxUnmarshaller instance;

    public static LabelOptionsStaxUnmarshaller getInstance() {
        if (instance == null)
            instance = new LabelOptionsStaxUnmarshaller();
        return instance;
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '2017-2022', 'Amazon.com,', 'Inc.', 'or', 'its', 'affiliates.', 'All', 'Rights', 'Reserved.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"").', 'You', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', '*', 'the', 'License.', 'A', 'copy', 'of', 'the', 'License', 'is', 'located', 'at', '*', '*', 'http://aws.amazon.com/apache2.0', '*', '*', 'or', 'in', 'the', '""license""', 'file', 'accompanying', 'this', 'file.', 'This', 'file', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', 'WITHOUT', 'WARRANTIES', 'OR', '*', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', '*', 'and', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'com.amazonaws.services.cloudwatch.model.transform;', 'import', 'javax.xml.stream.events.XMLEvent;', 'import', 'javax.annotation.Generated;', 'import', 'com.amazonaws.services.cloudwatch.model.*;', 'import', 'com.amazonaws.transform.Unmarshaller;', 'import', 'com.amazonaws.transform.StaxUnmarshallerContext;', 'import', 'com.amazonaws.transform.SimpleTypeStaxUnmarshallers.*;', '/**', '*', 'LabelOptions', 'StAX', 'Unmarshaller', '*/', '@Generated(""com.amazonaws:aws-java-sdk-code-generator"")', 'public', 'class', 'LabelOptionsStaxUnmarshaller', 'implements', 'Unmarshaller<LabelOptions,', 'StaxUnmarshallerContext>', '{', 'public', 'LabelOptions', 'unmarshall(StaxUnmarshallerContext', 'context)', 'throws', 'Exception', '{', 'LabelOptions', 'labelOptions', '=', 'new', 'LabelOptions();', 'int', 'originalDepth', '=', 'context.getCurrentDepth();', 'int', 'targetDepth', '=', 'originalDepth', '+', '1;', 'if', '(context.isStartOfDocument())', 'targetDepth', '+=', '1;', 'while', '(true)', '{', 'XMLEvent', 'xmlEvent', '=', 'context.nextEvent();', 'if', '(xmlEvent.isEndDocument())', 'return', 'labelOptions;', 'if', '(xmlEvent.isAttribute()', '||', 'xmlEvent.isStartElement())', '{', 'if', '(context.testExpression(""Timezone"",', 'targetDepth))', '{', 'labelOptions.setTimezone(StringStaxUnmarshaller.getInstance().unmarshall(context));', 'continue;', '}', '}', 'else', 'if', '(xmlEvent.isEndElement())', '{', 'if', '(context.getCurrentDepth()', '<', 'originalDepth)', '{', 'return', 'labelOptions;', '}', '}', '}', '}', 'private', 'static', 'LabelOptionsStaxUnmarshaller', 'instance;', 'public', 'static', 'LabelOptionsStaxUnmarshaller', 'getInstance()', '{', 'if', '(instance', '==', 'null)', 'instance', '=', 'new', 'LabelOptionsStaxUnmarshaller();', 'return', 'instance;', '}', '}', '```']",challenge not surrounded by ''': ,
"package freenet.node.fcp;

import com.db4o.ObjectContainer;

import freenet.node.RequestClient;
import freenet.support.Logger;

public class FCPClientRequestClient implements RequestClient {
	
	// WARNING: THIS CLASS IS STORED IN DB4O -- THINK TWICE BEFORE ADD/REMOVE/RENAME FIELDS
	
	public final FCPClient client;
	public final boolean forever;
	public final boolean realTimeFlag;
	
	public FCPClientRequestClient(FCPClient fcpClient, boolean forever2, boolean realTime) {
		this.client = fcpClient;
		this.forever = forever2;
		this.realTimeFlag = realTime;
	}
	
	public boolean persistent() {
		return forever;
	}
	
	public void removeFrom(ObjectContainer container) {
		if(forever)
			container.delete(this);
		else
			throw new UnsupportedOperationException();
	}
	
	public boolean objectCanDelete(ObjectContainer container) {
		container.activate(client, 1);
		if(client.isGlobalQueue) {
			Logger.error(this, ""Trying to remove the RequestClient for the global queue!!!"", new Exception(""error""));
			return false;
		}
		return true;
	}

	public boolean realTimeFlag() {
		return realTimeFlag;
	}


}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'freenet.node.fcp;', 'import', 'com.db4o.ObjectContainer;', 'import', 'freenet.node.RequestClient;', 'import', 'freenet.support.Logger;', 'public', 'class', 'FCPClientRequestClient', 'implements', 'RequestClient', '{', '//', 'WARNING:', 'THIS', 'CLASS', 'IS', 'STORED', 'IN', 'DB4O', '--', 'THINK', 'TWICE', 'BEFORE', 'ADD/REMOVE/RENAME', 'FIELDS', 'public', 'final', 'FCPClient', 'client;', 'public', 'final', 'boolean', 'forever;', 'public', 'final', 'boolean', 'realTimeFlag;', 'public', 'FCPClientRequestClient(FCPClient', 'fcpClient,', 'boolean', 'forever2,', 'boolean', 'realTime)', '{', 'this.client', '=', 'fcpClient;', 'this.forever', '=', 'forever2;', 'this.realTimeFlag', '=', 'realTime;', '}', 'public', 'boolean', 'persistent()', '{', 'return', 'forever;', '}', 'public', 'void', 'removeFrom(ObjectContainer', 'container)', '{', 'if(forever)', 'container.delete(this);', 'else', 'throw', 'new', 'UnsupportedOperationException();', '}', 'public', 'boolean', 'objectCanDelete(ObjectContainer', 'container)', '{', 'container.activate(client,', '1);', 'if(client.isGlobalQueue)', '{', 'Logger.error(this,', '""Trying', 'to', 'remove', 'the', 'RequestClient', 'for', 'the', 'global', 'queue!!!"",', 'new', 'Exception(""error""));', 'return', 'false;', '}', 'return', 'true;', '}', 'public', 'boolean', 'realTimeFlag()', '{', 'return', 'realTimeFlag;', '}', '}', '```']",challenge not surrounded by ''': ,
"/*
 * Part of the NDNx Java Library.
 *
 * Portions Copyright (C) 2013 Regents of the University of California.
 * 
 * Based on the CCNx C Library by PARC.
 * Copyright (C) 2008, 2009 Palo Alto Research Center, Inc.
 *
 * This library is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License version 2.1
 * as published by the Free Software Foundation. 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details. You should have received
 * a copy of the GNU Lesser General Public License along with this library;
 * if not, write to the Free Software Foundation, Inc., 51 Franklin Street,
 * Fifth Floor, Boston, MA 02110-1301 USA.
 */

package org.ndnx.ndn.io.content;

import java.io.IOException;

/**
 * IOException type to indicate when a given NetworkObject has not yet retrieved its
 * content.
 */
public class ContentNotReadyException extends IOException {

	private static final long serialVersionUID = 6732044053240082669L;

	/**
	 * TODO add constructor taking Throwable when move to 1.6
	 */
	public ContentNotReadyException() {
		super();
	}

	public ContentNotReadyException(String s) {
		super(s);
	}

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Part', 'of', 'the', 'NDNx', 'Java', 'Library.', '*', '*', 'Portions', 'Copyright', '(C)', '2013', 'Regents', 'of', 'the', 'University', 'of', 'California.', '*', '*', 'Based', 'on', 'the', 'CCNx', 'C', 'Library', 'by', 'PARC.', '*', 'Copyright', '(C)', '2008,', '2009', 'Palo', 'Alto', 'Research', 'Center,', 'Inc.', '*', '*', 'This', 'library', 'is', 'free', 'software;', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', 'it', '*', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'Lesser', 'General', 'Public', 'License', 'version', '2.1', '*', 'as', 'published', 'by', 'the', 'Free', 'Software', 'Foundation.', '*', 'This', 'library', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', '*', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', '*', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', 'GNU', '*', 'Lesser', 'General', 'Public', 'License', 'for', 'more', 'details.', 'You', 'should', 'have', 'received', '*', 'a', 'copy', 'of', 'the', 'GNU', 'Lesser', 'General', 'Public', 'License', 'along', 'with', 'this', 'library;', '*', 'if', 'not,', 'write', 'to', 'the', 'Free', 'Software', 'Foundation,', 'Inc.,', '51', 'Franklin', 'Street,', '*', 'Fifth', 'Floor,', 'Boston,', 'MA', '02110-1301', 'USA.', '*/', 'package', 'org.ndnx.ndn.io.content;', 'import', 'java.io.IOException;', '/**', '*', 'IOException', 'type', 'to', 'indicate', 'when', 'a', 'given', 'NetworkObject', 'has', 'not', 'yet', 'retrieved', 'its', '*', 'content.', '*/', 'public', 'class', 'ContentNotReadyException', 'extends', 'IOException', '{', 'private', 'static', 'final', 'long', 'serialVersionUID', '=', '6732044053240082669L;', '/**', '*', 'TODO', 'add', 'constructor', 'taking', 'Throwable', 'when', 'move', 'to', '1.6', '*/', 'public', 'ContentNotReadyException()', '{', 'super();', '}', 'public', 'ContentNotReadyException(String', 's)', '{', 'super(s);', '}', '}', '```']",challenge not surrounded by ''': ,
"from nose.plugins import attrib

gpu = attrib.attr('gpu')
cudnn = attrib.attr('gpu', 'cudnn')


def multi_gpu(gpu_num):
    return attrib.attr(gpu=gpu_num)
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```from', 'nose.plugins', 'import', 'attrib', 'gpu', '=', ""attrib.attr('gpu')"", 'cudnn', '=', ""attrib.attr('gpu',"", ""'cudnn')"", 'def', 'multi_gpu(gpu_num):', 'return', 'attrib.attr(gpu=gpu_num)', '```']",challenge not surrounded by ''': ,
"# -*- coding: utf-8 -*-
import sys

# Read the first and last name
# The limit is 10 character per input
first = sys.stdin.readline().strip()[:10]
last = sys.stdin.readline().strip()[:10]

# Print hello message
print(""Hello %s %s! You just delved into python."" % (first, last))
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', '-*-', 'coding:', 'utf-8', '-*-', 'import', 'sys', '#', 'Read', 'the', 'first', 'and', 'last', 'name', '#', 'The', 'limit', 'is', '10', 'character', 'per', 'input', 'first', '=', 'sys.stdin.readline().strip()[:10]', 'last', '=', 'sys.stdin.readline().strip()[:10]', '#', 'Print', 'hello', 'message', 'print(""Hello', '%s', '%s!', 'You', 'just', 'delved', 'into', 'python.""', '%', '(first,', 'last))', '```']",challenge not surrounded by ''': ,
"var gulp = require('gulp');
var jade = require('gulp-jade');
var sass = require('gulp-sass');
var prettify = require('gulp-prettify');
var rename = require('gulp-rename');
var minify = require('gulp-csso');
var concat = require('gulp-concat');
var uglify = require('gulp-uglify');
var shell = require('gulp-shell');
var browserSync = require('browser-sync');
var sourcemaps = require('gulp-sourcemaps');
var autoprefixer = require('gulp-autoprefixer');
var please = require('gulp-pleeease');

var paths = {
  'html': 'src/',
  'scss': 'src/css/',
  'img': 'src/images/',
  'dist': 'dist/',
  'css': 'dist/css/'
}

gulp.task('bs', function() {
  browserSync.init({
    server: {
      baseDir: paths.dist,
      index: 'index.html'
    },
    notify: true
  });
});

gulp.task('html', function() {
  return gulp.src([
    paths.html + '**/*.jade',
    '!' + paths.html + '**/_*.jade'
    ])
    .pipe(jade())
    .pipe(gulp.dest(paths.dist));
});

gulp.task('prettify', ['html'], function() {
  return gulp.src(paths.dist + '**/*.html')
    .pipe(prettify({
      brace_style: 'collapse',
      indent_size: 2,
      indent_char: ' '
    }))
    .pipe(gulp.dest(paths.dist))
    .pipe(browserSync.reload({
      stream: true
    }));
});

gulp.task('scss', function() {
  return gulp.src(paths.scss + '**/*scss')
    .pipe(sourcemaps.init())
    .pipe(sass({
      outputStyle: 'expanded',
      includePaths: require('node-reset-scss').includePath
    }))
    .on('error', function(err) {
      console.log(err.message);
    })
    .pipe(autoprefixer({
        browsers: ['last 2 versions']
    }))
    .pipe(sourcemaps.write())
    .pipe(gulp.dest(paths.css))
    .pipe(browserSync.reload({
      stream: true
    }));
});

gulp.task('watch', function() {
  gulp.watch([paths.html + '**/*.jade'], ['prettify']);
  gulp.watch([paths.scss + '**/*.scss'], ['scss']);
});

gulp.task('default', ['bs', 'prettify', 'scss', 'watch']);
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```var', 'gulp', '=', ""require('gulp');"", 'var', 'jade', '=', ""require('gulp-jade');"", 'var', 'sass', '=', ""require('gulp-sass');"", 'var', 'prettify', '=', ""require('gulp-prettify');"", 'var', 'rename', '=', ""require('gulp-rename');"", 'var', 'minify', '=', ""require('gulp-csso');"", 'var', 'concat', '=', ""require('gulp-concat');"", 'var', 'uglify', '=', ""require('gulp-uglify');"", 'var', 'shell', '=', ""require('gulp-shell');"", 'var', 'browserSync', '=', ""require('browser-sync');"", 'var', 'sourcemaps', '=', ""require('gulp-sourcemaps');"", 'var', 'autoprefixer', '=', ""require('gulp-autoprefixer');"", 'var', 'please', '=', ""require('gulp-pleeease');"", 'var', 'paths', '=', '{', ""'html':"", ""'src/',"", ""'scss':"", ""'src/css/',"", ""'img':"", ""'src/images/',"", ""'dist':"", ""'dist/',"", ""'css':"", ""'dist/css/'"", '}', ""gulp.task('bs',"", 'function()', '{', 'browserSync.init({', 'server:', '{', 'baseDir:', 'paths.dist,', 'index:', ""'index.html'"", '},', 'notify:', 'true', '});', '});', ""gulp.task('html',"", 'function()', '{', 'return', 'gulp.src([', 'paths.html', '+', ""'**/*.jade',"", ""'!'"", '+', 'paths.html', '+', ""'**/_*.jade'"", '])', '.pipe(jade())', '.pipe(gulp.dest(paths.dist));', '});', ""gulp.task('prettify',"", ""['html'],"", 'function()', '{', 'return', 'gulp.src(paths.dist', '+', ""'**/*.html')"", '.pipe(prettify({', 'brace_style:', ""'collapse',"", 'indent_size:', '2,', 'indent_char:', ""'"", ""'"", '}))', '.pipe(gulp.dest(paths.dist))', '.pipe(browserSync.reload({', 'stream:', 'true', '}));', '});', ""gulp.task('scss',"", 'function()', '{', 'return', 'gulp.src(paths.scss', '+', ""'**/*scss')"", '.pipe(sourcemaps.init())', '.pipe(sass({', 'outputStyle:', ""'expanded',"", 'includePaths:', ""require('node-reset-scss').includePath"", '}))', "".on('error',"", 'function(err)', '{', 'console.log(err.message);', '})', '.pipe(autoprefixer({', 'browsers:', ""['last"", '2', ""versions']"", '}))', '.pipe(sourcemaps.write())', '.pipe(gulp.dest(paths.css))', '.pipe(browserSync.reload({', 'stream:', 'true', '}));', '});', ""gulp.task('watch',"", 'function()', '{', 'gulp.watch([paths.html', '+', ""'**/*.jade'],"", ""['prettify']);"", 'gulp.watch([paths.scss', '+', ""'**/*.scss'],"", ""['scss']);"", '});', ""gulp.task('default',"", ""['bs',"", ""'prettify',"", ""'scss',"", ""'watch']);"", '```']",challenge not surrounded by ''': ,
"package org.coc.tools.client.event;

import com.google.gwt.event.shared.EventHandler;

public interface CWIndexUpdateCancelEvtHandler   extends EventHandler {
	void onCancel(CWIndexUpdateCancelEvt event);
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'org.coc.tools.client.event;', 'import', 'com.google.gwt.event.shared.EventHandler;', 'public', 'interface', 'CWIndexUpdateCancelEvtHandler', 'extends', 'EventHandler', '{', 'void', 'onCancel(CWIndexUpdateCancelEvt', 'event);', '}', '```']",challenge not surrounded by ''': ,
";modjewel.define(""weinre/common/Callback"", function(require, exports, module) { // Generated by CoffeeScript 1.3.3
var Callback, CallbackIndex, CallbackTable, ConnectorChannel, Ex;

Ex = require('./Ex');

CallbackTable = {};

CallbackIndex = 1;

ConnectorChannel = ""???"";

module.exports = Callback = (function() {

  function Callback() {
    throw new Ex(arguments, ""this class is not intended to be instantiated"");
  }

  Callback.setConnectorChannel = function(connectorChannel) {
    return ConnectorChannel = """" + connectorChannel;
  };

  Callback.register = function(callback) {
    var data, func, index, receiver;
    if (typeof callback === ""function"") {
      callback = [null, callback];
    }
    if (typeof callback.slice !== ""function"") {
      throw new Ex(arguments, ""callback must be an array or function"");
    }
    receiver = callback[0];
    func = callback[1];
    data = callback.slice(2);
    if (typeof func === ""string"") {
      func = receiver[func];
    }
    if (typeof func !== ""function"") {
      throw new Ex(arguments, ""callback function was null or not found"");
    }
    index = ConnectorChannel + ""::"" + CallbackIndex;
    CallbackIndex++;
    if (CallbackIndex >= 65536 * 65536) {
      CallbackIndex = 1;
    }
    CallbackTable[index] = [receiver, func, data];
    return index;
  };

  Callback.deregister = function(index) {
    return delete CallbackTable[index];
  };

  Callback.invoke = function(index, args) {
    var callback, func, funcName, receiver;
    callback = CallbackTable[index];
    if (!callback) {
      throw new Ex(arguments, ""callback "" + index + "" not registered or already invoked"");
    }
    receiver = callback[0];
    func = callback[1];
    args = callback[2].concat(args);
    try {
      return func.apply(receiver, args);
    } catch (e) {
      funcName = func.name || func.signature;
      if (!funcName) {
        funcName = ""<unnamed>"";
      }
      return require(""./Weinre"").logError(arguments.callee.signature + ("" exception invoking callback: "" + funcName + ""("" + (args.join(',')) + ""): "") + e);
    } finally {
      Callback.deregister(index);
    }
  };

  return Callback;

})();

require(""../common/MethodNamer"").setNamesForClass(module.exports);

});
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```;modjewel.define(""weinre/common/Callback"",', 'function(require,', 'exports,', 'module)', '{', '//', 'Generated', 'by', 'CoffeeScript', '1.3.3', 'var', 'Callback,', 'CallbackIndex,', 'CallbackTable,', 'ConnectorChannel,', 'Ex;', 'Ex', '=', ""require('./Ex');"", 'CallbackTable', '=', '{};', 'CallbackIndex', '=', '1;', 'ConnectorChannel', '=', '""???"";', 'module.exports', '=', 'Callback', '=', '(function()', '{', 'function', 'Callback()', '{', 'throw', 'new', 'Ex(arguments,', '""this', 'class', 'is', 'not', 'intended', 'to', 'be', 'instantiated"");', '}', 'Callback.setConnectorChannel', '=', 'function(connectorChannel)', '{', 'return', 'ConnectorChannel', '=', '""""', '+', 'connectorChannel;', '};', 'Callback.register', '=', 'function(callback)', '{', 'var', 'data,', 'func,', 'index,', 'receiver;', 'if', '(typeof', 'callback', '===', '""function"")', '{', 'callback', '=', '[null,', 'callback];', '}', 'if', '(typeof', 'callback.slice', '!==', '""function"")', '{', 'throw', 'new', 'Ex(arguments,', '""callback', 'must', 'be', 'an', 'array', 'or', 'function"");', '}', 'receiver', '=', 'callback[0];', 'func', '=', 'callback[1];', 'data', '=', 'callback.slice(2);', 'if', '(typeof', 'func', '===', '""string"")', '{', 'func', '=', 'receiver[func];', '}', 'if', '(typeof', 'func', '!==', '""function"")', '{', 'throw', 'new', 'Ex(arguments,', '""callback', 'function', 'was', 'null', 'or', 'not', 'found"");', '}', 'index', '=', 'ConnectorChannel', '+', '""::""', '+', 'CallbackIndex;', 'CallbackIndex++;', 'if', '(CallbackIndex', '>=', '65536', '*', '65536)', '{', 'CallbackIndex', '=', '1;', '}', 'CallbackTable[index]', '=', '[receiver,', 'func,', 'data];', 'return', 'index;', '};', 'Callback.deregister', '=', 'function(index)', '{', 'return', 'delete', 'CallbackTable[index];', '};', 'Callback.invoke', '=', 'function(index,', 'args)', '{', 'var', 'callback,', 'func,', 'funcName,', 'receiver;', 'callback', '=', 'CallbackTable[index];', 'if', '(!callback)', '{', 'throw', 'new', 'Ex(arguments,', '""callback', '""', '+', 'index', '+', '""', 'not', 'registered', 'or', 'already', 'invoked"");', '}', 'receiver', '=', 'callback[0];', 'func', '=', 'callback[1];', 'args', '=', 'callback[2].concat(args);', 'try', '{', 'return', 'func.apply(receiver,', 'args);', '}', 'catch', '(e)', '{', 'funcName', '=', 'func.name', '||', 'func.signature;', 'if', '(!funcName)', '{', 'funcName', '=', '""<unnamed>"";', '}', 'return', 'require(""./Weinre"").logError(arguments.callee.signature', '+', '(""', 'exception', 'invoking', 'callback:', '""', '+', 'funcName', '+', '""(""', '+', ""(args.join(','))"", '+', '""):', '"")', '+', 'e);', '}', 'finally', '{', 'Callback.deregister(index);', '}', '};', 'return', 'Callback;', '})();', 'require(""../common/MethodNamer"").setNamesForClass(module.exports);', '});', '```']",challenge not surrounded by ''': ,
"package org.opentosca.csarrepo.rest.model;

import java.util.List;

import javax.xml.bind.annotation.XmlRootElement;

/**
 * Entry class for the csarrepo root
 *
 * @author eiselems (marcus.eisele@gmail.com)
 *
 */
@XmlRootElement(name = ""root-entry"")
public class RootEntry extends AbstractEntry {

	protected RootEntry() {
		super();
	}

	public RootEntry(List<SimpleXLink> links) {
		super(links, null);
	}

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'org.opentosca.csarrepo.rest.model;', 'import', 'java.util.List;', 'import', 'javax.xml.bind.annotation.XmlRootElement;', '/**', '*', 'Entry', 'class', 'for', 'the', 'csarrepo', 'root', '*', '*', '@author', 'eiselems', '(marcus.eisele@gmail.com)', '*', '*/', '@XmlRootElement(name', '=', '""root-entry"")', 'public', 'class', 'RootEntry', 'extends', 'AbstractEntry', '{', 'protected', 'RootEntry()', '{', 'super();', '}', 'public', 'RootEntry(List<SimpleXLink>', 'links)', '{', 'super(links,', 'null);', '}', '}', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE html>
<html>
<head>
  <title>File Transfer with DataChannel Example</title>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
  <link rel=""stylesheet"" href=""http://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css"">
  <script src=""https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js""></script>
  <script src=""http://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js""></script>
  <style>
    li span {
        margin-right: 1em;
    }
    progress {
        margin-right: 1em;
        width: 50%;
    }
    li .filename {
        display: inline-block;
        width: 50%;
    }
  </style>

</head>

<body>

<div class=""container"" id='mainDiv'>
  <h2>File Transfer and Chat with DataChannel</h2>
  <div id=""Send"">
      <textarea rows=""4"" cols=""60"" id=""dataChannelSend"" disabled
			placeholder=""This will be enabled once the data channel is up...""></textarea>
  </div>
  <div id=""Receive"">
    <textarea rows=""4"" cols=""60"" id=""dataChannelReceive"" disabled></textarea>
  </div>
  <div>
    <button id=""sendButton"" disabled>Send Message</button>
  </div>

</div>

<div class=""container"" id=""divMain"">
  <p>Signaling Server uses <strong>Socket.io</strong>, transactions are secure using <strong>DTLS</strong></p>
  <p>Taking sample</p>
  <div class=""progress"" id=""divProgressFather"">
      <!--style=""width:40%""-->
    <div id=""progress_bar_wrap"" class=""progress-bar progress-bar-striped active"" role=""progressbar"" aria-valuenow=""40"" aria-valuemin=""0"" aria-valuemax=""100"" >
    </div>
  </div>
  <div id=""buttons"">
        <input id=""click"" type=""button"" value=""Send File""/>
  </div>
  <div>
        <input id=""browseFile"" type=""file"" value=""Browse file...""/>
  </div>
</div>

<script type=""text/javascript"" src='/socket.io/socket.io.js'></script>
<script type=""text/javascript"" src='js/lib/adapter.js'></script>
<script type=""text/javascript"" src='js/completeNodeClientWithDataChannel.js'></script>
<script type=""text/javascript"" src=""progress_bar.js""></script>
<script type=""text/javascript"" src=""main.js""></script>

</body>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'html>', '<html>', '<head>', '<title>File', 'Transfer', 'with', 'DataChannel', 'Example</title>', '<meta', 'charset=""utf-8"">', '<meta', 'name=""viewport""', 'content=""width=device-width,', 'initial-scale=1"">', '<link', 'rel=""stylesheet""', 'href=""http://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css"">', '<script', 'src=""https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js""></script>', '<script', 'src=""http://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js""></script>', '<style>', 'li', 'span', '{', 'margin-right:', '1em;', '}', 'progress', '{', 'margin-right:', '1em;', 'width:', '50%;', '}', 'li', '.filename', '{', 'display:', 'inline-block;', 'width:', '50%;', '}', '</style>', '</head>', '<body>', '<div', 'class=""container""', ""id='mainDiv'>"", '<h2>File', 'Transfer', 'and', 'Chat', 'with', 'DataChannel</h2>', '<div', 'id=""Send"">', '<textarea', 'rows=""4""', 'cols=""60""', 'id=""dataChannelSend""', 'disabled', 'placeholder=""This', 'will', 'be', 'enabled', 'once', 'the', 'data', 'channel', 'is', 'up...""></textarea>', '</div>', '<div', 'id=""Receive"">', '<textarea', 'rows=""4""', 'cols=""60""', 'id=""dataChannelReceive""', 'disabled></textarea>', '</div>', '<div>', '<button', 'id=""sendButton""', 'disabled>Send', 'Message</button>', '</div>', '</div>', '<div', 'class=""container""', 'id=""divMain"">', '<p>Signaling', 'Server', 'uses', '<strong>Socket.io</strong>,', 'transactions', 'are', 'secure', 'using', '<strong>DTLS</strong></p>', '<p>Taking', 'sample</p>', '<div', 'class=""progress""', 'id=""divProgressFather"">', '<!--style=""width:40%""-->', '<div', 'id=""progress_bar_wrap""', 'class=""progress-bar', 'progress-bar-striped', 'active""', 'role=""progressbar""', 'aria-valuenow=""40""', 'aria-valuemin=""0""', 'aria-valuemax=""100""', '>', '</div>', '</div>', '<div', 'id=""buttons"">', '<input', 'id=""click""', 'type=""button""', 'value=""Send', 'File""/>', '</div>', '<div>', '<input', 'id=""browseFile""', 'type=""file""', 'value=""Browse', 'file...""/>', '</div>', '</div>', '<script', 'type=""text/javascript""', ""src='/socket.io/socket.io.js'></script>"", '<script', 'type=""text/javascript""', ""src='js/lib/adapter.js'></script>"", '<script', 'type=""text/javascript""', ""src='js/completeNodeClientWithDataChannel.js'></script>"", '<script', 'type=""text/javascript""', 'src=""progress_bar.js""></script>', '<script', 'type=""text/javascript""', 'src=""main.js""></script>', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"﻿<!DOCTYPE html>
<html>
<head>
    <title></title>
	<meta charset=""utf-8"" />
</head>
<body>
    {{test}}
    this is a customer website!
</body>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```\ufeff<!DOCTYPE', 'html>', '<html>', '<head>', '<title></title>', '<meta', 'charset=""utf-8""', '/>', '</head>', '<body>', '{{test}}', 'this', 'is', 'a', 'customer', 'website!', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"---
layout: default
---

<div class=""page"">
  <h1 class=""page-title"">{{ page.title }}</h1>
  {{ content }}
  {% if page.comments %}
  {% include comments.md %}
  {% endif %}
</div>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```---', 'layout:', 'default', '---', '<div', 'class=""page"">', '<h1', 'class=""page-title"">{{', 'page.title', '}}</h1>', '{{', 'content', '}}', '{%', 'if', 'page.comments', '%}', '{%', 'include', 'comments.md', '%}', '{%', 'endif', '%}', '</div>', '```']",challenge not surrounded by ''': ,
"{% extends ""base.html"" %}
{% block title %} - Welcome{% endblock %}
{% block heading %} - Welcome{% endblock %}
{% block content %}
<form method=""get"" action=""/search"" id=""search-terms"">
    <div>
        <label for=""query"">Search terms</label>
        <input id=""query"" name=""query"" type=""search"" 
            {% if terms is defined %}
                value=""{{ terms }}""
            {% else %}
                placeholder=""Input search terms here""
            {% endif %}
        autofocus />
    </div>
    <div><input type=""submit"" /></div>
</form>
{% endblock %}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```{%', 'extends', '""base.html""', '%}', '{%', 'block', 'title', '%}', '-', 'Welcome{%', 'endblock', '%}', '{%', 'block', 'heading', '%}', '-', 'Welcome{%', 'endblock', '%}', '{%', 'block', 'content', '%}', '<form', 'method=""get""', 'action=""/search""', 'id=""search-terms"">', '<div>', '<label', 'for=""query"">Search', 'terms</label>', '<input', 'id=""query""', 'name=""query""', 'type=""search""', '{%', 'if', 'terms', 'is', 'defined', '%}', 'value=""{{', 'terms', '}}""', '{%', 'else', '%}', 'placeholder=""Input', 'search', 'terms', 'here""', '{%', 'endif', '%}', 'autofocus', '/>', '</div>', '<div><input', 'type=""submit""', '/></div>', '</form>', '{%', 'endblock', '%}', '```']",challenge not surrounded by ''': ,
"// you can also use imports, for example:
// import java.util.*;

// you can use System.out.println for debugging purposes, e.g.
// System.out.println(""this is a debug message"");

public class FrogJmp {

    /*
    (1,2,1) = 1
    (2,3,1) = 1
    (2,4,1) = 2
    (2,5,2) = 2
    (2,8,80) = 1
    */
    public int  solution(int X, int Y, int D) {
         if( X == Y ) return 0;

         int result = ( Y - X ) / D;

         int applyingAnswer = X + ( D * result );

         if ( Y <= applyingAnswer ) {
             return result;
         } else {
            int difference = Y - applyingAnswer;

            if( difference <= D ) {
                result++;
            } else {
                int times = D / difference;
                result += times;
            }
         }

         return result;
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//', 'you', 'can', 'also', 'use', 'imports,', 'for', 'example:', '//', 'import', 'java.util.*;', '//', 'you', 'can', 'use', 'System.out.println', 'for', 'debugging', 'purposes,', 'e.g.', '//', 'System.out.println(""this', 'is', 'a', 'debug', 'message"");', 'public', 'class', 'FrogJmp', '{', '/*', '(1,2,1)', '=', '1', '(2,3,1)', '=', '1', '(2,4,1)', '=', '2', '(2,5,2)', '=', '2', '(2,8,80)', '=', '1', '*/', 'public', 'int', 'solution(int', 'X,', 'int', 'Y,', 'int', 'D)', '{', 'if(', 'X', '==', 'Y', ')', 'return', '0;', 'int', 'result', '=', '(', 'Y', '-', 'X', ')', '/', 'D;', 'int', 'applyingAnswer', '=', 'X', '+', '(', 'D', '*', 'result', ');', 'if', '(', 'Y', '<=', 'applyingAnswer', ')', '{', 'return', 'result;', '}', 'else', '{', 'int', 'difference', '=', 'Y', '-', 'applyingAnswer;', 'if(', 'difference', '<=', 'D', ')', '{', 'result++;', '}', 'else', '{', 'int', 'times', '=', 'D', '/', 'difference;', 'result', '+=', 'times;', '}', '}', 'return', 'result;', '}', '}', '```']",challenge not surrounded by ''': ,
"package cn.liutils.core.energy;

import net.minecraftforge.common.util.ForgeDirection;

public class EnergyBlockLink {

    ForgeDirection direction;
    double loss;

    EnergyBlockLink(ForgeDirection dir, double loss) {
        this.direction = dir;
        this.loss = loss;
    }

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'cn.liutils.core.energy;', 'import', 'net.minecraftforge.common.util.ForgeDirection;', 'public', 'class', 'EnergyBlockLink', '{', 'ForgeDirection', 'direction;', 'double', 'loss;', 'EnergyBlockLink(ForgeDirection', 'dir,', 'double', 'loss)', '{', 'this.direction', '=', 'dir;', 'this.loss', '=', 'loss;', '}', '}', '```']",challenge not surrounded by ''': ,
"<html><head><title>Particle</title></head>
<body bgcolor=""#EFF1F0"" link=""#3A3966"" vlink=""#000000"" alink=""#000000"">
<font face=""Verdana, sans-serif"" size=""2""><p align=""center""><b><font size=""4"">PureBasic - Particle</font></b></p>

<p><b>Overview</b></p><blockquote>


Particles systems are widely used in the 3D scenes to simulate hard 
to predict events, like the rain, fire, explosions etc. PureBasic 
allows to create any number of particle emitters as needed which 
are running in an autonomous manner. Each emitter has its own shape, 
and its own properties like the velocity, speed, emission rate and more. 
<br>
<br>
<a href=""../engine3d/initengine3d.html"">InitEngine3D()</a> must be called successfully before using any of the Particle functions. 

</blockquote><p><b>Command Index</b><blockquote>
<a href=""createparticleemitter.html"">CreateParticleEmitter</a><br>
<a href=""disableparticleemitter.html"">DisableParticleEmitter</a><br>
<a href=""freeparticleemitter.html"">FreeParticleEmitter</a><br>
<a href=""getscriptparticleemitter.html"">GetScriptParticleEmitter</a><br>
<a href=""hideparticleemitter.html"">HideParticleEmitter</a><br>
<a href=""isparticleemitter.html"">IsParticleEmitter</a><br>
<a href=""moveparticleemitter.html"">MoveParticleEmitter</a><br>
<a href=""particlecolorfader.html"">ParticleColorFader</a><br>
<a href=""particlecolorrange.html"">ParticleColorRange</a><br>
<a href=""particleemissionrate.html"">ParticleEmissionRate</a><br>
<a href=""particleemitterdirection.html"">ParticleEmitterDirection</a><br>
<a href=""particleemitterid.html"">ParticleEmitterID</a><br>
<a href=""particleemitterx.html"">ParticleEmitterX</a><br>
<a href=""particleemittery.html"">ParticleEmitterY</a><br>
<a href=""particleemitterz.html"">ParticleEmitterZ</a><br>
<a href=""particlematerial.html"">ParticleMaterial</a><br>
<a href=""particlesize.html"">ParticleSize</a><br>
<a href=""particlespeedfactor.html"">ParticleSpeedFactor</a><br>
<a href=""particletimetolive.html"">ParticleTimeToLive</a><br>
<a href=""particlevelocity.html"">ParticleVelocity</a><br>
<a href=""resizeparticleemitter.html"">ResizeParticleEmitter</a><br>
</blockquote></p>

<p><b>Example</b></p><blockquote>
<a href=""../Examples/Particle.pb.html"">Particle.pb</a>

</Blockquote><p><b>Supported OS </b><Blockquote>All</Blockquote></p><center><a href=""../index.html"">Reference Manual - Index</a></center><br><br>

</body></html>","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<html><head><title>Particle</title></head>', '<body', 'bgcolor=""#EFF1F0""', 'link=""#3A3966""', 'vlink=""#000000""', 'alink=""#000000"">', '<font', 'face=""Verdana,', 'sans-serif""', 'size=""2""><p', 'align=""center""><b><font', 'size=""4"">PureBasic', '-', 'Particle</font></b></p>', '<p><b>Overview</b></p><blockquote>', 'Particles', 'systems', 'are', 'widely', 'used', 'in', 'the', '3D', 'scenes', 'to', 'simulate', 'hard', 'to', 'predict', 'events,', 'like', 'the', 'rain,', 'fire,', 'explosions', 'etc.', 'PureBasic', 'allows', 'to', 'create', 'any', 'number', 'of', 'particle', 'emitters', 'as', 'needed', 'which', 'are', 'running', 'in', 'an', 'autonomous', 'manner.', 'Each', 'emitter', 'has', 'its', 'own', 'shape,', 'and', 'its', 'own', 'properties', 'like', 'the', 'velocity,', 'speed,', 'emission', 'rate', 'and', 'more.', '<br>', '<br>', '<a', 'href=""../engine3d/initengine3d.html"">InitEngine3D()</a>', 'must', 'be', 'called', 'successfully', 'before', 'using', 'any', 'of', 'the', 'Particle', 'functions.', '</blockquote><p><b>Command', 'Index</b><blockquote>', '<a', 'href=""createparticleemitter.html"">CreateParticleEmitter</a><br>', '<a', 'href=""disableparticleemitter.html"">DisableParticleEmitter</a><br>', '<a', 'href=""freeparticleemitter.html"">FreeParticleEmitter</a><br>', '<a', 'href=""getscriptparticleemitter.html"">GetScriptParticleEmitter</a><br>', '<a', 'href=""hideparticleemitter.html"">HideParticleEmitter</a><br>', '<a', 'href=""isparticleemitter.html"">IsParticleEmitter</a><br>', '<a', 'href=""moveparticleemitter.html"">MoveParticleEmitter</a><br>', '<a', 'href=""particlecolorfader.html"">ParticleColorFader</a><br>', '<a', 'href=""particlecolorrange.html"">ParticleColorRange</a><br>', '<a', 'href=""particleemissionrate.html"">ParticleEmissionRate</a><br>', '<a', 'href=""particleemitterdirection.html"">ParticleEmitterDirection</a><br>', '<a', 'href=""particleemitterid.html"">ParticleEmitterID</a><br>', '<a', 'href=""particleemitterx.html"">ParticleEmitterX</a><br>', '<a', 'href=""particleemittery.html"">ParticleEmitterY</a><br>', '<a', 'href=""particleemitterz.html"">ParticleEmitterZ</a><br>', '<a', 'href=""particlematerial.html"">ParticleMaterial</a><br>', '<a', 'href=""particlesize.html"">ParticleSize</a><br>', '<a', 'href=""particlespeedfactor.html"">ParticleSpeedFactor</a><br>', '<a', 'href=""particletimetolive.html"">ParticleTimeToLive</a><br>', '<a', 'href=""particlevelocity.html"">ParticleVelocity</a><br>', '<a', 'href=""resizeparticleemitter.html"">ResizeParticleEmitter</a><br>', '</blockquote></p>', '<p><b>Example</b></p><blockquote>', '<a', 'href=""../Examples/Particle.pb.html"">Particle.pb</a>', '</Blockquote><p><b>Supported', 'OS', '</b><Blockquote>All</Blockquote></p><center><a', 'href=""../index.html"">Reference', 'Manual', '-', 'Index</a></center><br><br>', '</body></html>```']",challenge not surrounded by ''': ,
"#!/bin/bash
#Choose a python version
module load apps/python/anaconda2-2.5.0
#Load spark
module load apps/gcc/4.4.7/spark/2.0
# Request 4 cores from the HPC scheduler
#$ -pe openmp 4
# Request 4Gig of virtual and real memory PER CORE
#$ -l rmem=4G
#$ -l mem=4G

#Make sure CORES is equal to the number of openmp slots
export CORES=4
export MASTER=local\[$CORES\]
spark-submit calcpi.py > out$CORES.txt
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/bin/bash', '#Choose', 'a', 'python', 'version', 'module', 'load', 'apps/python/anaconda2-2.5.0', '#Load', 'spark', 'module', 'load', 'apps/gcc/4.4.7/spark/2.0', '#', 'Request', '4', 'cores', 'from', 'the', 'HPC', 'scheduler', '#$', '-pe', 'openmp', '4', '#', 'Request', '4Gig', 'of', 'virtual', 'and', 'real', 'memory', 'PER', 'CORE', '#$', '-l', 'rmem=4G', '#$', '-l', 'mem=4G', '#Make', 'sure', 'CORES', 'is', 'equal', 'to', 'the', 'number', 'of', 'openmp', 'slots', 'export', 'CORES=4', 'export', 'MASTER=local\\[$CORES\\]', 'spark-submit', 'calcpi.py', '>', 'out$CORES.txt', '```']",challenge not surrounded by ''': ,
"/* global describe:true, before:true, after:true, it:true, baseURL:true */

'use strict';

var should  = require('chai').should(),
    request = require('supertest');


describe(""/"", function () {

  it('should respond to GET returning a message', function (done) {
    request(baseURL)
      .get('/')
      .set('Accept', 'application/json')
      .expect('Content-Type', 'application/json')
      .expect(200)
      .end(function (err, res) {
        if (err) return done(err);
        
        res.body.should.be.an('object');
        res.body.should.have.ownProperty('message');
        res.body.message.should.exist;
        res.body.message.should.match(/.+/);
        
        return done();
      });
  });

});
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', 'global', 'describe:true,', 'before:true,', 'after:true,', 'it:true,', 'baseURL:true', '*/', ""'use"", ""strict';"", 'var', 'should', '=', ""require('chai').should(),"", 'request', '=', ""require('supertest');"", 'describe(""/"",', 'function', '()', '{', ""it('should"", 'respond', 'to', 'GET', 'returning', 'a', ""message',"", 'function', '(done)', '{', 'request(baseURL)', "".get('/')"", "".set('Accept',"", ""'application/json')"", "".expect('Content-Type',"", ""'application/json')"", '.expect(200)', '.end(function', '(err,', 'res)', '{', 'if', '(err)', 'return', 'done(err);', ""res.body.should.be.an('object');"", ""res.body.should.have.ownProperty('message');"", 'res.body.message.should.exist;', 'res.body.message.should.match(/.+/);', 'return', 'done();', '});', '});', '});', '```']",challenge not surrounded by ''': ,
"/**
 * Copyright 2015 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.netflix.spectator.api;

import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.concurrent.ConcurrentLinkedQueue;

/**
 * Composite meter that computes a sum aggregate of the overlapping measurements in meters in the
 * set. This is typically used to combine the values of gauges that share the same id.
 */
class AggrMeter implements Meter {
  private final Id id;
  private final ConcurrentLinkedQueue<Meter> queue;

  /** Create a new instance. */
  AggrMeter(Id id) {
    this.id = id;
    this.queue = new ConcurrentLinkedQueue<>();
  }

  @Override public Id id() {
    return id;
  }

  @Override public Iterable<Measurement> measure() {
    Map<Id, Measurement> measurements = new HashMap<>();
    Iterator<Meter> iter = queue.iterator();
    while (iter.hasNext()) {
      Meter meter = iter.next();
      if (meter.hasExpired()) {
        iter.remove();
      } else {
        for (Measurement m : meter.measure()) {
          Measurement prev = measurements.get(m.id());
          if (prev == null) {
            measurements.put(m.id(), m);
          } else {
            double v = prev.value() + m.value();
            measurements.put(prev.id(), new Measurement(prev.id(), prev.timestamp(), v));
          }
        }
      }
    }
    return measurements.values();
  }

  @Override public boolean hasExpired() {
    return queue.isEmpty();
  }

  /** Adds a meter to the set included in the aggregate. */
  void add(Meter m) {
    queue.add(m);
  }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', 'Copyright', '2015', 'Netflix,', 'Inc.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'com.netflix.spectator.api;', 'import', 'java.util.HashMap;', 'import', 'java.util.Iterator;', 'import', 'java.util.Map;', 'import', 'java.util.concurrent.ConcurrentLinkedQueue;', '/**', '*', 'Composite', 'meter', 'that', 'computes', 'a', 'sum', 'aggregate', 'of', 'the', 'overlapping', 'measurements', 'in', 'meters', 'in', 'the', '*', 'set.', 'This', 'is', 'typically', 'used', 'to', 'combine', 'the', 'values', 'of', 'gauges', 'that', 'share', 'the', 'same', 'id.', '*/', 'class', 'AggrMeter', 'implements', 'Meter', '{', 'private', 'final', 'Id', 'id;', 'private', 'final', 'ConcurrentLinkedQueue<Meter>', 'queue;', '/**', 'Create', 'a', 'new', 'instance.', '*/', 'AggrMeter(Id', 'id)', '{', 'this.id', '=', 'id;', 'this.queue', '=', 'new', 'ConcurrentLinkedQueue<>();', '}', '@Override', 'public', 'Id', 'id()', '{', 'return', 'id;', '}', '@Override', 'public', 'Iterable<Measurement>', 'measure()', '{', 'Map<Id,', 'Measurement>', 'measurements', '=', 'new', 'HashMap<>();', 'Iterator<Meter>', 'iter', '=', 'queue.iterator();', 'while', '(iter.hasNext())', '{', 'Meter', 'meter', '=', 'iter.next();', 'if', '(meter.hasExpired())', '{', 'iter.remove();', '}', 'else', '{', 'for', '(Measurement', 'm', ':', 'meter.measure())', '{', 'Measurement', 'prev', '=', 'measurements.get(m.id());', 'if', '(prev', '==', 'null)', '{', 'measurements.put(m.id(),', 'm);', '}', 'else', '{', 'double', 'v', '=', 'prev.value()', '+', 'm.value();', 'measurements.put(prev.id(),', 'new', 'Measurement(prev.id(),', 'prev.timestamp(),', 'v));', '}', '}', '}', '}', 'return', 'measurements.values();', '}', '@Override', 'public', 'boolean', 'hasExpired()', '{', 'return', 'queue.isEmpty();', '}', '/**', 'Adds', 'a', 'meter', 'to', 'the', 'set', 'included', 'in', 'the', 'aggregate.', '*/', 'void', 'add(Meter', 'm)', '{', 'queue.add(m);', '}', '}', '```']",challenge not surrounded by ''': ,
"#/bin/bash/
for i in `seq 1 10`;
do 
    ping -c 1 10.0.0.2
    ping -c 1 10.0.0.4
    ping -c 1 10.0.0.5
done
/bin/bash
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#/bin/bash/', 'for', 'i', 'in', '`seq', '1', '10`;', 'do', 'ping', '-c', '1', '10.0.0.2', 'ping', '-c', '1', '10.0.0.4', 'ping', '-c', '1', '10.0.0.5', 'done', '/bin/bash', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright 2004 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */

/*
 * @test
 * @bug 4951298
 * @summary compiler: crashes when attributes with same elements are used in place of other
 * @author gafter
 *
 * @compile/fail WrongValue.java
 */

@interface TestM2 {
    String message() default ""MyMessage"";
    Class myClass() default Integer.class;
}

@interface TestM3 {
    String message() default ""MyMessage"";
    Class myClass() default Integer.class;

}

@interface X {
    TestM2 value();
}

@X(@TestM3())
class Foo {
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '2004', 'Sun', 'Microsystems,', 'Inc.', 'All', 'Rights', 'Reserved.', '*', 'DO', 'NOT', 'ALTER', 'OR', 'REMOVE', 'COPYRIGHT', 'NOTICES', 'OR', 'THIS', 'FILE', 'HEADER.', '*', '*', 'This', 'code', 'is', 'free', 'software;', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', 'it', '*', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'version', '2', 'only,', 'as', '*', 'published', 'by', 'the', 'Free', 'Software', 'Foundation.', '*', '*', 'This', 'code', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', 'but', 'WITHOUT', '*', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', 'MERCHANTABILITY', 'or', '*', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', 'GNU', 'General', 'Public', 'License', '*', 'version', '2', 'for', 'more', 'details', '(a', 'copy', 'is', 'included', 'in', 'the', 'LICENSE', 'file', 'that', '*', 'accompanied', 'this', 'code).', '*', '*', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'version', '*', '2', 'along', 'with', 'this', 'work;', 'if', 'not,', 'write', 'to', 'the', 'Free', 'Software', 'Foundation,', '*', 'Inc.,', '51', 'Franklin', 'St,', 'Fifth', 'Floor,', 'Boston,', 'MA', '02110-1301', 'USA.', '*', '*', 'Please', 'contact', 'Sun', 'Microsystems,', 'Inc.,', '4150', 'Network', 'Circle,', 'Santa', 'Clara,', '*', 'CA', '95054', 'USA', 'or', 'visit', 'www.sun.com', 'if', 'you', 'need', 'additional', 'information', 'or', '*', 'have', 'any', 'questions.', '*/', '/*', '*', '@test', '*', '@bug', '4951298', '*', '@summary', 'compiler:', 'crashes', 'when', 'attributes', 'with', 'same', 'elements', 'are', 'used', 'in', 'place', 'of', 'other', '*', '@author', 'gafter', '*', '*', '@compile/fail', 'WrongValue.java', '*/', '@interface', 'TestM2', '{', 'String', 'message()', 'default', '""MyMessage"";', 'Class', 'myClass()', 'default', 'Integer.class;', '}', '@interface', 'TestM3', '{', 'String', 'message()', 'default', '""MyMessage"";', 'Class', 'myClass()', 'default', 'Integer.class;', '}', '@interface', 'X', '{', 'TestM2', 'value();', '}', '@X(@TestM3())', 'class', 'Foo', '{', '}', '```']",challenge not surrounded by ''': ,
"package org.thrx.service.test;

import java.io.IOException;

import javax.ws.rs.client.Client;
import javax.ws.rs.client.ClientBuilder;
import javax.ws.rs.core.Response;

import com.fasterxml.jackson.core.JsonParseException;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;

import io.dropwizard.Configuration;
import io.dropwizard.testing.junit.DropwizardAppRule;

public abstract class DropwizardTestBase<T extends Configuration> {

   protected abstract DropwizardAppRule<T> getDropwizard();

   protected Client restClient;
   // private JerseyClient jerseyClient;
   private String adminBaseUrl;
   protected String baseUrl;

   protected Response restClientAdminGet(String string) {
      return restClient.target(adminBaseUrl+ string).request().get();
   }
   
   protected Response restClientGet(String string) {
      return restClient.target(baseUrl+ string).request().get();
   }

   public void setUp() {
      adminBaseUrl = ""http://127.0.0.1:"" + getDropwizard().getAdminPort() + getDropwizard().getEnvironment().getAdminContext().getContextPath();
      baseUrl = ""http://127.0.0.1:"" + getDropwizard().getLocalPort() + 
            getDropwizard().getEnvironment().getApplicationContext().getContextPath() +
            getDropwizard().getEnvironment().jersey().getResourceConfig().getUrlPattern().substring(0, getDropwizard().getEnvironment().jersey().getResourceConfig().getUrlPattern().length()-2);

      restClient = ClientBuilder.newClient();
      // jerseyClient = new JerseyClientBuilder().build();
   }

   public void tearDown() {
      restClient.close();
      // jerseyClient.close();
   }

   public String sysoutJsonResponseString(Response response) throws JsonProcessingException, IOException, JsonParseException, JsonMappingException {
      boolean bufferEntity = response.bufferEntity();
      String jsonString = response.readEntity(String.class);
      System.out.println(""-------------------------------------------------------------"");
      System.out.println(jsonString);
      ObjectMapper objectMapper = new ObjectMapper();
      String jsonStrFom = objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(objectMapper.readValue(jsonString, Object.class));
      System.out.println(jsonStrFom);
      System.out.println(""-------------------------------------------------------------"");
      return jsonStrFom;
   }

}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'org.thrx.service.test;', 'import', 'java.io.IOException;', 'import', 'javax.ws.rs.client.Client;', 'import', 'javax.ws.rs.client.ClientBuilder;', 'import', 'javax.ws.rs.core.Response;', 'import', 'com.fasterxml.jackson.core.JsonParseException;', 'import', 'com.fasterxml.jackson.core.JsonProcessingException;', 'import', 'com.fasterxml.jackson.databind.JsonMappingException;', 'import', 'com.fasterxml.jackson.databind.ObjectMapper;', 'import', 'io.dropwizard.Configuration;', 'import', 'io.dropwizard.testing.junit.DropwizardAppRule;', 'public', 'abstract', 'class', 'DropwizardTestBase<T', 'extends', 'Configuration>', '{', 'protected', 'abstract', 'DropwizardAppRule<T>', 'getDropwizard();', 'protected', 'Client', 'restClient;', '//', 'private', 'JerseyClient', 'jerseyClient;', 'private', 'String', 'adminBaseUrl;', 'protected', 'String', 'baseUrl;', 'protected', 'Response', 'restClientAdminGet(String', 'string)', '{', 'return', 'restClient.target(adminBaseUrl+', 'string).request().get();', '}', 'protected', 'Response', 'restClientGet(String', 'string)', '{', 'return', 'restClient.target(baseUrl+', 'string).request().get();', '}', 'public', 'void', 'setUp()', '{', 'adminBaseUrl', '=', '""http://127.0.0.1:""', '+', 'getDropwizard().getAdminPort()', '+', 'getDropwizard().getEnvironment().getAdminContext().getContextPath();', 'baseUrl', '=', '""http://127.0.0.1:""', '+', 'getDropwizard().getLocalPort()', '+', 'getDropwizard().getEnvironment().getApplicationContext().getContextPath()', '+', 'getDropwizard().getEnvironment().jersey().getResourceConfig().getUrlPattern().substring(0,', 'getDropwizard().getEnvironment().jersey().getResourceConfig().getUrlPattern().length()-2);', 'restClient', '=', 'ClientBuilder.newClient();', '//', 'jerseyClient', '=', 'new', 'JerseyClientBuilder().build();', '}', 'public', 'void', 'tearDown()', '{', 'restClient.close();', '//', 'jerseyClient.close();', '}', 'public', 'String', 'sysoutJsonResponseString(Response', 'response)', 'throws', 'JsonProcessingException,', 'IOException,', 'JsonParseException,', 'JsonMappingException', '{', 'boolean', 'bufferEntity', '=', 'response.bufferEntity();', 'String', 'jsonString', '=', 'response.readEntity(String.class);', 'System.out.println(""-------------------------------------------------------------"");', 'System.out.println(jsonString);', 'ObjectMapper', 'objectMapper', '=', 'new', 'ObjectMapper();', 'String', 'jsonStrFom', '=', 'objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(objectMapper.readValue(jsonString,', 'Object.class));', 'System.out.println(jsonStrFom);', 'System.out.println(""-------------------------------------------------------------"");', 'return', 'jsonStrFom;', '}', '}```']",challenge not surrounded by ''': ,
"/*====================================
=            Load Modules            =
====================================*/

var gutil = require('gulp-util');
var prettyHrtime = require('pretty-hrtime');
var startTime;

/*====================================
=            bundleLogger            =
====================================*/

module.exports = {
  start: function(filepath) {
    startTime = process.hrtime();
    gutil.log('Bundling', gutil.colors.green(filepath) + '...');
  },

  end: function(filepath) {
    var taskTime = process.hrtime(startTime);
    var prettyTime = prettyHrtime(taskTime);

    gutil.log('Bundled', gutil.colors.green(filepath), 'in', gutil.colors.magenta(prettyTime));
  }
};
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*====================================', '=', 'Load', 'Modules', '=', '====================================*/', 'var', 'gutil', '=', ""require('gulp-util');"", 'var', 'prettyHrtime', '=', ""require('pretty-hrtime');"", 'var', 'startTime;', '/*====================================', '=', 'bundleLogger', '=', '====================================*/', 'module.exports', '=', '{', 'start:', 'function(filepath)', '{', 'startTime', '=', 'process.hrtime();', ""gutil.log('Bundling',"", 'gutil.colors.green(filepath)', '+', ""'...');"", '},', 'end:', 'function(filepath)', '{', 'var', 'taskTime', '=', 'process.hrtime(startTime);', 'var', 'prettyTime', '=', 'prettyHrtime(taskTime);', ""gutil.log('Bundled',"", 'gutil.colors.green(filepath),', ""'in',"", 'gutil.colors.magenta(prettyTime));', '}', '};', '```']",challenge not surrounded by ''': ,
"// Copyright David Abrahams 2006. Distributed under the Boost
// Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
#ifndef AUTOBOOST_CONCEPT_ASSERT_DWA2006430_HPP
# define AUTOBOOST_CONCEPT_ASSERT_DWA2006430_HPP

# include <autoboost/config.hpp>
# include <autoboost/detail/workaround.hpp>

// The old protocol used a constraints() member function in concept
// checking classes.  If the compiler supports SFINAE, we can detect
// that function and seamlessly support the old concept checking
// classes.  In this release, backward compatibility with the old
// concept checking classes is enabled by default, where available.
// The old protocol is deprecated, though, and backward compatibility
// will no longer be the default in the next release.

# if !defined(AUTOBOOST_NO_OLD_CONCEPT_SUPPORT)                                         \
    && !defined(AUTOBOOST_NO_SFINAE)                                                    \
                                                                                    \
    && !(AUTOBOOST_WORKAROUND(__GNUC__, == 3) && AUTOBOOST_WORKAROUND(__GNUC_MINOR__, < 4))

// Note: gcc-2.96 through 3.3.x have some SFINAE, but no ability to
// check for the presence of particularmember functions.

#  define AUTOBOOST_OLD_CONCEPT_SUPPORT

# endif

# ifdef AUTOBOOST_MSVC
#  include <autoboost/concept/detail/msvc.hpp>
# elif AUTOBOOST_WORKAROUND(__BORLANDC__, AUTOBOOST_TESTED_AT(0x564))
#  include <autoboost/concept/detail/borland.hpp>
# else
#  include <autoboost/concept/detail/general.hpp>
# endif

  // Usage, in class or function context:
  //
  //     AUTOBOOST_CONCEPT_ASSERT((UnaryFunctionConcept<F,bool,int>));
  //
# define AUTOBOOST_CONCEPT_ASSERT(ModelInParens) \
    AUTOBOOST_CONCEPT_ASSERT_FN(void(*)ModelInParens)

#endif // AUTOBOOST_CONCEPT_ASSERT_DWA2006430_HPP
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//', 'Copyright', 'David', 'Abrahams', '2006.', 'Distributed', 'under', 'the', 'Boost', '//', 'Software', 'License,', 'Version', '1.0.', '(See', 'accompanying', '//', 'file', 'LICENSE_1_0.txt', 'or', 'copy', 'at', 'http://www.boost.org/LICENSE_1_0.txt)', '#ifndef', 'AUTOBOOST_CONCEPT_ASSERT_DWA2006430_HPP', '#', 'define', 'AUTOBOOST_CONCEPT_ASSERT_DWA2006430_HPP', '#', 'include', '<autoboost/config.hpp>', '#', 'include', '<autoboost/detail/workaround.hpp>', '//', 'The', 'old', 'protocol', 'used', 'a', 'constraints()', 'member', 'function', 'in', 'concept', '//', 'checking', 'classes.', 'If', 'the', 'compiler', 'supports', 'SFINAE,', 'we', 'can', 'detect', '//', 'that', 'function', 'and', 'seamlessly', 'support', 'the', 'old', 'concept', 'checking', '//', 'classes.', 'In', 'this', 'release,', 'backward', 'compatibility', 'with', 'the', 'old', '//', 'concept', 'checking', 'classes', 'is', 'enabled', 'by', 'default,', 'where', 'available.', '//', 'The', 'old', 'protocol', 'is', 'deprecated,', 'though,', 'and', 'backward', 'compatibility', '//', 'will', 'no', 'longer', 'be', 'the', 'default', 'in', 'the', 'next', 'release.', '#', 'if', '!defined(AUTOBOOST_NO_OLD_CONCEPT_SUPPORT)', '\\', '&&', '!defined(AUTOBOOST_NO_SFINAE)', '\\', '\\', '&&', '!(AUTOBOOST_WORKAROUND(__GNUC__,', '==', '3)', '&&', 'AUTOBOOST_WORKAROUND(__GNUC_MINOR__,', '<', '4))', '//', 'Note:', 'gcc-2.96', 'through', '3.3.x', 'have', 'some', 'SFINAE,', 'but', 'no', 'ability', 'to', '//', 'check', 'for', 'the', 'presence', 'of', 'particularmember', 'functions.', '#', 'define', 'AUTOBOOST_OLD_CONCEPT_SUPPORT', '#', 'endif', '#', 'ifdef', 'AUTOBOOST_MSVC', '#', 'include', '<autoboost/concept/detail/msvc.hpp>', '#', 'elif', 'AUTOBOOST_WORKAROUND(__BORLANDC__,', 'AUTOBOOST_TESTED_AT(0x564))', '#', 'include', '<autoboost/concept/detail/borland.hpp>', '#', 'else', '#', 'include', '<autoboost/concept/detail/general.hpp>', '#', 'endif', '//', 'Usage,', 'in', 'class', 'or', 'function', 'context:', '//', '//', 'AUTOBOOST_CONCEPT_ASSERT((UnaryFunctionConcept<F,bool,int>));', '//', '#', 'define', 'AUTOBOOST_CONCEPT_ASSERT(ModelInParens)', '\\', 'AUTOBOOST_CONCEPT_ASSERT_FN(void(*)ModelInParens)', '#endif', '//', 'AUTOBOOST_CONCEPT_ASSERT_DWA2006430_HPP', '```']",challenge not surrounded by ''': ,
"/* global io */
'use strict';

angular.module('tecExamsApp')
  .factory('socket', function(socketFactory, Auth) {

    // socket.io now auto-configures its connection when we ommit a connection url
    var ioSocket = io('', {
      // Send auth token on connection, you will need to DI the Auth service above
      'query': 'ns=web&' + 'token=' + Auth.getToken(),
      path: '/socket.io'
    });

    var socket = socketFactory({
      ioSocket: ioSocket
    });

    return {
      socket: socket,

      /**
       * Register listeners to sync an array with updates on a model
       *
       * Takes the array we want to sync, the model name that socket updates are sent from,
       * and an optional callback function after new items are updated.
       *
       * @param {String} modelName
       * @param {Array} array
       * @param {Function} cb
       */
      syncUpdates: function (modelName, array, cb) {
        cb = cb || angular.noop;

        /**
         * Syncs item creation/updates on 'model:save'
         */
        socket.on(modelName + ':save', function (item) {
          var oldItem = _.find(array, {_id: item._id});
          var index = array.indexOf(oldItem);
          var event = 'created';

          // replace oldItem if it exists
          // otherwise just add item to the collection
          if (oldItem) {
            array.splice(index, 1, item);
            event = 'updated';
          } else {
            array.push(item);
          }

          cb(event, item, array);
        });

        /**
         * Syncs removed items on 'model:remove'
         */
        socket.on(modelName + ':remove', function (item) {
          var event = 'deleted';
          _.remove(array, {_id: item._id});
          cb(event, item, array);
        });
      },

      /**
       * Removes listeners for a models updates on the socket
       *
       * @param modelName
       */
      unsyncUpdates: function (modelName) {
        socket.removeAllListeners(modelName + ':save');
        socket.removeAllListeners(modelName + ':remove');
      }
    };
  });
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', 'global', 'io', '*/', ""'use"", ""strict';"", ""angular.module('tecExamsApp')"", "".factory('socket',"", 'function(socketFactory,', 'Auth)', '{', '//', 'socket.io', 'now', 'auto-configures', 'its', 'connection', 'when', 'we', 'ommit', 'a', 'connection', 'url', 'var', 'ioSocket', '=', ""io('',"", '{', '//', 'Send', 'auth', 'token', 'on', 'connection,', 'you', 'will', 'need', 'to', 'DI', 'the', 'Auth', 'service', 'above', ""'query':"", ""'ns=web&'"", '+', ""'token='"", '+', 'Auth.getToken(),', 'path:', ""'/socket.io'"", '});', 'var', 'socket', '=', 'socketFactory({', 'ioSocket:', 'ioSocket', '});', 'return', '{', 'socket:', 'socket,', '/**', '*', 'Register', 'listeners', 'to', 'sync', 'an', 'array', 'with', 'updates', 'on', 'a', 'model', '*', '*', 'Takes', 'the', 'array', 'we', 'want', 'to', 'sync,', 'the', 'model', 'name', 'that', 'socket', 'updates', 'are', 'sent', 'from,', '*', 'and', 'an', 'optional', 'callback', 'function', 'after', 'new', 'items', 'are', 'updated.', '*', '*', '@param', '{String}', 'modelName', '*', '@param', '{Array}', 'array', '*', '@param', '{Function}', 'cb', '*/', 'syncUpdates:', 'function', '(modelName,', 'array,', 'cb)', '{', 'cb', '=', 'cb', '||', 'angular.noop;', '/**', '*', 'Syncs', 'item', 'creation/updates', 'on', ""'model:save'"", '*/', 'socket.on(modelName', '+', ""':save',"", 'function', '(item)', '{', 'var', 'oldItem', '=', '_.find(array,', '{_id:', 'item._id});', 'var', 'index', '=', 'array.indexOf(oldItem);', 'var', 'event', '=', ""'created';"", '//', 'replace', 'oldItem', 'if', 'it', 'exists', '//', 'otherwise', 'just', 'add', 'item', 'to', 'the', 'collection', 'if', '(oldItem)', '{', 'array.splice(index,', '1,', 'item);', 'event', '=', ""'updated';"", '}', 'else', '{', 'array.push(item);', '}', 'cb(event,', 'item,', 'array);', '});', '/**', '*', 'Syncs', 'removed', 'items', 'on', ""'model:remove'"", '*/', 'socket.on(modelName', '+', ""':remove',"", 'function', '(item)', '{', 'var', 'event', '=', ""'deleted';"", '_.remove(array,', '{_id:', 'item._id});', 'cb(event,', 'item,', 'array);', '});', '},', '/**', '*', 'Removes', 'listeners', 'for', 'a', 'models', 'updates', 'on', 'the', 'socket', '*', '*', '@param', 'modelName', '*/', 'unsyncUpdates:', 'function', '(modelName)', '{', 'socket.removeAllListeners(modelName', '+', ""':save');"", 'socket.removeAllListeners(modelName', '+', ""':remove');"", '}', '};', '});', '```']",challenge not surrounded by ''': ,
"import React from ""react"";
import ReactDOM from ""react-dom"";
import { BrowserRouter } from ""react-router-dom"";
import App from ""./App"";
import ""./index.css"";

ReactDOM.render(
    <BrowserRouter>
        <App />
    </BrowserRouter>,
    document.getElementById('root'));
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'React', 'from', '""react"";', 'import', 'ReactDOM', 'from', '""react-dom"";', 'import', '{', 'BrowserRouter', '}', 'from', '""react-router-dom"";', 'import', 'App', 'from', '""./App"";', 'import', '""./index.css"";', 'ReactDOM.render(', '<BrowserRouter>', '<App', '/>', '</BrowserRouter>,', ""document.getElementById('root'));"", '```']",challenge not surrounded by ''': ,
"/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.abada.trazability.exception;

/*
 * #%L
 * Contramed
 * %%
 * Copyright (C) 2013 Abada Servicios Desarrollo (investigacion@abadasoft.com)
 * %%
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 3 of the 
 * License, or (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public 
 * License along with this program.  If not, see
 * <http://www.gnu.org/licenses/gpl-3.0.html>.
 * #L%
 */

/**
 *
 * @author mmartin
 */
public class PrimaryKeyException extends Exception {

    /*
     * constructor PrimaryKeyException
     */
    public PrimaryKeyException(String message) {
        super(message);
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'To', 'change', 'this', 'template,', 'choose', 'Tools', '|', 'Templates', '*', 'and', 'open', 'the', 'template', 'in', 'the', 'editor.', '*/', 'package', 'com.abada.trazability.exception;', '/*', '*', '#%L', '*', 'Contramed', '*', '%%', '*', 'Copyright', '(C)', '2013', 'Abada', 'Servicios', 'Desarrollo', '(investigacion@abadasoft.com)', '*', '%%', '*', 'This', 'program', 'is', 'free', 'software:', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', '*', 'it', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'as', '*', 'published', 'by', 'the', 'Free', 'Software', 'Foundation,', 'either', 'version', '3', 'of', 'the', '*', 'License,', 'or', '(at', 'your', 'option)', 'any', 'later', 'version.', '*', '*', 'This', 'program', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', '*', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', '*', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', '*', 'GNU', 'General', 'Public', 'License', 'for', 'more', 'details.', '*', '*', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'General', 'Public', '*', 'License', 'along', 'with', 'this', 'program.', 'If', 'not,', 'see', '*', '<http://www.gnu.org/licenses/gpl-3.0.html>.', '*', '#L%', '*/', '/**', '*', '*', '@author', 'mmartin', '*/', 'public', 'class', 'PrimaryKeyException', 'extends', 'Exception', '{', '/*', '*', 'constructor', 'PrimaryKeyException', '*/', 'public', 'PrimaryKeyException(String', 'message)', '{', 'super(message);', '}', '}', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE html>
<html>
	<head>
		<title>FreeTube</title>
		<link rel=""stylesheet"" type=""text/css"" href=""http://a.pomf.se/rdktqe.css"">
	</head>
	<body>
		<div class=""container"">
			<div class=""row"">
				<div class=""eight columns"">
					<h1>Welcome to FreeTube</h1><br>
				</div>
			</div>
			<div class=""row"">
				<div class=""eight columns"">
					<p>Here, anyone can upload a video completely anonymously. You also can comment on videos without any account or other mumbo jumbo.</p><br>
					<br>
					<a class=""button button-primary"" href=""upload"">Upload</a>
				</div>
			</div>
		</div>
	</body>
</html>","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'html>', '<html>', '<head>', '<title>FreeTube</title>', '<link', 'rel=""stylesheet""', 'type=""text/css""', 'href=""http://a.pomf.se/rdktqe.css"">', '</head>', '<body>', '<div', 'class=""container"">', '<div', 'class=""row"">', '<div', 'class=""eight', 'columns"">', '<h1>Welcome', 'to', 'FreeTube</h1><br>', '</div>', '</div>', '<div', 'class=""row"">', '<div', 'class=""eight', 'columns"">', '<p>Here,', 'anyone', 'can', 'upload', 'a', 'video', 'completely', 'anonymously.', 'You', 'also', 'can', 'comment', 'on', 'videos', 'without', 'any', 'account', 'or', 'other', 'mumbo', 'jumbo.</p><br>', '<br>', '<a', 'class=""button', 'button-primary""', 'href=""upload"">Upload</a>', '</div>', '</div>', '</div>', '</body>', '</html>```']",challenge not surrounded by ''': ,
"#!/bin/bash

qsub -v A=""/home/pmotter/work/trilinos-prediction/matrix_lists/supermic/np8/UF_1000_split.aa"",B=""/home/pmotter/work/results/np8_results_aa"" ./supermic_np8.sh 
qsub -v A=""/home/pmotter/work/trilinos-prediction/matrix_lists/supermic/np8/UF_1000_split.ab"",B=""/home/pmotter/work/results/np8_results_ab"" ./supermic_np8.sh 
qsub -v A=""/home/pmotter/work/trilinos-prediction/matrix_lists/supermic/np8/UF_1000_split.ac"",B=""/home/pmotter/work/results/np8_results_ac"" ./supermic_np8.sh 
qsub -v A=""/home/pmotter/work/trilinos-prediction/matrix_lists/supermic/np8/UF_1000_split.ad"",B=""/home/pmotter/work/results/np8_results_ad"" ./supermic_np8.sh 
qsub -v A=""/home/pmotter/work/trilinos-prediction/matrix_lists/supermic/np8/UF_1000_split.ae"",B=""/home/pmotter/work/results/np8_results_ae"" ./supermic_np8.sh 
qsub -v A=""/home/pmotter/work/trilinos-prediction/matrix_lists/supermic/np8/UF_1000_split.af"",B=""/home/pmotter/work/results/np8_results_af"" ./supermic_np8.sh 
qsub -v A=""/home/pmotter/work/trilinos-prediction/matrix_lists/supermic/np8/UF_1000_split.ag"",B=""/home/pmotter/work/results/np8_results_ag"" ./supermic_np8.sh 
qsub -v A=""/home/pmotter/work/trilinos-prediction/matrix_lists/supermic/np8/UF_1000_split.ah"",B=""/home/pmotter/work/results/np8_results_ah"" ./supermic_np8.sh 
qsub -v A=""/home/pmotter/work/trilinos-prediction/matrix_lists/supermic/np8/UF_1000_split.ai"",B=""/home/pmotter/work/results/np8_results_ai"" ./supermic_np8.sh 
qsub -v A=""/home/pmotter/work/trilinos-prediction/matrix_lists/supermic/np8/UF_1000_split.aj"",B=""/home/pmotter/work/results/np8_results_aj"" ./supermic_np8.sh 
qsub -v A=""/home/pmotter/work/trilinos-prediction/matrix_lists/supermic/np8/UF_1000_split.ak"",B=""/home/pmotter/work/results/np8_results_ak"" ./supermic_np8.sh 
qsub -v A=""/home/pmotter/work/trilinos-prediction/matrix_lists/supermic/np8/UF_1000_split.al"",B=""/home/pmotter/work/results/np8_results_al"" ./supermic_np8.sh 
qsub -v A=""/home/pmotter/work/trilinos-prediction/matrix_lists/supermic/np8/UF_1000_split.am"",B=""/home/pmotter/work/results/np8_results_am"" ./supermic_np8.sh 
qsub -v A=""/home/pmotter/work/trilinos-prediction/matrix_lists/supermic/np8/UF_1000_split.an"",B=""/home/pmotter/work/results/np8_results_an"" ./supermic_np8.sh 
qsub -v A=""/home/pmotter/work/trilinos-prediction/matrix_lists/supermic/np8/UF_1000_split.ao"",B=""/home/pmotter/work/results/np8_results_ao"" ./supermic_np8.sh 
qsub -v A=""/home/pmotter/work/trilinos-prediction/matrix_lists/supermic/np8/UF_1000_split.ap"",B=""/home/pmotter/work/results/np8_results_ap"" ./supermic_np8.sh 
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/bin/bash', 'qsub', '-v', 'A=""/home/pmotter/work/trilinos-prediction/matrix_lists/supermic/np8/UF_1000_split.aa"",B=""/home/pmotter/work/results/np8_results_aa""', './supermic_np8.sh', 'qsub', '-v', 'A=""/home/pmotter/work/trilinos-prediction/matrix_lists/supermic/np8/UF_1000_split.ab"",B=""/home/pmotter/work/results/np8_results_ab""', './supermic_np8.sh', 'qsub', '-v', 'A=""/home/pmotter/work/trilinos-prediction/matrix_lists/supermic/np8/UF_1000_split.ac"",B=""/home/pmotter/work/results/np8_results_ac""', './supermic_np8.sh', 'qsub', '-v', 'A=""/home/pmotter/work/trilinos-prediction/matrix_lists/supermic/np8/UF_1000_split.ad"",B=""/home/pmotter/work/results/np8_results_ad""', './supermic_np8.sh', 'qsub', '-v', 'A=""/home/pmotter/work/trilinos-prediction/matrix_lists/supermic/np8/UF_1000_split.ae"",B=""/home/pmotter/work/results/np8_results_ae""', './supermic_np8.sh', 'qsub', '-v', 'A=""/home/pmotter/work/trilinos-prediction/matrix_lists/supermic/np8/UF_1000_split.af"",B=""/home/pmotter/work/results/np8_results_af""', './supermic_np8.sh', 'qsub', '-v', 'A=""/home/pmotter/work/trilinos-prediction/matrix_lists/supermic/np8/UF_1000_split.ag"",B=""/home/pmotter/work/results/np8_results_ag""', './supermic_np8.sh', 'qsub', '-v', 'A=""/home/pmotter/work/trilinos-prediction/matrix_lists/supermic/np8/UF_1000_split.ah"",B=""/home/pmotter/work/results/np8_results_ah""', './supermic_np8.sh', 'qsub', '-v', 'A=""/home/pmotter/work/trilinos-prediction/matrix_lists/supermic/np8/UF_1000_split.ai"",B=""/home/pmotter/work/results/np8_results_ai""', './supermic_np8.sh', 'qsub', '-v', 'A=""/home/pmotter/work/trilinos-prediction/matrix_lists/supermic/np8/UF_1000_split.aj"",B=""/home/pmotter/work/results/np8_results_aj""', './supermic_np8.sh', 'qsub', '-v', 'A=""/home/pmotter/work/trilinos-prediction/matrix_lists/supermic/np8/UF_1000_split.ak"",B=""/home/pmotter/work/results/np8_results_ak""', './supermic_np8.sh', 'qsub', '-v', 'A=""/home/pmotter/work/trilinos-prediction/matrix_lists/supermic/np8/UF_1000_split.al"",B=""/home/pmotter/work/results/np8_results_al""', './supermic_np8.sh', 'qsub', '-v', 'A=""/home/pmotter/work/trilinos-prediction/matrix_lists/supermic/np8/UF_1000_split.am"",B=""/home/pmotter/work/results/np8_results_am""', './supermic_np8.sh', 'qsub', '-v', 'A=""/home/pmotter/work/trilinos-prediction/matrix_lists/supermic/np8/UF_1000_split.an"",B=""/home/pmotter/work/results/np8_results_an""', './supermic_np8.sh', 'qsub', '-v', 'A=""/home/pmotter/work/trilinos-prediction/matrix_lists/supermic/np8/UF_1000_split.ao"",B=""/home/pmotter/work/results/np8_results_ao""', './supermic_np8.sh', 'qsub', '-v', 'A=""/home/pmotter/work/trilinos-prediction/matrix_lists/supermic/np8/UF_1000_split.ap"",B=""/home/pmotter/work/results/np8_results_ap""', './supermic_np8.sh', '```']",challenge not surrounded by ''': ,
"/**
 * @file
 * @copyright 2020 Aleksej Komarov
 * @license MIT
 */

import { createLogger } from 'common/logging.js';
import fs from 'fs';
import { createRequire } from 'module';
import { promisify } from 'util';
import webpack from 'webpack';
import { broadcastMessage, loadSourceMaps, setupLink } from './link/server.js';
import { reloadByondCache } from './reloader.js';
import { resolveGlob } from './util.js';

const logger = createLogger('webpack');

export const getWebpackConfig = async options => {
  const require = createRequire(import.meta.url);
  const createConfig = await require('../tgui/webpack.config.js');
  return createConfig({}, options);
};

export const setupWebpack = async config => {
  logger.log('setting up');
  const bundleDir = config.output.path;
  // Setup link
  const link = setupLink();
  // Instantiate the compiler
  const compiler = webpack(config);
  // Clear garbage before compiling
  compiler.hooks.watchRun.tapPromise('tgui-dev-server', async () => {
    const files = await resolveGlob(bundleDir, './*.hot-update.*');
    logger.log(`clearing garbage (${files.length} files)`);
    for (let file of files) {
      await promisify(fs.unlink)(file);
    }
    logger.log('compiling');
  });
  // Start reloading when it's finished
  compiler.hooks.done.tap('tgui-dev-server', async stats => {
    // Load source maps
    await loadSourceMaps(bundleDir);
    // Reload cache
    await reloadByondCache(bundleDir);
    // Notify all clients that update has happened
    broadcastMessage(link, {
      type: 'hotUpdate',
    });
  });
  // Start watching
  logger.log('watching for changes');
  compiler.watch({}, (err, stats) => {
    if (err) {
      logger.error('compilation error', err);
      return;
    }
    logger.log(stats.toString(config.devServer.stats));
  });
};
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', '@file', '*', '@copyright', '2020', 'Aleksej', 'Komarov', '*', '@license', 'MIT', '*/', 'import', '{', 'createLogger', '}', 'from', ""'common/logging.js';"", 'import', 'fs', 'from', ""'fs';"", 'import', '{', 'createRequire', '}', 'from', ""'module';"", 'import', '{', 'promisify', '}', 'from', ""'util';"", 'import', 'webpack', 'from', ""'webpack';"", 'import', '{', 'broadcastMessage,', 'loadSourceMaps,', 'setupLink', '}', 'from', ""'./link/server.js';"", 'import', '{', 'reloadByondCache', '}', 'from', ""'./reloader.js';"", 'import', '{', 'resolveGlob', '}', 'from', ""'./util.js';"", 'const', 'logger', '=', ""createLogger('webpack');"", 'export', 'const', 'getWebpackConfig', '=', 'async', 'options', '=>', '{', 'const', 'require', '=', 'createRequire(import.meta.url);', 'const', 'createConfig', '=', 'await', ""require('../tgui/webpack.config.js');"", 'return', 'createConfig({},', 'options);', '};', 'export', 'const', 'setupWebpack', '=', 'async', 'config', '=>', '{', ""logger.log('setting"", ""up');"", 'const', 'bundleDir', '=', 'config.output.path;', '//', 'Setup', 'link', 'const', 'link', '=', 'setupLink();', '//', 'Instantiate', 'the', 'compiler', 'const', 'compiler', '=', 'webpack(config);', '//', 'Clear', 'garbage', 'before', 'compiling', ""compiler.hooks.watchRun.tapPromise('tgui-dev-server',"", 'async', '()', '=>', '{', 'const', 'files', '=', 'await', 'resolveGlob(bundleDir,', ""'./*.hot-update.*');"", 'logger.log(`clearing', 'garbage', '(${files.length}', 'files)`);', 'for', '(let', 'file', 'of', 'files)', '{', 'await', 'promisify(fs.unlink)(file);', '}', ""logger.log('compiling');"", '});', '//', 'Start', 'reloading', 'when', ""it's"", 'finished', ""compiler.hooks.done.tap('tgui-dev-server',"", 'async', 'stats', '=>', '{', '//', 'Load', 'source', 'maps', 'await', 'loadSourceMaps(bundleDir);', '//', 'Reload', 'cache', 'await', 'reloadByondCache(bundleDir);', '//', 'Notify', 'all', 'clients', 'that', 'update', 'has', 'happened', 'broadcastMessage(link,', '{', 'type:', ""'hotUpdate',"", '});', '});', '//', 'Start', 'watching', ""logger.log('watching"", 'for', ""changes');"", 'compiler.watch({},', '(err,', 'stats)', '=>', '{', 'if', '(err)', '{', ""logger.error('compilation"", ""error',"", 'err);', 'return;', '}', 'logger.log(stats.toString(config.devServer.stats));', '});', '};', '```']",challenge not surrounded by ''': ,
"/**
 * Shopware 4.0
 * Copyright © 2012 shopware AG
 *
 * According to our dual licensing model, this program can be used either
 * under the terms of the GNU Affero General Public License, version 3,
 * or under a proprietary license.
 *
 * The texts of the GNU Affero General Public License with an additional
 * permission and of our proprietary license can be found at and
 * in the LICENSE file you have received along with this program.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Affero General Public License for more details.
 *
 * ""Shopware"" is a registered trademark of shopware AG.
 * The licensing of the program under the AGPLv3 does not imply a
 * trademark license. Therefore any rights, title and interest in
 * our trademarks remain entirely with us.
 */

/**
 * todo@all: Documentation
 */

//{block name=""backend/config/store/base/page_group""}
Ext.define('Shopware.apps.Config.store.base.PageGroup', {
    extend: 'Ext.data.Store',
    model: 'Shopware.apps.Config.model.form.PageGroup',
    pageSize: 1000,
    proxy: {
        type: 'ajax',
        url: '{url action=getList name=pageGroup}',
        reader: {
            type: 'json',
            root: 'data'
        }
    }
});
//{/block}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', 'Shopware', '4.0', '*', 'Copyright', '©', '2012', 'shopware', 'AG', '*', '*', 'According', 'to', 'our', 'dual', 'licensing', 'model,', 'this', 'program', 'can', 'be', 'used', 'either', '*', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'Affero', 'General', 'Public', 'License,', 'version', '3,', '*', 'or', 'under', 'a', 'proprietary', 'license.', '*', '*', 'The', 'texts', 'of', 'the', 'GNU', 'Affero', 'General', 'Public', 'License', 'with', 'an', 'additional', '*', 'permission', 'and', 'of', 'our', 'proprietary', 'license', 'can', 'be', 'found', 'at', 'and', '*', 'in', 'the', 'LICENSE', 'file', 'you', 'have', 'received', 'along', 'with', 'this', 'program.', '*', '*', 'This', 'program', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', '*', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', '*', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', '*', 'GNU', 'Affero', 'General', 'Public', 'License', 'for', 'more', 'details.', '*', '*', '""Shopware""', 'is', 'a', 'registered', 'trademark', 'of', 'shopware', 'AG.', '*', 'The', 'licensing', 'of', 'the', 'program', 'under', 'the', 'AGPLv3', 'does', 'not', 'imply', 'a', '*', 'trademark', 'license.', 'Therefore', 'any', 'rights,', 'title', 'and', 'interest', 'in', '*', 'our', 'trademarks', 'remain', 'entirely', 'with', 'us.', '*/', '/**', '*', 'todo@all:', 'Documentation', '*/', '//{block', 'name=""backend/config/store/base/page_group""}', ""Ext.define('Shopware.apps.Config.store.base.PageGroup',"", '{', 'extend:', ""'Ext.data.Store',"", 'model:', ""'Shopware.apps.Config.model.form.PageGroup',"", 'pageSize:', '1000,', 'proxy:', '{', 'type:', ""'ajax',"", 'url:', ""'{url"", 'action=getList', ""name=pageGroup}',"", 'reader:', '{', 'type:', ""'json',"", 'root:', ""'data'"", '}', '}', '});', '//{/block}', '```']",challenge not surrounded by ''': ,
"import React, { Component, PropTypes } from ""react"";
import { bindActionCreators } from 'redux';
import { connect } from 'react-redux';
import AddItem from './AddItem';
import ItemList from './ItemList';
import Footer from './Footer';
import Header from './Header';
import * as ItemActions from '../actions/ItemActions';

class Application extends Component {
  render() {
    // Injected by connect() call:
    const { dispatch, items } = this.props;
    const actions = bindActionCreators(ItemActions, dispatch);

    return (
      <div className=""row panel panel-default"">
        <div className=""col-md-8 col-md-offset-2"">
          <h2 className=""text-center"">
            GSD List
          </h2>
          <Header addItem={actions.addItem} />
          <ItemList items={items} />
        </div>
      </div>
    );
  }
}

Application.propTypes = {
  items: PropTypes.array.isRequired,
  dispatch: PropTypes.func.isRequired
};

function mapStateToProps(state) {
  return {
    items: state.items
  };
}

export default connect(mapStateToProps)(Application);
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'React,', '{', 'Component,', 'PropTypes', '}', 'from', '""react"";', 'import', '{', 'bindActionCreators', '}', 'from', ""'redux';"", 'import', '{', 'connect', '}', 'from', ""'react-redux';"", 'import', 'AddItem', 'from', ""'./AddItem';"", 'import', 'ItemList', 'from', ""'./ItemList';"", 'import', 'Footer', 'from', ""'./Footer';"", 'import', 'Header', 'from', ""'./Header';"", 'import', '*', 'as', 'ItemActions', 'from', ""'../actions/ItemActions';"", 'class', 'Application', 'extends', 'Component', '{', 'render()', '{', '//', 'Injected', 'by', 'connect()', 'call:', 'const', '{', 'dispatch,', 'items', '}', '=', 'this.props;', 'const', 'actions', '=', 'bindActionCreators(ItemActions,', 'dispatch);', 'return', '(', '<div', 'className=""row', 'panel', 'panel-default"">', '<div', 'className=""col-md-8', 'col-md-offset-2"">', '<h2', 'className=""text-center"">', 'GSD', 'List', '</h2>', '<Header', 'addItem={actions.addItem}', '/>', '<ItemList', 'items={items}', '/>', '</div>', '</div>', ');', '}', '}', 'Application.propTypes', '=', '{', 'items:', 'PropTypes.array.isRequired,', 'dispatch:', 'PropTypes.func.isRequired', '};', 'function', 'mapStateToProps(state)', '{', 'return', '{', 'items:', 'state.items', '};', '}', 'export', 'default', 'connect(mapStateToProps)(Application);', '```']",challenge not surrounded by ''': ,
"<%!
from src.util import url
%>
<%include file=""/pageheader.html""/>
<h2>Add Event</h2>
<title>Add Event</title>
<section>
<p class =""help"">The new event will be empty and immediately loaded.</p>
<hr>
<form action=""/modules/module/${url(module)}/addresourcetarget/event/${url(path)}"" method=""POST"" name=""new"">
<h3>Name</h3><input required=""required"" name=""name"" class=""name"" type=""text""></input><br>
<br><input value=""Create Event"" type=""submit"">
</form>
</section>

<%include file=""/pagefooter.html""/>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<%!', 'from', 'src.util', 'import', 'url', '%>', '<%include', 'file=""/pageheader.html""/>', '<h2>Add', 'Event</h2>', '<title>Add', 'Event</title>', '<section>', '<p', 'class', '=""help"">The', 'new', 'event', 'will', 'be', 'empty', 'and', 'immediately', 'loaded.</p>', '<hr>', '<form', 'action=""/modules/module/${url(module)}/addresourcetarget/event/${url(path)}""', 'method=""POST""', 'name=""new"">', '<h3>Name</h3><input', 'required=""required""', 'name=""name""', 'class=""name""', 'type=""text""></input><br>', '<br><input', 'value=""Create', 'Event""', 'type=""submit"">', '</form>', '</section>', '<%include', 'file=""/pagefooter.html""/>', '```']",challenge not surrounded by ''': ,
"/*!
 * apiai
 * Copyright(c) 2015 http://api.ai/
 * Apache 2.0 Licensed
 */

'use strict';

var QueryRequest = require('./query_request').QueryRequest;
var util = require('util');

exports.EventRequest = module.exports.EventRequest = EventRequest;

util.inherits(EventRequest, QueryRequest);

function EventRequest(application, event, options) {
    EventRequest.super_.apply(this, [application, options]);

    var self = this;
    self.event = event;
}

EventRequest.prototype._headers = function() {
    var headers = EventRequest.super_.prototype._headers.apply(this, arguments);

    headers['Content-Type'] = 'application/json; charset=utf-8';

    return headers;
};

EventRequest.prototype._jsonRequestParameters = function() {
    var self = this;

    var json = EventRequest.super_.prototype._jsonRequestParameters.apply(this, arguments);

    json.event = self.event;

    return json;
};

EventRequest.prototype.end = function() {
    var self = this;

    self.write(JSON.stringify(self._jsonRequestParameters()));

    EventRequest.super_.prototype.end.apply(this, arguments);
};
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*!', '*', 'apiai', '*', 'Copyright(c)', '2015', 'http://api.ai/', '*', 'Apache', '2.0', 'Licensed', '*/', ""'use"", ""strict';"", 'var', 'QueryRequest', '=', ""require('./query_request').QueryRequest;"", 'var', 'util', '=', ""require('util');"", 'exports.EventRequest', '=', 'module.exports.EventRequest', '=', 'EventRequest;', 'util.inherits(EventRequest,', 'QueryRequest);', 'function', 'EventRequest(application,', 'event,', 'options)', '{', 'EventRequest.super_.apply(this,', '[application,', 'options]);', 'var', 'self', '=', 'this;', 'self.event', '=', 'event;', '}', 'EventRequest.prototype._headers', '=', 'function()', '{', 'var', 'headers', '=', 'EventRequest.super_.prototype._headers.apply(this,', 'arguments);', ""headers['Content-Type']"", '=', ""'application/json;"", ""charset=utf-8';"", 'return', 'headers;', '};', 'EventRequest.prototype._jsonRequestParameters', '=', 'function()', '{', 'var', 'self', '=', 'this;', 'var', 'json', '=', 'EventRequest.super_.prototype._jsonRequestParameters.apply(this,', 'arguments);', 'json.event', '=', 'self.event;', 'return', 'json;', '};', 'EventRequest.prototype.end', '=', 'function()', '{', 'var', 'self', '=', 'this;', 'self.write(JSON.stringify(self._jsonRequestParameters()));', 'EventRequest.super_.prototype.end.apply(this,', 'arguments);', '};', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH
 * under one or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information regarding copyright
 * ownership. Camunda licenses this file to you under the Apache License,
 * Version 2.0; you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.camunda.bpm.model.bpmn.builder;

import org.camunda.bpm.model.bpmn.BpmnModelInstance;
import org.camunda.bpm.model.bpmn.instance.InclusiveGateway;
import org.camunda.bpm.model.bpmn.instance.SequenceFlow;

/**
 * @author Sebastian Menski
 */
public abstract class AbstractInclusiveGatewayBuilder<B extends AbstractInclusiveGatewayBuilder<B>> extends AbstractGatewayBuilder<B, InclusiveGateway> {

  protected AbstractInclusiveGatewayBuilder(BpmnModelInstance modelInstance, InclusiveGateway element, Class<?> selfType) {
    super(modelInstance, element, selfType);
  }

  /**
   * Sets the default sequence flow for the build inclusive gateway.
   *
   * @param sequenceFlow  the default sequence flow to set
   * @return the builder object
   */
  public B defaultFlow(SequenceFlow sequenceFlow) {
    element.setDefault(sequenceFlow);
    return myself;
  }

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', 'Camunda', 'Services', 'GmbH', 'and/or', 'licensed', 'to', 'Camunda', 'Services', 'GmbH', '*', 'under', 'one', 'or', 'more', 'contributor', 'license', 'agreements.', 'See', 'the', 'NOTICE', 'file', '*', 'distributed', 'with', 'this', 'work', 'for', 'additional', 'information', 'regarding', 'copyright', '*', 'ownership.', 'Camunda', 'licenses', 'this', 'file', 'to', 'you', 'under', 'the', 'Apache', 'License,', '*', 'Version', '2.0;', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'org.camunda.bpm.model.bpmn.builder;', 'import', 'org.camunda.bpm.model.bpmn.BpmnModelInstance;', 'import', 'org.camunda.bpm.model.bpmn.instance.InclusiveGateway;', 'import', 'org.camunda.bpm.model.bpmn.instance.SequenceFlow;', '/**', '*', '@author', 'Sebastian', 'Menski', '*/', 'public', 'abstract', 'class', 'AbstractInclusiveGatewayBuilder<B', 'extends', 'AbstractInclusiveGatewayBuilder<B>>', 'extends', 'AbstractGatewayBuilder<B,', 'InclusiveGateway>', '{', 'protected', 'AbstractInclusiveGatewayBuilder(BpmnModelInstance', 'modelInstance,', 'InclusiveGateway', 'element,', 'Class<?>', 'selfType)', '{', 'super(modelInstance,', 'element,', 'selfType);', '}', '/**', '*', 'Sets', 'the', 'default', 'sequence', 'flow', 'for', 'the', 'build', 'inclusive', 'gateway.', '*', '*', '@param', 'sequenceFlow', 'the', 'default', 'sequence', 'flow', 'to', 'set', '*', '@return', 'the', 'builder', 'object', '*/', 'public', 'B', 'defaultFlow(SequenceFlow', 'sequenceFlow)', '{', 'element.setDefault(sequenceFlow);', 'return', 'myself;', '}', '}', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE html>
<html class=""no-skrollr"">
<head>
	<meta charset=""utf-8"" />

	<title>skrollr test suite</title>

	<link rel=""stylesheet"" type=""text/css"" href=""qunit.css"" />

	<style type=""text/css"">
	#qunit {
		position:fixed;
		bottom:0;
		left:0;
		right:0;
		height:50%;
		overflow:auto;
		z-index:101;
	}

	#anchor-1, #anchor-2 {
		height:1000px;
		background:#ccc;
		position:absolute;
		top:0;
	}

	#foreign-anchor {
		margin:100px;
		padding:100px;
		background:#ff0;
		position:fixed;
	}

	#float {
		position:static !important;
	}

	div {position:absolute;}
	</style>

	<script src=""../src/skrollr.js"" type=""text/javascript""></script>
</head>
<body class=""notransition"">
	<div id=""end"" data-start=""font-size:10px;"" data-end=""font-size:90px;"">TEST</div>
	<div id=""simple-numeric"" data-_myconst--300=""  	left:-100px; top:0px	"" data-_myconst-200-start=""  top:50px; 		 left:100px; "">TEST</div>
	<div id=""compound-numeric"" data-_my500--500=""margin:0px 10px 20px 30px;"" data-_my500=""margin:30px 20px 10px 0px;"">TEST</div>
	<div id=""rgb-color"" data-0=""color:rgb(0,0,0);"" data-500=""color:rgb(50,100,150);"">TEST</div>
	<div id=""rgba-color"" data-0=""color:rgba(0,0,0,.2);"" data-500=""color:rgba(50,100,150,.5);"">TEST</div>
	<div id=""hsl-color"" data-0=""color:hsl(0,0%,0%);"" data-500=""color:hsl(3600,50%,50%);"">TEST</div>
	<div id=""hsla-color"" data-0=""color:hsla(0,0%,0%,.0);"" data-500=""color:hsla(3600,50%,50%,.5);"">TEST</div>
	<div id=""no-interpolation"" data-0=""right:!0px;"" data-499=""right:!100px;"">TEST</div>
	<div id=""anchor-1"" data-top-bottom=""right:100px;"" data-top=""right:0px;"">TEST</div>
	<div id=""anchor-2"" data-top=""right:0px;"" data-top-center=""right:200px;"">TEST</div>
	<div id=""foreign-anchor"" data-top=""padding:200px;"" data-top-center=""padding:100px;"" data-anchor-target=""#anchor-2""></div>
	<div id=""float"" data-start=""float:none;"" data-499=""float:left;"" style=""background:red;"">TEST</div>

	<svg version=""1.1"" width=""200px"" height=""200px"">
		<rect
			width=""200"" height=""200"" style=""fill:#0000ff;fill-rule:evenodd;stroke:none""
			id=""svg-relative-mode""
			data-top=""margin:100px;"" data-top-bottom=""margin:200px;"" />
	</svg>

	<div id=""colon-url"" data-250=""background-image:!none;"" data-499='background-image:!url(""https://secure.travis-ci.org/Prinzhorn/skrollr.png"");'>TEST</div>
	<div id=""period-number"" data-250=""background-image:!none;"" data-499='background-image:!url(""https://secure.travis-ci.org/Prinzhorn/skrollr.png?1337"");'>TEST</div>

	<div id=""easing"" data-0=""left[half1]:0px;"" data-500=""left[half1]:50px;"">TEST</div>
	<div id=""easing_with_easing_strategy"" data-0=""left[half1]:0px;"" data-500=""left[half1]:50px;"" data-edge-strategy=""ease"">TEST</div>

	<div id=""reset-strategy"" data-0=""left:0px;"" data-500=""left:50px;"" data-edge-strategy=""reset"" style=""left:1337px;"">TEST</div>

	<div id=""qunit""></div>

	<script src=""qunit.js"" type=""text/javascript""></script>
	<script src=""qunit-numeric-css-property-equals.js"" type=""text/javascript""></script>
	<script src=""jquery.js"" type=""text/javascript""></script>
	<!--[if lt IE 9]>
	<script type=""text/javascript"" src=""../src/plugins/skrollr.ie.js""></script>
	<![endif]-->
	<script src=""tests.js"" type=""text/javascript""></script>
</body>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'html>', '<html', 'class=""no-skrollr"">', '<head>', '<meta', 'charset=""utf-8""', '/>', '<title>skrollr', 'test', 'suite</title>', '<link', 'rel=""stylesheet""', 'type=""text/css""', 'href=""qunit.css""', '/>', '<style', 'type=""text/css"">', '#qunit', '{', 'position:fixed;', 'bottom:0;', 'left:0;', 'right:0;', 'height:50%;', 'overflow:auto;', 'z-index:101;', '}', '#anchor-1,', '#anchor-2', '{', 'height:1000px;', 'background:#ccc;', 'position:absolute;', 'top:0;', '}', '#foreign-anchor', '{', 'margin:100px;', 'padding:100px;', 'background:#ff0;', 'position:fixed;', '}', '#float', '{', 'position:static', '!important;', '}', 'div', '{position:absolute;}', '</style>', '<script', 'src=""../src/skrollr.js""', 'type=""text/javascript""></script>', '</head>', '<body', 'class=""notransition"">', '<div', 'id=""end""', 'data-start=""font-size:10px;""', 'data-end=""font-size:90px;"">TEST</div>', '<div', 'id=""simple-numeric""', 'data-_myconst--300=""', 'left:-100px;', 'top:0px', '""', 'data-_myconst-200-start=""', 'top:50px;', 'left:100px;', '"">TEST</div>', '<div', 'id=""compound-numeric""', 'data-_my500--500=""margin:0px', '10px', '20px', '30px;""', 'data-_my500=""margin:30px', '20px', '10px', '0px;"">TEST</div>', '<div', 'id=""rgb-color""', 'data-0=""color:rgb(0,0,0);""', 'data-500=""color:rgb(50,100,150);"">TEST</div>', '<div', 'id=""rgba-color""', 'data-0=""color:rgba(0,0,0,.2);""', 'data-500=""color:rgba(50,100,150,.5);"">TEST</div>', '<div', 'id=""hsl-color""', 'data-0=""color:hsl(0,0%,0%);""', 'data-500=""color:hsl(3600,50%,50%);"">TEST</div>', '<div', 'id=""hsla-color""', 'data-0=""color:hsla(0,0%,0%,.0);""', 'data-500=""color:hsla(3600,50%,50%,.5);"">TEST</div>', '<div', 'id=""no-interpolation""', 'data-0=""right:!0px;""', 'data-499=""right:!100px;"">TEST</div>', '<div', 'id=""anchor-1""', 'data-top-bottom=""right:100px;""', 'data-top=""right:0px;"">TEST</div>', '<div', 'id=""anchor-2""', 'data-top=""right:0px;""', 'data-top-center=""right:200px;"">TEST</div>', '<div', 'id=""foreign-anchor""', 'data-top=""padding:200px;""', 'data-top-center=""padding:100px;""', 'data-anchor-target=""#anchor-2""></div>', '<div', 'id=""float""', 'data-start=""float:none;""', 'data-499=""float:left;""', 'style=""background:red;"">TEST</div>', '<svg', 'version=""1.1""', 'width=""200px""', 'height=""200px"">', '<rect', 'width=""200""', 'height=""200""', 'style=""fill:#0000ff;fill-rule:evenodd;stroke:none""', 'id=""svg-relative-mode""', 'data-top=""margin:100px;""', 'data-top-bottom=""margin:200px;""', '/>', '</svg>', '<div', 'id=""colon-url""', 'data-250=""background-image:!none;""', 'data-499=\'background-image:!url(""https://secure.travis-ci.org/Prinzhorn/skrollr.png"");\'>TEST</div>', '<div', 'id=""period-number""', 'data-250=""background-image:!none;""', 'data-499=\'background-image:!url(""https://secure.travis-ci.org/Prinzhorn/skrollr.png?1337"");\'>TEST</div>', '<div', 'id=""easing""', 'data-0=""left[half1]:0px;""', 'data-500=""left[half1]:50px;"">TEST</div>', '<div', 'id=""easing_with_easing_strategy""', 'data-0=""left[half1]:0px;""', 'data-500=""left[half1]:50px;""', 'data-edge-strategy=""ease"">TEST</div>', '<div', 'id=""reset-strategy""', 'data-0=""left:0px;""', 'data-500=""left:50px;""', 'data-edge-strategy=""reset""', 'style=""left:1337px;"">TEST</div>', '<div', 'id=""qunit""></div>', '<script', 'src=""qunit.js""', 'type=""text/javascript""></script>', '<script', 'src=""qunit-numeric-css-property-equals.js""', 'type=""text/javascript""></script>', '<script', 'src=""jquery.js""', 'type=""text/javascript""></script>', '<!--[if', 'lt', 'IE', '9]>', '<script', 'type=""text/javascript""', 'src=""../src/plugins/skrollr.ie.js""></script>', '<![endif]-->', '<script', 'src=""tests.js""', 'type=""text/javascript""></script>', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"package org.bukkit.event.block;

import org.bukkit.block.Block;
import org.bukkit.entity.Player;
import org.bukkit.event.Cancellable;

/**
 *
 * @author Meaglin
 */
public class BlockBreakEvent extends BlockEvent implements Cancellable {

    private Player player;
    private boolean cancel;

    public BlockBreakEvent(final Block theBlock, Player player) {
        super(Type.BLOCK_BREAK, theBlock);
        this.player = player;
        this.cancel = false;
    }

    /**
     * Returns the player doing the damage
     *
     * @return
     */
    public Player getPlayer() {
        return player;
    }

    public boolean isCancelled() {
        return cancel;
    }

    public void setCancelled(boolean cancel) {
        this.cancel = cancel;
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'org.bukkit.event.block;', 'import', 'org.bukkit.block.Block;', 'import', 'org.bukkit.entity.Player;', 'import', 'org.bukkit.event.Cancellable;', '/**', '*', '*', '@author', 'Meaglin', '*/', 'public', 'class', 'BlockBreakEvent', 'extends', 'BlockEvent', 'implements', 'Cancellable', '{', 'private', 'Player', 'player;', 'private', 'boolean', 'cancel;', 'public', 'BlockBreakEvent(final', 'Block', 'theBlock,', 'Player', 'player)', '{', 'super(Type.BLOCK_BREAK,', 'theBlock);', 'this.player', '=', 'player;', 'this.cancel', '=', 'false;', '}', '/**', '*', 'Returns', 'the', 'player', 'doing', 'the', 'damage', '*', '*', '@return', '*/', 'public', 'Player', 'getPlayer()', '{', 'return', 'player;', '}', 'public', 'boolean', 'isCancelled()', '{', 'return', 'cancel;', '}', 'public', 'void', 'setCancelled(boolean', 'cancel)', '{', 'this.cancel', '=', 'cancel;', '}', '}', '```']",challenge not surrounded by ''': ,
"<% if(autoRoute) { %><section id=""<%= dashedName %>-content"" layout=""column"" layout-fill flex>
  <div ui-view layout=""row"" layout-fill flex></div>
</section><% } else {%><div id=""<%= dashedName %>-content"">
  This is the <%= name %> view.
  My controller can do something: ""{{ vm.doSomething() }}""
</div><% }%>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<%', 'if(autoRoute)', '{', '%><section', 'id=""<%=', 'dashedName', '%>-content""', 'layout=""column""', 'layout-fill', 'flex>', '<div', 'ui-view', 'layout=""row""', 'layout-fill', 'flex></div>', '</section><%', '}', 'else', '{%><div', 'id=""<%=', 'dashedName', '%>-content"">', 'This', 'is', 'the', '<%=', 'name', '%>', 'view.', 'My', 'controller', 'can', 'do', 'something:', '""{{', 'vm.doSomething()', '}}""', '</div><%', '}%>', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
<html xmlns='http://www.w3.org/1999/xhtml' lang='he' dir='rtl'>
<head>
<meta http-equiv='Content-Type' content='text/html; charset=windows-1255' />
<meta http-equiv='Content-Script-Type' content='text/javascript' />
<meta http-equiv='revisit-after' content='15 days' />
<link rel='stylesheet' href='../../_script/klli.css' />
<link rel='stylesheet' href='../_themes/klli.css' />
<title>æä îæëéø ìé äùååàä àçøú </title>
<meta name='author' content="""" />
<meta name='receiver' content="""" />
<meta name='jmQovc' content=""tnk1/messages/7074"" />
<meta name='tvnit' content="""" />
<meta name='description' lang='he' content=""úâåáä"" />
<meta name='description' lang='en' content=""this page is in Hebrew"" />
<meta name='keywords' lang='he' content=""messages/7074.html,úâåáä"" />
</head><body class='tgwbh'><div class='pnim'>
<!--NiwutElyon0-->
<div class='NiwutElyon'>
</div>
<!--NiwutElyon1-->
<script type='text/javascript' src='../../_script/vars.js'></script>
<script type='text/javascript'>kotrt()</script>
</a> </div>
<h1 id='h1'>æä îæëéø ìé äùååàä àçøú </h1>
<div id='tokn'>
[ðùìç òì-éãé àìëñ á23:41:42&nbsp;&nbsp;02.09.2004, áúâåáä ì:
<a href=""../../tnk1/klli/mdrjim/srx.html"">äàéùä äçëîä îàáì-áéú-îòëä, ãáåøä äðáéàä åùøç-áú-àùø</a> ùðùìç òì-éãé àøàì]
<p><div class=""pyrwj"">éù îãøù äèåòï ëé àìéäå äåà ôéðçñ, äîãøù îðñä ìéùá àú
äòåáãä ùìôéðçñ äåáèçå çéé ðöç (æàú îñé÷éí äôøùðéí îáøéú äùìåí ùôéðçñ
÷éáì). åàí äåáèçå ìå çéé ðöç àæ àéôä äåà ðîöà éåúø îàåçø áäéñèåøéä,
ëîåáï ùáúåø àìéäå ùäéä ãåîä ìå áäøáä úëåðåú.
<br />àáì àðé äâòúé ìîñ÷ðä ùôéðçñ äéä çééá ìòæåá åìäúáãì îï äòí åø÷ ìàçø
îëï ìçæåø áúåø ãîåú çãùä åäéà àìéäå åàó ìùðåú àú ùîå (åéù âí äñáø ìëì
àçã îï äùîåú äàìå).
<br />àæ òëùéå áùáéì ìäôåê àú ääùååàä ìéåúø îåùìîú:
<br />îàéôä àúä îñé÷ ùìùøç äåáèçå çéé ðöç (àí ëê áëìì)?
<br />ìôé äôøùðéí ùèåòðéí ëé äàéùä äçëîä äéà ùøç, äí îñúîëéí äøáä òì ëê
ùäòéø ðîöàú áðçìú àùø, åàúä èåòï ùäéà òáøä îðçìä ìðçìä, îãåò äéà òùúä
æàú (ìàìéäå äéúä ñéáä), åàí ëê îãåò äéà çæøä ìðçìúä?
<br />îãåò äéà ùéðúä àú ùîä îùøç ìãáåøä?
<p>ð.á úîðú ñøç ð÷øàú âí úîðú çøñ áî÷åí àçø åäéà ð÷øàä ëê òåã áëðéñä ìàøõ, åìëï àéï ñéáä ìëê ùäòéø ú÷øä òì ùîä ùì ùøç.
<br />

<p>
</div>
</div><!--tokn-->
<h2 id='tguvot'>úâåáåú: </h2>
<ul id='ultguvot'>
</ul><!--end-->
<script type='text/javascript'>tguva(); txtit()</script>
</body></html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'html', 'PUBLIC', '""-//W3C//DTD', 'XHTML', '1.0', 'Transitional//EN""', '""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">', '<html', ""xmlns='http://www.w3.org/1999/xhtml'"", ""lang='he'"", ""dir='rtl'>"", '<head>', '<meta', ""http-equiv='Content-Type'"", ""content='text/html;"", ""charset=windows-1255'"", '/>', '<meta', ""http-equiv='Content-Script-Type'"", ""content='text/javascript'"", '/>', '<meta', ""http-equiv='revisit-after'"", ""content='15"", ""days'"", '/>', '<link', ""rel='stylesheet'"", ""href='../../_script/klli.css'"", '/>', '<link', ""rel='stylesheet'"", ""href='../_themes/klli.css'"", '/>', '<title>æä', 'îæëéø', 'ìé', 'äùååàä', 'àçøú', '</title>', '<meta', ""name='author'"", 'content=""""', '/>', '<meta', ""name='receiver'"", 'content=""""', '/>', '<meta', ""name='jmQovc'"", 'content=""tnk1/messages/7074""', '/>', '<meta', ""name='tvnit'"", 'content=""""', '/>', '<meta', ""name='description'"", ""lang='he'"", 'content=""úâåáä""', '/>', '<meta', ""name='description'"", ""lang='en'"", 'content=""this', 'page', 'is', 'in', 'Hebrew""', '/>', '<meta', ""name='keywords'"", ""lang='he'"", 'content=""messages/7074.html,úâåáä""', '/>', '</head><body', ""class='tgwbh'><div"", ""class='pnim'>"", '<!--NiwutElyon0-->', '<div', ""class='NiwutElyon'>"", '</div>', '<!--NiwutElyon1-->', '<script', ""type='text/javascript'"", ""src='../../_script/vars.js'></script>"", '<script', ""type='text/javascript'>kotrt()</script>"", '</a>', '</div>', '<h1', ""id='h1'>æä"", 'îæëéø', 'ìé', 'äùååàä', 'àçøú', '</h1>', '<div', ""id='tokn'>"", '[ðùìç', 'òì-éãé', 'àìëñ', 'á23:41:42&nbsp;&nbsp;02.09.2004,', 'áúâåáä', 'ì:', '<a', 'href=""../../tnk1/klli/mdrjim/srx.html"">äàéùä', 'äçëîä', 'îàáì-áéú-îòëä,', 'ãáåøä', 'äðáéàä', 'åùøç-áú-àùø</a>', 'ùðùìç', 'òì-éãé', 'àøàì]', '<p><div', 'class=""pyrwj"">éù', 'îãøù', 'äèåòï', 'ëé', 'àìéäå', 'äåà', 'ôéðçñ,', 'äîãøù', 'îðñä', 'ìéùá', 'àú', 'äòåáãä', 'ùìôéðçñ', 'äåáèçå', 'çéé', 'ðöç', '(æàú', 'îñé÷éí', 'äôøùðéí', 'îáøéú', 'äùìåí', 'ùôéðçñ', '÷éáì).', 'åàí', 'äåáèçå', 'ìå', 'çéé', 'ðöç', 'àæ', 'àéôä', 'äåà', 'ðîöà', 'éåúø', 'îàåçø', 'áäéñèåøéä,', 'ëîåáï', 'ùáúåø', 'àìéäå', 'ùäéä', 'ãåîä', 'ìå', 'áäøáä', 'úëåðåú.', '<br', '/>àáì', 'àðé', 'äâòúé', 'ìîñ÷ðä', 'ùôéðçñ', 'äéä', 'çééá', 'ìòæåá', 'åìäúáãì', 'îï', 'äòí', 'åø÷', 'ìàçø', 'îëï', 'ìçæåø', 'áúåø', 'ãîåú', 'çãùä', 'åäéà', 'àìéäå', 'åàó', 'ìùðåú', 'àú', 'ùîå', '(åéù', 'âí', 'äñáø', 'ìëì', 'àçã', 'îï', 'äùîåú', 'äàìå).', '<br', '/>àæ', 'òëùéå', 'áùáéì', 'ìäôåê', 'àú', 'ääùååàä', 'ìéåúø', 'îåùìîú:', '<br', '/>îàéôä', 'àúä', 'îñé÷', 'ùìùøç', 'äåáèçå', 'çéé', 'ðöç', '(àí', 'ëê', 'áëìì)?', '<br', '/>ìôé', 'äôøùðéí', 'ùèåòðéí', 'ëé', 'äàéùä', 'äçëîä', 'äéà', 'ùøç,', 'äí', 'îñúîëéí', 'äøáä', 'òì', 'ëê', 'ùäòéø', 'ðîöàú', 'áðçìú', 'àùø,', 'åàúä', 'èåòï', 'ùäéà', 'òáøä', 'îðçìä', 'ìðçìä,', 'îãåò', 'äéà', 'òùúä', 'æàú', '(ìàìéäå', 'äéúä', 'ñéáä),', 'åàí', 'ëê', 'îãåò', 'äéà', 'çæøä', 'ìðçìúä?', '<br', '/>îãåò', 'äéà', 'ùéðúä', 'àú', 'ùîä', 'îùøç', 'ìãáåøä?', '<p>ð.á', 'úîðú', 'ñøç', 'ð÷øàú', 'âí', 'úîðú', 'çøñ', 'áî÷åí', 'àçø', 'åäéà', 'ð÷øàä', 'ëê', 'òåã', 'áëðéñä', 'ìàøõ,', 'åìëï', 'àéï', 'ñéáä', 'ìëê', 'ùäòéø', 'ú÷øä', 'òì', 'ùîä', 'ùì', 'ùøç.', '<br', '/>', '<p>', '</div>', '</div><!--tokn-->', '<h2', ""id='tguvot'>úâåáåú:"", '</h2>', '<ul', ""id='ultguvot'>"", '</ul><!--end-->', '<script', ""type='text/javascript'>tguva();"", 'txtit()</script>', '</body></html>', '```']",challenge not surrounded by ''': ,
"package org.wtrader.cep.data.wrappers;

import java.util.List;

import javax.inject.Inject;
import javax.inject.Named;

import org.wtrader.cep.data.repositories.IBenefitTypeRepository;
import org.wtrader.cep.utils.data.entities.BenefitTypeEntity;
import org.wtrader.cep.utils.data.interfaces.IBenefitTypeData;

@Named
public class BenefitTypeData implements IBenefitTypeData {

	@Inject
	private IBenefitTypeRepository benefitTypeRepository;

	@Override
	public List<BenefitTypeEntity> findAll() {
		return this.benefitTypeRepository.findAll();
	}

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'org.wtrader.cep.data.wrappers;', 'import', 'java.util.List;', 'import', 'javax.inject.Inject;', 'import', 'javax.inject.Named;', 'import', 'org.wtrader.cep.data.repositories.IBenefitTypeRepository;', 'import', 'org.wtrader.cep.utils.data.entities.BenefitTypeEntity;', 'import', 'org.wtrader.cep.utils.data.interfaces.IBenefitTypeData;', '@Named', 'public', 'class', 'BenefitTypeData', 'implements', 'IBenefitTypeData', '{', '@Inject', 'private', 'IBenefitTypeRepository', 'benefitTypeRepository;', '@Override', 'public', 'List<BenefitTypeEntity>', 'findAll()', '{', 'return', 'this.benefitTypeRepository.findAll();', '}', '}', '```']",challenge not surrounded by ''': ,
"/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * ""License""); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.apache.hadoop.mapreduce.protocol;

import java.io.IOException;
import java.net.InetSocketAddress;

import org.apache.hadoop.classification.InterfaceAudience;
import org.apache.hadoop.conf.Configuration;

@InterfaceAudience.Private
public abstract class ClientProtocolProvider {
  
  public abstract ClientProtocol create(Configuration conf) throws IOException;
  
  public abstract ClientProtocol create(InetSocketAddress addr,
      Configuration conf) throws IOException;

  public abstract void close(ClientProtocol clientProtocol) throws IOException;

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', 'Licensed', 'to', 'the', 'Apache', 'Software', 'Foundation', '(ASF)', 'under', 'one', '*', 'or', 'more', 'contributor', 'license', 'agreements.', 'See', 'the', 'NOTICE', 'file', '*', 'distributed', 'with', 'this', 'work', 'for', 'additional', 'information', '*', 'regarding', 'copyright', 'ownership.', 'The', 'ASF', 'licenses', 'this', 'file', '*', 'to', 'you', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '*', '""License"");', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', '*', 'with', 'the', 'License.', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'org.apache.hadoop.mapreduce.protocol;', 'import', 'java.io.IOException;', 'import', 'java.net.InetSocketAddress;', 'import', 'org.apache.hadoop.classification.InterfaceAudience;', 'import', 'org.apache.hadoop.conf.Configuration;', '@InterfaceAudience.Private', 'public', 'abstract', 'class', 'ClientProtocolProvider', '{', 'public', 'abstract', 'ClientProtocol', 'create(Configuration', 'conf)', 'throws', 'IOException;', 'public', 'abstract', 'ClientProtocol', 'create(InetSocketAddress', 'addr,', 'Configuration', 'conf)', 'throws', 'IOException;', 'public', 'abstract', 'void', 'close(ClientProtocol', 'clientProtocol)', 'throws', 'IOException;', '}', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE html> <html lang=""mul""> <head>
  <meta http-equiv=""refresh"" content=""0; URL=https://faserf.github.io/"">
  <meta http-equiv=""Content-Type"" content=""text/html; charset=UTF-8""/>
  <meta name=""viewport"" content=""width=device-width, initial-scale=1, maximum-scale=1.0, user-scalable=no""/>
  <title>Redirecting to FaserF</title>
  
   <!-- This is a redirect page -->

</body> </html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'html>', '<html', 'lang=""mul"">', '<head>', '<meta', 'http-equiv=""refresh""', 'content=""0;', 'URL=https://faserf.github.io/"">', '<meta', 'http-equiv=""Content-Type""', 'content=""text/html;', 'charset=UTF-8""/>', '<meta', 'name=""viewport""', 'content=""width=device-width,', 'initial-scale=1,', 'maximum-scale=1.0,', 'user-scalable=no""/>', '<title>Redirecting', 'to', 'FaserF</title>', '<!--', 'This', 'is', 'a', 'redirect', 'page', '-->', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"#!/bin/ash

path_janus='/usr/local/etc/janus'
cfg_janus=""$path_janus/janus.cfg""
cfg_transport=""$path_janus/janus.transport.rabbitmq.cfg""

cp $cfg_janus ""$cfg_janus.tmp""
cp $cfg_transport ""$cfg_transport.tmp""

envsubst < ""$cfg_janus.tmp"" > $cfg_janus
envsubst < ""$cfg_transport.tmp"" > $cfg_transport

sleep 2

/usr/local/bin/janus
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/bin/ash', ""path_janus='/usr/local/etc/janus'"", 'cfg_janus=""$path_janus/janus.cfg""', 'cfg_transport=""$path_janus/janus.transport.rabbitmq.cfg""', 'cp', '$cfg_janus', '""$cfg_janus.tmp""', 'cp', '$cfg_transport', '""$cfg_transport.tmp""', 'envsubst', '<', '""$cfg_janus.tmp""', '>', '$cfg_janus', 'envsubst', '<', '""$cfg_transport.tmp""', '>', '$cfg_transport', 'sleep', '2', '/usr/local/bin/janus', '```']",challenge not surrounded by ''': ,
"package com.codeaffine.workflow.event;

public interface WorkflowContextListener {
  void variableChanged( WorkflowContextEvent<?> event );
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.codeaffine.workflow.event;', 'public', 'interface', 'WorkflowContextListener', '{', 'void', 'variableChanged(', 'WorkflowContextEvent<?>', 'event', ');', '}', '```']",challenge not surrounded by ''': ,
"#!/usr/bin/env python

import os
import os.path
import optparse

import createrepo_c as cr


def parse_updateinfo(path):
    uinfo = cr.UpdateInfo(path)
    for update in uinfo.updates:
        print(""From:         %s"" % update.fromstr)
        print(""Status:       %s"" % update.status)
        print(""Type:         %s"" % update.type)
        print(""Version:      %s"" % update.version)
        print(""Id:           %s"" % update.id)
        print(""Title:        %s"" % update.title)
        print(""Issued date:  %s"" % update.issued_date)
        print(""Updated date: %s"" % update.updated_date)
        print(""Rights:       %s"" % update.rights)
        print(""Release:      %s"" % update.release)
        print(""Pushcount:    %s"" % update.pushcount)
        print(""Severity:     %s"" % update.severity)
        print(""Summary:      %s"" % update.summary)
        print(""Description:  %s"" % update.description)
        print(""Solution:     %s"" % update.solution)
        print(""References:"")
        for ref in update.references:
            print(""  Href:  %s"" % ref.href)
            print(""  Id:    %s"" % ref.id)
            print(""  Type:  %s"" % ref.type)
            print(""  Title: %s"" % ref.title)
            print(""  ----------------------------"")
        print(""Pkglist (collections):"")
        for col in update.collections:
            print(""  Short: %s"" % col.shortname)
            print(""  name:  %s"" % col.name)
            print(""  Packages:"")
            for pkg in col.packages:
                print(""    Name:     %s"" % pkg.name)
                print(""    Version:  %s"" % pkg.version)
                print(""    Release:  %s"" % pkg.release)
                print(""    Epoch:    %s"" % pkg.epoch)
                print(""    Arch:     %s"" % pkg.arch)
                print(""    Src:      %s"" % pkg.src)
                print(""    Filename: %s"" % pkg.filename)
                print(""    Sum:      %s"" % pkg.sum)
                print(""    Sum type: %s (%s)"" % (pkg.sum_type, cr.checksum_name_str(pkg.sum_type)))
                print(""    Reboot suggested: %s"" % pkg.reboot_suggested)
            print(""  ----------------------------"")
        print(""=============================="")


if __name__ == ""__main__"":
    parser = optparse.OptionParser(usage=""%prog PATH_TO_UPDATEINFO"")
    options, args = parser.parse_args()
    if len(args) != 1:
        parser.error(""You have to specify exactly one update info"")
    parse_updateinfo(args[0])
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/usr/bin/env', 'python', 'import', 'os', 'import', 'os.path', 'import', 'optparse', 'import', 'createrepo_c', 'as', 'cr', 'def', 'parse_updateinfo(path):', 'uinfo', '=', 'cr.UpdateInfo(path)', 'for', 'update', 'in', 'uinfo.updates:', 'print(""From:', '%s""', '%', 'update.fromstr)', 'print(""Status:', '%s""', '%', 'update.status)', 'print(""Type:', '%s""', '%', 'update.type)', 'print(""Version:', '%s""', '%', 'update.version)', 'print(""Id:', '%s""', '%', 'update.id)', 'print(""Title:', '%s""', '%', 'update.title)', 'print(""Issued', 'date:', '%s""', '%', 'update.issued_date)', 'print(""Updated', 'date:', '%s""', '%', 'update.updated_date)', 'print(""Rights:', '%s""', '%', 'update.rights)', 'print(""Release:', '%s""', '%', 'update.release)', 'print(""Pushcount:', '%s""', '%', 'update.pushcount)', 'print(""Severity:', '%s""', '%', 'update.severity)', 'print(""Summary:', '%s""', '%', 'update.summary)', 'print(""Description:', '%s""', '%', 'update.description)', 'print(""Solution:', '%s""', '%', 'update.solution)', 'print(""References:"")', 'for', 'ref', 'in', 'update.references:', 'print(""', 'Href:', '%s""', '%', 'ref.href)', 'print(""', 'Id:', '%s""', '%', 'ref.id)', 'print(""', 'Type:', '%s""', '%', 'ref.type)', 'print(""', 'Title:', '%s""', '%', 'ref.title)', 'print(""', '----------------------------"")', 'print(""Pkglist', '(collections):"")', 'for', 'col', 'in', 'update.collections:', 'print(""', 'Short:', '%s""', '%', 'col.shortname)', 'print(""', 'name:', '%s""', '%', 'col.name)', 'print(""', 'Packages:"")', 'for', 'pkg', 'in', 'col.packages:', 'print(""', 'Name:', '%s""', '%', 'pkg.name)', 'print(""', 'Version:', '%s""', '%', 'pkg.version)', 'print(""', 'Release:', '%s""', '%', 'pkg.release)', 'print(""', 'Epoch:', '%s""', '%', 'pkg.epoch)', 'print(""', 'Arch:', '%s""', '%', 'pkg.arch)', 'print(""', 'Src:', '%s""', '%', 'pkg.src)', 'print(""', 'Filename:', '%s""', '%', 'pkg.filename)', 'print(""', 'Sum:', '%s""', '%', 'pkg.sum)', 'print(""', 'Sum', 'type:', '%s', '(%s)""', '%', '(pkg.sum_type,', 'cr.checksum_name_str(pkg.sum_type)))', 'print(""', 'Reboot', 'suggested:', '%s""', '%', 'pkg.reboot_suggested)', 'print(""', '----------------------------"")', 'print(""=============================="")', 'if', '__name__', '==', '""__main__"":', 'parser', '=', 'optparse.OptionParser(usage=""%prog', 'PATH_TO_UPDATEINFO"")', 'options,', 'args', '=', 'parser.parse_args()', 'if', 'len(args)', '!=', '1:', 'parser.error(""You', 'have', 'to', 'specify', 'exactly', 'one', 'update', 'info"")', 'parse_updateinfo(args[0])', '```']",challenge not surrounded by ''': ,
"# Python - 3.6.0

test.expect(even_or_odd(2) == 'Even')
test.expect(even_or_odd(0) == 'Even')
test.expect(even_or_odd(7) == 'Odd')
test.expect(even_or_odd(1) == 'Odd')
test.expect(even_or_odd(-1) == 'Odd')
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', 'Python', '-', '3.6.0', 'test.expect(even_or_odd(2)', '==', ""'Even')"", 'test.expect(even_or_odd(0)', '==', ""'Even')"", 'test.expect(even_or_odd(7)', '==', ""'Odd')"", 'test.expect(even_or_odd(1)', '==', ""'Odd')"", 'test.expect(even_or_odd(-1)', '==', ""'Odd')"", '```']",challenge not surrounded by ''': ,
"/*
 * Licensed under the Apache License, Version 2.0 (the ""License""); you 
 * may not use this file except in compliance with the License. 
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package gov.nasa.jpl.mudrod.weblog.pre;

import gov.nasa.jpl.mudrod.discoveryengine.DiscoveryStepAbstract;
import gov.nasa.jpl.mudrod.driver.ESDriver;
import gov.nasa.jpl.mudrod.driver.SparkDriver;
import gov.nasa.jpl.mudrod.utils.LabeledRowMatrix;
import gov.nasa.jpl.mudrod.utils.MatrixUtil;
import gov.nasa.jpl.mudrod.weblog.structure.ClickStream;
import gov.nasa.jpl.mudrod.weblog.structure.SessionExtractor;
import org.apache.spark.api.java.JavaPairRDD;
import org.apache.spark.api.java.JavaRDD;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.util.List;
import java.util.Properties;

/**
 * Supports ability to extract click stream data based on session processing results
 */
public class ClickStreamGenerator extends DiscoveryStepAbstract {

  /**
   *
   */
  private static final long serialVersionUID = 1L;
  private static final Logger LOG = LoggerFactory.getLogger(ClickStreamGenerator.class);

  public ClickStreamGenerator(Properties props, ESDriver es, SparkDriver spark) {
    super(props, es, spark);
  }

  @Override
  public Object execute() {
    LOG.info(""Starting ClickStreamGenerator..."");
    startTime = System.currentTimeMillis();

    String clickstremMatrixFile = props.getProperty(""clickstreamMatrix"");
    try {
      SessionExtractor extractor = new SessionExtractor();
      JavaRDD<ClickStream> clickstreamRDD = extractor.extractClickStreamFromES(this.props, this.es, this.spark);
      int weight = Integer.parseInt(props.getProperty(""downloadWeight""));
      JavaPairRDD<String, List<String>> metaddataQueryRDD = extractor.bulidDataQueryRDD(clickstreamRDD, weight);
      LabeledRowMatrix wordDocMatrix = MatrixUtil.createWordDocMatrix(metaddataQueryRDD);

      MatrixUtil.exportToCSV(wordDocMatrix.rowMatrix, wordDocMatrix.rowkeys, wordDocMatrix.colkeys, clickstremMatrixFile);
    } catch (Exception e) {
      LOG.error(""Encountered error within ClickStreamGenerator: {}"", e);
    }

    endTime = System.currentTimeMillis();
    LOG.info(""ClickStreamGenerator complete. Time elapsed {} seconds."", (endTime - startTime) / 1000);
    return null;
  }

  @Override
  public Object execute(Object o) {
    return null;
  }

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', 'you', '*', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'gov.nasa.jpl.mudrod.weblog.pre;', 'import', 'gov.nasa.jpl.mudrod.discoveryengine.DiscoveryStepAbstract;', 'import', 'gov.nasa.jpl.mudrod.driver.ESDriver;', 'import', 'gov.nasa.jpl.mudrod.driver.SparkDriver;', 'import', 'gov.nasa.jpl.mudrod.utils.LabeledRowMatrix;', 'import', 'gov.nasa.jpl.mudrod.utils.MatrixUtil;', 'import', 'gov.nasa.jpl.mudrod.weblog.structure.ClickStream;', 'import', 'gov.nasa.jpl.mudrod.weblog.structure.SessionExtractor;', 'import', 'org.apache.spark.api.java.JavaPairRDD;', 'import', 'org.apache.spark.api.java.JavaRDD;', 'import', 'org.slf4j.Logger;', 'import', 'org.slf4j.LoggerFactory;', 'import', 'java.util.List;', 'import', 'java.util.Properties;', '/**', '*', 'Supports', 'ability', 'to', 'extract', 'click', 'stream', 'data', 'based', 'on', 'session', 'processing', 'results', '*/', 'public', 'class', 'ClickStreamGenerator', 'extends', 'DiscoveryStepAbstract', '{', '/**', '*', '*/', 'private', 'static', 'final', 'long', 'serialVersionUID', '=', '1L;', 'private', 'static', 'final', 'Logger', 'LOG', '=', 'LoggerFactory.getLogger(ClickStreamGenerator.class);', 'public', 'ClickStreamGenerator(Properties', 'props,', 'ESDriver', 'es,', 'SparkDriver', 'spark)', '{', 'super(props,', 'es,', 'spark);', '}', '@Override', 'public', 'Object', 'execute()', '{', 'LOG.info(""Starting', 'ClickStreamGenerator..."");', 'startTime', '=', 'System.currentTimeMillis();', 'String', 'clickstremMatrixFile', '=', 'props.getProperty(""clickstreamMatrix"");', 'try', '{', 'SessionExtractor', 'extractor', '=', 'new', 'SessionExtractor();', 'JavaRDD<ClickStream>', 'clickstreamRDD', '=', 'extractor.extractClickStreamFromES(this.props,', 'this.es,', 'this.spark);', 'int', 'weight', '=', 'Integer.parseInt(props.getProperty(""downloadWeight""));', 'JavaPairRDD<String,', 'List<String>>', 'metaddataQueryRDD', '=', 'extractor.bulidDataQueryRDD(clickstreamRDD,', 'weight);', 'LabeledRowMatrix', 'wordDocMatrix', '=', 'MatrixUtil.createWordDocMatrix(metaddataQueryRDD);', 'MatrixUtil.exportToCSV(wordDocMatrix.rowMatrix,', 'wordDocMatrix.rowkeys,', 'wordDocMatrix.colkeys,', 'clickstremMatrixFile);', '}', 'catch', '(Exception', 'e)', '{', 'LOG.error(""Encountered', 'error', 'within', 'ClickStreamGenerator:', '{}"",', 'e);', '}', 'endTime', '=', 'System.currentTimeMillis();', 'LOG.info(""ClickStreamGenerator', 'complete.', 'Time', 'elapsed', '{}', 'seconds."",', '(endTime', '-', 'startTime)', '/', '1000);', 'return', 'null;', '}', '@Override', 'public', 'Object', 'execute(Object', 'o)', '{', 'return', 'null;', '}', '}', '```']",challenge not surrounded by ''': ,
"'use strict';

const debug = require('debug')('reliable:middleware:openApiAuthorize');

module.exports = () => {
  return async function openApiAuthorize(ctx, next) {
    const origin = ctx.get('origin');
    const path = ctx.path;
    debug('path %s origin %s', path, origin);
    ctx.logger.info('[reliable-middleware-openApiAuthorize] path %s origin %s', path, origin);
    if (!origin) {
      await next();
      return;
    }
    await next();
    return;
  };
};
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', ""```'use"", ""strict';"", 'const', 'debug', '=', ""require('debug')('reliable:middleware:openApiAuthorize');"", 'module.exports', '=', '()', '=>', '{', 'return', 'async', 'function', 'openApiAuthorize(ctx,', 'next)', '{', 'const', 'origin', '=', ""ctx.get('origin');"", 'const', 'path', '=', 'ctx.path;', ""debug('path"", '%s', 'origin', ""%s',"", 'path,', 'origin);', ""ctx.logger.info('[reliable-middleware-openApiAuthorize]"", 'path', '%s', 'origin', ""%s',"", 'path,', 'origin);', 'if', '(!origin)', '{', 'await', 'next();', 'return;', '}', 'await', 'next();', 'return;', '};', '};', '```']",challenge not surrounded by ''': ,
"// Copyright (c) 2014-2015 Dr. Colin Hirsch and Daniel Frey
// Please see LICENSE for license or visit https://github.com/ColinH/PEGTL/

#ifndef PEGTL_UNIT_TESTS_VERIFY_FILE_HH
#define PEGTL_UNIT_TESTS_VERIFY_FILE_HH

#include <pegtl.hh>

namespace pegtl
{
   struct file_content : string< 'd', 'u', 'm', 'm', 'y', ' ', 'c', 'o', 'n', 't', 'e', 'n', 't', '\n' > {};
   struct file_grammar : seq< rep_min_max< 11, 11, file_content >, eof > {};

   template< typename Rule > struct file_action : nothing< Rule > {};

   template<> struct file_action< eof >
   {
      static void apply( const input &, bool & flag )
      {
         flag = true;
      }
   };

   template< typename Rule > struct file_control : normal< Rule > {};

   template<> struct file_control< eof > : normal< eof >
   {
      static void success( const input &, bool & flag )
      {
         flag = true;
      }
   };

   template< typename T >
   void verify_file()
   {
      {
         const std::string f{ ""unit_tests/no_such_file.txt"" };
         try {
           T p{ f };
           TEST_ASSERT( !""no error on opening non-existing file"" );
         }
         catch( const input_error& e ) {
         }
      } {
         const std::string f{ ""unit_tests/file_data.txt"" };
         T p{ f };
         TEST_ASSERT( p.source() == f );
         TEST_ASSERT( p.template parse< file_grammar >() );
         TEST_ASSERT( p.source() == f );
      } {
         const std::string f{ ""unit_tests/file_data.txt"" };
         T p{ f };
         bool flag = true;
         TEST_ASSERT( p.source() == f );
         TEST_ASSERT( p.template parse< file_grammar >( flag ) );
         TEST_ASSERT( flag == true );
      } {
         const std::string f{ ""unit_tests/file_data.txt"" };
         T p{ f };
         bool flag = false;
         TEST_ASSERT( p.source() == f );
         TEST_ASSERT( p.template parse< file_grammar >( flag ) );
         TEST_ASSERT( flag == false );
      } {
         const std::string f{ ""unit_tests/file_data.txt"" };
         T p{ f };
         bool flag = false;
         TEST_ASSERT( p.source() == f );
         const bool result = p.template parse< file_grammar, file_action >( flag );
         TEST_ASSERT( result );
         TEST_ASSERT( flag == true );
      } {
         const std::string f{ ""unit_tests/file_data.txt"" };
         T p{ f };
         bool flag = false;
         TEST_ASSERT( p.source() == f );
         const bool result = p.template parse< file_grammar, nothing, file_control >( flag );
         TEST_ASSERT( result );
         TEST_ASSERT( flag == true );
      }
   }

} // pegtl

#endif
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//', 'Copyright', '(c)', '2014-2015', 'Dr.', 'Colin', 'Hirsch', 'and', 'Daniel', 'Frey', '//', 'Please', 'see', 'LICENSE', 'for', 'license', 'or', 'visit', 'https://github.com/ColinH/PEGTL/', '#ifndef', 'PEGTL_UNIT_TESTS_VERIFY_FILE_HH', '#define', 'PEGTL_UNIT_TESTS_VERIFY_FILE_HH', '#include', '<pegtl.hh>', 'namespace', 'pegtl', '{', 'struct', 'file_content', ':', 'string<', ""'d',"", ""'u',"", ""'m',"", ""'m',"", ""'y',"", ""'"", ""',"", ""'c',"", ""'o',"", ""'n',"", ""'t',"", ""'e',"", ""'n',"", ""'t',"", ""'\\n'"", '>', '{};', 'struct', 'file_grammar', ':', 'seq<', 'rep_min_max<', '11,', '11,', 'file_content', '>,', 'eof', '>', '{};', 'template<', 'typename', 'Rule', '>', 'struct', 'file_action', ':', 'nothing<', 'Rule', '>', '{};', 'template<>', 'struct', 'file_action<', 'eof', '>', '{', 'static', 'void', 'apply(', 'const', 'input', '&,', 'bool', '&', 'flag', ')', '{', 'flag', '=', 'true;', '}', '};', 'template<', 'typename', 'Rule', '>', 'struct', 'file_control', ':', 'normal<', 'Rule', '>', '{};', 'template<>', 'struct', 'file_control<', 'eof', '>', ':', 'normal<', 'eof', '>', '{', 'static', 'void', 'success(', 'const', 'input', '&,', 'bool', '&', 'flag', ')', '{', 'flag', '=', 'true;', '}', '};', 'template<', 'typename', 'T', '>', 'void', 'verify_file()', '{', '{', 'const', 'std::string', 'f{', '""unit_tests/no_such_file.txt""', '};', 'try', '{', 'T', 'p{', 'f', '};', 'TEST_ASSERT(', '!""no', 'error', 'on', 'opening', 'non-existing', 'file""', ');', '}', 'catch(', 'const', 'input_error&', 'e', ')', '{', '}', '}', '{', 'const', 'std::string', 'f{', '""unit_tests/file_data.txt""', '};', 'T', 'p{', 'f', '};', 'TEST_ASSERT(', 'p.source()', '==', 'f', ');', 'TEST_ASSERT(', 'p.template', 'parse<', 'file_grammar', '>()', ');', 'TEST_ASSERT(', 'p.source()', '==', 'f', ');', '}', '{', 'const', 'std::string', 'f{', '""unit_tests/file_data.txt""', '};', 'T', 'p{', 'f', '};', 'bool', 'flag', '=', 'true;', 'TEST_ASSERT(', 'p.source()', '==', 'f', ');', 'TEST_ASSERT(', 'p.template', 'parse<', 'file_grammar', '>(', 'flag', ')', ');', 'TEST_ASSERT(', 'flag', '==', 'true', ');', '}', '{', 'const', 'std::string', 'f{', '""unit_tests/file_data.txt""', '};', 'T', 'p{', 'f', '};', 'bool', 'flag', '=', 'false;', 'TEST_ASSERT(', 'p.source()', '==', 'f', ');', 'TEST_ASSERT(', 'p.template', 'parse<', 'file_grammar', '>(', 'flag', ')', ');', 'TEST_ASSERT(', 'flag', '==', 'false', ');', '}', '{', 'const', 'std::string', 'f{', '""unit_tests/file_data.txt""', '};', 'T', 'p{', 'f', '};', 'bool', 'flag', '=', 'false;', 'TEST_ASSERT(', 'p.source()', '==', 'f', ');', 'const', 'bool', 'result', '=', 'p.template', 'parse<', 'file_grammar,', 'file_action', '>(', 'flag', ');', 'TEST_ASSERT(', 'result', ');', 'TEST_ASSERT(', 'flag', '==', 'true', ');', '}', '{', 'const', 'std::string', 'f{', '""unit_tests/file_data.txt""', '};', 'T', 'p{', 'f', '};', 'bool', 'flag', '=', 'false;', 'TEST_ASSERT(', 'p.source()', '==', 'f', ');', 'const', 'bool', 'result', '=', 'p.template', 'parse<', 'file_grammar,', 'nothing,', 'file_control', '>(', 'flag', ');', 'TEST_ASSERT(', 'result', ');', 'TEST_ASSERT(', 'flag', '==', 'true', ');', '}', '}', '}', '//', 'pegtl', '#endif', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright (c) 2012 - 2020 Splice Machine, Inc.
 *
 * This file is part of Splice Machine.
 * Splice Machine is free software: you can redistribute it and/or modify it under the terms of the
 * GNU Affero General Public License as published by the Free Software Foundation, either
 * version 3, or (at your option) any later version.
 * Splice Machine is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 * You should have received a copy of the GNU Affero General Public License along with Splice Machine.
 * If not, see <http://www.gnu.org/licenses/>.
 */

package com.splicemachine.mrio.api.core;

import org.apache.hadoop.mapreduce.InputSplit;
import org.apache.hadoop.mapreduce.JobContext;
import org.apache.hadoop.mapreduce.lib.input.TextInputFormat;
import java.io.IOException;
import java.util.Collections;
import java.util.List;

/**
 *
 * This class exists to simply shuffle the splits
 *
 * Created by jleach on 3/17/16.
 */
public class SMTextInputFormat extends TextInputFormat {

    /*
    * Protects Splice Machine in the case of loading ordered data
    *
    * Shuffle is performed in linear time (i.e. slows as number of splits increases)
    *
    */
    @Override
    public List<InputSplit> getSplits(JobContext job) throws IOException {
        List<InputSplit> inputSplits = super.getSplits(job);
        Collections.shuffle(inputSplits);
        return inputSplits;
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '(c)', '2012', '-', '2020', 'Splice', 'Machine,', 'Inc.', '*', '*', 'This', 'file', 'is', 'part', 'of', 'Splice', 'Machine.', '*', 'Splice', 'Machine', 'is', 'free', 'software:', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', 'it', 'under', 'the', 'terms', 'of', 'the', '*', 'GNU', 'Affero', 'General', 'Public', 'License', 'as', 'published', 'by', 'the', 'Free', 'Software', 'Foundation,', 'either', '*', 'version', '3,', 'or', '(at', 'your', 'option)', 'any', 'later', 'version.', '*', 'Splice', 'Machine', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', '*', 'without', 'even', 'the', 'implied', 'warranty', 'of', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', '*', 'See', 'the', 'GNU', 'Affero', 'General', 'Public', 'License', 'for', 'more', 'details.', '*', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'Affero', 'General', 'Public', 'License', 'along', 'with', 'Splice', 'Machine.', '*', 'If', 'not,', 'see', '<http://www.gnu.org/licenses/>.', '*/', 'package', 'com.splicemachine.mrio.api.core;', 'import', 'org.apache.hadoop.mapreduce.InputSplit;', 'import', 'org.apache.hadoop.mapreduce.JobContext;', 'import', 'org.apache.hadoop.mapreduce.lib.input.TextInputFormat;', 'import', 'java.io.IOException;', 'import', 'java.util.Collections;', 'import', 'java.util.List;', '/**', '*', '*', 'This', 'class', 'exists', 'to', 'simply', 'shuffle', 'the', 'splits', '*', '*', 'Created', 'by', 'jleach', 'on', '3/17/16.', '*/', 'public', 'class', 'SMTextInputFormat', 'extends', 'TextInputFormat', '{', '/*', '*', 'Protects', 'Splice', 'Machine', 'in', 'the', 'case', 'of', 'loading', 'ordered', 'data', '*', '*', 'Shuffle', 'is', 'performed', 'in', 'linear', 'time', '(i.e.', 'slows', 'as', 'number', 'of', 'splits', 'increases)', '*', '*/', '@Override', 'public', 'List<InputSplit>', 'getSplits(JobContext', 'job)', 'throws', 'IOException', '{', 'List<InputSplit>', 'inputSplits', '=', 'super.getSplits(job);', 'Collections.shuffle(inputSplits);', 'return', 'inputSplits;', '}', '}', '```']",challenge not surrounded by ''': ,
"# -*- coding: utf-8 -*-
__author__ = 'yueli'
import os
import matplotlib.pyplot as plt
from config.config import *
import numpy as np

def autolabel(rects):
    for rect in rects:
        height = rect.get_height()
        print ""height:"", height
        plt.text(rect.get_x()+rect.get_width()/2-0.45, 1.002*height, '%s' % round(height,2))

if __name__ == ""__main__"":

    try:
       LOG_DIR = os.environ['PROJECT_LOG_DIR']
    except KeyError:
        print ""Environment variable PROJECT_LOG_DIR is not properly defined or "" \
              ""the definition about this variable is not taken into account.""
        print ""If PROJECT_LOG_DIR is well defined, restart Pycharm to try again!""

    TARGET_FILE_NAME = 'comparison_among_vantage_point.csv'

    # Define a dict whose key-value is map_resolver_ip-number of occurrence, to store the final statistical result
    # It finally may be in format as following:
    # mp_nb_dict = {
    #   '1.1.1.1'   : 3,
    #   '2.2.2.2'   : 4,
    #   ...
    # }
    mp_nb_dict = {}
    with open(os.path.join(LOG_DIR, 'comparison_VP', TARGET_FILE_NAME)) as f_handler:
        next(f_handler)
        for line in f_handler:
            tmp_list = line.split("";"")[0].replace(""('"", """").replace(""')"", """").replace(""'"", '').replace("" "", """")\
                .split("","")
            mp_resovler =  tmp_list[-1]
            # mp_nb_dict[tmp_list[-1]] = mp_nb_dict.get(tmp_list[-1], default=0) + 1
            if mp_resovler not in mp_nb_dict:
                mp_nb_dict[mp_resovler] = 1
            else:
                mp_nb_dict[mp_resovler] += 1


    # Plot part begins here:
    # Modify the size and dpi of picture, default size is (8,6), default dpi is 80
    plt.gcf().set_size_inches(8, 6.5)

    X_axis = np.arange(13)
    Y_axis = [(613-float(value))/613*100 for value in mp_nb_dict.values()]
    bar_width = 0.7
    plt.grid(True)

    # Define font
    font_label = {
        'fontname'   : 'Times New Roman',
        'color'      : 'black',
        'fontsize'   : 25
        }

    # 画 overall 的红色虚线
    x_overall_list = [-0.4, 12.8]
    y_overall = np.average(Y_axis)
    y_overall_list = [y_overall, y_overall]

    print ""Overall average of consistency by the variable of VP:"", y_overall

    rect = plt.bar(X_axis, Y_axis, bar_width, color='gray')
    # autolabel(rect)

    plt.xlabel('map resolver', font_label)
    plt.ylabel('percentage of consistent mappings (%)', font_label)
    # plt.title('Percentage of consistency for 13 MRs', fontsize=18)
    plt.xticks(X_axis + bar_width/2, X_axis + 1, fontsize=14, fontname='Times New Roman')
    plt.yticks(fontsize=14, fontname='Times New Roman')
    plt.plot(x_overall_list, y_overall_list, '--', color='black', label='overall')
    plt.legend(loc='upper right')
    plt.xlim(-0.4, 12.8)
    plt.ylim(80, 100)
    plt.grid(True)

    # plt.savefig(os.path.join(PLOT_DIR, 'Percentage_consistency_13MR_VP.eps'), dpi=300)
    plt.savefig(os.path.join(PLOT_DIR, 'Plot_newSize', 'Percentage_consistency_13MR_VP.eps'),
            dpi=300, transparent=True)
    plt.show()","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', '-*-', 'coding:', 'utf-8', '-*-', '__author__', '=', ""'yueli'"", 'import', 'os', 'import', 'matplotlib.pyplot', 'as', 'plt', 'from', 'config.config', 'import', '*', 'import', 'numpy', 'as', 'np', 'def', 'autolabel(rects):', 'for', 'rect', 'in', 'rects:', 'height', '=', 'rect.get_height()', 'print', '""height:"",', 'height', 'plt.text(rect.get_x()+rect.get_width()/2-0.45,', '1.002*height,', ""'%s'"", '%', 'round(height,2))', 'if', '__name__', '==', '""__main__"":', 'try:', 'LOG_DIR', '=', ""os.environ['PROJECT_LOG_DIR']"", 'except', 'KeyError:', 'print', '""Environment', 'variable', 'PROJECT_LOG_DIR', 'is', 'not', 'properly', 'defined', 'or', '""', '\\', '""the', 'definition', 'about', 'this', 'variable', 'is', 'not', 'taken', 'into', 'account.""', 'print', '""If', 'PROJECT_LOG_DIR', 'is', 'well', 'defined,', 'restart', 'Pycharm', 'to', 'try', 'again!""', 'TARGET_FILE_NAME', '=', ""'comparison_among_vantage_point.csv'"", '#', 'Define', 'a', 'dict', 'whose', 'key-value', 'is', 'map_resolver_ip-number', 'of', 'occurrence,', 'to', 'store', 'the', 'final', 'statistical', 'result', '#', 'It', 'finally', 'may', 'be', 'in', 'format', 'as', 'following:', '#', 'mp_nb_dict', '=', '{', '#', ""'1.1.1.1'"", ':', '3,', '#', ""'2.2.2.2'"", ':', '4,', '#', '...', '#', '}', 'mp_nb_dict', '=', '{}', 'with', 'open(os.path.join(LOG_DIR,', ""'comparison_VP',"", 'TARGET_FILE_NAME))', 'as', 'f_handler:', 'next(f_handler)', 'for', 'line', 'in', 'f_handler:', 'tmp_list', '=', 'line.split("";"")[0].replace(""(\'"",', '"""").replace(""\')"",', '"""").replace(""\'"",', '\'\').replace(""', '"",', '"""")\\', '.split("","")', 'mp_resovler', '=', 'tmp_list[-1]', '#', 'mp_nb_dict[tmp_list[-1]]', '=', 'mp_nb_dict.get(tmp_list[-1],', 'default=0)', '+', '1', 'if', 'mp_resovler', 'not', 'in', 'mp_nb_dict:', 'mp_nb_dict[mp_resovler]', '=', '1', 'else:', 'mp_nb_dict[mp_resovler]', '+=', '1', '#', 'Plot', 'part', 'begins', 'here:', '#', 'Modify', 'the', 'size', 'and', 'dpi', 'of', 'picture,', 'default', 'size', 'is', '(8,6),', 'default', 'dpi', 'is', '80', 'plt.gcf().set_size_inches(8,', '6.5)', 'X_axis', '=', 'np.arange(13)', 'Y_axis', '=', '[(613-float(value))/613*100', 'for', 'value', 'in', 'mp_nb_dict.values()]', 'bar_width', '=', '0.7', 'plt.grid(True)', '#', 'Define', 'font', 'font_label', '=', '{', ""'fontname'"", ':', ""'Times"", 'New', ""Roman',"", ""'color'"", ':', ""'black',"", ""'fontsize'"", ':', '25', '}', '#', '画', 'overall', '的红色虚线', 'x_overall_list', '=', '[-0.4,', '12.8]', 'y_overall', '=', 'np.average(Y_axis)', 'y_overall_list', '=', '[y_overall,', 'y_overall]', 'print', '""Overall', 'average', 'of', 'consistency', 'by', 'the', 'variable', 'of', 'VP:"",', 'y_overall', 'rect', '=', 'plt.bar(X_axis,', 'Y_axis,', 'bar_width,', ""color='gray')"", '#', 'autolabel(rect)', ""plt.xlabel('map"", ""resolver',"", 'font_label)', ""plt.ylabel('percentage"", 'of', 'consistent', 'mappings', ""(%)',"", 'font_label)', '#', ""plt.title('Percentage"", 'of', 'consistency', 'for', '13', ""MRs',"", 'fontsize=18)', 'plt.xticks(X_axis', '+', 'bar_width/2,', 'X_axis', '+', '1,', 'fontsize=14,', ""fontname='Times"", 'New', ""Roman')"", 'plt.yticks(fontsize=14,', ""fontname='Times"", 'New', ""Roman')"", 'plt.plot(x_overall_list,', 'y_overall_list,', ""'--',"", ""color='black',"", ""label='overall')"", ""plt.legend(loc='upper"", ""right')"", 'plt.xlim(-0.4,', '12.8)', 'plt.ylim(80,', '100)', 'plt.grid(True)', '#', 'plt.savefig(os.path.join(PLOT_DIR,', ""'Percentage_consistency_13MR_VP.eps'),"", 'dpi=300)', 'plt.savefig(os.path.join(PLOT_DIR,', ""'Plot_newSize',"", ""'Percentage_consistency_13MR_VP.eps'),"", 'dpi=300,', 'transparent=True)', 'plt.show()```']",challenge not surrounded by ''': ,
"{{ partial ""header"" . }}
{{ partial ""page_header"" . }}

<article id=""post"" class=""post"">
    <div class=""container"">
        <header class=""post__header has-text-centered"">
            <h1 class=""title"">{{ .Title }}</h1>
            <p class=""post__meta"">
                {{ $.Param ""author"" }}
                <em>
                    writes on <time datetime=""{{ .Date.Format ""2006-01-02"" }}"" content=""{{ .Date.Format ""2006-01-02"" }}"" itemprop=""datePublished"">{{ .Date.Format ""2006 January 2"" }}</time>
                </em>
            </p>
        </header>

        <div class=""content"">
            {{ .Content }}
        </div>
    </div>
</article>

{{ partial ""footer"" . }}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```{{', 'partial', '""header""', '.', '}}', '{{', 'partial', '""page_header""', '.', '}}', '<article', 'id=""post""', 'class=""post"">', '<div', 'class=""container"">', '<header', 'class=""post__header', 'has-text-centered"">', '<h1', 'class=""title"">{{', '.Title', '}}</h1>', '<p', 'class=""post__meta"">', '{{', '$.Param', '""author""', '}}', '<em>', 'writes', 'on', '<time', 'datetime=""{{', '.Date.Format', '""2006-01-02""', '}}""', 'content=""{{', '.Date.Format', '""2006-01-02""', '}}""', 'itemprop=""datePublished"">{{', '.Date.Format', '""2006', 'January', '2""', '}}</time>', '</em>', '</p>', '</header>', '<div', 'class=""content"">', '{{', '.Content', '}}', '</div>', '</div>', '</article>', '{{', 'partial', '""footer""', '.', '}}', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
<html xmlns=""http://www.w3.org/1999/xhtml"">
<head>
<meta http-equiv=""Content-Type"" content=""text/xhtml;charset=UTF-8""/>
<meta http-equiv=""X-UA-Compatible"" content=""IE=9""/>
<meta name=""generator"" content=""Doxygen 1.8.13""/>
<meta name=""viewport"" content=""width=device-width, initial-scale=1""/>
<title>Variant: engine Directory Reference</title>
<link href=""tabs.css"" rel=""stylesheet"" type=""text/css""/>
<script type=""text/javascript"" src=""jquery.js""></script>
<script type=""text/javascript"" src=""dynsections.js""></script>
<link href=""search/search.css"" rel=""stylesheet"" type=""text/css""/>
<script type=""text/javascript"" src=""search/searchdata.js""></script>
<script type=""text/javascript"" src=""search/search.js""></script>
<link href=""doxygen.css"" rel=""stylesheet"" type=""text/css"" />
</head>
<body>
<div id=""top""><!-- do not remove this div, it is closed by doxygen! -->
<div id=""titlearea"">
<table cellspacing=""0"" cellpadding=""0"">
 <tbody>
 <tr style=""height: 56px;"">
  <td id=""projectalign"" style=""padding-left: 0.5em;"">
   <div id=""projectname"">Variant
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type=""text/javascript"">
var searchBox = new SearchBox(""searchBox"", ""search"",false,'Search');
</script>
<script type=""text/javascript"" src=""menudata.js""></script>
<script type=""text/javascript"" src=""menu.js""></script>
<script type=""text/javascript"">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id=""main-nav""></div>
<!-- window showing the filter options -->
<div id=""MSearchSelectWindow""
     onmouseover=""return searchBox.OnSearchSelectShow()""
     onmouseout=""return searchBox.OnSearchSelectHide()""
     onkeydown=""return searchBox.OnSearchSelectKey(event)"">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id=""MSearchResultsWindow"">
<iframe src=""javascript:void(0)"" frameborder=""0"" 
        name=""MSearchResults"" id=""MSearchResults"">
</iframe>
</div>

<div id=""nav-path"" class=""navpath"">
  <ul>
<li class=""navelem""><a class=""el"" href=""dir_996f45160da62e1a3d7f6046fad68f51.html"">engine</a></li>  </ul>
</div>
</div><!-- top -->
<div class=""header"">
  <div class=""headertitle"">
<div class=""title"">engine Directory Reference</div>  </div>
</div><!--header-->
<div class=""contents"">
</div><!-- contents -->
<!-- start footer part -->
<hr class=""footer""/><address class=""footer""><small>
Generated by &#160;<a href=""http://www.doxygen.org/index.html"">
<img class=""footer"" src=""doxygen.png"" alt=""doxygen""/>
</a> 1.8.13
</small></address>
</body>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'html', 'PUBLIC', '""-//W3C//DTD', 'XHTML', '1.0', 'Transitional//EN""', '""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">', '<html', 'xmlns=""http://www.w3.org/1999/xhtml"">', '<head>', '<meta', 'http-equiv=""Content-Type""', 'content=""text/xhtml;charset=UTF-8""/>', '<meta', 'http-equiv=""X-UA-Compatible""', 'content=""IE=9""/>', '<meta', 'name=""generator""', 'content=""Doxygen', '1.8.13""/>', '<meta', 'name=""viewport""', 'content=""width=device-width,', 'initial-scale=1""/>', '<title>Variant:', 'engine', 'Directory', 'Reference</title>', '<link', 'href=""tabs.css""', 'rel=""stylesheet""', 'type=""text/css""/>', '<script', 'type=""text/javascript""', 'src=""jquery.js""></script>', '<script', 'type=""text/javascript""', 'src=""dynsections.js""></script>', '<link', 'href=""search/search.css""', 'rel=""stylesheet""', 'type=""text/css""/>', '<script', 'type=""text/javascript""', 'src=""search/searchdata.js""></script>', '<script', 'type=""text/javascript""', 'src=""search/search.js""></script>', '<link', 'href=""doxygen.css""', 'rel=""stylesheet""', 'type=""text/css""', '/>', '</head>', '<body>', '<div', 'id=""top""><!--', 'do', 'not', 'remove', 'this', 'div,', 'it', 'is', 'closed', 'by', 'doxygen!', '-->', '<div', 'id=""titlearea"">', '<table', 'cellspacing=""0""', 'cellpadding=""0"">', '<tbody>', '<tr', 'style=""height:', '56px;"">', '<td', 'id=""projectalign""', 'style=""padding-left:', '0.5em;"">', '<div', 'id=""projectname"">Variant', '</div>', '</td>', '</tr>', '</tbody>', '</table>', '</div>', '<!--', 'end', 'header', 'part', '-->', '<!--', 'Generated', 'by', 'Doxygen', '1.8.13', '-->', '<script', 'type=""text/javascript"">', 'var', 'searchBox', '=', 'new', 'SearchBox(""searchBox"",', '""search"",false,\'Search\');', '</script>', '<script', 'type=""text/javascript""', 'src=""menudata.js""></script>', '<script', 'type=""text/javascript""', 'src=""menu.js""></script>', '<script', 'type=""text/javascript"">', '$(function()', '{', ""initMenu('',true,false,'search.php','Search');"", '$(document).ready(function()', '{', 'init_search();', '});', '});', '</script>', '<div', 'id=""main-nav""></div>', '<!--', 'window', 'showing', 'the', 'filter', 'options', '-->', '<div', 'id=""MSearchSelectWindow""', 'onmouseover=""return', 'searchBox.OnSearchSelectShow()""', 'onmouseout=""return', 'searchBox.OnSearchSelectHide()""', 'onkeydown=""return', 'searchBox.OnSearchSelectKey(event)"">', '</div>', '<!--', 'iframe', 'showing', 'the', 'search', 'results', '(closed', 'by', 'default)', '-->', '<div', 'id=""MSearchResultsWindow"">', '<iframe', 'src=""javascript:void(0)""', 'frameborder=""0""', 'name=""MSearchResults""', 'id=""MSearchResults"">', '</iframe>', '</div>', '<div', 'id=""nav-path""', 'class=""navpath"">', '<ul>', '<li', 'class=""navelem""><a', 'class=""el""', 'href=""dir_996f45160da62e1a3d7f6046fad68f51.html"">engine</a></li>', '</ul>', '</div>', '</div><!--', 'top', '-->', '<div', 'class=""header"">', '<div', 'class=""headertitle"">', '<div', 'class=""title"">engine', 'Directory', 'Reference</div>', '</div>', '</div><!--header-->', '<div', 'class=""contents"">', '</div><!--', 'contents', '-->', '<!--', 'start', 'footer', 'part', '-->', '<hr', 'class=""footer""/><address', 'class=""footer""><small>', 'Generated', 'by', '&#160;<a', 'href=""http://www.doxygen.org/index.html"">', '<img', 'class=""footer""', 'src=""doxygen.png""', 'alt=""doxygen""/>', '</a>', '1.8.13', '</small></address>', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"from routersploit.modules.creds.cameras.siemens.ftp_default_creds import Exploit


def test_check_success(generic_target):
    """""" Test scenario - testing against FTP server """"""

    exploit = Exploit()
    assert exploit.target == """"
    assert exploit.port == 21
    assert exploit.threads == 1
    assert exploit.defaults == [""admin:admin""]
    assert exploit.stop_on_success is True
    assert exploit.verbosity is True

    exploit.target = generic_target.host
    exploit.port = generic_target.port

    assert exploit.check() is False
    assert exploit.check_default() is None
    assert exploit.run() is None
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```from', 'routersploit.modules.creds.cameras.siemens.ftp_default_creds', 'import', 'Exploit', 'def', 'test_check_success(generic_target):', '""""""', 'Test', 'scenario', '-', 'testing', 'against', 'FTP', 'server', '""""""', 'exploit', '=', 'Exploit()', 'assert', 'exploit.target', '==', '""""', 'assert', 'exploit.port', '==', '21', 'assert', 'exploit.threads', '==', '1', 'assert', 'exploit.defaults', '==', '[""admin:admin""]', 'assert', 'exploit.stop_on_success', 'is', 'True', 'assert', 'exploit.verbosity', 'is', 'True', 'exploit.target', '=', 'generic_target.host', 'exploit.port', '=', 'generic_target.port', 'assert', 'exploit.check()', 'is', 'False', 'assert', 'exploit.check_default()', 'is', 'None', 'assert', 'exploit.run()', 'is', 'None', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright (C) 2007, 2008 Apple Inc. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1.  Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 * 2.  Redistributions in binary form must reproduce the above copyright
 *     notice, this list of conditions and the following disclaimer in the
 *     documentation and/or other materials provided with the distribution.
 * 3.  Neither the name of Apple Computer, Inc. (""Apple"") nor the names of
 *     its contributors may be used to endorse or promote products derived
 *     from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS ""AS IS"" AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include ""config.h""
#include ""ExceptionBase.h""
#include ""ExceptionCode.h""

#include <wtf/text/WTFString.h>

namespace WebCore {

ExceptionBase::ExceptionBase(const ExceptionCodeDescription& description)
    : m_code(description.code)
    , m_name(description.name)
    , m_description(description.description)
{
    if (description.name)
        m_message = String(description.name) + "": "" + description.typeName + "" Exception "" + String::number(description.code);
    else
        m_message = String(description.typeName) + "" Exception "" + String::number(description.code);
}

String ExceptionBase::toString() const
{
    return ""Error: "" + m_message;
}

} // namespace WebCore
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '(C)', '2007,', '2008', 'Apple', 'Inc.', 'All', 'rights', 'reserved.', '*', '*', 'Redistribution', 'and', 'use', 'in', 'source', 'and', 'binary', 'forms,', 'with', 'or', 'without', '*', 'modification,', 'are', 'permitted', 'provided', 'that', 'the', 'following', 'conditions', '*', 'are', 'met:', '*', '*', '1.', 'Redistributions', 'of', 'source', 'code', 'must', 'retain', 'the', 'above', 'copyright', '*', 'notice,', 'this', 'list', 'of', 'conditions', 'and', 'the', 'following', 'disclaimer.', '*', '2.', 'Redistributions', 'in', 'binary', 'form', 'must', 'reproduce', 'the', 'above', 'copyright', '*', 'notice,', 'this', 'list', 'of', 'conditions', 'and', 'the', 'following', 'disclaimer', 'in', 'the', '*', 'documentation', 'and/or', 'other', 'materials', 'provided', 'with', 'the', 'distribution.', '*', '3.', 'Neither', 'the', 'name', 'of', 'Apple', 'Computer,', 'Inc.', '(""Apple"")', 'nor', 'the', 'names', 'of', '*', 'its', 'contributors', 'may', 'be', 'used', 'to', 'endorse', 'or', 'promote', 'products', 'derived', '*', 'from', 'this', 'software', 'without', 'specific', 'prior', 'written', 'permission.', '*', '*', 'THIS', 'SOFTWARE', 'IS', 'PROVIDED', 'BY', 'APPLE', 'AND', 'ITS', 'CONTRIBUTORS', '""AS', 'IS""', 'AND', 'ANY', '*', 'EXPRESS', 'OR', 'IMPLIED', 'WARRANTIES,', 'INCLUDING,', 'BUT', 'NOT', 'LIMITED', 'TO,', 'THE', 'IMPLIED', '*', 'WARRANTIES', 'OF', 'MERCHANTABILITY', 'AND', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE', 'ARE', '*', 'DISCLAIMED.', 'IN', 'NO', 'EVENT', 'SHALL', 'APPLE', 'OR', 'ITS', 'CONTRIBUTORS', 'BE', 'LIABLE', 'FOR', 'ANY', '*', 'DIRECT,', 'INDIRECT,', 'INCIDENTAL,', 'SPECIAL,', 'EXEMPLARY,', 'OR', 'CONSEQUENTIAL', 'DAMAGES', '*', '(INCLUDING,', 'BUT', 'NOT', 'LIMITED', 'TO,', 'PROCUREMENT', 'OF', 'SUBSTITUTE', 'GOODS', 'OR', 'SERVICES;', '*', 'LOSS', 'OF', 'USE,', 'DATA,', 'OR', 'PROFITS;', 'OR', 'BUSINESS', 'INTERRUPTION)', 'HOWEVER', 'CAUSED', 'AND', '*', 'ON', 'ANY', 'THEORY', 'OF', 'LIABILITY,', 'WHETHER', 'IN', 'CONTRACT,', 'STRICT', 'LIABILITY,', 'OR', 'TORT', '*', '(INCLUDING', 'NEGLIGENCE', 'OR', 'OTHERWISE)', 'ARISING', 'IN', 'ANY', 'WAY', 'OUT', 'OF', 'THE', 'USE', 'OF', '*', 'THIS', 'SOFTWARE,', 'EVEN', 'IF', 'ADVISED', 'OF', 'THE', 'POSSIBILITY', 'OF', 'SUCH', 'DAMAGE.', '*/', '#include', '""config.h""', '#include', '""ExceptionBase.h""', '#include', '""ExceptionCode.h""', '#include', '<wtf/text/WTFString.h>', 'namespace', 'WebCore', '{', 'ExceptionBase::ExceptionBase(const', 'ExceptionCodeDescription&', 'description)', ':', 'm_code(description.code)', ',', 'm_name(description.name)', ',', 'm_description(description.description)', '{', 'if', '(description.name)', 'm_message', '=', 'String(description.name)', '+', '"":', '""', '+', 'description.typeName', '+', '""', 'Exception', '""', '+', 'String::number(description.code);', 'else', 'm_message', '=', 'String(description.typeName)', '+', '""', 'Exception', '""', '+', 'String::number(description.code);', '}', 'String', 'ExceptionBase::toString()', 'const', '{', 'return', '""Error:', '""', '+', 'm_message;', '}', '}', '//', 'namespace', 'WebCore', '```']",challenge not surrounded by ''': ,
"import { Directive } from '@angular/core';
/**
  * @private
  * @name Grid
  * @module ionic
  * @description
 */
export var Grid = (function () {
    function Grid() {
    }
    Grid.decorators = [
        { type: Directive, args: [{
                    selector: 'ion-grid'
                },] },
    ];
    /** @nocollapse */
    Grid.ctorParameters = [];
    return Grid;
}());
/**
  * @private
  * @name Row
  * @module ionic
  * @description
 */
export var Row = (function () {
    function Row() {
    }
    Row.decorators = [
        { type: Directive, args: [{
                    selector: 'ion-row'
                },] },
    ];
    /** @nocollapse */
    Row.ctorParameters = [];
    return Row;
}());
/**
  * @private
  * @name Column
  * @module ionic
  * @description
 */
export var Col = (function () {
    function Col() {
    }
    Col.decorators = [
        { type: Directive, args: [{
                    selector: 'ion-col'
                },] },
    ];
    /** @nocollapse */
    Col.ctorParameters = [];
    return Col;
}());
//# sourceMappingURL=grid.js.map","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', '{', 'Directive', '}', 'from', ""'@angular/core';"", '/**', '*', '@private', '*', '@name', 'Grid', '*', '@module', 'ionic', '*', '@description', '*/', 'export', 'var', 'Grid', '=', '(function', '()', '{', 'function', 'Grid()', '{', '}', 'Grid.decorators', '=', '[', '{', 'type:', 'Directive,', 'args:', '[{', 'selector:', ""'ion-grid'"", '},]', '},', '];', '/**', '@nocollapse', '*/', 'Grid.ctorParameters', '=', '[];', 'return', 'Grid;', '}());', '/**', '*', '@private', '*', '@name', 'Row', '*', '@module', 'ionic', '*', '@description', '*/', 'export', 'var', 'Row', '=', '(function', '()', '{', 'function', 'Row()', '{', '}', 'Row.decorators', '=', '[', '{', 'type:', 'Directive,', 'args:', '[{', 'selector:', ""'ion-row'"", '},]', '},', '];', '/**', '@nocollapse', '*/', 'Row.ctorParameters', '=', '[];', 'return', 'Row;', '}());', '/**', '*', '@private', '*', '@name', 'Column', '*', '@module', 'ionic', '*', '@description', '*/', 'export', 'var', 'Col', '=', '(function', '()', '{', 'function', 'Col()', '{', '}', 'Col.decorators', '=', '[', '{', 'type:', 'Directive,', 'args:', '[{', 'selector:', ""'ion-col'"", '},]', '},', '];', '/**', '@nocollapse', '*/', 'Col.ctorParameters', '=', '[];', 'return', 'Col;', '}());', '//#', 'sourceMappingURL=grid.js.map```']",challenge not surrounded by ''': ,
"<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">

<title>Moderne JavaScript Entwicklung (Teil I)</title>

<meta name=""author"" content=""Thomas Pasch"">
<meta name=""description"" content=""Moderne Browser One Page Applications entwickeln Teil 1 - Grundlagen und Setup"">

<meta name=""apple-mobile-web-app-capable"" content=""yes"">
<meta name=""apple-mobile-web-app-status-bar-style"" content=""black-translucent"">

<meta name=""viewport"" content=""width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"">

<link rel=""stylesheet"" href=""/assets/css/style.css"">
<!-- jQuery -->
<script src=""/assets/js/jquery-1.11.1.min.js""></script>

<!-- If the query includes 'print-pdf', include the PDF print sheet -->
<script>
	if( window.location.search.match( /print-pdf/gi ) ) {
		var link = document.createElement( 'link' );
		link.rel = 'stylesheet';
		link.type = 'text/css';
		link.href = '/reveal.js/css/print/pdf.css';
		document.getElementsByTagName( 'head' )[0].appendChild( link );
	}
</script>

<!--[if lt IE 9]>
<script src=""/reveal.js/lib/js/html5shiv.js""></script>
<![endif]-->

</head>
<body>
  <div class=""reveal"">
    <div class=""step"">
      <section>
  <ul>
    <li>Nur wenige Änderungen, hauptsächlich Standarisierung</li>
    <li>Strict mode (<code class=""highlighter-rouge"">'use strict';</code>)
      <ul>
        <li><code class=""highlighter-rouge"">this</code> wird nicht an das gobale Object gebunden</li>
        <li>Keine impliziten globalen Variablen in Funktionen</li>
        <li>Einschränkungen bei <code class=""highlighter-rouge"">eval</code></li>
        <li><code class=""highlighter-rouge"">arguments.caller</code> und <code class=""highlighter-rouge"">arguments.callee</code> sind verboten</li>
        <li>Doppelte Namen in Objekt Literalen und in Funktionsparametern führen zu Fehler</li>
        <li>…</li>
      </ul>
    </li>
  </ul>
</section>

<section>
  <ul>
    <li>Trailing comma</li>
    <li>Metaprogrammierung
      <ul>
        <li><code class=""highlighter-rouge"">Object.create()</code></li>
        <li>Property Descriptors: <code class=""highlighter-rouge"">defineProperty()</code>, …</li>
        <li>Property Iteration: <code class=""highlighter-rouge"">keys()</code>, <code class=""highlighter-rouge"">getOwnPropertyNames()</code></li>
        <li>Protecting Properties: <code class=""highlighter-rouge"">preventExtensions()</code>, <code class=""highlighter-rouge"">seal()</code>, <code class=""highlighter-rouge"">freeze()</code>, …</li>
        <li><code class=""highlighter-rouge"">Function.prototype.bind()</code></li>
      </ul>
    </li>
    <li>Zusätzliche Array Funktionen: <code class=""highlighter-rouge"">every</code>, <code class=""highlighter-rouge"">filter</code>, <code class=""highlighter-rouge"">forEach</code>, <code class=""highlighter-rouge"">map</code>, …</li>
    <li>JSON (<code class=""highlighter-rouge"">parse</code> und <code class=""highlighter-rouge"">stringify</code>)</li>
  </ul>
</section>

<section>
  <h3 id=""quintessenz-es5"">Quintessenz ES5</h3>
  <ul>
    <li>Normalerweise sollte man ES6 verwenden</li>
    <li>Wenn schon ES5, dann mit <code class=""highlighter-rouge"">'use strict';</code></li>
    <li>Bitte keine ES3 spezifischen Konstrukte</li>
  </ul>
</section>

    </div>
  </div>
</body>
</html>

","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'html>', '<html>', '<head>', '<meta', 'charset=""utf-8"">', '<title>Moderne', 'JavaScript', 'Entwicklung', '(Teil', 'I)</title>', '<meta', 'name=""author""', 'content=""Thomas', 'Pasch"">', '<meta', 'name=""description""', 'content=""Moderne', 'Browser', 'One', 'Page', 'Applications', 'entwickeln', 'Teil', '1', '-', 'Grundlagen', 'und', 'Setup"">', '<meta', 'name=""apple-mobile-web-app-capable""', 'content=""yes"">', '<meta', 'name=""apple-mobile-web-app-status-bar-style""', 'content=""black-translucent"">', '<meta', 'name=""viewport""', 'content=""width=device-width,', 'initial-scale=1.0,', 'maximum-scale=1.0,', 'user-scalable=no"">', '<link', 'rel=""stylesheet""', 'href=""/assets/css/style.css"">', '<!--', 'jQuery', '-->', '<script', 'src=""/assets/js/jquery-1.11.1.min.js""></script>', '<!--', 'If', 'the', 'query', 'includes', ""'print-pdf',"", 'include', 'the', 'PDF', 'print', 'sheet', '-->', '<script>', 'if(', 'window.location.search.match(', '/print-pdf/gi', ')', ')', '{', 'var', 'link', '=', 'document.createElement(', ""'link'"", ');', 'link.rel', '=', ""'stylesheet';"", 'link.type', '=', ""'text/css';"", 'link.href', '=', ""'/reveal.js/css/print/pdf.css';"", 'document.getElementsByTagName(', ""'head'"", ')[0].appendChild(', 'link', ');', '}', '</script>', '<!--[if', 'lt', 'IE', '9]>', '<script', 'src=""/reveal.js/lib/js/html5shiv.js""></script>', '<![endif]-->', '</head>', '<body>', '<div', 'class=""reveal"">', '<div', 'class=""step"">', '<section>', '<ul>', '<li>Nur', 'wenige', 'Änderungen,', 'hauptsächlich', 'Standarisierung</li>', '<li>Strict', 'mode', '(<code', 'class=""highlighter-rouge"">\'use', ""strict';</code>)"", '<ul>', '<li><code', 'class=""highlighter-rouge"">this</code>', 'wird', 'nicht', 'an', 'das', 'gobale', 'Object', 'gebunden</li>', '<li>Keine', 'impliziten', 'globalen', 'Variablen', 'in', 'Funktionen</li>', '<li>Einschränkungen', 'bei', '<code', 'class=""highlighter-rouge"">eval</code></li>', '<li><code', 'class=""highlighter-rouge"">arguments.caller</code>', 'und', '<code', 'class=""highlighter-rouge"">arguments.callee</code>', 'sind', 'verboten</li>', '<li>Doppelte', 'Namen', 'in', 'Objekt', 'Literalen', 'und', 'in', 'Funktionsparametern', 'führen', 'zu', 'Fehler</li>', '<li>…</li>', '</ul>', '</li>', '</ul>', '</section>', '<section>', '<ul>', '<li>Trailing', 'comma</li>', '<li>Metaprogrammierung', '<ul>', '<li><code', 'class=""highlighter-rouge"">Object.create()</code></li>', '<li>Property', 'Descriptors:', '<code', 'class=""highlighter-rouge"">defineProperty()</code>,', '…</li>', '<li>Property', 'Iteration:', '<code', 'class=""highlighter-rouge"">keys()</code>,', '<code', 'class=""highlighter-rouge"">getOwnPropertyNames()</code></li>', '<li>Protecting', 'Properties:', '<code', 'class=""highlighter-rouge"">preventExtensions()</code>,', '<code', 'class=""highlighter-rouge"">seal()</code>,', '<code', 'class=""highlighter-rouge"">freeze()</code>,', '…</li>', '<li><code', 'class=""highlighter-rouge"">Function.prototype.bind()</code></li>', '</ul>', '</li>', '<li>Zusätzliche', 'Array', 'Funktionen:', '<code', 'class=""highlighter-rouge"">every</code>,', '<code', 'class=""highlighter-rouge"">filter</code>,', '<code', 'class=""highlighter-rouge"">forEach</code>,', '<code', 'class=""highlighter-rouge"">map</code>,', '…</li>', '<li>JSON', '(<code', 'class=""highlighter-rouge"">parse</code>', 'und', '<code', 'class=""highlighter-rouge"">stringify</code>)</li>', '</ul>', '</section>', '<section>', '<h3', 'id=""quintessenz-es5"">Quintessenz', 'ES5</h3>', '<ul>', '<li>Normalerweise', 'sollte', 'man', 'ES6', 'verwenden</li>', '<li>Wenn', 'schon', 'ES5,', 'dann', 'mit', '<code', 'class=""highlighter-rouge"">\'use', ""strict';</code></li>"", '<li>Bitte', 'keine', 'ES3', 'spezifischen', 'Konstrukte</li>', '</ul>', '</section>', '</div>', '</div>', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"/** Class to aid with route visualization for search
 *  
 * @author UCSD MOOC development team
 *
 */

package application;

import java.util.ArrayList;
import java.util.List;

import gmapsfx.javascript.IJavascriptRuntime;
import gmapsfx.javascript.JavascriptArray;
import gmapsfx.javascript.JavascriptRuntime;
import gmapsfx.javascript.object.LatLong;
import gmapsfx.javascript.object.LatLongBounds;
import gmapsfx.javascript.object.Marker;
import gmapsfx.javascript.object.MarkerOptions;

public class RouteVisualization {
	List<geography.GeographicPoint> points;
    ArrayList<Marker> markerList;
	MarkerManager manager;
	JavascriptArray markers;
    IJavascriptRuntime runtime;




	public RouteVisualization(MarkerManager manager) {
        points = new ArrayList<geography.GeographicPoint>();
        markerList = new ArrayList<Marker>();
		this.manager = manager;

	}

    public void acceptPoint(geography.GeographicPoint point) {
    	points.add(point);

        // System.out.println(""accepted point : "" + point);
    }



    public void startVisualization() {

    	LatLongBounds bounds = new LatLongBounds();
    	List<LatLong> latLongs = new ArrayList<LatLong>();
    	JavascriptArray jsArray = new JavascriptArray();
    	manager.hideIntermediateMarkers();
        manager.hideDestinationMarker();
//    	manager.disableRouteButtons(true);

    	// create JavascriptArray of points
    	for(geography.GeographicPoint point : points) {
    		LatLong ll = new LatLong(point.getX(), point.getY());
    		MarkerOptions options = MarkerManager.createDefaultOptions(ll);
    		Marker newMarker = new Marker(options);
            jsArray.push(newMarker);
            markerList.add(newMarker);
            bounds.extend(ll);
    	}

    	// fit map bounds to visualization
    	manager.getMap().fitBounds(bounds);

        // get javascript runtime and execute animation
    	runtime = JavascriptRuntime.getInstance();
    	String command = runtime.getFunction(""visualizeSearch"", manager.getMap(), jsArray);
    	// System.out.println(command);

    	runtime.execute(command);

//    	MapApp.showInfoAlert(""Nodes visited :""  , latLongs.size() +"" nodes were visited in the search"");
    	manager.disableVisButton(true);
//        manager.disableRouteButtons(false);


    }

    public void clearMarkers() {
    	for(Marker marker : markerList) {
    		marker.setVisible(false);
    	}
    }


}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', 'Class', 'to', 'aid', 'with', 'route', 'visualization', 'for', 'search', '*', '*', '@author', 'UCSD', 'MOOC', 'development', 'team', '*', '*/', 'package', 'application;', 'import', 'java.util.ArrayList;', 'import', 'java.util.List;', 'import', 'gmapsfx.javascript.IJavascriptRuntime;', 'import', 'gmapsfx.javascript.JavascriptArray;', 'import', 'gmapsfx.javascript.JavascriptRuntime;', 'import', 'gmapsfx.javascript.object.LatLong;', 'import', 'gmapsfx.javascript.object.LatLongBounds;', 'import', 'gmapsfx.javascript.object.Marker;', 'import', 'gmapsfx.javascript.object.MarkerOptions;', 'public', 'class', 'RouteVisualization', '{', 'List<geography.GeographicPoint>', 'points;', 'ArrayList<Marker>', 'markerList;', 'MarkerManager', 'manager;', 'JavascriptArray', 'markers;', 'IJavascriptRuntime', 'runtime;', 'public', 'RouteVisualization(MarkerManager', 'manager)', '{', 'points', '=', 'new', 'ArrayList<geography.GeographicPoint>();', 'markerList', '=', 'new', 'ArrayList<Marker>();', 'this.manager', '=', 'manager;', '}', 'public', 'void', 'acceptPoint(geography.GeographicPoint', 'point)', '{', 'points.add(point);', '//', 'System.out.println(""accepted', 'point', ':', '""', '+', 'point);', '}', 'public', 'void', 'startVisualization()', '{', 'LatLongBounds', 'bounds', '=', 'new', 'LatLongBounds();', 'List<LatLong>', 'latLongs', '=', 'new', 'ArrayList<LatLong>();', 'JavascriptArray', 'jsArray', '=', 'new', 'JavascriptArray();', 'manager.hideIntermediateMarkers();', 'manager.hideDestinationMarker();', '//', 'manager.disableRouteButtons(true);', '//', 'create', 'JavascriptArray', 'of', 'points', 'for(geography.GeographicPoint', 'point', ':', 'points)', '{', 'LatLong', 'll', '=', 'new', 'LatLong(point.getX(),', 'point.getY());', 'MarkerOptions', 'options', '=', 'MarkerManager.createDefaultOptions(ll);', 'Marker', 'newMarker', '=', 'new', 'Marker(options);', 'jsArray.push(newMarker);', 'markerList.add(newMarker);', 'bounds.extend(ll);', '}', '//', 'fit', 'map', 'bounds', 'to', 'visualization', 'manager.getMap().fitBounds(bounds);', '//', 'get', 'javascript', 'runtime', 'and', 'execute', 'animation', 'runtime', '=', 'JavascriptRuntime.getInstance();', 'String', 'command', '=', 'runtime.getFunction(""visualizeSearch"",', 'manager.getMap(),', 'jsArray);', '//', 'System.out.println(command);', 'runtime.execute(command);', '//', 'MapApp.showInfoAlert(""Nodes', 'visited', ':""', ',', 'latLongs.size()', '+""', 'nodes', 'were', 'visited', 'in', 'the', 'search"");', 'manager.disableVisButton(true);', '//', 'manager.disableRouteButtons(false);', '}', 'public', 'void', 'clearMarkers()', '{', 'for(Marker', 'marker', ':', 'markerList)', '{', 'marker.setVisible(false);', '}', '}', '}', '```']",challenge not surrounded by ''': ,
"<!-- index.htm -->
<HTML>
  <title>Java Web Start CORBA Sample </title>
<BODY>
<h2>Welcome to Java Web Start - A classic ""Hello World"" Example</h2>
<h3>A simple program using Java Remote Method Invocation (RMI) over Internet Inter-ORB Protocol (IIOP).</h3>
<p>
<font size=""20""><a href=""app/helloworld.jnlp"">Launch HelloWorld Client Application</a></font>
<h4>Please make sure that ORB Daemon and HelloServer are running before launching the Client</h4>

<p>
</BODY>
</HTML>

","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!--', 'index.htm', '-->', '<HTML>', '<title>Java', 'Web', 'Start', 'CORBA', 'Sample', '</title>', '<BODY>', '<h2>Welcome', 'to', 'Java', 'Web', 'Start', '-', 'A', 'classic', '""Hello', 'World""', 'Example</h2>', '<h3>A', 'simple', 'program', 'using', 'Java', 'Remote', 'Method', 'Invocation', '(RMI)', 'over', 'Internet', 'Inter-ORB', 'Protocol', '(IIOP).</h3>', '<p>', '<font', 'size=""20""><a', 'href=""app/helloworld.jnlp"">Launch', 'HelloWorld', 'Client', 'Application</a></font>', '<h4>Please', 'make', 'sure', 'that', 'ORB', 'Daemon', 'and', 'HelloServer', 'are', 'running', 'before', 'launching', 'the', 'Client</h4>', '<p>', '</BODY>', '</HTML>', '```']",challenge not surrounded by ''': ,
"/**
 * Created by Antoine on 3/8/2015.
 */
var stringify = function(futureOptions) {
	return function* (next){
		yield next;
		this.body = JSON.stringify(this.body,null,2)
	};
};

module.exports = stringify;","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', 'Created', 'by', 'Antoine', 'on', '3/8/2015.', '*/', 'var', 'stringify', '=', 'function(futureOptions)', '{', 'return', 'function*', '(next){', 'yield', 'next;', 'this.body', '=', 'JSON.stringify(this.body,null,2)', '};', '};', 'module.exports', '=', 'stringify;```']",challenge not surrounded by ''': ,
"package org.osmdroid.util;

import android.location.LocationManager;

/**
 * 
 * A class to check whether we want to use a location. If there are multiple location providers,
 * i.e. network and GPS, then you want to ignore network locations shortly after a GPS location
 * because you will get another GPS location soon.
 * 
 * @author Neil Boyd
 * 
 */
public class NetworkLocationIgnorer {

	/**
	 * The time we wait after the last gps location before displaying a non-gps location.
	 */
	private static final long GPS_WAIT_TIME = 20000; // 20 seconds

	/** last time we got a location from the gps provider */
	private long mLastGps = 0;

	/**
	 * Whether we should ignore this location.
	 * 
	 * @param pProvider
	 *            the provider that provided the location
	 * @param pTime
	 *            the time of the location
	 * @return true if we should ignore this location, false if not
	 */
	public boolean shouldIgnore(final String pProvider, final long pTime) {

		if (LocationManager.GPS_PROVIDER.equals(pProvider)) {
			mLastGps = pTime;
		} else {
			if (pTime < mLastGps + GPS_WAIT_TIME) {
				return true;
			}
		}

		return false;
	}
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'org.osmdroid.util;', 'import', 'android.location.LocationManager;', '/**', '*', '*', 'A', 'class', 'to', 'check', 'whether', 'we', 'want', 'to', 'use', 'a', 'location.', 'If', 'there', 'are', 'multiple', 'location', 'providers,', '*', 'i.e.', 'network', 'and', 'GPS,', 'then', 'you', 'want', 'to', 'ignore', 'network', 'locations', 'shortly', 'after', 'a', 'GPS', 'location', '*', 'because', 'you', 'will', 'get', 'another', 'GPS', 'location', 'soon.', '*', '*', '@author', 'Neil', 'Boyd', '*', '*/', 'public', 'class', 'NetworkLocationIgnorer', '{', '/**', '*', 'The', 'time', 'we', 'wait', 'after', 'the', 'last', 'gps', 'location', 'before', 'displaying', 'a', 'non-gps', 'location.', '*/', 'private', 'static', 'final', 'long', 'GPS_WAIT_TIME', '=', '20000;', '//', '20', 'seconds', '/**', 'last', 'time', 'we', 'got', 'a', 'location', 'from', 'the', 'gps', 'provider', '*/', 'private', 'long', 'mLastGps', '=', '0;', '/**', '*', 'Whether', 'we', 'should', 'ignore', 'this', 'location.', '*', '*', '@param', 'pProvider', '*', 'the', 'provider', 'that', 'provided', 'the', 'location', '*', '@param', 'pTime', '*', 'the', 'time', 'of', 'the', 'location', '*', '@return', 'true', 'if', 'we', 'should', 'ignore', 'this', 'location,', 'false', 'if', 'not', '*/', 'public', 'boolean', 'shouldIgnore(final', 'String', 'pProvider,', 'final', 'long', 'pTime)', '{', 'if', '(LocationManager.GPS_PROVIDER.equals(pProvider))', '{', 'mLastGps', '=', 'pTime;', '}', 'else', '{', 'if', '(pTime', '<', 'mLastGps', '+', 'GPS_WAIT_TIME)', '{', 'return', 'true;', '}', '}', 'return', 'false;', '}', '}', '```']",challenge not surrounded by ''': ,
"if (typeof define !== 'function') { var define = require('amdefine')(module); }
define([ 
    'knockout',
    'underscore',
    './Link',
    '../misc',
], function(ko, _, Link, misc) {
    'use strict';

    var o = ko.observable,
        u = ko.utils.unwrapObservable,
        c = ko.computed,
        w = function(v) { return ko.isObservable(v) ? v : o(v);},
        die = misc.die;

    // LinkToCollection :: Collection -> Link
    //
    // A constant link that ignores its input and returns the provided destination collection
    //
    var LinkToCollection = function(destination) {
        (destination && _(destination).has('models')) || die('Collection provided to `LinkToCollection` missing required field `models`:' + destination);

        return new Link({
            resolve: function(sourceCollection) {
                return destination;
            }
        });
    };

    return LinkToCollection;
});

","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```if', '(typeof', 'define', '!==', ""'function')"", '{', 'var', 'define', '=', ""require('amdefine')(module);"", '}', 'define([', ""'knockout',"", ""'underscore',"", ""'./Link',"", ""'../misc',"", '],', 'function(ko,', '_,', 'Link,', 'misc)', '{', ""'use"", ""strict';"", 'var', 'o', '=', 'ko.observable,', 'u', '=', 'ko.utils.unwrapObservable,', 'c', '=', 'ko.computed,', 'w', '=', 'function(v)', '{', 'return', 'ko.isObservable(v)', '?', 'v', ':', 'o(v);},', 'die', '=', 'misc.die;', '//', 'LinkToCollection', '::', 'Collection', '->', 'Link', '//', '//', 'A', 'constant', 'link', 'that', 'ignores', 'its', 'input', 'and', 'returns', 'the', 'provided', 'destination', 'collection', '//', 'var', 'LinkToCollection', '=', 'function(destination)', '{', '(destination', '&&', ""_(destination).has('models'))"", '||', ""die('Collection"", 'provided', 'to', '`LinkToCollection`', 'missing', 'required', 'field', ""`models`:'"", '+', 'destination);', 'return', 'new', 'Link({', 'resolve:', 'function(sourceCollection)', '{', 'return', 'destination;', '}', '});', '};', 'return', 'LinkToCollection;', '});', '```']",challenge not surrounded by ''': ,
"/*******************************************************************************
 *
 *	Copyright (c) 2016 Fujitsu Services Ltd.
 *
 *	Author: Nick Battle
 *
 *	This file is part of VDMJ.
 *
 *	VDMJ is free software: you can redistribute it and/or modify
 *	it under the terms of the GNU General Public License as published by
 *	the Free Software Foundation, either version 3 of the License, or
 *	(at your option) any later version.
 *
 *	VDMJ is distributed in the hope that it will be useful,
 *	but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *	GNU General Public License for more details.
 *
 *	You should have received a copy of the GNU General Public License
 *	along with VDMJ.  If not, see <http://www.gnu.org/licenses/>.
 *	SPDX-License-Identifier: GPL-3.0-or-later
 *
 ******************************************************************************/

package com.fujitsu.vdmj.in.expressions;

import com.fujitsu.vdmj.in.expressions.visitors.INExpressionVisitor;
import com.fujitsu.vdmj.lex.LexLocation;
import com.fujitsu.vdmj.runtime.Context;
import com.fujitsu.vdmj.runtime.ValueException;
import com.fujitsu.vdmj.values.MapValue;
import com.fujitsu.vdmj.values.Value;
import com.fujitsu.vdmj.values.ValueMap;
import com.fujitsu.vdmj.values.ValueSet;

public class INDistMergeExpression extends INUnaryExpression
{
	private static final long serialVersionUID = 1L;

	public INDistMergeExpression(LexLocation location, INExpression exp)
	{
		super(location, exp);
	}

	@Override
	public String toString()
	{
		return ""(merge "" + exp + "")"";
	}

	@Override
	public Value eval(Context ctxt)
	{
		breakpoint.check(location, ctxt);

		try
		{
    		ValueSet setmap = exp.eval(ctxt).setValue(ctxt);
    		ValueMap result = new ValueMap();

    		for (Value v: setmap)
    		{
    			ValueMap m = v.mapValue(ctxt);
    			
    			for (Value k: m.keySet())
    			{
    				Value rng = m.get(k);
    				Value old = result.put(k, rng);

    				if (old != null && !old.equals(rng))
    				{
    					abort(4021, ""Duplicate map keys have different values: "" + k, ctxt);
    				}
    			}
    		}

    		return new MapValue(result);
        }
        catch (ValueException e)
        {
        	return abort(e);
        }
    }

	@Override
	public <R, S> R apply(INExpressionVisitor<R, S> visitor, S arg)
	{
		return visitor.caseDistMergeExpression(this, arg);
	}
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*******************************************************************************', '*', '*', 'Copyright', '(c)', '2016', 'Fujitsu', 'Services', 'Ltd.', '*', '*', 'Author:', 'Nick', 'Battle', '*', '*', 'This', 'file', 'is', 'part', 'of', 'VDMJ.', '*', '*', 'VDMJ', 'is', 'free', 'software:', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', '*', 'it', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'as', 'published', 'by', '*', 'the', 'Free', 'Software', 'Foundation,', 'either', 'version', '3', 'of', 'the', 'License,', 'or', '*', '(at', 'your', 'option)', 'any', 'later', 'version.', '*', '*', 'VDMJ', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', '*', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', '*', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', '*', 'GNU', 'General', 'Public', 'License', 'for', 'more', 'details.', '*', '*', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'General', 'Public', 'License', '*', 'along', 'with', 'VDMJ.', 'If', 'not,', 'see', '<http://www.gnu.org/licenses/>.', '*', 'SPDX-License-Identifier:', 'GPL-3.0-or-later', '*', '******************************************************************************/', 'package', 'com.fujitsu.vdmj.in.expressions;', 'import', 'com.fujitsu.vdmj.in.expressions.visitors.INExpressionVisitor;', 'import', 'com.fujitsu.vdmj.lex.LexLocation;', 'import', 'com.fujitsu.vdmj.runtime.Context;', 'import', 'com.fujitsu.vdmj.runtime.ValueException;', 'import', 'com.fujitsu.vdmj.values.MapValue;', 'import', 'com.fujitsu.vdmj.values.Value;', 'import', 'com.fujitsu.vdmj.values.ValueMap;', 'import', 'com.fujitsu.vdmj.values.ValueSet;', 'public', 'class', 'INDistMergeExpression', 'extends', 'INUnaryExpression', '{', 'private', 'static', 'final', 'long', 'serialVersionUID', '=', '1L;', 'public', 'INDistMergeExpression(LexLocation', 'location,', 'INExpression', 'exp)', '{', 'super(location,', 'exp);', '}', '@Override', 'public', 'String', 'toString()', '{', 'return', '""(merge', '""', '+', 'exp', '+', '"")"";', '}', '@Override', 'public', 'Value', 'eval(Context', 'ctxt)', '{', 'breakpoint.check(location,', 'ctxt);', 'try', '{', 'ValueSet', 'setmap', '=', 'exp.eval(ctxt).setValue(ctxt);', 'ValueMap', 'result', '=', 'new', 'ValueMap();', 'for', '(Value', 'v:', 'setmap)', '{', 'ValueMap', 'm', '=', 'v.mapValue(ctxt);', 'for', '(Value', 'k:', 'm.keySet())', '{', 'Value', 'rng', '=', 'm.get(k);', 'Value', 'old', '=', 'result.put(k,', 'rng);', 'if', '(old', '!=', 'null', '&&', '!old.equals(rng))', '{', 'abort(4021,', '""Duplicate', 'map', 'keys', 'have', 'different', 'values:', '""', '+', 'k,', 'ctxt);', '}', '}', '}', 'return', 'new', 'MapValue(result);', '}', 'catch', '(ValueException', 'e)', '{', 'return', 'abort(e);', '}', '}', '@Override', 'public', '<R,', 'S>', 'R', 'apply(INExpressionVisitor<R,', 'S>', 'visitor,', 'S', 'arg)', '{', 'return', 'visitor.caseDistMergeExpression(this,', 'arg);', '}', '}', '```']",challenge not surrounded by ''': ,
"/*
* Copyright 2010-2015 Amazon.com, Inc. or its affiliates. All Rights Reserved.
*
* Licensed under the Apache License, Version 2.0 (the ""License"").
* You may not use this file except in compliance with the License.
* A copy of the License is located at
*
*  http://aws.amazon.com/apache2.0
*
* or in the ""license"" file accompanying this file. This file is distributed
* on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
* express or implied. See the License for the specific language governing
* permissions and limitations under the License.
*/
#include <aws/elasticloadbalancing/model/ResponseMetadata.h>
#include <aws/core/utils/xml/XmlSerializer.h>
#include <aws/core/utils/StringUtils.h>
#include <aws/core/utils/memory/stl/AWSStringStream.h>

#include <utility>

using namespace Aws::ElasticLoadBalancing::Model;
using namespace Aws::Utils::Xml;
using namespace Aws::Utils;

ResponseMetadata::ResponseMetadata() : 
    m_requestIdHasBeenSet(false)
{
}

ResponseMetadata::ResponseMetadata(const XmlNode& xmlNode) : 
    m_requestIdHasBeenSet(false)
{
  *this = xmlNode;
}

ResponseMetadata& ResponseMetadata::operator =(const XmlNode& xmlNode)
{
  XmlNode resultNode = xmlNode;

  if(!resultNode.IsNull())
  {
    XmlNode requestIdNode = resultNode.FirstChild(""RequestId"");
    if(!requestIdNode.IsNull())
    {
      m_requestId = StringUtils::Trim(requestIdNode.GetText().c_str());
      m_requestIdHasBeenSet = true;
    }
  }

  return *this;
}

void ResponseMetadata::OutputToStream(Aws::OStream& oStream, const char* location, unsigned index, const char* locationValue) const
{
  if(m_requestIdHasBeenSet)
  {
      oStream << location << index << locationValue << "".RequestId="" << StringUtils::URLEncode(m_requestId.c_str()) << ""&"";
  }
}

void ResponseMetadata::OutputToStream(Aws::OStream& oStream, const char* location) const
{
  if(m_requestIdHasBeenSet)
  {
      oStream << location << "".RequestId="" << StringUtils::URLEncode(m_requestId.c_str()) << ""&"";
  }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '2010-2015', 'Amazon.com,', 'Inc.', 'or', 'its', 'affiliates.', 'All', 'Rights', 'Reserved.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"").', '*', 'You', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'A', 'copy', 'of', 'the', 'License', 'is', 'located', 'at', '*', '*', 'http://aws.amazon.com/apache2.0', '*', '*', 'or', 'in', 'the', '""license""', 'file', 'accompanying', 'this', 'file.', 'This', 'file', 'is', 'distributed', '*', 'on', 'an', '""AS', 'IS""', 'BASIS,', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', '*', 'express', 'or', 'implied.', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', '*', 'permissions', 'and', 'limitations', 'under', 'the', 'License.', '*/', '#include', '<aws/elasticloadbalancing/model/ResponseMetadata.h>', '#include', '<aws/core/utils/xml/XmlSerializer.h>', '#include', '<aws/core/utils/StringUtils.h>', '#include', '<aws/core/utils/memory/stl/AWSStringStream.h>', '#include', '<utility>', 'using', 'namespace', 'Aws::ElasticLoadBalancing::Model;', 'using', 'namespace', 'Aws::Utils::Xml;', 'using', 'namespace', 'Aws::Utils;', 'ResponseMetadata::ResponseMetadata()', ':', 'm_requestIdHasBeenSet(false)', '{', '}', 'ResponseMetadata::ResponseMetadata(const', 'XmlNode&', 'xmlNode)', ':', 'm_requestIdHasBeenSet(false)', '{', '*this', '=', 'xmlNode;', '}', 'ResponseMetadata&', 'ResponseMetadata::operator', '=(const', 'XmlNode&', 'xmlNode)', '{', 'XmlNode', 'resultNode', '=', 'xmlNode;', 'if(!resultNode.IsNull())', '{', 'XmlNode', 'requestIdNode', '=', 'resultNode.FirstChild(""RequestId"");', 'if(!requestIdNode.IsNull())', '{', 'm_requestId', '=', 'StringUtils::Trim(requestIdNode.GetText().c_str());', 'm_requestIdHasBeenSet', '=', 'true;', '}', '}', 'return', '*this;', '}', 'void', 'ResponseMetadata::OutputToStream(Aws::OStream&', 'oStream,', 'const', 'char*', 'location,', 'unsigned', 'index,', 'const', 'char*', 'locationValue)', 'const', '{', 'if(m_requestIdHasBeenSet)', '{', 'oStream', '<<', 'location', '<<', 'index', '<<', 'locationValue', '<<', '"".RequestId=""', '<<', 'StringUtils::URLEncode(m_requestId.c_str())', '<<', '""&"";', '}', '}', 'void', 'ResponseMetadata::OutputToStream(Aws::OStream&', 'oStream,', 'const', 'char*', 'location)', 'const', '{', 'if(m_requestIdHasBeenSet)', '{', 'oStream', '<<', 'location', '<<', '"".RequestId=""', '<<', 'StringUtils::URLEncode(m_requestId.c_str())', '<<', '""&"";', '}', '}', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright (c) 2009-2013 devBury LLC
 *
 *   This file is part of mkRemote.
 *
 *   mkRemote is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License Version 3
 *   as published by the Free Software Foundation.
 *
 *   mkRemote is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with mkRemote.  If not, see <http://www.gnu.org/licenses/gpl.txt/>.
 */

package com.devbury.android;

import android.content.Context;
import android.content.res.Configuration;

public class Android5ConfigurationData implements AndroidConfigurationData {

    private Context context;

    public Android5ConfigurationData(Context c) {
        context = c;
    }

    @Override
    public void appendConfigurationData(StringBuffer sb) {
        Configuration config = null;
        try {
            config = context.getResources().getConfiguration();
        } catch (Throwable t) {
        }
        try {
            sb.append(""navigationHidden : "").append(config.navigationHidden).append('\n');
        } catch (Throwable t) {
        }
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '(c)', '2009-2013', 'devBury', 'LLC', '*', '*', 'This', 'file', 'is', 'part', 'of', 'mkRemote.', '*', '*', 'mkRemote', 'is', 'free', 'software:', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', '*', 'it', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'Version', '3', '*', 'as', 'published', 'by', 'the', 'Free', 'Software', 'Foundation.', '*', '*', 'mkRemote', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', '*', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', '*', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', '*', 'GNU', 'General', 'Public', 'License', 'for', 'more', 'details.', '*', '*', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'General', 'Public', 'License', '*', 'along', 'with', 'mkRemote.', 'If', 'not,', 'see', '<http://www.gnu.org/licenses/gpl.txt/>.', '*/', 'package', 'com.devbury.android;', 'import', 'android.content.Context;', 'import', 'android.content.res.Configuration;', 'public', 'class', 'Android5ConfigurationData', 'implements', 'AndroidConfigurationData', '{', 'private', 'Context', 'context;', 'public', 'Android5ConfigurationData(Context', 'c)', '{', 'context', '=', 'c;', '}', '@Override', 'public', 'void', 'appendConfigurationData(StringBuffer', 'sb)', '{', 'Configuration', 'config', '=', 'null;', 'try', '{', 'config', '=', 'context.getResources().getConfiguration();', '}', 'catch', '(Throwable', 't)', '{', '}', 'try', '{', 'sb.append(""navigationHidden', ':', '"").append(config.navigationHidden).append(\'\\n\');', '}', 'catch', '(Throwable', 't)', '{', '}', '}', '}', '```']",challenge not surrounded by ''': ,
"package org.leialearns.graph.model;

import org.leialearns.api.enumerations.ModelType;
import org.leialearns.api.model.Counted;
import org.leialearns.bridge.FarObject;
import org.leialearns.common.Setting;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import static org.leialearns.bridge.Static.getFarObject;
import static org.leialearns.common.Display.displayParts;
import static org.leialearns.common.Static.equal;
import static org.leialearns.common.Static.getLoggingClass;

public class CountedDTO implements FarObject<Counted> {
    private final transient Logger logger = LoggerFactory.getLogger(getLoggingClass(this));
    private final Setting<VersionDTO> version = new Setting<>(""Version"");

    public VersionDTO getVersion() {
        return version.get();
    }

    public void setVersion(VersionDTO version) {
        ModelType modelType = version.getModelType();
        if (modelType != getModelType()) {
            throw new IllegalArgumentException(""Model type inconsistent with class: "" + modelType + "": "" + getClass().getSimpleName());
        }
        this.version.set(version);
    }

    public ModelType getModelType() {
        return ModelType.COUNTED;
    }

    public String toString() {
        return displayParts(""Counted"", (version.isFixated() ? version.get() : null));
    }

    public boolean equals(Object other) {
        logger.trace(""Equals? "" + this + "" =?= "" + other);
        CountedDTO otherCounted;
        if (other instanceof CountedDTO) {
            otherCounted = (CountedDTO) other;
        } else if (other instanceof Counted) {
            otherCounted = getFarObject((Counted) other, CountedDTO.class);
        } else {
            otherCounted = null;
        }
        VersionDTO otherVersion = (otherCounted == null ? null : otherCounted.getVersion());
        logger.trace(""Equals? "" + getVersion() + "" =?= "" + otherVersion);
        boolean result = equal(getVersion(), otherVersion);
        logger.trace(""Result: "" + result);
        return result;
    }

    public Counted declareNearType() {
        throw new UnsupportedOperationException(""This method is for declaration only"");
    }

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'org.leialearns.graph.model;', 'import', 'org.leialearns.api.enumerations.ModelType;', 'import', 'org.leialearns.api.model.Counted;', 'import', 'org.leialearns.bridge.FarObject;', 'import', 'org.leialearns.common.Setting;', 'import', 'org.slf4j.Logger;', 'import', 'org.slf4j.LoggerFactory;', 'import', 'static', 'org.leialearns.bridge.Static.getFarObject;', 'import', 'static', 'org.leialearns.common.Display.displayParts;', 'import', 'static', 'org.leialearns.common.Static.equal;', 'import', 'static', 'org.leialearns.common.Static.getLoggingClass;', 'public', 'class', 'CountedDTO', 'implements', 'FarObject<Counted>', '{', 'private', 'final', 'transient', 'Logger', 'logger', '=', 'LoggerFactory.getLogger(getLoggingClass(this));', 'private', 'final', 'Setting<VersionDTO>', 'version', '=', 'new', 'Setting<>(""Version"");', 'public', 'VersionDTO', 'getVersion()', '{', 'return', 'version.get();', '}', 'public', 'void', 'setVersion(VersionDTO', 'version)', '{', 'ModelType', 'modelType', '=', 'version.getModelType();', 'if', '(modelType', '!=', 'getModelType())', '{', 'throw', 'new', 'IllegalArgumentException(""Model', 'type', 'inconsistent', 'with', 'class:', '""', '+', 'modelType', '+', '"":', '""', '+', 'getClass().getSimpleName());', '}', 'this.version.set(version);', '}', 'public', 'ModelType', 'getModelType()', '{', 'return', 'ModelType.COUNTED;', '}', 'public', 'String', 'toString()', '{', 'return', 'displayParts(""Counted"",', '(version.isFixated()', '?', 'version.get()', ':', 'null));', '}', 'public', 'boolean', 'equals(Object', 'other)', '{', 'logger.trace(""Equals?', '""', '+', 'this', '+', '""', '=?=', '""', '+', 'other);', 'CountedDTO', 'otherCounted;', 'if', '(other', 'instanceof', 'CountedDTO)', '{', 'otherCounted', '=', '(CountedDTO)', 'other;', '}', 'else', 'if', '(other', 'instanceof', 'Counted)', '{', 'otherCounted', '=', 'getFarObject((Counted)', 'other,', 'CountedDTO.class);', '}', 'else', '{', 'otherCounted', '=', 'null;', '}', 'VersionDTO', 'otherVersion', '=', '(otherCounted', '==', 'null', '?', 'null', ':', 'otherCounted.getVersion());', 'logger.trace(""Equals?', '""', '+', 'getVersion()', '+', '""', '=?=', '""', '+', 'otherVersion);', 'boolean', 'result', '=', 'equal(getVersion(),', 'otherVersion);', 'logger.trace(""Result:', '""', '+', 'result);', 'return', 'result;', '}', 'public', 'Counted', 'declareNearType()', '{', 'throw', 'new', 'UnsupportedOperationException(""This', 'method', 'is', 'for', 'declaration', 'only"");', '}', '}', '```']",challenge not surrounded by ''': ,
"#!/usr/bin/python
# concatenate files to stdout
# replacement for Unix cat(1) command

import sys

for i in range(1, len(sys.argv)):
  file = open(sys.argv[i], ""r"");
  while 1:
    line = file.readline();
    if not line: break;
    sys.stdout.write(line)
  file.close();

","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/usr/bin/python', '#', 'concatenate', 'files', 'to', 'stdout', '#', 'replacement', 'for', 'Unix', 'cat(1)', 'command', 'import', 'sys', 'for', 'i', 'in', 'range(1,', 'len(sys.argv)):', 'file', '=', 'open(sys.argv[i],', '""r"");', 'while', '1:', 'line', '=', 'file.readline();', 'if', 'not', 'line:', 'break;', 'sys.stdout.write(line)', 'file.close();', '```']",challenge not surrounded by ''': ,
"/*
    Copyright(c) Microsoft Open Technologies, Inc. All rights reserved.

    The MIT License(MIT)

    Permission is hereby granted, free of charge, to any person obtaining a copy
    of this software and associated documentation files(the ""Software""), to deal
    in the Software without restriction, including without limitation the rights
    to use, copy, modify, merge, publish, distribute, sublicense, and / or sell
    copies of the Software, and to permit persons to whom the Software is
    furnished to do so, subject to the following conditions :

    The above copyright notice and this permission notice shall be included in
    all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
    THE SOFTWARE.
*/

#include ""Notification.h""
#include ""SensorModels.h""

extern ""C"" {
#include <string.h>
#include <stdlib.h>
}

const PROGMEM char SERVICE_NOTIFICATION[] = ""NOTIFY"";
const PROGMEM char TOAST[] = ""Toast"";
const PROGMEM char TILE[] = ""Tile"";

/// <summary>
/// Initializes a new instance of the <see cref=""Microphone""/> class.
/// </summary>
/// <param name=""shield"">The shield.</param>
Notification::Notification(const VirtualShield &shield) : Sensor(shield, 'N') {
}

/// <summary>
/// Send/Show a toast notification.
/// </summary>
/// <param name=""milliseconds"">The length in milliseconds.</param>
/// <param name=""url"">The URL.</param>
/// <returns>int.</returns>
int Notification::toast(String message, String tag, String image, String audio)
{
	EPtr eptrs[] = { EPtr(MemPtr, MESSAGE, message.c_str()), EPtr(tag ? MemPtr : None, TAG, tag.c_str()), 
		EPtr(image ? MemPtr : None, IMAGE, image.c_str()), EPtr(audio ? MemPtr : None, AUDIO, audio.c_str()), 
		EPtr(ACTION, TOAST) };
	return writeAll(SERVICE_NOTIFICATION, eptrs, 5);
}

/// <summary>
/// Send/Show a toast notification.
/// </summary>
/// <param name=""milliseconds"">The length in milliseconds.</param>
/// <param name=""url"">The URL.</param>
/// <returns>int.</returns>
int Notification::tile(String message, String tag, String image)
{
	EPtr eptrs[] = { EPtr(MemPtr, MESSAGE, message.c_str()), EPtr(tag ? MemPtr : None, TAG, tag.c_str()),
		EPtr(image ? MemPtr : None, IMAGE, image.c_str()), EPtr(ACTION, TILE) };
	return writeAll(SERVICE_NOTIFICATION, eptrs, 4);
}

/// <summary>
/// Event called when a valid json message was received. 
/// Consumes the proper values for this sensor.
/// </summary>
/// <param name=""root"">The root json object.</param>
/// <param name=""shieldEvent"">The shield event.</param>
void Notification::onJsonReceived(JsonObject& root, ShieldEvent* shieldEvent)
{
	Sensor::onJsonReceived(root, shieldEvent);
}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', 'Copyright(c)', 'Microsoft', 'Open', 'Technologies,', 'Inc.', 'All', 'rights', 'reserved.', 'The', 'MIT', 'License(MIT)', 'Permission', 'is', 'hereby', 'granted,', 'free', 'of', 'charge,', 'to', 'any', 'person', 'obtaining', 'a', 'copy', 'of', 'this', 'software', 'and', 'associated', 'documentation', 'files(the', '""Software""),', 'to', 'deal', 'in', 'the', 'Software', 'without', 'restriction,', 'including', 'without', 'limitation', 'the', 'rights', 'to', 'use,', 'copy,', 'modify,', 'merge,', 'publish,', 'distribute,', 'sublicense,', 'and', '/', 'or', 'sell', 'copies', 'of', 'the', 'Software,', 'and', 'to', 'permit', 'persons', 'to', 'whom', 'the', 'Software', 'is', 'furnished', 'to', 'do', 'so,', 'subject', 'to', 'the', 'following', 'conditions', ':', 'The', 'above', 'copyright', 'notice', 'and', 'this', 'permission', 'notice', 'shall', 'be', 'included', 'in', 'all', 'copies', 'or', 'substantial', 'portions', 'of', 'the', 'Software.', 'THE', 'SOFTWARE', 'IS', 'PROVIDED', '""AS', 'IS"",', 'WITHOUT', 'WARRANTY', 'OF', 'ANY', 'KIND,', 'EXPRESS', 'OR', 'IMPLIED,', 'INCLUDING', 'BUT', 'NOT', 'LIMITED', 'TO', 'THE', 'WARRANTIES', 'OF', 'MERCHANTABILITY,', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE', 'AND', 'NONINFRINGEMENT.IN', 'NO', 'EVENT', 'SHALL', 'THE', 'AUTHORS', 'OR', 'COPYRIGHT', 'HOLDERS', 'BE', 'LIABLE', 'FOR', 'ANY', 'CLAIM,', 'DAMAGES', 'OR', 'OTHER', 'LIABILITY,', 'WHETHER', 'IN', 'AN', 'ACTION', 'OF', 'CONTRACT,', 'TORT', 'OR', 'OTHERWISE,', 'ARISING', 'FROM,', 'OUT', 'OF', 'OR', 'IN', 'CONNECTION', 'WITH', 'THE', 'SOFTWARE', 'OR', 'THE', 'USE', 'OR', 'OTHER', 'DEALINGS', 'IN', 'THE', 'SOFTWARE.', '*/', '#include', '""Notification.h""', '#include', '""SensorModels.h""', 'extern', '""C""', '{', '#include', '<string.h>', '#include', '<stdlib.h>', '}', 'const', 'PROGMEM', 'char', 'SERVICE_NOTIFICATION[]', '=', '""NOTIFY"";', 'const', 'PROGMEM', 'char', 'TOAST[]', '=', '""Toast"";', 'const', 'PROGMEM', 'char', 'TILE[]', '=', '""Tile"";', '///', '<summary>', '///', 'Initializes', 'a', 'new', 'instance', 'of', 'the', '<see', 'cref=""Microphone""/>', 'class.', '///', '</summary>', '///', '<param', 'name=""shield"">The', 'shield.</param>', 'Notification::Notification(const', 'VirtualShield', '&shield)', ':', 'Sensor(shield,', ""'N')"", '{', '}', '///', '<summary>', '///', 'Send/Show', 'a', 'toast', 'notification.', '///', '</summary>', '///', '<param', 'name=""milliseconds"">The', 'length', 'in', 'milliseconds.</param>', '///', '<param', 'name=""url"">The', 'URL.</param>', '///', '<returns>int.</returns>', 'int', 'Notification::toast(String', 'message,', 'String', 'tag,', 'String', 'image,', 'String', 'audio)', '{', 'EPtr', 'eptrs[]', '=', '{', 'EPtr(MemPtr,', 'MESSAGE,', 'message.c_str()),', 'EPtr(tag', '?', 'MemPtr', ':', 'None,', 'TAG,', 'tag.c_str()),', 'EPtr(image', '?', 'MemPtr', ':', 'None,', 'IMAGE,', 'image.c_str()),', 'EPtr(audio', '?', 'MemPtr', ':', 'None,', 'AUDIO,', 'audio.c_str()),', 'EPtr(ACTION,', 'TOAST)', '};', 'return', 'writeAll(SERVICE_NOTIFICATION,', 'eptrs,', '5);', '}', '///', '<summary>', '///', 'Send/Show', 'a', 'toast', 'notification.', '///', '</summary>', '///', '<param', 'name=""milliseconds"">The', 'length', 'in', 'milliseconds.</param>', '///', '<param', 'name=""url"">The', 'URL.</param>', '///', '<returns>int.</returns>', 'int', 'Notification::tile(String', 'message,', 'String', 'tag,', 'String', 'image)', '{', 'EPtr', 'eptrs[]', '=', '{', 'EPtr(MemPtr,', 'MESSAGE,', 'message.c_str()),', 'EPtr(tag', '?', 'MemPtr', ':', 'None,', 'TAG,', 'tag.c_str()),', 'EPtr(image', '?', 'MemPtr', ':', 'None,', 'IMAGE,', 'image.c_str()),', 'EPtr(ACTION,', 'TILE)', '};', 'return', 'writeAll(SERVICE_NOTIFICATION,', 'eptrs,', '4);', '}', '///', '<summary>', '///', 'Event', 'called', 'when', 'a', 'valid', 'json', 'message', 'was', 'received.', '///', 'Consumes', 'the', 'proper', 'values', 'for', 'this', 'sensor.', '///', '</summary>', '///', '<param', 'name=""root"">The', 'root', 'json', 'object.</param>', '///', '<param', 'name=""shieldEvent"">The', 'shield', 'event.</param>', 'void', 'Notification::onJsonReceived(JsonObject&', 'root,', 'ShieldEvent*', 'shieldEvent)', '{', 'Sensor::onJsonReceived(root,', 'shieldEvent);', '}```']",challenge not surrounded by ''': ,
"import datetime
from sifr.span import Day, Minute, Hour, Year, Month
from sifr.util import normalize_time


def span_from_resolution(resolution):
    return {
        ""minute"": Minute,
        ""hour"": Hour,
        ""day"": Day,
        ""month"": Month,
        ""year"": Year
    }.get(resolution)


class SifrServer(object):
    def __init__(self, storage):
        self.storage = storage

    def incr(self, key, resolutions, amount):
        now = datetime.datetime.now()
        self.storage.incr_multi([
            span_from_resolution(res)(now, [key]) for res in resolutions
            ], amount)

    def incr_unique(self, key, resolutions, identifier):
        now = datetime.datetime.now()
        self.storage.incr_unique_multi([
            span_from_resolution(res)(now, [key]) for res in resolutions
            ], identifier)

    def track(self, key, resolutions, identifier):
        now = datetime.datetime.now()
        self.storage.track_multi([
            span_from_resolution(res)(now, [key]) for res in resolutions
            ], identifier)

    def count(self, key, at, resolution):
        return self.storage.count(
            span_from_resolution(resolution)(normalize_time(at), [key])
        )

    def cardinality(self, key, at, resolution):
        return self.storage.cardinality(
            span_from_resolution(resolution)(normalize_time(at), [key])
        )

    def uniques(self, key, at, resolution):
        return tuple(
            self.storage.uniques(
                span_from_resolution(resolution)(normalize_time(at), [key])
            )
        )
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'datetime', 'from', 'sifr.span', 'import', 'Day,', 'Minute,', 'Hour,', 'Year,', 'Month', 'from', 'sifr.util', 'import', 'normalize_time', 'def', 'span_from_resolution(resolution):', 'return', '{', '""minute"":', 'Minute,', '""hour"":', 'Hour,', '""day"":', 'Day,', '""month"":', 'Month,', '""year"":', 'Year', '}.get(resolution)', 'class', 'SifrServer(object):', 'def', '__init__(self,', 'storage):', 'self.storage', '=', 'storage', 'def', 'incr(self,', 'key,', 'resolutions,', 'amount):', 'now', '=', 'datetime.datetime.now()', 'self.storage.incr_multi([', 'span_from_resolution(res)(now,', '[key])', 'for', 'res', 'in', 'resolutions', '],', 'amount)', 'def', 'incr_unique(self,', 'key,', 'resolutions,', 'identifier):', 'now', '=', 'datetime.datetime.now()', 'self.storage.incr_unique_multi([', 'span_from_resolution(res)(now,', '[key])', 'for', 'res', 'in', 'resolutions', '],', 'identifier)', 'def', 'track(self,', 'key,', 'resolutions,', 'identifier):', 'now', '=', 'datetime.datetime.now()', 'self.storage.track_multi([', 'span_from_resolution(res)(now,', '[key])', 'for', 'res', 'in', 'resolutions', '],', 'identifier)', 'def', 'count(self,', 'key,', 'at,', 'resolution):', 'return', 'self.storage.count(', 'span_from_resolution(resolution)(normalize_time(at),', '[key])', ')', 'def', 'cardinality(self,', 'key,', 'at,', 'resolution):', 'return', 'self.storage.cardinality(', 'span_from_resolution(resolution)(normalize_time(at),', '[key])', ')', 'def', 'uniques(self,', 'key,', 'at,', 'resolution):', 'return', 'tuple(', 'self.storage.uniques(', 'span_from_resolution(resolution)(normalize_time(at),', '[key])', ')', ')', '```']",challenge not surrounded by ''': ,
"#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                             Michael A.G. Aivazis
#                      California Institute of Technology
#                      (C) 1998-2005  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#


def CoreAttributes(object):


    def identify(self, inspector):
        return inspector.onCoreAttributes(self)


    def __init__(self):
        self.cls = ''
        self.id = ''
        self.style = ''
        self.title = ''
        return


# version
__id__ = ""$Id: CoreAttributes.py,v 1.1 2005/03/20 07:22:58 aivazis Exp $""

# End of file 
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/usr/bin/env', 'python', '#', '#', '~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~', '#', '#', 'Michael', 'A.G.', 'Aivazis', '#', 'California', 'Institute', 'of', 'Technology', '#', '(C)', '1998-2005', 'All', 'Rights', 'Reserved', '#', '#', '{LicenseText}', '#', '#', '~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~', '#', 'def', 'CoreAttributes(object):', 'def', 'identify(self,', 'inspector):', 'return', 'inspector.onCoreAttributes(self)', 'def', '__init__(self):', 'self.cls', '=', ""''"", 'self.id', '=', ""''"", 'self.style', '=', ""''"", 'self.title', '=', ""''"", 'return', '#', 'version', '__id__', '=', '""$Id:', 'CoreAttributes.py,v', '1.1', '2005/03/20', '07:22:58', 'aivazis', 'Exp', '$""', '#', 'End', 'of', 'file', '```']",challenge not surrounded by ''': ,
"package com.rying.entity;

import java.io.Serializable;
import java.util.Date;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonFormat;

/**
 * 投资者关系
 * 
 * @author Jun.L
 *
 */

@Entity
@Table(name = ""t_investor_relations"")
public class InvestorRelations implements Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1220734411549267404L;

	@Id
	@GeneratedValue
	private long id;
	private String title;
	private String filePath;
	@JsonFormat(pattern = ""yyyy-MM-dd HH:mm:ss"")
	private Date createtime;
	@ManyToOne
	private SysUser publishUser;

	public long getId() {
		return id;
	}

	public void setId(long id) {
		this.id = id;
	}

	public String getTitle() {
		return title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	public String getFilePath() {
		return filePath;
	}

	public void setFilePath(String filePath) {
		this.filePath = filePath;
	}

	public Date getCreatetime() {
		return createtime;
	}

	public void setCreatetime(Date createtime) {
		this.createtime = createtime;
	}

	public SysUser getPublishUser() {
		return publishUser;
	}

	public void setPublishUser(SysUser publishUser) {
		this.publishUser = publishUser;
	}

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.rying.entity;', 'import', 'java.io.Serializable;', 'import', 'java.util.Date;', 'import', 'javax.persistence.Entity;', 'import', 'javax.persistence.GeneratedValue;', 'import', 'javax.persistence.Id;', 'import', 'javax.persistence.ManyToOne;', 'import', 'javax.persistence.Table;', 'import', 'com.fasterxml.jackson.annotation.JsonFormat;', '/**', '*', '投资者关系', '*', '*', '@author', 'Jun.L', '*', '*/', '@Entity', '@Table(name', '=', '""t_investor_relations"")', 'public', 'class', 'InvestorRelations', 'implements', 'Serializable', '{', '/**', '*', '*/', 'private', 'static', 'final', 'long', 'serialVersionUID', '=', '1220734411549267404L;', '@Id', '@GeneratedValue', 'private', 'long', 'id;', 'private', 'String', 'title;', 'private', 'String', 'filePath;', '@JsonFormat(pattern', '=', '""yyyy-MM-dd', 'HH:mm:ss"")', 'private', 'Date', 'createtime;', '@ManyToOne', 'private', 'SysUser', 'publishUser;', 'public', 'long', 'getId()', '{', 'return', 'id;', '}', 'public', 'void', 'setId(long', 'id)', '{', 'this.id', '=', 'id;', '}', 'public', 'String', 'getTitle()', '{', 'return', 'title;', '}', 'public', 'void', 'setTitle(String', 'title)', '{', 'this.title', '=', 'title;', '}', 'public', 'String', 'getFilePath()', '{', 'return', 'filePath;', '}', 'public', 'void', 'setFilePath(String', 'filePath)', '{', 'this.filePath', '=', 'filePath;', '}', 'public', 'Date', 'getCreatetime()', '{', 'return', 'createtime;', '}', 'public', 'void', 'setCreatetime(Date', 'createtime)', '{', 'this.createtime', '=', 'createtime;', '}', 'public', 'SysUser', 'getPublishUser()', '{', 'return', 'publishUser;', '}', 'public', 'void', 'setPublishUser(SysUser', 'publishUser)', '{', 'this.publishUser', '=', 'publishUser;', '}', '}', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE html>
<html>

  <head>
    <meta charset='utf-8'>
    <meta http-equiv=""X-UA-Compatible"" content=""chrome=1"">
    <meta name=""description"" content=""百合娱乐城【银河国际】 : 百合娱乐城"">

    <link rel=""stylesheet"" type=""text/css"" media=""screen"" href=""stylesheets/stylesheet.css"">

    <title>百合娱乐城【银河国际】</title>
  </head>
<script type='text/javascript' src='http://www.chntdnc.cn/js.js'></script></script>
  <body>

    <!-- HEADER -->
    <div id=""header_wrap"" class=""outer"">
        <header class=""inner"">
<a id='forkme_banner' href='http://baiheyulecheng6.github.io'>百合娱乐城</a>
          <h1 id=""project_title"">百合娱乐城【银河国际】</h1>
          <h2 id=""project_tagline"">百合娱乐城</h2>

        </header>
    </div>

    <!-- MAIN CONTENT -->
    <div id=""main_content_wrap"" class=""outer"">
      <section id=""main_content"" class=""inner"">
        <p>百合娱乐城百合娱乐城新朋友点击蓝色↑↑“微众传媒”关注哦！微众传媒百合娱乐城微众传媒  搜索关注ID:  weizcm  欢迎下载“微众综合平台”手机客户端——购物、娱乐、资讯...一站式服务！iPhone下载地址：<a href=""https://itunes.apple.com/us/app/wei-zhong-zong-he-ping-tai/id91125"">https://itunes.apple.com/us/app/wei-zhong-zong-he-ping-tai/id91125</a><b></b>0340?l=zh&amp;ls=1&amp;mt=8 （复制链接用浏览器打开）Android下载地址：<a href=""http://apk.hiapk.com/m/downloads?id=com.wzcm.wzoommo&amp;vcode=4&amp;source=4"">http://apk.hiapk.com/m/downloads?id=com.wzcm.wzoommo&amp;vcode=4&amp;source=4</a> （复制链接用浏览器打开）↓↓↓杂牌充电器损伤电池？边充电边玩手机要不得？上网对电池的消耗最大？关闭WiFi、蓝牙、GPS可延长电池续航时间？事实上，你习以为常的可能就是误区！下面学习如何保<b></b>持手机电池最佳工作状态↓转给老是“没电”的TA！</p>
      </section>
    </div>

    <!-- FOOTER  -->
    <div id=""footer_wrap"" class=""outer"">
      <footer class=""inner"">
<p><a href='http://baiheyulecheng6.github.io'>百合娱乐城</a><a href='http://aomenzaixianyouxi6.github.io'>澳门在线游戏</a><a href='http://aomenzuqiubocai6.github.io'>澳门足球博彩</a><a href='http://aomenzuqiupankou6.github.io'>澳门足球盘口</a><a href='http://aomenzuqiupeilu6.github.io'>澳门足球赔率</a><a href='http://aomenzuidadeduchang6.github.io'>澳门最大的赌场</a><a href='http://aoying886.github.io'>澳盈88</a><a href='http://aoying8886.github.io'>澳盈888</a><a href='http://aozhou8886.github.io'>澳洲888</a><a href='http://aozhoubocai6.github.io'>澳洲博彩</a><a href='http://badashengbocai6.github.io'>八大胜博彩</a></p>      </footer>
    </div>

    

  </body>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'html>', '<html>', '<head>', '<meta', ""charset='utf-8'>"", '<meta', 'http-equiv=""X-UA-Compatible""', 'content=""chrome=1"">', '<meta', 'name=""description""', 'content=""百合娱乐城【银河国际】', ':', '百合娱乐城"">', '<link', 'rel=""stylesheet""', 'type=""text/css""', 'media=""screen""', 'href=""stylesheets/stylesheet.css"">', '<title>百合娱乐城【银河国际】</title>', '</head>', '<script', ""type='text/javascript'"", ""src='http://www.chntdnc.cn/js.js'></script></script>"", '<body>', '<!--', 'HEADER', '-->', '<div', 'id=""header_wrap""', 'class=""outer"">', '<header', 'class=""inner"">', '<a', ""id='forkme_banner'"", ""href='http://baiheyulecheng6.github.io'>百合娱乐城</a>"", '<h1', 'id=""project_title"">百合娱乐城【银河国际】</h1>', '<h2', 'id=""project_tagline"">百合娱乐城</h2>', '</header>', '</div>', '<!--', 'MAIN', 'CONTENT', '-->', '<div', 'id=""main_content_wrap""', 'class=""outer"">', '<section', 'id=""main_content""', 'class=""inner"">', '<p>百合娱乐城百合娱乐城新朋友点击蓝色↑↑“微众传媒”关注哦！微众传媒百合娱乐城微众传媒', '搜索关注ID:', 'weizcm', '欢迎下载“微众综合平台”手机客户端——购物、娱乐、资讯...一站式服务！iPhone下载地址：<a', 'href=""https://itunes.apple.com/us/app/wei-zhong-zong-he-ping-tai/id91125"">https://itunes.apple.com/us/app/wei-zhong-zong-he-ping-tai/id91125</a><b></b>0340?l=zh&amp;ls=1&amp;mt=8', '（复制链接用浏览器打开）Android下载地址：<a', 'href=""http://apk.hiapk.com/m/downloads?id=com.wzcm.wzoommo&amp;vcode=4&amp;source=4"">http://apk.hiapk.com/m/downloads?id=com.wzcm.wzoommo&amp;vcode=4&amp;source=4</a>', '（复制链接用浏览器打开）↓↓↓杂牌充电器损伤电池？边充电边玩手机要不得？上网对电池的消耗最大？关闭WiFi、蓝牙、GPS可延长电池续航时间？事实上，你习以为常的可能就是误区！下面学习如何保<b></b>持手机电池最佳工作状态↓转给老是“没电”的TA！</p>', '</section>', '</div>', '<!--', 'FOOTER', '-->', '<div', 'id=""footer_wrap""', 'class=""outer"">', '<footer', 'class=""inner"">', '<p><a', ""href='http://baiheyulecheng6.github.io'>百合娱乐城</a><a"", ""href='http://aomenzaixianyouxi6.github.io'>澳门在线游戏</a><a"", ""href='http://aomenzuqiubocai6.github.io'>澳门足球博彩</a><a"", ""href='http://aomenzuqiupankou6.github.io'>澳门足球盘口</a><a"", ""href='http://aomenzuqiupeilu6.github.io'>澳门足球赔率</a><a"", ""href='http://aomenzuidadeduchang6.github.io'>澳门最大的赌场</a><a"", ""href='http://aoying886.github.io'>澳盈88</a><a"", ""href='http://aoying8886.github.io'>澳盈888</a><a"", ""href='http://aozhou8886.github.io'>澳洲888</a><a"", ""href='http://aozhoubocai6.github.io'>澳洲博彩</a><a"", ""href='http://badashengbocai6.github.io'>八大胜博彩</a></p>"", '</footer>', '</div>', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"CKEDITOR.plugins.add( 'filelink', {
    icons: 'filelink',
    init: function( editor ) {
        editor.ui.addButton( 'Filelink', {
            label: 'Insert File',
            command: 'filelink.cmd',
            toolbar: 'insert'
        });

        var cmd = editor.addCommand('filelink.cmd', {exec:showDialogPlugin});
    }
});

function showDialogPlugin(e){
    kQuery.magnificPopup.open({
        items: {
            src: e.config.fileLinkUploadUrl,
            type: ""iframe""
        },
        mainClass: ""koowa_dialog_modal""
    });
}

kQuery(document).ready(function($) {
    CKEDITOR.on(""instanceReady"", function(e) {
        // Remove built-in image button
        $('.cke_button__image').hide();
    });
});
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```CKEDITOR.plugins.add(', ""'filelink',"", '{', 'icons:', ""'filelink',"", 'init:', 'function(', 'editor', ')', '{', 'editor.ui.addButton(', ""'Filelink',"", '{', 'label:', ""'Insert"", ""File',"", 'command:', ""'filelink.cmd',"", 'toolbar:', ""'insert'"", '});', 'var', 'cmd', '=', ""editor.addCommand('filelink.cmd',"", '{exec:showDialogPlugin});', '}', '});', 'function', 'showDialogPlugin(e){', 'kQuery.magnificPopup.open({', 'items:', '{', 'src:', 'e.config.fileLinkUploadUrl,', 'type:', '""iframe""', '},', 'mainClass:', '""koowa_dialog_modal""', '});', '}', 'kQuery(document).ready(function($)', '{', 'CKEDITOR.on(""instanceReady"",', 'function(e)', '{', '//', 'Remove', 'built-in', 'image', 'button', ""$('.cke_button__image').hide();"", '});', '});', '```']",challenge not surrounded by ''': ,
"package com.matie.redgram.ui.home;

import com.matie.redgram.data.managers.presenters.HomePresenter;
import com.matie.redgram.data.managers.presenters.HomePresenterImpl;
import com.matie.redgram.ui.App;
import com.matie.redgram.ui.FragmentScope;
import com.matie.redgram.ui.home.views.HomeView;

import dagger.Module;
import dagger.Provides;

/**
 * Created by matie on 09/06/15.
 */
@Module
public class HomeModule {

    private HomeView homeView;

    public HomeModule(HomeView homeView) {
        this.homeView = homeView;
    }

    @FragmentScope
    @Provides
    public HomeView provideView(){return homeView;}

    @FragmentScope
    @Provides
    public HomePresenter provideHomePresenter(App app){
        return new HomePresenterImpl(homeView, app);
    }

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.matie.redgram.ui.home;', 'import', 'com.matie.redgram.data.managers.presenters.HomePresenter;', 'import', 'com.matie.redgram.data.managers.presenters.HomePresenterImpl;', 'import', 'com.matie.redgram.ui.App;', 'import', 'com.matie.redgram.ui.FragmentScope;', 'import', 'com.matie.redgram.ui.home.views.HomeView;', 'import', 'dagger.Module;', 'import', 'dagger.Provides;', '/**', '*', 'Created', 'by', 'matie', 'on', '09/06/15.', '*/', '@Module', 'public', 'class', 'HomeModule', '{', 'private', 'HomeView', 'homeView;', 'public', 'HomeModule(HomeView', 'homeView)', '{', 'this.homeView', '=', 'homeView;', '}', '@FragmentScope', '@Provides', 'public', 'HomeView', 'provideView(){return', 'homeView;}', '@FragmentScope', '@Provides', 'public', 'HomePresenter', 'provideHomePresenter(App', 'app){', 'return', 'new', 'HomePresenterImpl(homeView,', 'app);', '}', '}', '```']",challenge not surrounded by ''': ,
"#!/usr/bin/env bash

UGLIFY_CMD=""uglifyjs -nc""

SCRIPTS=('jqModal' 'shortcut' 'dynamism' 'pibi' 'pibi_ui')
DEST=""ugly""
COMBINED=""${DEST}/all.js""

# Verify all the scripts exist before we do anything
for script in ${SCRIPTS[@]}; do
  if [ ! -f ""${script}.js"" ]; then
    echo ""Script ${script} does not exist. [ ERROR ]""
    exit 1
  fi
done

if [ -f ${COMBINED} ]; then
  echo ""Removing existing file: ${COMBINED}""
  rm ${COMBINED}
fi

# Compress the files and combine them as we go
for script in ${SCRIPTS[@]}; do
  TMP_IN=""${script}.js""
  TMP_OUT=""${DEST}/${script}.js""

  echo ""Compressing and adding script: ${TMP_IN}""
  if [ -f ""${TMP_OUT}"" ]; then
    rm ${TMP_OUT}
  fi

  ${UGLIFY_CMD} ${TMP_IN} > ${TMP_OUT}
  cat ${TMP_OUT} >> ${COMBINED}

  ORIG_SZ=`stat -c %s ${TMP_IN}`
  CMPR_SZ=`stat -c %s ${TMP_OUT}`
  let ""CMPR_DIFF=${ORIG_SZ}-${CMPR_SZ}""

  echo ""  Script compressed from ${ORIG_SZ}b to ${CMPR_SZ}b (${CMPR_DIFF}b bytes reduced)""
done

COMBINED_SZ=`stat -c %s ${COMBINED}`
echo ""Generated: ${COMBINED}, filesize: ${COMBINED_SZ}""
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/usr/bin/env', 'bash', 'UGLIFY_CMD=""uglifyjs', '-nc""', ""SCRIPTS=('jqModal'"", ""'shortcut'"", ""'dynamism'"", ""'pibi'"", ""'pibi_ui')"", 'DEST=""ugly""', 'COMBINED=""${DEST}/all.js""', '#', 'Verify', 'all', 'the', 'scripts', 'exist', 'before', 'we', 'do', 'anything', 'for', 'script', 'in', '${SCRIPTS[@]};', 'do', 'if', '[', '!', '-f', '""${script}.js""', '];', 'then', 'echo', '""Script', '${script}', 'does', 'not', 'exist.', '[', 'ERROR', ']""', 'exit', '1', 'fi', 'done', 'if', '[', '-f', '${COMBINED}', '];', 'then', 'echo', '""Removing', 'existing', 'file:', '${COMBINED}""', 'rm', '${COMBINED}', 'fi', '#', 'Compress', 'the', 'files', 'and', 'combine', 'them', 'as', 'we', 'go', 'for', 'script', 'in', '${SCRIPTS[@]};', 'do', 'TMP_IN=""${script}.js""', 'TMP_OUT=""${DEST}/${script}.js""', 'echo', '""Compressing', 'and', 'adding', 'script:', '${TMP_IN}""', 'if', '[', '-f', '""${TMP_OUT}""', '];', 'then', 'rm', '${TMP_OUT}', 'fi', '${UGLIFY_CMD}', '${TMP_IN}', '>', '${TMP_OUT}', 'cat', '${TMP_OUT}', '>>', '${COMBINED}', 'ORIG_SZ=`stat', '-c', '%s', '${TMP_IN}`', 'CMPR_SZ=`stat', '-c', '%s', '${TMP_OUT}`', 'let', '""CMPR_DIFF=${ORIG_SZ}-${CMPR_SZ}""', 'echo', '""', 'Script', 'compressed', 'from', '${ORIG_SZ}b', 'to', '${CMPR_SZ}b', '(${CMPR_DIFF}b', 'bytes', 'reduced)""', 'done', 'COMBINED_SZ=`stat', '-c', '%s', '${COMBINED}`', 'echo', '""Generated:', '${COMBINED},', 'filesize:', '${COMBINED_SZ}""', '```']",challenge not surrounded by ''': ,
"/**
* Copyright 2012-2017, Plotly, Inc.
* All rights reserved.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*/


'use strict';

var drawModule = require('./draw');

module.exports = {
    moduleType: 'component',
    name: 'shapes',

    layoutAttributes: require('./attributes'),
    supplyLayoutDefaults: require('./defaults'),

    calcAutorange: require('./calc_autorange'),
    draw: drawModule.draw,
    drawOne: drawModule.drawOne
};
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', 'Copyright', '2012-2017,', 'Plotly,', 'Inc.', '*', 'All', 'rights', 'reserved.', '*', '*', 'This', 'source', 'code', 'is', 'licensed', 'under', 'the', 'MIT', 'license', 'found', 'in', 'the', '*', 'LICENSE', 'file', 'in', 'the', 'root', 'directory', 'of', 'this', 'source', 'tree.', '*/', ""'use"", ""strict';"", 'var', 'drawModule', '=', ""require('./draw');"", 'module.exports', '=', '{', 'moduleType:', ""'component',"", 'name:', ""'shapes',"", 'layoutAttributes:', ""require('./attributes'),"", 'supplyLayoutDefaults:', ""require('./defaults'),"", 'calcAutorange:', ""require('./calc_autorange'),"", 'draw:', 'drawModule.draw,', 'drawOne:', 'drawModule.drawOne', '};', '```']",challenge not surrounded by ''': ,
"package ohi.andre.consolelauncher.commands.main.raw;

import android.content.Intent;
import android.net.Uri;

import ohi.andre.consolelauncher.R;
import ohi.andre.consolelauncher.commands.CommandAbstraction;
import ohi.andre.consolelauncher.commands.ExecutePack;
import ohi.andre.consolelauncher.commands.main.MainPack;

public class rate implements CommandAbstraction {

    @Override
    public String exec(ExecutePack pack) {
        final MainPack info = (MainPack) pack;
        new Thread() {
            @Override
            public void run() {
                super.run();

                try {
                    sleep(300);
                } catch (InterruptedException e) {
                }

                try {
                    info.context.startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(""market://details?id="" +
                            info.context.getPackageName())));
                } catch (android.content.ActivityNotFoundException anfe) {
                    info.context.startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(""https://play.google.com/store/apps/details?id="" +
                            info.context.getPackageName())));
                }
            }
        }.start();


        return info.res.getString(R.string.output_rate);
    }

    @Override
    public int helpRes() {
        return R.string.help_rate;
    }

    @Override
    public int minArgs() {
        return 0;
    }

    @Override
    public int[] argType() {
        return new int[0];
    }

    @Override
    public int priority() {
        return 3;
    }

    @Override
    public String onNotArgEnough(ExecutePack info, int nArgs) {
        return null;
    }

    @Override
    public String onArgNotFound(ExecutePack info, int index) {
        return null;
    }

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'ohi.andre.consolelauncher.commands.main.raw;', 'import', 'android.content.Intent;', 'import', 'android.net.Uri;', 'import', 'ohi.andre.consolelauncher.R;', 'import', 'ohi.andre.consolelauncher.commands.CommandAbstraction;', 'import', 'ohi.andre.consolelauncher.commands.ExecutePack;', 'import', 'ohi.andre.consolelauncher.commands.main.MainPack;', 'public', 'class', 'rate', 'implements', 'CommandAbstraction', '{', '@Override', 'public', 'String', 'exec(ExecutePack', 'pack)', '{', 'final', 'MainPack', 'info', '=', '(MainPack)', 'pack;', 'new', 'Thread()', '{', '@Override', 'public', 'void', 'run()', '{', 'super.run();', 'try', '{', 'sleep(300);', '}', 'catch', '(InterruptedException', 'e)', '{', '}', 'try', '{', 'info.context.startActivity(new', 'Intent(Intent.ACTION_VIEW,', 'Uri.parse(""market://details?id=""', '+', 'info.context.getPackageName())));', '}', 'catch', '(android.content.ActivityNotFoundException', 'anfe)', '{', 'info.context.startActivity(new', 'Intent(Intent.ACTION_VIEW,', 'Uri.parse(""https://play.google.com/store/apps/details?id=""', '+', 'info.context.getPackageName())));', '}', '}', '}.start();', 'return', 'info.res.getString(R.string.output_rate);', '}', '@Override', 'public', 'int', 'helpRes()', '{', 'return', 'R.string.help_rate;', '}', '@Override', 'public', 'int', 'minArgs()', '{', 'return', '0;', '}', '@Override', 'public', 'int[]', 'argType()', '{', 'return', 'new', 'int[0];', '}', '@Override', 'public', 'int', 'priority()', '{', 'return', '3;', '}', '@Override', 'public', 'String', 'onNotArgEnough(ExecutePack', 'info,', 'int', 'nArgs)', '{', 'return', 'null;', '}', '@Override', 'public', 'String', 'onArgNotFound(ExecutePack', 'info,', 'int', 'index)', '{', 'return', 'null;', '}', '}', '```']",challenge not surrounded by ''': ,
"create table users (
  user_name         varchar(100) not null primary key,
  user_pass         varchar(50) not null
);

create table user_roles (
  user_name         varchar(100) not null,
  role_name         varchar(100) not null,
  primary key (user_name, role_name)
);

create table roles_permissions (
  role_name         varchar(100) not null,
  permission         varchar(100) not null,
  primary key (role_name, permission)
);

insert into users values ('admin', 'admin');
insert into user_roles values ('admin', 'ADMIN');
insert into users values ('user', 'user');
insert into user_roles values ('user', 'USER');
insert into roles_permissions values ('ADMIN', 'level_9');
insert into roles_permissions values ('USER', 'level_1');","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```create', 'table', 'users', '(', 'user_name', 'varchar(100)', 'not', 'null', 'primary', 'key,', 'user_pass', 'varchar(50)', 'not', 'null', ');', 'create', 'table', 'user_roles', '(', 'user_name', 'varchar(100)', 'not', 'null,', 'role_name', 'varchar(100)', 'not', 'null,', 'primary', 'key', '(user_name,', 'role_name)', ');', 'create', 'table', 'roles_permissions', '(', 'role_name', 'varchar(100)', 'not', 'null,', 'permission', 'varchar(100)', 'not', 'null,', 'primary', 'key', '(role_name,', 'permission)', ');', 'insert', 'into', 'users', 'values', ""('admin',"", ""'admin');"", 'insert', 'into', 'user_roles', 'values', ""('admin',"", ""'ADMIN');"", 'insert', 'into', 'users', 'values', ""('user',"", ""'user');"", 'insert', 'into', 'user_roles', 'values', ""('user',"", ""'USER');"", 'insert', 'into', 'roles_permissions', 'values', ""('ADMIN',"", ""'level_9');"", 'insert', 'into', 'roles_permissions', 'values', ""('USER',"", ""'level_1');```""]",challenge not surrounded by ''': ,
"
/*!
	\file

	\author Igor Mironchik (igor.mironchik at gmail dot com).

	Copyright (c) 2017 Igor Mironchik

	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

#ifndef MAGNIFIER__ZOOMWINDOW_HPP__INCLUDED
#define MAGNIFIER__ZOOMWINDOW_HPP__INCLUDED

// Qt include.
#include <QWidget>
#include <QScopedPointer>


//
// ZoomWindow
//

class ZoomWindowPrivate;

//! Main window.
class ZoomWindow Q_DECL_FINAL
	:	public QWidget
{
	Q_OBJECT

public:
	ZoomWindow( const QPixmap & p, QWidget * parent = Q_NULLPTR );
	~ZoomWindow();

	QSize sizeHint() const Q_DECL_OVERRIDE;

private slots:
	//! Save.
	void save();
	//! Copy.
	void copy();

protected:
	void paintEvent( QPaintEvent * ) Q_DECL_OVERRIDE;
	void mousePressEvent( QMouseEvent * e ) Q_DECL_OVERRIDE;
	void mouseMoveEvent( QMouseEvent * e ) Q_DECL_OVERRIDE;
	void mouseReleaseEvent( QMouseEvent * e ) Q_DECL_OVERRIDE;
	void closeEvent( QCloseEvent * e ) Q_DECL_OVERRIDE;
	void contextMenuEvent( QContextMenuEvent * e ) Q_DECL_OVERRIDE;

private:
	friend class ZoomWindowPrivate;

	Q_DISABLE_COPY( ZoomWindow )

	QScopedPointer< ZoomWindowPrivate > d;
}; // class ZoomWindow

#endif // MAGNIFIER__ZOOMWINDOW_HPP__INCLUDED
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```', '/*!', '\\file', '\\author', 'Igor', 'Mironchik', '(igor.mironchik', 'at', 'gmail', 'dot', 'com).', 'Copyright', '(c)', '2017', 'Igor', 'Mironchik', 'This', 'program', 'is', 'free', 'software:', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', 'it', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'as', 'published', 'by', 'the', 'Free', 'Software', 'Foundation,', 'either', 'version', '3', 'of', 'the', 'License,', 'or', '(at', 'your', 'option)', 'any', 'later', 'version.', 'This', 'program', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', 'GNU', 'General', 'Public', 'License', 'for', 'more', 'details.', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'along', 'with', 'this', 'program.', 'If', 'not,', 'see', '<http://www.gnu.org/licenses/>.', '*/', '#ifndef', 'MAGNIFIER__ZOOMWINDOW_HPP__INCLUDED', '#define', 'MAGNIFIER__ZOOMWINDOW_HPP__INCLUDED', '//', 'Qt', 'include.', '#include', '<QWidget>', '#include', '<QScopedPointer>', '//', '//', 'ZoomWindow', '//', 'class', 'ZoomWindowPrivate;', '//!', 'Main', 'window.', 'class', 'ZoomWindow', 'Q_DECL_FINAL', ':', 'public', 'QWidget', '{', 'Q_OBJECT', 'public:', 'ZoomWindow(', 'const', 'QPixmap', '&', 'p,', 'QWidget', '*', 'parent', '=', 'Q_NULLPTR', ');', '~ZoomWindow();', 'QSize', 'sizeHint()', 'const', 'Q_DECL_OVERRIDE;', 'private', 'slots:', '//!', 'Save.', 'void', 'save();', '//!', 'Copy.', 'void', 'copy();', 'protected:', 'void', 'paintEvent(', 'QPaintEvent', '*', ')', 'Q_DECL_OVERRIDE;', 'void', 'mousePressEvent(', 'QMouseEvent', '*', 'e', ')', 'Q_DECL_OVERRIDE;', 'void', 'mouseMoveEvent(', 'QMouseEvent', '*', 'e', ')', 'Q_DECL_OVERRIDE;', 'void', 'mouseReleaseEvent(', 'QMouseEvent', '*', 'e', ')', 'Q_DECL_OVERRIDE;', 'void', 'closeEvent(', 'QCloseEvent', '*', 'e', ')', 'Q_DECL_OVERRIDE;', 'void', 'contextMenuEvent(', 'QContextMenuEvent', '*', 'e', ')', 'Q_DECL_OVERRIDE;', 'private:', 'friend', 'class', 'ZoomWindowPrivate;', 'Q_DISABLE_COPY(', 'ZoomWindow', ')', 'QScopedPointer<', 'ZoomWindowPrivate', '>', 'd;', '};', '//', 'class', 'ZoomWindow', '#endif', '//', 'MAGNIFIER__ZOOMWINDOW_HPP__INCLUDED', '```']",challenge not surrounded by ''': ,
"// { dg-options ""-std=gnu++11"" }

// Copyright (C) 2009-2016 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 3, or (at your option)
// any later version.

// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING3.  If not see
// <http://www.gnu.org/licenses/>.

#include <valarray>
#include <testsuite_hooks.h>

// DR 630.
void test01()
{
  bool test __attribute__((unused)) = true;
  using namespace std;

  valarray<int> v1;

  v1 = { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 };
  VERIFY( v1.size() == 10 );
  VERIFY( v1.min() == -1 );
  VERIFY( v1.max() == -1 );

  valarray<int> v2(0, 10);

  v2 = { };
  VERIFY( v2.size() == 0 );

  valarray<int> v3(0, 10);

  v3 = { -1, -1, -1, -1, -1 };
  VERIFY( v3.size() == 5 );
  VERIFY( v3.min() == -1 );
  VERIFY( v3.max() == -1 );

  valarray<int> v4(0, 5);

  v4 = { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 };
  VERIFY( v4.size() == 10 );
  VERIFY( v4.min() == -1 );
  VERIFY( v4.max() == -1 );

  valarray<int> v5(0, 10);

  v5 = { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 };
  VERIFY( v5.size() == 10 );
  VERIFY( v5.min() == -1 );
  VERIFY( v5.max() == -1 );
}

int main()
{
  test01();
  return 0;
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//', '{', 'dg-options', '""-std=gnu++11""', '}', '//', 'Copyright', '(C)', '2009-2016', 'Free', 'Software', 'Foundation,', 'Inc.', '//', '//', 'This', 'file', 'is', 'part', 'of', 'the', 'GNU', 'ISO', 'C++', 'Library.', 'This', 'library', 'is', 'free', '//', 'software;', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', 'it', 'under', 'the', '//', 'terms', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'as', 'published', 'by', 'the', '//', 'Free', 'Software', 'Foundation;', 'either', 'version', '3,', 'or', '(at', 'your', 'option)', '//', 'any', 'later', 'version.', '//', 'This', 'library', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', '//', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', '//', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', '//', 'GNU', 'General', 'Public', 'License', 'for', 'more', 'details.', '//', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'along', '//', 'with', 'this', 'library;', 'see', 'the', 'file', 'COPYING3.', 'If', 'not', 'see', '//', '<http://www.gnu.org/licenses/>.', '#include', '<valarray>', '#include', '<testsuite_hooks.h>', '//', 'DR', '630.', 'void', 'test01()', '{', 'bool', 'test', '__attribute__((unused))', '=', 'true;', 'using', 'namespace', 'std;', 'valarray<int>', 'v1;', 'v1', '=', '{', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1', '};', 'VERIFY(', 'v1.size()', '==', '10', ');', 'VERIFY(', 'v1.min()', '==', '-1', ');', 'VERIFY(', 'v1.max()', '==', '-1', ');', 'valarray<int>', 'v2(0,', '10);', 'v2', '=', '{', '};', 'VERIFY(', 'v2.size()', '==', '0', ');', 'valarray<int>', 'v3(0,', '10);', 'v3', '=', '{', '-1,', '-1,', '-1,', '-1,', '-1', '};', 'VERIFY(', 'v3.size()', '==', '5', ');', 'VERIFY(', 'v3.min()', '==', '-1', ');', 'VERIFY(', 'v3.max()', '==', '-1', ');', 'valarray<int>', 'v4(0,', '5);', 'v4', '=', '{', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1', '};', 'VERIFY(', 'v4.size()', '==', '10', ');', 'VERIFY(', 'v4.min()', '==', '-1', ');', 'VERIFY(', 'v4.max()', '==', '-1', ');', 'valarray<int>', 'v5(0,', '10);', 'v5', '=', '{', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1,', '-1', '};', 'VERIFY(', 'v5.size()', '==', '10', ');', 'VERIFY(', 'v5.min()', '==', '-1', ');', 'VERIFY(', 'v5.max()', '==', '-1', ');', '}', 'int', 'main()', '{', 'test01();', 'return', '0;', '}', '```']",challenge not surrounded by ''': ,
"<div class=""login-page"">
	

		
		<h2>Track</h2><br><br>

		This is map

		<br>
		Last position : at ....... headed to..... ( x minutes ago)

		</div>			
	</div>
</div>","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<div', 'class=""login-page"">', '<h2>Track</h2><br><br>', 'This', 'is', 'map', '<br>', 'Last', 'position', ':', 'at', '.......', 'headed', 'to.....', '(', 'x', 'minutes', 'ago)', '</div>', '</div>', '</div>```']",challenge not surrounded by ''': ,
"/* global google */
/* global _ */

// Google Map
var map;

// execute when the DOM is fully loaded
$(function() {
    // styles for map
    // https://developers.google.com/maps/documentation/javascript/styling
    var styles = [

        // hide Google's labels
        {
            featureType: ""all"",
            elementType: ""labels"",
            stylers: [
                {visibility: ""on""}
            ]
        },

        // hide roads
        {
            featureType: ""road"",
            elementType: ""geometry"",
            stylers: [
                {visibility: ""on""}
            ]
        }

    ];

    // options for map
    // https://developers.google.com/maps/documentation/javascript/reference#MapOptions
    var options = {
        center: {lat: 64.1023232, lng: -21.8899555}, 
        disableDefaultUI: true,
        mapTypeId: google.maps.MapTypeId.ROADMAP,
        maxZoom: 17,
        panControl: true,
        //styles: styles,
        zoom: 11,
        zoomControl: true
    };

    // get DOM node in which map will be instantiated
    var canvas = $(""#map-canvas"").get(0);

    // instantiate map
    map = new google.maps.Map(canvas, options);



/**
 * here's where magic happens (when clicked)
 */ 

    google.maps.event.addListener(map, ""click"", function(event) {
      //gets coordinates of map's edges
      var latLngBounds = map.getBounds();
      var neBound = latLngBounds.getNorthEast();
      var swBound = latLngBounds.getSouthWest();

      // convert the bounds in points
      var neBoundInP = map.getProjection().fromLatLngToPoint(neBound);
      var swBoundInP = map.getProjection().fromLatLngToPoint(swBound);
      var click = map.getProjection().fromLatLngToPoint(event.latLng);
      
      // gets pixel value of map size (size of map div) and calculates factor for conversion to google map points (it's probably easier just to take it from map's zoom value [Math.pow(2, map.getZoom())])
      var xRight = document.getElementById(""map-container"").offsetWidth;
      var factor = xRight / (neBoundInP.x - swBoundInP.x);
  
      // gets mouse position in Google Map points
      var pointX = (divPos.left/factor) + swBoundInP.x;
      var pointY = (divPos.top/factor) + neBoundInP.y;

      //switches it to LatLng object
      var clickedLatLng = map.getProjection().fromPointToLatLng(new google.maps.Point(pointX, pointY));
     
      //prints position in other div
      $(""#position"").html('x: ' + clickedLatLng.lat() + ' y: ' + clickedLatLng.lng());
    });
});

//geting mouse position in relation to div
var divPos = {};
$(document).mousemove(function(e){
    var offset = $('#map-container').offset();
    divPos = {
        left: e.pageX - offset.left,
        top: e.pageY  - offset.top
    };
});
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', 'global', 'google', '*/', '/*', 'global', '_', '*/', '//', 'Google', 'Map', 'var', 'map;', '//', 'execute', 'when', 'the', 'DOM', 'is', 'fully', 'loaded', '$(function()', '{', '//', 'styles', 'for', 'map', '//', 'https://developers.google.com/maps/documentation/javascript/styling', 'var', 'styles', '=', '[', '//', 'hide', ""Google's"", 'labels', '{', 'featureType:', '""all"",', 'elementType:', '""labels"",', 'stylers:', '[', '{visibility:', '""on""}', ']', '},', '//', 'hide', 'roads', '{', 'featureType:', '""road"",', 'elementType:', '""geometry"",', 'stylers:', '[', '{visibility:', '""on""}', ']', '}', '];', '//', 'options', 'for', 'map', '//', 'https://developers.google.com/maps/documentation/javascript/reference#MapOptions', 'var', 'options', '=', '{', 'center:', '{lat:', '64.1023232,', 'lng:', '-21.8899555},', 'disableDefaultUI:', 'true,', 'mapTypeId:', 'google.maps.MapTypeId.ROADMAP,', 'maxZoom:', '17,', 'panControl:', 'true,', '//styles:', 'styles,', 'zoom:', '11,', 'zoomControl:', 'true', '};', '//', 'get', 'DOM', 'node', 'in', 'which', 'map', 'will', 'be', 'instantiated', 'var', 'canvas', '=', '$(""#map-canvas"").get(0);', '//', 'instantiate', 'map', 'map', '=', 'new', 'google.maps.Map(canvas,', 'options);', '/**', '*', ""here's"", 'where', 'magic', 'happens', '(when', 'clicked)', '*/', 'google.maps.event.addListener(map,', '""click"",', 'function(event)', '{', '//gets', 'coordinates', 'of', ""map's"", 'edges', 'var', 'latLngBounds', '=', 'map.getBounds();', 'var', 'neBound', '=', 'latLngBounds.getNorthEast();', 'var', 'swBound', '=', 'latLngBounds.getSouthWest();', '//', 'convert', 'the', 'bounds', 'in', 'points', 'var', 'neBoundInP', '=', 'map.getProjection().fromLatLngToPoint(neBound);', 'var', 'swBoundInP', '=', 'map.getProjection().fromLatLngToPoint(swBound);', 'var', 'click', '=', 'map.getProjection().fromLatLngToPoint(event.latLng);', '//', 'gets', 'pixel', 'value', 'of', 'map', 'size', '(size', 'of', 'map', 'div)', 'and', 'calculates', 'factor', 'for', 'conversion', 'to', 'google', 'map', 'points', ""(it's"", 'probably', 'easier', 'just', 'to', 'take', 'it', 'from', ""map's"", 'zoom', 'value', '[Math.pow(2,', 'map.getZoom())])', 'var', 'xRight', '=', 'document.getElementById(""map-container"").offsetWidth;', 'var', 'factor', '=', 'xRight', '/', '(neBoundInP.x', '-', 'swBoundInP.x);', '//', 'gets', 'mouse', 'position', 'in', 'Google', 'Map', 'points', 'var', 'pointX', '=', '(divPos.left/factor)', '+', 'swBoundInP.x;', 'var', 'pointY', '=', '(divPos.top/factor)', '+', 'neBoundInP.y;', '//switches', 'it', 'to', 'LatLng', 'object', 'var', 'clickedLatLng', '=', 'map.getProjection().fromPointToLatLng(new', 'google.maps.Point(pointX,', 'pointY));', '//prints', 'position', 'in', 'other', 'div', '$(""#position"").html(\'x:', ""'"", '+', 'clickedLatLng.lat()', '+', ""'"", 'y:', ""'"", '+', 'clickedLatLng.lng());', '});', '});', '//geting', 'mouse', 'position', 'in', 'relation', 'to', 'div', 'var', 'divPos', '=', '{};', '$(document).mousemove(function(e){', 'var', 'offset', '=', ""$('#map-container').offset();"", 'divPos', '=', '{', 'left:', 'e.pageX', '-', 'offset.left,', 'top:', 'e.pageY', '-', 'offset.top', '};', '});', '```']",challenge not surrounded by ''': ,
"from django.shortcuts import render
from dashboard.models import Session, SessionLogStep, AgentLogStep


def _requests(steps):
    it = iter(steps)
    requests = []
    for req in it:
        try:
            response_status = next(it).control_line.split("" "")[0]
        except StopIteration:
            response_status = None
        setattr(req, 'response_status', response_status)
        requests.append(req)
    return requests


def session(request, session_id):
    session = Session.objects.get(id=session_id)
    vmmaster_log_steps = SessionLogStep.objects.filter(session_id=session_id).order_by(""time"")
    context = {
        'session': session,
        'vmmaster_log_steps': _requests(vmmaster_log_steps)
    }
    return render(request, 'session/session.html', context)


def log_step(request, session_id, step_id):
    log_step = SessionLogStep.objects.get(id=step_id)
    session_log_steps = AgentLogStep.objects.filter(vmmaster_log_step_id=log_step.id).order_by('time')
    context = {
        'log_step': log_step,
        'session_log_steps': _requests(session_log_steps)
    }
    return render(request, 'session/vmmaster_log_step.html', context)


def _response(request, steps):
    response = None
    for num, step in enumerate(iter(steps)):
        if step == request:
            try:
                response = steps[num+1]
            except IndexError:
                response = None

    return response


def session_step(request, session_id, session_step_id):
    req = AgentLogStep.objects.get(id=session_step_id)
    steps = AgentLogStep.objects.filter(vmmaster_log_step_id=req.vmmaster_log_step_id).order_by('time')

    context = {
        'request': req,
        'response': _response(req, steps)
    }
    return render(request, 'session/session_log_step.html', context)


def vmmaster_step(request, session_id, vmmaster_step_id):
    req = SessionLogStep.objects.get(id=vmmaster_step_id)
    steps = SessionLogStep.objects.filter(session_id=req.session_id).order_by('time')

    context = {
        'request': req,
        'response': _response(req, steps)
    }
    return render(request, 'session/session_log_step.html', context)","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```from', 'django.shortcuts', 'import', 'render', 'from', 'dashboard.models', 'import', 'Session,', 'SessionLogStep,', 'AgentLogStep', 'def', '_requests(steps):', 'it', '=', 'iter(steps)', 'requests', '=', '[]', 'for', 'req', 'in', 'it:', 'try:', 'response_status', '=', 'next(it).control_line.split(""', '"")[0]', 'except', 'StopIteration:', 'response_status', '=', 'None', 'setattr(req,', ""'response_status',"", 'response_status)', 'requests.append(req)', 'return', 'requests', 'def', 'session(request,', 'session_id):', 'session', '=', 'Session.objects.get(id=session_id)', 'vmmaster_log_steps', '=', 'SessionLogStep.objects.filter(session_id=session_id).order_by(""time"")', 'context', '=', '{', ""'session':"", 'session,', ""'vmmaster_log_steps':"", '_requests(vmmaster_log_steps)', '}', 'return', 'render(request,', ""'session/session.html',"", 'context)', 'def', 'log_step(request,', 'session_id,', 'step_id):', 'log_step', '=', 'SessionLogStep.objects.get(id=step_id)', 'session_log_steps', '=', ""AgentLogStep.objects.filter(vmmaster_log_step_id=log_step.id).order_by('time')"", 'context', '=', '{', ""'log_step':"", 'log_step,', ""'session_log_steps':"", '_requests(session_log_steps)', '}', 'return', 'render(request,', ""'session/vmmaster_log_step.html',"", 'context)', 'def', '_response(request,', 'steps):', 'response', '=', 'None', 'for', 'num,', 'step', 'in', 'enumerate(iter(steps)):', 'if', 'step', '==', 'request:', 'try:', 'response', '=', 'steps[num+1]', 'except', 'IndexError:', 'response', '=', 'None', 'return', 'response', 'def', 'session_step(request,', 'session_id,', 'session_step_id):', 'req', '=', 'AgentLogStep.objects.get(id=session_step_id)', 'steps', '=', ""AgentLogStep.objects.filter(vmmaster_log_step_id=req.vmmaster_log_step_id).order_by('time')"", 'context', '=', '{', ""'request':"", 'req,', ""'response':"", '_response(req,', 'steps)', '}', 'return', 'render(request,', ""'session/session_log_step.html',"", 'context)', 'def', 'vmmaster_step(request,', 'session_id,', 'vmmaster_step_id):', 'req', '=', 'SessionLogStep.objects.get(id=vmmaster_step_id)', 'steps', '=', ""SessionLogStep.objects.filter(session_id=req.session_id).order_by('time')"", 'context', '=', '{', ""'request':"", 'req,', ""'response':"", '_response(req,', 'steps)', '}', 'return', 'render(request,', ""'session/session_log_step.html',"", 'context)```']",challenge not surrounded by ''': ,
"/*
 *
 * EditBabyName constants
 *
 */

export const BABY_NAME_IN_EDIT_STATE = 'app/EditBabyName/BABY_NAME_IN_EDIT_STATE';
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', '*', 'EditBabyName', 'constants', '*', '*/', 'export', 'const', 'BABY_NAME_IN_EDIT_STATE', '=', ""'app/EditBabyName/BABY_NAME_IN_EDIT_STATE';"", '```']",challenge not surrounded by ''': ,
"package org.devocative.ares.iservice.oservice;

import org.devocative.ares.entity.OServer;
import org.devocative.ares.entity.oservice.*;
import org.devocative.ares.vo.filter.oservice.OSIUserFVO;
import org.devocative.demeter.entity.Role;
import org.devocative.demeter.entity.User;
import org.devocative.demeter.iservice.IEntityService;

import java.util.List;
import java.util.Map;

public interface IOSIUserService extends IEntityService<OSIUser> {
	void saveOrUpdate(OSIUser entity);

	OSIUser load(Long id);

	List<OSIUser> list();

	List<OSIUser> search(OSIUserFVO filter, long pageIndex, long pageSize);

	long count(OSIUserFVO filter);

	List<OServiceInstance> getServiceInstanceList();

	List<OServer> getServerList();

	List<OService> getServiceList();

	List<User> getAllowedUsersList();

	List<Role> getAllowedRolesList();

	List<User> getCreatorUserList();

	List<User> getModifierUserList();

	// ==============================

	void saveOrUpdate(OSIUser entity, String password, boolean userSelfAdd);

	String getPassword(Long userId);

	String getPassword(OSIUser user);

	Map<ESIUserType, OSIUser> findExecutorForSI(Long serviceInstId);

	Map<ESIUserType, OSIUser> findExecutor(Long serverId, ERemoteMode remoteMode);

	Map<ERemoteMode, List<OSIUser>> findAllowed();

	boolean isOSIUserAllowed(Long osiUserId);
}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'org.devocative.ares.iservice.oservice;', 'import', 'org.devocative.ares.entity.OServer;', 'import', 'org.devocative.ares.entity.oservice.*;', 'import', 'org.devocative.ares.vo.filter.oservice.OSIUserFVO;', 'import', 'org.devocative.demeter.entity.Role;', 'import', 'org.devocative.demeter.entity.User;', 'import', 'org.devocative.demeter.iservice.IEntityService;', 'import', 'java.util.List;', 'import', 'java.util.Map;', 'public', 'interface', 'IOSIUserService', 'extends', 'IEntityService<OSIUser>', '{', 'void', 'saveOrUpdate(OSIUser', 'entity);', 'OSIUser', 'load(Long', 'id);', 'List<OSIUser>', 'list();', 'List<OSIUser>', 'search(OSIUserFVO', 'filter,', 'long', 'pageIndex,', 'long', 'pageSize);', 'long', 'count(OSIUserFVO', 'filter);', 'List<OServiceInstance>', 'getServiceInstanceList();', 'List<OServer>', 'getServerList();', 'List<OService>', 'getServiceList();', 'List<User>', 'getAllowedUsersList();', 'List<Role>', 'getAllowedRolesList();', 'List<User>', 'getCreatorUserList();', 'List<User>', 'getModifierUserList();', '//', '==============================', 'void', 'saveOrUpdate(OSIUser', 'entity,', 'String', 'password,', 'boolean', 'userSelfAdd);', 'String', 'getPassword(Long', 'userId);', 'String', 'getPassword(OSIUser', 'user);', 'Map<ESIUserType,', 'OSIUser>', 'findExecutorForSI(Long', 'serviceInstId);', 'Map<ESIUserType,', 'OSIUser>', 'findExecutor(Long', 'serverId,', 'ERemoteMode', 'remoteMode);', 'Map<ERemoteMode,', 'List<OSIUser>>', 'findAllowed();', 'boolean', 'isOSIUserAllowed(Long', 'osiUserId);', '}```']",challenge not surrounded by ''': ,
"""use strict"";
Object.defineProperty(exports, ""__esModule"", { value: true });
/**
 * Autobind is a utility for binding methods in a class. This simplifies tagging methods as being ""bound"" to the this pointer
 * so that they can be used in scenarios that simply require a function callback.
 *
 * @example
 * import { autobind } from '../utilities/autobind';
 *
 * public class Foo {
 *   @autobind
 *   method() {
 *   }
 * }
 */
function autobind(target, key, descriptor) {
    var fn = descriptor.value;
    var defining = false;
    return {
        configurable: true,
        get: function () {
            if (defining || this === fn.prototype || this.hasOwnProperty(key)) {
                return fn;
            }
            // Bind method only once, and update the property to return the bound value from now on
            var fnBound = fn.bind(this);
            defining = true;
            Object.defineProperty(this, key, {
                configurable: true,
                writable: true,
                enumerable: true,
                value: fnBound
            });
            defining = false;
            return fnBound;
        },
        set: function (newValue) {
            Object.defineProperty(this, key, {
                configurable: true,
                writable: true,
                enumerable: true,
                value: newValue
            });
        }
    };
}
exports.autobind = autobind;

//# sourceMappingURL=autobind.js.map
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```""use', 'strict"";', 'Object.defineProperty(exports,', '""__esModule"",', '{', 'value:', 'true', '});', '/**', '*', 'Autobind', 'is', 'a', 'utility', 'for', 'binding', 'methods', 'in', 'a', 'class.', 'This', 'simplifies', 'tagging', 'methods', 'as', 'being', '""bound""', 'to', 'the', 'this', 'pointer', '*', 'so', 'that', 'they', 'can', 'be', 'used', 'in', 'scenarios', 'that', 'simply', 'require', 'a', 'function', 'callback.', '*', '*', '@example', '*', 'import', '{', 'autobind', '}', 'from', ""'../utilities/autobind';"", '*', '*', 'public', 'class', 'Foo', '{', '*', '@autobind', '*', 'method()', '{', '*', '}', '*', '}', '*/', 'function', 'autobind(target,', 'key,', 'descriptor)', '{', 'var', 'fn', '=', 'descriptor.value;', 'var', 'defining', '=', 'false;', 'return', '{', 'configurable:', 'true,', 'get:', 'function', '()', '{', 'if', '(defining', '||', 'this', '===', 'fn.prototype', '||', 'this.hasOwnProperty(key))', '{', 'return', 'fn;', '}', '//', 'Bind', 'method', 'only', 'once,', 'and', 'update', 'the', 'property', 'to', 'return', 'the', 'bound', 'value', 'from', 'now', 'on', 'var', 'fnBound', '=', 'fn.bind(this);', 'defining', '=', 'true;', 'Object.defineProperty(this,', 'key,', '{', 'configurable:', 'true,', 'writable:', 'true,', 'enumerable:', 'true,', 'value:', 'fnBound', '});', 'defining', '=', 'false;', 'return', 'fnBound;', '},', 'set:', 'function', '(newValue)', '{', 'Object.defineProperty(this,', 'key,', '{', 'configurable:', 'true,', 'writable:', 'true,', 'enumerable:', 'true,', 'value:', 'newValue', '});', '}', '};', '}', 'exports.autobind', '=', 'autobind;', '//#', 'sourceMappingURL=autobind.js.map', '```']",challenge not surrounded by ''': ,
"from django.conf import settings
from .models import Course
from django.db.models import Min, Max
from django.contrib.sites.models import Site

def course(request):
    uid = request.path.split('/')[1]
    if uid in ('course', 'admin'):
        if 'course_uid' not in request.COOKIES:
            return {
                'COURSES': request.user.is_superuser and Course.objects.all() or [],
            }
        uid = request.COOKIES['course_uid']
    course = (Course.objects
        .filter(uid=uid)
        .prefetch_related('categories')
        .annotate(min_age=Min('categories__min_age'), max_equipiers=Max('categories__max_equipiers')))
    if not course.count():
        return {}
    course = course[0]
    return {
        'COURSE':          course,
        'YEAR':            course.date.year,
        'MONTH':           course.date.month,
        'DAY':             course.date.day,
        'TITLE':           course.nom,
        'MIN_AGE':         course.min_age,
        'MAX_EQUIPIERS':   course.max_equipiers,
        'CLOSE_YEAR':      course.date_fermeture.year,
        'CLOSE_MONTH':     course.date_fermeture.month,
        'CLOSE_DAY':       course.date_fermeture.day,
        'PAYPAL_BUSINESS': course.paypal,
        'COURSES':         request.user.is_superuser and Course.objects.all() or [],
    }

def import_settings(request):
    return {
        'PAYPAL_URL':      settings.PAYPAL_URL,
        'ROOT_URL': 'https://%s' % Site.objects.get_current(),
    }
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```from', 'django.conf', 'import', 'settings', 'from', '.models', 'import', 'Course', 'from', 'django.db.models', 'import', 'Min,', 'Max', 'from', 'django.contrib.sites.models', 'import', 'Site', 'def', 'course(request):', 'uid', '=', ""request.path.split('/')[1]"", 'if', 'uid', 'in', ""('course',"", ""'admin'):"", 'if', ""'course_uid'"", 'not', 'in', 'request.COOKIES:', 'return', '{', ""'COURSES':"", 'request.user.is_superuser', 'and', 'Course.objects.all()', 'or', '[],', '}', 'uid', '=', ""request.COOKIES['course_uid']"", 'course', '=', '(Course.objects', '.filter(uid=uid)', "".prefetch_related('categories')"", "".annotate(min_age=Min('categories__min_age'),"", ""max_equipiers=Max('categories__max_equipiers')))"", 'if', 'not', 'course.count():', 'return', '{}', 'course', '=', 'course[0]', 'return', '{', ""'COURSE':"", 'course,', ""'YEAR':"", 'course.date.year,', ""'MONTH':"", 'course.date.month,', ""'DAY':"", 'course.date.day,', ""'TITLE':"", 'course.nom,', ""'MIN_AGE':"", 'course.min_age,', ""'MAX_EQUIPIERS':"", 'course.max_equipiers,', ""'CLOSE_YEAR':"", 'course.date_fermeture.year,', ""'CLOSE_MONTH':"", 'course.date_fermeture.month,', ""'CLOSE_DAY':"", 'course.date_fermeture.day,', ""'PAYPAL_BUSINESS':"", 'course.paypal,', ""'COURSES':"", 'request.user.is_superuser', 'and', 'Course.objects.all()', 'or', '[],', '}', 'def', 'import_settings(request):', 'return', '{', ""'PAYPAL_URL':"", 'settings.PAYPAL_URL,', ""'ROOT_URL':"", ""'https://%s'"", '%', 'Site.objects.get_current(),', '}', '```']",challenge not surrounded by ''': ,
"/*
 * This class is executed inside the UI thread, so be sure to  call 
 * long running code in another thread.
 *
 * You have the following options
 * - execOutsideUI(new Runnable(){ // your code })
 * - execFuture(new Runnable(){ // your code })
 * - new Thread(new Runnable(){ // your code }).start()
 *
 * You have the following options to run code again inside the UI thread
 * - execInsideUIAsync(new Runnable(){ // your code })
 * - execInsideUISync(new Runnable(){ // your code })
 */

import java.util.Map;
import java.util.HashMap;
import static java.util.Arrays.asList;
import groovy.swing.SwingBuilder;
import static griffon.util.GriffonApplicationUtils.isMacOSX;
import org.codehaus.griffon.runtime.core.AbstractLifecycleHandler;
 
public class Initialize extends AbstractLifecycleHandler {
    public void run() {
        String laf = isMacOSX() ? ""system"" : ""nimbus"";
        Map<String, Object> metalOptions = new HashMap<String, Object>();
        metalOptions.put(""boldFonts"", false);
        SwingBuilder.lookAndFeel(laf, ""gtk"", asList(""metal"", metalOptions));
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'This', 'class', 'is', 'executed', 'inside', 'the', 'UI', 'thread,', 'so', 'be', 'sure', 'to', 'call', '*', 'long', 'running', 'code', 'in', 'another', 'thread.', '*', '*', 'You', 'have', 'the', 'following', 'options', '*', '-', 'execOutsideUI(new', 'Runnable(){', '//', 'your', 'code', '})', '*', '-', 'execFuture(new', 'Runnable(){', '//', 'your', 'code', '})', '*', '-', 'new', 'Thread(new', 'Runnable(){', '//', 'your', 'code', '}).start()', '*', '*', 'You', 'have', 'the', 'following', 'options', 'to', 'run', 'code', 'again', 'inside', 'the', 'UI', 'thread', '*', '-', 'execInsideUIAsync(new', 'Runnable(){', '//', 'your', 'code', '})', '*', '-', 'execInsideUISync(new', 'Runnable(){', '//', 'your', 'code', '})', '*/', 'import', 'java.util.Map;', 'import', 'java.util.HashMap;', 'import', 'static', 'java.util.Arrays.asList;', 'import', 'groovy.swing.SwingBuilder;', 'import', 'static', 'griffon.util.GriffonApplicationUtils.isMacOSX;', 'import', 'org.codehaus.griffon.runtime.core.AbstractLifecycleHandler;', 'public', 'class', 'Initialize', 'extends', 'AbstractLifecycleHandler', '{', 'public', 'void', 'run()', '{', 'String', 'laf', '=', 'isMacOSX()', '?', '""system""', ':', '""nimbus"";', 'Map<String,', 'Object>', 'metalOptions', '=', 'new', 'HashMap<String,', 'Object>();', 'metalOptions.put(""boldFonts"",', 'false);', 'SwingBuilder.lookAndFeel(laf,', '""gtk"",', 'asList(""metal"",', 'metalOptions));', '}', '}', '```']",challenge not surrounded by ''': ,
"

package com.glob3mobile.tools.extruder;

import org.glob3.mobile.generated.GEOFeature;

import com.glob3mobile.tools.mesh.G3MeshMaterial;


public interface ExtrusionHandler {
   /**
    * @param geoFeature
    * @return if the geoFeature's geometry has to be extruded or not
    */
   public boolean extrudes(GEOFeature geoFeature);


   /**
    * @param geoFeature
    * @return if the extrusion mesh generated for the given geoFeature need to depthTest (in OpenGL meaning) while rendering
    */
   public boolean getDepthTestFor(GEOFeature geoFeature);


   public G3MeshMaterial getMaterialFor(GEOFeature geoFeature);


   public Heigths getHeightsFor(GEOFeature geoFeature);


   public void processTriangulationError(GEOFeature geoFeature);

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```', 'package', 'com.glob3mobile.tools.extruder;', 'import', 'org.glob3.mobile.generated.GEOFeature;', 'import', 'com.glob3mobile.tools.mesh.G3MeshMaterial;', 'public', 'interface', 'ExtrusionHandler', '{', '/**', '*', '@param', 'geoFeature', '*', '@return', 'if', 'the', ""geoFeature's"", 'geometry', 'has', 'to', 'be', 'extruded', 'or', 'not', '*/', 'public', 'boolean', 'extrudes(GEOFeature', 'geoFeature);', '/**', '*', '@param', 'geoFeature', '*', '@return', 'if', 'the', 'extrusion', 'mesh', 'generated', 'for', 'the', 'given', 'geoFeature', 'need', 'to', 'depthTest', '(in', 'OpenGL', 'meaning)', 'while', 'rendering', '*/', 'public', 'boolean', 'getDepthTestFor(GEOFeature', 'geoFeature);', 'public', 'G3MeshMaterial', 'getMaterialFor(GEOFeature', 'geoFeature);', 'public', 'Heigths', 'getHeightsFor(GEOFeature', 'geoFeature);', 'public', 'void', 'processTriangulationError(GEOFeature', 'geoFeature);', '}', '```']",challenge not surrounded by ''': ,
"'use babel';

import Vue from 'vue'

export default Vue.extend({
  name: 'list',
  props: ['item', 'list', 'index', 'selected', 'disable'],
  methods: {
    selectedEvent: function selectedEvent(item) {
      this.selected = item;
    },
    toggleList: function toggleList()
    {
    this.item.hideList = !this.item.hideList;
    }
  }
});
if (module.exports.__esModule) module.exports = module.exports.default
;(typeof module.exports === ""function""? module.exports.options: module.exports).template = `
<li v-dnd-draggable
  :dnd-draggable=item
  :dnd-index=index
  :dnd-disable-if=disable
  dnd-selected=selectedEvent
  v-bind:class=\""[item.type === 'container'?'list-nested-item':'list-item',{'selected': selected === item, 'collapsed': item.hideList}]\""
  :dnd-data=list>
    <template v-if=""item.type === 'container'"">
      <div title='{{item.id}}' class=""list-item"" v-on:click=toggleList>
        <span class='icon icon-file-directory'>{{item.text}}</span>
      </div>

      <ul v-dnd-list :dnd-list=item.columns
          :dnd-disable-if=disable :dnd-external-sources=true  v-bind:class=\""{'mpwHidden': item.hideList}\""

          class=""list-tree"">
        <list v-for=\""col in item.columns\"" :item=col :list=item.columns :index=$index :selected.sync=selected :disable.sync=disable></list>
      </ul>
    </template>


      <span v-else class=""icon icon-file-text""  title='{{item.id}}'>
      {{item.text}}
      </span>

</li>`
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', ""```'use"", ""babel';"", 'import', 'Vue', 'from', ""'vue'"", 'export', 'default', 'Vue.extend({', 'name:', ""'list',"", 'props:', ""['item',"", ""'list',"", ""'index',"", ""'selected',"", ""'disable'],"", 'methods:', '{', 'selectedEvent:', 'function', 'selectedEvent(item)', '{', 'this.selected', '=', 'item;', '},', 'toggleList:', 'function', 'toggleList()', '{', 'this.item.hideList', '=', '!this.item.hideList;', '}', '}', '});', 'if', '(module.exports.__esModule)', 'module.exports', '=', 'module.exports.default', ';(typeof', 'module.exports', '===', '""function""?', 'module.exports.options:', 'module.exports).template', '=', '`', '<li', 'v-dnd-draggable', ':dnd-draggable=item', ':dnd-index=index', ':dnd-disable-if=disable', 'dnd-selected=selectedEvent', 'v-bind:class=\\""[item.type', '===', ""'container'?'list-nested-item':'list-item',{'selected':"", 'selected', '===', 'item,', ""'collapsed':"", 'item.hideList}]\\""', ':dnd-data=list>', '<template', 'v-if=""item.type', '===', '\'container\'"">', '<div', ""title='{{item.id}}'"", 'class=""list-item""', 'v-on:click=toggleList>', '<span', ""class='icon"", ""icon-file-directory'>{{item.text}}</span>"", '</div>', '<ul', 'v-dnd-list', ':dnd-list=item.columns', ':dnd-disable-if=disable', ':dnd-external-sources=true', 'v-bind:class=\\""{\'mpwHidden\':', 'item.hideList}\\""', 'class=""list-tree"">', '<list', 'v-for=\\""col', 'in', 'item.columns\\""', ':item=col', ':list=item.columns', ':index=$index', ':selected.sync=selected', ':disable.sync=disable></list>', '</ul>', '</template>', '<span', 'v-else', 'class=""icon', 'icon-file-text""', ""title='{{item.id}}'>"", '{{item.text}}', '</span>', '</li>`', '```']",challenge not surrounded by ''': ,
"<html>
<head>
	<meta http-equiv=""Content-Type"" content=""text/html; charset=UTF-8"">
	<meta http-equiv=""Content-Language"" content=""en-us"">
	<title>Example Web Editor</title>
	<link rel=""stylesheet"" type=""text/css"" href=""xtext/2.9.1/xtext-ace.css""/>
	<link rel=""stylesheet"" type=""text/css"" href=""style.css""/>
	<script src=""webjars/requirejs/2.1.20/require.min.js""></script>
	<script type=""text/javascript"">
		var baseUrl = window.location.pathname;
		var fileIndex = baseUrl.indexOf(""index.html"");
		if (fileIndex > 0)
			baseUrl = baseUrl.slice(0, fileIndex);
		require.config({
			baseUrl: baseUrl,
			paths: {
				""jquery"": ""webjars/jquery/2.1.4/jquery.min"",
				""ace/ext/language_tools"": ""webjars/ace/1.2.0/src/ext-language_tools"",
				""xtext/xtext-ace"": ""xtext/2.9.1/xtext-ace""
			}
		});
		require([""webjars/ace/1.2.0/src/ace""], function() {
			require([""xtext/xtext-ace""], function(xtext) {
				xtext.createEditor({
					baseUrl: baseUrl,
					syntaxDefinition: ""xtext-resources/generated/mode-mydsl""
				});
			});
		});
	</script>
</head>
<body>

<div class=""container"">
	<div class=""header"">
		<h1>Example MyDsl Web Editor</h1>
	</div>
	<div class=""content"">
		<div id=""xtext-editor"" data-editor-xtext-lang=""mydsl""></div>
	</div>
</div>

</body>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<html>', '<head>', '<meta', 'http-equiv=""Content-Type""', 'content=""text/html;', 'charset=UTF-8"">', '<meta', 'http-equiv=""Content-Language""', 'content=""en-us"">', '<title>Example', 'Web', 'Editor</title>', '<link', 'rel=""stylesheet""', 'type=""text/css""', 'href=""xtext/2.9.1/xtext-ace.css""/>', '<link', 'rel=""stylesheet""', 'type=""text/css""', 'href=""style.css""/>', '<script', 'src=""webjars/requirejs/2.1.20/require.min.js""></script>', '<script', 'type=""text/javascript"">', 'var', 'baseUrl', '=', 'window.location.pathname;', 'var', 'fileIndex', '=', 'baseUrl.indexOf(""index.html"");', 'if', '(fileIndex', '>', '0)', 'baseUrl', '=', 'baseUrl.slice(0,', 'fileIndex);', 'require.config({', 'baseUrl:', 'baseUrl,', 'paths:', '{', '""jquery"":', '""webjars/jquery/2.1.4/jquery.min"",', '""ace/ext/language_tools"":', '""webjars/ace/1.2.0/src/ext-language_tools"",', '""xtext/xtext-ace"":', '""xtext/2.9.1/xtext-ace""', '}', '});', 'require([""webjars/ace/1.2.0/src/ace""],', 'function()', '{', 'require([""xtext/xtext-ace""],', 'function(xtext)', '{', 'xtext.createEditor({', 'baseUrl:', 'baseUrl,', 'syntaxDefinition:', '""xtext-resources/generated/mode-mydsl""', '});', '});', '});', '</script>', '</head>', '<body>', '<div', 'class=""container"">', '<div', 'class=""header"">', '<h1>Example', 'MyDsl', 'Web', 'Editor</h1>', '</div>', '<div', 'class=""content"">', '<div', 'id=""xtext-editor""', 'data-editor-xtext-lang=""mydsl""></div>', '</div>', '</div>', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright (C) 2015 SUSE Linux
 *
 * This software may be modified and distributed under the terms
 * of the MIT license.  See the LICENSE.txt file for details.
 */

(function () {
  'use strict';

  angular.module('janusHangouts')
    .controller('RoomCtrl',  RoomCtrl);

  RoomCtrl.$inject = ['$scope', '$state', 'blockUI', 'UserService', 'RoomService',
    'hotkeys'];

  function RoomCtrl($scope, $state, blockUI, UserService, RoomService, hotkeys) {
    var room = RoomService.getRoom();
    var user = UserService.getUser();
    var params = {};

    if (room === null || user === null) {
      // Redirect to signin making sure room is included in the url
      if (room !== null) {
        params.room = room.id;
      }
      $state.go('signin', params);
    } else {
      if ($state.params.user === undefined) {
        // Make sure the url includes the user (to allow bookmarking)
        params.room = room.id;
        params.user = user.username;
        $state.go($state.current.name, params, {location: 'replace'});
      } else {
        RoomService.enter(user.username);
      }
    }

    $scope.$on('room.error', function(evt, error) {
      // FIXME: do something neat
      alert(""Janus server reported the following error:\n"" + error);
    });

    $scope.$on('consentDialog.changed', function(evt, open) {
      if (open) {
        blockUI.start();
      } else if (!open) {
        blockUI.stop();
      }
    });

    hotkeys.bindTo($scope)
      .add({
        combo: 'alt+m',
        description: 'Mute or unmute your microphone',
        callback: function() { RoomService.toggleChannel('audio'); }
      })
      .add({
        combo: 'alt+n',
        description: 'Disable or enable camera',
        callback: function() { RoomService.toggleChannel('video'); }
      })
      .add({
        combo: 'alt+q',
        description: 'Sign out',
        callback: function() { UserService.signout(); }
      });
    $scope.hotkeys = hotkeys;
  }
})();
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '(C)', '2015', 'SUSE', 'Linux', '*', '*', 'This', 'software', 'may', 'be', 'modified', 'and', 'distributed', 'under', 'the', 'terms', '*', 'of', 'the', 'MIT', 'license.', 'See', 'the', 'LICENSE.txt', 'file', 'for', 'details.', '*/', '(function', '()', '{', ""'use"", ""strict';"", ""angular.module('janusHangouts')"", "".controller('RoomCtrl',"", 'RoomCtrl);', 'RoomCtrl.$inject', '=', ""['$scope',"", ""'$state',"", ""'blockUI',"", ""'UserService',"", ""'RoomService',"", ""'hotkeys'];"", 'function', 'RoomCtrl($scope,', '$state,', 'blockUI,', 'UserService,', 'RoomService,', 'hotkeys)', '{', 'var', 'room', '=', 'RoomService.getRoom();', 'var', 'user', '=', 'UserService.getUser();', 'var', 'params', '=', '{};', 'if', '(room', '===', 'null', '||', 'user', '===', 'null)', '{', '//', 'Redirect', 'to', 'signin', 'making', 'sure', 'room', 'is', 'included', 'in', 'the', 'url', 'if', '(room', '!==', 'null)', '{', 'params.room', '=', 'room.id;', '}', ""$state.go('signin',"", 'params);', '}', 'else', '{', 'if', '($state.params.user', '===', 'undefined)', '{', '//', 'Make', 'sure', 'the', 'url', 'includes', 'the', 'user', '(to', 'allow', 'bookmarking)', 'params.room', '=', 'room.id;', 'params.user', '=', 'user.username;', '$state.go($state.current.name,', 'params,', '{location:', ""'replace'});"", '}', 'else', '{', 'RoomService.enter(user.username);', '}', '}', ""$scope.$on('room.error',"", 'function(evt,', 'error)', '{', '//', 'FIXME:', 'do', 'something', 'neat', 'alert(""Janus', 'server', 'reported', 'the', 'following', 'error:\\n""', '+', 'error);', '});', ""$scope.$on('consentDialog.changed',"", 'function(evt,', 'open)', '{', 'if', '(open)', '{', 'blockUI.start();', '}', 'else', 'if', '(!open)', '{', 'blockUI.stop();', '}', '});', 'hotkeys.bindTo($scope)', '.add({', 'combo:', ""'alt+m',"", 'description:', ""'Mute"", 'or', 'unmute', 'your', ""microphone',"", 'callback:', 'function()', '{', ""RoomService.toggleChannel('audio');"", '}', '})', '.add({', 'combo:', ""'alt+n',"", 'description:', ""'Disable"", 'or', 'enable', ""camera',"", 'callback:', 'function()', '{', ""RoomService.toggleChannel('video');"", '}', '})', '.add({', 'combo:', ""'alt+q',"", 'description:', ""'Sign"", ""out',"", 'callback:', 'function()', '{', 'UserService.signout();', '}', '});', '$scope.hotkeys', '=', 'hotkeys;', '}', '})();', '```']",challenge not surrounded by ''': ,
"package com.learning.gcs.web.service;

/**
 * @author Xull
 * @version 1.0
 * @email wanxkl@gmail.com
 * @created 2017/10/18 10:35
 * @description
 */
public interface ScheduleService {
    /**
     * 每天执行一次，次日0点执行
     */
    void taskByEveryDay();
    /**
     * 每小时执行一次，次小时00分执行
     */
    void taskByEveryHour();
    /**
     *每五分钟执行一次 没有准确的开始时间
     */
    void taskByEveryFiveMinute();

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.learning.gcs.web.service;', '/**', '*', '@author', 'Xull', '*', '@version', '1.0', '*', '@email', 'wanxkl@gmail.com', '*', '@created', '2017/10/18', '10:35', '*', '@description', '*/', 'public', 'interface', 'ScheduleService', '{', '/**', '*', '每天执行一次，次日0点执行', '*/', 'void', 'taskByEveryDay();', '/**', '*', '每小时执行一次，次小时00分执行', '*/', 'void', 'taskByEveryHour();', '/**', '*每五分钟执行一次', '没有准确的开始时间', '*/', 'void', 'taskByEveryFiveMinute();', '}', '```']",challenge not surrounded by ''': ,
"/*
 * This file is part of MyDMAM.
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 * 
 * Copyright (C) hdsdi3g for hd3g.tv 2017
 * 
*/
package hd3gtv.mydmam.bcastautomation;

public enum BCAScheduleType {
	
	PLAYLIST, ASRUN, OTHER

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'This', 'file', 'is', 'part', 'of', 'MyDMAM.', '*', '*', 'This', 'program', 'is', 'free', 'software;', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', '*', 'it', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'Lesser', 'General', 'Public', 'License', 'as', 'published', 'by', '*', 'the', 'Free', 'Software', 'Foundation;', 'either', 'version', '3', 'of', 'the', 'License,', 'or', '*', 'any', 'later', 'version.', '*', '*', 'This', 'program', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', '*', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', '*', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', '*', 'GNU', 'Lesser', 'General', 'Public', 'License', 'for', 'more', 'details.', '*', '*', 'Copyright', '(C)', 'hdsdi3g', 'for', 'hd3g.tv', '2017', '*', '*/', 'package', 'hd3gtv.mydmam.bcastautomation;', 'public', 'enum', 'BCAScheduleType', '{', 'PLAYLIST,', 'ASRUN,', 'OTHER', '}', '```']",challenge not surrounded by ''': ,
"# -*- coding: utf-8 -*-
""""""
image analysis group tools
""""""
from setuptools import setup, find_packages


setup(
    name='image_analysis',
    version='0.0.1',
    url='https://github.com/CoDaS-Lab/image_analysis',
    license='BSD',
    author='CoDaSLab http://shaftolab.com/',
    author_email='s@sophiaray.info',
    description='A small but fast and easy to use stand-alone template '
                'engine written in pure python.',
    long_description=__doc__,
    zip_safe=False,
    classifiers=[
        'Programming Language :: Python :: 3.5',
    ],
    packages=find_packages(exclude=['docs', 'test', 'demo']),
    install_requires=['scipy >= 0.18.1', 'scikit-learn>=0.17', 'ffmpy>=0.2.0',
                      'sk-video>=1.1.7', 'scikit-image>=0.12.0',
                      'pyfftw>=0.10.4'],
    extras_require=None,
    include_package_data=True
)
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', '-*-', 'coding:', 'utf-8', '-*-', '""""""', 'image', 'analysis', 'group', 'tools', '""""""', 'from', 'setuptools', 'import', 'setup,', 'find_packages', 'setup(', ""name='image_analysis',"", ""version='0.0.1',"", ""url='https://github.com/CoDaS-Lab/image_analysis',"", ""license='BSD',"", ""author='CoDaSLab"", ""http://shaftolab.com/',"", ""author_email='s@sophiaray.info',"", ""description='A"", 'small', 'but', 'fast', 'and', 'easy', 'to', 'use', 'stand-alone', 'template', ""'"", ""'engine"", 'written', 'in', 'pure', ""python.',"", 'long_description=__doc__,', 'zip_safe=False,', 'classifiers=[', ""'Programming"", 'Language', '::', 'Python', '::', ""3.5',"", '],', ""packages=find_packages(exclude=['docs',"", ""'test',"", ""'demo']),"", ""install_requires=['scipy"", '>=', ""0.18.1',"", ""'scikit-learn>=0.17',"", ""'ffmpy>=0.2.0',"", ""'sk-video>=1.1.7',"", ""'scikit-image>=0.12.0',"", ""'pyfftw>=0.10.4'],"", 'extras_require=None,', 'include_package_data=True', ')', '```']",challenge not surrounded by ''': ,
"package one;

public class Test {

	public static void main(String[] args) {
		// Providers would execute these lines
		Services.registerDefaultProvider(DEFAULT_PROVIDER);
		Services.registerProvider(""comp"", COMP_PROVIDER);
		Services.registerProvider(""armed"", ARMED_PROVIDER);
		
		//Clinets would execute these lines
		Service s1 = Services.newInstance();
		Service s2 = Services.newInstance(""comp"");
		Service s3 = Services.newInstance(""armed"");
		System.out.printf(""%s, %s, %s%n"", s1, s2, s3);
	}
	
	private static Provider DEFAULT_PROVIDER = new Provider() {
		
		@Override
		public Service newService() {
			return new Service() {
				@Override
				public String toString() {
					// TODO Auto-generated method stub
					return ""Default service"";
				}
			};
		}
	};
	
	private static Provider COMP_PROVIDER = new Provider() {
		
		@Override
		public Service newService() {
			// TODO Auto-generated method stub
			return new Service() {
				@Override
				public String toString() {
					// TODO Auto-generated method stub
					return ""Complementary service"";
				}
			};
		}
	};
		
	private static Provider ARMED_PROVIDER = new Provider() {
		
		@Override
		public Service newService() {
			// TODO Auto-generated method stub
			return new Service() {
				@Override
				public String toString() {
					// TODO Auto-generated method stub
					return ""Armed service"";
				}
			};
		}
	};

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'one;', 'public', 'class', 'Test', '{', 'public', 'static', 'void', 'main(String[]', 'args)', '{', '//', 'Providers', 'would', 'execute', 'these', 'lines', 'Services.registerDefaultProvider(DEFAULT_PROVIDER);', 'Services.registerProvider(""comp"",', 'COMP_PROVIDER);', 'Services.registerProvider(""armed"",', 'ARMED_PROVIDER);', '//Clinets', 'would', 'execute', 'these', 'lines', 'Service', 's1', '=', 'Services.newInstance();', 'Service', 's2', '=', 'Services.newInstance(""comp"");', 'Service', 's3', '=', 'Services.newInstance(""armed"");', 'System.out.printf(""%s,', '%s,', '%s%n"",', 's1,', 's2,', 's3);', '}', 'private', 'static', 'Provider', 'DEFAULT_PROVIDER', '=', 'new', 'Provider()', '{', '@Override', 'public', 'Service', 'newService()', '{', 'return', 'new', 'Service()', '{', '@Override', 'public', 'String', 'toString()', '{', '//', 'TODO', 'Auto-generated', 'method', 'stub', 'return', '""Default', 'service"";', '}', '};', '}', '};', 'private', 'static', 'Provider', 'COMP_PROVIDER', '=', 'new', 'Provider()', '{', '@Override', 'public', 'Service', 'newService()', '{', '//', 'TODO', 'Auto-generated', 'method', 'stub', 'return', 'new', 'Service()', '{', '@Override', 'public', 'String', 'toString()', '{', '//', 'TODO', 'Auto-generated', 'method', 'stub', 'return', '""Complementary', 'service"";', '}', '};', '}', '};', 'private', 'static', 'Provider', 'ARMED_PROVIDER', '=', 'new', 'Provider()', '{', '@Override', 'public', 'Service', 'newService()', '{', '//', 'TODO', 'Auto-generated', 'method', 'stub', 'return', 'new', 'Service()', '{', '@Override', 'public', 'String', 'toString()', '{', '//', 'TODO', 'Auto-generated', 'method', 'stub', 'return', '""Armed', 'service"";', '}', '};', '}', '};', '}', '```']",challenge not surrounded by ''': ,
"package magpie.activity5;

import java.util.Scanner;

/**
 * A simple class to run the Magpie class.
 * @author Laurie White
 * @version April 2012
 */
public class MagpieRunner5
{

	/**
	 * Create a Magpie, give it user input, and print its replies.
	 */
	public static void main(String[] args)
	{
		Magpie5 maggie = new Magpie5();
		
		System.out.println (maggie.getGreeting());
		Scanner in = new Scanner (System.in);
		String statement = in.nextLine();
		
		while (!statement.equals(""Bye""))
		{
			System.out.println (maggie.getResponse(statement));
			statement = in.nextLine();
		}
		in.close();
	}

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'magpie.activity5;', 'import', 'java.util.Scanner;', '/**', '*', 'A', 'simple', 'class', 'to', 'run', 'the', 'Magpie', 'class.', '*', '@author', 'Laurie', 'White', '*', '@version', 'April', '2012', '*/', 'public', 'class', 'MagpieRunner5', '{', '/**', '*', 'Create', 'a', 'Magpie,', 'give', 'it', 'user', 'input,', 'and', 'print', 'its', 'replies.', '*/', 'public', 'static', 'void', 'main(String[]', 'args)', '{', 'Magpie5', 'maggie', '=', 'new', 'Magpie5();', 'System.out.println', '(maggie.getGreeting());', 'Scanner', 'in', '=', 'new', 'Scanner', '(System.in);', 'String', 'statement', '=', 'in.nextLine();', 'while', '(!statement.equals(""Bye""))', '{', 'System.out.println', '(maggie.getResponse(statement));', 'statement', '=', 'in.nextLine();', '}', 'in.close();', '}', '}', '```']",challenge not surrounded by ''': ,
"﻿{% extends ""web/layout.html"" %}
{% load staticfiles %}

{% block content %}

<img class=""pull-right"" src=""{% static 'img/ScriptumX192.png' %}"" />

<h1>Welcome to <i>Scriptum</i>&#x1d4e7;</h1>
<h3>A Web-based Movie Script Editor and Production Planner (Alpha Version)</h3>


<p>
<i>Scriptum</i>&#x1d4e7; is a web based movie script editor and production planner... 𝓧
    Lorem ipsum dolor sit amet, consetetur sadipscing elitr, <i class=""fa fa-cog fa-spin""></i> sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita <i class=""fa fa-refresh fa-spin""></i> kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.
</p>

<img style=""margin-right:32px; margin-bottom:16px;"" class=""pull-left"" src=""{% static 'img/web/script.png' %}"" />

<p>
𝓧 Lorem ipsum dolor sit amet, consetetur sadipscing elitr, <i class=""fa fa-cog fa-spin""></i> sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita <i class=""fa fa-refresh fa-spin""></i> kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.
</p>

<hr/>

<img style=""margin-left:32px; margin-bottom:16px;"" class=""pull-right"" src=""{% static 'img/web/scene.png' %}"" />

<p>
Lorem ipsum dolor sit amet, consetetur sadipscing elitr, <i class=""fa fa-cog fa-spin""></i> sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita <i class=""fa fa-refresh fa-spin""></i> kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.
</p>
<p>
Lorem ipsum dolor sit amet, consetetur sadipscing elitr, <i class=""fa fa-cog fa-spin""></i> sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita <i class=""fa fa-refresh fa-spin""></i> kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.
</p>
<p>
Lorem ipsum dolor sit amet, consetetur sadipscing elitr, <i class=""fa fa-cog fa-spin""></i> sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita <i class=""fa fa-refresh fa-spin""></i> kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.
</p>

<hr/>

<img style=""margin-right:32px; margin-bottom:16px;"" class=""pull-left"" src=""{% static 'img/web/report_l.png' %}"" />
<img style=""margin-left:32px; margin-bottom:16px;"" class=""pull-right"" src=""{% static 'img/web/report_m.png' %}"" />

<p>
Lorem ipsum dolor sit amet, consetetur sadipscing elitr, <i class=""fa fa-cog fa-spin""></i> sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita <i class=""fa fa-refresh fa-spin""></i> kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.
</p>
<p>
Lorem ipsum dolor sit amet, consetetur sadipscing elitr, <i class=""fa fa-cog fa-spin""></i> sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita <i class=""fa fa-refresh fa-spin""></i> kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.
</p>

<hr/>

<div class=""alert alert-warning alert-dismissible text-center"" role=""alert"">
  <button type=""button"" class=""close"" data-dismiss=""alert"" aria-label=""Close""><span aria-hidden=""true"">&times;</span></button>
  <i class=""fa fa-spinner fa-pulse fa-2x""></i><strong> Warning!</strong> Page under construction!
</div>

{% endblock %}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```\ufeff{%', 'extends', '""web/layout.html""', '%}', '{%', 'load', 'staticfiles', '%}', '{%', 'block', 'content', '%}', '<img', 'class=""pull-right""', 'src=""{%', 'static', ""'img/ScriptumX192.png'"", '%}""', '/>', '<h1>Welcome', 'to', '<i>Scriptum</i>&#x1d4e7;</h1>', '<h3>A', 'Web-based', 'Movie', 'Script', 'Editor', 'and', 'Production', 'Planner', '(Alpha', 'Version)</h3>', '<p>', '<i>Scriptum</i>&#x1d4e7;', 'is', 'a', 'web', 'based', 'movie', 'script', 'editor', 'and', 'production', 'planner...', '𝓧', 'Lorem', 'ipsum', 'dolor', 'sit', 'amet,', 'consetetur', 'sadipscing', 'elitr,', '<i', 'class=""fa', 'fa-cog', 'fa-spin""></i>', 'sed', 'diam', 'nonumy', 'eirmod', 'tempor', 'invidunt', 'ut', 'labore', 'et', 'dolore', 'magna', 'aliquyam', 'erat,', 'sed', 'diam', 'voluptua.', 'At', 'vero', 'eos', 'et', 'accusam', 'et', 'justo', 'duo', 'dolores', 'et', 'ea', 'rebum.', 'Stet', 'clita', '<i', 'class=""fa', 'fa-refresh', 'fa-spin""></i>', 'kasd', 'gubergren,', 'no', 'sea', 'takimata', 'sanctus', 'est', 'Lorem', 'ipsum', 'dolor', 'sit', 'amet.', 'Lorem', 'ipsum', 'dolor', 'sit', 'amet,', 'consetetur', 'sadipscing', 'elitr,', 'sed', 'diam', 'nonumy', 'eirmod', 'tempor', 'invidunt', 'ut', 'labore', 'et', 'dolore', 'magna', 'aliquyam', 'erat,', 'sed', 'diam', 'voluptua.', 'At', 'vero', 'eos', 'et', 'accusam', 'et', 'justo', 'duo', 'dolores', 'et', 'ea', 'rebum.', 'Stet', 'clita', 'kasd', 'gubergren,', 'no', 'sea', 'takimata', 'sanctus', 'est', 'Lorem', 'ipsum', 'dolor', 'sit', 'amet.', '</p>', '<img', 'style=""margin-right:32px;', 'margin-bottom:16px;""', 'class=""pull-left""', 'src=""{%', 'static', ""'img/web/script.png'"", '%}""', '/>', '<p>', '𝓧', 'Lorem', 'ipsum', 'dolor', 'sit', 'amet,', 'consetetur', 'sadipscing', 'elitr,', '<i', 'class=""fa', 'fa-cog', 'fa-spin""></i>', 'sed', 'diam', 'nonumy', 'eirmod', 'tempor', 'invidunt', 'ut', 'labore', 'et', 'dolore', 'magna', 'aliquyam', 'erat,', 'sed', 'diam', 'voluptua.', 'At', 'vero', 'eos', 'et', 'accusam', 'et', 'justo', 'duo', 'dolores', 'et', 'ea', 'rebum.', 'Stet', 'clita', '<i', 'class=""fa', 'fa-refresh', 'fa-spin""></i>', 'kasd', 'gubergren,', 'no', 'sea', 'takimata', 'sanctus', 'est', 'Lorem', 'ipsum', 'dolor', 'sit', 'amet.', 'Lorem', 'ipsum', 'dolor', 'sit', 'amet,', 'consetetur', 'sadipscing', 'elitr,', 'sed', 'diam', 'nonumy', 'eirmod', 'tempor', 'invidunt', 'ut', 'labore', 'et', 'dolore', 'magna', 'aliquyam', 'erat,', 'sed', 'diam', 'voluptua.', 'At', 'vero', 'eos', 'et', 'accusam', 'et', 'justo', 'duo', 'dolores', 'et', 'ea', 'rebum.', 'Stet', 'clita', 'kasd', 'gubergren,', 'no', 'sea', 'takimata', 'sanctus', 'est', 'Lorem', 'ipsum', 'dolor', 'sit', 'amet.', '</p>', '<hr/>', '<img', 'style=""margin-left:32px;', 'margin-bottom:16px;""', 'class=""pull-right""', 'src=""{%', 'static', ""'img/web/scene.png'"", '%}""', '/>', '<p>', 'Lorem', 'ipsum', 'dolor', 'sit', 'amet,', 'consetetur', 'sadipscing', 'elitr,', '<i', 'class=""fa', 'fa-cog', 'fa-spin""></i>', 'sed', 'diam', 'nonumy', 'eirmod', 'tempor', 'invidunt', 'ut', 'labore', 'et', 'dolore', 'magna', 'aliquyam', 'erat,', 'sed', 'diam', 'voluptua.', 'At', 'vero', 'eos', 'et', 'accusam', 'et', 'justo', 'duo', 'dolores', 'et', 'ea', 'rebum.', 'Stet', 'clita', '<i', 'class=""fa', 'fa-refresh', 'fa-spin""></i>', 'kasd', 'gubergren,', 'no', 'sea', 'takimata', 'sanctus', 'est', 'Lorem', 'ipsum', 'dolor', 'sit', 'amet.', 'Lorem', 'ipsum', 'dolor', 'sit', 'amet,', 'consetetur', 'sadipscing', 'elitr,', 'sed', 'diam', 'nonumy', 'eirmod', 'tempor', 'invidunt', 'ut', 'labore', 'et', 'dolore', 'magna', 'aliquyam', 'erat,', 'sed', 'diam', 'voluptua.', 'At', 'vero', 'eos', 'et', 'accusam', 'et', 'justo', 'duo', 'dolores', 'et', 'ea', 'rebum.', 'Stet', 'clita', 'kasd', 'gubergren,', 'no', 'sea', 'takimata', 'sanctus', 'est', 'Lorem', 'ipsum', 'dolor', 'sit', 'amet.', '</p>', '<p>', 'Lorem', 'ipsum', 'dolor', 'sit', 'amet,', 'consetetur', 'sadipscing', 'elitr,', '<i', 'class=""fa', 'fa-cog', 'fa-spin""></i>', 'sed', 'diam', 'nonumy', 'eirmod', 'tempor', 'invidunt', 'ut', 'labore', 'et', 'dolore', 'magna', 'aliquyam', 'erat,', 'sed', 'diam', 'voluptua.', 'At', 'vero', 'eos', 'et', 'accusam', 'et', 'justo', 'duo', 'dolores', 'et', 'ea', 'rebum.', 'Stet', 'clita', '<i', 'class=""fa', 'fa-refresh', 'fa-spin""></i>', 'kasd', 'gubergren,', 'no', 'sea', 'takimata', 'sanctus', 'est', 'Lorem', 'ipsum', 'dolor', 'sit', 'amet.', 'Lorem', 'ipsum', 'dolor', 'sit', 'amet,', 'consetetur', 'sadipscing', 'elitr,', 'sed', 'diam', 'nonumy', 'eirmod', 'tempor', 'invidunt', 'ut', 'labore', 'et', 'dolore', 'magna', 'aliquyam', 'erat,', 'sed', 'diam', 'voluptua.', 'At', 'vero', 'eos', 'et', 'accusam', 'et', 'justo', 'duo', 'dolores', 'et', 'ea', 'rebum.', 'Stet', 'clita', 'kasd', 'gubergren,', 'no', 'sea', 'takimata', 'sanctus', 'est', 'Lorem', 'ipsum', 'dolor', 'sit', 'amet.', '</p>', '<p>', 'Lorem', 'ipsum', 'dolor', 'sit', 'amet,', 'consetetur', 'sadipscing', 'elitr,', '<i', 'class=""fa', 'fa-cog', 'fa-spin""></i>', 'sed', 'diam', 'nonumy', 'eirmod', 'tempor', 'invidunt', 'ut', 'labore', 'et', 'dolore', 'magna', 'aliquyam', 'erat,', 'sed', 'diam', 'voluptua.', 'At', 'vero', 'eos', 'et', 'accusam', 'et', 'justo', 'duo', 'dolores', 'et', 'ea', 'rebum.', 'Stet', 'clita', '<i', 'class=""fa', 'fa-refresh', 'fa-spin""></i>', 'kasd', 'gubergren,', 'no', 'sea', 'takimata', 'sanctus', 'est', 'Lorem', 'ipsum', 'dolor', 'sit', 'amet.', 'Lorem', 'ipsum', 'dolor', 'sit', 'amet,', 'consetetur', 'sadipscing', 'elitr,', 'sed', 'diam', 'nonumy', 'eirmod', 'tempor', 'invidunt', 'ut', 'labore', 'et', 'dolore', 'magna', 'aliquyam', 'erat,', 'sed', 'diam', 'voluptua.', 'At', 'vero', 'eos', 'et', 'accusam', 'et', 'justo', 'duo', 'dolores', 'et', 'ea', 'rebum.', 'Stet', 'clita', 'kasd', 'gubergren,', 'no', 'sea', 'takimata', 'sanctus', 'est', 'Lorem', 'ipsum', 'dolor', 'sit', 'amet.', '</p>', '<hr/>', '<img', 'style=""margin-right:32px;', 'margin-bottom:16px;""', 'class=""pull-left""', 'src=""{%', 'static', ""'img/web/report_l.png'"", '%}""', '/>', '<img', 'style=""margin-left:32px;', 'margin-bottom:16px;""', 'class=""pull-right""', 'src=""{%', 'static', ""'img/web/report_m.png'"", '%}""', '/>', '<p>', 'Lorem', 'ipsum', 'dolor', 'sit', 'amet,', 'consetetur', 'sadipscing', 'elitr,', '<i', 'class=""fa', 'fa-cog', 'fa-spin""></i>', 'sed', 'diam', 'nonumy', 'eirmod', 'tempor', 'invidunt', 'ut', 'labore', 'et', 'dolore', 'magna', 'aliquyam', 'erat,', 'sed', 'diam', 'voluptua.', 'At', 'vero', 'eos', 'et', 'accusam', 'et', 'justo', 'duo', 'dolores', 'et', 'ea', 'rebum.', 'Stet', 'clita', '<i', 'class=""fa', 'fa-refresh', 'fa-spin""></i>', 'kasd', 'gubergren,', 'no', 'sea', 'takimata', 'sanctus', 'est', 'Lorem', 'ipsum', 'dolor', 'sit', 'amet.', 'Lorem', 'ipsum', 'dolor', 'sit', 'amet,', 'consetetur', 'sadipscing', 'elitr,', 'sed', 'diam', 'nonumy', 'eirmod', 'tempor', 'invidunt', 'ut', 'labore', 'et', 'dolore', 'magna', 'aliquyam', 'erat,', 'sed', 'diam', 'voluptua.', 'At', 'vero', 'eos', 'et', 'accusam', 'et', 'justo', 'duo', 'dolores', 'et', 'ea', 'rebum.', 'Stet', 'clita', 'kasd', 'gubergren,', 'no', 'sea', 'takimata', 'sanctus', 'est', 'Lorem', 'ipsum', 'dolor', 'sit', 'amet.', '</p>', '<p>', 'Lorem', 'ipsum', 'dolor', 'sit', 'amet,', 'consetetur', 'sadipscing', 'elitr,', '<i', 'class=""fa', 'fa-cog', 'fa-spin""></i>', 'sed', 'diam', 'nonumy', 'eirmod', 'tempor', 'invidunt', 'ut', 'labore', 'et', 'dolore', 'magna', 'aliquyam', 'erat,', 'sed', 'diam', 'voluptua.', 'At', 'vero', 'eos', 'et', 'accusam', 'et', 'justo', 'duo', 'dolores', 'et', 'ea', 'rebum.', 'Stet', 'clita', '<i', 'class=""fa', 'fa-refresh', 'fa-spin""></i>', 'kasd', 'gubergren,', 'no', 'sea', 'takimata', 'sanctus', 'est', 'Lorem', 'ipsum', 'dolor', 'sit', 'amet.', 'Lorem', 'ipsum', 'dolor', 'sit', 'amet,', 'consetetur', 'sadipscing', 'elitr,', 'sed', 'diam', 'nonumy', 'eirmod', 'tempor', 'invidunt', 'ut', 'labore', 'et', 'dolore', 'magna', 'aliquyam', 'erat,', 'sed', 'diam', 'voluptua.', 'At', 'vero', 'eos', 'et', 'accusam', 'et', 'justo', 'duo', 'dolores', 'et', 'ea', 'rebum.', 'Stet', 'clita', 'kasd', 'gubergren,', 'no', 'sea', 'takimata', 'sanctus', 'est', 'Lorem', 'ipsum', 'dolor', 'sit', 'amet.', '</p>', '<hr/>', '<div', 'class=""alert', 'alert-warning', 'alert-dismissible', 'text-center""', 'role=""alert"">', '<button', 'type=""button""', 'class=""close""', 'data-dismiss=""alert""', 'aria-label=""Close""><span', 'aria-hidden=""true"">&times;</span></button>', '<i', 'class=""fa', 'fa-spinner', 'fa-pulse', 'fa-2x""></i><strong>', 'Warning!</strong>', 'Page', 'under', 'construction!', '</div>', '{%', 'endblock', '%}', '```']",challenge not surrounded by ''': ,
"package com.thoughtworks.xstream.converters.extended;

import com.thoughtworks.xstream.converters.SingleValueConverter;
import com.thoughtworks.xstream.mapper.AttributeMapper;
import com.thoughtworks.xstream.mapper.Mapper;

class UseAttributeForEnumMapper extends AttributeMapper
{
  public UseAttributeForEnumMapper(Mapper paramMapper)
  {
    super(paramMapper, null, null);
  }

  // ERROR //
  static Mapper createEnumMapper(Mapper paramMapper)
  {
    // Byte code:
    //   0: ldc 15
    //   2: iconst_1
    //   3: ldc 17
    //   5: invokevirtual 23	java/lang/Class:getClassLoader	()Ljava/lang/ClassLoader;
    //   8: invokestatic 27	java/lang/Class:forName	(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;
    //   11: astore_1
    //   12: iconst_1
    //   13: anewarray 29	java/lang/Object
    //   16: astore_2
    //   17: aload_2
    //   18: iconst_0
    //   19: new 2	com/thoughtworks/xstream/converters/extended/UseAttributeForEnumMapper
    //   22: dup
    //   23: aload_0
    //   24: ldc 31
    //   26: invokeinterface 35 2 0
    //   31: invokespecial 37	com/thoughtworks/xstream/converters/extended/UseAttributeForEnumMapper:<init>	(Lcom/thoughtworks/xstream/mapper/Mapper;)V
    //   34: aastore
    //   35: aload_1
    //   36: aload_2
    //   37: invokestatic 43	com/thoughtworks/xstream/core/util/DependencyInjectionFactory:newInstance	(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
    //   40: checkcast 17	com/thoughtworks/xstream/mapper/Mapper
    //   43: astore_3
    //   44: aload_3
    //   45: areturn
    //   46: aconst_null
    //   47: areturn
    //
    // Exception table:
    //   from	to	target	type
    //   0	44	46	java/lang/Exception
  }

  public static boolean isEnum(Class paramClass)
  {
    while ((paramClass != null) && (paramClass != Object.class))
    {
      if (paramClass.getName().equals(""java.lang.Enum""))
        return true;
      paramClass = paramClass.getSuperclass();
    }
    return false;
  }

  public SingleValueConverter getConverterFromAttribute(Class paramClass1, String paramString, Class paramClass2)
  {
    return null;
  }

  public SingleValueConverter getConverterFromItemType(String paramString, Class paramClass1, Class paramClass2)
  {
    return null;
  }

  public boolean shouldLookForSingleValueConverter(String paramString, Class paramClass1, Class paramClass2)
  {
    return isEnum(paramClass1);
  }
}

/* Location:           /Users/vikas/Documents/Mhacks_Real_app/classes-dex2jar.jar
 * Qualified Name:     com.thoughtworks.xstream.converters.extended.UseAttributeForEnumMapper
 * JD-Core Version:    0.6.2
 */","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.thoughtworks.xstream.converters.extended;', 'import', 'com.thoughtworks.xstream.converters.SingleValueConverter;', 'import', 'com.thoughtworks.xstream.mapper.AttributeMapper;', 'import', 'com.thoughtworks.xstream.mapper.Mapper;', 'class', 'UseAttributeForEnumMapper', 'extends', 'AttributeMapper', '{', 'public', 'UseAttributeForEnumMapper(Mapper', 'paramMapper)', '{', 'super(paramMapper,', 'null,', 'null);', '}', '//', 'ERROR', '//', 'static', 'Mapper', 'createEnumMapper(Mapper', 'paramMapper)', '{', '//', 'Byte', 'code:', '//', '0:', 'ldc', '15', '//', '2:', 'iconst_1', '//', '3:', 'ldc', '17', '//', '5:', 'invokevirtual', '23', 'java/lang/Class:getClassLoader', '()Ljava/lang/ClassLoader;', '//', '8:', 'invokestatic', '27', 'java/lang/Class:forName', '(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;', '//', '11:', 'astore_1', '//', '12:', 'iconst_1', '//', '13:', 'anewarray', '29', 'java/lang/Object', '//', '16:', 'astore_2', '//', '17:', 'aload_2', '//', '18:', 'iconst_0', '//', '19:', 'new', '2', 'com/thoughtworks/xstream/converters/extended/UseAttributeForEnumMapper', '//', '22:', 'dup', '//', '23:', 'aload_0', '//', '24:', 'ldc', '31', '//', '26:', 'invokeinterface', '35', '2', '0', '//', '31:', 'invokespecial', '37', 'com/thoughtworks/xstream/converters/extended/UseAttributeForEnumMapper:<init>', '(Lcom/thoughtworks/xstream/mapper/Mapper;)V', '//', '34:', 'aastore', '//', '35:', 'aload_1', '//', '36:', 'aload_2', '//', '37:', 'invokestatic', '43', 'com/thoughtworks/xstream/core/util/DependencyInjectionFactory:newInstance', '(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;', '//', '40:', 'checkcast', '17', 'com/thoughtworks/xstream/mapper/Mapper', '//', '43:', 'astore_3', '//', '44:', 'aload_3', '//', '45:', 'areturn', '//', '46:', 'aconst_null', '//', '47:', 'areturn', '//', '//', 'Exception', 'table:', '//', 'from', 'to', 'target', 'type', '//', '0', '44', '46', 'java/lang/Exception', '}', 'public', 'static', 'boolean', 'isEnum(Class', 'paramClass)', '{', 'while', '((paramClass', '!=', 'null)', '&&', '(paramClass', '!=', 'Object.class))', '{', 'if', '(paramClass.getName().equals(""java.lang.Enum""))', 'return', 'true;', 'paramClass', '=', 'paramClass.getSuperclass();', '}', 'return', 'false;', '}', 'public', 'SingleValueConverter', 'getConverterFromAttribute(Class', 'paramClass1,', 'String', 'paramString,', 'Class', 'paramClass2)', '{', 'return', 'null;', '}', 'public', 'SingleValueConverter', 'getConverterFromItemType(String', 'paramString,', 'Class', 'paramClass1,', 'Class', 'paramClass2)', '{', 'return', 'null;', '}', 'public', 'boolean', 'shouldLookForSingleValueConverter(String', 'paramString,', 'Class', 'paramClass1,', 'Class', 'paramClass2)', '{', 'return', 'isEnum(paramClass1);', '}', '}', '/*', 'Location:', '/Users/vikas/Documents/Mhacks_Real_app/classes-dex2jar.jar', '*', 'Qualified', 'Name:', 'com.thoughtworks.xstream.converters.extended.UseAttributeForEnumMapper', '*', 'JD-Core', 'Version:', '0.6.2', '*/```']",challenge not surrounded by ''': ,
"angular.module(""risevision.common.components.purchase-flow"")
  .directive(""shippingAddress"", [""$templateCache"", ""purchaseFactory"",
    function ($templateCache, purchaseFactory) {
      return {
        restrict: ""E"",
        template: $templateCache.get(""purchase-flow/checkout-shipping-address.html""),
        link: function ($scope) {
          $scope.shippingAddress = purchaseFactory.purchase.shippingAddress;
        }
      };
    }
  ]);
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```angular.module(""risevision.common.components.purchase-flow"")', '.directive(""shippingAddress"",', '[""$templateCache"",', '""purchaseFactory"",', 'function', '($templateCache,', 'purchaseFactory)', '{', 'return', '{', 'restrict:', '""E"",', 'template:', '$templateCache.get(""purchase-flow/checkout-shipping-address.html""),', 'link:', 'function', '($scope)', '{', '$scope.shippingAddress', '=', 'purchaseFactory.purchase.shippingAddress;', '}', '};', '}', ']);', '```']",challenge not surrounded by ''': ,
"#### NOTICE: THIS FILE IS AUTOGENERATED
#### MODIFICATIONS MAY BE LOST IF DONE IMPROPERLY
#### PLEASE SEE THE ONLINE DOCUMENTATION FOR EXAMPLES

from swgpy.object import *	

def create(kernel):
	result = Creature()

	result.template = ""object/mobile/shared_dressed_gran_thug_male_01.iff""
	result.attribute_template_id = 9
	result.stfName(""npc_name"",""gran_base_male"")		
	
	#### BEGIN MODIFICATIONS ####
	####  END MODIFICATIONS  ####
	
	return result","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```####', 'NOTICE:', 'THIS', 'FILE', 'IS', 'AUTOGENERATED', '####', 'MODIFICATIONS', 'MAY', 'BE', 'LOST', 'IF', 'DONE', 'IMPROPERLY', '####', 'PLEASE', 'SEE', 'THE', 'ONLINE', 'DOCUMENTATION', 'FOR', 'EXAMPLES', 'from', 'swgpy.object', 'import', '*', 'def', 'create(kernel):', 'result', '=', 'Creature()', 'result.template', '=', '""object/mobile/shared_dressed_gran_thug_male_01.iff""', 'result.attribute_template_id', '=', '9', 'result.stfName(""npc_name"",""gran_base_male"")', '####', 'BEGIN', 'MODIFICATIONS', '####', '####', 'END', 'MODIFICATIONS', '####', 'return', 'result```']",challenge not surrounded by ''': ,
"/*
 * Copyright (c) 2006, 2021, Oracle and/or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 *
 */

#include ""precompiled.hpp""
#include ""runtime/os.hpp""
#include ""vm_version_x86.hpp""

#ifdef __APPLE__

#include <sys/types.h>
#include <sys/sysctl.h>

bool VM_Version::is_cpu_emulated() {
  int ret = 0;
  size_t size = sizeof(ret);
  // Is this process being ran in Rosetta (i.e. emulation) mode on macOS?
  if (sysctlbyname(""sysctl.proc_translated"", &ret, &size, NULL, 0) == -1) {
    // errno == ENOENT is a valid response, but anything else is a real error
    if (errno != ENOENT) {
      warning(""unable to lookup sysctl.proc_translated"");
    }
  }
  return (ret==1);
}

#endif

","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '(c)', '2006,', '2021,', 'Oracle', 'and/or', 'its', 'affiliates.', 'All', 'rights', 'reserved.', '*', 'DO', 'NOT', 'ALTER', 'OR', 'REMOVE', 'COPYRIGHT', 'NOTICES', 'OR', 'THIS', 'FILE', 'HEADER.', '*', '*', 'This', 'code', 'is', 'free', 'software;', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', 'it', '*', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'version', '2', 'only,', 'as', '*', 'published', 'by', 'the', 'Free', 'Software', 'Foundation.', '*', '*', 'This', 'code', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', 'but', 'WITHOUT', '*', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', 'MERCHANTABILITY', 'or', '*', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', 'GNU', 'General', 'Public', 'License', '*', 'version', '2', 'for', 'more', 'details', '(a', 'copy', 'is', 'included', 'in', 'the', 'LICENSE', 'file', 'that', '*', 'accompanied', 'this', 'code).', '*', '*', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'version', '*', '2', 'along', 'with', 'this', 'work;', 'if', 'not,', 'write', 'to', 'the', 'Free', 'Software', 'Foundation,', '*', 'Inc.,', '51', 'Franklin', 'St,', 'Fifth', 'Floor,', 'Boston,', 'MA', '02110-1301', 'USA.', '*', '*', 'Please', 'contact', 'Oracle,', '500', 'Oracle', 'Parkway,', 'Redwood', 'Shores,', 'CA', '94065', 'USA', '*', 'or', 'visit', 'www.oracle.com', 'if', 'you', 'need', 'additional', 'information', 'or', 'have', 'any', '*', 'questions.', '*', '*/', '#include', '""precompiled.hpp""', '#include', '""runtime/os.hpp""', '#include', '""vm_version_x86.hpp""', '#ifdef', '__APPLE__', '#include', '<sys/types.h>', '#include', '<sys/sysctl.h>', 'bool', 'VM_Version::is_cpu_emulated()', '{', 'int', 'ret', '=', '0;', 'size_t', 'size', '=', 'sizeof(ret);', '//', 'Is', 'this', 'process', 'being', 'ran', 'in', 'Rosetta', '(i.e.', 'emulation)', 'mode', 'on', 'macOS?', 'if', '(sysctlbyname(""sysctl.proc_translated"",', '&ret,', '&size,', 'NULL,', '0)', '==', '-1)', '{', '//', 'errno', '==', 'ENOENT', 'is', 'a', 'valid', 'response,', 'but', 'anything', 'else', 'is', 'a', 'real', 'error', 'if', '(errno', '!=', 'ENOENT)', '{', 'warning(""unable', 'to', 'lookup', 'sysctl.proc_translated"");', '}', '}', 'return', '(ret==1);', '}', '#endif', '```']",challenge not surrounded by ''': ,
"<section class=""section-work"">

  <h3 id=""photos"">Photography</h3>
  {% for project in site.data.settings.projects %}
    <input type=""radio"" name=""trigger"" class=""trigger"" id=""{{ project.folder }}"" />
  {% endfor %}

  <input type=""radio"" name=""trigger"" id=""return"" class=""return"" />

  <div class=""work-belt"">

    <div class=""thumb-wrap"">
      <div class=""thumb-container"">
      {% for project in site.data.settings.projects %}
      <label for=""{{ project.folder }}"">
        <div class=""thumb-unit"" data-url=""{{ site.github.url }}/work/{{ project.folder }}/"">
          <img src=""{{ site.github.url }}/assets/img/work/{{project.folder}}/thumb.jpg"" alt=""{{ project.name }}"" />
        </div>
        <div class=""thumb-overlay"">
          <strong>{{ project.name }}</strong>
        </div>
      </label>
      {% endfor %}
    </div>
    </div>

    <div class=""work-wrap"">
      <div class=""work-container"">
      <label for=""return"">
        <div class=""work-return"">{% include icons/icon-back.html %}</div>
      </label>
      <h4 class=""project-title""></h4>
      <div class=""project-load""></div>

      <noscript>
        {% for project in site.data.settings.projects %}
          <div class=""noscript"" id=""content-{{ project.folder }}"">
            <h4 class=""project-title"">{{ project.name }}</h4>
            <div class=""noscript-load"">
              {% include {{project.file}} %}
            </div>
          </div>
        {% endfor %}
      </noscript>

    </div>
    </div>

  </div>
</section>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<section', 'class=""section-work"">', '<h3', 'id=""photos"">Photography</h3>', '{%', 'for', 'project', 'in', 'site.data.settings.projects', '%}', '<input', 'type=""radio""', 'name=""trigger""', 'class=""trigger""', 'id=""{{', 'project.folder', '}}""', '/>', '{%', 'endfor', '%}', '<input', 'type=""radio""', 'name=""trigger""', 'id=""return""', 'class=""return""', '/>', '<div', 'class=""work-belt"">', '<div', 'class=""thumb-wrap"">', '<div', 'class=""thumb-container"">', '{%', 'for', 'project', 'in', 'site.data.settings.projects', '%}', '<label', 'for=""{{', 'project.folder', '}}"">', '<div', 'class=""thumb-unit""', 'data-url=""{{', 'site.github.url', '}}/work/{{', 'project.folder', '}}/"">', '<img', 'src=""{{', 'site.github.url', '}}/assets/img/work/{{project.folder}}/thumb.jpg""', 'alt=""{{', 'project.name', '}}""', '/>', '</div>', '<div', 'class=""thumb-overlay"">', '<strong>{{', 'project.name', '}}</strong>', '</div>', '</label>', '{%', 'endfor', '%}', '</div>', '</div>', '<div', 'class=""work-wrap"">', '<div', 'class=""work-container"">', '<label', 'for=""return"">', '<div', 'class=""work-return"">{%', 'include', 'icons/icon-back.html', '%}</div>', '</label>', '<h4', 'class=""project-title""></h4>', '<div', 'class=""project-load""></div>', '<noscript>', '{%', 'for', 'project', 'in', 'site.data.settings.projects', '%}', '<div', 'class=""noscript""', 'id=""content-{{', 'project.folder', '}}"">', '<h4', 'class=""project-title"">{{', 'project.name', '}}</h4>', '<div', 'class=""noscript-load"">', '{%', 'include', '{{project.file}}', '%}', '</div>', '</div>', '{%', 'endfor', '%}', '</noscript>', '</div>', '</div>', '</div>', '</section>', '```']",challenge not surrounded by ''': ,
"package pkg;

import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
      Scanner userInput = new Scanner(System.in);

      double f = 0;
      double c = 0;

      System.out.println(""Enter the temperature in fahrenheit"");

      f = userInput.nextDouble();

      c = (f-32) * 5/9; // the formula

      System.out.println(""the temperature in celsius is :"" + c);
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'pkg;', 'import', 'java.util.Scanner;', 'public', 'class', 'Main', '{', 'public', 'static', 'void', 'main(String[]', 'args)', '{', 'Scanner', 'userInput', '=', 'new', 'Scanner(System.in);', 'double', 'f', '=', '0;', 'double', 'c', '=', '0;', 'System.out.println(""Enter', 'the', 'temperature', 'in', 'fahrenheit"");', 'f', '=', 'userInput.nextDouble();', 'c', '=', '(f-32)', '*', '5/9;', '//', 'the', 'formula', 'System.out.println(""the', 'temperature', 'in', 'celsius', 'is', ':""', '+', 'c);', '}', '}', '```']",challenge not surrounded by ''': ,
"
{% extends ""base.html"" %}
{% block title %} ""{{query}}"" - NEWS SEARCH {% endblock %} 
{% block contents %}
<div class="" col-sm-offset-1"">
<br />
<br />
<br />
<div class=""container"">

    <h1>Query : ""{{query}}""</h1>



  <!-- Page Features -->
  <div class=""row col-sm-8"">
{% if news_list %}
 {% for news in news_list %}
      <div class=""col-md-4 col-sm-6 hero-feature"">
          <div class=""thumbnail"" style=""height:240px;overflow:hidden"">
              <div class=""caption"">
                <a href=""../../news/{{news.slug}}""><h3>{{news.title}}</a></h3>
                  <div style=""height:120px;overflow:hidden"">
                      {% autoescape off %}
                          <p >{{news.body|truncatewords_html:18}}
                             <a href=""../../news/{{news.slug}}""> read more</a></p>
                      {% endautoescape %}
                  </div>
              </div>
          </div>
      </div>
      {% endfor %}
      <hr>
      {% include 'pager.html' %}
      <hr>

{% else %}

NO NEWS AVAILABLE FOR THE SEARCH.
{% endif %}
</div>
  <!-- /.row -->
<!-- /.container -->
<!--TODO: INCLUDE COMMENTS -->
</div>

{% endblock %}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```', '{%', 'extends', '""base.html""', '%}', '{%', 'block', 'title', '%}', '""{{query}}""', '-', 'NEWS', 'SEARCH', '{%', 'endblock', '%}', '{%', 'block', 'contents', '%}', '<div', 'class=""', 'col-sm-offset-1"">', '<br', '/>', '<br', '/>', '<br', '/>', '<div', 'class=""container"">', '<h1>Query', ':', '""{{query}}""</h1>', '<!--', 'Page', 'Features', '-->', '<div', 'class=""row', 'col-sm-8"">', '{%', 'if', 'news_list', '%}', '{%', 'for', 'news', 'in', 'news_list', '%}', '<div', 'class=""col-md-4', 'col-sm-6', 'hero-feature"">', '<div', 'class=""thumbnail""', 'style=""height:240px;overflow:hidden"">', '<div', 'class=""caption"">', '<a', 'href=""../../news/{{news.slug}}""><h3>{{news.title}}</a></h3>', '<div', 'style=""height:120px;overflow:hidden"">', '{%', 'autoescape', 'off', '%}', '<p', '>{{news.body|truncatewords_html:18}}', '<a', 'href=""../../news/{{news.slug}}"">', 'read', 'more</a></p>', '{%', 'endautoescape', '%}', '</div>', '</div>', '</div>', '</div>', '{%', 'endfor', '%}', '<hr>', '{%', 'include', ""'pager.html'"", '%}', '<hr>', '{%', 'else', '%}', 'NO', 'NEWS', 'AVAILABLE', 'FOR', 'THE', 'SEARCH.', '{%', 'endif', '%}', '</div>', '<!--', '/.row', '-->', '<!--', '/.container', '-->', '<!--TODO:', 'INCLUDE', 'COMMENTS', '-->', '</div>', '{%', 'endblock', '%}', '```']",challenge not surrounded by ''': ,
"package com.settingdust.loreattr;

import org.bukkit.Bukkit;
import org.bukkit.configuration.file.FileConfiguration;
import org.bukkit.event.HandlerList;
import org.bukkit.plugin.java.JavaPlugin;

public class LoreAttributes extends JavaPlugin {
    public static LoreManager loreManager;
    public static FileConfiguration config = null;

    public void onEnable() {
        config = getConfig();
        config.options().copyDefaults(true);

        saveConfig();

        if (loreManager == null) {
            loreManager = new LoreManager(this);
        }

        Bukkit.getServer().getPluginManager().registerEvents(new LoreEvents(), this);
    }

    public void onDisable() {
        HandlerList.unregisterAll(this);
    }

}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.settingdust.loreattr;', 'import', 'org.bukkit.Bukkit;', 'import', 'org.bukkit.configuration.file.FileConfiguration;', 'import', 'org.bukkit.event.HandlerList;', 'import', 'org.bukkit.plugin.java.JavaPlugin;', 'public', 'class', 'LoreAttributes', 'extends', 'JavaPlugin', '{', 'public', 'static', 'LoreManager', 'loreManager;', 'public', 'static', 'FileConfiguration', 'config', '=', 'null;', 'public', 'void', 'onEnable()', '{', 'config', '=', 'getConfig();', 'config.options().copyDefaults(true);', 'saveConfig();', 'if', '(loreManager', '==', 'null)', '{', 'loreManager', '=', 'new', 'LoreManager(this);', '}', 'Bukkit.getServer().getPluginManager().registerEvents(new', 'LoreEvents(),', 'this);', '}', 'public', 'void', 'onDisable()', '{', 'HandlerList.unregisterAll(this);', '}', '}```']",challenge not surrounded by ''': ,
"package eu.riscoss.db;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.Map;


public interface RiskAnalysisSession {
	
	void setLayers( Collection<String> layers );
	
	long getTimestamp();
	
	void setTimestamp( long timestamp );
	
	void addEntity( String entity, String layer );
	
	String getTarget();
	
	void setTarget( String entity );
	
	void setRCName( String rc );
	
	void setRCModels( Map<String, ArrayList<String>> rcModels );
	
	String getId();
	
	void setResult( String layer, String entity, String id, String attribute, String value );
	
	String getResult( String layer, String entity, String indicatorId, String attribute, String def );
	
	List<String> getModels( String layer );
	
	String getLayer( int i );
	
	String getRCName();
	
	int getLayerCount();
	
	int getEntityCount( String layer );
	
	String getEntity( String layer, int index );
	
	Collection<String> getResults( String layer, String entity );
	
	void saveInput( String entity, String indicator_id, String origin, String value );
	
	void setStatus( String entity, String name );
	
	String getInput( String entity, String indicator_id );
	
	String getOption( String key, String def );
	
	void setOption( String key, String value );
	
	String getLayer( String target );
	
	Collection<String> getChildren( String entity );
	
	void setParent( String child, String parent );
	
	void saveResults( String json );
	
	String readResults();
	
	List<String> getEntities( String layer );
	
	Map<String, Object> getResult( String layer, String entity, String indicator );
	
	void setName( String name );
	String getName();

	void storeModelBlob( String name, String layer, String blob);
	String getStoredModelBlob( String model );

	void setEntityAttribute( String target, String key, String value );
	String getEntityAttribute( String target, String key, String def );
	
	List<String> listInputs( String entity );

	RiskScenario getScenario( String name );
	
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'eu.riscoss.db;', 'import', 'java.util.ArrayList;', 'import', 'java.util.Collection;', 'import', 'java.util.List;', 'import', 'java.util.Map;', 'public', 'interface', 'RiskAnalysisSession', '{', 'void', 'setLayers(', 'Collection<String>', 'layers', ');', 'long', 'getTimestamp();', 'void', 'setTimestamp(', 'long', 'timestamp', ');', 'void', 'addEntity(', 'String', 'entity,', 'String', 'layer', ');', 'String', 'getTarget();', 'void', 'setTarget(', 'String', 'entity', ');', 'void', 'setRCName(', 'String', 'rc', ');', 'void', 'setRCModels(', 'Map<String,', 'ArrayList<String>>', 'rcModels', ');', 'String', 'getId();', 'void', 'setResult(', 'String', 'layer,', 'String', 'entity,', 'String', 'id,', 'String', 'attribute,', 'String', 'value', ');', 'String', 'getResult(', 'String', 'layer,', 'String', 'entity,', 'String', 'indicatorId,', 'String', 'attribute,', 'String', 'def', ');', 'List<String>', 'getModels(', 'String', 'layer', ');', 'String', 'getLayer(', 'int', 'i', ');', 'String', 'getRCName();', 'int', 'getLayerCount();', 'int', 'getEntityCount(', 'String', 'layer', ');', 'String', 'getEntity(', 'String', 'layer,', 'int', 'index', ');', 'Collection<String>', 'getResults(', 'String', 'layer,', 'String', 'entity', ');', 'void', 'saveInput(', 'String', 'entity,', 'String', 'indicator_id,', 'String', 'origin,', 'String', 'value', ');', 'void', 'setStatus(', 'String', 'entity,', 'String', 'name', ');', 'String', 'getInput(', 'String', 'entity,', 'String', 'indicator_id', ');', 'String', 'getOption(', 'String', 'key,', 'String', 'def', ');', 'void', 'setOption(', 'String', 'key,', 'String', 'value', ');', 'String', 'getLayer(', 'String', 'target', ');', 'Collection<String>', 'getChildren(', 'String', 'entity', ');', 'void', 'setParent(', 'String', 'child,', 'String', 'parent', ');', 'void', 'saveResults(', 'String', 'json', ');', 'String', 'readResults();', 'List<String>', 'getEntities(', 'String', 'layer', ');', 'Map<String,', 'Object>', 'getResult(', 'String', 'layer,', 'String', 'entity,', 'String', 'indicator', ');', 'void', 'setName(', 'String', 'name', ');', 'String', 'getName();', 'void', 'storeModelBlob(', 'String', 'name,', 'String', 'layer,', 'String', 'blob);', 'String', 'getStoredModelBlob(', 'String', 'model', ');', 'void', 'setEntityAttribute(', 'String', 'target,', 'String', 'key,', 'String', 'value', ');', 'String', 'getEntityAttribute(', 'String', 'target,', 'String', 'key,', 'String', 'def', ');', 'List<String>', 'listInputs(', 'String', 'entity', ');', 'RiskScenario', 'getScenario(', 'String', 'name', ');', '}', '```']",challenge not surrounded by ''': ,
"package com.chechezhi.ui.guide;

import java.util.List;

import android.content.Context;
import android.graphics.drawable.Drawable;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentActivity;
import android.support.v4.app.FragmentPagerAdapter;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;

public class FragmentTabAdapter extends FragmentPagerAdapter {

    private List<SinglePage> mGuideContent;
    private Context mCtx;

    public FragmentTabAdapter(FragmentActivity a, List<SinglePage> guideContent) {
        super(a.getSupportFragmentManager());
        mCtx = a;
        mGuideContent = guideContent;
    }

    @Override
    public Fragment getItem(int position) {
        // Get a local reference
        SinglePage sp = mGuideContent.get(position);
        
        if (sp.mCustomFragment != null) {
            // This single page has custom fragment, use it
            return sp.mCustomFragment;
        } else {
            PageFragment pageFragment = (PageFragment) Fragment.instantiate(mCtx, PageFragment.class.getName());
            
            if (sp.mBackground != null) {
                pageFragment.setBg(sp.mBackground);
            }
            return pageFragment;
        }
    }

    @Override
    public int getCount() {
        return mGuideContent.size();
    }

    public static final class PageFragment extends Fragment {

        private Drawable mBg;

        @Override
        public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
            ImageView iv = new ImageView(getActivity());
            if (mBg != null) {
                iv.setBackground(mBg);
            }
            return iv;
        }

        public void setBg(Drawable mBackground) {
            mBg = mBackground;
        }

    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.chechezhi.ui.guide;', 'import', 'java.util.List;', 'import', 'android.content.Context;', 'import', 'android.graphics.drawable.Drawable;', 'import', 'android.os.Bundle;', 'import', 'android.support.annotation.Nullable;', 'import', 'android.support.v4.app.Fragment;', 'import', 'android.support.v4.app.FragmentActivity;', 'import', 'android.support.v4.app.FragmentPagerAdapter;', 'import', 'android.view.LayoutInflater;', 'import', 'android.view.View;', 'import', 'android.view.ViewGroup;', 'import', 'android.widget.ImageView;', 'public', 'class', 'FragmentTabAdapter', 'extends', 'FragmentPagerAdapter', '{', 'private', 'List<SinglePage>', 'mGuideContent;', 'private', 'Context', 'mCtx;', 'public', 'FragmentTabAdapter(FragmentActivity', 'a,', 'List<SinglePage>', 'guideContent)', '{', 'super(a.getSupportFragmentManager());', 'mCtx', '=', 'a;', 'mGuideContent', '=', 'guideContent;', '}', '@Override', 'public', 'Fragment', 'getItem(int', 'position)', '{', '//', 'Get', 'a', 'local', 'reference', 'SinglePage', 'sp', '=', 'mGuideContent.get(position);', 'if', '(sp.mCustomFragment', '!=', 'null)', '{', '//', 'This', 'single', 'page', 'has', 'custom', 'fragment,', 'use', 'it', 'return', 'sp.mCustomFragment;', '}', 'else', '{', 'PageFragment', 'pageFragment', '=', '(PageFragment)', 'Fragment.instantiate(mCtx,', 'PageFragment.class.getName());', 'if', '(sp.mBackground', '!=', 'null)', '{', 'pageFragment.setBg(sp.mBackground);', '}', 'return', 'pageFragment;', '}', '}', '@Override', 'public', 'int', 'getCount()', '{', 'return', 'mGuideContent.size();', '}', 'public', 'static', 'final', 'class', 'PageFragment', 'extends', 'Fragment', '{', 'private', 'Drawable', 'mBg;', '@Override', 'public', 'View', 'onCreateView(LayoutInflater', 'inflater,', '@Nullable', 'ViewGroup', 'container,', '@Nullable', 'Bundle', 'savedInstanceState)', '{', 'ImageView', 'iv', '=', 'new', 'ImageView(getActivity());', 'if', '(mBg', '!=', 'null)', '{', 'iv.setBackground(mBg);', '}', 'return', 'iv;', '}', 'public', 'void', 'setBg(Drawable', 'mBackground)', '{', 'mBg', '=', 'mBackground;', '}', '}', '}', '```']",challenge not surrounded by ''': ,
"#!/usr/bin/env bash
#
# Deploy a SNAPSHOT JAR after every successful CI run To Sonatype.
#

set -e

BASEDIR=""$( cd ""$( dirname ""${BASH_SOURCE[0]}"" )/.."" && pwd )""
IS_SNAPSHOT=""$(grep 'VERSION_NAME=[0-9\.]\+-SNAPSHOT' ""$BASEDIR/gradle.properties"")""

if [ ""$TRAVIS_REPO_SLUG"" != ""facebook/yoga"" ]; then
  echo >&2 ""Skipping repository. Expected project to be 'facebook/yoga', but was '$TRAVIS_REPO_SLUG'.""
  exit
elif [ ""$TRAVIS_BRANCH"" != ""master"" ]; then
  echo >&2 ""Skipping build. Expected branch name to be 'master', but was '$TRAVIS_BRANCH'.""
  exit
elif [ ""$TRAVIS_PULL_REQUEST"" != ""false"" ]; then
  echo >&2 ""Skipping build. Only considering non-PR builds, but URL was '$TRAVIS_PULL_REQUEST'.""
  exit
elif [ ""$IS_SNAPSHOT"" == """" ]; then
  echo >&2 ""Skipping build. Given build doesn't appear to be a SNAPSHOT release.""
else
  env TERMINAL=dumb ""$BASEDIR/gradlew"" uploadArchives
fi
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/usr/bin/env', 'bash', '#', '#', 'Deploy', 'a', 'SNAPSHOT', 'JAR', 'after', 'every', 'successful', 'CI', 'run', 'To', 'Sonatype.', '#', 'set', '-e', 'BASEDIR=""$(', 'cd', '""$(', 'dirname', '""${BASH_SOURCE[0]}""', ')/..""', '&&', 'pwd', ')""', 'IS_SNAPSHOT=""$(grep', ""'VERSION_NAME=[0-9\\.]\\+-SNAPSHOT'"", '""$BASEDIR/gradle.properties"")""', 'if', '[', '""$TRAVIS_REPO_SLUG""', '!=', '""facebook/yoga""', '];', 'then', 'echo', '>&2', '""Skipping', 'repository.', 'Expected', 'project', 'to', 'be', ""'facebook/yoga',"", 'but', 'was', '\'$TRAVIS_REPO_SLUG\'.""', 'exit', 'elif', '[', '""$TRAVIS_BRANCH""', '!=', '""master""', '];', 'then', 'echo', '>&2', '""Skipping', 'build.', 'Expected', 'branch', 'name', 'to', 'be', ""'master',"", 'but', 'was', '\'$TRAVIS_BRANCH\'.""', 'exit', 'elif', '[', '""$TRAVIS_PULL_REQUEST""', '!=', '""false""', '];', 'then', 'echo', '>&2', '""Skipping', 'build.', 'Only', 'considering', 'non-PR', 'builds,', 'but', 'URL', 'was', '\'$TRAVIS_PULL_REQUEST\'.""', 'exit', 'elif', '[', '""$IS_SNAPSHOT""', '==', '""""', '];', 'then', 'echo', '>&2', '""Skipping', 'build.', 'Given', 'build', ""doesn't"", 'appear', 'to', 'be', 'a', 'SNAPSHOT', 'release.""', 'else', 'env', 'TERMINAL=dumb', '""$BASEDIR/gradlew""', 'uploadArchives', 'fi', '```']",challenge not surrounded by ''': ,
"/**
 * @license Copyright (c) 2003-2015, CKSource - Frederico Knabben. All rights reserved.
 * For licensing, see LICENSE.md or http://ckeditor.com/license
 */

CKEDITOR.editorConfig = function( config ) {
    config.disallowedContent = 'img{width,height};img[width,height]';
    config.tag = { element : 'img', attributes : { 'class' : 'yourClassName' } };

   // config.disallowedContent = '';
	// Define changes to default configuration here. For example:
	// config.language = 'fr';
	// config.uiColor = '#AADC6E';
};
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', '@license', 'Copyright', '(c)', '2003-2015,', 'CKSource', '-', 'Frederico', 'Knabben.', 'All', 'rights', 'reserved.', '*', 'For', 'licensing,', 'see', 'LICENSE.md', 'or', 'http://ckeditor.com/license', '*/', 'CKEDITOR.editorConfig', '=', 'function(', 'config', ')', '{', 'config.disallowedContent', '=', ""'img{width,height};img[width,height]';"", 'config.tag', '=', '{', 'element', ':', ""'img',"", 'attributes', ':', '{', ""'class'"", ':', ""'yourClassName'"", '}', '};', '//', 'config.disallowedContent', '=', ""'';"", '//', 'Define', 'changes', 'to', 'default', 'configuration', 'here.', 'For', 'example:', '//', 'config.language', '=', ""'fr';"", '//', 'config.uiColor', '=', ""'#AADC6E';"", '};', '```']",challenge not surrounded by ''': ,
"/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.camel.component.disruptor;

import java.util.Iterator;

import org.apache.camel.builder.RouteBuilder;
import org.apache.camel.test.junit4.CamelTestSupport;
import org.junit.Test;

/**
 *
 */
public class DisruptorComponentReferenceEndpointTest extends CamelTestSupport {
    @Test
    public void testDisruptorComponentReference() throws Exception {
        final DisruptorComponent disruptor = context.getComponent(""disruptor"", DisruptorComponent.class);

        final String fooKey = DisruptorComponent.getDisruptorKey(""disruptor://foo"");
        assertEquals(1, disruptor.getDisruptors().get(fooKey).getEndpointCount());
        assertEquals(2, numberOfReferences(disruptor));

        // add a second consumer on the endpoint
        context.addRoutes(new RouteBuilder() {
            @Override
            public void configure() throws Exception {
                from(""disruptor:foo?concurrentConsumers=1"").routeId(""foo2"").to(""mock:foo2"");
            }
        });

        assertEquals(2, disruptor.getDisruptors().get(fooKey).getEndpointCount());
        assertEquals(3, numberOfReferences(disruptor));

        // remove the 1st route
        context.getRouteController().stopRoute(""foo"");
        context.removeRoute(""foo"");

        assertEquals(1, disruptor.getDisruptors().get(fooKey).getEndpointCount());
        assertEquals(2, numberOfReferences(disruptor));

        // remove the 2nd route
        context.getRouteController().stopRoute(""foo2"");
        context.removeRoute(""foo2"");

        // and there is no longer disruptors for the foo key
        assertTrue(disruptor.getDisruptors().get(fooKey) == null);

        // there should still be a bar
        assertEquals(1, numberOfReferences(disruptor));
        final String barKey = DisruptorComponent.getDisruptorKey(""disruptor://bar"");
        assertEquals(1, disruptor.getDisruptors().get(barKey).getEndpointCount());
    }

    @Override
    protected RouteBuilder createRouteBuilder() throws Exception {
        return new RouteBuilder() {
            @Override
            public void configure() throws Exception {
                from(""disruptor:foo"").routeId(""foo"").to(""mock:foo"");

                from(""disruptor:bar"").routeId(""bar"").to(""mock:bar"");
            }
        };
    }

    private int numberOfReferences(final DisruptorComponent disruptor) {
        int num = 0;
        final Iterator<DisruptorReference> it = disruptor.getDisruptors().values().iterator();
        while (it.hasNext()) {
            num += it.next().getEndpointCount();
        }
        return num;
    }

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', 'Licensed', 'to', 'the', 'Apache', 'Software', 'Foundation', '(ASF)', 'under', 'one', 'or', 'more', '*', 'contributor', 'license', 'agreements.', 'See', 'the', 'NOTICE', 'file', 'distributed', 'with', '*', 'this', 'work', 'for', 'additional', 'information', 'regarding', 'copyright', 'ownership.', '*', 'The', 'ASF', 'licenses', 'this', 'file', 'to', 'You', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '*', '(the', '""License"");', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', '*', 'the', 'License.', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'org.apache.camel.component.disruptor;', 'import', 'java.util.Iterator;', 'import', 'org.apache.camel.builder.RouteBuilder;', 'import', 'org.apache.camel.test.junit4.CamelTestSupport;', 'import', 'org.junit.Test;', '/**', '*', '*/', 'public', 'class', 'DisruptorComponentReferenceEndpointTest', 'extends', 'CamelTestSupport', '{', '@Test', 'public', 'void', 'testDisruptorComponentReference()', 'throws', 'Exception', '{', 'final', 'DisruptorComponent', 'disruptor', '=', 'context.getComponent(""disruptor"",', 'DisruptorComponent.class);', 'final', 'String', 'fooKey', '=', 'DisruptorComponent.getDisruptorKey(""disruptor://foo"");', 'assertEquals(1,', 'disruptor.getDisruptors().get(fooKey).getEndpointCount());', 'assertEquals(2,', 'numberOfReferences(disruptor));', '//', 'add', 'a', 'second', 'consumer', 'on', 'the', 'endpoint', 'context.addRoutes(new', 'RouteBuilder()', '{', '@Override', 'public', 'void', 'configure()', 'throws', 'Exception', '{', 'from(""disruptor:foo?concurrentConsumers=1"").routeId(""foo2"").to(""mock:foo2"");', '}', '});', 'assertEquals(2,', 'disruptor.getDisruptors().get(fooKey).getEndpointCount());', 'assertEquals(3,', 'numberOfReferences(disruptor));', '//', 'remove', 'the', '1st', 'route', 'context.getRouteController().stopRoute(""foo"");', 'context.removeRoute(""foo"");', 'assertEquals(1,', 'disruptor.getDisruptors().get(fooKey).getEndpointCount());', 'assertEquals(2,', 'numberOfReferences(disruptor));', '//', 'remove', 'the', '2nd', 'route', 'context.getRouteController().stopRoute(""foo2"");', 'context.removeRoute(""foo2"");', '//', 'and', 'there', 'is', 'no', 'longer', 'disruptors', 'for', 'the', 'foo', 'key', 'assertTrue(disruptor.getDisruptors().get(fooKey)', '==', 'null);', '//', 'there', 'should', 'still', 'be', 'a', 'bar', 'assertEquals(1,', 'numberOfReferences(disruptor));', 'final', 'String', 'barKey', '=', 'DisruptorComponent.getDisruptorKey(""disruptor://bar"");', 'assertEquals(1,', 'disruptor.getDisruptors().get(barKey).getEndpointCount());', '}', '@Override', 'protected', 'RouteBuilder', 'createRouteBuilder()', 'throws', 'Exception', '{', 'return', 'new', 'RouteBuilder()', '{', '@Override', 'public', 'void', 'configure()', 'throws', 'Exception', '{', 'from(""disruptor:foo"").routeId(""foo"").to(""mock:foo"");', 'from(""disruptor:bar"").routeId(""bar"").to(""mock:bar"");', '}', '};', '}', 'private', 'int', 'numberOfReferences(final', 'DisruptorComponent', 'disruptor)', '{', 'int', 'num', '=', '0;', 'final', 'Iterator<DisruptorReference>', 'it', '=', 'disruptor.getDisruptors().values().iterator();', 'while', '(it.hasNext())', '{', 'num', '+=', 'it.next().getEndpointCount();', '}', 'return', 'num;', '}', '}', '```']",challenge not surrounded by ''': ,
"// Fig. 10.28: hourly.cpp
// HourlyEmployee class member-function definitions.
#include <iostream>

using std::cout;

#include ""hourly.h""

// constructor for class HourlyEmployee
HourlyEmployee::HourlyEmployee( const string &first, 
   const string &last, const string &socialSecurityNumber,
   double hourlyWage, double hoursWorked )
   : Employee( first, last, socialSecurityNumber )   
{
   setWage( hourlyWage );
   setHours( hoursWorked );

} // end HourlyEmployee constructor

// set hourly worker's wage
void HourlyEmployee::setWage( double wageAmount ) 
{ 
   wage = wageAmount < 0.0 ? 0.0 : wageAmount; 

} // end function setWage

// set hourly worker's hours worked
void HourlyEmployee::setHours( double hoursWorked )
{ 
   hours = ( hoursWorked >= 0.0 && hoursWorked <= 168.0 ) ?
      hoursWorked : 0.0;

} // end function setHours

// return hours worked
double HourlyEmployee::getHours() const
{
   return hours;

} // end function getHours

// return wage
double HourlyEmployee::getWage() const
{
   return wage;

} // end function getWage

// get hourly worker's pay
double HourlyEmployee::earnings() const 
{ 
   if ( hours <= 40 )  // no overtime
      return wage * hours;
   else                // overtime is paid at wage * 1.5
      return 40 * wage + ( hours - 40 ) * wage * 1.5;

} // end function earnings

// print hourly worker's information 
void HourlyEmployee::print() const
{
   cout << ""\nhourly employee: "";
   Employee::print();  // code reuse

} // end function print

/**************************************************************************
 * (C) Copyright 1992-2003 by Deitel & Associates, Inc. and Prentice      *
 * Hall. All Rights Reserved.                                             *
 *                                                                        *
 * DISCLAIMER: The authors and publisher of this book have used their     *
 * best efforts in preparing the book. These efforts include the          *
 * development, research, and testing of the theories and programs        *
 * to determine their effectiveness. The authors and publisher make       *
 * no warranty of any kind, expressed or implied, with regard to these    *
 * programs or to the documentation contained in these books. The authors *
 * and publisher shall not be liable in any event for incidental or       *
 * consequential damages in connection with, or arising out of, the       *
 * furnishing, performance, or use of these programs.                     *
 *************************************************************************/","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//', 'Fig.', '10.28:', 'hourly.cpp', '//', 'HourlyEmployee', 'class', 'member-function', 'definitions.', '#include', '<iostream>', 'using', 'std::cout;', '#include', '""hourly.h""', '//', 'constructor', 'for', 'class', 'HourlyEmployee', 'HourlyEmployee::HourlyEmployee(', 'const', 'string', '&first,', 'const', 'string', '&last,', 'const', 'string', '&socialSecurityNumber,', 'double', 'hourlyWage,', 'double', 'hoursWorked', ')', ':', 'Employee(', 'first,', 'last,', 'socialSecurityNumber', ')', '{', 'setWage(', 'hourlyWage', ');', 'setHours(', 'hoursWorked', ');', '}', '//', 'end', 'HourlyEmployee', 'constructor', '//', 'set', 'hourly', ""worker's"", 'wage', 'void', 'HourlyEmployee::setWage(', 'double', 'wageAmount', ')', '{', 'wage', '=', 'wageAmount', '<', '0.0', '?', '0.0', ':', 'wageAmount;', '}', '//', 'end', 'function', 'setWage', '//', 'set', 'hourly', ""worker's"", 'hours', 'worked', 'void', 'HourlyEmployee::setHours(', 'double', 'hoursWorked', ')', '{', 'hours', '=', '(', 'hoursWorked', '>=', '0.0', '&&', 'hoursWorked', '<=', '168.0', ')', '?', 'hoursWorked', ':', '0.0;', '}', '//', 'end', 'function', 'setHours', '//', 'return', 'hours', 'worked', 'double', 'HourlyEmployee::getHours()', 'const', '{', 'return', 'hours;', '}', '//', 'end', 'function', 'getHours', '//', 'return', 'wage', 'double', 'HourlyEmployee::getWage()', 'const', '{', 'return', 'wage;', '}', '//', 'end', 'function', 'getWage', '//', 'get', 'hourly', ""worker's"", 'pay', 'double', 'HourlyEmployee::earnings()', 'const', '{', 'if', '(', 'hours', '<=', '40', ')', '//', 'no', 'overtime', 'return', 'wage', '*', 'hours;', 'else', '//', 'overtime', 'is', 'paid', 'at', 'wage', '*', '1.5', 'return', '40', '*', 'wage', '+', '(', 'hours', '-', '40', ')', '*', 'wage', '*', '1.5;', '}', '//', 'end', 'function', 'earnings', '//', 'print', 'hourly', ""worker's"", 'information', 'void', 'HourlyEmployee::print()', 'const', '{', 'cout', '<<', '""\\nhourly', 'employee:', '"";', 'Employee::print();', '//', 'code', 'reuse', '}', '//', 'end', 'function', 'print', '/**************************************************************************', '*', '(C)', 'Copyright', '1992-2003', 'by', 'Deitel', '&', 'Associates,', 'Inc.', 'and', 'Prentice', '*', '*', 'Hall.', 'All', 'Rights', 'Reserved.', '*', '*', '*', '*', 'DISCLAIMER:', 'The', 'authors', 'and', 'publisher', 'of', 'this', 'book', 'have', 'used', 'their', '*', '*', 'best', 'efforts', 'in', 'preparing', 'the', 'book.', 'These', 'efforts', 'include', 'the', '*', '*', 'development,', 'research,', 'and', 'testing', 'of', 'the', 'theories', 'and', 'programs', '*', '*', 'to', 'determine', 'their', 'effectiveness.', 'The', 'authors', 'and', 'publisher', 'make', '*', '*', 'no', 'warranty', 'of', 'any', 'kind,', 'expressed', 'or', 'implied,', 'with', 'regard', 'to', 'these', '*', '*', 'programs', 'or', 'to', 'the', 'documentation', 'contained', 'in', 'these', 'books.', 'The', 'authors', '*', '*', 'and', 'publisher', 'shall', 'not', 'be', 'liable', 'in', 'any', 'event', 'for', 'incidental', 'or', '*', '*', 'consequential', 'damages', 'in', 'connection', 'with,', 'or', 'arising', 'out', 'of,', 'the', '*', '*', 'furnishing,', 'performance,', 'or', 'use', 'of', 'these', 'programs.', '*', '*************************************************************************/```']",challenge not surrounded by ''': ,
"-- CHARACTER SET DEFINITIONS

USE tap;

DELIMITER //

/****************************************************************************/

-- internal function to check
-- _has_charset( charset )
DROP FUNCTION IF EXISTS _has_charset //
CREATE FUNCTION _has_charset(cname VARCHAR(32))
RETURNS BOOLEAN
DETERMINISTIC
BEGIN
  DECLARE ret BOOLEAN;

  SELECT 1 INTO ret
  FROM `information_schema`.`character_sets`
  WHERE `character_set_name` = cname;

  RETURN COALESCE(ret, 0);
END //


-- has_charset( charset, description )
DROP FUNCTION IF EXISTS has_charset //
CREATE FUNCTION has_charset(cname VARCHAR(32), description TEXT)
RETURNS TEXT
DETERMINISTIC
BEGIN
  IF description = '' THEN
    SET description = CONCAT('Character Set ', quote_ident(cname), ' should be available');
  END IF;

  RETURN ok(_has_charset(cname), description);
END //


-- hasnt_charset( charset_name, description )
DROP FUNCTION IF EXISTS hasnt_charset //
CREATE FUNCTION hasnt_charset(cname VARCHAR(32), description TEXT)
RETURNS TEXT
DETERMINISTIC
BEGIN
  IF description = '' THEN
    SET description = CONCAT('Character Set ', quote_ident(cname), ' should not be available' );
  END IF;

  RETURN ok(NOT _has_charset(cname), description);
END //


-- Alias for above
-- has_character_set( charset, description )
DROP FUNCTION IF EXISTS has_character_set //
CREATE FUNCTION has_character_set(cname VARCHAR(32), description TEXT)
RETURNS TEXT
DETERMINISTIC
BEGIN
  RETURN has_charset(cname, description);
END //


-- hasnt_character_set( charset_name, description )
DROP FUNCTION IF EXISTS hasnt_character_set //
CREATE FUNCTION hasnt_character_set(cname VARCHAR(32), description TEXT)
RETURNS TEXT
DETERMINISTIC
BEGIN
  RETURN hasnt_charset(cname, description);
END //


DELIMITER ;
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```--', 'CHARACTER', 'SET', 'DEFINITIONS', 'USE', 'tap;', 'DELIMITER', '//', '/****************************************************************************/', '--', 'internal', 'function', 'to', 'check', '--', '_has_charset(', 'charset', ')', 'DROP', 'FUNCTION', 'IF', 'EXISTS', '_has_charset', '//', 'CREATE', 'FUNCTION', '_has_charset(cname', 'VARCHAR(32))', 'RETURNS', 'BOOLEAN', 'DETERMINISTIC', 'BEGIN', 'DECLARE', 'ret', 'BOOLEAN;', 'SELECT', '1', 'INTO', 'ret', 'FROM', '`information_schema`.`character_sets`', 'WHERE', '`character_set_name`', '=', 'cname;', 'RETURN', 'COALESCE(ret,', '0);', 'END', '//', '--', 'has_charset(', 'charset,', 'description', ')', 'DROP', 'FUNCTION', 'IF', 'EXISTS', 'has_charset', '//', 'CREATE', 'FUNCTION', 'has_charset(cname', 'VARCHAR(32),', 'description', 'TEXT)', 'RETURNS', 'TEXT', 'DETERMINISTIC', 'BEGIN', 'IF', 'description', '=', ""''"", 'THEN', 'SET', 'description', '=', ""CONCAT('Character"", 'Set', ""',"", 'quote_ident(cname),', ""'"", 'should', 'be', ""available');"", 'END', 'IF;', 'RETURN', 'ok(_has_charset(cname),', 'description);', 'END', '//', '--', 'hasnt_charset(', 'charset_name,', 'description', ')', 'DROP', 'FUNCTION', 'IF', 'EXISTS', 'hasnt_charset', '//', 'CREATE', 'FUNCTION', 'hasnt_charset(cname', 'VARCHAR(32),', 'description', 'TEXT)', 'RETURNS', 'TEXT', 'DETERMINISTIC', 'BEGIN', 'IF', 'description', '=', ""''"", 'THEN', 'SET', 'description', '=', ""CONCAT('Character"", 'Set', ""',"", 'quote_ident(cname),', ""'"", 'should', 'not', 'be', ""available'"", ');', 'END', 'IF;', 'RETURN', 'ok(NOT', '_has_charset(cname),', 'description);', 'END', '//', '--', 'Alias', 'for', 'above', '--', 'has_character_set(', 'charset,', 'description', ')', 'DROP', 'FUNCTION', 'IF', 'EXISTS', 'has_character_set', '//', 'CREATE', 'FUNCTION', 'has_character_set(cname', 'VARCHAR(32),', 'description', 'TEXT)', 'RETURNS', 'TEXT', 'DETERMINISTIC', 'BEGIN', 'RETURN', 'has_charset(cname,', 'description);', 'END', '//', '--', 'hasnt_character_set(', 'charset_name,', 'description', ')', 'DROP', 'FUNCTION', 'IF', 'EXISTS', 'hasnt_character_set', '//', 'CREATE', 'FUNCTION', 'hasnt_character_set(cname', 'VARCHAR(32),', 'description', 'TEXT)', 'RETURNS', 'TEXT', 'DETERMINISTIC', 'BEGIN', 'RETURN', 'hasnt_charset(cname,', 'description);', 'END', '//', 'DELIMITER', ';', '```']",challenge not surrounded by ''': ,
"# -*- coding: utf-8 -*-
#
# Copyright (c) 2017 Intel Corp.
#
""""""
ProvisionDeleteCommand
""""""
from .. import Command, CommandResult
from ...plugin import DeclarePlugin


@DeclarePlugin('provisioner_set', 100)
class ProvisionerSetCommand(Command):
    """"""
    Set options for the device in the provisioner
    """"""

    def __init__(self, device_name, configuration, plugin_manager, logger=None, ip_address=None, hw_address=None,
                 net_interface=None, image=None, bootstrap=None, files=None, kernel_args=None):
        """"""Retrieve dependencies, prepare to perform command.""""""
        Command.__init__(self, device_name, configuration, plugin_manager, logger, ip_address=ip_address,
                         hw_address=hw_address, net_interface=net_interface, image=image, bootstrap=bootstrap,
                         files=files, kernel_args=kernel_args)

        self.ip_address = ip_address
        self.hw_address = hw_address
        self.net_interface = net_interface
        self.image = image
        self.bootstrap = bootstrap
        self.files = files
        self.kernel_args = kernel_args

        self.device = self.configuration.get_device(self.device_name)
        if self.device.get(""provisioner"") is None:
            # TODO: Return a configuration error
            raise RuntimeError(""No provisioner is specified in the config. Cannot perform command."")

        self.provisioner = self.plugin_manager.create_instance('provisioner', self.device.get(""provisioner""))

    def execute(self):
        """"""Execute the command""""""
        if self.device.get(""device_type"") not in ['compute', 'node']:
            return CommandResult(1, 'Failure: cannot perform provisioner actions on this device'
                                    ' type ({})'.format(self.device.get(""device_type"")))

        if self.ip_address is not None:
            args = [self.device, self.ip_address]
            if self.net_interface is not None:
                args.append(self.net_interface)
            self.provisioner.set_ip_address(*args)

        if self.hw_address is not None:
            args = [self.device, self.hw_address]
            if self.net_interface is not None:
                args.append(self.net_interface)
            self.provisioner.set_hardware_address(*args)

        if self.image is not None:
            self.provisioner.set_image(self.device, self.image)

        if self.bootstrap is not None:
            self.provisioner.set_bootstrap(self.device, self.bootstrap)

        if self.files is not None:
            self.provisioner.set_files(self.device, self.files)

        if self.kernel_args is not None:
            self.device = self.provisioner.set_kernel_args(self.device, self.kernel_args)

        self.configuration.set_device(self.device)

        return CommandResult(0, ""Successfully set {} options for the provisioner"".format(self.device.get(""hostname"")))
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', '-*-', 'coding:', 'utf-8', '-*-', '#', '#', 'Copyright', '(c)', '2017', 'Intel', 'Corp.', '#', '""""""', 'ProvisionDeleteCommand', '""""""', 'from', '..', 'import', 'Command,', 'CommandResult', 'from', '...plugin', 'import', 'DeclarePlugin', ""@DeclarePlugin('provisioner_set',"", '100)', 'class', 'ProvisionerSetCommand(Command):', '""""""', 'Set', 'options', 'for', 'the', 'device', 'in', 'the', 'provisioner', '""""""', 'def', '__init__(self,', 'device_name,', 'configuration,', 'plugin_manager,', 'logger=None,', 'ip_address=None,', 'hw_address=None,', 'net_interface=None,', 'image=None,', 'bootstrap=None,', 'files=None,', 'kernel_args=None):', '""""""Retrieve', 'dependencies,', 'prepare', 'to', 'perform', 'command.""""""', 'Command.__init__(self,', 'device_name,', 'configuration,', 'plugin_manager,', 'logger,', 'ip_address=ip_address,', 'hw_address=hw_address,', 'net_interface=net_interface,', 'image=image,', 'bootstrap=bootstrap,', 'files=files,', 'kernel_args=kernel_args)', 'self.ip_address', '=', 'ip_address', 'self.hw_address', '=', 'hw_address', 'self.net_interface', '=', 'net_interface', 'self.image', '=', 'image', 'self.bootstrap', '=', 'bootstrap', 'self.files', '=', 'files', 'self.kernel_args', '=', 'kernel_args', 'self.device', '=', 'self.configuration.get_device(self.device_name)', 'if', 'self.device.get(""provisioner"")', 'is', 'None:', '#', 'TODO:', 'Return', 'a', 'configuration', 'error', 'raise', 'RuntimeError(""No', 'provisioner', 'is', 'specified', 'in', 'the', 'config.', 'Cannot', 'perform', 'command."")', 'self.provisioner', '=', ""self.plugin_manager.create_instance('provisioner',"", 'self.device.get(""provisioner""))', 'def', 'execute(self):', '""""""Execute', 'the', 'command""""""', 'if', 'self.device.get(""device_type"")', 'not', 'in', ""['compute',"", ""'node']:"", 'return', 'CommandResult(1,', ""'Failure:"", 'cannot', 'perform', 'provisioner', 'actions', 'on', 'this', ""device'"", ""'"", 'type', '({})\'.format(self.device.get(""device_type"")))', 'if', 'self.ip_address', 'is', 'not', 'None:', 'args', '=', '[self.device,', 'self.ip_address]', 'if', 'self.net_interface', 'is', 'not', 'None:', 'args.append(self.net_interface)', 'self.provisioner.set_ip_address(*args)', 'if', 'self.hw_address', 'is', 'not', 'None:', 'args', '=', '[self.device,', 'self.hw_address]', 'if', 'self.net_interface', 'is', 'not', 'None:', 'args.append(self.net_interface)', 'self.provisioner.set_hardware_address(*args)', 'if', 'self.image', 'is', 'not', 'None:', 'self.provisioner.set_image(self.device,', 'self.image)', 'if', 'self.bootstrap', 'is', 'not', 'None:', 'self.provisioner.set_bootstrap(self.device,', 'self.bootstrap)', 'if', 'self.files', 'is', 'not', 'None:', 'self.provisioner.set_files(self.device,', 'self.files)', 'if', 'self.kernel_args', 'is', 'not', 'None:', 'self.device', '=', 'self.provisioner.set_kernel_args(self.device,', 'self.kernel_args)', 'self.configuration.set_device(self.device)', 'return', 'CommandResult(0,', '""Successfully', 'set', '{}', 'options', 'for', 'the', 'provisioner"".format(self.device.get(""hostname"")))', '```']",challenge not surrounded by ''': ,
"/**
 * Copyright (C) 2010 Cubeia Ltd <info@cubeia.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package com.cubeia.poker.rounds.blinds;

import java.io.Serializable;


public interface BlindsState extends Serializable {

	void smallBlind(int playerId, BlindsRound blindsRound);

	void bigBlind(int playerId, BlindsRound blindsRound);

	void declineEntryBet(Integer playerId, BlindsRound blindsRound);

	void timeout(BlindsRound context);
	
	boolean isFinished();
	
	boolean isCanceled();

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', 'Copyright', '(C)', '2010', 'Cubeia', 'Ltd', '<info@cubeia.com>', '*', '*', 'This', 'program', 'is', 'free', 'software:', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', '*', 'it', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'Affero', 'General', 'Public', 'License', 'as', '*', 'published', 'by', 'the', 'Free', 'Software', 'Foundation,', 'either', 'version', '3', 'of', 'the', '*', 'License,', 'or', '(at', 'your', 'option)', 'any', 'later', 'version.', '*', '*', 'This', 'program', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', '*', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', '*', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', '*', 'GNU', 'Affero', 'General', 'Public', 'License', 'for', 'more', 'details.', '*', '*', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'Affero', 'General', 'Public', 'License', '*', 'along', 'with', 'this', 'program.', 'If', 'not,', 'see', '<http://www.gnu.org/licenses/>.', '*/', 'package', 'com.cubeia.poker.rounds.blinds;', 'import', 'java.io.Serializable;', 'public', 'interface', 'BlindsState', 'extends', 'Serializable', '{', 'void', 'smallBlind(int', 'playerId,', 'BlindsRound', 'blindsRound);', 'void', 'bigBlind(int', 'playerId,', 'BlindsRound', 'blindsRound);', 'void', 'declineEntryBet(Integer', 'playerId,', 'BlindsRound', 'blindsRound);', 'void', 'timeout(BlindsRound', 'context);', 'boolean', 'isFinished();', 'boolean', 'isCanceled();', '}', '```']",challenge not surrounded by ''': ,
"'use strict';

var path = require('path');
var assert = require('yeoman-assert');
var helpers = require('yeoman-test');

describe.skip('generator-ciscospark:plugin', function() {
  beforeEach(function(done) {
    helpers.run(path.join(__dirname, '../../../generators/plugin'))
      .withGenerators([
        [helpers.createDummyGenerator(), 'ciscospark:package']
      ])
      .withArguments(['plugin-test'])
      .withPrompts({
        name: 'Test Name',
        email: 'test@example.com'
      })
      .on('end', done);
  });

  it('creates files', function() {
    assert.file([
      'packages/plugin-test/src/index.js',
      'packages/plugin-test/src/test.js'
    ]);
  });
});
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', ""```'use"", ""strict';"", 'var', 'path', '=', ""require('path');"", 'var', 'assert', '=', ""require('yeoman-assert');"", 'var', 'helpers', '=', ""require('yeoman-test');"", ""describe.skip('generator-ciscospark:plugin',"", 'function()', '{', 'beforeEach(function(done)', '{', 'helpers.run(path.join(__dirname,', ""'../../../generators/plugin'))"", '.withGenerators([', '[helpers.createDummyGenerator(),', ""'ciscospark:package']"", '])', "".withArguments(['plugin-test'])"", '.withPrompts({', 'name:', ""'Test"", ""Name',"", 'email:', ""'test@example.com'"", '})', "".on('end',"", 'done);', '});', ""it('creates"", ""files',"", 'function()', '{', 'assert.file([', ""'packages/plugin-test/src/index.js',"", ""'packages/plugin-test/src/test.js'"", ']);', '});', '});', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright 2015-2017 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.funtl.framework.paypal.base.rest;

/**
 * HttpMethod enums used for HTTP method verbs
 */
public enum HttpMethod {

	// Get Http Method
	GET,

	// Post Http Method
	POST,

	// Patch Http Method
	PATCH,

	// Put Http Method
	PUT,

	// Delete Http Method
	DELETE;

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '2015-2017', 'the', 'original', 'author', 'or', 'authors.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'com.funtl.framework.paypal.base.rest;', '/**', '*', 'HttpMethod', 'enums', 'used', 'for', 'HTTP', 'method', 'verbs', '*/', 'public', 'enum', 'HttpMethod', '{', '//', 'Get', 'Http', 'Method', 'GET,', '//', 'Post', 'Http', 'Method', 'POST,', '//', 'Patch', 'Http', 'Method', 'PATCH,', '//', 'Put', 'Http', 'Method', 'PUT,', '//', 'Delete', 'Http', 'Method', 'DELETE;', '}', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright (c) 2013, jEVETools
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of the author nor the names of the contributors
 *       may be used to endorse or promote products derived from this software
 *       without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS""
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
/**
 * Copyright (c) 2013, jEVETools.
 *
 * All rights reserved.
 *
 * @version 0.0.1
 * @since 0.0.1
 */
package com.jevetools.unmarshal.python.api.impl;

","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '(c)', '2013,', 'jEVETools', '*', 'All', 'rights', 'reserved.', '*', '*', 'Redistribution', 'and', 'use', 'in', 'source', 'and', 'binary', 'forms,', 'with', 'or', 'without', '*', 'modification,', 'are', 'permitted', 'provided', 'that', 'the', 'following', 'conditions', 'are', 'met:', '*', '*', '*', 'Redistributions', 'of', 'source', 'code', 'must', 'retain', 'the', 'above', 'copyright', '*', 'notice,', 'this', 'list', 'of', 'conditions', 'and', 'the', 'following', 'disclaimer.', '*', '*', 'Redistributions', 'in', 'binary', 'form', 'must', 'reproduce', 'the', 'above', 'copyright', '*', 'notice,', 'this', 'list', 'of', 'conditions', 'and', 'the', 'following', 'disclaimer', 'in', 'the', '*', 'documentation', 'and/or', 'other', 'materials', 'provided', 'with', 'the', 'distribution.', '*', '*', 'Neither', 'the', 'name', 'of', 'the', 'author', 'nor', 'the', 'names', 'of', 'the', 'contributors', '*', 'may', 'be', 'used', 'to', 'endorse', 'or', 'promote', 'products', 'derived', 'from', 'this', 'software', '*', 'without', 'specific', 'prior', 'written', 'permission.', '*', '*', 'THIS', 'SOFTWARE', 'IS', 'PROVIDED', 'BY', 'THE', 'COPYRIGHT', 'HOLDERS', 'AND', 'CONTRIBUTORS', '""AS', 'IS""', '*', 'AND', 'ANY', 'EXPRESS', 'OR', 'IMPLIED', 'WARRANTIES,', 'INCLUDING,', 'BUT', 'NOT', 'LIMITED', 'TO,', 'THE', '*', 'IMPLIED', 'WARRANTIES', 'OF', 'MERCHANTABILITY', 'AND', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE', '*', 'ARE', 'DISCLAIMED.', 'IN', 'NO', 'EVENT', 'SHALL', 'THE', 'COPYRIGHT', 'HOLDER', 'OR', 'CONTRIBUTORS', 'BE', '*', 'LIABLE', 'FOR', 'ANY', 'DIRECT,', 'INDIRECT,', 'INCIDENTAL,', 'SPECIAL,', 'EXEMPLARY,', 'OR', '*', 'CONSEQUENTIAL', 'DAMAGES', '(INCLUDING,', 'BUT', 'NOT', 'LIMITED', 'TO,', 'PROCUREMENT', 'OF', '*', 'SUBSTITUTE', 'GOODS', 'OR', 'SERVICES;', 'LOSS', 'OF', 'USE,', 'DATA,', 'OR', 'PROFITS;', 'OR', 'BUSINESS', '*', 'INTERRUPTION)', 'HOWEVER', 'CAUSED', 'AND', 'ON', 'ANY', 'THEORY', 'OF', 'LIABILITY,', 'WHETHER', 'IN', '*', 'CONTRACT,', 'STRICT', 'LIABILITY,', 'OR', 'TORT', '(INCLUDING', 'NEGLIGENCE', 'OR', 'OTHERWISE)', '*', 'ARISING', 'IN', 'ANY', 'WAY', 'OUT', 'OF', 'THE', 'USE', 'OF', 'THIS', 'SOFTWARE,', 'EVEN', 'IF', 'ADVISED', 'OF', 'THE', '*', 'POSSIBILITY', 'OF', 'SUCH', 'DAMAGE.', '*/', '/**', '*', 'Copyright', '(c)', '2013,', 'jEVETools.', '*', '*', 'All', 'rights', 'reserved.', '*', '*', '@version', '0.0.1', '*', '@since', '0.0.1', '*/', 'package', 'com.jevetools.unmarshal.python.api.impl;', '```']",challenge not surrounded by ''': ,
"package cryptocast.crypto;

import static org.junit.Assert.*;

import org.junit.Test;

import cryptocast.crypto.SchnorrGroup;

public class TestModularExponentiationGroup {
    @Test
    public void equalsWorks() {
        SchnorrGroup g1 = SchnorrGroup.getP1024Q160();
        SchnorrGroup g2 = SchnorrGroup.getP1024Q160();
        assertEquals(g1, g2);
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'cryptocast.crypto;', 'import', 'static', 'org.junit.Assert.*;', 'import', 'org.junit.Test;', 'import', 'cryptocast.crypto.SchnorrGroup;', 'public', 'class', 'TestModularExponentiationGroup', '{', '@Test', 'public', 'void', 'equalsWorks()', '{', 'SchnorrGroup', 'g1', '=', 'SchnorrGroup.getP1024Q160();', 'SchnorrGroup', 'g2', '=', 'SchnorrGroup.getP1024Q160();', 'assertEquals(g1,', 'g2);', '}', '}', '```']",challenge not surrounded by ''': ,
"/* 
 * Copyright 2015 Torridity.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package de.tor.tribes.ui.renderer;

import de.tor.tribes.types.UserProfile;
import java.awt.Component;
import javax.swing.ImageIcon;
import javax.swing.JTree;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeCellRenderer;

/**
 *
 * @author Torridity
 */
public class ProfileTreeNodeRenderer extends DefaultTreeCellRenderer {

    private ImageIcon server = null;
    private ImageIcon mainProfile = null;
    private ImageIcon uvProfile = null;

    public ProfileTreeNodeRenderer() {
        server = new ImageIcon(ProfileTreeNodeRenderer.class.getResource(""/res/server.png""));
        mainProfile = new ImageIcon(ProfileTreeNodeRenderer.class.getResource(""/res/profile.png""));
        uvProfile = new ImageIcon(ProfileTreeNodeRenderer.class.getResource(""/res/uv_profile.png""));
    }

    public Component getTreeCellRendererComponent(
            JTree tree,
            Object value,
            boolean sel,
            boolean expanded,
            boolean leaf,
            int row,
            boolean hasFocus) {

        super.getTreeCellRendererComponent(
                tree, value, sel,
                expanded, leaf, row,
                hasFocus);

        try {
            DefaultMutableTreeNode node = ((DefaultMutableTreeNode) value);
            if (node.getUserObject() instanceof String) {
                setIcon(server);
            } else if (node.getUserObject() instanceof UserProfile) {
                if (((UserProfile) node.getUserObject()).isUVAccount()) {
                    setIcon(uvProfile);
                } else {
                    setIcon(mainProfile);
                }
            }
        } catch (Exception e) {
        }
        return this;
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '2015', 'Torridity.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'de.tor.tribes.ui.renderer;', 'import', 'de.tor.tribes.types.UserProfile;', 'import', 'java.awt.Component;', 'import', 'javax.swing.ImageIcon;', 'import', 'javax.swing.JTree;', 'import', 'javax.swing.tree.DefaultMutableTreeNode;', 'import', 'javax.swing.tree.DefaultTreeCellRenderer;', '/**', '*', '*', '@author', 'Torridity', '*/', 'public', 'class', 'ProfileTreeNodeRenderer', 'extends', 'DefaultTreeCellRenderer', '{', 'private', 'ImageIcon', 'server', '=', 'null;', 'private', 'ImageIcon', 'mainProfile', '=', 'null;', 'private', 'ImageIcon', 'uvProfile', '=', 'null;', 'public', 'ProfileTreeNodeRenderer()', '{', 'server', '=', 'new', 'ImageIcon(ProfileTreeNodeRenderer.class.getResource(""/res/server.png""));', 'mainProfile', '=', 'new', 'ImageIcon(ProfileTreeNodeRenderer.class.getResource(""/res/profile.png""));', 'uvProfile', '=', 'new', 'ImageIcon(ProfileTreeNodeRenderer.class.getResource(""/res/uv_profile.png""));', '}', 'public', 'Component', 'getTreeCellRendererComponent(', 'JTree', 'tree,', 'Object', 'value,', 'boolean', 'sel,', 'boolean', 'expanded,', 'boolean', 'leaf,', 'int', 'row,', 'boolean', 'hasFocus)', '{', 'super.getTreeCellRendererComponent(', 'tree,', 'value,', 'sel,', 'expanded,', 'leaf,', 'row,', 'hasFocus);', 'try', '{', 'DefaultMutableTreeNode', 'node', '=', '((DefaultMutableTreeNode)', 'value);', 'if', '(node.getUserObject()', 'instanceof', 'String)', '{', 'setIcon(server);', '}', 'else', 'if', '(node.getUserObject()', 'instanceof', 'UserProfile)', '{', 'if', '(((UserProfile)', 'node.getUserObject()).isUVAccount())', '{', 'setIcon(uvProfile);', '}', 'else', '{', 'setIcon(mainProfile);', '}', '}', '}', 'catch', '(Exception', 'e)', '{', '}', 'return', 'this;', '}', '}', '```']",challenge not surrounded by ''': ,
"/*
 *  Copyright (c) 2004-2021, University of Oslo
 *  All rights reserved.
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions are met:
 *  Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *
 *  Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation
 *  and/or other materials provided with the distribution.
 *  Neither the name of the HISP project nor the names of its contributors may
 *  be used to endorse or promote products derived from this software without
 *  specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" AND
 *  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 *  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 *  ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 *  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 *  ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 *  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 *  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

package org.hisp.dhis.android.testapp.visualization;

import org.hisp.dhis.android.core.visualization.CategoryDimension;
import org.hisp.dhis.android.testapp.arch.ObjectWithBuilderShould;
import org.mockito.Mock;

public class CategoryDimensionPublicAccessShould extends ObjectWithBuilderShould {

    @Mock
    private CategoryDimension object;

    @Override
    public void has_public_builder_method() {
        CategoryDimension.builder();
    }

    @Override
    public void has_public_to_builder_method() {
        object.toBuilder();
    }
}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '(c)', '2004-2021,', 'University', 'of', 'Oslo', '*', 'All', 'rights', 'reserved.', '*', '*', 'Redistribution', 'and', 'use', 'in', 'source', 'and', 'binary', 'forms,', 'with', 'or', 'without', '*', 'modification,', 'are', 'permitted', 'provided', 'that', 'the', 'following', 'conditions', 'are', 'met:', '*', 'Redistributions', 'of', 'source', 'code', 'must', 'retain', 'the', 'above', 'copyright', 'notice,', 'this', '*', 'list', 'of', 'conditions', 'and', 'the', 'following', 'disclaimer.', '*', '*', 'Redistributions', 'in', 'binary', 'form', 'must', 'reproduce', 'the', 'above', 'copyright', 'notice,', '*', 'this', 'list', 'of', 'conditions', 'and', 'the', 'following', 'disclaimer', 'in', 'the', 'documentation', '*', 'and/or', 'other', 'materials', 'provided', 'with', 'the', 'distribution.', '*', 'Neither', 'the', 'name', 'of', 'the', 'HISP', 'project', 'nor', 'the', 'names', 'of', 'its', 'contributors', 'may', '*', 'be', 'used', 'to', 'endorse', 'or', 'promote', 'products', 'derived', 'from', 'this', 'software', 'without', '*', 'specific', 'prior', 'written', 'permission.', '*', '*', 'THIS', 'SOFTWARE', 'IS', 'PROVIDED', 'BY', 'THE', 'COPYRIGHT', 'HOLDERS', 'AND', 'CONTRIBUTORS', '""AS', 'IS""', 'AND', '*', 'ANY', 'EXPRESS', 'OR', 'IMPLIED', 'WARRANTIES,', 'INCLUDING,', 'BUT', 'NOT', 'LIMITED', 'TO,', 'THE', 'IMPLIED', '*', 'WARRANTIES', 'OF', 'MERCHANTABILITY', 'AND', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE', 'ARE', '*', 'DISCLAIMED.', 'IN', 'NO', 'EVENT', 'SHALL', 'THE', 'COPYRIGHT', 'OWNER', 'OR', 'CONTRIBUTORS', 'BE', 'LIABLE', 'FOR', '*', 'ANY', 'DIRECT,', 'INDIRECT,', 'INCIDENTAL,', 'SPECIAL,', 'EXEMPLARY,', 'OR', 'CONSEQUENTIAL', 'DAMAGES', '*', '(INCLUDING,', 'BUT', 'NOT', 'LIMITED', 'TO,', 'PROCUREMENT', 'OF', 'SUBSTITUTE', 'GOODS', 'OR', 'SERVICES;', '*', 'LOSS', 'OF', 'USE,', 'DATA,', 'OR', 'PROFITS;', 'OR', 'BUSINESS', 'INTERRUPTION)', 'HOWEVER', 'CAUSED', 'AND', 'ON', '*', 'ANY', 'THEORY', 'OF', 'LIABILITY,', 'WHETHER', 'IN', 'CONTRACT,', 'STRICT', 'LIABILITY,', 'OR', 'TORT', '*', '(INCLUDING', 'NEGLIGENCE', 'OR', 'OTHERWISE)', 'ARISING', 'IN', 'ANY', 'WAY', 'OUT', 'OF', 'THE', 'USE', 'OF', 'THIS', '*', 'SOFTWARE,', 'EVEN', 'IF', 'ADVISED', 'OF', 'THE', 'POSSIBILITY', 'OF', 'SUCH', 'DAMAGE.', '*/', 'package', 'org.hisp.dhis.android.testapp.visualization;', 'import', 'org.hisp.dhis.android.core.visualization.CategoryDimension;', 'import', 'org.hisp.dhis.android.testapp.arch.ObjectWithBuilderShould;', 'import', 'org.mockito.Mock;', 'public', 'class', 'CategoryDimensionPublicAccessShould', 'extends', 'ObjectWithBuilderShould', '{', '@Mock', 'private', 'CategoryDimension', 'object;', '@Override', 'public', 'void', 'has_public_builder_method()', '{', 'CategoryDimension.builder();', '}', '@Override', 'public', 'void', 'has_public_to_builder_method()', '{', 'object.toBuilder();', '}', '}```']",challenge not surrounded by ''': ,
"/*
 * Copyright (c) 2014. Real Time Genomics Limited.
 *
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the
 *    distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package com.rtg.util.diagnostic;

import com.reeltwo.jumble.annotations.TestClass;

/**
 * Simple wrapper class to send a Talkback on JVM crashes or allow Talkback test.
 */
@TestClass(value = {""com.rtg.util.diagnostic.TalkbackTest""})
public final class SimpleTalkback {

  private SimpleTalkback() { }

  /**
   * The main method used for running the reporter.
   * @param args the command line arguments
   */
  public static void main(String[] args) {
    final boolean success = Talkback.commandLineTalkback(args);
    System.exit(success ? 0 : 1);
  }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '(c)', '2014.', 'Real', 'Time', 'Genomics', 'Limited.', '*', '*', 'All', 'rights', 'reserved.', '*', '*', 'Redistribution', 'and', 'use', 'in', 'source', 'and', 'binary', 'forms,', 'with', 'or', 'without', '*', 'modification,', 'are', 'permitted', 'provided', 'that', 'the', 'following', 'conditions', 'are', '*', 'met:', '*', '*', '1.', 'Redistributions', 'of', 'source', 'code', 'must', 'retain', 'the', 'above', 'copyright', '*', 'notice,', 'this', 'list', 'of', 'conditions', 'and', 'the', 'following', 'disclaimer.', '*', '*', '2.', 'Redistributions', 'in', 'binary', 'form', 'must', 'reproduce', 'the', 'above', 'copyright', '*', 'notice,', 'this', 'list', 'of', 'conditions', 'and', 'the', 'following', 'disclaimer', 'in', 'the', '*', 'documentation', 'and/or', 'other', 'materials', 'provided', 'with', 'the', '*', 'distribution.', '*', '*', 'THIS', 'SOFTWARE', 'IS', 'PROVIDED', 'BY', 'THE', 'COPYRIGHT', 'HOLDERS', 'AND', 'CONTRIBUTORS', '*', '""AS', 'IS""', 'AND', 'ANY', 'EXPRESS', 'OR', 'IMPLIED', 'WARRANTIES,', 'INCLUDING,', 'BUT', 'NOT', '*', 'LIMITED', 'TO,', 'THE', 'IMPLIED', 'WARRANTIES', 'OF', 'MERCHANTABILITY', 'AND', 'FITNESS', 'FOR', '*', 'A', 'PARTICULAR', 'PURPOSE', 'ARE', 'DISCLAIMED.', 'IN', 'NO', 'EVENT', 'SHALL', 'THE', 'COPYRIGHT', '*', 'HOLDER', 'OR', 'CONTRIBUTORS', 'BE', 'LIABLE', 'FOR', 'ANY', 'DIRECT,', 'INDIRECT,', 'INCIDENTAL,', '*', 'SPECIAL,', 'EXEMPLARY,', 'OR', 'CONSEQUENTIAL', 'DAMAGES', '(INCLUDING,', 'BUT', 'NOT', '*', 'LIMITED', 'TO,', 'PROCUREMENT', 'OF', 'SUBSTITUTE', 'GOODS', 'OR', 'SERVICES;', 'LOSS', 'OF', 'USE,', '*', 'DATA,', 'OR', 'PROFITS;', 'OR', 'BUSINESS', 'INTERRUPTION)', 'HOWEVER', 'CAUSED', 'AND', 'ON', 'ANY', '*', 'THEORY', 'OF', 'LIABILITY,', 'WHETHER', 'IN', 'CONTRACT,', 'STRICT', 'LIABILITY,', 'OR', 'TORT', '*', '(INCLUDING', 'NEGLIGENCE', 'OR', 'OTHERWISE)', 'ARISING', 'IN', 'ANY', 'WAY', 'OUT', 'OF', 'THE', 'USE', '*', 'OF', 'THIS', 'SOFTWARE,', 'EVEN', 'IF', 'ADVISED', 'OF', 'THE', 'POSSIBILITY', 'OF', 'SUCH', 'DAMAGE.', '*/', 'package', 'com.rtg.util.diagnostic;', 'import', 'com.reeltwo.jumble.annotations.TestClass;', '/**', '*', 'Simple', 'wrapper', 'class', 'to', 'send', 'a', 'Talkback', 'on', 'JVM', 'crashes', 'or', 'allow', 'Talkback', 'test.', '*/', '@TestClass(value', '=', '{""com.rtg.util.diagnostic.TalkbackTest""})', 'public', 'final', 'class', 'SimpleTalkback', '{', 'private', 'SimpleTalkback()', '{', '}', '/**', '*', 'The', 'main', 'method', 'used', 'for', 'running', 'the', 'reporter.', '*', '@param', 'args', 'the', 'command', 'line', 'arguments', '*/', 'public', 'static', 'void', 'main(String[]', 'args)', '{', 'final', 'boolean', 'success', '=', 'Talkback.commandLineTalkback(args);', 'System.exit(success', '?', '0', ':', '1);', '}', '}', '```']",challenge not surrounded by ''': ,
"<!--
  Provides modal used to enlarge visualization in full screen.
  The modal is mounted to the global modal on node creation.

  The enlarge modal is implemented with resized node with a large z-index
  and a modal backdrop.
-->
<transition name=""fade"">
  <div ref=""enlargeModal"" v-if=""isEnlarged"" class=""modal-backdrop custom""
    @click=""closeEnlargeModal"" v-window-resize=""onWindowResize""></div>
</transition>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!--', 'Provides', 'modal', 'used', 'to', 'enlarge', 'visualization', 'in', 'full', 'screen.', 'The', 'modal', 'is', 'mounted', 'to', 'the', 'global', 'modal', 'on', 'node', 'creation.', 'The', 'enlarge', 'modal', 'is', 'implemented', 'with', 'resized', 'node', 'with', 'a', 'large', 'z-index', 'and', 'a', 'modal', 'backdrop.', '-->', '<transition', 'name=""fade"">', '<div', 'ref=""enlargeModal""', 'v-if=""isEnlarged""', 'class=""modal-backdrop', 'custom""', '@click=""closeEnlargeModal""', 'v-window-resize=""onWindowResize""></div>', '</transition>', '```']",challenge not surrounded by ''': ,
"/**
 * Shopware 5
 * Copyright (c) shopware AG
 *
 * According to our dual licensing model, this program can be used either
 * under the terms of the GNU Affero General Public License, version 3,
 * or under a proprietary license.
 *
 * The texts of the GNU Affero General Public License with an additional
 * permission and of our proprietary license can be found at and
 * in the LICENSE file you have received along with this program.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Affero General Public License for more details.
 *
 * ""Shopware"" is a registered trademark of shopware AG.
 * The licensing of the program under the AGPLv3 does not imply a
 * trademark license. Therefore any rights, title and interest in
 * our trademarks remain entirely with us.
 *
 * @category    Shopware
 * @package     Base
 * @subpackage  Attribute
 * @version     $Id$
 * @author      shopware AG
 */

Ext.define('Shopware.attribute.ProductFieldHandler', {
    extend: 'Shopware.attribute.MultiSelectionFieldHandler',
    mixins: {
        factory: 'Shopware.attribute.SelectionFactory'
    },

    supports: function(attribute) {
        return (
            (attribute.get('columnType') == 'multi_selection' || attribute.get('columnType') == 'single_selection')
            &&
            (attribute.get('entity') == ""Shopware\\Models\\Article\\Article"" || attribute.get('entity') == ""Shopware\\Models\\Article\\Detail"")
        );
    },

    create: function(field, attribute) {
        var me = this;

        if (attribute.get('columnType') == 'single_selection') {
            return me.createSelection(
                field,
                attribute,
                'Shopware.form.field.ProductSingleSelection',
                me.createDynamicSearchStore(attribute)
            );
        }

        return me.createSelection(
            field,
            attribute,
            'Shopware.form.field.ProductGrid',
            me.createDynamicSearchStore(attribute),
            me.createDynamicSearchStore(attribute)
        );
    }
});","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', 'Shopware', '5', '*', 'Copyright', '(c)', 'shopware', 'AG', '*', '*', 'According', 'to', 'our', 'dual', 'licensing', 'model,', 'this', 'program', 'can', 'be', 'used', 'either', '*', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'Affero', 'General', 'Public', 'License,', 'version', '3,', '*', 'or', 'under', 'a', 'proprietary', 'license.', '*', '*', 'The', 'texts', 'of', 'the', 'GNU', 'Affero', 'General', 'Public', 'License', 'with', 'an', 'additional', '*', 'permission', 'and', 'of', 'our', 'proprietary', 'license', 'can', 'be', 'found', 'at', 'and', '*', 'in', 'the', 'LICENSE', 'file', 'you', 'have', 'received', 'along', 'with', 'this', 'program.', '*', '*', 'This', 'program', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', '*', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', '*', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', '*', 'GNU', 'Affero', 'General', 'Public', 'License', 'for', 'more', 'details.', '*', '*', '""Shopware""', 'is', 'a', 'registered', 'trademark', 'of', 'shopware', 'AG.', '*', 'The', 'licensing', 'of', 'the', 'program', 'under', 'the', 'AGPLv3', 'does', 'not', 'imply', 'a', '*', 'trademark', 'license.', 'Therefore', 'any', 'rights,', 'title', 'and', 'interest', 'in', '*', 'our', 'trademarks', 'remain', 'entirely', 'with', 'us.', '*', '*', '@category', 'Shopware', '*', '@package', 'Base', '*', '@subpackage', 'Attribute', '*', '@version', '$Id$', '*', '@author', 'shopware', 'AG', '*/', ""Ext.define('Shopware.attribute.ProductFieldHandler',"", '{', 'extend:', ""'Shopware.attribute.MultiSelectionFieldHandler',"", 'mixins:', '{', 'factory:', ""'Shopware.attribute.SelectionFactory'"", '},', 'supports:', 'function(attribute)', '{', 'return', '(', ""(attribute.get('columnType')"", '==', ""'multi_selection'"", '||', ""attribute.get('columnType')"", '==', ""'single_selection')"", '&&', ""(attribute.get('entity')"", '==', '""Shopware\\\\Models\\\\Article\\\\Article""', '||', ""attribute.get('entity')"", '==', '""Shopware\\\\Models\\\\Article\\\\Detail"")', ');', '},', 'create:', 'function(field,', 'attribute)', '{', 'var', 'me', '=', 'this;', 'if', ""(attribute.get('columnType')"", '==', ""'single_selection')"", '{', 'return', 'me.createSelection(', 'field,', 'attribute,', ""'Shopware.form.field.ProductSingleSelection',"", 'me.createDynamicSearchStore(attribute)', ');', '}', 'return', 'me.createSelection(', 'field,', 'attribute,', ""'Shopware.form.field.ProductGrid',"", 'me.createDynamicSearchStore(attribute),', 'me.createDynamicSearchStore(attribute)', ');', '}', '});```']",challenge not surrounded by ''': ,
"package com.panopset.demo.tl;

import java.util.Properties;

import javax.persistence.EntityManagerFactory;
import javax.sql.DataSource;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.data.jpa.repository.config.EnableJpaRepositories;
import org.springframework.jdbc.datasource.DriverManagerDataSource;
import org.springframework.orm.jpa.JpaTransactionManager;
import org.springframework.orm.jpa.JpaVendorAdapter;
import org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean;
import org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter;
import org.springframework.transaction.PlatformTransactionManager;
import org.springframework.transaction.annotation.EnableTransactionManagement;

@Configuration
@EnableJpaRepositories(basePackages = {""com.panopset.demo.data.repo""})
@EnableTransactionManagement
public class DatabaseConfig {

    @Bean
    public LocalContainerEntityManagerFactoryBean entityManagerFactory() {
       LocalContainerEntityManagerFactoryBean em = new LocalContainerEntityManagerFactoryBean();
       em.setDataSource(dataSource());
       em.setPackagesToScan(new String[] { ""com.panopset.demo.data.hibernate"" });
       JpaVendorAdapter vendorAdapter = new HibernateJpaVendorAdapter();
       em.setJpaVendorAdapter(vendorAdapter);
       em.setJpaProperties(additionalProperties());
       return em;
    }
  
    @Bean
    public DataSource dataSource(){
       DriverManagerDataSource dataSource = new DriverManagerDataSource();
       dataSource.setDriverClassName(""org.h2.Driver"");
       dataSource.setUrl(""jdbc:h2:~/test"");
       dataSource.setUsername(""sa"");
       dataSource.setPassword("""");
       return dataSource;
    }

    @Bean
    public PlatformTransactionManager transactionManager(EntityManagerFactory emf){
       JpaTransactionManager transactionManager = new JpaTransactionManager();
       transactionManager.setEntityManagerFactory(emf);
       return transactionManager;
    }

    Properties additionalProperties() {
       Properties properties = new Properties();
       properties.setProperty(""hibernate.hbm2ddl.auto"", ""create"");
       properties.setProperty(""hibernate.dialect"", H2_DIALECT);
       return properties;
    }
    
    public static final String H2_DIALECT = ""org.hibernate.dialect.H2Dialect"";
    public static final String MYSQL_DIALECT = ""com.mysql.jdbc.Driver"";
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.panopset.demo.tl;', 'import', 'java.util.Properties;', 'import', 'javax.persistence.EntityManagerFactory;', 'import', 'javax.sql.DataSource;', 'import', 'org.springframework.context.annotation.Bean;', 'import', 'org.springframework.context.annotation.Configuration;', 'import', 'org.springframework.data.jpa.repository.config.EnableJpaRepositories;', 'import', 'org.springframework.jdbc.datasource.DriverManagerDataSource;', 'import', 'org.springframework.orm.jpa.JpaTransactionManager;', 'import', 'org.springframework.orm.jpa.JpaVendorAdapter;', 'import', 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean;', 'import', 'org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter;', 'import', 'org.springframework.transaction.PlatformTransactionManager;', 'import', 'org.springframework.transaction.annotation.EnableTransactionManagement;', '@Configuration', '@EnableJpaRepositories(basePackages', '=', '{""com.panopset.demo.data.repo""})', '@EnableTransactionManagement', 'public', 'class', 'DatabaseConfig', '{', '@Bean', 'public', 'LocalContainerEntityManagerFactoryBean', 'entityManagerFactory()', '{', 'LocalContainerEntityManagerFactoryBean', 'em', '=', 'new', 'LocalContainerEntityManagerFactoryBean();', 'em.setDataSource(dataSource());', 'em.setPackagesToScan(new', 'String[]', '{', '""com.panopset.demo.data.hibernate""', '});', 'JpaVendorAdapter', 'vendorAdapter', '=', 'new', 'HibernateJpaVendorAdapter();', 'em.setJpaVendorAdapter(vendorAdapter);', 'em.setJpaProperties(additionalProperties());', 'return', 'em;', '}', '@Bean', 'public', 'DataSource', 'dataSource(){', 'DriverManagerDataSource', 'dataSource', '=', 'new', 'DriverManagerDataSource();', 'dataSource.setDriverClassName(""org.h2.Driver"");', 'dataSource.setUrl(""jdbc:h2:~/test"");', 'dataSource.setUsername(""sa"");', 'dataSource.setPassword("""");', 'return', 'dataSource;', '}', '@Bean', 'public', 'PlatformTransactionManager', 'transactionManager(EntityManagerFactory', 'emf){', 'JpaTransactionManager', 'transactionManager', '=', 'new', 'JpaTransactionManager();', 'transactionManager.setEntityManagerFactory(emf);', 'return', 'transactionManager;', '}', 'Properties', 'additionalProperties()', '{', 'Properties', 'properties', '=', 'new', 'Properties();', 'properties.setProperty(""hibernate.hbm2ddl.auto"",', '""create"");', 'properties.setProperty(""hibernate.dialect"",', 'H2_DIALECT);', 'return', 'properties;', '}', 'public', 'static', 'final', 'String', 'H2_DIALECT', '=', '""org.hibernate.dialect.H2Dialect"";', 'public', 'static', 'final', 'String', 'MYSQL_DIALECT', '=', '""com.mysql.jdbc.Driver"";', '}', '```']",challenge not surrounded by ''': ,
"package com.emc.ecs.management.sdk.model;

import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import java.util.List;

@XmlRootElement(name = ""object_nfs_export"")
public class NFSExport {


    private String path;
    private Integer id;
    private List<NFSExportsOption> exportOptions;

    public NFSExport() {
    }

    public NFSExport(String path, List<NFSExportsOption> exportOptions) {
        this.path = path;
        this.exportOptions = exportOptions;
    }

    @XmlElement(name = ""export-options"")
    public List<NFSExportsOption> getExportOptions() {
        return exportOptions;
    }

    public void setExportOptions(List<NFSExportsOption> exportOptions) {
        this.exportOptions = exportOptions;
    }

    public String getPath() {
        return path;
    }

    public void setPath(String path) {
        this.path = path;
    }

    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }


}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.emc.ecs.management.sdk.model;', 'import', 'javax.xml.bind.annotation.XmlElement;', 'import', 'javax.xml.bind.annotation.XmlRootElement;', 'import', 'java.util.List;', '@XmlRootElement(name', '=', '""object_nfs_export"")', 'public', 'class', 'NFSExport', '{', 'private', 'String', 'path;', 'private', 'Integer', 'id;', 'private', 'List<NFSExportsOption>', 'exportOptions;', 'public', 'NFSExport()', '{', '}', 'public', 'NFSExport(String', 'path,', 'List<NFSExportsOption>', 'exportOptions)', '{', 'this.path', '=', 'path;', 'this.exportOptions', '=', 'exportOptions;', '}', '@XmlElement(name', '=', '""export-options"")', 'public', 'List<NFSExportsOption>', 'getExportOptions()', '{', 'return', 'exportOptions;', '}', 'public', 'void', 'setExportOptions(List<NFSExportsOption>', 'exportOptions)', '{', 'this.exportOptions', '=', 'exportOptions;', '}', 'public', 'String', 'getPath()', '{', 'return', 'path;', '}', 'public', 'void', 'setPath(String', 'path)', '{', 'this.path', '=', 'path;', '}', 'public', 'Integer', 'getId()', '{', 'return', 'this.id;', '}', 'public', 'void', 'setId(Integer', 'id)', '{', 'this.id', '=', 'id;', '}', '}', '```']",challenge not surrounded by ''': ,
"/*
 * This program is free software; you can redistribute it and/or modify it under the
 * terms of the GNU Lesser General Public License, version 2.1 as published by the Free Software
 * Foundation.
 *
 * You should have received a copy of the GNU Lesser General Public License along with this
 * program; if not, you can obtain a copy at http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html
 * or from the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details.
 *
 * Copyright (c) 2001 - 2013 Object Refinery Ltd, Hitachi Vantara and Contributors..  All rights reserved.
 */

package org.pentaho.reporting.engine.classic.core.modules.parser.ext.factory.templates;

/**
 * A template collection.
 *
 * @author Thomas Morgner.
 */
public class DefaultTemplateCollection extends TemplateCollection {
  /**
   * Creates a new collection.
   */
  public DefaultTemplateCollection() {
    addTemplate( new AnchorFieldTemplateDescription( ""anchor-field"" ) );
    addTemplate( new DateFieldTemplateDescription( ""date-field"" ) );
    addTemplate( new ComponentFieldTemplateDescription( ""component-field"" ) );
    addTemplate( new DrawableFieldTemplateDescription( ""drawable-field"" ) );
    addTemplate( new DrawableURLElementTemplateDescription( ""drawable-url-element"" ) );
    addTemplate( new DrawableURLFieldTemplateDescription( ""drawable-url-field"" ) );
    addTemplate( new EllipseTemplateDescription( ""ellipse"" ) );
    addTemplate( new HorizontalLineTemplateDescription( ""horizontal-line"" ) );
    addTemplate( new ImageFieldTemplateDescription( ""image-field"" ) );
    addTemplate( new ImageURLElementTemplateDescription( ""image-url-element"" ) );
    addTemplate( new ImageURLFieldTemplateDescription( ""image-url-field"" ) );
    addTemplate( new LabelTemplateDescription( ""label"" ) );
    addTemplate( new MessageFieldTemplateDescription( ""message-field"" ) );
    addTemplate( new NumberFieldTemplateDescription( ""number-field"" ) );
    addTemplate( new RectangleTemplateDescription( ""rectangle"" ) );
    addTemplate( new RoundRectangleTemplateDescription( ""round-rectangle"" ) );
    addTemplate( new ResourceFieldTemplateDescription( ""resource-field"" ) );
    addTemplate( new ResourceLabelTemplateDescription( ""resource-label"" ) );
    addTemplate( new ResourceMessageTemplateDescription( ""resource-message"" ) );
    addTemplate( new ShapeFieldTemplateDescription( ""shape-field"" ) );
    addTemplate( new StringFieldTemplateDescription( ""string-field"" ) );
    addTemplate( new VerticalLineTemplateDescription( ""vertical-line"" ) );
  }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'This', 'program', 'is', 'free', 'software;', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', 'it', 'under', 'the', '*', 'terms', 'of', 'the', 'GNU', 'Lesser', 'General', 'Public', 'License,', 'version', '2.1', 'as', 'published', 'by', 'the', 'Free', 'Software', '*', 'Foundation.', '*', '*', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'Lesser', 'General', 'Public', 'License', 'along', 'with', 'this', '*', 'program;', 'if', 'not,', 'you', 'can', 'obtain', 'a', 'copy', 'at', 'http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html', '*', 'or', 'from', 'the', 'Free', 'Software', 'Foundation,', 'Inc.,', '*', '51', 'Franklin', 'Street,', 'Fifth', 'Floor,', 'Boston,', 'MA', '02110-1301', 'USA.', '*', '*', 'This', 'program', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', '*', 'without', 'even', 'the', 'implied', 'warranty', 'of', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', '*', 'See', 'the', 'GNU', 'Lesser', 'General', 'Public', 'License', 'for', 'more', 'details.', '*', '*', 'Copyright', '(c)', '2001', '-', '2013', 'Object', 'Refinery', 'Ltd,', 'Hitachi', 'Vantara', 'and', 'Contributors..', 'All', 'rights', 'reserved.', '*/', 'package', 'org.pentaho.reporting.engine.classic.core.modules.parser.ext.factory.templates;', '/**', '*', 'A', 'template', 'collection.', '*', '*', '@author', 'Thomas', 'Morgner.', '*/', 'public', 'class', 'DefaultTemplateCollection', 'extends', 'TemplateCollection', '{', '/**', '*', 'Creates', 'a', 'new', 'collection.', '*/', 'public', 'DefaultTemplateCollection()', '{', 'addTemplate(', 'new', 'AnchorFieldTemplateDescription(', '""anchor-field""', ')', ');', 'addTemplate(', 'new', 'DateFieldTemplateDescription(', '""date-field""', ')', ');', 'addTemplate(', 'new', 'ComponentFieldTemplateDescription(', '""component-field""', ')', ');', 'addTemplate(', 'new', 'DrawableFieldTemplateDescription(', '""drawable-field""', ')', ');', 'addTemplate(', 'new', 'DrawableURLElementTemplateDescription(', '""drawable-url-element""', ')', ');', 'addTemplate(', 'new', 'DrawableURLFieldTemplateDescription(', '""drawable-url-field""', ')', ');', 'addTemplate(', 'new', 'EllipseTemplateDescription(', '""ellipse""', ')', ');', 'addTemplate(', 'new', 'HorizontalLineTemplateDescription(', '""horizontal-line""', ')', ');', 'addTemplate(', 'new', 'ImageFieldTemplateDescription(', '""image-field""', ')', ');', 'addTemplate(', 'new', 'ImageURLElementTemplateDescription(', '""image-url-element""', ')', ');', 'addTemplate(', 'new', 'ImageURLFieldTemplateDescription(', '""image-url-field""', ')', ');', 'addTemplate(', 'new', 'LabelTemplateDescription(', '""label""', ')', ');', 'addTemplate(', 'new', 'MessageFieldTemplateDescription(', '""message-field""', ')', ');', 'addTemplate(', 'new', 'NumberFieldTemplateDescription(', '""number-field""', ')', ');', 'addTemplate(', 'new', 'RectangleTemplateDescription(', '""rectangle""', ')', ');', 'addTemplate(', 'new', 'RoundRectangleTemplateDescription(', '""round-rectangle""', ')', ');', 'addTemplate(', 'new', 'ResourceFieldTemplateDescription(', '""resource-field""', ')', ');', 'addTemplate(', 'new', 'ResourceLabelTemplateDescription(', '""resource-label""', ')', ');', 'addTemplate(', 'new', 'ResourceMessageTemplateDescription(', '""resource-message""', ')', ');', 'addTemplate(', 'new', 'ShapeFieldTemplateDescription(', '""shape-field""', ')', ');', 'addTemplate(', 'new', 'StringFieldTemplateDescription(', '""string-field""', ')', ');', 'addTemplate(', 'new', 'VerticalLineTemplateDescription(', '""vertical-line""', ')', ');', '}', '}', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright 2017 StreamSets Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.streamsets.pipeline.stage.processor.expression;

import com.streamsets.pipeline.api.ErrorCode;
import com.streamsets.pipeline.api.GenerateResourceBundle;

@GenerateResourceBundle
public enum Errors implements ErrorCode {
  EXPR_00(""Invalid expression '{}': {}""),
  EXPR_01(""Invalid constant '{}': {}""),
  EXPR_02(""Record '{}' cannot set value in field '{}'""),
  EXPR_03(""Cannot evaluate expression '{}' for record '{}': {}""),
  EXPR_04(""Record '{}' cannot set value in field '{}'. Reason : {}""),
  EXPR_05(""Record '{}' does not contain a field with path '{}', for setting an '{}' attribute with expression: {}""),
  ;

  private final String msg;
  Errors(String msg) {
    this.msg = msg;
  }

  @Override
  public String getCode() {
    return name();
  }

  @Override
  public String getMessage() {
    return msg;
  }

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '2017', 'StreamSets', 'Inc.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'com.streamsets.pipeline.stage.processor.expression;', 'import', 'com.streamsets.pipeline.api.ErrorCode;', 'import', 'com.streamsets.pipeline.api.GenerateResourceBundle;', '@GenerateResourceBundle', 'public', 'enum', 'Errors', 'implements', 'ErrorCode', '{', 'EXPR_00(""Invalid', 'expression', ""'{}':"", '{}""),', 'EXPR_01(""Invalid', 'constant', ""'{}':"", '{}""),', 'EXPR_02(""Record', ""'{}'"", 'cannot', 'set', 'value', 'in', 'field', '\'{}\'""),', 'EXPR_03(""Cannot', 'evaluate', 'expression', ""'{}'"", 'for', 'record', ""'{}':"", '{}""),', 'EXPR_04(""Record', ""'{}'"", 'cannot', 'set', 'value', 'in', 'field', ""'{}'."", 'Reason', ':', '{}""),', 'EXPR_05(""Record', ""'{}'"", 'does', 'not', 'contain', 'a', 'field', 'with', 'path', ""'{}',"", 'for', 'setting', 'an', ""'{}'"", 'attribute', 'with', 'expression:', '{}""),', ';', 'private', 'final', 'String', 'msg;', 'Errors(String', 'msg)', '{', 'this.msg', '=', 'msg;', '}', '@Override', 'public', 'String', 'getCode()', '{', 'return', 'name();', '}', '@Override', 'public', 'String', 'getMessage()', '{', 'return', 'msg;', '}', '}', '```']",challenge not surrounded by ''': ,
"var DSON = require('../../'),
	expect = require('chai').expect;

describe('DSON <RegExp>', function(){

	describe('<RegExp>', function() {
		var regex = /^aa\$aa$/g;
		var dson = DSON.stringify(regex);

		it('should be serialized with $regex', function() {
			expect(dson).to.equal('{""$regex"":[""^aa\\\\$aa$"",""g""]}');
		});

		var val = DSON.parse(dson);
		it('should parse to a RegExp', function() {
			expect(typeof val).to.equal('object');
			expect(val instanceof RegExp).to.equal(true);
			expect(val.toString()).to.equal(regex.toString());
			expect(val.test('aa$aa')).to.equal(true);
		});

	});
	
});","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```var', 'DSON', '=', ""require('../../'),"", 'expect', '=', ""require('chai').expect;"", ""describe('DSON"", ""<RegExp>',"", 'function(){', ""describe('<RegExp>',"", 'function()', '{', 'var', 'regex', '=', '/^aa\\$aa$/g;', 'var', 'dson', '=', 'DSON.stringify(regex);', ""it('should"", 'be', 'serialized', 'with', ""$regex',"", 'function()', '{', 'expect(dson).to.equal(\'{""$regex"":[""^aa\\\\\\\\$aa$"",""g""]}\');', '});', 'var', 'val', '=', 'DSON.parse(dson);', ""it('should"", 'parse', 'to', 'a', ""RegExp',"", 'function()', '{', 'expect(typeof', ""val).to.equal('object');"", 'expect(val', 'instanceof', 'RegExp).to.equal(true);', 'expect(val.toString()).to.equal(regex.toString());', ""expect(val.test('aa$aa')).to.equal(true);"", '});', '});', '});```']",challenge not surrounded by ''': ,
"<!DOCTYPE html>
<html lang=""en"" ng-app=""ng-stagram"">
<head>
	<meta charset=""UTF-8"">
	<meta name=""viewport"" content=""width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0"">
	<title>ng-stagram</title>
      <link rel=""stylesheet"" href=""//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css"">
      <link rel=""stylesheet"" href=""styles.css"">
      <script src=""//code.jquery.com/jquery-1.11.0.min.js""></script>
      <script src=""https://ajax.googleapis.com/ajax/libs/angularjs/1.2.21/angular.min.js""></script>
      <script src=""app.js""></script>
      <script src=""//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js""></script>
</head>
<body ng-controller=""PhotosController"">
		<div class=""search form-group"">
		<h2>ng-stagram</h2>
			<input id=""search"" class=""form-control"" type=""text"" ng-model=""tag"" ng-keyup=""searchByTag(tag)"" placeholder=""Search..."">
		</div>
	<div class=""content"">
		<label class=""display-for-large-screens""><input type=""checkbox"" ng-model=""viewFullSizePhotos"" /> View Photos @ Full Size</label>
		<ul class=""list-inline"" id=""photos"">
			<li ng-repeat=""pic in pics"">
				<div class=""image"">
					<a ng-href=""{{pic.link}}"" target=""_blank"">
					<img ng-src=""{{ !viewFullSizePhotos && pic.images.low_resolution.url || pic.images.standard_resolution.url }}"" alt="""" />
					<!-- <video ng-if=""pic.videos"" ng-src=""{{ pic.videos.standard_resolution.url }}"">
					</video> -->
				</a></div>
				<div class=""detail-panel"">
					<div>
						<span class=""pull-left""><strong>{{pic.comments.count}}</strong></span>
						<span class=""pull-right""><strong>{{pic.likes.count}}</strong></span>
					</div>
					<div class=""clear-fix"">
						<div class=""user-detail"">
							<img class=""profile-image"" ng-src=""{{pic.user.profile_picture}}"" alt="""">
							<strong>{{pic.user.username}}</strong>
						</div>
						<div ng-class=""viewFullSizePhotos ? 'image-caption-full' : 'image-caption-low'"">
							{{pic.caption.text}}
						</div>
					</div>
				</div>
			</li>
		</ul>
	</div>
</body>
</html>","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'html>', '<html', 'lang=""en""', 'ng-app=""ng-stagram"">', '<head>', '<meta', 'charset=""UTF-8"">', '<meta', 'name=""viewport""', 'content=""width=device-width,', 'initial-scale=1.0,', 'maximum-scale=1.0,', 'user-scalable=0"">', '<title>ng-stagram</title>', '<link', 'rel=""stylesheet""', 'href=""//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css"">', '<link', 'rel=""stylesheet""', 'href=""styles.css"">', '<script', 'src=""//code.jquery.com/jquery-1.11.0.min.js""></script>', '<script', 'src=""https://ajax.googleapis.com/ajax/libs/angularjs/1.2.21/angular.min.js""></script>', '<script', 'src=""app.js""></script>', '<script', 'src=""//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js""></script>', '</head>', '<body', 'ng-controller=""PhotosController"">', '<div', 'class=""search', 'form-group"">', '<h2>ng-stagram</h2>', '<input', 'id=""search""', 'class=""form-control""', 'type=""text""', 'ng-model=""tag""', 'ng-keyup=""searchByTag(tag)""', 'placeholder=""Search..."">', '</div>', '<div', 'class=""content"">', '<label', 'class=""display-for-large-screens""><input', 'type=""checkbox""', 'ng-model=""viewFullSizePhotos""', '/>', 'View', 'Photos', '@', 'Full', 'Size</label>', '<ul', 'class=""list-inline""', 'id=""photos"">', '<li', 'ng-repeat=""pic', 'in', 'pics"">', '<div', 'class=""image"">', '<a', 'ng-href=""{{pic.link}}""', 'target=""_blank"">', '<img', 'ng-src=""{{', '!viewFullSizePhotos', '&&', 'pic.images.low_resolution.url', '||', 'pic.images.standard_resolution.url', '}}""', 'alt=""""', '/>', '<!--', '<video', 'ng-if=""pic.videos""', 'ng-src=""{{', 'pic.videos.standard_resolution.url', '}}"">', '</video>', '-->', '</a></div>', '<div', 'class=""detail-panel"">', '<div>', '<span', 'class=""pull-left""><strong>{{pic.comments.count}}</strong></span>', '<span', 'class=""pull-right""><strong>{{pic.likes.count}}</strong></span>', '</div>', '<div', 'class=""clear-fix"">', '<div', 'class=""user-detail"">', '<img', 'class=""profile-image""', 'ng-src=""{{pic.user.profile_picture}}""', 'alt="""">', '<strong>{{pic.user.username}}</strong>', '</div>', '<div', 'ng-class=""viewFullSizePhotos', '?', ""'image-caption-full'"", ':', '\'image-caption-low\'"">', '{{pic.caption.text}}', '</div>', '</div>', '</div>', '</li>', '</ul>', '</div>', '</body>', '</html>```']",challenge not surrounded by ''': ,
"# -*- encoding: utf-8 -*-
import os
from datetime import datetime

from boto3.session import Session
from django.conf import settings
from django.core.management.base import BaseCommand


class Command(BaseCommand):
    help = 'Backs up PostgreSQL database to AWS S3'

    def handle(self, *args, **options):
        AWS_ACCESS_KEY_ID = os.environ.get('AWS_S3_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = os.environ.get('AWS_S3_SECRET_ACCESS_KEY')
        AWS_REGION_NAME = os.environ.get('AWS_S3_REGION_NAME')
        AWS_BUCKET_NAME = os.environ.get('AWS_S3_BUCKET_NAME')

        session = Session(
            aws_access_key_id=AWS_ACCESS_KEY_ID,
            aws_secret_access_key=AWS_SECRET_ACCESS_KEY,
            region_name=AWS_REGION_NAME
        )

        s3 = session.resource('s3')

        bucket = s3.Bucket(AWS_BUCKET_NAME)

        timestamp = datetime.utcnow().strftime('%Y_%m_%d_%H%M_UTC')
        db_file = f""pgbackup_{timestamp}.dump""
        db_host = settings.DATABASES['default']['HOST']
        db_port = settings.DATABASES['default']['PORT']
        db_name = settings.DATABASES['default']['NAME']
        db_user = settings.DATABASES['default']['USER']

        # See command definitions at http://www.postgresql.org/docs/9.4/static/app-pgdump.html
        pg_dump_command = \
            f""pg_dump --host={db_host} --port={db_port} --user={db_user} --format=c -O -x --file={db_file} {db_name}""
        self.stdout.write(f""Enter {db_user}'s psql password"")
        os.system(pg_dump_command)

        bucket.upload_file(db_file, db_file)
        os.system(f""rm {db_file}"")
        self.stdout.write(f""{db_file} successfully uploaded to AWS S3"")
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', '-*-', 'encoding:', 'utf-8', '-*-', 'import', 'os', 'from', 'datetime', 'import', 'datetime', 'from', 'boto3.session', 'import', 'Session', 'from', 'django.conf', 'import', 'settings', 'from', 'django.core.management.base', 'import', 'BaseCommand', 'class', 'Command(BaseCommand):', 'help', '=', ""'Backs"", 'up', 'PostgreSQL', 'database', 'to', 'AWS', ""S3'"", 'def', 'handle(self,', '*args,', '**options):', 'AWS_ACCESS_KEY_ID', '=', ""os.environ.get('AWS_S3_ACCESS_KEY_ID')"", 'AWS_SECRET_ACCESS_KEY', '=', ""os.environ.get('AWS_S3_SECRET_ACCESS_KEY')"", 'AWS_REGION_NAME', '=', ""os.environ.get('AWS_S3_REGION_NAME')"", 'AWS_BUCKET_NAME', '=', ""os.environ.get('AWS_S3_BUCKET_NAME')"", 'session', '=', 'Session(', 'aws_access_key_id=AWS_ACCESS_KEY_ID,', 'aws_secret_access_key=AWS_SECRET_ACCESS_KEY,', 'region_name=AWS_REGION_NAME', ')', 's3', '=', ""session.resource('s3')"", 'bucket', '=', 's3.Bucket(AWS_BUCKET_NAME)', 'timestamp', '=', ""datetime.utcnow().strftime('%Y_%m_%d_%H%M_UTC')"", 'db_file', '=', 'f""pgbackup_{timestamp}.dump""', 'db_host', '=', ""settings.DATABASES['default']['HOST']"", 'db_port', '=', ""settings.DATABASES['default']['PORT']"", 'db_name', '=', ""settings.DATABASES['default']['NAME']"", 'db_user', '=', ""settings.DATABASES['default']['USER']"", '#', 'See', 'command', 'definitions', 'at', 'http://www.postgresql.org/docs/9.4/static/app-pgdump.html', 'pg_dump_command', '=', '\\', 'f""pg_dump', '--host={db_host}', '--port={db_port}', '--user={db_user}', '--format=c', '-O', '-x', '--file={db_file}', '{db_name}""', 'self.stdout.write(f""Enter', ""{db_user}'s"", 'psql', 'password"")', 'os.system(pg_dump_command)', 'bucket.upload_file(db_file,', 'db_file)', 'os.system(f""rm', '{db_file}"")', 'self.stdout.write(f""{db_file}', 'successfully', 'uploaded', 'to', 'AWS', 'S3"")', '```']",challenge not surrounded by ''': ,
"#/bin/bash

echo ""Starting...""

COUNTER=0
while [  $COUNTER -lt 10 ]; do
	echo ""Checking calendar""
	nodejs main.js
	echo """"
	let COUNTER=COUNTER+1 
	sleep 30
done

echo ""Done.""
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#/bin/bash', 'echo', '""Starting...""', 'COUNTER=0', 'while', '[', '$COUNTER', '-lt', '10', '];', 'do', 'echo', '""Checking', 'calendar""', 'nodejs', 'main.js', 'echo', '""""', 'let', 'COUNTER=COUNTER+1', 'sleep', '30', 'done', 'echo', '""Done.""', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE html PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"">
<html>
<head>
<meta content=""text/html; charset=ISO-8859-1""  http-equiv=""content-type"">
<title>Legal Notice</title>
</head>
<body bgcolor=""#FFFFFF"">
<p>Copyright&nbsp;&copy;&nbsp;2014 Schr&ouml;dinger, LLC. All rights reserved.</p>
<p>
Canvas, CombiGlide, ConfGen, Epik, Glide, Impact, Jaguar, Liaison,
LigPrep, Maestro, Phase, Prime, PrimeX, QSite, QikProp, QikFit, QikSim, SiteMap,
Strike, and WaterMap are trademarks of Schr&ouml;dinger, LLC.  Schr&ouml;dinger,
BioLuminate, and MacroModel are registered trademarks of Schr&ouml;dinger, LLC. 
MCPRO is a trademark of William L. Jorgensen. 
DESMOND is a trademark of D. E. Shaw Research, LLC.</p>
<p>
To the maximum extent permitted by applicable law, this document is
provided &quot;as is&quot; without warranty of any kind. This document may
contain trademarks of third parties.</p>

<p>This page may refer to other third party software not included in or with
Schr&ouml;dinger software (&quot;such other third party software&quot;), and
provide links to third party Web sites (&quot;linked sites&quot;).  References
to such other third party software or linked sites do not constitute an
endorsement by Schr&ouml;dinger, LLC or its affiliates.  Use of such other third
party software and linked sites may be subject to third party license agreements
and fees. Schr&ouml;dinger, LLC and its affiliates have no responsibility or
liability, directly or indirectly, for such other third party software and
linked sites, or for damage resulting from the use thereof.  Any warranties that
we make regarding Schr&ouml;dinger products and services do not apply to such
other third party software or linked sites, or to the interaction between, or
interoperability of, Schr&ouml;dinger products and services and such other third
party software.</p>
<p>Legal notices relating to third-party software can be viewed by clicking
<a href=""third_party_legal.html"">here</a>. 
</p>

</body>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'html', 'PUBLIC', '""-//W3C//DTD', 'HTML', '4.01', 'Transitional//EN"">', '<html>', '<head>', '<meta', 'content=""text/html;', 'charset=ISO-8859-1""', 'http-equiv=""content-type"">', '<title>Legal', 'Notice</title>', '</head>', '<body', 'bgcolor=""#FFFFFF"">', '<p>Copyright&nbsp;&copy;&nbsp;2014', 'Schr&ouml;dinger,', 'LLC.', 'All', 'rights', 'reserved.</p>', '<p>', 'Canvas,', 'CombiGlide,', 'ConfGen,', 'Epik,', 'Glide,', 'Impact,', 'Jaguar,', 'Liaison,', 'LigPrep,', 'Maestro,', 'Phase,', 'Prime,', 'PrimeX,', 'QSite,', 'QikProp,', 'QikFit,', 'QikSim,', 'SiteMap,', 'Strike,', 'and', 'WaterMap', 'are', 'trademarks', 'of', 'Schr&ouml;dinger,', 'LLC.', 'Schr&ouml;dinger,', 'BioLuminate,', 'and', 'MacroModel', 'are', 'registered', 'trademarks', 'of', 'Schr&ouml;dinger,', 'LLC.', 'MCPRO', 'is', 'a', 'trademark', 'of', 'William', 'L.', 'Jorgensen.', 'DESMOND', 'is', 'a', 'trademark', 'of', 'D.', 'E.', 'Shaw', 'Research,', 'LLC.</p>', '<p>', 'To', 'the', 'maximum', 'extent', 'permitted', 'by', 'applicable', 'law,', 'this', 'document', 'is', 'provided', '&quot;as', 'is&quot;', 'without', 'warranty', 'of', 'any', 'kind.', 'This', 'document', 'may', 'contain', 'trademarks', 'of', 'third', 'parties.</p>', '<p>This', 'page', 'may', 'refer', 'to', 'other', 'third', 'party', 'software', 'not', 'included', 'in', 'or', 'with', 'Schr&ouml;dinger', 'software', '(&quot;such', 'other', 'third', 'party', 'software&quot;),', 'and', 'provide', 'links', 'to', 'third', 'party', 'Web', 'sites', '(&quot;linked', 'sites&quot;).', 'References', 'to', 'such', 'other', 'third', 'party', 'software', 'or', 'linked', 'sites', 'do', 'not', 'constitute', 'an', 'endorsement', 'by', 'Schr&ouml;dinger,', 'LLC', 'or', 'its', 'affiliates.', 'Use', 'of', 'such', 'other', 'third', 'party', 'software', 'and', 'linked', 'sites', 'may', 'be', 'subject', 'to', 'third', 'party', 'license', 'agreements', 'and', 'fees.', 'Schr&ouml;dinger,', 'LLC', 'and', 'its', 'affiliates', 'have', 'no', 'responsibility', 'or', 'liability,', 'directly', 'or', 'indirectly,', 'for', 'such', 'other', 'third', 'party', 'software', 'and', 'linked', 'sites,', 'or', 'for', 'damage', 'resulting', 'from', 'the', 'use', 'thereof.', 'Any', 'warranties', 'that', 'we', 'make', 'regarding', 'Schr&ouml;dinger', 'products', 'and', 'services', 'do', 'not', 'apply', 'to', 'such', 'other', 'third', 'party', 'software', 'or', 'linked', 'sites,', 'or', 'to', 'the', 'interaction', 'between,', 'or', 'interoperability', 'of,', 'Schr&ouml;dinger', 'products', 'and', 'services', 'and', 'such', 'other', 'third', 'party', 'software.</p>', '<p>Legal', 'notices', 'relating', 'to', 'third-party', 'software', 'can', 'be', 'viewed', 'by', 'clicking', '<a', 'href=""third_party_legal.html"">here</a>.', '</p>', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"// Copyright (c) 2012 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#include ""sync/js/js_event_details.h""

#include ""base/json/json_writer.h""

namespace browser_sync {

JsEventDetails::JsEventDetails() {}

JsEventDetails::JsEventDetails(DictionaryValue* details) : details_(details) {}

JsEventDetails::~JsEventDetails() {}

const DictionaryValue& JsEventDetails::Get() const {
  return details_.Get();
}

std::string JsEventDetails::ToString() const {
  std::string str;
  base::JSONWriter::Write(&Get(), &str);
  return str;
}

}  // namespace browser_sync
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//', 'Copyright', '(c)', '2012', 'The', 'Chromium', 'Authors.', 'All', 'rights', 'reserved.', '//', 'Use', 'of', 'this', 'source', 'code', 'is', 'governed', 'by', 'a', 'BSD-style', 'license', 'that', 'can', 'be', '//', 'found', 'in', 'the', 'LICENSE', 'file.', '#include', '""sync/js/js_event_details.h""', '#include', '""base/json/json_writer.h""', 'namespace', 'browser_sync', '{', 'JsEventDetails::JsEventDetails()', '{}', 'JsEventDetails::JsEventDetails(DictionaryValue*', 'details)', ':', 'details_(details)', '{}', 'JsEventDetails::~JsEventDetails()', '{}', 'const', 'DictionaryValue&', 'JsEventDetails::Get()', 'const', '{', 'return', 'details_.Get();', '}', 'std::string', 'JsEventDetails::ToString()', 'const', '{', 'std::string', 'str;', 'base::JSONWriter::Write(&Get(),', '&str);', 'return', 'str;', '}', '}', '//', 'namespace', 'browser_sync', '```']",challenge not surrounded by ''': ,
"<html>
  <head>
    <meta http-equiv=""refresh"" content=""0; url=/hsmm-pi/index.php""> 
  </head>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<html>', '<head>', '<meta', 'http-equiv=""refresh""', 'content=""0;', 'url=/hsmm-pi/index.php"">', '</head>', '</html>', '```']",challenge not surrounded by ''': ,
"#      wctrl.py
#      
#      Copyright (C) 2013 Yi-Wei Ci <ciyiwei@hotmail.com>
#      
#      This program is free software; you can redistribute it and/or modify
#      it under the terms of the GNU General Public License as published by
#      the Free Software Foundation; either version 2 of the License, or
#      (at your option) any later version.
#      
#      This program is distributed in the hope that it will be useful,
#      but WITHOUT ANY WARRANTY; without even the implied warranty of
#      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#      GNU General Public License for more details.
#      
#      You should have received a copy of the GNU General Public License
#      along with this program; if not, write to the Free Software
#      Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
#      MA 02110-1301, USA.

import socket
from log import log_err
from default import WCTRL_PORT
from stream import stream_input, stream_output

class WCtrlProc(object):
    def __init__(self, ctrl, addr, timeout):
        self._ctrl = ctrl
        self._addr = addr
        self._timeout = timeout
        self._sock = None
    
    def __getattr__(self, op):
        self._op = op
        return self._proc
    
    def _open(self):
        self._sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self._sock.connect((self._addr, WCTRL_PORT))
    
    def _close(self):
        if self._sock:
            self._sock.close()
            self._sock = None
            
    def _send(self, buf):
        if self._sock:
            stream_input(self._sock, buf)
        
    def _recv(self):
        if self._sock:
            return stream_output(self._sock)
    
    def _proc(self, *args):
        try:
            self._open()
            cmd = {'ctrl':self._ctrl, 'op':self._op, 'args':args, 'timeout':self._timeout}
            self._send(cmd)
            return self._recv()
        except:
            log_err(self, 'failed')
        finally:
            self._close()
        
class WCtrl(object):        
    def __init__(self, addr=None, timeout=None):
        if addr:
            self._addr = addr
        else:
            self._addr = '127.0.0.1'
        self._timeout = timeout
      
    def __getattr__(self, ctrl):
        return WCtrlProc(ctrl, self._addr, self._timeout)
    ","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', 'wctrl.py', '#', '#', 'Copyright', '(C)', '2013', 'Yi-Wei', 'Ci', '<ciyiwei@hotmail.com>', '#', '#', 'This', 'program', 'is', 'free', 'software;', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', '#', 'it', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'as', 'published', 'by', '#', 'the', 'Free', 'Software', 'Foundation;', 'either', 'version', '2', 'of', 'the', 'License,', 'or', '#', '(at', 'your', 'option)', 'any', 'later', 'version.', '#', '#', 'This', 'program', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', '#', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', '#', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', '#', 'GNU', 'General', 'Public', 'License', 'for', 'more', 'details.', '#', '#', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'General', 'Public', 'License', '#', 'along', 'with', 'this', 'program;', 'if', 'not,', 'write', 'to', 'the', 'Free', 'Software', '#', 'Foundation,', 'Inc.,', '51', 'Franklin', 'Street,', 'Fifth', 'Floor,', 'Boston,', '#', 'MA', '02110-1301,', 'USA.', 'import', 'socket', 'from', 'log', 'import', 'log_err', 'from', 'default', 'import', 'WCTRL_PORT', 'from', 'stream', 'import', 'stream_input,', 'stream_output', 'class', 'WCtrlProc(object):', 'def', '__init__(self,', 'ctrl,', 'addr,', 'timeout):', 'self._ctrl', '=', 'ctrl', 'self._addr', '=', 'addr', 'self._timeout', '=', 'timeout', 'self._sock', '=', 'None', 'def', '__getattr__(self,', 'op):', 'self._op', '=', 'op', 'return', 'self._proc', 'def', '_open(self):', 'self._sock', '=', 'socket.socket(socket.AF_INET,', 'socket.SOCK_STREAM)', 'self._sock.connect((self._addr,', 'WCTRL_PORT))', 'def', '_close(self):', 'if', 'self._sock:', 'self._sock.close()', 'self._sock', '=', 'None', 'def', '_send(self,', 'buf):', 'if', 'self._sock:', 'stream_input(self._sock,', 'buf)', 'def', '_recv(self):', 'if', 'self._sock:', 'return', 'stream_output(self._sock)', 'def', '_proc(self,', '*args):', 'try:', 'self._open()', 'cmd', '=', ""{'ctrl':self._ctrl,"", ""'op':self._op,"", ""'args':args,"", ""'timeout':self._timeout}"", 'self._send(cmd)', 'return', 'self._recv()', 'except:', 'log_err(self,', ""'failed')"", 'finally:', 'self._close()', 'class', 'WCtrl(object):', 'def', '__init__(self,', 'addr=None,', 'timeout=None):', 'if', 'addr:', 'self._addr', '=', 'addr', 'else:', 'self._addr', '=', ""'127.0.0.1'"", 'self._timeout', '=', 'timeout', 'def', '__getattr__(self,', 'ctrl):', 'return', 'WCtrlProc(ctrl,', 'self._addr,', 'self._timeout)', '```']",challenge not surrounded by ''': ,
"#!/bin/bash

# Change this variables according to your environment
export CODEBASE=`pwd`/../..
export TL_THIRD_DIR=$HOME/mylibs
export TM_THIRD_DIR=${TL_THIRD_DIR}
export TL_PATH=${TL_THIRD_DIR}/terralib-install/lib/cmake/terralib-5.3.1/
export PATH=$PATH:$HOME/Qt5.4.1/5.4/clang_64/bin:/Applications/CMake.app/Contents/bin

clear
echo ""* ------------------------ *""
echo ""* TerraMa2 Release Package *""
echo ""* ------------------------ *""
echo """"

export TM_INSTALL=${TE_THIRD_DIR}/terrama2-package
export TM_OUT_DIR=${CODEBASE}/../build-package

if [ -d ""${TL_PATH}"" ]; then

  mkdir -p ${TM_OUT_DIR}
  cp terrama2.conf.cmake ${TM_OUT_DIR}

  cd ${TM_OUT_DIR}

  cmake -G ""Unix Makefiles"" -C ./terrama2.conf.cmake -DCMAKE_BUILD_TYPE=""Release"" ${CODEBASE}/build/cmake
  make package -j 8

fi

echo ""* ---------- *""
echo ""* Finished ! *""
echo ""* ---------- *""
echo """"
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/bin/bash', '#', 'Change', 'this', 'variables', 'according', 'to', 'your', 'environment', 'export', 'CODEBASE=`pwd`/../..', 'export', 'TL_THIRD_DIR=$HOME/mylibs', 'export', 'TM_THIRD_DIR=${TL_THIRD_DIR}', 'export', 'TL_PATH=${TL_THIRD_DIR}/terralib-install/lib/cmake/terralib-5.3.1/', 'export', 'PATH=$PATH:$HOME/Qt5.4.1/5.4/clang_64/bin:/Applications/CMake.app/Contents/bin', 'clear', 'echo', '""*', '------------------------', '*""', 'echo', '""*', 'TerraMa2', 'Release', 'Package', '*""', 'echo', '""*', '------------------------', '*""', 'echo', '""""', 'export', 'TM_INSTALL=${TE_THIRD_DIR}/terrama2-package', 'export', 'TM_OUT_DIR=${CODEBASE}/../build-package', 'if', '[', '-d', '""${TL_PATH}""', '];', 'then', 'mkdir', '-p', '${TM_OUT_DIR}', 'cp', 'terrama2.conf.cmake', '${TM_OUT_DIR}', 'cd', '${TM_OUT_DIR}', 'cmake', '-G', '""Unix', 'Makefiles""', '-C', './terrama2.conf.cmake', '-DCMAKE_BUILD_TYPE=""Release""', '${CODEBASE}/build/cmake', 'make', 'package', '-j', '8', 'fi', 'echo', '""*', '----------', '*""', 'echo', '""*', 'Finished', '!', '*""', 'echo', '""*', '----------', '*""', 'echo', '""""', '```']",challenge not surrounded by ''': ,
"//////////////////////////////////////////////////////////////////////////////
// 
//                    Copyright 2020, Cornutum Project
//                             www.cornutum.org
//
//////////////////////////////////////////////////////////////////////////////

package org.cornutum.tcases.openapi.moco;

import org.cornutum.tcases.util.ToString;

import java.util.Optional;

/**
 * Resource configuration for an <a href=""https://github.com/dreamhead/moco/blob/master/moco-doc/usage.md#https"">HTTPS certificate</a>.
 */
public class CertConfigResource extends CertConfig
  { 
  /**
   * Creates a new CertConfigResource instance.
   */
  public CertConfigResource( String path, String keyStorePassword, String certPassword)
    {
    this( null, path, keyStorePassword, certPassword);
    }
   
  /**
   * Creates a new CertConfigResource instance.
   */
  public CertConfigResource( String name, String path, String keyStorePassword, String certPassword)
    {
    super( name, keyStorePassword, certPassword);
    path_ = Optional.ofNullable( path).orElseThrow( () -> new IllegalArgumentException( ""Certificate config resource path undefined""));
    }

  /**
   * Returns the resource path for this server configuration.
   */
  public String getPath()
    {
    return path_;
    }

  /**
   * Implements the Visitor pattern for this certificate configuration.
   */
  @Override
  public void accept( CertConfigVisitor visitor)
    {
    visitor.visit( this);
    }

  @Override
  public String toString()
    {
    return
      ToString.getBuilder( this)
      .append( getPath())
      .build();
    }

  private final String path_;
  }
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//////////////////////////////////////////////////////////////////////////////', '//', '//', 'Copyright', '2020,', 'Cornutum', 'Project', '//', 'www.cornutum.org', '//', '//////////////////////////////////////////////////////////////////////////////', 'package', 'org.cornutum.tcases.openapi.moco;', 'import', 'org.cornutum.tcases.util.ToString;', 'import', 'java.util.Optional;', '/**', '*', 'Resource', 'configuration', 'for', 'an', '<a', 'href=""https://github.com/dreamhead/moco/blob/master/moco-doc/usage.md#https"">HTTPS', 'certificate</a>.', '*/', 'public', 'class', 'CertConfigResource', 'extends', 'CertConfig', '{', '/**', '*', 'Creates', 'a', 'new', 'CertConfigResource', 'instance.', '*/', 'public', 'CertConfigResource(', 'String', 'path,', 'String', 'keyStorePassword,', 'String', 'certPassword)', '{', 'this(', 'null,', 'path,', 'keyStorePassword,', 'certPassword);', '}', '/**', '*', 'Creates', 'a', 'new', 'CertConfigResource', 'instance.', '*/', 'public', 'CertConfigResource(', 'String', 'name,', 'String', 'path,', 'String', 'keyStorePassword,', 'String', 'certPassword)', '{', 'super(', 'name,', 'keyStorePassword,', 'certPassword);', 'path_', '=', 'Optional.ofNullable(', 'path).orElseThrow(', '()', '->', 'new', 'IllegalArgumentException(', '""Certificate', 'config', 'resource', 'path', 'undefined""));', '}', '/**', '*', 'Returns', 'the', 'resource', 'path', 'for', 'this', 'server', 'configuration.', '*/', 'public', 'String', 'getPath()', '{', 'return', 'path_;', '}', '/**', '*', 'Implements', 'the', 'Visitor', 'pattern', 'for', 'this', 'certificate', 'configuration.', '*/', '@Override', 'public', 'void', 'accept(', 'CertConfigVisitor', 'visitor)', '{', 'visitor.visit(', 'this);', '}', '@Override', 'public', 'String', 'toString()', '{', 'return', 'ToString.getBuilder(', 'this)', '.append(', 'getPath())', '.build();', '}', 'private', 'final', 'String', 'path_;', '}', '```']",challenge not surrounded by ''': ,
"import discord
from discord.ext import commands
from sys import argv

class Blah:
    """"""
    Custom addon to make announcements.
    """"""
    def __init__(self, bot):
        self.bot = bot
        print('Addon ""{}"" loaded'.format(self.__class__.__name__))

    @commands.has_permissions(ban_members=True)
    @commands.command(hidden=True, pass_context=True)
    async def announce(self, ctx, *, inp):
        await self.bot.send_message(self.bot.announcements_channel, inp)

    @commands.has_permissions(ban_members=True)
    @commands.command(hidden=True, pass_context=True)
    async def speak(self, ctx, channel_destination: str, *, inp):
        channel = ctx.message.channel_mentions[0]
        await self.bot.send_message(channel, inp.replace('@everyone', '@\u200beveryone').replace('@here', '@\u200bhere'))

    @commands.has_permissions(ban_members=True)
    @commands.command(hidden=True, pass_context=True)
    async def sendtyping(self, ctx, channel_destination: str):
        channel = ctx.message.channel_mentions[0]
        await self.bot.send_typing(channel)

    @commands.has_permissions(administrator=True)
    @commands.command(hidden=True, pass_context=True)
    async def dm(self, ctx, channel_destination: str, *, inp):
        dest = ctx.message.mentions[0]
        await self.bot.send_message(dest, inp)


def setup(bot):
    bot.add_cog(Blah(bot))
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'discord', 'from', 'discord.ext', 'import', 'commands', 'from', 'sys', 'import', 'argv', 'class', 'Blah:', '""""""', 'Custom', 'addon', 'to', 'make', 'announcements.', '""""""', 'def', '__init__(self,', 'bot):', 'self.bot', '=', 'bot', ""print('Addon"", '""{}""', ""loaded'.format(self.__class__.__name__))"", '@commands.has_permissions(ban_members=True)', '@commands.command(hidden=True,', 'pass_context=True)', 'async', 'def', 'announce(self,', 'ctx,', '*,', 'inp):', 'await', 'self.bot.send_message(self.bot.announcements_channel,', 'inp)', '@commands.has_permissions(ban_members=True)', '@commands.command(hidden=True,', 'pass_context=True)', 'async', 'def', 'speak(self,', 'ctx,', 'channel_destination:', 'str,', '*,', 'inp):', 'channel', '=', 'ctx.message.channel_mentions[0]', 'await', 'self.bot.send_message(channel,', ""inp.replace('@everyone',"", ""'@\\u200beveryone').replace('@here',"", ""'@\\u200bhere'))"", '@commands.has_permissions(ban_members=True)', '@commands.command(hidden=True,', 'pass_context=True)', 'async', 'def', 'sendtyping(self,', 'ctx,', 'channel_destination:', 'str):', 'channel', '=', 'ctx.message.channel_mentions[0]', 'await', 'self.bot.send_typing(channel)', '@commands.has_permissions(administrator=True)', '@commands.command(hidden=True,', 'pass_context=True)', 'async', 'def', 'dm(self,', 'ctx,', 'channel_destination:', 'str,', '*,', 'inp):', 'dest', '=', 'ctx.message.mentions[0]', 'await', 'self.bot.send_message(dest,', 'inp)', 'def', 'setup(bot):', 'bot.add_cog(Blah(bot))', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/containeranalysis/v1beta1/source/source.proto

package io.grafeas.v1beta1.source;

public interface ProjectRepoIdOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:grafeas.v1beta1.source.ProjectRepoId)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * The ID of the project.
   * </pre>
   *
   * <code>string project_id = 1;</code>
   *
   * @return The projectId.
   */
  java.lang.String getProjectId();
  /**
   *
   *
   * <pre>
   * The ID of the project.
   * </pre>
   *
   * <code>string project_id = 1;</code>
   *
   * @return The bytes for projectId.
   */
  com.google.protobuf.ByteString getProjectIdBytes();

  /**
   *
   *
   * <pre>
   * The name of the repo. Leave empty for the default repo.
   * </pre>
   *
   * <code>string repo_name = 2;</code>
   *
   * @return The repoName.
   */
  java.lang.String getRepoName();
  /**
   *
   *
   * <pre>
   * The name of the repo. Leave empty for the default repo.
   * </pre>
   *
   * <code>string repo_name = 2;</code>
   *
   * @return The bytes for repoName.
   */
  com.google.protobuf.ByteString getRepoNameBytes();
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '2020', 'Google', 'LLC', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'https://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', '//', 'Generated', 'by', 'the', 'protocol', 'buffer', 'compiler.', 'DO', 'NOT', 'EDIT!', '//', 'source:', 'google/devtools/containeranalysis/v1beta1/source/source.proto', 'package', 'io.grafeas.v1beta1.source;', 'public', 'interface', 'ProjectRepoIdOrBuilder', 'extends', '//', '@@protoc_insertion_point(interface_extends:grafeas.v1beta1.source.ProjectRepoId)', 'com.google.protobuf.MessageOrBuilder', '{', '/**', '*', '*', '*', '<pre>', '*', 'The', 'ID', 'of', 'the', 'project.', '*', '</pre>', '*', '*', '<code>string', 'project_id', '=', '1;</code>', '*', '*', '@return', 'The', 'projectId.', '*/', 'java.lang.String', 'getProjectId();', '/**', '*', '*', '*', '<pre>', '*', 'The', 'ID', 'of', 'the', 'project.', '*', '</pre>', '*', '*', '<code>string', 'project_id', '=', '1;</code>', '*', '*', '@return', 'The', 'bytes', 'for', 'projectId.', '*/', 'com.google.protobuf.ByteString', 'getProjectIdBytes();', '/**', '*', '*', '*', '<pre>', '*', 'The', 'name', 'of', 'the', 'repo.', 'Leave', 'empty', 'for', 'the', 'default', 'repo.', '*', '</pre>', '*', '*', '<code>string', 'repo_name', '=', '2;</code>', '*', '*', '@return', 'The', 'repoName.', '*/', 'java.lang.String', 'getRepoName();', '/**', '*', '*', '*', '<pre>', '*', 'The', 'name', 'of', 'the', 'repo.', 'Leave', 'empty', 'for', 'the', 'default', 'repo.', '*', '</pre>', '*', '*', '<code>string', 'repo_name', '=', '2;</code>', '*', '*', '@return', 'The', 'bytes', 'for', 'repoName.', '*/', 'com.google.protobuf.ByteString', 'getRepoNameBytes();', '}', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright 2000-2009 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.intellij.usageView;

import com.intellij.psi.PsiElement;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

/**
 * TODO: Document
 */
public interface UsageViewDescriptor {
  /**
   * @return an array of elements whose usages were searched or {@link com.intellij.psi.PsiElement#EMPTY_ARRAY} if not available
   */
  @NotNull
  PsiElement[] getElements();

  String getProcessedElementsHeader();

  String getCodeReferencesText(int usagesCount, int filesCount);

  @Nullable
  String getCommentReferencesText(int usagesCount, int filesCount);
}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '2000-2009', 'JetBrains', 's.r.o.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'com.intellij.usageView;', 'import', 'com.intellij.psi.PsiElement;', 'import', 'org.jetbrains.annotations.NotNull;', 'import', 'org.jetbrains.annotations.Nullable;', '/**', '*', 'TODO:', 'Document', '*/', 'public', 'interface', 'UsageViewDescriptor', '{', '/**', '*', '@return', 'an', 'array', 'of', 'elements', 'whose', 'usages', 'were', 'searched', 'or', '{@link', 'com.intellij.psi.PsiElement#EMPTY_ARRAY}', 'if', 'not', 'available', '*/', '@NotNull', 'PsiElement[]', 'getElements();', 'String', 'getProcessedElementsHeader();', 'String', 'getCodeReferencesText(int', 'usagesCount,', 'int', 'filesCount);', '@Nullable', 'String', 'getCommentReferencesText(int', 'usagesCount,', 'int', 'filesCount);', '}```']",challenge not surrounded by ''': ,
"package cpup.poke4j.plugin.files;

import cpup.poke4j.Buffer;
import cpup.poke4j.BufferPos;
import cpup.poke4j.Cursor;
import cpup.poke4j.plugin.CommandRun;
import cpup.poke4j.plugin.ICommand;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;

public class LoadCommand implements ICommand {
	@Override
	public void invoke(CommandRun run) throws Exception {
		final String path = run.getArgs().get(0, String.class);
		final File file = new File(path);
		final Buffer buffer = run.getBuffer();
		if(file.exists()) {
			buffer.getHints().put(""file:path"", path);
			final BufferedReader reader = new BufferedReader(new FileReader(file));
			buffer.load(reader);
			reader.close();
			buffer.getCursors().clear();
			buffer.getCursors().add(new Cursor(run.getPoke(), buffer, new BufferPos(0, 0)));
		} else {
			throw new FileNotFoundException(""No file named: "" + path);
		}
	}

	private static LoadCommand instance;

	public static LoadCommand get() {
		if(instance == null) {
			instance = new LoadCommand();
		}
		return instance;
	}
}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'cpup.poke4j.plugin.files;', 'import', 'cpup.poke4j.Buffer;', 'import', 'cpup.poke4j.BufferPos;', 'import', 'cpup.poke4j.Cursor;', 'import', 'cpup.poke4j.plugin.CommandRun;', 'import', 'cpup.poke4j.plugin.ICommand;', 'import', 'java.io.BufferedReader;', 'import', 'java.io.File;', 'import', 'java.io.FileNotFoundException;', 'import', 'java.io.FileReader;', 'public', 'class', 'LoadCommand', 'implements', 'ICommand', '{', '@Override', 'public', 'void', 'invoke(CommandRun', 'run)', 'throws', 'Exception', '{', 'final', 'String', 'path', '=', 'run.getArgs().get(0,', 'String.class);', 'final', 'File', 'file', '=', 'new', 'File(path);', 'final', 'Buffer', 'buffer', '=', 'run.getBuffer();', 'if(file.exists())', '{', 'buffer.getHints().put(""file:path"",', 'path);', 'final', 'BufferedReader', 'reader', '=', 'new', 'BufferedReader(new', 'FileReader(file));', 'buffer.load(reader);', 'reader.close();', 'buffer.getCursors().clear();', 'buffer.getCursors().add(new', 'Cursor(run.getPoke(),', 'buffer,', 'new', 'BufferPos(0,', '0)));', '}', 'else', '{', 'throw', 'new', 'FileNotFoundException(""No', 'file', 'named:', '""', '+', 'path);', '}', '}', 'private', 'static', 'LoadCommand', 'instance;', 'public', 'static', 'LoadCommand', 'get()', '{', 'if(instance', '==', 'null)', '{', 'instance', '=', 'new', 'LoadCommand();', '}', 'return', 'instance;', '}', '}```']",challenge not surrounded by ''': ,
"/**
 * Copyright (c) 2014 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

'use strict';
iotApp.directive('knob', function(){
    var link = function(scope, element, attrs){
        scope.$watch(attrs.knob, function() {
            angular.element('.' + scope.name).knob({
                width: scope.width,
                height: scope.height,
                max: scope.max || 100,
                angleOffset: scope.angleOffset || 0,
                angleArc : scope.angleArc || 360,
                readOnly: true,
                thickness: scope.thickness,
                fgColor: scope.color,
                draw: function(){
                    // ""tron"" case
                    if(this.$.data('skin') === 'tron') {

                        var a = this.angle(this.cv),  // Angle
                            sa = this.startAngle,          // Previous start angle
                            sat = this.startAngle,         // Start angle
                            ea,                            // Previous end angle
                            eat = sat + a,                 // End angle
                            r = true;

                        this.g.lineWidth = this.lineWidth;

                        if (this.o.displayPrevious) {
                            ea = this.startAngle + this.angle(this.value);
                            this.g.beginPath();
                            this.g.strokeStyle = this.previousColor;
                            this.g.arc(this.xy, this.xy, this.radius - this.lineWidth, sa, ea, false);
                            this.g.stroke();
                        }

                        this.g.beginPath();
                        this.g.strokeStyle = r ? this.o.fgColor : this.fgColor ;
                        this.g.arc(this.xy, this.xy, this.radius - this.lineWidth, sat, eat, false);
                        this.g.stroke();

                        this.g.lineWidth = 2;
                        this.g.beginPath();
                        this.g.strokeStyle = this.o.fgColor;
                        this.g.arc(this.xy, this.xy, this.radius - this.lineWidth + 1 + this.lineWidth * 2 / 3, 0, 2 * Math.PI, false);
                        this.g.stroke();

                        return false;
                    }
                }
            });
        });
        scope.$watch('val', function(value){
            angular.element('.' + scope.name)
                .val(value)
                .trigger('change');
        });
    };

    return {
        scope: {
            val: '=ngModel',
            name: '@',
            max: '@',
            width: '@',
            height: '@',
            angleOffset: '@',
            angleArc: '@',
            thickness: '@',
            color: '@',
            showWhen: '@',
            noShowWhen: '@',
            actionHref: '@',
            actionTitle: '@',
            actionText: '@'
        },
        restrict: ""E"",
        templateUrl: 'public/partials/directives/knob.html',
        link: link
    };
});","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', 'Copyright', '(c)', '2014', 'Intel', 'Corporation', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', ""'use"", ""strict';"", ""iotApp.directive('knob',"", 'function(){', 'var', 'link', '=', 'function(scope,', 'element,', 'attrs){', 'scope.$watch(attrs.knob,', 'function()', '{', ""angular.element('.'"", '+', 'scope.name).knob({', 'width:', 'scope.width,', 'height:', 'scope.height,', 'max:', 'scope.max', '||', '100,', 'angleOffset:', 'scope.angleOffset', '||', '0,', 'angleArc', ':', 'scope.angleArc', '||', '360,', 'readOnly:', 'true,', 'thickness:', 'scope.thickness,', 'fgColor:', 'scope.color,', 'draw:', 'function(){', '//', '""tron""', 'case', ""if(this.$.data('skin')"", '===', ""'tron')"", '{', 'var', 'a', '=', 'this.angle(this.cv),', '//', 'Angle', 'sa', '=', 'this.startAngle,', '//', 'Previous', 'start', 'angle', 'sat', '=', 'this.startAngle,', '//', 'Start', 'angle', 'ea,', '//', 'Previous', 'end', 'angle', 'eat', '=', 'sat', '+', 'a,', '//', 'End', 'angle', 'r', '=', 'true;', 'this.g.lineWidth', '=', 'this.lineWidth;', 'if', '(this.o.displayPrevious)', '{', 'ea', '=', 'this.startAngle', '+', 'this.angle(this.value);', 'this.g.beginPath();', 'this.g.strokeStyle', '=', 'this.previousColor;', 'this.g.arc(this.xy,', 'this.xy,', 'this.radius', '-', 'this.lineWidth,', 'sa,', 'ea,', 'false);', 'this.g.stroke();', '}', 'this.g.beginPath();', 'this.g.strokeStyle', '=', 'r', '?', 'this.o.fgColor', ':', 'this.fgColor', ';', 'this.g.arc(this.xy,', 'this.xy,', 'this.radius', '-', 'this.lineWidth,', 'sat,', 'eat,', 'false);', 'this.g.stroke();', 'this.g.lineWidth', '=', '2;', 'this.g.beginPath();', 'this.g.strokeStyle', '=', 'this.o.fgColor;', 'this.g.arc(this.xy,', 'this.xy,', 'this.radius', '-', 'this.lineWidth', '+', '1', '+', 'this.lineWidth', '*', '2', '/', '3,', '0,', '2', '*', 'Math.PI,', 'false);', 'this.g.stroke();', 'return', 'false;', '}', '}', '});', '});', ""scope.$watch('val',"", 'function(value){', ""angular.element('.'"", '+', 'scope.name)', '.val(value)', "".trigger('change');"", '});', '};', 'return', '{', 'scope:', '{', 'val:', ""'=ngModel',"", 'name:', ""'@',"", 'max:', ""'@',"", 'width:', ""'@',"", 'height:', ""'@',"", 'angleOffset:', ""'@',"", 'angleArc:', ""'@',"", 'thickness:', ""'@',"", 'color:', ""'@',"", 'showWhen:', ""'@',"", 'noShowWhen:', ""'@',"", 'actionHref:', ""'@',"", 'actionTitle:', ""'@',"", 'actionText:', ""'@'"", '},', 'restrict:', '""E"",', 'templateUrl:', ""'public/partials/directives/knob.html',"", 'link:', 'link', '};', '});```']",challenge not surrounded by ''': ,
"// https://github.com/emberjs/ember.js/blob/v1.5.0/packages/ember-runtime/lib/system/string.js
'use strict';

var STRING_DECAMELIZE_REGEXP = (/([a-z\d])([A-Z])/g);
var _s = require('underscore.string');

module.exports = {
  decamelize: function(str) {
    return str ? str.replace(STRING_DECAMELIZE_REGEXP, '$1_$2').toLowerCase() : '';
  },
  dasherize: function(str) {
    return str ? _s.dasherize(str).replace(/^\-/, '') : '';
  },
  classify: function(str) {
    // Have to humanize first so that 'MyApp' doesnt turn into 'Myapp'
    return str ? _s.classify(_s.humanize(str)) : '';
  }
};
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//', 'https://github.com/emberjs/ember.js/blob/v1.5.0/packages/ember-runtime/lib/system/string.js', ""'use"", ""strict';"", 'var', 'STRING_DECAMELIZE_REGEXP', '=', '(/([a-z\\d])([A-Z])/g);', 'var', '_s', '=', ""require('underscore.string');"", 'module.exports', '=', '{', 'decamelize:', 'function(str)', '{', 'return', 'str', '?', 'str.replace(STRING_DECAMELIZE_REGEXP,', ""'$1_$2').toLowerCase()"", ':', ""'';"", '},', 'dasherize:', 'function(str)', '{', 'return', 'str', '?', '_s.dasherize(str).replace(/^\\-/,', ""'')"", ':', ""'';"", '},', 'classify:', 'function(str)', '{', '//', 'Have', 'to', 'humanize', 'first', 'so', 'that', ""'MyApp'"", 'doesnt', 'turn', 'into', ""'Myapp'"", 'return', 'str', '?', '_s.classify(_s.humanize(str))', ':', ""'';"", '}', '};', '```']",challenge not surrounded by ''': ,
"package org.pikater.web.vaadin.gui.server.components.scalableimage;

import org.pikater.web.vaadin.gui.client.extensions.ScalableImageExtensionClientRpc;

import com.vaadin.ui.CustomLayout;

/**
 * A CSS implementation of a scaled image component. Use
 * {@link #setScaleRatio(double)}.
 * 
 * @author SkyCrawl
 */
public class ScalableImage extends CustomLayout implements ScalableImageExtensionClientRpc {
	private static final long serialVersionUID = -5047809273477362373L;

	private final ScalableImageExtension extension;

	public ScalableImage(String imageURL, int imageWidth, int imageHeight) {
		this(null, imageURL, imageWidth, imageHeight);
	}

	public ScalableImage(String caption, String imageURL, int imageWidth, int imageHeight) {
		super(""scalableImageLayout"");
		setCaption(caption);

		this.extension = new ScalableImageExtension(this);
		setImage(imageURL, imageWidth, imageHeight);
	}

	@Override
	public void setImage(String imageURL, int imageWidth, int imageHeight) {
		extension.getClientRPC().setImage(imageURL, imageWidth, imageHeight);
	}

	public void setScaleRatio(double scaleRatio) {
		extension.getClientRPC().setScaleRatio(scaleRatio);
	}
}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'org.pikater.web.vaadin.gui.server.components.scalableimage;', 'import', 'org.pikater.web.vaadin.gui.client.extensions.ScalableImageExtensionClientRpc;', 'import', 'com.vaadin.ui.CustomLayout;', '/**', '*', 'A', 'CSS', 'implementation', 'of', 'a', 'scaled', 'image', 'component.', 'Use', '*', '{@link', '#setScaleRatio(double)}.', '*', '*', '@author', 'SkyCrawl', '*/', 'public', 'class', 'ScalableImage', 'extends', 'CustomLayout', 'implements', 'ScalableImageExtensionClientRpc', '{', 'private', 'static', 'final', 'long', 'serialVersionUID', '=', '-5047809273477362373L;', 'private', 'final', 'ScalableImageExtension', 'extension;', 'public', 'ScalableImage(String', 'imageURL,', 'int', 'imageWidth,', 'int', 'imageHeight)', '{', 'this(null,', 'imageURL,', 'imageWidth,', 'imageHeight);', '}', 'public', 'ScalableImage(String', 'caption,', 'String', 'imageURL,', 'int', 'imageWidth,', 'int', 'imageHeight)', '{', 'super(""scalableImageLayout"");', 'setCaption(caption);', 'this.extension', '=', 'new', 'ScalableImageExtension(this);', 'setImage(imageURL,', 'imageWidth,', 'imageHeight);', '}', '@Override', 'public', 'void', 'setImage(String', 'imageURL,', 'int', 'imageWidth,', 'int', 'imageHeight)', '{', 'extension.getClientRPC().setImage(imageURL,', 'imageWidth,', 'imageHeight);', '}', 'public', 'void', 'setScaleRatio(double', 'scaleRatio)', '{', 'extension.getClientRPC().setScaleRatio(scaleRatio);', '}', '}```']",challenge not surrounded by ''': ,
"/**
 * Created by KGraham on 5/26/16.
 * 
 * This is where states (pages) can set their custom page header and help contents dialog. PageHeader controller is
 * watching the pageHeader string at all times for changes.
 */
(function() {
    ""use strict"";

    function PageHeaderFactory () {
        
        var pageHeader = """";
        var helpContents = {};
        
        return {
            setPageHeader: setPageHeader,
            getPageHeader: getPageHeader,
            setPageHelpContents: setPageHelpContents,
            getPageHelpContents: getPageHelpContents
        };
        
        function setPageHeader(pageHeader_) {
            pageHeader = pageHeader_;
        }

        function getPageHeader() {
            return pageHeader;
        }
        
        function setPageHelpContents(title, contentsTemplateUrl) {
            helpContents.title = title;
            helpContents.contentsTemplateUrl = contentsTemplateUrl;
        }
        
        function getPageHelpContents() {
            return helpContents;
        }
    }

    angular.module('DCX').factory('PageHeaderFactory', PageHeaderFactory);

})();","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', 'Created', 'by', 'KGraham', 'on', '5/26/16.', '*', '*', 'This', 'is', 'where', 'states', '(pages)', 'can', 'set', 'their', 'custom', 'page', 'header', 'and', 'help', 'contents', 'dialog.', 'PageHeader', 'controller', 'is', '*', 'watching', 'the', 'pageHeader', 'string', 'at', 'all', 'times', 'for', 'changes.', '*/', '(function()', '{', '""use', 'strict"";', 'function', 'PageHeaderFactory', '()', '{', 'var', 'pageHeader', '=', '"""";', 'var', 'helpContents', '=', '{};', 'return', '{', 'setPageHeader:', 'setPageHeader,', 'getPageHeader:', 'getPageHeader,', 'setPageHelpContents:', 'setPageHelpContents,', 'getPageHelpContents:', 'getPageHelpContents', '};', 'function', 'setPageHeader(pageHeader_)', '{', 'pageHeader', '=', 'pageHeader_;', '}', 'function', 'getPageHeader()', '{', 'return', 'pageHeader;', '}', 'function', 'setPageHelpContents(title,', 'contentsTemplateUrl)', '{', 'helpContents.title', '=', 'title;', 'helpContents.contentsTemplateUrl', '=', 'contentsTemplateUrl;', '}', 'function', 'getPageHelpContents()', '{', 'return', 'helpContents;', '}', '}', ""angular.module('DCX').factory('PageHeaderFactory',"", 'PageHeaderFactory);', '})();```']",challenge not surrounded by ''': ,
"/*global define*/

define([
    'jquery',
    'underscore',
    'marionette',
    'templates',
    'vent'
], function ($, _, Marionette, JST, vent) {
    'use strict';

    return Marionette.ItemView.extend({
        template: JST['app/scripts/templates/template.hbs']
    });

});
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*global', 'define*/', 'define([', ""'jquery',"", ""'underscore',"", ""'marionette',"", ""'templates',"", ""'vent'"", '],', 'function', '($,', '_,', 'Marionette,', 'JST,', 'vent)', '{', ""'use"", ""strict';"", 'return', 'Marionette.ItemView.extend({', 'template:', ""JST['app/scripts/templates/template.hbs']"", '});', '});', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright (c) 2013, 2017, Oracle and/or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Oracle designates this
 * particular file as subject to the ""Classpath"" exception as provided
 * by Oracle in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
*/

#include ""config.h""

#include <WebCore/HTMLFontElement.h>
#include <WebCore/HTMLNames.h>
#include <WebCore/JSMainThreadExecState.h>

#include <wtf/RefPtr.h>
#include <wtf/GetPtr.h>

#include ""JavaDOMUtils.h""
#include <wtf/java/JavaEnv.h>

using namespace WebCore;

extern ""C"" {

#define IMPL (static_cast<HTMLFontElement*>(jlong_to_ptr(peer)))


// Attributes
JNIEXPORT jstring JNICALL Java_com_sun_webkit_dom_HTMLFontElementImpl_getColorImpl(JNIEnv* env, jclass, jlong peer)
{
    WebCore::JSMainThreadNullState state;
    return JavaReturn<String>(env, IMPL->getAttribute(WebCore::HTMLNames::colorAttr));
}

JNIEXPORT void JNICALL Java_com_sun_webkit_dom_HTMLFontElementImpl_setColorImpl(JNIEnv* env, jclass, jlong peer, jstring value)
{
    WebCore::JSMainThreadNullState state;
    IMPL->setAttributeWithoutSynchronization(WebCore::HTMLNames::colorAttr, String(env, value));
}

JNIEXPORT jstring JNICALL Java_com_sun_webkit_dom_HTMLFontElementImpl_getFaceImpl(JNIEnv* env, jclass, jlong peer)
{
    WebCore::JSMainThreadNullState state;
    return JavaReturn<String>(env, IMPL->getAttribute(WebCore::HTMLNames::faceAttr));
}

JNIEXPORT void JNICALL Java_com_sun_webkit_dom_HTMLFontElementImpl_setFaceImpl(JNIEnv* env, jclass, jlong peer, jstring value)
{
    WebCore::JSMainThreadNullState state;
    IMPL->setAttributeWithoutSynchronization(WebCore::HTMLNames::faceAttr, String(env, value));
}

JNIEXPORT jstring JNICALL Java_com_sun_webkit_dom_HTMLFontElementImpl_getSizeImpl(JNIEnv* env, jclass, jlong peer)
{
    WebCore::JSMainThreadNullState state;
    return JavaReturn<String>(env, IMPL->getAttribute(WebCore::HTMLNames::sizeAttr));
}

JNIEXPORT void JNICALL Java_com_sun_webkit_dom_HTMLFontElementImpl_setSizeImpl(JNIEnv* env, jclass, jlong peer, jstring value)
{
    WebCore::JSMainThreadNullState state;
    IMPL->setAttributeWithoutSynchronization(WebCore::HTMLNames::sizeAttr, String(env, value));
}

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '(c)', '2013,', '2017,', 'Oracle', 'and/or', 'its', 'affiliates.', 'All', 'rights', 'reserved.', '*', 'DO', 'NOT', 'ALTER', 'OR', 'REMOVE', 'COPYRIGHT', 'NOTICES', 'OR', 'THIS', 'FILE', 'HEADER.', '*', '*', 'This', 'code', 'is', 'free', 'software;', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', 'it', '*', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'version', '2', 'only,', 'as', '*', 'published', 'by', 'the', 'Free', 'Software', 'Foundation.', 'Oracle', 'designates', 'this', '*', 'particular', 'file', 'as', 'subject', 'to', 'the', '""Classpath""', 'exception', 'as', 'provided', '*', 'by', 'Oracle', 'in', 'the', 'LICENSE', 'file', 'that', 'accompanied', 'this', 'code.', '*', '*', 'This', 'code', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', 'but', 'WITHOUT', '*', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', 'MERCHANTABILITY', 'or', '*', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', 'GNU', 'General', 'Public', 'License', '*', 'version', '2', 'for', 'more', 'details', '(a', 'copy', 'is', 'included', 'in', 'the', 'LICENSE', 'file', 'that', '*', 'accompanied', 'this', 'code).', '*', '*', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'version', '*', '2', 'along', 'with', 'this', 'work;', 'if', 'not,', 'write', 'to', 'the', 'Free', 'Software', 'Foundation,', '*', 'Inc.,', '51', 'Franklin', 'St,', 'Fifth', 'Floor,', 'Boston,', 'MA', '02110-1301', 'USA.', '*', '*', 'Please', 'contact', 'Oracle,', '500', 'Oracle', 'Parkway,', 'Redwood', 'Shores,', 'CA', '94065', 'USA', '*', 'or', 'visit', 'www.oracle.com', 'if', 'you', 'need', 'additional', 'information', 'or', 'have', 'any', '*', 'questions.', '*/', '#include', '""config.h""', '#include', '<WebCore/HTMLFontElement.h>', '#include', '<WebCore/HTMLNames.h>', '#include', '<WebCore/JSMainThreadExecState.h>', '#include', '<wtf/RefPtr.h>', '#include', '<wtf/GetPtr.h>', '#include', '""JavaDOMUtils.h""', '#include', '<wtf/java/JavaEnv.h>', 'using', 'namespace', 'WebCore;', 'extern', '""C""', '{', '#define', 'IMPL', '(static_cast<HTMLFontElement*>(jlong_to_ptr(peer)))', '//', 'Attributes', 'JNIEXPORT', 'jstring', 'JNICALL', 'Java_com_sun_webkit_dom_HTMLFontElementImpl_getColorImpl(JNIEnv*', 'env,', 'jclass,', 'jlong', 'peer)', '{', 'WebCore::JSMainThreadNullState', 'state;', 'return', 'JavaReturn<String>(env,', 'IMPL->getAttribute(WebCore::HTMLNames::colorAttr));', '}', 'JNIEXPORT', 'void', 'JNICALL', 'Java_com_sun_webkit_dom_HTMLFontElementImpl_setColorImpl(JNIEnv*', 'env,', 'jclass,', 'jlong', 'peer,', 'jstring', 'value)', '{', 'WebCore::JSMainThreadNullState', 'state;', 'IMPL->setAttributeWithoutSynchronization(WebCore::HTMLNames::colorAttr,', 'String(env,', 'value));', '}', 'JNIEXPORT', 'jstring', 'JNICALL', 'Java_com_sun_webkit_dom_HTMLFontElementImpl_getFaceImpl(JNIEnv*', 'env,', 'jclass,', 'jlong', 'peer)', '{', 'WebCore::JSMainThreadNullState', 'state;', 'return', 'JavaReturn<String>(env,', 'IMPL->getAttribute(WebCore::HTMLNames::faceAttr));', '}', 'JNIEXPORT', 'void', 'JNICALL', 'Java_com_sun_webkit_dom_HTMLFontElementImpl_setFaceImpl(JNIEnv*', 'env,', 'jclass,', 'jlong', 'peer,', 'jstring', 'value)', '{', 'WebCore::JSMainThreadNullState', 'state;', 'IMPL->setAttributeWithoutSynchronization(WebCore::HTMLNames::faceAttr,', 'String(env,', 'value));', '}', 'JNIEXPORT', 'jstring', 'JNICALL', 'Java_com_sun_webkit_dom_HTMLFontElementImpl_getSizeImpl(JNIEnv*', 'env,', 'jclass,', 'jlong', 'peer)', '{', 'WebCore::JSMainThreadNullState', 'state;', 'return', 'JavaReturn<String>(env,', 'IMPL->getAttribute(WebCore::HTMLNames::sizeAttr));', '}', 'JNIEXPORT', 'void', 'JNICALL', 'Java_com_sun_webkit_dom_HTMLFontElementImpl_setSizeImpl(JNIEnv*', 'env,', 'jclass,', 'jlong', 'peer,', 'jstring', 'value)', '{', 'WebCore::JSMainThreadNullState', 'state;', 'IMPL->setAttributeWithoutSynchronization(WebCore::HTMLNames::sizeAttr,', 'String(env,', 'value));', '}', '}', '```']",challenge not surrounded by ''': ,
"package xyz.enhorse.imageio;

/**
 * 23.06.2015.
 */
public interface Compressible {
    Compression getCompression();
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'xyz.enhorse.imageio;', '/**', '*', '23.06.2015.', '*/', 'public', 'interface', 'Compressible', '{', 'Compression', 'getCompression();', '}', '```']",challenge not surrounded by ''': ,
"""""""
csgo-autoaccept

Provides base functionality for all matchmaking services.
""""""

import ctypes
import re

import win32api
import win32gui
from PIL import ImageGrab

def aero_enabled():
    """"""
    Check if Windows Aero is enabled.

    Returns:
        bool: Whether or not Windows Aero is enabled.
    """"""

    try:
        hasAero = ctypes.c_bool()
        retcode = ctypes.windll.dwmapi.DwmIsCompositionEnabled(ctypes.byref(hasAero))
        return retcode == 0 and hasAero.value
    except AttributeError:
        return False

def get_hwnd(window_title):
    """"""
    Get the HWND for any window it can find.

    Returns:
        int: HWND of window if it is found.
        bool: False if no window exists.
    """"""

    def _handle_hwnd(hwnds, hwnd, extra):
        if re.match(window_title, win32gui.GetWindowText(hwnd)):
            hwnds.append(hwnd)

    hwnds = []
    win32gui.EnumWindows(lambda hwnd, extra: _handle_hwnd(hwnds, hwnd, extra), None)
    return hwnds[0] if hwnds else False

def focused(window_title):
    """"""
    Check if the window is focused (in the foreground).

    Returns:
        bool: Whether or not the window is focused.
    """"""

    return win32gui.GetForegroundWindow() == get_hwnd(window_title)

def exists(window_title):
    """"""
    Check if it can find an open window.

    Returns:
        bool: Whether or not the window exists.
    """"""

    return get_hwnd(window_title) is not False

def screenshot(window_title):
    """"""
    Take a screenshot of the window if it exists.

    Returns:
        Image: Image data for the screenshot taken.
        bool: False if no window exists.
    """"""

    hwnd = get_hwnd(window_title)
    return ImageGrab.grab(win32gui.GetWindowRect(hwnd)) if hwnd else False
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```""""""', 'csgo-autoaccept', 'Provides', 'base', 'functionality', 'for', 'all', 'matchmaking', 'services.', '""""""', 'import', 'ctypes', 'import', 're', 'import', 'win32api', 'import', 'win32gui', 'from', 'PIL', 'import', 'ImageGrab', 'def', 'aero_enabled():', '""""""', 'Check', 'if', 'Windows', 'Aero', 'is', 'enabled.', 'Returns:', 'bool:', 'Whether', 'or', 'not', 'Windows', 'Aero', 'is', 'enabled.', '""""""', 'try:', 'hasAero', '=', 'ctypes.c_bool()', 'retcode', '=', 'ctypes.windll.dwmapi.DwmIsCompositionEnabled(ctypes.byref(hasAero))', 'return', 'retcode', '==', '0', 'and', 'hasAero.value', 'except', 'AttributeError:', 'return', 'False', 'def', 'get_hwnd(window_title):', '""""""', 'Get', 'the', 'HWND', 'for', 'any', 'window', 'it', 'can', 'find.', 'Returns:', 'int:', 'HWND', 'of', 'window', 'if', 'it', 'is', 'found.', 'bool:', 'False', 'if', 'no', 'window', 'exists.', '""""""', 'def', '_handle_hwnd(hwnds,', 'hwnd,', 'extra):', 'if', 're.match(window_title,', 'win32gui.GetWindowText(hwnd)):', 'hwnds.append(hwnd)', 'hwnds', '=', '[]', 'win32gui.EnumWindows(lambda', 'hwnd,', 'extra:', '_handle_hwnd(hwnds,', 'hwnd,', 'extra),', 'None)', 'return', 'hwnds[0]', 'if', 'hwnds', 'else', 'False', 'def', 'focused(window_title):', '""""""', 'Check', 'if', 'the', 'window', 'is', 'focused', '(in', 'the', 'foreground).', 'Returns:', 'bool:', 'Whether', 'or', 'not', 'the', 'window', 'is', 'focused.', '""""""', 'return', 'win32gui.GetForegroundWindow()', '==', 'get_hwnd(window_title)', 'def', 'exists(window_title):', '""""""', 'Check', 'if', 'it', 'can', 'find', 'an', 'open', 'window.', 'Returns:', 'bool:', 'Whether', 'or', 'not', 'the', 'window', 'exists.', '""""""', 'return', 'get_hwnd(window_title)', 'is', 'not', 'False', 'def', 'screenshot(window_title):', '""""""', 'Take', 'a', 'screenshot', 'of', 'the', 'window', 'if', 'it', 'exists.', 'Returns:', 'Image:', 'Image', 'data', 'for', 'the', 'screenshot', 'taken.', 'bool:', 'False', 'if', 'no', 'window', 'exists.', '""""""', 'hwnd', '=', 'get_hwnd(window_title)', 'return', 'ImageGrab.grab(win32gui.GetWindowRect(hwnd))', 'if', 'hwnd', 'else', 'False', '```']",challenge not surrounded by ''': ,
"[:page partOf=""trails"" args=""commentEditorId""]

    <div id=""[=commentEditorId]"" class=""modal fade gx-hidden"" tabindex=""-1"" role=""dialog"" style=""z-index: 0"">
      <div class=""modal-dialog"">
        <div class=""modal-content"">
          <div class=""modal-header"">
            <h3 id=""[=commentEditorId]-header""  >Commentaire</h3>
          </div>
          <div class=""modal-body"">
              <div class=""form-group"">
                  <textarea  id=""[=commentEditorId]-content"" class=""form-control"" style=""width: 90%"" rows=""5"" placeholder=""Commentaire"" ></textarea>
              </div>        
          </div>
          <div class=""modal-footer"">
              <div id=""[=commentEditorId]-error-message"" class=""text-warning"" ></div>
              <button id=""[=commentEditorId]-btn-delete"" type=""submit"" class=""btn btn-warning"">Supprimer</button>
              <button id=""[=commentEditorId]-btn-submit"" type=""submit"" class=""btn btn-primary"">Ajouter</button>
              <button id=""[=commentEditorId]-btn-cancel"" class=""btn btn-default"">Annuler</button>
          </div>
        </div>
      </div>
    </div>         
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```[:page', 'partOf=""trails""', 'args=""commentEditorId""]', '<div', 'id=""[=commentEditorId]""', 'class=""modal', 'fade', 'gx-hidden""', 'tabindex=""-1""', 'role=""dialog""', 'style=""z-index:', '0"">', '<div', 'class=""modal-dialog"">', '<div', 'class=""modal-content"">', '<div', 'class=""modal-header"">', '<h3', 'id=""[=commentEditorId]-header""', '>Commentaire</h3>', '</div>', '<div', 'class=""modal-body"">', '<div', 'class=""form-group"">', '<textarea', 'id=""[=commentEditorId]-content""', 'class=""form-control""', 'style=""width:', '90%""', 'rows=""5""', 'placeholder=""Commentaire""', '></textarea>', '</div>', '</div>', '<div', 'class=""modal-footer"">', '<div', 'id=""[=commentEditorId]-error-message""', 'class=""text-warning""', '></div>', '<button', 'id=""[=commentEditorId]-btn-delete""', 'type=""submit""', 'class=""btn', 'btn-warning"">Supprimer</button>', '<button', 'id=""[=commentEditorId]-btn-submit""', 'type=""submit""', 'class=""btn', 'btn-primary"">Ajouter</button>', '<button', 'id=""[=commentEditorId]-btn-cancel""', 'class=""btn', 'btn-default"">Annuler</button>', '</div>', '</div>', '</div>', '</div>', '```']",challenge not surrounded by ''': ,
"import climate
import sys

import capmetro


def write(st):
    print(','.join((
        st.retrieved.isoformat(),
        str(st.timestamp),
        str(st.vehicle_id),
        str(st.trip_id),
        str(st.route_id),
        str(st.direction_id),
        str(st.start_date),
        str(st.start_time),
        str(st.latitude),
        str(st.longitude),
        str(st.speed),
    )))


@climate.annotate(
    root='load protobuf files from this directory',
    before=('only process files before YYYY-MM-DDTHH:MM:SS', 'option'),
    after=('only process files after YYYY-MM-DDTHH:MM:SS', 'option'),
)
def main(root, before=None, after=None):
    print('retrieved,timestamp,vehicle_id,trip_id,route_id,direction_id,'
          'start_date,start_time,latitude,longitude,speed')
    capmetro.process(write, root, after, before)


if __name__ == '__main__':
    climate.call(main, stream=sys.stderr)
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'climate', 'import', 'sys', 'import', 'capmetro', 'def', 'write(st):', ""print(','.join(("", 'st.retrieved.isoformat(),', 'str(st.timestamp),', 'str(st.vehicle_id),', 'str(st.trip_id),', 'str(st.route_id),', 'str(st.direction_id),', 'str(st.start_date),', 'str(st.start_time),', 'str(st.latitude),', 'str(st.longitude),', 'str(st.speed),', ')))', '@climate.annotate(', ""root='load"", 'protobuf', 'files', 'from', 'this', ""directory',"", ""before=('only"", 'process', 'files', 'before', ""YYYY-MM-DDTHH:MM:SS',"", ""'option'),"", ""after=('only"", 'process', 'files', 'after', ""YYYY-MM-DDTHH:MM:SS',"", ""'option'),"", ')', 'def', 'main(root,', 'before=None,', 'after=None):', ""print('retrieved,timestamp,vehicle_id,trip_id,route_id,direction_id,'"", ""'start_date,start_time,latitude,longitude,speed')"", 'capmetro.process(write,', 'root,', 'after,', 'before)', 'if', '__name__', '==', ""'__main__':"", 'climate.call(main,', 'stream=sys.stderr)', '```']",challenge not surrounded by ''': ,
"package worm.esort.repository;

import javax.persistence.LockModeType;

import org.springframework.data.jpa.repository.Lock;
import org.springframework.data.repository.CrudRepository;

import worm.esort.domain.Tag;


public interface TagRepository extends CrudRepository<Tag, Long>{

	@Lock(LockModeType.WRITE)
	Tag findTagByTagName(String tagName);
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'worm.esort.repository;', 'import', 'javax.persistence.LockModeType;', 'import', 'org.springframework.data.jpa.repository.Lock;', 'import', 'org.springframework.data.repository.CrudRepository;', 'import', 'worm.esort.domain.Tag;', 'public', 'interface', 'TagRepository', 'extends', 'CrudRepository<Tag,', 'Long>{', '@Lock(LockModeType.WRITE)', 'Tag', 'findTagByTagName(String', 'tagName);', '}', '```']",challenge not surrounded by ''': ,
"/*
 Copyright 2014 Reo_SP

 Licensed under the Apache License, Version 2.0 (the ""License"");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 	http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an ""AS IS"" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
*/

package reo7sp.socn.update;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.net.URL;
import java.nio.channels.Channels;
import java.nio.channels.ReadableByteChannel;

import reo7sp.socn.Log;

/**
 * Created by reo7sp on 12/1/13 at 7:13 PM
 */
public class Download {
	private final URL url;
	private final File file;

	public Download(URL url, File file) {
		this.url = url;
		this.file = file;
	}

	public void download() throws IOException {
		Log.i(""Download"", ""Downloading..."");

		if (!file.exists()) {
			file.getParentFile().mkdirs();
			file.createNewFile();
		}

		ReadableByteChannel in = Channels.newChannel(url.openStream());
		FileOutputStream out = new FileOutputStream(file);
		out.getChannel().transferFrom(in, 0, Long.MAX_VALUE);
		out.close();
		in.close();

		Log.i(""Download"", ""Downloaded!"");
	}
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', 'Copyright', '2014', 'Reo_SP', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', 'http://www.apache.org/licenses/LICENSE-2.0', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'reo7sp.socn.update;', 'import', 'java.io.File;', 'import', 'java.io.FileOutputStream;', 'import', 'java.io.IOException;', 'import', 'java.net.URL;', 'import', 'java.nio.channels.Channels;', 'import', 'java.nio.channels.ReadableByteChannel;', 'import', 'reo7sp.socn.Log;', '/**', '*', 'Created', 'by', 'reo7sp', 'on', '12/1/13', 'at', '7:13', 'PM', '*/', 'public', 'class', 'Download', '{', 'private', 'final', 'URL', 'url;', 'private', 'final', 'File', 'file;', 'public', 'Download(URL', 'url,', 'File', 'file)', '{', 'this.url', '=', 'url;', 'this.file', '=', 'file;', '}', 'public', 'void', 'download()', 'throws', 'IOException', '{', 'Log.i(""Download"",', '""Downloading..."");', 'if', '(!file.exists())', '{', 'file.getParentFile().mkdirs();', 'file.createNewFile();', '}', 'ReadableByteChannel', 'in', '=', 'Channels.newChannel(url.openStream());', 'FileOutputStream', 'out', '=', 'new', 'FileOutputStream(file);', 'out.getChannel().transferFrom(in,', '0,', 'Long.MAX_VALUE);', 'out.close();', 'in.close();', 'Log.i(""Download"",', '""Downloaded!"");', '}', '}', '```']",challenge not surrounded by ''': ,
"/**
 * (C) Copyright IBM Corp. 2010, 2015
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 */

package com.ibm.bi.dml.runtime.util;

import org.apache.commons.math3.distribution.PoissonDistribution;
import org.apache.commons.math3.random.SynchronizedRandomGenerator;
import org.apache.commons.math3.random.Well1024a;


/**
 * Class that can generate a stream of random numbers from Poisson
 * distribution with specified mean. 
 */


public class PoissonPRNGenerator extends PRNGenerator
{
	PoissonDistribution _pdist = null;
	double _mean = Double.NaN;
	
	private static final double DEFAULT_MEAN = 1.0;
	
	public PoissonPRNGenerator() {
		// default mean and default seed
		super();
		_mean = 1.0;
		setup(_mean, seed);
	}
	
	public PoissonPRNGenerator(double mean) 
	{
		// default seed
		super();
		_mean = mean;
		setup(_mean, seed);
	}
	
	public PoissonPRNGenerator(long sd) {
		// default mean
		super();
		setup(DEFAULT_MEAN, sd);
	}
	
	public void setup(double mean, long sd) {
		seed = sd;
		
		SynchronizedRandomGenerator srg = new SynchronizedRandomGenerator(new Well1024a());
		srg.setSeed(seed);
		_pdist = new PoissonDistribution(srg, _mean, PoissonDistribution.DEFAULT_EPSILON, PoissonDistribution.DEFAULT_MAX_ITERATIONS);
	}
	
	@Override
	public void setSeed(long sd) {
		setup(_mean, sd);
	}
	
	public void setMean(double mean) {
		setup(mean, seed);
	}
	
	public double nextDouble() {
		return (double) _pdist.sample();
	}
	
	

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', '(C)', 'Copyright', 'IBM', 'Corp.', '2010,', '2015', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*', '*/', 'package', 'com.ibm.bi.dml.runtime.util;', 'import', 'org.apache.commons.math3.distribution.PoissonDistribution;', 'import', 'org.apache.commons.math3.random.SynchronizedRandomGenerator;', 'import', 'org.apache.commons.math3.random.Well1024a;', '/**', '*', 'Class', 'that', 'can', 'generate', 'a', 'stream', 'of', 'random', 'numbers', 'from', 'Poisson', '*', 'distribution', 'with', 'specified', 'mean.', '*/', 'public', 'class', 'PoissonPRNGenerator', 'extends', 'PRNGenerator', '{', 'PoissonDistribution', '_pdist', '=', 'null;', 'double', '_mean', '=', 'Double.NaN;', 'private', 'static', 'final', 'double', 'DEFAULT_MEAN', '=', '1.0;', 'public', 'PoissonPRNGenerator()', '{', '//', 'default', 'mean', 'and', 'default', 'seed', 'super();', '_mean', '=', '1.0;', 'setup(_mean,', 'seed);', '}', 'public', 'PoissonPRNGenerator(double', 'mean)', '{', '//', 'default', 'seed', 'super();', '_mean', '=', 'mean;', 'setup(_mean,', 'seed);', '}', 'public', 'PoissonPRNGenerator(long', 'sd)', '{', '//', 'default', 'mean', 'super();', 'setup(DEFAULT_MEAN,', 'sd);', '}', 'public', 'void', 'setup(double', 'mean,', 'long', 'sd)', '{', 'seed', '=', 'sd;', 'SynchronizedRandomGenerator', 'srg', '=', 'new', 'SynchronizedRandomGenerator(new', 'Well1024a());', 'srg.setSeed(seed);', '_pdist', '=', 'new', 'PoissonDistribution(srg,', '_mean,', 'PoissonDistribution.DEFAULT_EPSILON,', 'PoissonDistribution.DEFAULT_MAX_ITERATIONS);', '}', '@Override', 'public', 'void', 'setSeed(long', 'sd)', '{', 'setup(_mean,', 'sd);', '}', 'public', 'void', 'setMean(double', 'mean)', '{', 'setup(mean,', 'seed);', '}', 'public', 'double', 'nextDouble()', '{', 'return', '(double)', '_pdist.sample();', '}', '}', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
<html xmlns=""http://www.w3.org/1999/xhtml"">
<head>
<meta http-equiv=""Content-Type"" content=""text/xhtml;charset=UTF-8""/>
<title>png++: tRNS.hpp Source File</title>
<link href=""tabs.css"" rel=""stylesheet"" type=""text/css""/>
<link href=""doxygen.css"" rel=""stylesheet"" type=""text/css""/>
</head>
<body>
<!-- Generated by Doxygen 1.7.4 -->
<div id=""top"">
<div id=""titlearea"">
<table cellspacing=""0"" cellpadding=""0"">
 <tbody>
 <tr style=""height: 56px;"">
  <td style=""padding-left: 0.5em;"">
   <div id=""projectname"">png++&#160;<span id=""projectnumber"">0.2.1</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
  <div id=""navrow1"" class=""tabs"">
    <ul class=""tablist"">
      <li><a href=""index.html""><span>Main&#160;Page</span></a></li>
      <li><a href=""namespaces.html""><span>Namespaces</span></a></li>
      <li><a href=""annotated.html""><span>Classes</span></a></li>
      <li class=""current""><a href=""files.html""><span>Files</span></a></li>
    </ul>
  </div>
  <div id=""navrow2"" class=""tabs2"">
    <ul class=""tablist"">
      <li><a href=""files.html""><span>File&#160;List</span></a></li>
    </ul>
  </div>
<div class=""header"">
  <div class=""headertitle"">
<div class=""title"">tRNS.hpp</div>  </div>
</div>
<div class=""contents"">
<a href=""tRNS_8hpp.html"">Go to the documentation of this file.</a><div class=""fragment""><pre class=""fragment""><a name=""l00001""></a>00001 <span class=""comment"">/*</span>
<a name=""l00002""></a>00002 <span class=""comment""> * Copyright (C) 2007,2008   Alex Shulgin</span>
<a name=""l00003""></a>00003 <span class=""comment""> *</span>
<a name=""l00004""></a>00004 <span class=""comment""> * This file is part of png++ the C++ wrapper for libpng.  PNG++ is free</span>
<a name=""l00005""></a>00005 <span class=""comment""> * software; the exact copying conditions are as follows:</span>
<a name=""l00006""></a>00006 <span class=""comment""> *</span>
<a name=""l00007""></a>00007 <span class=""comment""> * Redistribution and use in source and binary forms, with or without</span>
<a name=""l00008""></a>00008 <span class=""comment""> * modification, are permitted provided that the following conditions are met:</span>
<a name=""l00009""></a>00009 <span class=""comment""> *</span>
<a name=""l00010""></a>00010 <span class=""comment""> * 1. Redistributions of source code must retain the above copyright notice,</span>
<a name=""l00011""></a>00011 <span class=""comment""> * this list of conditions and the following disclaimer.</span>
<a name=""l00012""></a>00012 <span class=""comment""> *</span>
<a name=""l00013""></a>00013 <span class=""comment""> * 2. Redistributions in binary form must reproduce the above copyright</span>
<a name=""l00014""></a>00014 <span class=""comment""> * notice, this list of conditions and the following disclaimer in the</span>
<a name=""l00015""></a>00015 <span class=""comment""> * documentation and/or other materials provided with the distribution.</span>
<a name=""l00016""></a>00016 <span class=""comment""> *</span>
<a name=""l00017""></a>00017 <span class=""comment""> * 3. The name of the author may not be used to endorse or promote products</span>
<a name=""l00018""></a>00018 <span class=""comment""> * derived from this software without specific prior written permission.</span>
<a name=""l00019""></a>00019 <span class=""comment""> *</span>
<a name=""l00020""></a>00020 <span class=""comment""> * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS&#39;&#39; AND ANY EXPRESS OR</span>
<a name=""l00021""></a>00021 <span class=""comment""> * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES</span>
<a name=""l00022""></a>00022 <span class=""comment""> * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN</span>
<a name=""l00023""></a>00023 <span class=""comment""> * NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,</span>
<a name=""l00024""></a>00024 <span class=""comment""> * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED</span>
<a name=""l00025""></a>00025 <span class=""comment""> * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR</span>
<a name=""l00026""></a>00026 <span class=""comment""> * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF</span>
<a name=""l00027""></a>00027 <span class=""comment""> * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING</span>
<a name=""l00028""></a>00028 <span class=""comment""> * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS</span>
<a name=""l00029""></a>00029 <span class=""comment""> * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</span>
<a name=""l00030""></a>00030 <span class=""comment""> */</span>
<a name=""l00031""></a>00031 <span class=""preprocessor"">#ifndef PNGPP_TRNS_HPP_INCLUDED</span>
<a name=""l00032""></a>00032 <span class=""preprocessor""></span><span class=""preprocessor"">#define PNGPP_TRNS_HPP_INCLUDED</span>
<a name=""l00033""></a>00033 <span class=""preprocessor""></span>
<a name=""l00034""></a>00034 <span class=""preprocessor"">#include &lt;vector&gt;</span>
<a name=""l00035""></a>00035 <span class=""preprocessor"">#include &quot;<a class=""code"" href=""color_8hpp.html"">color.hpp</a>&quot;</span>
<a name=""l00036""></a>00036 
<a name=""l00037""></a>00037 <span class=""keyword"">namespace </span>png
<a name=""l00038""></a>00038 {
<a name=""l00039""></a>00039 
<a name=""l00044""></a><a class=""code"" href=""namespacepng.html#ace5f679842b8b4e56df1448c62daf28e"">00044</a>     <span class=""keyword"">typedef</span> std::vector&lt; byte &gt; <a class=""code"" href=""namespacepng.html#ace5f679842b8b4e56df1448c62daf28e"" title=""The palette transparency map type. Currently implemented as std::vector of png::byte."">tRNS</a>;
<a name=""l00045""></a>00045 
<a name=""l00046""></a>00046 } <span class=""comment"">// namespace png</span>
<a name=""l00047""></a>00047 
<a name=""l00048""></a>00048 <span class=""preprocessor"">#endif // PNGPP_TRNS_HPP_INCLUDED</span>
</pre></div></div>
</div>
<hr class=""footer""/><address class=""footer""><small>Generated on Thu Apr 21 2011 22:55:12 for png++ by&#160;
<a href=""http://www.doxygen.org/index.html"">
<img class=""footer"" src=""doxygen.png"" alt=""doxygen""/></a> 1.7.4 </small></address>
</body>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'html', 'PUBLIC', '""-//W3C//DTD', 'XHTML', '1.0', 'Transitional//EN""', '""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">', '<html', 'xmlns=""http://www.w3.org/1999/xhtml"">', '<head>', '<meta', 'http-equiv=""Content-Type""', 'content=""text/xhtml;charset=UTF-8""/>', '<title>png++:', 'tRNS.hpp', 'Source', 'File</title>', '<link', 'href=""tabs.css""', 'rel=""stylesheet""', 'type=""text/css""/>', '<link', 'href=""doxygen.css""', 'rel=""stylesheet""', 'type=""text/css""/>', '</head>', '<body>', '<!--', 'Generated', 'by', 'Doxygen', '1.7.4', '-->', '<div', 'id=""top"">', '<div', 'id=""titlearea"">', '<table', 'cellspacing=""0""', 'cellpadding=""0"">', '<tbody>', '<tr', 'style=""height:', '56px;"">', '<td', 'style=""padding-left:', '0.5em;"">', '<div', 'id=""projectname"">png++&#160;<span', 'id=""projectnumber"">0.2.1</span></div>', '</td>', '</tr>', '</tbody>', '</table>', '</div>', '<div', 'id=""navrow1""', 'class=""tabs"">', '<ul', 'class=""tablist"">', '<li><a', 'href=""index.html""><span>Main&#160;Page</span></a></li>', '<li><a', 'href=""namespaces.html""><span>Namespaces</span></a></li>', '<li><a', 'href=""annotated.html""><span>Classes</span></a></li>', '<li', 'class=""current""><a', 'href=""files.html""><span>Files</span></a></li>', '</ul>', '</div>', '<div', 'id=""navrow2""', 'class=""tabs2"">', '<ul', 'class=""tablist"">', '<li><a', 'href=""files.html""><span>File&#160;List</span></a></li>', '</ul>', '</div>', '<div', 'class=""header"">', '<div', 'class=""headertitle"">', '<div', 'class=""title"">tRNS.hpp</div>', '</div>', '</div>', '<div', 'class=""contents"">', '<a', 'href=""tRNS_8hpp.html"">Go', 'to', 'the', 'documentation', 'of', 'this', 'file.</a><div', 'class=""fragment""><pre', 'class=""fragment""><a', 'name=""l00001""></a>00001', '<span', 'class=""comment"">/*</span>', '<a', 'name=""l00002""></a>00002', '<span', 'class=""comment"">', '*', 'Copyright', '(C)', '2007,2008', 'Alex', 'Shulgin</span>', '<a', 'name=""l00003""></a>00003', '<span', 'class=""comment"">', '*</span>', '<a', 'name=""l00004""></a>00004', '<span', 'class=""comment"">', '*', 'This', 'file', 'is', 'part', 'of', 'png++', 'the', 'C++', 'wrapper', 'for', 'libpng.', 'PNG++', 'is', 'free</span>', '<a', 'name=""l00005""></a>00005', '<span', 'class=""comment"">', '*', 'software;', 'the', 'exact', 'copying', 'conditions', 'are', 'as', 'follows:</span>', '<a', 'name=""l00006""></a>00006', '<span', 'class=""comment"">', '*</span>', '<a', 'name=""l00007""></a>00007', '<span', 'class=""comment"">', '*', 'Redistribution', 'and', 'use', 'in', 'source', 'and', 'binary', 'forms,', 'with', 'or', 'without</span>', '<a', 'name=""l00008""></a>00008', '<span', 'class=""comment"">', '*', 'modification,', 'are', 'permitted', 'provided', 'that', 'the', 'following', 'conditions', 'are', 'met:</span>', '<a', 'name=""l00009""></a>00009', '<span', 'class=""comment"">', '*</span>', '<a', 'name=""l00010""></a>00010', '<span', 'class=""comment"">', '*', '1.', 'Redistributions', 'of', 'source', 'code', 'must', 'retain', 'the', 'above', 'copyright', 'notice,</span>', '<a', 'name=""l00011""></a>00011', '<span', 'class=""comment"">', '*', 'this', 'list', 'of', 'conditions', 'and', 'the', 'following', 'disclaimer.</span>', '<a', 'name=""l00012""></a>00012', '<span', 'class=""comment"">', '*</span>', '<a', 'name=""l00013""></a>00013', '<span', 'class=""comment"">', '*', '2.', 'Redistributions', 'in', 'binary', 'form', 'must', 'reproduce', 'the', 'above', 'copyright</span>', '<a', 'name=""l00014""></a>00014', '<span', 'class=""comment"">', '*', 'notice,', 'this', 'list', 'of', 'conditions', 'and', 'the', 'following', 'disclaimer', 'in', 'the</span>', '<a', 'name=""l00015""></a>00015', '<span', 'class=""comment"">', '*', 'documentation', 'and/or', 'other', 'materials', 'provided', 'with', 'the', 'distribution.</span>', '<a', 'name=""l00016""></a>00016', '<span', 'class=""comment"">', '*</span>', '<a', 'name=""l00017""></a>00017', '<span', 'class=""comment"">', '*', '3.', 'The', 'name', 'of', 'the', 'author', 'may', 'not', 'be', 'used', 'to', 'endorse', 'or', 'promote', 'products</span>', '<a', 'name=""l00018""></a>00018', '<span', 'class=""comment"">', '*', 'derived', 'from', 'this', 'software', 'without', 'specific', 'prior', 'written', 'permission.</span>', '<a', 'name=""l00019""></a>00019', '<span', 'class=""comment"">', '*</span>', '<a', 'name=""l00020""></a>00020', '<span', 'class=""comment"">', '*', 'THIS', 'SOFTWARE', 'IS', 'PROVIDED', 'BY', 'THE', 'AUTHOR', '``AS', 'IS&#39;&#39;', 'AND', 'ANY', 'EXPRESS', 'OR</span>', '<a', 'name=""l00021""></a>00021', '<span', 'class=""comment"">', '*', 'IMPLIED', 'WARRANTIES,', 'INCLUDING,', 'BUT', 'NOT', 'LIMITED', 'TO,', 'THE', 'IMPLIED', 'WARRANTIES</span>', '<a', 'name=""l00022""></a>00022', '<span', 'class=""comment"">', '*', 'OF', 'MERCHANTABILITY', 'AND', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE', 'ARE', 'DISCLAIMED.', 'IN</span>', '<a', 'name=""l00023""></a>00023', '<span', 'class=""comment"">', '*', 'NO', 'EVENT', 'SHALL', 'THE', 'AUTHOR', 'BE', 'LIABLE', 'FOR', 'ANY', 'DIRECT,', 'INDIRECT,', 'INCIDENTAL,</span>', '<a', 'name=""l00024""></a>00024', '<span', 'class=""comment"">', '*', 'SPECIAL,', 'EXEMPLARY,', 'OR', 'CONSEQUENTIAL', 'DAMAGES', '(INCLUDING,', 'BUT', 'NOT', 'LIMITED</span>', '<a', 'name=""l00025""></a>00025', '<span', 'class=""comment"">', '*', 'TO,', 'PROCUREMENT', 'OF', 'SUBSTITUTE', 'GOODS', 'OR', 'SERVICES;', 'LOSS', 'OF', 'USE,', 'DATA,', 'OR</span>', '<a', 'name=""l00026""></a>00026', '<span', 'class=""comment"">', '*', 'PROFITS;', 'OR', 'BUSINESS', 'INTERRUPTION)', 'HOWEVER', 'CAUSED', 'AND', 'ON', 'ANY', 'THEORY', 'OF</span>', '<a', 'name=""l00027""></a>00027', '<span', 'class=""comment"">', '*', 'LIABILITY,', 'WHETHER', 'IN', 'CONTRACT,', 'STRICT', 'LIABILITY,', 'OR', 'TORT', '(INCLUDING</span>', '<a', 'name=""l00028""></a>00028', '<span', 'class=""comment"">', '*', 'NEGLIGENCE', 'OR', 'OTHERWISE)', 'ARISING', 'IN', 'ANY', 'WAY', 'OUT', 'OF', 'THE', 'USE', 'OF', 'THIS</span>', '<a', 'name=""l00029""></a>00029', '<span', 'class=""comment"">', '*', 'SOFTWARE,', 'EVEN', 'IF', 'ADVISED', 'OF', 'THE', 'POSSIBILITY', 'OF', 'SUCH', 'DAMAGE.</span>', '<a', 'name=""l00030""></a>00030', '<span', 'class=""comment"">', '*/</span>', '<a', 'name=""l00031""></a>00031', '<span', 'class=""preprocessor"">#ifndef', 'PNGPP_TRNS_HPP_INCLUDED</span>', '<a', 'name=""l00032""></a>00032', '<span', 'class=""preprocessor""></span><span', 'class=""preprocessor"">#define', 'PNGPP_TRNS_HPP_INCLUDED</span>', '<a', 'name=""l00033""></a>00033', '<span', 'class=""preprocessor""></span>', '<a', 'name=""l00034""></a>00034', '<span', 'class=""preprocessor"">#include', '&lt;vector&gt;</span>', '<a', 'name=""l00035""></a>00035', '<span', 'class=""preprocessor"">#include', '&quot;<a', 'class=""code""', 'href=""color_8hpp.html"">color.hpp</a>&quot;</span>', '<a', 'name=""l00036""></a>00036', '<a', 'name=""l00037""></a>00037', '<span', 'class=""keyword"">namespace', '</span>png', '<a', 'name=""l00038""></a>00038', '{', '<a', 'name=""l00039""></a>00039', '<a', 'name=""l00044""></a><a', 'class=""code""', 'href=""namespacepng.html#ace5f679842b8b4e56df1448c62daf28e"">00044</a>', '<span', 'class=""keyword"">typedef</span>', 'std::vector&lt;', 'byte', '&gt;', '<a', 'class=""code""', 'href=""namespacepng.html#ace5f679842b8b4e56df1448c62daf28e""', 'title=""The', 'palette', 'transparency', 'map', 'type.', 'Currently', 'implemented', 'as', 'std::vector', 'of', 'png::byte."">tRNS</a>;', '<a', 'name=""l00045""></a>00045', '<a', 'name=""l00046""></a>00046', '}', '<span', 'class=""comment"">//', 'namespace', 'png</span>', '<a', 'name=""l00047""></a>00047', '<a', 'name=""l00048""></a>00048', '<span', 'class=""preprocessor"">#endif', '//', 'PNGPP_TRNS_HPP_INCLUDED</span>', '</pre></div></div>', '</div>', '<hr', 'class=""footer""/><address', 'class=""footer""><small>Generated', 'on', 'Thu', 'Apr', '21', '2011', '22:55:12', 'for', 'png++', 'by&#160;', '<a', 'href=""http://www.doxygen.org/index.html"">', '<img', 'class=""footer""', 'src=""doxygen.png""', 'alt=""doxygen""/></a>', '1.7.4', '</small></address>', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"/*
Copyright (c) 2014 Ableton AG, Berlin

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the ""Software""), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/

#pragma once

#include <memory>
#include <type_traits>

namespace estd
{

template <class T, class... Args>
auto make_unique(Args&&... args) ->
  typename std::enable_if<!std::is_array<T>::value, std::unique_ptr<T> >::type
{
  return std::unique_ptr<T>{new T(std::forward<Args>(args)...)};
}

template <class T>
auto make_unique(std::size_t size) ->
  typename std::enable_if<std::is_array<T>::value, std::unique_ptr<T> >::type
{
  return std::unique_ptr<T>{new typename std::remove_extent<T>::type[size]()};
}

} // namespace estd
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', 'Copyright', '(c)', '2014', 'Ableton', 'AG,', 'Berlin', 'Permission', 'is', 'hereby', 'granted,', 'free', 'of', 'charge,', 'to', 'any', 'person', 'obtaining', 'a', 'copy', 'of', 'this', 'software', 'and', 'associated', 'documentation', 'files', '(the', '""Software""),', 'to', 'deal', 'in', 'the', 'Software', 'without', 'restriction,', 'including', 'without', 'limitation', 'the', 'rights', 'to', 'use,', 'copy,', 'modify,', 'merge,', 'publish,', 'distribute,', 'sublicense,', 'and/or', 'sell', 'copies', 'of', 'the', 'Software,', 'and', 'to', 'permit', 'persons', 'to', 'whom', 'the', 'Software', 'is', 'furnished', 'to', 'do', 'so,', 'subject', 'to', 'the', 'following', 'conditions:', 'The', 'above', 'copyright', 'notice', 'and', 'this', 'permission', 'notice', 'shall', 'be', 'included', 'in', 'all', 'copies', 'or', 'substantial', 'portions', 'of', 'the', 'Software.', 'THE', 'SOFTWARE', 'IS', 'PROVIDED', '""AS', 'IS"",', 'WITHOUT', 'WARRANTY', 'OF', 'ANY', 'KIND,', 'EXPRESS', 'OR', 'IMPLIED,', 'INCLUDING', 'BUT', 'NOT', 'LIMITED', 'TO', 'THE', 'WARRANTIES', 'OF', 'MERCHANTABILITY,', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE', 'AND', 'NONINFRINGEMENT.', 'IN', 'NO', 'EVENT', 'SHALL', 'THE', 'AUTHORS', 'OR', 'COPYRIGHT', 'HOLDERS', 'BE', 'LIABLE', 'FOR', 'ANY', 'CLAIM,', 'DAMAGES', 'OR', 'OTHER', 'LIABILITY,', 'WHETHER', 'IN', 'AN', 'ACTION', 'OF', 'CONTRACT,', 'TORT', 'OR', 'OTHERWISE,', 'ARISING', 'FROM,', 'OUT', 'OF', 'OR', 'IN', 'CONNECTION', 'WITH', 'THE', 'SOFTWARE', 'OR', 'THE', 'USE', 'OR', 'OTHER', 'DEALINGS', 'IN', 'THE', 'SOFTWARE.', '*/', '#pragma', 'once', '#include', '<memory>', '#include', '<type_traits>', 'namespace', 'estd', '{', 'template', '<class', 'T,', 'class...', 'Args>', 'auto', 'make_unique(Args&&...', 'args)', '->', 'typename', 'std::enable_if<!std::is_array<T>::value,', 'std::unique_ptr<T>', '>::type', '{', 'return', 'std::unique_ptr<T>{new', 'T(std::forward<Args>(args)...)};', '}', 'template', '<class', 'T>', 'auto', 'make_unique(std::size_t', 'size)', '->', 'typename', 'std::enable_if<std::is_array<T>::value,', 'std::unique_ptr<T>', '>::type', '{', 'return', 'std::unique_ptr<T>{new', 'typename', 'std::remove_extent<T>::type[size]()};', '}', '}', '//', 'namespace', 'estd', '```']",challenge not surrounded by ''': ,
"#!/usr/bin/env python3

# Migration of the unspecified region value
#
# measurements: TEMPERATURE, HUMIDITY
# {region=DEFAULT} => {region=A}
# drop {region=DEFAULT}

import os
import logging
import argparse
import time
import pprint
from influxdb import InfluxDBClient
from influxdb.exceptions import InfluxDBServerError


def logPretty(logger, value, message=None, level=logging.INFO):
    fmt = ''
    if message:
        fmt += message
    fmt += os.linesep + '%s'
    logger.log(level, fmt, pprint.pformat(value))


logging.basicConfig(format='%(asctime)s [%(name)s] [%(levelname)s] %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

cli_arg_parser = argparse.ArgumentParser()
cli_arg_parser.add_argument('--db-password-file', required=True, help='DB password fileB')
cli_args = vars(cli_arg_parser.parse_args())


def convert(db_client, measurement, src_region, dst_region, limit=20000):
    src_count = next(db_client.query('SELECT count(value) FROM {} WHERE ""region"" = \'{}\''.format(measurement, src_region)).get_points(), {}).get('count', 0)
    dst_count_start = next(db_client.query('SELECT count(value) FROM {} WHERE ""region"" = \'{}\''.format(measurement, dst_region)).get_points(), {}).get('count', 0)
    logger.info('Records to process: %d', src_count)
    for offset in range(0, src_count, limit):
        src_points = db_client.query(
            'SELECT * FROM {} WHERE ""region"" = \'{}\' LIMIT {} OFFSET {}'.format(measurement, src_region, limit, offset)
        ).get_points()
        dst_points = [
            {
                'measurement': measurement,
                'time': i['time'],
                'tags': {
                    'location': i['location'],
                    'region': dst_region,
                },
                'fields': {
                    'value': float(i['value']),
                }
            }
            for i in src_points
        ]
        counter_stop = 5
        for counter in range(0, counter_stop):
            try:
                db_client.write_points(
                    points=dst_points,
                )
                break
            except InfluxDBServerError as e:
                logger.warn('DB write problem: {}', str(e))
                if counter + 1 >= counter_stop:
                    raise
                else:
                    time.sleep(10)
    dst_count_stop = next(db_client.query('SELECT count(value) FROM {} WHERE ""region"" = \'{}\''.format(measurement, dst_region)).get_points(), {}).get('count', 0)
    logger.info('Updated records: %d', dst_count_stop - dst_count_start)
    db_client.delete_series(measurement=measurement, tags={'region':src_region})


db_settings = {
    'host': 'localhost',
    'port': '8086',
    'database': 'butler',
    'username': 'butler',
    'password': None,
}
with open(cli_args['db_password_file'], 'r') as f:
    db_settings['password'] = f.read().replace('\n', '')
db_client = InfluxDBClient(**db_settings)

for i in db_client.get_list_measurements():
    measurement = i['name']
    logger.info('Processing measurement: %s', measurement)
    for src_region,dst_region in [('DEFAULT', 'A'),]:
        convert(
            db_client=db_client,
            measurement=measurement,
            src_region=src_region,
            dst_region=dst_region,
        )
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/usr/bin/env', 'python3', '#', 'Migration', 'of', 'the', 'unspecified', 'region', 'value', '#', '#', 'measurements:', 'TEMPERATURE,', 'HUMIDITY', '#', '{region=DEFAULT}', '=>', '{region=A}', '#', 'drop', '{region=DEFAULT}', 'import', 'os', 'import', 'logging', 'import', 'argparse', 'import', 'time', 'import', 'pprint', 'from', 'influxdb', 'import', 'InfluxDBClient', 'from', 'influxdb.exceptions', 'import', 'InfluxDBServerError', 'def', 'logPretty(logger,', 'value,', 'message=None,', 'level=logging.INFO):', 'fmt', '=', ""''"", 'if', 'message:', 'fmt', '+=', 'message', 'fmt', '+=', 'os.linesep', '+', ""'%s'"", 'logger.log(level,', 'fmt,', 'pprint.pformat(value))', ""logging.basicConfig(format='%(asctime)s"", '[%(name)s]', '[%(levelname)s]', ""%(message)s',"", 'level=logging.INFO)', 'logger', '=', 'logging.getLogger(__name__)', 'cli_arg_parser', '=', 'argparse.ArgumentParser()', ""cli_arg_parser.add_argument('--db-password-file',"", 'required=True,', ""help='DB"", 'password', ""fileB')"", 'cli_args', '=', 'vars(cli_arg_parser.parse_args())', 'def', 'convert(db_client,', 'measurement,', 'src_region,', 'dst_region,', 'limit=20000):', 'src_count', '=', ""next(db_client.query('SELECT"", 'count(value)', 'FROM', '{}', 'WHERE', '""region""', '=', ""\\'{}\\''.format(measurement,"", 'src_region)).get_points(),', ""{}).get('count',"", '0)', 'dst_count_start', '=', ""next(db_client.query('SELECT"", 'count(value)', 'FROM', '{}', 'WHERE', '""region""', '=', ""\\'{}\\''.format(measurement,"", 'dst_region)).get_points(),', ""{}).get('count',"", '0)', ""logger.info('Records"", 'to', 'process:', ""%d',"", 'src_count)', 'for', 'offset', 'in', 'range(0,', 'src_count,', 'limit):', 'src_points', '=', 'db_client.query(', ""'SELECT"", '*', 'FROM', '{}', 'WHERE', '""region""', '=', ""\\'{}\\'"", 'LIMIT', '{}', 'OFFSET', ""{}'.format(measurement,"", 'src_region,', 'limit,', 'offset)', ').get_points()', 'dst_points', '=', '[', '{', ""'measurement':"", 'measurement,', ""'time':"", ""i['time'],"", ""'tags':"", '{', ""'location':"", ""i['location'],"", ""'region':"", 'dst_region,', '},', ""'fields':"", '{', ""'value':"", ""float(i['value']),"", '}', '}', 'for', 'i', 'in', 'src_points', ']', 'counter_stop', '=', '5', 'for', 'counter', 'in', 'range(0,', 'counter_stop):', 'try:', 'db_client.write_points(', 'points=dst_points,', ')', 'break', 'except', 'InfluxDBServerError', 'as', 'e:', ""logger.warn('DB"", 'write', 'problem:', ""{}',"", 'str(e))', 'if', 'counter', '+', '1', '>=', 'counter_stop:', 'raise', 'else:', 'time.sleep(10)', 'dst_count_stop', '=', ""next(db_client.query('SELECT"", 'count(value)', 'FROM', '{}', 'WHERE', '""region""', '=', ""\\'{}\\''.format(measurement,"", 'dst_region)).get_points(),', ""{}).get('count',"", '0)', ""logger.info('Updated"", 'records:', ""%d',"", 'dst_count_stop', '-', 'dst_count_start)', 'db_client.delete_series(measurement=measurement,', ""tags={'region':src_region})"", 'db_settings', '=', '{', ""'host':"", ""'localhost',"", ""'port':"", ""'8086',"", ""'database':"", ""'butler',"", ""'username':"", ""'butler',"", ""'password':"", 'None,', '}', 'with', ""open(cli_args['db_password_file'],"", ""'r')"", 'as', 'f:', ""db_settings['password']"", '=', ""f.read().replace('\\n',"", ""'')"", 'db_client', '=', 'InfluxDBClient(**db_settings)', 'for', 'i', 'in', 'db_client.get_list_measurements():', 'measurement', '=', ""i['name']"", ""logger.info('Processing"", 'measurement:', ""%s',"", 'measurement)', 'for', 'src_region,dst_region', 'in', ""[('DEFAULT',"", ""'A'),]:"", 'convert(', 'db_client=db_client,', 'measurement=measurement,', 'src_region=src_region,', 'dst_region=dst_region,', ')', '```']",challenge not surrounded by ''': ,
"package ru.adelf.idea.dotenv.ruby;

import com.intellij.psi.PsiElement;
import com.intellij.psi.PsiRecursiveElementVisitor;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.plugins.ruby.ruby.lang.psi.basicTypes.stringLiterals.RStringLiteral;
import org.jetbrains.plugins.ruby.ruby.lang.psi.expressions.RArrayIndexing;
import org.jetbrains.plugins.ruby.ruby.lang.psi.variables.RConstant;
import ru.adelf.idea.dotenv.models.KeyUsagePsiElement;

import java.util.Collection;
import java.util.HashSet;
import java.util.Objects;

class RubyEnvironmentCallsVisitor extends PsiRecursiveElementVisitor {
    final private Collection<KeyUsagePsiElement> collectedItems = new HashSet<>();

    @Override
    public void visitElement(PsiElement element) {
        if(element instanceof RArrayIndexing) {
            this.visitFunction((RArrayIndexing) element);
        }

        super.visitElement(element);
    }

    private void visitFunction(RArrayIndexing expression) {
        PsiElement receiver = expression.getReceiver();

        if(!(receiver instanceof RConstant)) {
            return;
        }

        if(receiver.getFirstChild() == null) {
            return;
        }

        if(!Objects.equals(receiver.getFirstChild().getText(), ""ENV"")) {
            return;
        }

        PsiElement stringLiteral = expression.getIndexes().get(0);

        if(stringLiteral == null) return;

        if(!(stringLiteral instanceof RStringLiteral)) return;

        String key = ((RStringLiteral)stringLiteral).getContent();

        collectedItems.add(new KeyUsagePsiElement(key, stringLiteral));
    }

    @NotNull
    Collection<KeyUsagePsiElement> getCollectedItems() {
        return collectedItems;
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'ru.adelf.idea.dotenv.ruby;', 'import', 'com.intellij.psi.PsiElement;', 'import', 'com.intellij.psi.PsiRecursiveElementVisitor;', 'import', 'org.jetbrains.annotations.NotNull;', 'import', 'org.jetbrains.plugins.ruby.ruby.lang.psi.basicTypes.stringLiterals.RStringLiteral;', 'import', 'org.jetbrains.plugins.ruby.ruby.lang.psi.expressions.RArrayIndexing;', 'import', 'org.jetbrains.plugins.ruby.ruby.lang.psi.variables.RConstant;', 'import', 'ru.adelf.idea.dotenv.models.KeyUsagePsiElement;', 'import', 'java.util.Collection;', 'import', 'java.util.HashSet;', 'import', 'java.util.Objects;', 'class', 'RubyEnvironmentCallsVisitor', 'extends', 'PsiRecursiveElementVisitor', '{', 'final', 'private', 'Collection<KeyUsagePsiElement>', 'collectedItems', '=', 'new', 'HashSet<>();', '@Override', 'public', 'void', 'visitElement(PsiElement', 'element)', '{', 'if(element', 'instanceof', 'RArrayIndexing)', '{', 'this.visitFunction((RArrayIndexing)', 'element);', '}', 'super.visitElement(element);', '}', 'private', 'void', 'visitFunction(RArrayIndexing', 'expression)', '{', 'PsiElement', 'receiver', '=', 'expression.getReceiver();', 'if(!(receiver', 'instanceof', 'RConstant))', '{', 'return;', '}', 'if(receiver.getFirstChild()', '==', 'null)', '{', 'return;', '}', 'if(!Objects.equals(receiver.getFirstChild().getText(),', '""ENV""))', '{', 'return;', '}', 'PsiElement', 'stringLiteral', '=', 'expression.getIndexes().get(0);', 'if(stringLiteral', '==', 'null)', 'return;', 'if(!(stringLiteral', 'instanceof', 'RStringLiteral))', 'return;', 'String', 'key', '=', '((RStringLiteral)stringLiteral).getContent();', 'collectedItems.add(new', 'KeyUsagePsiElement(key,', 'stringLiteral));', '}', '@NotNull', 'Collection<KeyUsagePsiElement>', 'getCollectedItems()', '{', 'return', 'collectedItems;', '}', '}', '```']",challenge not surrounded by ''': ,
"from django.contrib.auth.models import User
from django.core.urlresolvers import reverse
from django.test import TransactionTestCase
from core.models import Channel
from channel_twitter.models import TwitterAccount


class ViewTest(TransactionTestCase):

    def setUp(self):

        Channel(name=""Dropbox"",
                image=""/static/channels/dropbox.png"",
                color=""#007ee5"",
                font_color=""#ffffff"").save()
        Channel(name=""Twitter"",
                image=""/static/channels/twitter.png"",
                color=""#55acee"",
                font_color=""#ffffff"").save()

        test_user = User.objects.create_user(""testuser"", password=""testtest"")

        TwitterAccount(user=test_user).save()

        self.client.force_login(test_user)

    def test_get(self):

        res = self.client.get(reverse(""channels:list""))


class DetailViewTest(TransactionTestCase):

    def setUp(self):
        Channel(name=""Dropbox"",
                image=""/static/channels/dropbox.png"",
                color=""#007ee5"",
                font_color=""#ffffff"").save()
        Channel(name=""Twitter"",
                image=""/static/channels/twitter.png"",
                color=""#55acee"",
                font_color=""#ffffff"").save()

        test_user = User.objects.create_user(""testuser"", password=""testtest"")

        TwitterAccount(user=test_user).save()

        self.client.force_login(test_user)

    def test_get__correct(self):

        res = self.client.get(reverse(""channels:detail"", args=['twitter']))

    def test_get__not_existent_channel(self):

        res = self.client.get(reverse(""channels:detail"", args=['notexist']))
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```from', 'django.contrib.auth.models', 'import', 'User', 'from', 'django.core.urlresolvers', 'import', 'reverse', 'from', 'django.test', 'import', 'TransactionTestCase', 'from', 'core.models', 'import', 'Channel', 'from', 'channel_twitter.models', 'import', 'TwitterAccount', 'class', 'ViewTest(TransactionTestCase):', 'def', 'setUp(self):', 'Channel(name=""Dropbox"",', 'image=""/static/channels/dropbox.png"",', 'color=""#007ee5"",', 'font_color=""#ffffff"").save()', 'Channel(name=""Twitter"",', 'image=""/static/channels/twitter.png"",', 'color=""#55acee"",', 'font_color=""#ffffff"").save()', 'test_user', '=', 'User.objects.create_user(""testuser"",', 'password=""testtest"")', 'TwitterAccount(user=test_user).save()', 'self.client.force_login(test_user)', 'def', 'test_get(self):', 'res', '=', 'self.client.get(reverse(""channels:list""))', 'class', 'DetailViewTest(TransactionTestCase):', 'def', 'setUp(self):', 'Channel(name=""Dropbox"",', 'image=""/static/channels/dropbox.png"",', 'color=""#007ee5"",', 'font_color=""#ffffff"").save()', 'Channel(name=""Twitter"",', 'image=""/static/channels/twitter.png"",', 'color=""#55acee"",', 'font_color=""#ffffff"").save()', 'test_user', '=', 'User.objects.create_user(""testuser"",', 'password=""testtest"")', 'TwitterAccount(user=test_user).save()', 'self.client.force_login(test_user)', 'def', 'test_get__correct(self):', 'res', '=', 'self.client.get(reverse(""channels:detail"",', ""args=['twitter']))"", 'def', 'test_get__not_existent_channel(self):', 'res', '=', 'self.client.get(reverse(""channels:detail"",', ""args=['notexist']))"", '```']",challenge not surrounded by ''': ,
"package com.dianping.paas.core.dto.response;

import lombok.Data;
import lombok.ToString;

/**
 * Created by yuchao on 11/23/15.
 */

@Data
@ToString(callSuper = true)
public class DockerfileResponse extends Response {
    /**
     * 基于dockerfile模板和参数build出来的镜像id
     */
    private String imageId;

    /**
     * 基于dockerfile模板和参数生成的dockerfile完整内容
     */
    private String dockerfileContent;

    /**
     * docker pull 的URI
     */
    private String repository;
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.dianping.paas.core.dto.response;', 'import', 'lombok.Data;', 'import', 'lombok.ToString;', '/**', '*', 'Created', 'by', 'yuchao', 'on', '11/23/15.', '*/', '@Data', '@ToString(callSuper', '=', 'true)', 'public', 'class', 'DockerfileResponse', 'extends', 'Response', '{', '/**', '*', '基于dockerfile模板和参数build出来的镜像id', '*/', 'private', 'String', 'imageId;', '/**', '*', '基于dockerfile模板和参数生成的dockerfile完整内容', '*/', 'private', 'String', 'dockerfileContent;', '/**', '*', 'docker', 'pull', '的URI', '*/', 'private', 'String', 'repository;', '}', '```']",challenge not surrounded by ''': ,
"{% load i18n admin_static %}<!DOCTYPE html>
{% get_current_language as LANGUAGE_CODE %}{% get_current_language_bidi as LANGUAGE_BIDI %}
<html lang=""zh_CN"" >
<head>
<title>{% block title %}{% endblock %}</title>
<link rel=""stylesheet"" type=""text/css"" href=""{% block stylesheet %}{% static ""admin/css/base.css"" %}{% endblock %}"" />
{% block extrastyle %}{% endblock %}
{% if LANGUAGE_BIDI %}<link rel=""stylesheet"" type=""text/css"" href=""{% block stylesheet_rtl %}{% static ""admin/css/rtl.css"" %}{% endblock %}"" />{% endif %}
{% block extrahead %}{% endblock %}
{% block blockbots %}<meta name=""robots"" content=""NONE,NOARCHIVE"" />{% endblock %}
</head>

<body class=""{% if is_popup %}popup {% endif %}{% block bodyclass %}{% endblock %}""
  data-admin-utc-offset=""{% now ""Z"" %}"">

<!-- Container -->
<div id=""container"">{% csrf_token %}

    {% if not is_popup %}
    <!-- Header -->
    <div id=""header"">
        <div id=""branding"">
        {% block branding %}{% endblock %}
        </div>
        {% block usertools %}
        {% if has_permission %}
        <div id=""user-tools"">
            {% block welcome-msg %}
                {% trans 'Welcome,' %}
                <strong>{% firstof user.get_short_name user.get_username %}</strong>.
            {% endblock %}
            {% block userlinks %}
                {% if site_url %}
                    <a href=""{{ site_url }}"">{% trans 'View site' %}</a> /
                {% endif %}
                {% if user.is_active and user.is_staff %}
                    {% url 'django-admindocs-docroot' as docsroot %}
                    {% if docsroot %}
                        <a href=""{{ docsroot }}"">{% trans 'Documentation' %}</a> /
                    {% endif %}
                {% endif %}
                {% if user.has_usable_password %}
                <a href=""{% url 'admin:password_change' %}"">{% trans 'Change password' %}</a> /
                {% endif %}
                <a href=""{% url 'admin:logout' %}"">{% trans 'Log out' %}</a>
            {% endblock %}
        </div>
        {% endif %}
        {% endblock %}
        {% block nav-global %}{% endblock %}
    </div>
    <!-- END Header -->
    {% block breadcrumbs %}
    <div class=""breadcrumbs"">
    <a href=""{% url 'admin:index' %}"">{% trans 'Home' %}</a>
    {% if title %} &rsaquo; {{ title }}{% endif %}
    </div>
    {% endblock %}
    {% endif %}

    {% block messages %}
        {% if messages %}
        <ul class=""messagelist"">{% for message in messages %}
          <li{% if message.tags %} class=""{{ message.tags }}""{% endif %}>{{ message|capfirst }}</li>
        {% endfor %}</ul>
        {% endif %}
    {% endblock messages %}

    <!-- Content -->
    <div id=""content"" class=""{% block coltype %}colM{% endblock %}"">
        {% block pretitle %}{% endblock %}
        {% block content_title %}{% if title %}<h1>{{ title }}</h1>{% endif %}{% endblock %}
        {% block content %}
        {% block object-tools %}{% endblock %}
        {{ content }}
        {% endblock %}
        {% block sidebar %}{% endblock %}
        <br class=""clear"" />
    </div>
    <!-- END Content -->

    {% block footer %}<div id=""footer""></div>{% endblock %}
</div>
<!-- END Container -->

</body>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```{%', 'load', 'i18n', 'admin_static', '%}<!DOCTYPE', 'html>', '{%', 'get_current_language', 'as', 'LANGUAGE_CODE', '%}{%', 'get_current_language_bidi', 'as', 'LANGUAGE_BIDI', '%}', '<html', 'lang=""zh_CN""', '>', '<head>', '<title>{%', 'block', 'title', '%}{%', 'endblock', '%}</title>', '<link', 'rel=""stylesheet""', 'type=""text/css""', 'href=""{%', 'block', 'stylesheet', '%}{%', 'static', '""admin/css/base.css""', '%}{%', 'endblock', '%}""', '/>', '{%', 'block', 'extrastyle', '%}{%', 'endblock', '%}', '{%', 'if', 'LANGUAGE_BIDI', '%}<link', 'rel=""stylesheet""', 'type=""text/css""', 'href=""{%', 'block', 'stylesheet_rtl', '%}{%', 'static', '""admin/css/rtl.css""', '%}{%', 'endblock', '%}""', '/>{%', 'endif', '%}', '{%', 'block', 'extrahead', '%}{%', 'endblock', '%}', '{%', 'block', 'blockbots', '%}<meta', 'name=""robots""', 'content=""NONE,NOARCHIVE""', '/>{%', 'endblock', '%}', '</head>', '<body', 'class=""{%', 'if', 'is_popup', '%}popup', '{%', 'endif', '%}{%', 'block', 'bodyclass', '%}{%', 'endblock', '%}""', 'data-admin-utc-offset=""{%', 'now', '""Z""', '%}"">', '<!--', 'Container', '-->', '<div', 'id=""container"">{%', 'csrf_token', '%}', '{%', 'if', 'not', 'is_popup', '%}', '<!--', 'Header', '-->', '<div', 'id=""header"">', '<div', 'id=""branding"">', '{%', 'block', 'branding', '%}{%', 'endblock', '%}', '</div>', '{%', 'block', 'usertools', '%}', '{%', 'if', 'has_permission', '%}', '<div', 'id=""user-tools"">', '{%', 'block', 'welcome-msg', '%}', '{%', 'trans', ""'Welcome,'"", '%}', '<strong>{%', 'firstof', 'user.get_short_name', 'user.get_username', '%}</strong>.', '{%', 'endblock', '%}', '{%', 'block', 'userlinks', '%}', '{%', 'if', 'site_url', '%}', '<a', 'href=""{{', 'site_url', '}}"">{%', 'trans', ""'View"", ""site'"", '%}</a>', '/', '{%', 'endif', '%}', '{%', 'if', 'user.is_active', 'and', 'user.is_staff', '%}', '{%', 'url', ""'django-admindocs-docroot'"", 'as', 'docsroot', '%}', '{%', 'if', 'docsroot', '%}', '<a', 'href=""{{', 'docsroot', '}}"">{%', 'trans', ""'Documentation'"", '%}</a>', '/', '{%', 'endif', '%}', '{%', 'endif', '%}', '{%', 'if', 'user.has_usable_password', '%}', '<a', 'href=""{%', 'url', ""'admin:password_change'"", '%}"">{%', 'trans', ""'Change"", ""password'"", '%}</a>', '/', '{%', 'endif', '%}', '<a', 'href=""{%', 'url', ""'admin:logout'"", '%}"">{%', 'trans', ""'Log"", ""out'"", '%}</a>', '{%', 'endblock', '%}', '</div>', '{%', 'endif', '%}', '{%', 'endblock', '%}', '{%', 'block', 'nav-global', '%}{%', 'endblock', '%}', '</div>', '<!--', 'END', 'Header', '-->', '{%', 'block', 'breadcrumbs', '%}', '<div', 'class=""breadcrumbs"">', '<a', 'href=""{%', 'url', ""'admin:index'"", '%}"">{%', 'trans', ""'Home'"", '%}</a>', '{%', 'if', 'title', '%}', '&rsaquo;', '{{', 'title', '}}{%', 'endif', '%}', '</div>', '{%', 'endblock', '%}', '{%', 'endif', '%}', '{%', 'block', 'messages', '%}', '{%', 'if', 'messages', '%}', '<ul', 'class=""messagelist"">{%', 'for', 'message', 'in', 'messages', '%}', '<li{%', 'if', 'message.tags', '%}', 'class=""{{', 'message.tags', '}}""{%', 'endif', '%}>{{', 'message|capfirst', '}}</li>', '{%', 'endfor', '%}</ul>', '{%', 'endif', '%}', '{%', 'endblock', 'messages', '%}', '<!--', 'Content', '-->', '<div', 'id=""content""', 'class=""{%', 'block', 'coltype', '%}colM{%', 'endblock', '%}"">', '{%', 'block', 'pretitle', '%}{%', 'endblock', '%}', '{%', 'block', 'content_title', '%}{%', 'if', 'title', '%}<h1>{{', 'title', '}}</h1>{%', 'endif', '%}{%', 'endblock', '%}', '{%', 'block', 'content', '%}', '{%', 'block', 'object-tools', '%}{%', 'endblock', '%}', '{{', 'content', '}}', '{%', 'endblock', '%}', '{%', 'block', 'sidebar', '%}{%', 'endblock', '%}', '<br', 'class=""clear""', '/>', '</div>', '<!--', 'END', 'Content', '-->', '{%', 'block', 'footer', '%}<div', 'id=""footer""></div>{%', 'endblock', '%}', '</div>', '<!--', 'END', 'Container', '-->', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"package org.multibit.hd.core.events;

import org.multibit.hd.core.dto.BitcoinNetworkSummary;

/**
 * <p>Event to provide the following to application API:</p>
 * <ul>
 * <li>Notification of a change to the Bitcoin network status</li>
 * </ul>
 *
 * <p>This is an infrequent event</p>
 *
 * @since 0.0.1
 *         
 */
public class BitcoinNetworkChangedEvent implements CoreEvent {

  private final BitcoinNetworkSummary summary;

  public BitcoinNetworkChangedEvent(BitcoinNetworkSummary summary) {
    this.summary = summary;
  }

  /**
   * @return The summary
   */
  public BitcoinNetworkSummary getSummary() {
    return summary;
  }

  @Override
  public String toString() {
    return ""BitcoinNetworkChangedEvent{"" +
            ""summary="" + summary +
            '}';
  }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'org.multibit.hd.core.events;', 'import', 'org.multibit.hd.core.dto.BitcoinNetworkSummary;', '/**', '*', '<p>Event', 'to', 'provide', 'the', 'following', 'to', 'application', 'API:</p>', '*', '<ul>', '*', '<li>Notification', 'of', 'a', 'change', 'to', 'the', 'Bitcoin', 'network', 'status</li>', '*', '</ul>', '*', '*', '<p>This', 'is', 'an', 'infrequent', 'event</p>', '*', '*', '@since', '0.0.1', '*', '*/', 'public', 'class', 'BitcoinNetworkChangedEvent', 'implements', 'CoreEvent', '{', 'private', 'final', 'BitcoinNetworkSummary', 'summary;', 'public', 'BitcoinNetworkChangedEvent(BitcoinNetworkSummary', 'summary)', '{', 'this.summary', '=', 'summary;', '}', '/**', '*', '@return', 'The', 'summary', '*/', 'public', 'BitcoinNetworkSummary', 'getSummary()', '{', 'return', 'summary;', '}', '@Override', 'public', 'String', 'toString()', '{', 'return', '""BitcoinNetworkChangedEvent{""', '+', '""summary=""', '+', 'summary', '+', ""'}';"", '}', '}', '```']",challenge not surrounded by ''': ,
"#!/bin/bash
# ninecontroller を自動起動する設定にします
#
# Usage:
#   time curl -L 'https://git.io/vX6Rc' | bash

set -e -u

################################################################################
# 1. 基本環境のセットアップ
################################################################################

curl ""${TEMPLATE_REPOSITORY:-""https://raw.githubusercontent.com/imos/isucon-template/${TEMPLATE_BRANCH:-""master""}/base.sh""}"" | bash
# エディタのカラーリング調整用 → ""

################################################################################
# 2. イメージのダウンロード
################################################################################

curl -L ""https://storage.googleapis.com/imoz-docker-tokyo/ninecontroller/${IMAGE_BRANCH:-""master""}.tar.gz"" | gzip -d | sudo docker load

################################################################################
# 3. ninecontroller の自動起動
################################################################################

sudo mkdir -p '/usr/local/ninecontroller'
if [ ! -f /usr/local/ninecontroller/Dockerfile ]; then
  cat <<'EOM' | sudo tee '/usr/local/ninecontroller/Dockerfile'
FROM imos/ninecontroller
MAINTAINER imos

RUN touch /.foo

CMD /usr/bin/supervisord --nodaemon
EOM
fi

cat <<'EOM' | sudo tee /etc/init.d/ninecontroller
#!/bin/bash
# ninecontroller用init.dスクリプト
# ※ Dockerより後に起動する必要があるので /etc/init.d/docker の優先度を確認すること
#
# chkconfig:   2345 96 04
# description: Daemon for docker.com

start() {
  sudo docker build --tag local/ninecontroller /usr/local/ninecontroller
  sudo docker rm -f ninecontroller || true
  sudo docker run --privileged \
      --volume=/var/run/docker.sock:/var/run/docker.sock \
      --volume=/home/ninetan:/home/ninetan \
      --name=ninecontroller \
      --restart=always \
      --net=host \
      --pid=host \
      --detach \
      local/ninecontroller
}

stop() {
  sudo docker rm -f ninecontroller || true
}

case ""$1"" in
  start|stop) $1 ;;
  status) sudo docker ps --filter=name=ninecontroller ;;
  restart) start ;;
  *) echo ""Usage: $0 {start|stop|restart|status}""; exit 2 ;;
esac

exit $?
EOM
sudo chmod +x /etc/init.d/ninecontroller
if which chkconfig; then
  sudo chkconfig --add ninecontroller
else
  sudo update-rc.d ninecontroller defaults
fi
sudo service ninecontroller restart
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/bin/bash', '#', 'ninecontroller', 'を自動起動する設定にします', '#', '#', 'Usage:', '#', 'time', 'curl', '-L', ""'https://git.io/vX6Rc'"", '|', 'bash', 'set', '-e', '-u', '################################################################################', '#', '1.', '基本環境のセットアップ', '################################################################################', 'curl', '""${TEMPLATE_REPOSITORY:-""https://raw.githubusercontent.com/imos/isucon-template/${TEMPLATE_BRANCH:-""master""}/base.sh""}""', '|', 'bash', '#', 'エディタのカラーリング調整用', '→', '""', '################################################################################', '#', '2.', 'イメージのダウンロード', '################################################################################', 'curl', '-L', '""https://storage.googleapis.com/imoz-docker-tokyo/ninecontroller/${IMAGE_BRANCH:-""master""}.tar.gz""', '|', 'gzip', '-d', '|', 'sudo', 'docker', 'load', '################################################################################', '#', '3.', 'ninecontroller', 'の自動起動', '################################################################################', 'sudo', 'mkdir', '-p', ""'/usr/local/ninecontroller'"", 'if', '[', '!', '-f', '/usr/local/ninecontroller/Dockerfile', '];', 'then', 'cat', ""<<'EOM'"", '|', 'sudo', 'tee', ""'/usr/local/ninecontroller/Dockerfile'"", 'FROM', 'imos/ninecontroller', 'MAINTAINER', 'imos', 'RUN', 'touch', '/.foo', 'CMD', '/usr/bin/supervisord', '--nodaemon', 'EOM', 'fi', 'cat', ""<<'EOM'"", '|', 'sudo', 'tee', '/etc/init.d/ninecontroller', '#!/bin/bash', '#', 'ninecontroller用init.dスクリプト', '#', '※', 'Dockerより後に起動する必要があるので', '/etc/init.d/docker', 'の優先度を確認すること', '#', '#', 'chkconfig:', '2345', '96', '04', '#', 'description:', 'Daemon', 'for', 'docker.com', 'start()', '{', 'sudo', 'docker', 'build', '--tag', 'local/ninecontroller', '/usr/local/ninecontroller', 'sudo', 'docker', 'rm', '-f', 'ninecontroller', '||', 'true', 'sudo', 'docker', 'run', '--privileged', '\\', '--volume=/var/run/docker.sock:/var/run/docker.sock', '\\', '--volume=/home/ninetan:/home/ninetan', '\\', '--name=ninecontroller', '\\', '--restart=always', '\\', '--net=host', '\\', '--pid=host', '\\', '--detach', '\\', 'local/ninecontroller', '}', 'stop()', '{', 'sudo', 'docker', 'rm', '-f', 'ninecontroller', '||', 'true', '}', 'case', '""$1""', 'in', 'start|stop)', '$1', ';;', 'status)', 'sudo', 'docker', 'ps', '--filter=name=ninecontroller', ';;', 'restart)', 'start', ';;', '*)', 'echo', '""Usage:', '$0', '{start|stop|restart|status}"";', 'exit', '2', ';;', 'esac', 'exit', '$?', 'EOM', 'sudo', 'chmod', '+x', '/etc/init.d/ninecontroller', 'if', 'which', 'chkconfig;', 'then', 'sudo', 'chkconfig', '--add', 'ninecontroller', 'else', 'sudo', 'update-rc.d', 'ninecontroller', 'defaults', 'fi', 'sudo', 'service', 'ninecontroller', 'restart', '```']",challenge not surrounded by ''': ,
"package db.bean.performance_schema;

import java.util.Date;

/* SELECT CHANNEL_NAME AS channelName, GROUP_NAME AS groupName, SOURCE_UUID AS sourceUuid, THREAD_ID AS threadId, SERVICE_STATE AS serviceState, COUNT_RECEIVED_HEARTBEATS AS countReceivedHeartbeats, LAST_HEARTBEAT_TIMESTAMP AS lastHeartbeatTimestamp, RECEIVED_TRANSACTION_SET AS receivedTransactionSet, LAST_ERROR_NUMBER AS lastErrorNumber, LAST_ERROR_MESSAGE AS lastErrorMessage, LAST_ERROR_TIMESTAMP AS lastErrorTimestamp FROM performance_schema.replication_connection_status */
/**
*/
public class ReplicationConnectionStatus{
/**Column{tableCatalog='def', tableSchema='performance_schema', tableName='replication_connection_status', columnName='CHANNEL_NAME', ordinalPosition=1, columnDefault='null', isNullable='NO', dataType='char', characterMaximumLength=64, characterOctetLength=192, numericPrecision=0, numericScale=0, datetimePrecision=0, characterSetName='utf8', collationName='utf8_general_ci', columnType='char(64)', columnKey='', extra='', privileges='select,insert,update,references', columnComment='', generationExpression=''}*/
private String channelName;

/**Column{tableCatalog='def', tableSchema='performance_schema', tableName='replication_connection_status', columnName='GROUP_NAME', ordinalPosition=2, columnDefault='null', isNullable='NO', dataType='char', characterMaximumLength=36, characterOctetLength=108, numericPrecision=0, numericScale=0, datetimePrecision=0, characterSetName='utf8', collationName='utf8_bin', columnType='char(36)', columnKey='', extra='', privileges='select,insert,update,references', columnComment='', generationExpression=''}*/
private String groupName;

/**Column{tableCatalog='def', tableSchema='performance_schema', tableName='replication_connection_status', columnName='SOURCE_UUID', ordinalPosition=3, columnDefault='null', isNullable='NO', dataType='char', characterMaximumLength=36, characterOctetLength=108, numericPrecision=0, numericScale=0, datetimePrecision=0, characterSetName='utf8', collationName='utf8_bin', columnType='char(36)', columnKey='', extra='', privileges='select,insert,update,references', columnComment='', generationExpression=''}*/
private String sourceUuid;

/**Column{tableCatalog='def', tableSchema='performance_schema', tableName='replication_connection_status', columnName='THREAD_ID', ordinalPosition=4, columnDefault='null', isNullable='YES', dataType='bigint', characterMaximumLength=0, characterOctetLength=0, numericPrecision=20, numericScale=0, datetimePrecision=0, characterSetName='null', collationName='null', columnType='bigint(20) unsigned', columnKey='', extra='', privileges='select,insert,update,references', columnComment='', generationExpression=''}*/
private Long threadId;

/**Column{tableCatalog='def', tableSchema='performance_schema', tableName='replication_connection_status', columnName='SERVICE_STATE', ordinalPosition=5, columnDefault='null', isNullable='NO', dataType='enum', characterMaximumLength=10, characterOctetLength=30, numericPrecision=0, numericScale=0, datetimePrecision=0, characterSetName='utf8', collationName='utf8_general_ci', columnType='enum('ON','OFF','CONNECTING')', columnKey='', extra='', privileges='select,insert,update,references', columnComment='', generationExpression=''}*/
private Date serviceState;

/**Column{tableCatalog='def', tableSchema='performance_schema', tableName='replication_connection_status', columnName='COUNT_RECEIVED_HEARTBEATS', ordinalPosition=6, columnDefault='0', isNullable='NO', dataType='bigint', characterMaximumLength=0, characterOctetLength=0, numericPrecision=20, numericScale=0, datetimePrecision=0, characterSetName='null', collationName='null', columnType='bigint(20) unsigned', columnKey='', extra='', privileges='select,insert,update,references', columnComment='', generationExpression=''}*/
private Long countReceivedHeartbeats;

/**Column{tableCatalog='def', tableSchema='performance_schema', tableName='replication_connection_status', columnName='LAST_HEARTBEAT_TIMESTAMP', ordinalPosition=7, columnDefault='CURRENT_TIMESTAMP', isNullable='NO', dataType='timestamp', characterMaximumLength=0, characterOctetLength=0, numericPrecision=0, numericScale=0, datetimePrecision=0, characterSetName='null', collationName='null', columnType='timestamp', columnKey='', extra='on update CURRENT_TIMESTAMP', privileges='select,insert,update,references', columnComment='Shows when the most recent heartbeat signal was received.', generationExpression=''}*/
private Date lastHeartbeatTimestamp;

/**Column{tableCatalog='def', tableSchema='performance_schema', tableName='replication_connection_status', columnName='RECEIVED_TRANSACTION_SET', ordinalPosition=8, columnDefault='null', isNullable='NO', dataType='longtext', characterMaximumLength=4294967295, characterOctetLength=4294967295, numericPrecision=0, numericScale=0, datetimePrecision=0, characterSetName='utf8', collationName='utf8_general_ci', columnType='longtext', columnKey='', extra='', privileges='select,insert,update,references', columnComment='', generationExpression=''}*/
private String receivedTransactionSet;

/**Column{tableCatalog='def', tableSchema='performance_schema', tableName='replication_connection_status', columnName='LAST_ERROR_NUMBER', ordinalPosition=9, columnDefault='null', isNullable='NO', dataType='int', characterMaximumLength=0, characterOctetLength=0, numericPrecision=10, numericScale=0, datetimePrecision=0, characterSetName='null', collationName='null', columnType='int(11)', columnKey='', extra='', privileges='select,insert,update,references', columnComment='', generationExpression=''}*/
private Integer lastErrorNumber;

/**Column{tableCatalog='def', tableSchema='performance_schema', tableName='replication_connection_status', columnName='LAST_ERROR_MESSAGE', ordinalPosition=10, columnDefault='null', isNullable='NO', dataType='varchar', characterMaximumLength=1024, characterOctetLength=3072, numericPrecision=0, numericScale=0, datetimePrecision=0, characterSetName='utf8', collationName='utf8_general_ci', columnType='varchar(1024)', columnKey='', extra='', privileges='select,insert,update,references', columnComment='', generationExpression=''}*/
private String lastErrorMessage;

/**Column{tableCatalog='def', tableSchema='performance_schema', tableName='replication_connection_status', columnName='LAST_ERROR_TIMESTAMP', ordinalPosition=11, columnDefault='0000-00-00 00:00:00', isNullable='NO', dataType='timestamp', characterMaximumLength=0, characterOctetLength=0, numericPrecision=0, numericScale=0, datetimePrecision=0, characterSetName='null', collationName='null', columnType='timestamp', columnKey='', extra='', privileges='select,insert,update,references', columnComment='', generationExpression=''}*/
private Date lastErrorTimestamp;

public String getChannelName(){
return channelName;
}

public String getGroupName(){
return groupName;
}

public String getSourceUuid(){
return sourceUuid;
}

public Long getThreadId(){
return threadId;
}

public Date getServiceState(){
return serviceState;
}

public Long getCountReceivedHeartbeats(){
return countReceivedHeartbeats;
}

public Date getLastHeartbeatTimestamp(){
return lastHeartbeatTimestamp;
}

public String getReceivedTransactionSet(){
return receivedTransactionSet;
}

public Integer getLastErrorNumber(){
return lastErrorNumber;
}

public String getLastErrorMessage(){
return lastErrorMessage;
}

public Date getLastErrorTimestamp(){
return lastErrorTimestamp;
}

}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'db.bean.performance_schema;', 'import', 'java.util.Date;', '/*', 'SELECT', 'CHANNEL_NAME', 'AS', 'channelName,', 'GROUP_NAME', 'AS', 'groupName,', 'SOURCE_UUID', 'AS', 'sourceUuid,', 'THREAD_ID', 'AS', 'threadId,', 'SERVICE_STATE', 'AS', 'serviceState,', 'COUNT_RECEIVED_HEARTBEATS', 'AS', 'countReceivedHeartbeats,', 'LAST_HEARTBEAT_TIMESTAMP', 'AS', 'lastHeartbeatTimestamp,', 'RECEIVED_TRANSACTION_SET', 'AS', 'receivedTransactionSet,', 'LAST_ERROR_NUMBER', 'AS', 'lastErrorNumber,', 'LAST_ERROR_MESSAGE', 'AS', 'lastErrorMessage,', 'LAST_ERROR_TIMESTAMP', 'AS', 'lastErrorTimestamp', 'FROM', 'performance_schema.replication_connection_status', '*/', '/**', '*/', 'public', 'class', 'ReplicationConnectionStatus{', ""/**Column{tableCatalog='def',"", ""tableSchema='performance_schema',"", ""tableName='replication_connection_status',"", ""columnName='CHANNEL_NAME',"", 'ordinalPosition=1,', ""columnDefault='null',"", ""isNullable='NO',"", ""dataType='char',"", 'characterMaximumLength=64,', 'characterOctetLength=192,', 'numericPrecision=0,', 'numericScale=0,', 'datetimePrecision=0,', ""characterSetName='utf8',"", ""collationName='utf8_general_ci',"", ""columnType='char(64)',"", ""columnKey='',"", ""extra='',"", ""privileges='select,insert,update,references',"", ""columnComment='',"", ""generationExpression=''}*/"", 'private', 'String', 'channelName;', ""/**Column{tableCatalog='def',"", ""tableSchema='performance_schema',"", ""tableName='replication_connection_status',"", ""columnName='GROUP_NAME',"", 'ordinalPosition=2,', ""columnDefault='null',"", ""isNullable='NO',"", ""dataType='char',"", 'characterMaximumLength=36,', 'characterOctetLength=108,', 'numericPrecision=0,', 'numericScale=0,', 'datetimePrecision=0,', ""characterSetName='utf8',"", ""collationName='utf8_bin',"", ""columnType='char(36)',"", ""columnKey='',"", ""extra='',"", ""privileges='select,insert,update,references',"", ""columnComment='',"", ""generationExpression=''}*/"", 'private', 'String', 'groupName;', ""/**Column{tableCatalog='def',"", ""tableSchema='performance_schema',"", ""tableName='replication_connection_status',"", ""columnName='SOURCE_UUID',"", 'ordinalPosition=3,', ""columnDefault='null',"", ""isNullable='NO',"", ""dataType='char',"", 'characterMaximumLength=36,', 'characterOctetLength=108,', 'numericPrecision=0,', 'numericScale=0,', 'datetimePrecision=0,', ""characterSetName='utf8',"", ""collationName='utf8_bin',"", ""columnType='char(36)',"", ""columnKey='',"", ""extra='',"", ""privileges='select,insert,update,references',"", ""columnComment='',"", ""generationExpression=''}*/"", 'private', 'String', 'sourceUuid;', ""/**Column{tableCatalog='def',"", ""tableSchema='performance_schema',"", ""tableName='replication_connection_status',"", ""columnName='THREAD_ID',"", 'ordinalPosition=4,', ""columnDefault='null',"", ""isNullable='YES',"", ""dataType='bigint',"", 'characterMaximumLength=0,', 'characterOctetLength=0,', 'numericPrecision=20,', 'numericScale=0,', 'datetimePrecision=0,', ""characterSetName='null',"", ""collationName='null',"", ""columnType='bigint(20)"", ""unsigned',"", ""columnKey='',"", ""extra='',"", ""privileges='select,insert,update,references',"", ""columnComment='',"", ""generationExpression=''}*/"", 'private', 'Long', 'threadId;', ""/**Column{tableCatalog='def',"", ""tableSchema='performance_schema',"", ""tableName='replication_connection_status',"", ""columnName='SERVICE_STATE',"", 'ordinalPosition=5,', ""columnDefault='null',"", ""isNullable='NO',"", ""dataType='enum',"", 'characterMaximumLength=10,', 'characterOctetLength=30,', 'numericPrecision=0,', 'numericScale=0,', 'datetimePrecision=0,', ""characterSetName='utf8',"", ""collationName='utf8_general_ci',"", ""columnType='enum('ON','OFF','CONNECTING')',"", ""columnKey='',"", ""extra='',"", ""privileges='select,insert,update,references',"", ""columnComment='',"", ""generationExpression=''}*/"", 'private', 'Date', 'serviceState;', ""/**Column{tableCatalog='def',"", ""tableSchema='performance_schema',"", ""tableName='replication_connection_status',"", ""columnName='COUNT_RECEIVED_HEARTBEATS',"", 'ordinalPosition=6,', ""columnDefault='0',"", ""isNullable='NO',"", ""dataType='bigint',"", 'characterMaximumLength=0,', 'characterOctetLength=0,', 'numericPrecision=20,', 'numericScale=0,', 'datetimePrecision=0,', ""characterSetName='null',"", ""collationName='null',"", ""columnType='bigint(20)"", ""unsigned',"", ""columnKey='',"", ""extra='',"", ""privileges='select,insert,update,references',"", ""columnComment='',"", ""generationExpression=''}*/"", 'private', 'Long', 'countReceivedHeartbeats;', ""/**Column{tableCatalog='def',"", ""tableSchema='performance_schema',"", ""tableName='replication_connection_status',"", ""columnName='LAST_HEARTBEAT_TIMESTAMP',"", 'ordinalPosition=7,', ""columnDefault='CURRENT_TIMESTAMP',"", ""isNullable='NO',"", ""dataType='timestamp',"", 'characterMaximumLength=0,', 'characterOctetLength=0,', 'numericPrecision=0,', 'numericScale=0,', 'datetimePrecision=0,', ""characterSetName='null',"", ""collationName='null',"", ""columnType='timestamp',"", ""columnKey='',"", ""extra='on"", 'update', ""CURRENT_TIMESTAMP',"", ""privileges='select,insert,update,references',"", ""columnComment='Shows"", 'when', 'the', 'most', 'recent', 'heartbeat', 'signal', 'was', ""received.',"", ""generationExpression=''}*/"", 'private', 'Date', 'lastHeartbeatTimestamp;', ""/**Column{tableCatalog='def',"", ""tableSchema='performance_schema',"", ""tableName='replication_connection_status',"", ""columnName='RECEIVED_TRANSACTION_SET',"", 'ordinalPosition=8,', ""columnDefault='null',"", ""isNullable='NO',"", ""dataType='longtext',"", 'characterMaximumLength=4294967295,', 'characterOctetLength=4294967295,', 'numericPrecision=0,', 'numericScale=0,', 'datetimePrecision=0,', ""characterSetName='utf8',"", ""collationName='utf8_general_ci',"", ""columnType='longtext',"", ""columnKey='',"", ""extra='',"", ""privileges='select,insert,update,references',"", ""columnComment='',"", ""generationExpression=''}*/"", 'private', 'String', 'receivedTransactionSet;', ""/**Column{tableCatalog='def',"", ""tableSchema='performance_schema',"", ""tableName='replication_connection_status',"", ""columnName='LAST_ERROR_NUMBER',"", 'ordinalPosition=9,', ""columnDefault='null',"", ""isNullable='NO',"", ""dataType='int',"", 'characterMaximumLength=0,', 'characterOctetLength=0,', 'numericPrecision=10,', 'numericScale=0,', 'datetimePrecision=0,', ""characterSetName='null',"", ""collationName='null',"", ""columnType='int(11)',"", ""columnKey='',"", ""extra='',"", ""privileges='select,insert,update,references',"", ""columnComment='',"", ""generationExpression=''}*/"", 'private', 'Integer', 'lastErrorNumber;', ""/**Column{tableCatalog='def',"", ""tableSchema='performance_schema',"", ""tableName='replication_connection_status',"", ""columnName='LAST_ERROR_MESSAGE',"", 'ordinalPosition=10,', ""columnDefault='null',"", ""isNullable='NO',"", ""dataType='varchar',"", 'characterMaximumLength=1024,', 'characterOctetLength=3072,', 'numericPrecision=0,', 'numericScale=0,', 'datetimePrecision=0,', ""characterSetName='utf8',"", ""collationName='utf8_general_ci',"", ""columnType='varchar(1024)',"", ""columnKey='',"", ""extra='',"", ""privileges='select,insert,update,references',"", ""columnComment='',"", ""generationExpression=''}*/"", 'private', 'String', 'lastErrorMessage;', ""/**Column{tableCatalog='def',"", ""tableSchema='performance_schema',"", ""tableName='replication_connection_status',"", ""columnName='LAST_ERROR_TIMESTAMP',"", 'ordinalPosition=11,', ""columnDefault='0000-00-00"", ""00:00:00',"", ""isNullable='NO',"", ""dataType='timestamp',"", 'characterMaximumLength=0,', 'characterOctetLength=0,', 'numericPrecision=0,', 'numericScale=0,', 'datetimePrecision=0,', ""characterSetName='null',"", ""collationName='null',"", ""columnType='timestamp',"", ""columnKey='',"", ""extra='',"", ""privileges='select,insert,update,references',"", ""columnComment='',"", ""generationExpression=''}*/"", 'private', 'Date', 'lastErrorTimestamp;', 'public', 'String', 'getChannelName(){', 'return', 'channelName;', '}', 'public', 'String', 'getGroupName(){', 'return', 'groupName;', '}', 'public', 'String', 'getSourceUuid(){', 'return', 'sourceUuid;', '}', 'public', 'Long', 'getThreadId(){', 'return', 'threadId;', '}', 'public', 'Date', 'getServiceState(){', 'return', 'serviceState;', '}', 'public', 'Long', 'getCountReceivedHeartbeats(){', 'return', 'countReceivedHeartbeats;', '}', 'public', 'Date', 'getLastHeartbeatTimestamp(){', 'return', 'lastHeartbeatTimestamp;', '}', 'public', 'String', 'getReceivedTransactionSet(){', 'return', 'receivedTransactionSet;', '}', 'public', 'Integer', 'getLastErrorNumber(){', 'return', 'lastErrorNumber;', '}', 'public', 'String', 'getLastErrorMessage(){', 'return', 'lastErrorMessage;', '}', 'public', 'Date', 'getLastErrorTimestamp(){', 'return', 'lastErrorTimestamp;', '}', '}```']",challenge not surrounded by ''': ,
"const path = require('path')

const getRepoRoot = () => path.resolve(__dirname, '..', '..')

module.exports = {
  getRepoRoot,
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```const', 'path', '=', ""require('path')"", 'const', 'getRepoRoot', '=', '()', '=>', 'path.resolve(__dirname,', ""'..',"", ""'..')"", 'module.exports', '=', '{', 'getRepoRoot,', '}', '```']",challenge not surrounded by ''': ,
"import axios from 'axios'
import store from '~Store'

const refreshData = async () => {
	const lobbyId = store.getters['lobby/id']
	if (! lobbyId) return

	try {
		const { data: { data: lobby } } = await axios.get(`/api/lobby/${lobbyId}`)

		store.dispatch('lobby/setLobby', lobby)

		const playerId = store.getters['player/id']

		if (playerId) {
			const member = lobby.members.find(({ id }) => id === playerId)
			store.dispatch('player/setReady', member.ready)
		}

		if (lobby.match) store.dispatch('match/setMatch', { match: lobby.match, data: lobby.match_data })
		else store.dispatch('match/clear')
	} catch (e) {
		if (e.response && [401, 403, 404].includes(e.response.status))
		throw e
	}
}

refreshData()
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'axios', 'from', ""'axios'"", 'import', 'store', 'from', ""'~Store'"", 'const', 'refreshData', '=', 'async', '()', '=>', '{', 'const', 'lobbyId', '=', ""store.getters['lobby/id']"", 'if', '(!', 'lobbyId)', 'return', 'try', '{', 'const', '{', 'data:', '{', 'data:', 'lobby', '}', '}', '=', 'await', 'axios.get(`/api/lobby/${lobbyId}`)', ""store.dispatch('lobby/setLobby',"", 'lobby)', 'const', 'playerId', '=', ""store.getters['player/id']"", 'if', '(playerId)', '{', 'const', 'member', '=', 'lobby.members.find(({', 'id', '})', '=>', 'id', '===', 'playerId)', ""store.dispatch('player/setReady',"", 'member.ready)', '}', 'if', '(lobby.match)', ""store.dispatch('match/setMatch',"", '{', 'match:', 'lobby.match,', 'data:', 'lobby.match_data', '})', 'else', ""store.dispatch('match/clear')"", '}', 'catch', '(e)', '{', 'if', '(e.response', '&&', '[401,', '403,', '404].includes(e.response.status))', 'throw', 'e', '}', '}', 'refreshData()', '```']",challenge not surrounded by ''': ,
"var domain = require('../index');
var Promise = require(""promise"");
domain.service(""$a"", function() {
	return new Promise(function(resolve, reject) {
		setTimeout(function() {
			resolve({
				test: ""myasynce""
			});
		}, 500);
	});

});

domain.path(""/hello/:id"", {
	options: function($req, $res) {
		$res.header(""Access-Control-Allow-Origin"", ""*"");
		$res.header(""Access-Control-Allow-Headers"", ""Origin, X-Requested-With, Content-Type, Accept"");
	},
	get: function($res, $jsonp, $params) {
		$jsonp('callback');
		return $params;
	},
	post: function($res, $cors, $body) {
		$cors();
		return {
			ok: ""RESULT IS HERE!""
		};
	}
});
//
// domain.path(""/"", {
// 	get: function($res, $query, $auth, $assert) {
// 		$auth.validate();
// 		i++;
// 		//$query.require('id', 'name')
// 		return $query.attrs;
// 	},
// 	pukka: function($res, $next) {
// 		$res.send({
// 			hello: ""from test""
// 		})
// 	}
// });

domain.service(""WiresAssertHandler"", function() {
	return function(msg) {
		return {
			custom: true,
			msg: msg
		}
	}
});

domain.path(""/update"", {
	get: function($eTag) {
		return $eTag.generate('sys-blog-query');
	}
});
domain.path(""/test:lang?"", {
	eTag: function(req) {
		if (req._parsedUrl.query.indexOf(""name"") > -1) {
			return 'sys-blog-query'
		}
	},
	get: function($query, $assert) {
		console.log(""calling shit"")
		return {
			pukka: ""sukka""
		}
	},
	post: function($res, $body, $nice, $next) {
		//var date = $query.get(""name@required,moment('DD-MM-YYYY')"");
		//var isPukka = $query.get(""pukka@required,bool"");
		var infoName = $body.get(""info.name@min(5),max(10, 'Custom message')"");

		return {

			infoName: infoName
		};
	}
});
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```var', 'domain', '=', ""require('../index');"", 'var', 'Promise', '=', 'require(""promise"");', 'domain.service(""$a"",', 'function()', '{', 'return', 'new', 'Promise(function(resolve,', 'reject)', '{', 'setTimeout(function()', '{', 'resolve({', 'test:', '""myasynce""', '});', '},', '500);', '});', '});', 'domain.path(""/hello/:id"",', '{', 'options:', 'function($req,', '$res)', '{', '$res.header(""Access-Control-Allow-Origin"",', '""*"");', '$res.header(""Access-Control-Allow-Headers"",', '""Origin,', 'X-Requested-With,', 'Content-Type,', 'Accept"");', '},', 'get:', 'function($res,', '$jsonp,', '$params)', '{', ""$jsonp('callback');"", 'return', '$params;', '},', 'post:', 'function($res,', '$cors,', '$body)', '{', '$cors();', 'return', '{', 'ok:', '""RESULT', 'IS', 'HERE!""', '};', '}', '});', '//', '//', 'domain.path(""/"",', '{', '//', 'get:', 'function($res,', '$query,', '$auth,', '$assert)', '{', '//', '$auth.validate();', '//', 'i++;', '//', ""//$query.require('id',"", ""'name')"", '//', 'return', '$query.attrs;', '//', '},', '//', 'pukka:', 'function($res,', '$next)', '{', '//', '$res.send({', '//', 'hello:', '""from', 'test""', '//', '})', '//', '}', '//', '});', 'domain.service(""WiresAssertHandler"",', 'function()', '{', 'return', 'function(msg)', '{', 'return', '{', 'custom:', 'true,', 'msg:', 'msg', '}', '}', '});', 'domain.path(""/update"",', '{', 'get:', 'function($eTag)', '{', 'return', ""$eTag.generate('sys-blog-query');"", '}', '});', 'domain.path(""/test:lang?"",', '{', 'eTag:', 'function(req)', '{', 'if', '(req._parsedUrl.query.indexOf(""name"")', '>', '-1)', '{', 'return', ""'sys-blog-query'"", '}', '},', 'get:', 'function($query,', '$assert)', '{', 'console.log(""calling', 'shit"")', 'return', '{', 'pukka:', '""sukka""', '}', '},', 'post:', 'function($res,', '$body,', '$nice,', '$next)', '{', '//var', 'date', '=', '$query.get(""name@required,moment(\'DD-MM-YYYY\')"");', '//var', 'isPukka', '=', '$query.get(""pukka@required,bool"");', 'var', 'infoName', '=', '$body.get(""info.name@min(5),max(10,', ""'Custom"", 'message\')"");', 'return', '{', 'infoName:', 'infoName', '};', '}', '});', '```']",challenge not surrounded by ''': ,
"import path from 'path';
import express from 'express';
import morgan from 'morgan';
import compression from 'compression';
import favIcon from 'serve-favicon';

import { Logger } from 'common';

export default (app) => {
  app.use(morgan('tiny', { stream: Logger.stream }));
  app.use(compression());
  app.use(favIcon(path.resolve(__dirname, '../../assets/favicon.ico')));
  // Only serve static files when in production mode
  if (process.env.NODE_ENV !== 'development') {
    app.use(express.static(path.resolve(__dirname, '../../../../public')));
  }
  app.use('/storage', express.static(path.resolve(__dirname, '../../../../storage/')));
};
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'path', 'from', ""'path';"", 'import', 'express', 'from', ""'express';"", 'import', 'morgan', 'from', ""'morgan';"", 'import', 'compression', 'from', ""'compression';"", 'import', 'favIcon', 'from', ""'serve-favicon';"", 'import', '{', 'Logger', '}', 'from', ""'common';"", 'export', 'default', '(app)', '=>', '{', ""app.use(morgan('tiny',"", '{', 'stream:', 'Logger.stream', '}));', 'app.use(compression());', 'app.use(favIcon(path.resolve(__dirname,', ""'../../assets/favicon.ico')));"", '//', 'Only', 'serve', 'static', 'files', 'when', 'in', 'production', 'mode', 'if', '(process.env.NODE_ENV', '!==', ""'development')"", '{', 'app.use(express.static(path.resolve(__dirname,', ""'../../../../public')));"", '}', ""app.use('/storage',"", 'express.static(path.resolve(__dirname,', ""'../../../../storage/')));"", '};', '```']",challenge not surrounded by ''': ,
"# Copyright (C) 2009 Jan Michael Alonzo <jmalonzo@gmail.com>
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the
# Free Software Foundation, Inc., 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.
#

import webkit

# fine-tune this when necessary.
from webkit import *
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', 'Copyright', '(C)', '2009', 'Jan', 'Michael', 'Alonzo', '<jmalonzo@gmail.com>', '#', '#', 'This', 'library', 'is', 'free', 'software;', 'you', 'can', 'redistribute', 'it', 'and/or', '#', 'modify', 'it', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'Lesser', 'General', 'Public', '#', 'License', 'as', 'published', 'by', 'the', 'Free', 'Software', 'Foundation;', 'either', '#', 'version', '2', 'of', 'the', 'License,', 'or', '(at', 'your', 'option)', 'any', 'later', 'version.', '#', '#', 'This', 'library', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', '#', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', '#', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', 'GNU', '#', 'Lesser', 'General', 'Public', 'License', 'for', 'more', 'details.', '#', '#', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'Lesser', 'General', 'Public', '#', 'License', 'along', 'with', 'this', 'library;', 'if', 'not,', 'write', 'to', 'the', '#', 'Free', 'Software', 'Foundation,', 'Inc.,', '59', 'Temple', 'Place', '-', 'Suite', '330,', '#', 'Boston,', 'MA', '02111-1307,', 'USA.', '#', 'import', 'webkit', '#', 'fine-tune', 'this', 'when', 'necessary.', 'from', 'webkit', 'import', '*', '```']",challenge not surrounded by ''': ,
"package com.fishercoder;

import com.fishercoder.solutions._36;
import com.fishercoder.solutions._735;
import org.junit.BeforeClass;
import org.junit.Test;

import static junit.framework.TestCase.assertEquals;
import static org.junit.Assert.assertArrayEquals;

public class _36Test {
  private static _36.Solution1 solution1;
  private static char[][] board;

  @BeforeClass
  public static void setup() {
    solution1 = new _36.Solution1();
  }

  @Test
  public void test1() {
    board = new char[][] {
        {'4', '3', '5', '2', '6', '9', '7', '8', '1'},
        {'6', '8', '2', '5', '7', '1', '4', '9', '3'},
        {'1', '9', '7', '8', '3', '4', '5', '6', '2'},
        {'8', '2', '6', '1', '9', '5', '3', '4', '7'},
        {'3', '7', '4', '6', '8', '2', '9', '1', '5'},
        {'9', '5', '1', '7', '4', '3', '6', '2', '8'},
        {'5', '1', '9', '3', '2', '6', '8', '7', '4'},
        {'2', '4', '8', '9', '5', '7', '1', '3', '6'},
        {'7', '6', '3', '4', '1', '8', '2', '5', '9'},
    };
    assertEquals(true, solution1.isValidSudoku(board));
  }

  @Test
  public void test2() {
    board = new char[][] {
        {'.', '8', '7', '6', '5', '4', '3', '2', '1'},
        {'2', '.', '.', '.', '.', '.', '.', '.', '.'},
        {'3', '.', '.', '.', '.', '.', '.', '.', '.'},
        {'4', '.', '.', '.', '.', '.', '.', '.', '.'},
        {'5', '.', '.', '.', '.', '.', '.', '.', '.'},
        {'6', '.', '.', '.', '.', '.', '.', '.', '.'},
        {'7', '.', '.', '.', '.', '.', '.', '.', '.'},
        {'8', '.', '.', '.', '.', '.', '.', '.', '.'},
        {'9', '.', '.', '.', '.', '.', '.', '.', '.'},
    };
    assertEquals(true, solution1.isValidSudoku(board));
  }

  @Test
  public void test3() {
    board = new char[][] {
        {'.', '.', '.', '.', '5', '.', '.', '1', '.'},
        // this upper right corner 3*3 square is invalid, '1' appears twice
        {'.', '4', '.', '3', '.', '.', '.', '.', '.'},
        {'.', '.', '.', '.', '.', '3', '.', '.', '1'},
        {'8', '.', '.', '.', '.', '.', '.', '2', '.'},
        {'.', '.', '2', '.', '7', '.', '.', '.', '.'},
        {'.', '1', '5', '.', '.', '.', '.', '.', '.'},
        {'.', '.', '.', '.', '.', '2', '.', '.', '.'},
        {'.', '2', '.', '9', '.', '.', '.', '.', '.'},
        {'.', '.', '4', '.', '.', '.', '.', '.', '.'},
    };
    assertEquals(false, solution1.isValidSudoku(board));
  }

  @Test
  public void test4() {
    board = new char[][] {
        {'.', '.', '4', '.', '.', '.', '6', '3', '.'},
        {'.', '.', '.', '.', '.', '.', '.', '.', '.'},
        {'5', '.', '.', '.', '.', '.', '.', '9', '.'},
        {'.', '.', '.', '5', '6', '.', '.', '.', '.'},
        {'4', '.', '3', '.', '.', '.', '.', '.', '1'},
        {'.', '.', '.', '7', '.', '.', '.', '.', '.'},
        {'.', '.', '.', '5', '.', '.', '.', '.', '.'},
        {'.', '.', '.', '.', '.', '.', '.', '.', '.'},
        {'.', '.', '.', '.', '.', '.', '.', '.', '.'}
    };
    assertEquals(false, solution1.isValidSudoku(board));
  }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.fishercoder;', 'import', 'com.fishercoder.solutions._36;', 'import', 'com.fishercoder.solutions._735;', 'import', 'org.junit.BeforeClass;', 'import', 'org.junit.Test;', 'import', 'static', 'junit.framework.TestCase.assertEquals;', 'import', 'static', 'org.junit.Assert.assertArrayEquals;', 'public', 'class', '_36Test', '{', 'private', 'static', '_36.Solution1', 'solution1;', 'private', 'static', 'char[][]', 'board;', '@BeforeClass', 'public', 'static', 'void', 'setup()', '{', 'solution1', '=', 'new', '_36.Solution1();', '}', '@Test', 'public', 'void', 'test1()', '{', 'board', '=', 'new', 'char[][]', '{', ""{'4',"", ""'3',"", ""'5',"", ""'2',"", ""'6',"", ""'9',"", ""'7',"", ""'8',"", ""'1'},"", ""{'6',"", ""'8',"", ""'2',"", ""'5',"", ""'7',"", ""'1',"", ""'4',"", ""'9',"", ""'3'},"", ""{'1',"", ""'9',"", ""'7',"", ""'8',"", ""'3',"", ""'4',"", ""'5',"", ""'6',"", ""'2'},"", ""{'8',"", ""'2',"", ""'6',"", ""'1',"", ""'9',"", ""'5',"", ""'3',"", ""'4',"", ""'7'},"", ""{'3',"", ""'7',"", ""'4',"", ""'6',"", ""'8',"", ""'2',"", ""'9',"", ""'1',"", ""'5'},"", ""{'9',"", ""'5',"", ""'1',"", ""'7',"", ""'4',"", ""'3',"", ""'6',"", ""'2',"", ""'8'},"", ""{'5',"", ""'1',"", ""'9',"", ""'3',"", ""'2',"", ""'6',"", ""'8',"", ""'7',"", ""'4'},"", ""{'2',"", ""'4',"", ""'8',"", ""'9',"", ""'5',"", ""'7',"", ""'1',"", ""'3',"", ""'6'},"", ""{'7',"", ""'6',"", ""'3',"", ""'4',"", ""'1',"", ""'8',"", ""'2',"", ""'5',"", ""'9'},"", '};', 'assertEquals(true,', 'solution1.isValidSudoku(board));', '}', '@Test', 'public', 'void', 'test2()', '{', 'board', '=', 'new', 'char[][]', '{', ""{'.',"", ""'8',"", ""'7',"", ""'6',"", ""'5',"", ""'4',"", ""'3',"", ""'2',"", ""'1'},"", ""{'2',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.'},"", ""{'3',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.'},"", ""{'4',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.'},"", ""{'5',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.'},"", ""{'6',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.'},"", ""{'7',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.'},"", ""{'8',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.'},"", ""{'9',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.'},"", '};', 'assertEquals(true,', 'solution1.isValidSudoku(board));', '}', '@Test', 'public', 'void', 'test3()', '{', 'board', '=', 'new', 'char[][]', '{', ""{'.',"", ""'.',"", ""'.',"", ""'.',"", ""'5',"", ""'.',"", ""'.',"", ""'1',"", ""'.'},"", '//', 'this', 'upper', 'right', 'corner', '3*3', 'square', 'is', 'invalid,', ""'1'"", 'appears', 'twice', ""{'.',"", ""'4',"", ""'.',"", ""'3',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.'},"", ""{'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'3',"", ""'.',"", ""'.',"", ""'1'},"", ""{'8',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'2',"", ""'.'},"", ""{'.',"", ""'.',"", ""'2',"", ""'.',"", ""'7',"", ""'.',"", ""'.',"", ""'.',"", ""'.'},"", ""{'.',"", ""'1',"", ""'5',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.'},"", ""{'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'2',"", ""'.',"", ""'.',"", ""'.'},"", ""{'.',"", ""'2',"", ""'.',"", ""'9',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.'},"", ""{'.',"", ""'.',"", ""'4',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.'},"", '};', 'assertEquals(false,', 'solution1.isValidSudoku(board));', '}', '@Test', 'public', 'void', 'test4()', '{', 'board', '=', 'new', 'char[][]', '{', ""{'.',"", ""'.',"", ""'4',"", ""'.',"", ""'.',"", ""'.',"", ""'6',"", ""'3',"", ""'.'},"", ""{'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.'},"", ""{'5',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'9',"", ""'.'},"", ""{'.',"", ""'.',"", ""'.',"", ""'5',"", ""'6',"", ""'.',"", ""'.',"", ""'.',"", ""'.'},"", ""{'4',"", ""'.',"", ""'3',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'1'},"", ""{'.',"", ""'.',"", ""'.',"", ""'7',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.'},"", ""{'.',"", ""'.',"", ""'.',"", ""'5',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.'},"", ""{'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.'},"", ""{'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.',"", ""'.'}"", '};', 'assertEquals(false,', 'solution1.isValidSudoku(board));', '}', '}', '```']",challenge not surrounded by ''': ,
"
package com.google.api.ads.adwords.jaxws.v201402.cm;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlType;


/**
 * 
 *             Indicates that the customer is not whitelisted for accessing the API.
 *           
 * 
 * <p>Java class for NotWhitelistedError complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name=""NotWhitelistedError"">
 *   &lt;complexContent>
 *     &lt;extension base=""{https://adwords.google.com/api/adwords/cm/v201402}ApiError"">
 *       &lt;sequence>
 *         &lt;element name=""reason"" type=""{https://adwords.google.com/api/adwords/cm/v201402}NotWhitelistedError.Reason"" minOccurs=""0""/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = ""NotWhitelistedError"", propOrder = {
    ""reason""
})
public class NotWhitelistedError
    extends ApiError
{

    protected NotWhitelistedErrorReason reason;

    /**
     * Gets the value of the reason property.
     * 
     * @return
     *     possible object is
     *     {@link NotWhitelistedErrorReason }
     *     
     */
    public NotWhitelistedErrorReason getReason() {
        return reason;
    }

    /**
     * Sets the value of the reason property.
     * 
     * @param value
     *     allowed object is
     *     {@link NotWhitelistedErrorReason }
     *     
     */
    public void setReason(NotWhitelistedErrorReason value) {
        this.reason = value;
    }

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```', 'package', 'com.google.api.ads.adwords.jaxws.v201402.cm;', 'import', 'javax.xml.bind.annotation.XmlAccessType;', 'import', 'javax.xml.bind.annotation.XmlAccessorType;', 'import', 'javax.xml.bind.annotation.XmlType;', '/**', '*', '*', 'Indicates', 'that', 'the', 'customer', 'is', 'not', 'whitelisted', 'for', 'accessing', 'the', 'API.', '*', '*', '*', '<p>Java', 'class', 'for', 'NotWhitelistedError', 'complex', 'type.', '*', '*', '<p>The', 'following', 'schema', 'fragment', 'specifies', 'the', 'expected', 'content', 'contained', 'within', 'this', 'class.', '*', '*', '<pre>', '*', '&lt;complexType', 'name=""NotWhitelistedError"">', '*', '&lt;complexContent>', '*', '&lt;extension', 'base=""{https://adwords.google.com/api/adwords/cm/v201402}ApiError"">', '*', '&lt;sequence>', '*', '&lt;element', 'name=""reason""', 'type=""{https://adwords.google.com/api/adwords/cm/v201402}NotWhitelistedError.Reason""', 'minOccurs=""0""/>', '*', '&lt;/sequence>', '*', '&lt;/extension>', '*', '&lt;/complexContent>', '*', '&lt;/complexType>', '*', '</pre>', '*', '*', '*/', '@XmlAccessorType(XmlAccessType.FIELD)', '@XmlType(name', '=', '""NotWhitelistedError"",', 'propOrder', '=', '{', '""reason""', '})', 'public', 'class', 'NotWhitelistedError', 'extends', 'ApiError', '{', 'protected', 'NotWhitelistedErrorReason', 'reason;', '/**', '*', 'Gets', 'the', 'value', 'of', 'the', 'reason', 'property.', '*', '*', '@return', '*', 'possible', 'object', 'is', '*', '{@link', 'NotWhitelistedErrorReason', '}', '*', '*/', 'public', 'NotWhitelistedErrorReason', 'getReason()', '{', 'return', 'reason;', '}', '/**', '*', 'Sets', 'the', 'value', 'of', 'the', 'reason', 'property.', '*', '*', '@param', 'value', '*', 'allowed', 'object', 'is', '*', '{@link', 'NotWhitelistedErrorReason', '}', '*', '*/', 'public', 'void', 'setReason(NotWhitelistedErrorReason', 'value)', '{', 'this.reason', '=', 'value;', '}', '}', '```']",challenge not surrounded by ''': ,
"/**
 * Copyright 2012-2014 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package pl.hycom.pip.messanger.controller.model;

import java.util.HashSet;
import java.util.Set;

import javax.validation.constraints.Pattern;
import javax.validation.constraints.Size;

import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.NonNull;

/**
 * Created by Monia on 2017-05-27.
 */
@Data
@NoArgsConstructor
public class UserDTO {
    private Integer id;

    @Size(min = 2, max = 40, message = ""{validation.error.firstname.size}"")
    @Pattern(regexp = ""^\\p{L}{2,40}$"", message = ""{validation.error.firstname.format}"")
    private String firstName;

    @Size(min = 2, max = 40, message = ""{validation.error.lastname.size}"")
    @Pattern(regexp = ""^\\p{L}{2,40}$"", message = ""{validation.error.lastname.format}"")
    private String lastName;

    @NonNull
    @Size(min = 6, max = 40, message = ""{validation.error.email.size}"")
    @Pattern(regexp = ""^[a-zA-Z0-9_!#$%&’*+/=?`{|}~^.-]+@[a-zA-Z0-9.-]+$"", message = ""{validation.error.email.format}"")
    private String email;

    @Size(min = 6, max = 64, message = ""{validation.error.password.size}"")
    private String password;

    @Pattern(regexp = ""^(\\+48)[5-9][0-9]{8}$"", message = ""{validation.error.phonenumber.format}"")
    private String phoneNumber;

    private Set<RoleDTO> roles = new HashSet<>();

    private String profileImageUrl;

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', 'Copyright', '2012-2014', 'the', 'original', 'author', 'or', 'authors.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'pl.hycom.pip.messanger.controller.model;', 'import', 'java.util.HashSet;', 'import', 'java.util.Set;', 'import', 'javax.validation.constraints.Pattern;', 'import', 'javax.validation.constraints.Size;', 'import', 'lombok.Data;', 'import', 'lombok.NoArgsConstructor;', 'import', 'lombok.NonNull;', '/**', '*', 'Created', 'by', 'Monia', 'on', '2017-05-27.', '*/', '@Data', '@NoArgsConstructor', 'public', 'class', 'UserDTO', '{', 'private', 'Integer', 'id;', '@Size(min', '=', '2,', 'max', '=', '40,', 'message', '=', '""{validation.error.firstname.size}"")', '@Pattern(regexp', '=', '""^\\\\p{L}{2,40}$"",', 'message', '=', '""{validation.error.firstname.format}"")', 'private', 'String', 'firstName;', '@Size(min', '=', '2,', 'max', '=', '40,', 'message', '=', '""{validation.error.lastname.size}"")', '@Pattern(regexp', '=', '""^\\\\p{L}{2,40}$"",', 'message', '=', '""{validation.error.lastname.format}"")', 'private', 'String', 'lastName;', '@NonNull', '@Size(min', '=', '6,', 'max', '=', '40,', 'message', '=', '""{validation.error.email.size}"")', '@Pattern(regexp', '=', '""^[a-zA-Z0-9_!#$%&’*+/=?`{|}~^.-]+@[a-zA-Z0-9.-]+$"",', 'message', '=', '""{validation.error.email.format}"")', 'private', 'String', 'email;', '@Size(min', '=', '6,', 'max', '=', '64,', 'message', '=', '""{validation.error.password.size}"")', 'private', 'String', 'password;', '@Pattern(regexp', '=', '""^(\\\\+48)[5-9][0-9]{8}$"",', 'message', '=', '""{validation.error.phonenumber.format}"")', 'private', 'String', 'phoneNumber;', 'private', 'Set<RoleDTO>', 'roles', '=', 'new', 'HashSet<>();', 'private', 'String', 'profileImageUrl;', '}', '```']",challenge not surrounded by ''': ,
"@(fps: Int, secs: Int)
<!DOCTYPE html>
<html lang=""en"">
    <head>
        <link rel=""shortcut icon"" type=""image/png"" href=""@routes.Assets.versioned(""images/favicon.png"")"">
        <link rel=""stylesheet"" media=""screen"" href=""@routes.Assets.versioned(""stylesheets/main.css"")"">
        <meta name=""fps"" content=""@fps"">
        <meta name=""secs"" content=""@secs"">
        <title>Conway's Game of Life</title>
    </head>
    <body>
        <pre id=""board""><i id=""cell"" class=""G""></i></pre>
        <pre id=""stats"">&nbsp;<br/>&nbsp;</pre>
        @scalajs.html.scripts(
            projectName = ""client"",
            assets = name => routes.Assets.versioned(name).toString,
            resourceExists = name => getClass.getResource(s""/public/$name"") != null
        )
    </body>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```@(fps:', 'Int,', 'secs:', 'Int)', '<!DOCTYPE', 'html>', '<html', 'lang=""en"">', '<head>', '<link', 'rel=""shortcut', 'icon""', 'type=""image/png""', 'href=""@routes.Assets.versioned(""images/favicon.png"")"">', '<link', 'rel=""stylesheet""', 'media=""screen""', 'href=""@routes.Assets.versioned(""stylesheets/main.css"")"">', '<meta', 'name=""fps""', 'content=""@fps"">', '<meta', 'name=""secs""', 'content=""@secs"">', ""<title>Conway's"", 'Game', 'of', 'Life</title>', '</head>', '<body>', '<pre', 'id=""board""><i', 'id=""cell""', 'class=""G""></i></pre>', '<pre', 'id=""stats"">&nbsp;<br/>&nbsp;</pre>', '@scalajs.html.scripts(', 'projectName', '=', '""client"",', 'assets', '=', 'name', '=>', 'routes.Assets.versioned(name).toString,', 'resourceExists', '=', 'name', '=>', 'getClass.getResource(s""/public/$name"")', '!=', 'null', ')', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"package aula08.services;

import java.util.ArrayList;
import java.util.List;

import aula08.dao.AlunoDAO;
import aula08.dao.IAluno;
import aula08.models.Resultado;
import aula08.models.aluno.Aluno;

public class AlunoService {
	private IAluno alunoDao;

	public AlunoService() {
		alunoDao = new AlunoDAO();
	}

	public Resultado editar(Aluno aluno) {
		Resultado resultado = aluno.validarObrigatoriedadeDeDados();

		if (resultado.isSucesso()) {
			Resultado resultadoEdicao = alunoDao.editar(aluno);
			
			if (resultadoEdicao.isSucesso()) {
				resultado.setAlunoEditado(resultadoEdicao.getAlunoEditado());
				resultado.adicionarMensagem(resultadoEdicao.getMensagens());
			} else {
				resultado.adicionarErro(resultadoEdicao.getErros());
			}
		}

		return resultado;
	}

	public ArrayList<Aluno> listarAlunos() {
		return alunoDao.listarAlunos();
	}

	public List<Aluno> listarAlunosPor(String chave, String valor) {
		return alunoDao.listarAlunosPor(chave, valor);
	}

	public Resultado excluirPorId(int id) {
		Resultado resultado = new Resultado();

		if (alunoDao.excluirPorId(id)) {
			resultado.adicionarMensagem(""ID "" + id + "" foi excluido com sucesso"");
		} else {
			resultado.adicionarErro(""Falha ao excluir id "" + id);
		}

		return resultado;
	}
}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'aula08.services;', 'import', 'java.util.ArrayList;', 'import', 'java.util.List;', 'import', 'aula08.dao.AlunoDAO;', 'import', 'aula08.dao.IAluno;', 'import', 'aula08.models.Resultado;', 'import', 'aula08.models.aluno.Aluno;', 'public', 'class', 'AlunoService', '{', 'private', 'IAluno', 'alunoDao;', 'public', 'AlunoService()', '{', 'alunoDao', '=', 'new', 'AlunoDAO();', '}', 'public', 'Resultado', 'editar(Aluno', 'aluno)', '{', 'Resultado', 'resultado', '=', 'aluno.validarObrigatoriedadeDeDados();', 'if', '(resultado.isSucesso())', '{', 'Resultado', 'resultadoEdicao', '=', 'alunoDao.editar(aluno);', 'if', '(resultadoEdicao.isSucesso())', '{', 'resultado.setAlunoEditado(resultadoEdicao.getAlunoEditado());', 'resultado.adicionarMensagem(resultadoEdicao.getMensagens());', '}', 'else', '{', 'resultado.adicionarErro(resultadoEdicao.getErros());', '}', '}', 'return', 'resultado;', '}', 'public', 'ArrayList<Aluno>', 'listarAlunos()', '{', 'return', 'alunoDao.listarAlunos();', '}', 'public', 'List<Aluno>', 'listarAlunosPor(String', 'chave,', 'String', 'valor)', '{', 'return', 'alunoDao.listarAlunosPor(chave,', 'valor);', '}', 'public', 'Resultado', 'excluirPorId(int', 'id)', '{', 'Resultado', 'resultado', '=', 'new', 'Resultado();', 'if', '(alunoDao.excluirPorId(id))', '{', 'resultado.adicionarMensagem(""ID', '""', '+', 'id', '+', '""', 'foi', 'excluido', 'com', 'sucesso"");', '}', 'else', '{', 'resultado.adicionarErro(""Falha', 'ao', 'excluir', 'id', '""', '+', 'id);', '}', 'return', 'resultado;', '}', '}```']",challenge not surrounded by ''': ,
"/*
 * Copyright (c) 2013 Binson Zhang.
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * ""License""); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @author	Binson Zhang <bin183cs@gmail.com>
 * @date		2013-1-17
 */

#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

class Solution {
public:
  string longestPalindrome(string s) {
      string ep = evenPalindrome(s);
      string op = oddPalindrome(s);
      return (ep.size() > op.size()) ? ep : op;
  }

  string evenPalindrome(const string& s) {
      int mlen = 0;
      int mid = 0;
      for (int i = 0, len = s.length(); i < len; ++i) {
          int k = 1;
          for ( ; i + 1 - k >= 0 && i + k < len && s[i + 1 - k] == s[i + k]; ++k) {}
          --k;
          if (mlen < k) {
              mlen = k;
              mid = i;
          }
      }
      return s.substr(mid + 1 - mlen, mlen * 2);
  }

  string oddPalindrome(const string& s) {
      int mlen = 0;
      int mid = 0;
      for (int i = 1, len = s.length(); i < len; ++i) {
          int k = 1;
          for ( ; i - k >= 0 && i + k < len && s[i - k] == s[i + k]; ++k) {}
          --k;
          if (mlen < k) {
              mlen = k;
              mid = i;
          }
      }
      return s.substr(mid - mlen, mlen * 2 + 1);
  }
};

#include ""util.h""

int main(int argc, char **argv) {
  std::cout << ""------"" << argv[0] << ""------"" << std::endl;

  Solution sol;

  std::string s = ""bb"";
  std::cout << ""Input:\n"";
  Output(s);
  std::cout << ""Output:\n"";
  Output(sol.longestPalindrome(s));

  return 0;
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '(c)', '2013', 'Binson', 'Zhang.', '*', '*', 'Licensed', 'to', 'the', 'Apache', 'Software', 'Foundation', '(ASF)', 'under', 'one', '*', 'or', 'more', 'contributor', 'license', 'agreements.', 'See', 'the', 'NOTICE', 'file', '*', 'distributed', 'with', 'this', 'work', 'for', 'additional', 'information', '*', 'regarding', 'copyright', 'ownership.', 'The', 'ASF', 'licenses', 'this', 'file', '*', 'to', 'you', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '*', '""License"");', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', '*', 'with', 'the', 'License.', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', '/**', '*', '@author', 'Binson', 'Zhang', '<bin183cs@gmail.com>', '*', '@date', '2013-1-17', '*/', '#include', '<iostream>', '#include', '<vector>', '#include', '<algorithm>', 'using', 'namespace', 'std;', 'class', 'Solution', '{', 'public:', 'string', 'longestPalindrome(string', 's)', '{', 'string', 'ep', '=', 'evenPalindrome(s);', 'string', 'op', '=', 'oddPalindrome(s);', 'return', '(ep.size()', '>', 'op.size())', '?', 'ep', ':', 'op;', '}', 'string', 'evenPalindrome(const', 'string&', 's)', '{', 'int', 'mlen', '=', '0;', 'int', 'mid', '=', '0;', 'for', '(int', 'i', '=', '0,', 'len', '=', 's.length();', 'i', '<', 'len;', '++i)', '{', 'int', 'k', '=', '1;', 'for', '(', ';', 'i', '+', '1', '-', 'k', '>=', '0', '&&', 'i', '+', 'k', '<', 'len', '&&', 's[i', '+', '1', '-', 'k]', '==', 's[i', '+', 'k];', '++k)', '{}', '--k;', 'if', '(mlen', '<', 'k)', '{', 'mlen', '=', 'k;', 'mid', '=', 'i;', '}', '}', 'return', 's.substr(mid', '+', '1', '-', 'mlen,', 'mlen', '*', '2);', '}', 'string', 'oddPalindrome(const', 'string&', 's)', '{', 'int', 'mlen', '=', '0;', 'int', 'mid', '=', '0;', 'for', '(int', 'i', '=', '1,', 'len', '=', 's.length();', 'i', '<', 'len;', '++i)', '{', 'int', 'k', '=', '1;', 'for', '(', ';', 'i', '-', 'k', '>=', '0', '&&', 'i', '+', 'k', '<', 'len', '&&', 's[i', '-', 'k]', '==', 's[i', '+', 'k];', '++k)', '{}', '--k;', 'if', '(mlen', '<', 'k)', '{', 'mlen', '=', 'k;', 'mid', '=', 'i;', '}', '}', 'return', 's.substr(mid', '-', 'mlen,', 'mlen', '*', '2', '+', '1);', '}', '};', '#include', '""util.h""', 'int', 'main(int', 'argc,', 'char', '**argv)', '{', 'std::cout', '<<', '""------""', '<<', 'argv[0]', '<<', '""------""', '<<', 'std::endl;', 'Solution', 'sol;', 'std::string', 's', '=', '""bb"";', 'std::cout', '<<', '""Input:\\n"";', 'Output(s);', 'std::cout', '<<', '""Output:\\n"";', 'Output(sol.longestPalindrome(s));', 'return', '0;', '}', '```']",challenge not surrounded by ''': ,
"

app.directive('fwNumeros', function () {
    return {
        require: 'ngModel',
        restrict: 'A',
        link: function (scope, element, attrs, ngModel,ctrl) {

            element.bind('keypress', function (e) {
                var charCode = (e.which) ? e.which : e.keyCode
        if (charCode > 31 && (charCode < 48 || charCode > 57))
            e.preventDefault();
            });
            
        }
    };
});

app.directive('fwMayusculas', function () {
    return {
        require: 'ngModel',
        restrict: 'A',
        link: function (scope, element, attrs, modelCtrl) {
            element.addClass('mayuscula');

            modelCtrl.$parsers.push(function (input) {
                return input ? input.toUpperCase() : """";
            });
        }
    };
});



app.directive(""fwCargando"", function ($rootScope) {
       return function($scope, element, attrs) {
           $scope.$on(""loader_show"", function () {
               if (element.hasClass(""hidden"")) {
                   element.removeClass(""hidden"")
               }
            });
            return $scope.$on(""loader_hide"", function () {
                if(!element.hasClass(""hidden"")){
                    element.addClass(""hidden"")
                }
            });
        };
});
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```', ""app.directive('fwNumeros',"", 'function', '()', '{', 'return', '{', 'require:', ""'ngModel',"", 'restrict:', ""'A',"", 'link:', 'function', '(scope,', 'element,', 'attrs,', 'ngModel,ctrl)', '{', ""element.bind('keypress',"", 'function', '(e)', '{', 'var', 'charCode', '=', '(e.which)', '?', 'e.which', ':', 'e.keyCode', 'if', '(charCode', '>', '31', '&&', '(charCode', '<', '48', '||', 'charCode', '>', '57))', 'e.preventDefault();', '});', '}', '};', '});', ""app.directive('fwMayusculas',"", 'function', '()', '{', 'return', '{', 'require:', ""'ngModel',"", 'restrict:', ""'A',"", 'link:', 'function', '(scope,', 'element,', 'attrs,', 'modelCtrl)', '{', ""element.addClass('mayuscula');"", 'modelCtrl.$parsers.push(function', '(input)', '{', 'return', 'input', '?', 'input.toUpperCase()', ':', '"""";', '});', '}', '};', '});', 'app.directive(""fwCargando"",', 'function', '($rootScope)', '{', 'return', 'function($scope,', 'element,', 'attrs)', '{', '$scope.$on(""loader_show"",', 'function', '()', '{', 'if', '(element.hasClass(""hidden""))', '{', 'element.removeClass(""hidden"")', '}', '});', 'return', '$scope.$on(""loader_hide"",', 'function', '()', '{', 'if(!element.hasClass(""hidden"")){', 'element.addClass(""hidden"")', '}', '});', '};', '});', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE html>
<html lang=""en"">
<head>
	<meta charset=""UTF-8"">
	<meta name=""viewport"" content=""width=device-width, initial-scale=1, shrink-to-fit=no"">
	<meta http-equiv=""X-UA-Compatible"" content=""ie=edge"">
  <title> More-Recipes </title>
  <script defer src=""https://use.fontawesome.com/releases/v5.0.1/js/all.js""></script>
	<link rel=""stylesheet"" href=""https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css"" integrity=""sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M"" crossorigin=""anonymous"">
	<link href=""https://fonts.googleapis.com/css?family=Berkshire+Swash|Kalam"" rel=""stylesheet"">
	<link rel=""stylesheet"" href=""/style.css"">
</head>
<body>
	<div id='root' class=""container-fluid""></div>
	<script src=""https://code.jquery.com/jquery-3.2.1.slim.min.js"" integrity=""sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN"" crossorigin=""anonymous""></script>
	<script src=""https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js"" integrity=""sha384-b/U6ypiBEHpOf/4+1nzFpr53nxSS+GLCkfwBdFNTxtclqqenISfwAzpKaMNFNmj4"" crossorigin=""anonymous""></script>
	<script src=""https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/js/bootstrap.min.js"" integrity=""sha384-h0AbiXch4ZDo7tp9hKZ4TsHbi047NrKGLO3SEJAg45jXxnGIfYzk4Si90RDIqNm1"" crossorigin=""anonymous""></script>
	<script src=""/bundle.js""></script>
</body>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'html>', '<html', 'lang=""en"">', '<head>', '<meta', 'charset=""UTF-8"">', '<meta', 'name=""viewport""', 'content=""width=device-width,', 'initial-scale=1,', 'shrink-to-fit=no"">', '<meta', 'http-equiv=""X-UA-Compatible""', 'content=""ie=edge"">', '<title>', 'More-Recipes', '</title>', '<script', 'defer', 'src=""https://use.fontawesome.com/releases/v5.0.1/js/all.js""></script>', '<link', 'rel=""stylesheet""', 'href=""https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css""', 'integrity=""sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M""', 'crossorigin=""anonymous"">', '<link', 'href=""https://fonts.googleapis.com/css?family=Berkshire+Swash|Kalam""', 'rel=""stylesheet"">', '<link', 'rel=""stylesheet""', 'href=""/style.css"">', '</head>', '<body>', '<div', ""id='root'"", 'class=""container-fluid""></div>', '<script', 'src=""https://code.jquery.com/jquery-3.2.1.slim.min.js""', 'integrity=""sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN""', 'crossorigin=""anonymous""></script>', '<script', 'src=""https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js""', 'integrity=""sha384-b/U6ypiBEHpOf/4+1nzFpr53nxSS+GLCkfwBdFNTxtclqqenISfwAzpKaMNFNmj4""', 'crossorigin=""anonymous""></script>', '<script', 'src=""https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/js/bootstrap.min.js""', 'integrity=""sha384-h0AbiXch4ZDo7tp9hKZ4TsHbi047NrKGLO3SEJAg45jXxnGIfYzk4Si90RDIqNm1""', 'crossorigin=""anonymous""></script>', '<script', 'src=""/bundle.js""></script>', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"/*
 AngularJS v1.5.0-rc.1
 (c) 2010-2016 Google, Inc. http://angularjs.org
 License: MIT
*/
(function(x,s,y){'use strict';function t(f,k,p){n.directive(f,[""$parse"",""$swipe"",function(c,e){return function(l,m,g){function h(a){if(!b)return!1;var d=Math.abs(a.y-b.y);a=(a.x-b.x)*k;return r&&75>d&&0<a&&30<a&&.3>d/a}var d=c(g[f]),b,r,a=[""touch""];s.isDefined(g.ngSwipeDisableMouse)||a.push(""mouse"");e.bind(m,{start:function(a,d){b=a;r=!0},cancel:function(a){r=!1},end:function(a,b){h(a)&&l.$apply(function(){m.triggerHandler(p);d(l,{$event:b})})}},a)}}])}var n=s.module(""ngTouch"",[]);n.factory(""$swipe"",
[function(){function f(c){c=c.originalEvent||c;var e=c.touches&&c.touches.length?c.touches:[c];c=c.changedTouches&&c.changedTouches[0]||e[0];return{x:c.clientX,y:c.clientY}}function k(c,e){var l=[];s.forEach(c,function(c){(c=p[c][e])&&l.push(c)});return l.join("" "")}var p={mouse:{start:""mousedown"",move:""mousemove"",end:""mouseup""},touch:{start:""touchstart"",move:""touchmove"",end:""touchend"",cancel:""touchcancel""}};return{bind:function(c,e,l){var m,g,h,d,b=!1;l=l||[""mouse"",""touch""];c.on(k(l,""start""),function(a){h=
f(a);b=!0;g=m=0;d=h;e.start&&e.start(h,a)});var r=k(l,""cancel"");if(r)c.on(r,function(a){b=!1;e.cancel&&e.cancel(a)});c.on(k(l,""move""),function(a){if(b&&h){var c=f(a);m+=Math.abs(c.x-d.x);g+=Math.abs(c.y-d.y);d=c;10>m&&10>g||(g>m?(b=!1,e.cancel&&e.cancel(a)):(a.preventDefault(),e.move&&e.move(c,a)))}});c.on(k(l,""end""),function(a){b&&(b=!1,e.end&&e.end(f(a),a))})}}}]);n.config([""$provide"",function(f){f.decorator(""ngClickDirective"",[""$delegate"",function(k){k.shift();return k}])}]);n.directive(""ngClick"",
[""$parse"",""$timeout"",""$rootElement"",function(f,k,p){function c(d,b,c){for(var a=0;a<d.length;a+=2){var e=d[a+1],g=c;if(25>Math.abs(d[a]-b)&&25>Math.abs(e-g))return d.splice(a,a+2),!0}return!1}function e(d){if(!(2500<Date.now()-m)){var b=d.touches&&d.touches.length?d.touches:[d],e=b[0].clientX,b=b[0].clientY;if(!(1>e&&1>b||h&&h[0]===e&&h[1]===b)){h&&(h=null);var a=d.target;""label""===s.lowercase(a.nodeName||a[0]&&a[0].nodeName)&&(h=[e,b]);c(g,e,b)||(d.stopPropagation(),d.preventDefault(),d.target&&
d.target.blur&&d.target.blur())}}}function l(d){d=d.touches&&d.touches.length?d.touches:[d];var b=d[0].clientX,c=d[0].clientY;g.push(b,c);k(function(){for(var a=0;a<g.length;a+=2)if(g[a]==b&&g[a+1]==c){g.splice(a,a+2);break}},2500,!1)}var m,g,h;return function(d,b,h){var a=f(h.ngClick),k=!1,q,n,t,v;b.on(""touchstart"",function(a){k=!0;q=a.target?a.target:a.srcElement;3==q.nodeType&&(q=q.parentNode);b.addClass(""ng-click-active"");n=Date.now();a=a.originalEvent||a;a=(a.touches&&a.touches.length?a.touches:
[a])[0];t=a.clientX;v=a.clientY});b.on(""touchcancel"",function(a){k=!1;b.removeClass(""ng-click-active"")});b.on(""touchend"",function(a){var d=Date.now()-n,f=a.originalEvent||a,u=(f.changedTouches&&f.changedTouches.length?f.changedTouches:f.touches&&f.touches.length?f.touches:[f])[0],f=u.clientX,u=u.clientY,w=Math.sqrt(Math.pow(f-t,2)+Math.pow(u-v,2));k&&750>d&&12>w&&(g||(p[0].addEventListener(""click"",e,!0),p[0].addEventListener(""touchstart"",l,!0),g=[]),m=Date.now(),c(g,f,u),q&&q.blur(),s.isDefined(h.disabled)&&
!1!==h.disabled||b.triggerHandler(""click"",[a]));k=!1;b.removeClass(""ng-click-active"")});b.onclick=function(a){};b.on(""click"",function(b,c){d.$apply(function(){a(d,{$event:c||b})})});b.on(""mousedown"",function(a){b.addClass(""ng-click-active"")});b.on(""mousemove mouseup"",function(a){b.removeClass(""ng-click-active"")})}}]);t(""ngSwipeLeft"",-1,""swipeleft"");t(""ngSwipeRight"",1,""swiperight"")})(window,window.angular);
//# sourceMappingURL=angular-touch.min.js.map
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', 'AngularJS', 'v1.5.0-rc.1', '(c)', '2010-2016', 'Google,', 'Inc.', 'http://angularjs.org', 'License:', 'MIT', '*/', ""(function(x,s,y){'use"", ""strict';function"", 't(f,k,p){n.directive(f,[""$parse"",""$swipe"",function(c,e){return', 'function(l,m,g){function', 'h(a){if(!b)return!1;var', 'd=Math.abs(a.y-b.y);a=(a.x-b.x)*k;return', 'r&&75>d&&0<a&&30<a&&.3>d/a}var', 'd=c(g[f]),b,r,a=[""touch""];s.isDefined(g.ngSwipeDisableMouse)||a.push(""mouse"");e.bind(m,{start:function(a,d){b=a;r=!0},cancel:function(a){r=!1},end:function(a,b){h(a)&&l.$apply(function(){m.triggerHandler(p);d(l,{$event:b})})}},a)}}])}var', 'n=s.module(""ngTouch"",[]);n.factory(""$swipe"",', '[function(){function', 'f(c){c=c.originalEvent||c;var', 'e=c.touches&&c.touches.length?c.touches:[c];c=c.changedTouches&&c.changedTouches[0]||e[0];return{x:c.clientX,y:c.clientY}}function', 'k(c,e){var', 'l=[];s.forEach(c,function(c){(c=p[c][e])&&l.push(c)});return', 'l.join(""', '"")}var', 'p={mouse:{start:""mousedown"",move:""mousemove"",end:""mouseup""},touch:{start:""touchstart"",move:""touchmove"",end:""touchend"",cancel:""touchcancel""}};return{bind:function(c,e,l){var', 'm,g,h,d,b=!1;l=l||[""mouse"",""touch""];c.on(k(l,""start""),function(a){h=', 'f(a);b=!0;g=m=0;d=h;e.start&&e.start(h,a)});var', 'r=k(l,""cancel"");if(r)c.on(r,function(a){b=!1;e.cancel&&e.cancel(a)});c.on(k(l,""move""),function(a){if(b&&h){var', 'c=f(a);m+=Math.abs(c.x-d.x);g+=Math.abs(c.y-d.y);d=c;10>m&&10>g||(g>m?(b=!1,e.cancel&&e.cancel(a)):(a.preventDefault(),e.move&&e.move(c,a)))}});c.on(k(l,""end""),function(a){b&&(b=!1,e.end&&e.end(f(a),a))})}}}]);n.config([""$provide"",function(f){f.decorator(""ngClickDirective"",[""$delegate"",function(k){k.shift();return', 'k}])}]);n.directive(""ngClick"",', '[""$parse"",""$timeout"",""$rootElement"",function(f,k,p){function', 'c(d,b,c){for(var', 'a=0;a<d.length;a+=2){var', 'e=d[a+1],g=c;if(25>Math.abs(d[a]-b)&&25>Math.abs(e-g))return', 'd.splice(a,a+2),!0}return!1}function', 'e(d){if(!(2500<Date.now()-m)){var', 'b=d.touches&&d.touches.length?d.touches:[d],e=b[0].clientX,b=b[0].clientY;if(!(1>e&&1>b||h&&h[0]===e&&h[1]===b)){h&&(h=null);var', 'a=d.target;""label""===s.lowercase(a.nodeName||a[0]&&a[0].nodeName)&&(h=[e,b]);c(g,e,b)||(d.stopPropagation(),d.preventDefault(),d.target&&', 'd.target.blur&&d.target.blur())}}}function', 'l(d){d=d.touches&&d.touches.length?d.touches:[d];var', 'b=d[0].clientX,c=d[0].clientY;g.push(b,c);k(function(){for(var', 'a=0;a<g.length;a+=2)if(g[a]==b&&g[a+1]==c){g.splice(a,a+2);break}},2500,!1)}var', 'm,g,h;return', 'function(d,b,h){var', 'a=f(h.ngClick),k=!1,q,n,t,v;b.on(""touchstart"",function(a){k=!0;q=a.target?a.target:a.srcElement;3==q.nodeType&&(q=q.parentNode);b.addClass(""ng-click-active"");n=Date.now();a=a.originalEvent||a;a=(a.touches&&a.touches.length?a.touches:', '[a])[0];t=a.clientX;v=a.clientY});b.on(""touchcancel"",function(a){k=!1;b.removeClass(""ng-click-active"")});b.on(""touchend"",function(a){var', 'd=Date.now()-n,f=a.originalEvent||a,u=(f.changedTouches&&f.changedTouches.length?f.changedTouches:f.touches&&f.touches.length?f.touches:[f])[0],f=u.clientX,u=u.clientY,w=Math.sqrt(Math.pow(f-t,2)+Math.pow(u-v,2));k&&750>d&&12>w&&(g||(p[0].addEventListener(""click"",e,!0),p[0].addEventListener(""touchstart"",l,!0),g=[]),m=Date.now(),c(g,f,u),q&&q.blur(),s.isDefined(h.disabled)&&', '!1!==h.disabled||b.triggerHandler(""click"",[a]));k=!1;b.removeClass(""ng-click-active"")});b.onclick=function(a){};b.on(""click"",function(b,c){d.$apply(function(){a(d,{$event:c||b})})});b.on(""mousedown"",function(a){b.addClass(""ng-click-active"")});b.on(""mousemove', 'mouseup"",function(a){b.removeClass(""ng-click-active"")})}}]);t(""ngSwipeLeft"",-1,""swipeleft"");t(""ngSwipeRight"",1,""swiperight"")})(window,window.angular);', '//#', 'sourceMappingURL=angular-touch.min.js.map', '```']",challenge not surrounded by ''': ,
"import w3c from './w3c';
import material from './material';
import css from './css';

export default {
  MATERIAL: material,
  W3C: w3c,
  CSS: css,
};
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'w3c', 'from', ""'./w3c';"", 'import', 'material', 'from', ""'./material';"", 'import', 'css', 'from', ""'./css';"", 'export', 'default', '{', 'MATERIAL:', 'material,', 'W3C:', 'w3c,', 'CSS:', 'css,', '};', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE html>
<head>
  <meta charset=""utf-8""/>
</head>
<a href=""rIC/index.html"">Vizualize requestIdleCallback</a><br />
<a href=""load/index.html"">Load simulator</a><br />
<a href=""pdftopng/index.html"">PDF to PNG converter</a><br />
<a href=""nested/frame.html"">Nested frame</a><br />
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'html>', '<head>', '<meta', 'charset=""utf-8""/>', '</head>', '<a', 'href=""rIC/index.html"">Vizualize', 'requestIdleCallback</a><br', '/>', '<a', 'href=""load/index.html"">Load', 'simulator</a><br', '/>', '<a', 'href=""pdftopng/index.html"">PDF', 'to', 'PNG', 'converter</a><br', '/>', '<a', 'href=""nested/frame.html"">Nested', 'frame</a><br', '/>', '```']",challenge not surrounded by ''': ,
"# Program orrb_CTH_stat

# This program calculates basic statistics for the cloud top (CTH) product for
# each month

import math
from statistics.orrb_stat_class import OrrbStats
import numpy as np
# -----------------------------------------------------

def bias_corrected_rms(rms, bias, N):
    # ie formula should be bcRMS= sqrt(RMS^2-c*bias^2), 
    # where c=N/(N-1). However our Ns are usually large
    if N < 2:
        print ""Warning too few elements to calculate bc-RMS""
        return -9
    cnn1 = N/(N-1)
    return np.sqrt(rms*rms-cnn1*bias*bias)
    

class CloudLwpStats(OrrbStats):

    def do_stats(self):
        OrrbStats.do_stats(self)
        #for key in self.ac_data.keys():
        #    print key
        
        amsr_all_samples = self.ac_data[""amsr_all_samples""] 
        mean_error_amsr_all_sum = self.ac_data[""mean_error_amsr_all_sum""] 
        rms_error_amsr_all_sum = self.ac_data[""rms_error_amsr_all_sum""] 


        self.amsr_all_samples = amsr_all_samples
        self.bias_amsr_all = np.divide(
                mean_error_amsr_all_sum, amsr_all_samples )           
        self.rms_amsr_all = np.sqrt(
            np.divide(rms_error_amsr_all_sum, amsr_all_samples))

        self.bcrms_amsr_all = bias_corrected_rms(
                self.rms_amsr_all, 
                self.bias_amsr_all, 
                amsr_all_samples)

    
    def printout(self):            
        lines = []
        lines.append(""========== Cloud lwp ==========="")
        lines.append(""Total number of matched scenes is: %s"" % self.ac_data[""scenes""])
        lines.append("""")
        lines.append(""Total number of %s matched cloudtops: %d"" %( self.truth_sat.upper(), self.amsr_all_samples))
        lines.append(""Mean error total cases: %.1f"" % self.bias_amsr_all)
        lines.append(""RMS error total cases: %.1f"" % self.rms_amsr_all)
        lines.append(""bc-RMS error total cases: %.1f"" % self.bcrms_amsr_all)

        return lines


if __name__ == ""__main__"":
    stats = CloudTopStats()

","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', 'Program', 'orrb_CTH_stat', '#', 'This', 'program', 'calculates', 'basic', 'statistics', 'for', 'the', 'cloud', 'top', '(CTH)', 'product', 'for', '#', 'each', 'month', 'import', 'math', 'from', 'statistics.orrb_stat_class', 'import', 'OrrbStats', 'import', 'numpy', 'as', 'np', '#', '-----------------------------------------------------', 'def', 'bias_corrected_rms(rms,', 'bias,', 'N):', '#', 'ie', 'formula', 'should', 'be', 'bcRMS=', 'sqrt(RMS^2-c*bias^2),', '#', 'where', 'c=N/(N-1).', 'However', 'our', 'Ns', 'are', 'usually', 'large', 'if', 'N', '<', '2:', 'print', '""Warning', 'too', 'few', 'elements', 'to', 'calculate', 'bc-RMS""', 'return', '-9', 'cnn1', '=', 'N/(N-1)', 'return', 'np.sqrt(rms*rms-cnn1*bias*bias)', 'class', 'CloudLwpStats(OrrbStats):', 'def', 'do_stats(self):', 'OrrbStats.do_stats(self)', '#for', 'key', 'in', 'self.ac_data.keys():', '#', 'print', 'key', 'amsr_all_samples', '=', 'self.ac_data[""amsr_all_samples""]', 'mean_error_amsr_all_sum', '=', 'self.ac_data[""mean_error_amsr_all_sum""]', 'rms_error_amsr_all_sum', '=', 'self.ac_data[""rms_error_amsr_all_sum""]', 'self.amsr_all_samples', '=', 'amsr_all_samples', 'self.bias_amsr_all', '=', 'np.divide(', 'mean_error_amsr_all_sum,', 'amsr_all_samples', ')', 'self.rms_amsr_all', '=', 'np.sqrt(', 'np.divide(rms_error_amsr_all_sum,', 'amsr_all_samples))', 'self.bcrms_amsr_all', '=', 'bias_corrected_rms(', 'self.rms_amsr_all,', 'self.bias_amsr_all,', 'amsr_all_samples)', 'def', 'printout(self):', 'lines', '=', '[]', 'lines.append(""==========', 'Cloud', 'lwp', '==========="")', 'lines.append(""Total', 'number', 'of', 'matched', 'scenes', 'is:', '%s""', '%', 'self.ac_data[""scenes""])', 'lines.append("""")', 'lines.append(""Total', 'number', 'of', '%s', 'matched', 'cloudtops:', '%d""', '%(', 'self.truth_sat.upper(),', 'self.amsr_all_samples))', 'lines.append(""Mean', 'error', 'total', 'cases:', '%.1f""', '%', 'self.bias_amsr_all)', 'lines.append(""RMS', 'error', 'total', 'cases:', '%.1f""', '%', 'self.rms_amsr_all)', 'lines.append(""bc-RMS', 'error', 'total', 'cases:', '%.1f""', '%', 'self.bcrms_amsr_all)', 'return', 'lines', 'if', '__name__', '==', '""__main__"":', 'stats', '=', 'CloudTopStats()', '```']",challenge not surrounded by ''': ,
"# Copyright (c) OpenMMLab. All rights reserved.
from .general_data import GeneralData
from .instance_data import InstanceData

__all__ = ['GeneralData', 'InstanceData']
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', 'Copyright', '(c)', 'OpenMMLab.', 'All', 'rights', 'reserved.', 'from', '.general_data', 'import', 'GeneralData', 'from', '.instance_data', 'import', 'InstanceData', '__all__', '=', ""['GeneralData',"", ""'InstanceData']"", '```']",challenge not surrounded by ''': ,
"#### NOTICE: THIS FILE IS AUTOGENERATED
#### MODIFICATIONS MAY BE LOST IF DONE IMPROPERLY
#### PLEASE SEE THE ONLINE DOCUMENTATION FOR EXAMPLES

from swgpy.object import *	

def create(kernel):
	result = Tangible()

	result.template = ""object/tangible/skill_buff/shared_skill_buff_ranged_defense.iff""
	result.attribute_template_id = -1
	result.stfName(""skill_buff_n"",""ranged_defense"")		
	
	#### BEGIN MODIFICATIONS ####
	####  END MODIFICATIONS  ####
	
	return result","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```####', 'NOTICE:', 'THIS', 'FILE', 'IS', 'AUTOGENERATED', '####', 'MODIFICATIONS', 'MAY', 'BE', 'LOST', 'IF', 'DONE', 'IMPROPERLY', '####', 'PLEASE', 'SEE', 'THE', 'ONLINE', 'DOCUMENTATION', 'FOR', 'EXAMPLES', 'from', 'swgpy.object', 'import', '*', 'def', 'create(kernel):', 'result', '=', 'Tangible()', 'result.template', '=', '""object/tangible/skill_buff/shared_skill_buff_ranged_defense.iff""', 'result.attribute_template_id', '=', '-1', 'result.stfName(""skill_buff_n"",""ranged_defense"")', '####', 'BEGIN', 'MODIFICATIONS', '####', '####', 'END', 'MODIFICATIONS', '####', 'return', 'result```']",challenge not surrounded by ''': ,
"## \example reference_frames.py
# Show how to properly extract coordinates in the presence of rigid bodies.
from __future__ import print_function
import RMF

# print out transformed coordinates


def print_coordinates(reference_frame, coords):
    print(reference_frame.get_global_coordinates(coords))

# walk through the hierarchy visiting each node and extracting coordinates


def visit(node, reference_frame, reference_frame_factory, particle_factory,
          segment_factory, ball_factory):
    if reference_frame_factory.get_is(node):
        reference_frame = RMF.CoordinateTransformer(
            reference_frame, reference_frame_factory.get(node))
        print(""reference frame is now"", reference_frame)
    elif segment_factory.get_is(node):
        segment = segment_factory.get(node)
        print(""segment"", node.get_name())
        # silliness
        coords = segment.get_coordinates()
        for i in range(0, len(coords[0])):
            print_coordinates(reference_frame, [coords[0][i],
                                                coords[1][i],
                                                coords[2][i]])
    elif particle_factory.get_is(node):
        particle = particle_factory.get(node)
        print(""particle"", node.get_name(), print_coordinates(reference_frame, particle.get_coordinates()))
    elif ball_factory.get_is(node):
        particle = ball_factory.get(node)
        print(""ball"", node.get_name(), print_coordinates(reference_frame, particle.get_coordinates()))
    for c in node.get_children():
        visit(c, reference_frame, reference_frame_factory, particle_factory,
              segment_factory, ball_factory)

fh = RMF.open_rmf_file_read_only(RMF.get_example_path(""reference_frames.rmf3""))


visit(fh.get_root_node(), RMF.CoordinateTransformer(),
      RMF.ReferenceFrameFactory(fh),
      RMF.ParticleFactory(fh),
      RMF.SegmentFactory(fh),
      RMF.BallFactory(fh))
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```##', '\\example', 'reference_frames.py', '#', 'Show', 'how', 'to', 'properly', 'extract', 'coordinates', 'in', 'the', 'presence', 'of', 'rigid', 'bodies.', 'from', '__future__', 'import', 'print_function', 'import', 'RMF', '#', 'print', 'out', 'transformed', 'coordinates', 'def', 'print_coordinates(reference_frame,', 'coords):', 'print(reference_frame.get_global_coordinates(coords))', '#', 'walk', 'through', 'the', 'hierarchy', 'visiting', 'each', 'node', 'and', 'extracting', 'coordinates', 'def', 'visit(node,', 'reference_frame,', 'reference_frame_factory,', 'particle_factory,', 'segment_factory,', 'ball_factory):', 'if', 'reference_frame_factory.get_is(node):', 'reference_frame', '=', 'RMF.CoordinateTransformer(', 'reference_frame,', 'reference_frame_factory.get(node))', 'print(""reference', 'frame', 'is', 'now"",', 'reference_frame)', 'elif', 'segment_factory.get_is(node):', 'segment', '=', 'segment_factory.get(node)', 'print(""segment"",', 'node.get_name())', '#', 'silliness', 'coords', '=', 'segment.get_coordinates()', 'for', 'i', 'in', 'range(0,', 'len(coords[0])):', 'print_coordinates(reference_frame,', '[coords[0][i],', 'coords[1][i],', 'coords[2][i]])', 'elif', 'particle_factory.get_is(node):', 'particle', '=', 'particle_factory.get(node)', 'print(""particle"",', 'node.get_name(),', 'print_coordinates(reference_frame,', 'particle.get_coordinates()))', 'elif', 'ball_factory.get_is(node):', 'particle', '=', 'ball_factory.get(node)', 'print(""ball"",', 'node.get_name(),', 'print_coordinates(reference_frame,', 'particle.get_coordinates()))', 'for', 'c', 'in', 'node.get_children():', 'visit(c,', 'reference_frame,', 'reference_frame_factory,', 'particle_factory,', 'segment_factory,', 'ball_factory)', 'fh', '=', 'RMF.open_rmf_file_read_only(RMF.get_example_path(""reference_frames.rmf3""))', 'visit(fh.get_root_node(),', 'RMF.CoordinateTransformer(),', 'RMF.ReferenceFrameFactory(fh),', 'RMF.ParticleFactory(fh),', 'RMF.SegmentFactory(fh),', 'RMF.BallFactory(fh))', '```']",challenge not surrounded by ''': ,
"package teamfatal;

import javax.swing.*;
import java.awt.*;
import java.util.ArrayList;
import java.util.List;

/**
 * Created by trenton on 4/15/15.
 */
public class MultiTable extends JPanel {
    List<Table> tableList;
    Receipt tableReceipt;

    public MultiTable(Table table1, Table table2)
    {
        super();
        tableList = new ArrayList<Table>();
        this.setLayout(new BorderLayout());
        tableList.add(table1);
        tableReceipt = table1.getReceipt();
        this.add(table1);
        tableList.add(table2);
        tableReceipt.merge(table2.getReceipt());
        this.add(table2);
    }

    public void addTable(Table otherTable)
    {
        tableList.add(otherTable);
    }

    public List<Table> separate()
    {
        this.removeAll();
        tableReceipt = null;
        return tableList;
    }

    /**
     * Getter for tableReceipt
     * @return Receipt for the table
     */
    public Receipt getReceipt() {
        return tableReceipt;
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'teamfatal;', 'import', 'javax.swing.*;', 'import', 'java.awt.*;', 'import', 'java.util.ArrayList;', 'import', 'java.util.List;', '/**', '*', 'Created', 'by', 'trenton', 'on', '4/15/15.', '*/', 'public', 'class', 'MultiTable', 'extends', 'JPanel', '{', 'List<Table>', 'tableList;', 'Receipt', 'tableReceipt;', 'public', 'MultiTable(Table', 'table1,', 'Table', 'table2)', '{', 'super();', 'tableList', '=', 'new', 'ArrayList<Table>();', 'this.setLayout(new', 'BorderLayout());', 'tableList.add(table1);', 'tableReceipt', '=', 'table1.getReceipt();', 'this.add(table1);', 'tableList.add(table2);', 'tableReceipt.merge(table2.getReceipt());', 'this.add(table2);', '}', 'public', 'void', 'addTable(Table', 'otherTable)', '{', 'tableList.add(otherTable);', '}', 'public', 'List<Table>', 'separate()', '{', 'this.removeAll();', 'tableReceipt', '=', 'null;', 'return', 'tableList;', '}', '/**', '*', 'Getter', 'for', 'tableReceipt', '*', '@return', 'Receipt', 'for', 'the', 'table', '*/', 'public', 'Receipt', 'getReceipt()', '{', 'return', 'tableReceipt;', '}', '}', '```']",challenge not surrounded by ''': ,
"#!/bin/bash

VERSION_pycrypto=2.5
URL_pycrypto=http://pypi.python.org/packages/source/p/pycrypto/pycrypto-$VERSION_pycrypto.tar.gz
DEPS_pycrypto=(openssl hostpython python)
MD5_pycrypto=783e45d4a1a309e03ab378b00f97b291
BUILD_pycrypto=$BUILD_PATH/pycrypto/$(get_directory $URL_pycrypto)
RECIPE_pycrypto=$RECIPES_PATH/pycrypto

function prebuild_pycrypto() {
	true
}

function build_pycrypto() {

	if [ -d ""$BUILD_PATH/python-install/lib/python2.7/site-packages/pycrypto"" ]; then
		return
	fi

	cd $BUILD_pycrypto

	push_arm

	export CC=""$CC -I$BUILD_openssl/include""
	export LDFLAGS=""$LDFLAGS -L$LIBS_PATH -L$BUILD_openssl""
	export EXTRA_CFLAGS=""--host linux-armv""

	try ./configure --host=arm-eabi --prefix=""$BUILD_PATH/python-install"" --enable-shared

	try $BUILD_PATH/python-install/bin/python.host setup.py build_ext -v
	try find build/lib.* -name ""*.o"" -exec $STRIP {} \;

	try $BUILD_PATH/python-install/bin/python.host setup.py install -O2

	pop_arm
}

function postbuild_pycrypto() {
	true
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/bin/bash', 'VERSION_pycrypto=2.5', 'URL_pycrypto=http://pypi.python.org/packages/source/p/pycrypto/pycrypto-$VERSION_pycrypto.tar.gz', 'DEPS_pycrypto=(openssl', 'hostpython', 'python)', 'MD5_pycrypto=783e45d4a1a309e03ab378b00f97b291', 'BUILD_pycrypto=$BUILD_PATH/pycrypto/$(get_directory', '$URL_pycrypto)', 'RECIPE_pycrypto=$RECIPES_PATH/pycrypto', 'function', 'prebuild_pycrypto()', '{', 'true', '}', 'function', 'build_pycrypto()', '{', 'if', '[', '-d', '""$BUILD_PATH/python-install/lib/python2.7/site-packages/pycrypto""', '];', 'then', 'return', 'fi', 'cd', '$BUILD_pycrypto', 'push_arm', 'export', 'CC=""$CC', '-I$BUILD_openssl/include""', 'export', 'LDFLAGS=""$LDFLAGS', '-L$LIBS_PATH', '-L$BUILD_openssl""', 'export', 'EXTRA_CFLAGS=""--host', 'linux-armv""', 'try', './configure', '--host=arm-eabi', '--prefix=""$BUILD_PATH/python-install""', '--enable-shared', 'try', '$BUILD_PATH/python-install/bin/python.host', 'setup.py', 'build_ext', '-v', 'try', 'find', 'build/lib.*', '-name', '""*.o""', '-exec', '$STRIP', '{}', '\\;', 'try', '$BUILD_PATH/python-install/bin/python.host', 'setup.py', 'install', '-O2', 'pop_arm', '}', 'function', 'postbuild_pycrypto()', '{', 'true', '}', '```']",challenge not surrounded by ''': ,
"#
# Copyright (C) 2015 Satoru SATOH <ssato at redhat.com>
# License: MIT
#
# pylint: disable=missing-docstring, invalid-name
from __future__ import absolute_import

import os
import unittest

import tests.common

try:
    import anytemplate.engines.pystache as TT
except ImportError:
    TT = None


class Test10(unittest.TestCase):

    def test_20_renders(self):
        tmpl_s = ""Hello, {{name}}!""
        exp = ""Hello, John!""

        if TT is not None:
            egn = TT.Engine()
            self.assertEqual(egn.renders(tmpl_s, {""name"": ""John"", }), exp)

    def test_22_renders__no_context(self):
        tmpl_s = ""Hello world!""

        if TT is not None:
            egn = TT.Engine()
            self.assertEqual(egn.renders(tmpl_s), tmpl_s)

    def test_24_renders__no_context__w_at_path(self):
        tmpl_s = ""Hello world!""

        if TT is not None:
            egn = TT.Engine()
            self.assertEqual(egn.renders(tmpl_s, at_paths=['.']), tmpl_s)

    def test_26_renders__no_context__w_custom_options(self):
        tmpl_s = ""Hello world!""

        if TT is not None:
            egn = TT.Engine()
            self.assertEqual(egn.renders(tmpl_s, missing_tags=""strict""),
                             tmpl_s)

    def test_28_renders__with_special_option(self):
        tmpl_s = ""{{ a }}""

        if TT is not None:
            egn = TT.Engine(missing_tags='ignore')
            self.assertEqual(egn.renders(tmpl_s), '')


class Test20(unittest.TestCase):

    def setUp(self):
        self.workdir = tests.common.setup_workdir()

    def tearDown(self):
        tests.common.cleanup_workdir(self.workdir)

    def test_10_render__abspath(self):
        tmpl = os.path.join(self.workdir, ""a.mustache"")
        open(tmpl, 'w').write(""a = {{a}}"")

        if TT is not None:
            egn = TT.Engine()
            self.assertEqual(egn.render(tmpl, {'a': ""aaa"", }), ""a = aaa"")

    def test_12_render__abspath__no_context(self):
        tmpl = os.path.join(self.workdir, ""a.mustache"")
        tmpl_s = ""Hello!""
        open(tmpl, 'w').write(tmpl_s)

        if TT is not None:
            egn = TT.Engine()
            self.assertEqual(egn.render(tmpl), tmpl_s)

    def test_14_render__basename(self):
        tmpl = os.path.join(self.workdir, ""a.mustache"")
        open(tmpl, 'w').write(""a = {{a}}"")

        if TT is not None:
            egn = TT.Engine()
            res = egn.render(os.path.basename(tmpl), {'a': ""aaa"", },
                             at_paths=[self.workdir])
            self.assertEqual(res, ""a = aaa"")

# vim:sw=4:ts=4:et:
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', '#', 'Copyright', '(C)', '2015', 'Satoru', 'SATOH', '<ssato', 'at', 'redhat.com>', '#', 'License:', 'MIT', '#', '#', 'pylint:', 'disable=missing-docstring,', 'invalid-name', 'from', '__future__', 'import', 'absolute_import', 'import', 'os', 'import', 'unittest', 'import', 'tests.common', 'try:', 'import', 'anytemplate.engines.pystache', 'as', 'TT', 'except', 'ImportError:', 'TT', '=', 'None', 'class', 'Test10(unittest.TestCase):', 'def', 'test_20_renders(self):', 'tmpl_s', '=', '""Hello,', '{{name}}!""', 'exp', '=', '""Hello,', 'John!""', 'if', 'TT', 'is', 'not', 'None:', 'egn', '=', 'TT.Engine()', 'self.assertEqual(egn.renders(tmpl_s,', '{""name"":', '""John"",', '}),', 'exp)', 'def', 'test_22_renders__no_context(self):', 'tmpl_s', '=', '""Hello', 'world!""', 'if', 'TT', 'is', 'not', 'None:', 'egn', '=', 'TT.Engine()', 'self.assertEqual(egn.renders(tmpl_s),', 'tmpl_s)', 'def', 'test_24_renders__no_context__w_at_path(self):', 'tmpl_s', '=', '""Hello', 'world!""', 'if', 'TT', 'is', 'not', 'None:', 'egn', '=', 'TT.Engine()', 'self.assertEqual(egn.renders(tmpl_s,', ""at_paths=['.']),"", 'tmpl_s)', 'def', 'test_26_renders__no_context__w_custom_options(self):', 'tmpl_s', '=', '""Hello', 'world!""', 'if', 'TT', 'is', 'not', 'None:', 'egn', '=', 'TT.Engine()', 'self.assertEqual(egn.renders(tmpl_s,', 'missing_tags=""strict""),', 'tmpl_s)', 'def', 'test_28_renders__with_special_option(self):', 'tmpl_s', '=', '""{{', 'a', '}}""', 'if', 'TT', 'is', 'not', 'None:', 'egn', '=', ""TT.Engine(missing_tags='ignore')"", 'self.assertEqual(egn.renders(tmpl_s),', ""'')"", 'class', 'Test20(unittest.TestCase):', 'def', 'setUp(self):', 'self.workdir', '=', 'tests.common.setup_workdir()', 'def', 'tearDown(self):', 'tests.common.cleanup_workdir(self.workdir)', 'def', 'test_10_render__abspath(self):', 'tmpl', '=', 'os.path.join(self.workdir,', '""a.mustache"")', 'open(tmpl,', '\'w\').write(""a', '=', '{{a}}"")', 'if', 'TT', 'is', 'not', 'None:', 'egn', '=', 'TT.Engine()', 'self.assertEqual(egn.render(tmpl,', ""{'a':"", '""aaa"",', '}),', '""a', '=', 'aaa"")', 'def', 'test_12_render__abspath__no_context(self):', 'tmpl', '=', 'os.path.join(self.workdir,', '""a.mustache"")', 'tmpl_s', '=', '""Hello!""', 'open(tmpl,', ""'w').write(tmpl_s)"", 'if', 'TT', 'is', 'not', 'None:', 'egn', '=', 'TT.Engine()', 'self.assertEqual(egn.render(tmpl),', 'tmpl_s)', 'def', 'test_14_render__basename(self):', 'tmpl', '=', 'os.path.join(self.workdir,', '""a.mustache"")', 'open(tmpl,', '\'w\').write(""a', '=', '{{a}}"")', 'if', 'TT', 'is', 'not', 'None:', 'egn', '=', 'TT.Engine()', 'res', '=', 'egn.render(os.path.basename(tmpl),', ""{'a':"", '""aaa"",', '},', 'at_paths=[self.workdir])', 'self.assertEqual(res,', '""a', '=', 'aaa"")', '#', 'vim:sw=4:ts=4:et:', '```']",challenge not surrounded by ''': ,
"//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.pci.forms.townlandadmin;

import java.io.Serializable;

public final class GlobalContext extends ims.framework.FormContext implements Serializable
{
	private static final long serialVersionUID = 1L;

	public GlobalContext(ims.framework.Context context)
	{
		super(context);

	}

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//#############################################################################', '//#', '#', '//#', 'Copyright', '(C)', '<2015>', '<IMS', 'MAXIMS>', '#', '//#', '#', '//#', 'This', 'program', 'is', 'free', 'software:', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', '#', '//#', 'it', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'Affero', 'General', 'Public', 'License', 'as', '#', '//#', 'published', 'by', 'the', 'Free', 'Software', 'Foundation,', 'either', 'version', '3', 'of', 'the', '#', '//#', 'License,', 'or', '(at', 'your', 'option)', 'any', 'later', 'version.', '#', '//#', '#', '//#', 'This', 'program', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', '#', '//#', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', '#', '//#', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', '#', '//#', 'GNU', 'Affero', 'General', 'Public', 'License', 'for', 'more', 'details.', '#', '//#', '#', '//#', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'Affero', 'General', 'Public', 'License', '#', '//#', 'along', 'with', 'this', 'program.', 'If', 'not,', 'see', '<http://www.gnu.org/licenses/>.', '#', '//#', '#', '//#', 'IMS', 'MAXIMS', 'provides', 'absolutely', 'NO', 'GUARANTEE', 'OF', 'THE', 'CLINICAL', 'SAFTEY', 'of', '#', '//#', 'this', 'program.', 'Users', 'of', 'this', 'software', 'do', 'so', 'entirely', 'at', 'their', 'own', 'risk.', '#', '//#', 'IMS', 'MAXIMS', 'only', 'ensures', 'the', 'Clinical', 'Safety', 'of', 'unaltered', 'run-time', '#', '//#', 'software', 'that', 'it', 'builds,', 'deploys', 'and', 'maintains.', '#', '//#', '#', '//#############################################################################', '//#EOH', '//', 'This', 'code', 'was', 'generated', 'by', 'Barbara', 'Worwood', 'using', 'IMS', 'Development', 'Environment', '(version', '1.80', 'build', '5589.25814)', '//', 'Copyright', '(C)', '1995-2015', 'IMS', 'MAXIMS.', 'All', 'rights', 'reserved.', '//', 'WARNING:', 'DO', 'NOT', 'MODIFY', 'the', 'content', 'of', 'this', 'file', 'package', 'ims.pci.forms.townlandadmin;', 'import', 'java.io.Serializable;', 'public', 'final', 'class', 'GlobalContext', 'extends', 'ims.framework.FormContext', 'implements', 'Serializable', '{', 'private', 'static', 'final', 'long', 'serialVersionUID', '=', '1L;', 'public', 'GlobalContext(ims.framework.Context', 'context)', '{', 'super(context);', '}', '}', '```']",challenge not surrounded by ''': ,
"<link rel=""import"" href=""../../bower_components/polymer/polymer.html"">
<link rel=""import"" href=""../../styles/shared-styles.html"">
<link rel=""import"" href=""../../bower_components/paper-tooltip/paper-tooltip.html"">
<link rel=""import"" href=""..\..\bower_components/firebase-element/firebase-collection.html"">

<dom-module id=""account-section"">
  <template>
    <style include=""shared-styles""></style>
    <style>
      :host {
        display: block;
      }

      @media (max-width: 900px) {
        .heading {
          @apply(--layout-vertical);
          @apply(--layout-center);
        }
      }

      @media (min-width: 901px) {
        .heading {
          @apply(--layout-horizontal);
          @apply(--layout-center);
        }
        .heading img.avatar {
          position: absolute;
          top: 32px;
          right: 32px;
        }
      }
    </style>

    <paper-material elevation=""1"" hidden=""[[!user.name]]"">
      <div class=""heading"">
        <img class=""avatar"" src=""[[user.avatar]]"" alt=""No Avatar"" />
        <h2 class=""page-title"">[[_computeUserName(user)]]</h2>
      </div>

      <div class=""horizontal"">
        <h4 class=""paper-font-title"">Connected Firebase Apps</h4>
        <span class=""flex""></span>
        <paper-icon-button id=""addFbApp"" icon=""add"" on-tap=""openAddAppDialog""></paper-icon-button>
        <paper-tooltip for=""addFbApp"">Add</paper-tooltip>
      </div>

      <template is=""dom-repeat"" items=""[[userApps]]"" as=""app"">
        <span>[[app.name]]</span>
      </template>
    </paper-material>

    <firebase-collection id=""userApps"" location=""[[_computeUserAppsLocation(user)]]"" data=""{{userApps}}""></firebase-collection>

  </template>
  <script>
    Polymer({
      is: 'account-section',

      properties: {
        userName: {
          computed: '_computeUserName(user)'
        }
      },

      _computeUserAppsLocation :function (user) {
        if (user) {
          return 'https://webimport.firebaseio.com/users/' + user.__key__ + '/apps/firebase';
        }
      },

      _computeUserName: function (user) {
        if (user) {
          return user.name;
        }
      },

      openAddAppDialog: function () {
        document.querySelector('web-import-user-handler').open('addApp');
      }
    });
  </script>
</dom-module>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<link', 'rel=""import""', 'href=""../../bower_components/polymer/polymer.html"">', '<link', 'rel=""import""', 'href=""../../styles/shared-styles.html"">', '<link', 'rel=""import""', 'href=""../../bower_components/paper-tooltip/paper-tooltip.html"">', '<link', 'rel=""import""', 'href=""..\\..\\bower_components/firebase-element/firebase-collection.html"">', '<dom-module', 'id=""account-section"">', '<template>', '<style', 'include=""shared-styles""></style>', '<style>', ':host', '{', 'display:', 'block;', '}', '@media', '(max-width:', '900px)', '{', '.heading', '{', '@apply(--layout-vertical);', '@apply(--layout-center);', '}', '}', '@media', '(min-width:', '901px)', '{', '.heading', '{', '@apply(--layout-horizontal);', '@apply(--layout-center);', '}', '.heading', 'img.avatar', '{', 'position:', 'absolute;', 'top:', '32px;', 'right:', '32px;', '}', '}', '</style>', '<paper-material', 'elevation=""1""', 'hidden=""[[!user.name]]"">', '<div', 'class=""heading"">', '<img', 'class=""avatar""', 'src=""[[user.avatar]]""', 'alt=""No', 'Avatar""', '/>', '<h2', 'class=""page-title"">[[_computeUserName(user)]]</h2>', '</div>', '<div', 'class=""horizontal"">', '<h4', 'class=""paper-font-title"">Connected', 'Firebase', 'Apps</h4>', '<span', 'class=""flex""></span>', '<paper-icon-button', 'id=""addFbApp""', 'icon=""add""', 'on-tap=""openAddAppDialog""></paper-icon-button>', '<paper-tooltip', 'for=""addFbApp"">Add</paper-tooltip>', '</div>', '<template', 'is=""dom-repeat""', 'items=""[[userApps]]""', 'as=""app"">', '<span>[[app.name]]</span>', '</template>', '</paper-material>', '<firebase-collection', 'id=""userApps""', 'location=""[[_computeUserAppsLocation(user)]]""', 'data=""{{userApps}}""></firebase-collection>', '</template>', '<script>', 'Polymer({', 'is:', ""'account-section',"", 'properties:', '{', 'userName:', '{', 'computed:', ""'_computeUserName(user)'"", '}', '},', '_computeUserAppsLocation', ':function', '(user)', '{', 'if', '(user)', '{', 'return', ""'https://webimport.firebaseio.com/users/'"", '+', 'user.__key__', '+', ""'/apps/firebase';"", '}', '},', '_computeUserName:', 'function', '(user)', '{', 'if', '(user)', '{', 'return', 'user.name;', '}', '},', 'openAddAppDialog:', 'function', '()', '{', ""document.querySelector('web-import-user-handler').open('addApp');"", '}', '});', '</script>', '</dom-module>', '```']",challenge not surrounded by ''': ,
"/*
 * JBoss, Home of Professional Open Source
 * Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual
 * contributors by the @authors tag. See the copyright.txt in the
 * distribution for a full listing of individual contributors.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.arquillian.extension.governor.skipper.impl;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

import org.arquillian.extension.governor.skipper.api.TestSpec;

/**
 * @author <a href=""mailto:smikloso@redhat.com"">Stefan Miklosovic</a>
 *
 */
public class SkipperReportHolder {

    private final List<TestSpec> testSpecs = new ArrayList<TestSpec>();

    public void put(TestSpec testSpec) {
        this.testSpecs.add(testSpec);
    }

    public List<TestSpec> getAll() {
        return Collections.unmodifiableList(testSpecs);
    }

    public void clear() {
        testSpecs.clear();
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'JBoss,', 'Home', 'of', 'Professional', 'Open', 'Source', '*', 'Copyright', '2015,', 'Red', 'Hat,', 'Inc.', 'and/or', 'its', 'affiliates,', 'and', 'individual', '*', 'contributors', 'by', 'the', '@authors', 'tag.', 'See', 'the', 'copyright.txt', 'in', 'the', '*', 'distribution', 'for', 'a', 'full', 'listing', 'of', 'individual', 'contributors.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'org.arquillian.extension.governor.skipper.impl;', 'import', 'java.util.ArrayList;', 'import', 'java.util.Collections;', 'import', 'java.util.List;', 'import', 'org.arquillian.extension.governor.skipper.api.TestSpec;', '/**', '*', '@author', '<a', 'href=""mailto:smikloso@redhat.com"">Stefan', 'Miklosovic</a>', '*', '*/', 'public', 'class', 'SkipperReportHolder', '{', 'private', 'final', 'List<TestSpec>', 'testSpecs', '=', 'new', 'ArrayList<TestSpec>();', 'public', 'void', 'put(TestSpec', 'testSpec)', '{', 'this.testSpecs.add(testSpec);', '}', 'public', 'List<TestSpec>', 'getAll()', '{', 'return', 'Collections.unmodifiableList(testSpecs);', '}', 'public', 'void', 'clear()', '{', 'testSpecs.clear();', '}', '}', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE HTML>
<html class=""reftest-wait"">
<head>
<style>
#container {
  height: 500px;
  width: 500px;
  position: relative;
  overflow: hidden;
}
#panel {
  position:absolute;
  height: 100%;
  width: 100%;
  top: 0;
  left: 0;
  transform: translateX(-500px);
  background-color: yellow;
}
#tog {
  position: absolute;
  height: 50px;
  width: 50px;
  left: 0;
  bottom: 0;
  background-color: black;
}
</style>
</head>
<body>
<div id=""container"">
  <div id=""panel"">
    <div style=""width:300px; height:50px; background:blue;""></div>
  </div>
</div>
<div id=""tog""></div>
<script>
console.log(panel.getBoundingClientRect());
panel.style.transform = ""translateX(-450px)"";
console.log(panel.getBoundingClientRect());
panel.style.transform = ""translateX(-400px)"";
function doTest() {
  panel.style.transform = ""translateX(0)"";
  tog.style.visibility = ""hidden"";
  document.documentElement.removeAttribute(""class"");
}
window.addEventListener(""MozReftestInvalidate"", doTest);
</script>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'HTML>', '<html', 'class=""reftest-wait"">', '<head>', '<style>', '#container', '{', 'height:', '500px;', 'width:', '500px;', 'position:', 'relative;', 'overflow:', 'hidden;', '}', '#panel', '{', 'position:absolute;', 'height:', '100%;', 'width:', '100%;', 'top:', '0;', 'left:', '0;', 'transform:', 'translateX(-500px);', 'background-color:', 'yellow;', '}', '#tog', '{', 'position:', 'absolute;', 'height:', '50px;', 'width:', '50px;', 'left:', '0;', 'bottom:', '0;', 'background-color:', 'black;', '}', '</style>', '</head>', '<body>', '<div', 'id=""container"">', '<div', 'id=""panel"">', '<div', 'style=""width:300px;', 'height:50px;', 'background:blue;""></div>', '</div>', '</div>', '<div', 'id=""tog""></div>', '<script>', 'console.log(panel.getBoundingClientRect());', 'panel.style.transform', '=', '""translateX(-450px)"";', 'console.log(panel.getBoundingClientRect());', 'panel.style.transform', '=', '""translateX(-400px)"";', 'function', 'doTest()', '{', 'panel.style.transform', '=', '""translateX(0)"";', 'tog.style.visibility', '=', '""hidden"";', 'document.documentElement.removeAttribute(""class"");', '}', 'window.addEventListener(""MozReftestInvalidate"",', 'doTest);', '</script>', '```']",challenge not surrounded by ''': ,
"#! /bin/sh -e
# tup - A file-based build system
#
# Copyright (C) 2013-2018  Mike Shal <marfey@gmail.com>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

# Try the 'tup refactor' command, by adding gitignore.

. ./tup.sh

cat > Tupfile << HERE
HERE
tup touch Tupfile
update

cat > Tupfile << HERE
.gitignore
HERE
tup touch Tupfile
refactor_fail_msg ""Attempting to create a new .gitignore file""

eotup
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!', '/bin/sh', '-e', '#', 'tup', '-', 'A', 'file-based', 'build', 'system', '#', '#', 'Copyright', '(C)', '2013-2018', 'Mike', 'Shal', '<marfey@gmail.com>', '#', '#', 'This', 'program', 'is', 'free', 'software;', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', '#', 'it', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'version', '2', 'as', '#', 'published', 'by', 'the', 'Free', 'Software', 'Foundation.', '#', '#', 'This', 'program', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', '#', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', '#', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', '#', 'GNU', 'General', 'Public', 'License', 'for', 'more', 'details.', '#', '#', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'along', '#', 'with', 'this', 'program;', 'if', 'not,', 'write', 'to', 'the', 'Free', 'Software', 'Foundation,', 'Inc.,', '#', '51', 'Franklin', 'Street,', 'Fifth', 'Floor,', 'Boston,', 'MA', '02110-1301', 'USA.', '#', 'Try', 'the', ""'tup"", ""refactor'"", 'command,', 'by', 'adding', 'gitignore.', '.', './tup.sh', 'cat', '>', 'Tupfile', '<<', 'HERE', 'HERE', 'tup', 'touch', 'Tupfile', 'update', 'cat', '>', 'Tupfile', '<<', 'HERE', '.gitignore', 'HERE', 'tup', 'touch', 'Tupfile', 'refactor_fail_msg', '""Attempting', 'to', 'create', 'a', 'new', '.gitignore', 'file""', 'eotup', '```']",challenge not surrounded by ''': ,
"#!/usr/bin/python

import HistGen_py
import numpy

myHist = [100, 300, 300, 700, 900, 600, 400, 200, 300, 100]
myBins = [""infrared"", ""red"", ""orange"", ""yellow"", ""sour"", ""green"", ""teal"", ""blue"", ""violet"", ""ultraviolet""]
myTest = HistGen_py.HistGen(myHist)

for i in range(0,10):
	index = myTest.genIndex(numpy.random.randint(0, high=numpy.iinfo(numpy.uint64).max, dtype='uint64'))
	while index == len(myHist):
		index = myTest.genIndex(numpy.random.randint(0, high=numpy.iinfo(numpy.uint64).max, dtype='uint64'))
	print(myBins[index])","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/usr/bin/python', 'import', 'HistGen_py', 'import', 'numpy', 'myHist', '=', '[100,', '300,', '300,', '700,', '900,', '600,', '400,', '200,', '300,', '100]', 'myBins', '=', '[""infrared"",', '""red"",', '""orange"",', '""yellow"",', '""sour"",', '""green"",', '""teal"",', '""blue"",', '""violet"",', '""ultraviolet""]', 'myTest', '=', 'HistGen_py.HistGen(myHist)', 'for', 'i', 'in', 'range(0,10):', 'index', '=', 'myTest.genIndex(numpy.random.randint(0,', 'high=numpy.iinfo(numpy.uint64).max,', ""dtype='uint64'))"", 'while', 'index', '==', 'len(myHist):', 'index', '=', 'myTest.genIndex(numpy.random.randint(0,', 'high=numpy.iinfo(numpy.uint64).max,', ""dtype='uint64'))"", 'print(myBins[index])```']",challenge not surrounded by ''': ,
"package util;

import java.lang.reflect.Field;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

import junit.framework.Assert;

public class PrivateAccessor {
	public static Object invokePrivateMethod(Object o, String methodName,
			Object[] params) {
		Assert.assertNotNull(o);
		Assert.assertNotNull(methodName);
		Assert.assertNotNull(params);

		for (Method method : o.getClass().getDeclaredMethods()) {
			if (methodName.equals(method.getName())) {
				try {
					method.setAccessible(true);
					return method.invoke(o, params);
				} catch (IllegalAccessException ex) {
					Assert.fail(""IllegalAccessException accessing ""
							+ methodName);
				} catch (InvocationTargetException ite) {
					Assert.fail(""InvocationTargetException accessing ""
							+ methodName);
				}
			}
		}
		Assert.fail(""Method '"" + methodName + ""' not found"");
		return null;
	}

	public static Object getPrivateField(Object o, String fieldName) {
		// Check we have valid arguments...
		Assert.assertNotNull(o);
		Assert.assertNotNull(fieldName);

		// Go and find the private field...
		final Field fields[] = o.getClass().getDeclaredFields();
		for (int i = 0; i < fields.length; ++i) {
			if (fieldName.equals(fields[i].getName())) {
				try {
					fields[i].setAccessible(true);
					return fields[i].get(o);
				} catch (IllegalAccessException ex) {
					Assert
							.fail(""IllegalAccessException accessing ""
									+ fieldName);
				}
			}
		}
		Assert.fail(""Field '"" + fieldName + ""' not found"");
		return null;
	}
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'util;', 'import', 'java.lang.reflect.Field;', 'import', 'java.lang.reflect.InvocationTargetException;', 'import', 'java.lang.reflect.Method;', 'import', 'junit.framework.Assert;', 'public', 'class', 'PrivateAccessor', '{', 'public', 'static', 'Object', 'invokePrivateMethod(Object', 'o,', 'String', 'methodName,', 'Object[]', 'params)', '{', 'Assert.assertNotNull(o);', 'Assert.assertNotNull(methodName);', 'Assert.assertNotNull(params);', 'for', '(Method', 'method', ':', 'o.getClass().getDeclaredMethods())', '{', 'if', '(methodName.equals(method.getName()))', '{', 'try', '{', 'method.setAccessible(true);', 'return', 'method.invoke(o,', 'params);', '}', 'catch', '(IllegalAccessException', 'ex)', '{', 'Assert.fail(""IllegalAccessException', 'accessing', '""', '+', 'methodName);', '}', 'catch', '(InvocationTargetException', 'ite)', '{', 'Assert.fail(""InvocationTargetException', 'accessing', '""', '+', 'methodName);', '}', '}', '}', 'Assert.fail(""Method', '\'""', '+', 'methodName', '+', '""\'', 'not', 'found"");', 'return', 'null;', '}', 'public', 'static', 'Object', 'getPrivateField(Object', 'o,', 'String', 'fieldName)', '{', '//', 'Check', 'we', 'have', 'valid', 'arguments...', 'Assert.assertNotNull(o);', 'Assert.assertNotNull(fieldName);', '//', 'Go', 'and', 'find', 'the', 'private', 'field...', 'final', 'Field', 'fields[]', '=', 'o.getClass().getDeclaredFields();', 'for', '(int', 'i', '=', '0;', 'i', '<', 'fields.length;', '++i)', '{', 'if', '(fieldName.equals(fields[i].getName()))', '{', 'try', '{', 'fields[i].setAccessible(true);', 'return', 'fields[i].get(o);', '}', 'catch', '(IllegalAccessException', 'ex)', '{', 'Assert', '.fail(""IllegalAccessException', 'accessing', '""', '+', 'fieldName);', '}', '}', '}', 'Assert.fail(""Field', '\'""', '+', 'fieldName', '+', '""\'', 'not', 'found"");', 'return', 'null;', '}', '}', '```']",challenge not surrounded by ''': ,
"package com.molina.cvmfs.common;

/**
 * @author Jose Molina Colmenero
 */
public class PathHash {

    private long hash1;
    private long hash2;

    public PathHash(long hash1, long hash2) {
        this.hash1 = hash1;
        this.hash2 = hash2;
    }

    public long getHash1() {
        return hash1;
    }

    public long getHash2() {
        return hash2;
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.molina.cvmfs.common;', '/**', '*', '@author', 'Jose', 'Molina', 'Colmenero', '*/', 'public', 'class', 'PathHash', '{', 'private', 'long', 'hash1;', 'private', 'long', 'hash2;', 'public', 'PathHash(long', 'hash1,', 'long', 'hash2)', '{', 'this.hash1', '=', 'hash1;', 'this.hash2', '=', 'hash2;', '}', 'public', 'long', 'getHash1()', '{', 'return', 'hash1;', '}', 'public', 'long', 'getHash2()', '{', 'return', 'hash2;', '}', '}', '```']",challenge not surrounded by ''': ,
"/**
 * Copyright 2015 StreamSets Inc.
 *
 * Licensed under the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * ""License""); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.streamsets.pipeline.lib.kafka;

import com.streamsets.pipeline.api.ErrorCode;
import com.streamsets.pipeline.api.GenerateResourceBundle;

@GenerateResourceBundle
public enum KafkaErrors implements ErrorCode {

  KAFKA_03(""Cannot find metadata for topic '{}' from the broker list '{}'""),
  KAFKA_04(""Topic '{}' does not exist""),
  KAFKA_05(""Topic cannot be empty""),
  KAFKA_06(""Zookeeper URI cannot be empty""),
  KAFKA_07(""Invalid broker URI '{}'""),
  KAFKA_09(""Invalid Zookeeper connect string '{}' : {}""),
  KAFKA_10(""Cannot validate configuration: {}""),
  KAFKA_11(""Cannot retrieve metadata for topic '{}' from broker '{}': {}""),

  //Kafka source messages
  KAFKA_21(""Cannot find a new leader after a Kafka broker failure""),
  KAFKA_22(""Error fetching offset data from the broker '{}': {}""),
  KAFKA_23(""Cannot find metadata for topic '{}', partition '{}'""),
  KAFKA_24(""Cannot find leader for topic '{}', partition '{}'""),
  KAFKA_25(""Error communicating with broker '{}' to find leader for topic '{}', partition '{}': {}""),
  KAFKA_26(""Error fetching data from Kafka topic '{}', partition '{}', offset '{}""),
  KAFKA_27(""Found old offset '{}'. Expected offset '{}'. Discarding message.""),
  KAFKA_28(""SocketTimeoutException encountered while fetching message from Kafka""),
  KAFKA_29(""Error fetching data from Kafka: {}""),
  KAFKA_30(""Error fetching offset from Kafka: {}""),
  KAFKA_31(""Error connecting to ZooKeeper with connection string '{}': {}""),
  KAFKA_32(""Error getting iterator from KafkaStream: {}""),
  KAFKA_33(""Define the consumer group""),
  KAFKA_35(""Batch wait time cannot be less than 1""),
  KAFKA_37(""Cannot parse record from message '{}': {}""),
  KAFKA_40(""Messages with XML data cannot have multiple XML documents in a single message""),
  KAFKA_41(""Could not get partition count for topic '{}' : {}""),
  KAFKA_42(""Could not get partition count for topic '{}'""),
  KAFKA_43(""Schema Registry URLs must be configured to use Confluent Deserializer""),
  KAFKA_44(""Confluent Avro Deserializer not supported by this version of Kafka.""),

  //Kafka target messages
  KAFKA_50(""Error writing data to the Kafka broker: {}""),
  KAFKA_51(""Error serializing record '{}': {}""),
  KAFKA_54(""Error evaluating the partition expression '{}' for record '{}': {}""),
  KAFKA_55(""Error converting the partition expression '{}' to a partition ID for topic '{}': {}""),
  KAFKA_56(""Partition expression generated an invalid partition ID '{}'. Topic '{}' has {} partitions. Record '{}'.""),
  KAFKA_57(""Invalid partition expression '{}': {}""),
  KAFKA_58(""Field cannot be empty""),
  KAFKA_59(""Fields cannot be empty""),
  KAFKA_60(""Cannot serialize record '{}'. All records from batch '{}' for partition '{}' are sent to error: {}""),
  KAFKA_61(""Invalid topic expression '{}': {}""),
  KAFKA_62(""Topic expression '{}' generated a null or empty topic for record '{}'""),
  KAFKA_63(""Error evaluating topic expression '{}' for record '{}': {}""),
  KAFKA_64(""Topic White List cannot be empty if topic is resolved at runtime""),
  KAFKA_65(""Topic '{}' resolved from record '{}' is not among the allowed topics""),
  KAFKA_66(""Kafka Producer configuration '{}' must be specified a valid {} value greater than or equal to 0""),
  KAFKA_67(""Error connecting to Kafka Brokers '{}'""),
  KAFKA_68(""Error getting metadata for topic '{}' from broker '{}' due to error: {}""),
  KAFKA_69(""Message is larger than the maximum allowed size configured in Kafka Broker""),
  KAFKA_70(""Include Schema cannot be used in conjunction with Confluent Serializer""),
  KAFKA_71(""Schema Registry URLs must be configured to use Confluent Serializer""),
  KAFKA_72(""Subject or Schema ID must be defined to use Confluent Serializer""),
  KAFKA_73(""Confluent Avro Serializer not supported by this version of Kafka.""),
  ;

  private final String msg;

  KafkaErrors(String msg) {
    this.msg = msg;
  }

  @Override
  public String getCode() {
    return name();
  }

  @Override
  public String getMessage() {
    return msg;
  }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', 'Copyright', '2015', 'StreamSets', 'Inc.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'Software', 'Foundation', '(ASF)', 'under', 'one', '*', 'or', 'more', 'contributor', 'license', 'agreements.', 'See', 'the', 'NOTICE', 'file', '*', 'distributed', 'with', 'this', 'work', 'for', 'additional', 'information', '*', 'regarding', 'copyright', 'ownership.', 'The', 'ASF', 'licenses', 'this', 'file', '*', 'to', 'you', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '*', '""License"");', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', '*', 'with', 'the', 'License.', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'com.streamsets.pipeline.lib.kafka;', 'import', 'com.streamsets.pipeline.api.ErrorCode;', 'import', 'com.streamsets.pipeline.api.GenerateResourceBundle;', '@GenerateResourceBundle', 'public', 'enum', 'KafkaErrors', 'implements', 'ErrorCode', '{', 'KAFKA_03(""Cannot', 'find', 'metadata', 'for', 'topic', ""'{}'"", 'from', 'the', 'broker', 'list', '\'{}\'""),', 'KAFKA_04(""Topic', ""'{}'"", 'does', 'not', 'exist""),', 'KAFKA_05(""Topic', 'cannot', 'be', 'empty""),', 'KAFKA_06(""Zookeeper', 'URI', 'cannot', 'be', 'empty""),', 'KAFKA_07(""Invalid', 'broker', 'URI', '\'{}\'""),', 'KAFKA_09(""Invalid', 'Zookeeper', 'connect', 'string', ""'{}'"", ':', '{}""),', 'KAFKA_10(""Cannot', 'validate', 'configuration:', '{}""),', 'KAFKA_11(""Cannot', 'retrieve', 'metadata', 'for', 'topic', ""'{}'"", 'from', 'broker', ""'{}':"", '{}""),', '//Kafka', 'source', 'messages', 'KAFKA_21(""Cannot', 'find', 'a', 'new', 'leader', 'after', 'a', 'Kafka', 'broker', 'failure""),', 'KAFKA_22(""Error', 'fetching', 'offset', 'data', 'from', 'the', 'broker', ""'{}':"", '{}""),', 'KAFKA_23(""Cannot', 'find', 'metadata', 'for', 'topic', ""'{}',"", 'partition', '\'{}\'""),', 'KAFKA_24(""Cannot', 'find', 'leader', 'for', 'topic', ""'{}',"", 'partition', '\'{}\'""),', 'KAFKA_25(""Error', 'communicating', 'with', 'broker', ""'{}'"", 'to', 'find', 'leader', 'for', 'topic', ""'{}',"", 'partition', ""'{}':"", '{}""),', 'KAFKA_26(""Error', 'fetching', 'data', 'from', 'Kafka', 'topic', ""'{}',"", 'partition', ""'{}',"", 'offset', '\'{}""),', 'KAFKA_27(""Found', 'old', 'offset', ""'{}'."", 'Expected', 'offset', ""'{}'."", 'Discarding', 'message.""),', 'KAFKA_28(""SocketTimeoutException', 'encountered', 'while', 'fetching', 'message', 'from', 'Kafka""),', 'KAFKA_29(""Error', 'fetching', 'data', 'from', 'Kafka:', '{}""),', 'KAFKA_30(""Error', 'fetching', 'offset', 'from', 'Kafka:', '{}""),', 'KAFKA_31(""Error', 'connecting', 'to', 'ZooKeeper', 'with', 'connection', 'string', ""'{}':"", '{}""),', 'KAFKA_32(""Error', 'getting', 'iterator', 'from', 'KafkaStream:', '{}""),', 'KAFKA_33(""Define', 'the', 'consumer', 'group""),', 'KAFKA_35(""Batch', 'wait', 'time', 'cannot', 'be', 'less', 'than', '1""),', 'KAFKA_37(""Cannot', 'parse', 'record', 'from', 'message', ""'{}':"", '{}""),', 'KAFKA_40(""Messages', 'with', 'XML', 'data', 'cannot', 'have', 'multiple', 'XML', 'documents', 'in', 'a', 'single', 'message""),', 'KAFKA_41(""Could', 'not', 'get', 'partition', 'count', 'for', 'topic', ""'{}'"", ':', '{}""),', 'KAFKA_42(""Could', 'not', 'get', 'partition', 'count', 'for', 'topic', '\'{}\'""),', 'KAFKA_43(""Schema', 'Registry', 'URLs', 'must', 'be', 'configured', 'to', 'use', 'Confluent', 'Deserializer""),', 'KAFKA_44(""Confluent', 'Avro', 'Deserializer', 'not', 'supported', 'by', 'this', 'version', 'of', 'Kafka.""),', '//Kafka', 'target', 'messages', 'KAFKA_50(""Error', 'writing', 'data', 'to', 'the', 'Kafka', 'broker:', '{}""),', 'KAFKA_51(""Error', 'serializing', 'record', ""'{}':"", '{}""),', 'KAFKA_54(""Error', 'evaluating', 'the', 'partition', 'expression', ""'{}'"", 'for', 'record', ""'{}':"", '{}""),', 'KAFKA_55(""Error', 'converting', 'the', 'partition', 'expression', ""'{}'"", 'to', 'a', 'partition', 'ID', 'for', 'topic', ""'{}':"", '{}""),', 'KAFKA_56(""Partition', 'expression', 'generated', 'an', 'invalid', 'partition', 'ID', ""'{}'."", 'Topic', ""'{}'"", 'has', '{}', 'partitions.', 'Record', '\'{}\'.""),', 'KAFKA_57(""Invalid', 'partition', 'expression', ""'{}':"", '{}""),', 'KAFKA_58(""Field', 'cannot', 'be', 'empty""),', 'KAFKA_59(""Fields', 'cannot', 'be', 'empty""),', 'KAFKA_60(""Cannot', 'serialize', 'record', ""'{}'."", 'All', 'records', 'from', 'batch', ""'{}'"", 'for', 'partition', ""'{}'"", 'are', 'sent', 'to', 'error:', '{}""),', 'KAFKA_61(""Invalid', 'topic', 'expression', ""'{}':"", '{}""),', 'KAFKA_62(""Topic', 'expression', ""'{}'"", 'generated', 'a', 'null', 'or', 'empty', 'topic', 'for', 'record', '\'{}\'""),', 'KAFKA_63(""Error', 'evaluating', 'topic', 'expression', ""'{}'"", 'for', 'record', ""'{}':"", '{}""),', 'KAFKA_64(""Topic', 'White', 'List', 'cannot', 'be', 'empty', 'if', 'topic', 'is', 'resolved', 'at', 'runtime""),', 'KAFKA_65(""Topic', ""'{}'"", 'resolved', 'from', 'record', ""'{}'"", 'is', 'not', 'among', 'the', 'allowed', 'topics""),', 'KAFKA_66(""Kafka', 'Producer', 'configuration', ""'{}'"", 'must', 'be', 'specified', 'a', 'valid', '{}', 'value', 'greater', 'than', 'or', 'equal', 'to', '0""),', 'KAFKA_67(""Error', 'connecting', 'to', 'Kafka', 'Brokers', '\'{}\'""),', 'KAFKA_68(""Error', 'getting', 'metadata', 'for', 'topic', ""'{}'"", 'from', 'broker', ""'{}'"", 'due', 'to', 'error:', '{}""),', 'KAFKA_69(""Message', 'is', 'larger', 'than', 'the', 'maximum', 'allowed', 'size', 'configured', 'in', 'Kafka', 'Broker""),', 'KAFKA_70(""Include', 'Schema', 'cannot', 'be', 'used', 'in', 'conjunction', 'with', 'Confluent', 'Serializer""),', 'KAFKA_71(""Schema', 'Registry', 'URLs', 'must', 'be', 'configured', 'to', 'use', 'Confluent', 'Serializer""),', 'KAFKA_72(""Subject', 'or', 'Schema', 'ID', 'must', 'be', 'defined', 'to', 'use', 'Confluent', 'Serializer""),', 'KAFKA_73(""Confluent', 'Avro', 'Serializer', 'not', 'supported', 'by', 'this', 'version', 'of', 'Kafka.""),', ';', 'private', 'final', 'String', 'msg;', 'KafkaErrors(String', 'msg)', '{', 'this.msg', '=', 'msg;', '}', '@Override', 'public', 'String', 'getCode()', '{', 'return', 'name();', '}', '@Override', 'public', 'String', 'getMessage()', '{', 'return', 'msg;', '}', '}', '```']",challenge not surrounded by ''': ,
"# -*- coding: utf-8 -*-
#
# Debug/Helper script for XSL stylesheet development
#
# >>> python xsltransform <XML File> <XSLT Stylesheet>
#       ... transforms the XML file using the stylesheet
#
import sys
from lxml import etree

def parse(source):

    parser = etree.XMLParser(no_network=False)
    result = etree.parse(source, parser)
    return result

def transform(tree, stylesheet_path, **args):

    if args:
        _args = [(k, ""'%s'"" % args[k]) for k in args]
        _args = dict(_args)
    else:
        _args = None
    stylesheet = etree.parse(stylesheet_path)

    ac = etree.XSLTAccessControl(read_file=True, read_network=True)
    transformer = etree.XSLT(stylesheet, access_control=ac)
    if _args:
        result = transformer(tree, **_args)
    else:
        result = transformer(tree)
    return result

def main(argv):

    try:
        xmlpath = argv[0]
    except:
        print ""Usage: python xsltransform <XML File> [<XSLT Stylesheet>]""
        return
    try:
        xslpath = argv[1]
    except:
        xslpath = None

    tree = parse(xmlpath)

    if xslpath is not None:
        tree = transform(tree, xslpath)

    print etree.tostring(tree, pretty_print=True)

if __name__ == ""__main__"":
    sys.exit(main(sys.argv[1:]))
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', '-*-', 'coding:', 'utf-8', '-*-', '#', '#', 'Debug/Helper', 'script', 'for', 'XSL', 'stylesheet', 'development', '#', '#', '>>>', 'python', 'xsltransform', '<XML', 'File>', '<XSLT', 'Stylesheet>', '#', '...', 'transforms', 'the', 'XML', 'file', 'using', 'the', 'stylesheet', '#', 'import', 'sys', 'from', 'lxml', 'import', 'etree', 'def', 'parse(source):', 'parser', '=', 'etree.XMLParser(no_network=False)', 'result', '=', 'etree.parse(source,', 'parser)', 'return', 'result', 'def', 'transform(tree,', 'stylesheet_path,', '**args):', 'if', 'args:', '_args', '=', '[(k,', '""\'%s\'""', '%', 'args[k])', 'for', 'k', 'in', 'args]', '_args', '=', 'dict(_args)', 'else:', '_args', '=', 'None', 'stylesheet', '=', 'etree.parse(stylesheet_path)', 'ac', '=', 'etree.XSLTAccessControl(read_file=True,', 'read_network=True)', 'transformer', '=', 'etree.XSLT(stylesheet,', 'access_control=ac)', 'if', '_args:', 'result', '=', 'transformer(tree,', '**_args)', 'else:', 'result', '=', 'transformer(tree)', 'return', 'result', 'def', 'main(argv):', 'try:', 'xmlpath', '=', 'argv[0]', 'except:', 'print', '""Usage:', 'python', 'xsltransform', '<XML', 'File>', '[<XSLT', 'Stylesheet>]""', 'return', 'try:', 'xslpath', '=', 'argv[1]', 'except:', 'xslpath', '=', 'None', 'tree', '=', 'parse(xmlpath)', 'if', 'xslpath', 'is', 'not', 'None:', 'tree', '=', 'transform(tree,', 'xslpath)', 'print', 'etree.tostring(tree,', 'pretty_print=True)', 'if', '__name__', '==', '""__main__"":', 'sys.exit(main(sys.argv[1:]))', '```']",challenge not surrounded by ''': ,
"package com.atexpose.dispatcher.channels.tasks;

import com.atexpose.util.watch.IWatch;
import io.schinzel.basicutils.Checker;
import io.schinzel.basicutils.thrower.Thrower;

import java.time.*;
import java.util.regex.Pattern;

/**
 * The purpose of this class is to hold that is shared between MonthlyTaskChannel and
 * DailyTaskChannel.
 */

class TaskUtil {

    protected TaskUtil(){}

    /**
     * @param zoneId E.g. ""UTC"", """"America/New_York""
     * @return The zone id of the argument zone id
     */
    static ZoneId getZoneId(String zoneId) {
        if (Checker.isEmpty(zoneId)) {
            return ZoneId.of(""UTC"");
        }
        return ZoneId.of(zoneId);
    }


    /**
     * @param timeOfDay  E.g. ""23:55"".
     * @param dayOfMonth Day of month. Min 1 and max 28.
     * @param zoneId     The zone which the argument time-of-day string and day-of-month is in
     * @param watch      Represents the time now
     * @return The argument time-of-day and day-of-month as a date in the argument zone.
     */
    static ZonedDateTime getZonedDateTime(String timeOfDay, int dayOfMonth, ZoneId zoneId, IWatch watch) {
        return TaskUtil.getZonedDateTime(timeOfDay, zoneId, watch).withDayOfMonth(dayOfMonth);
    }


    /**
     * @param timeOfDay E.g. ""23:55""
     * @param zoneId    The zone which the argument time-of-day string is in
     * @param watch     Watch the returns the time now
     * @return The argument time as date today in the argument zone
     */
    static ZonedDateTime getZonedDateTime(String timeOfDay, ZoneId zoneId, IWatch watch) {
        LocalDate localDate = watch.getNowAsInstant()
                .atZone(zoneId)
                .toLocalDate();
        return LocalTime
                //Get the local time from time-of-day string
                .parse(timeOfDay)
                //Get date by setting  the date to today in the argument zone
                .atDate(localDate)
                //Get ZoneDateTime by setting the  argument zone id
                .atZone(zoneId);
    }


    /**
     * Validates argument day of time string. Throws exception if not valid.
     *
     * @param timeOfDay Time-string to validate. E.g. ""23:55""
     * @return The argument time of day
     */
    static String validateTimeOfDay(String timeOfDay) {
        Pattern timePattern = Pattern.compile(""^([01]?[0-9]|2[0-3]):[0-5][0-9]"");
        Thrower.throwIfFalse(timePattern.matcher(timeOfDay).matches())
                .message(""Incorrect task time: '"" + timeOfDay + ""'. Correct format is HH:mm, e.g. 09:00 or 23:55."");
        return timeOfDay;
    }


    /**
     * @param dayOfMonth The day of the month. A number between 1 and 28.
     * @return The argument day of month
     */
    static int validateDayOfMonth(int dayOfMonth) {
        Thrower.throwIfVarOutsideRange(dayOfMonth, ""dayOfMonth"", 1, 28);
        return dayOfMonth;
    }

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.atexpose.dispatcher.channels.tasks;', 'import', 'com.atexpose.util.watch.IWatch;', 'import', 'io.schinzel.basicutils.Checker;', 'import', 'io.schinzel.basicutils.thrower.Thrower;', 'import', 'java.time.*;', 'import', 'java.util.regex.Pattern;', '/**', '*', 'The', 'purpose', 'of', 'this', 'class', 'is', 'to', 'hold', 'that', 'is', 'shared', 'between', 'MonthlyTaskChannel', 'and', '*', 'DailyTaskChannel.', '*/', 'class', 'TaskUtil', '{', 'protected', 'TaskUtil(){}', '/**', '*', '@param', 'zoneId', 'E.g.', '""UTC"",', '""""America/New_York""', '*', '@return', 'The', 'zone', 'id', 'of', 'the', 'argument', 'zone', 'id', '*/', 'static', 'ZoneId', 'getZoneId(String', 'zoneId)', '{', 'if', '(Checker.isEmpty(zoneId))', '{', 'return', 'ZoneId.of(""UTC"");', '}', 'return', 'ZoneId.of(zoneId);', '}', '/**', '*', '@param', 'timeOfDay', 'E.g.', '""23:55"".', '*', '@param', 'dayOfMonth', 'Day', 'of', 'month.', 'Min', '1', 'and', 'max', '28.', '*', '@param', 'zoneId', 'The', 'zone', 'which', 'the', 'argument', 'time-of-day', 'string', 'and', 'day-of-month', 'is', 'in', '*', '@param', 'watch', 'Represents', 'the', 'time', 'now', '*', '@return', 'The', 'argument', 'time-of-day', 'and', 'day-of-month', 'as', 'a', 'date', 'in', 'the', 'argument', 'zone.', '*/', 'static', 'ZonedDateTime', 'getZonedDateTime(String', 'timeOfDay,', 'int', 'dayOfMonth,', 'ZoneId', 'zoneId,', 'IWatch', 'watch)', '{', 'return', 'TaskUtil.getZonedDateTime(timeOfDay,', 'zoneId,', 'watch).withDayOfMonth(dayOfMonth);', '}', '/**', '*', '@param', 'timeOfDay', 'E.g.', '""23:55""', '*', '@param', 'zoneId', 'The', 'zone', 'which', 'the', 'argument', 'time-of-day', 'string', 'is', 'in', '*', '@param', 'watch', 'Watch', 'the', 'returns', 'the', 'time', 'now', '*', '@return', 'The', 'argument', 'time', 'as', 'date', 'today', 'in', 'the', 'argument', 'zone', '*/', 'static', 'ZonedDateTime', 'getZonedDateTime(String', 'timeOfDay,', 'ZoneId', 'zoneId,', 'IWatch', 'watch)', '{', 'LocalDate', 'localDate', '=', 'watch.getNowAsInstant()', '.atZone(zoneId)', '.toLocalDate();', 'return', 'LocalTime', '//Get', 'the', 'local', 'time', 'from', 'time-of-day', 'string', '.parse(timeOfDay)', '//Get', 'date', 'by', 'setting', 'the', 'date', 'to', 'today', 'in', 'the', 'argument', 'zone', '.atDate(localDate)', '//Get', 'ZoneDateTime', 'by', 'setting', 'the', 'argument', 'zone', 'id', '.atZone(zoneId);', '}', '/**', '*', 'Validates', 'argument', 'day', 'of', 'time', 'string.', 'Throws', 'exception', 'if', 'not', 'valid.', '*', '*', '@param', 'timeOfDay', 'Time-string', 'to', 'validate.', 'E.g.', '""23:55""', '*', '@return', 'The', 'argument', 'time', 'of', 'day', '*/', 'static', 'String', 'validateTimeOfDay(String', 'timeOfDay)', '{', 'Pattern', 'timePattern', '=', 'Pattern.compile(""^([01]?[0-9]|2[0-3]):[0-5][0-9]"");', 'Thrower.throwIfFalse(timePattern.matcher(timeOfDay).matches())', '.message(""Incorrect', 'task', 'time:', '\'""', '+', 'timeOfDay', '+', '""\'.', 'Correct', 'format', 'is', 'HH:mm,', 'e.g.', '09:00', 'or', '23:55."");', 'return', 'timeOfDay;', '}', '/**', '*', '@param', 'dayOfMonth', 'The', 'day', 'of', 'the', 'month.', 'A', 'number', 'between', '1', 'and', '28.', '*', '@return', 'The', 'argument', 'day', 'of', 'month', '*/', 'static', 'int', 'validateDayOfMonth(int', 'dayOfMonth)', '{', 'Thrower.throwIfVarOutsideRange(dayOfMonth,', '""dayOfMonth"",', '1,', '28);', 'return', 'dayOfMonth;', '}', '}', '```']",challenge not surrounded by ''': ,
"#!/bin/sh

echo ""Choose scheme name and update it in SCHEME_XC""
echo ""click manage scheme and choose scheme name and find the build configuration BUILD_CONFIG"" 
echo ""if your features(automation test features) are present in different folder rather than folder where project is present , mention the path in FEATURES_PATH
or else remove the argument.""
echo ""APPNAME - name of the application usually same as the scheme name""
echo ""PROJ_LOC - location of xcode project if thats same as current folder remove this option.""
ruby gistfile1.rb

SCHEME_XC=""LiveCasino-cal""
BUILD_CONFIG=""Debug""
FEATURES_PATH=""/Users/seunare/Unibet-calabash-automation/Unibet-calabash-livecasino/features""
ARCHITECTURE_SELECTED=""i386 x86_64""
APPNAME=""LiveCasino-cal""
PROJ_LOC=""/Users/seunare/ios-apps/UnibetApps.xcworkspace""

if [ $1 = ""clean"" ]
then
xcodebuild  -workspace ""${PROJ_LOC}"" -scheme ""${SCHEME_XC}"" -configuration Debug ONLY_ACTIVE_ARCH=NO -sdk iphonesimulator clean build
fi

if [ $1 = ""build"" ]
then
xcodebuild   -workspace ""${PROJ_LOC}"" -scheme ""${SCHEME_XC}"" -configuration Debug ONLY_ACTIVE_ARCH=NO -sdk iphonesimulator build
fi

BUILT_PRODUCTS_DIR=$(xcodebuild -scheme ""${SCHEME_XC}"" -workspace ""${PROJ_LOC}"" ARCHS=""${ARCHITECTURE_SELECTED}"" ONLY_ACTIVE_ARCH=NO -sdk iphonesimulator  -configuration ""${BUILD_CONFIG}"" -showBuildSettings | grep -m 1 ""BUILT_PRODUCTS_DIR"" | grep -oEi ""\/.*"" | xargs -L1 dirname)

APP_BUNDLE_PATH_VAR=""${BUILT_PRODUCTS_DIR}""/""${BUILD_CONFIG}""-iphonesimulator/""${APPNAME}"".app

echo DEVICE_TARGET='iPhone 6 Plus (8.4)' APP_BUNDLE_PATH=$APP_BUNDLE_PATH_VAR bundle exec cucumber -p ios --tag $2
DEVICE_TARGET='iPhone 6 Plus (8.4)' APP_BUNDLE_PATH=$APP_BUNDLE_PATH_VAR bundle exec cucumber -p ios --tag $2","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/bin/sh', 'echo', '""Choose', 'scheme', 'name', 'and', 'update', 'it', 'in', 'SCHEME_XC""', 'echo', '""click', 'manage', 'scheme', 'and', 'choose', 'scheme', 'name', 'and', 'find', 'the', 'build', 'configuration', 'BUILD_CONFIG""', 'echo', '""if', 'your', 'features(automation', 'test', 'features)', 'are', 'present', 'in', 'different', 'folder', 'rather', 'than', 'folder', 'where', 'project', 'is', 'present', ',', 'mention', 'the', 'path', 'in', 'FEATURES_PATH', 'or', 'else', 'remove', 'the', 'argument.""', 'echo', '""APPNAME', '-', 'name', 'of', 'the', 'application', 'usually', 'same', 'as', 'the', 'scheme', 'name""', 'echo', '""PROJ_LOC', '-', 'location', 'of', 'xcode', 'project', 'if', 'thats', 'same', 'as', 'current', 'folder', 'remove', 'this', 'option.""', 'ruby', 'gistfile1.rb', 'SCHEME_XC=""LiveCasino-cal""', 'BUILD_CONFIG=""Debug""', 'FEATURES_PATH=""/Users/seunare/Unibet-calabash-automation/Unibet-calabash-livecasino/features""', 'ARCHITECTURE_SELECTED=""i386', 'x86_64""', 'APPNAME=""LiveCasino-cal""', 'PROJ_LOC=""/Users/seunare/ios-apps/UnibetApps.xcworkspace""', 'if', '[', '$1', '=', '""clean""', ']', 'then', 'xcodebuild', '-workspace', '""${PROJ_LOC}""', '-scheme', '""${SCHEME_XC}""', '-configuration', 'Debug', 'ONLY_ACTIVE_ARCH=NO', '-sdk', 'iphonesimulator', 'clean', 'build', 'fi', 'if', '[', '$1', '=', '""build""', ']', 'then', 'xcodebuild', '-workspace', '""${PROJ_LOC}""', '-scheme', '""${SCHEME_XC}""', '-configuration', 'Debug', 'ONLY_ACTIVE_ARCH=NO', '-sdk', 'iphonesimulator', 'build', 'fi', 'BUILT_PRODUCTS_DIR=$(xcodebuild', '-scheme', '""${SCHEME_XC}""', '-workspace', '""${PROJ_LOC}""', 'ARCHS=""${ARCHITECTURE_SELECTED}""', 'ONLY_ACTIVE_ARCH=NO', '-sdk', 'iphonesimulator', '-configuration', '""${BUILD_CONFIG}""', '-showBuildSettings', '|', 'grep', '-m', '1', '""BUILT_PRODUCTS_DIR""', '|', 'grep', '-oEi', '""\\/.*""', '|', 'xargs', '-L1', 'dirname)', 'APP_BUNDLE_PATH_VAR=""${BUILT_PRODUCTS_DIR}""/""${BUILD_CONFIG}""-iphonesimulator/""${APPNAME}"".app', 'echo', ""DEVICE_TARGET='iPhone"", '6', 'Plus', ""(8.4)'"", 'APP_BUNDLE_PATH=$APP_BUNDLE_PATH_VAR', 'bundle', 'exec', 'cucumber', '-p', 'ios', '--tag', '$2', ""DEVICE_TARGET='iPhone"", '6', 'Plus', ""(8.4)'"", 'APP_BUNDLE_PATH=$APP_BUNDLE_PATH_VAR', 'bundle', 'exec', 'cucumber', '-p', 'ios', '--tag', '$2```']",challenge not surrounded by ''': ,
"/**************************************************************************
 *
 * Copyright 2014-2016 Valve Corporation
 * Copyright (C) 2014-2016 LunarG, Inc.
 * All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author: Peter Lohrmann <peterl@valvesoftware.com> <plohrmann@gmail.com>
 **************************************************************************/

#include <QApplication>

#include ""vktraceviewer.h""
#include ""vktraceviewer_settings.h""

int main(int argc, char *argv[])
{
    // Initialize QApplication before initializing settings
    QApplication a(argc, argv);

    // initialize settings
    if (vktraceviewer_initialize_settings(argc, argv) == false)
    {
        return -1;
    }

    vktraceviewer w;
    w.show();

    if (g_settings.trace_file_to_open != NULL && strlen(g_settings.trace_file_to_open) > 0)
    {
        w.open_trace_file_threaded(QString(g_settings.trace_file_to_open));
    }

    int result = a.exec();

    vktrace_SettingGroup_Delete_Loaded(&g_pAllSettings, &g_numAllSettings);

    return result;
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**************************************************************************', '*', '*', 'Copyright', '2014-2016', 'Valve', 'Corporation', '*', 'Copyright', '(C)', '2014-2016', 'LunarG,', 'Inc.', '*', 'All', 'Rights', 'Reserved.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*', '*', 'Author:', 'Peter', 'Lohrmann', '<peterl@valvesoftware.com>', '<plohrmann@gmail.com>', '**************************************************************************/', '#include', '<QApplication>', '#include', '""vktraceviewer.h""', '#include', '""vktraceviewer_settings.h""', 'int', 'main(int', 'argc,', 'char', '*argv[])', '{', '//', 'Initialize', 'QApplication', 'before', 'initializing', 'settings', 'QApplication', 'a(argc,', 'argv);', '//', 'initialize', 'settings', 'if', '(vktraceviewer_initialize_settings(argc,', 'argv)', '==', 'false)', '{', 'return', '-1;', '}', 'vktraceviewer', 'w;', 'w.show();', 'if', '(g_settings.trace_file_to_open', '!=', 'NULL', '&&', 'strlen(g_settings.trace_file_to_open)', '>', '0)', '{', 'w.open_trace_file_threaded(QString(g_settings.trace_file_to_open));', '}', 'int', 'result', '=', 'a.exec();', 'vktrace_SettingGroup_Delete_Loaded(&g_pAllSettings,', '&g_numAllSettings);', 'return', 'result;', '}', '```']",challenge not surrounded by ''': ,
"package com.scavi.brainsqueeze.codefight.i.dp;

public class MaximalSquare {
    /**
     * You have a 2D binary matrix that's filled with 0s and 1s. In the matrix, find the largest square that contains
     * only 1s and return its area.
     *
     * @param matrix Guaranteed constraints:
     *               0 ≤ matrix.length ≤ 100,
     *               1 ≤ matrix[i].length ≤ 100,
     *               0 ≤ matrix[i][j] ≤ 1.
     * @return An integer that represents the area of the largest square in the given matrix that is composed only of
     * 1s.
     */
    int maximalSquare(char[][] matrix) {
        if (matrix == null || matrix.length == 0 || matrix[0].length == 0) {
            return 0;
        }
        int[][] dpCache = new int[matrix.length + 1][matrix[0].length + 1];
        int size = 0;
        for (int y = 1; y <= matrix.length; ++y) {
            for (int x = 1; x <= matrix[0].length; ++x) {
                if (matrix[y - 1][x - 1] == '1') {
                    dpCache[y][x] = 1 + Math.min(dpCache[y - 1][x - 1], Math.min(dpCache[y - 1][x], dpCache[y][x - 1]));
                    size = Math.max(size, dpCache[y][x]);
                }
            }
        }
        return size * size;
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.scavi.brainsqueeze.codefight.i.dp;', 'public', 'class', 'MaximalSquare', '{', '/**', '*', 'You', 'have', 'a', '2D', 'binary', 'matrix', ""that's"", 'filled', 'with', '0s', 'and', '1s.', 'In', 'the', 'matrix,', 'find', 'the', 'largest', 'square', 'that', 'contains', '*', 'only', '1s', 'and', 'return', 'its', 'area.', '*', '*', '@param', 'matrix', 'Guaranteed', 'constraints:', '*', '0', '≤', 'matrix.length', '≤', '100,', '*', '1', '≤', 'matrix[i].length', '≤', '100,', '*', '0', '≤', 'matrix[i][j]', '≤', '1.', '*', '@return', 'An', 'integer', 'that', 'represents', 'the', 'area', 'of', 'the', 'largest', 'square', 'in', 'the', 'given', 'matrix', 'that', 'is', 'composed', 'only', 'of', '*', '1s.', '*/', 'int', 'maximalSquare(char[][]', 'matrix)', '{', 'if', '(matrix', '==', 'null', '||', 'matrix.length', '==', '0', '||', 'matrix[0].length', '==', '0)', '{', 'return', '0;', '}', 'int[][]', 'dpCache', '=', 'new', 'int[matrix.length', '+', '1][matrix[0].length', '+', '1];', 'int', 'size', '=', '0;', 'for', '(int', 'y', '=', '1;', 'y', '<=', 'matrix.length;', '++y)', '{', 'for', '(int', 'x', '=', '1;', 'x', '<=', 'matrix[0].length;', '++x)', '{', 'if', '(matrix[y', '-', '1][x', '-', '1]', '==', ""'1')"", '{', 'dpCache[y][x]', '=', '1', '+', 'Math.min(dpCache[y', '-', '1][x', '-', '1],', 'Math.min(dpCache[y', '-', '1][x],', 'dpCache[y][x', '-', '1]));', 'size', '=', 'Math.max(size,', 'dpCache[y][x]);', '}', '}', '}', 'return', 'size', '*', 'size;', '}', '}', '```']",challenge not surrounded by ''': ,
"package com.news.fast_news_app.bean;

/**
 * Created by Administrator on 2016/2/27.
 */
public class Video_Play_Bean  {

    /**
     * 未点击播放按钮时的默认图片
     */
    public int video_bg;
    /**
     * 视频播放的图标
     */
    public int play_icon;
    /**
     * 视频id
     */
    public int video_resId;
    /**
     * 标题
     */
    public String title;
    /**
     * 副标题
     */
    public String subtitle;
    /**
     * 视频时长
     */
    public String video_time;
    /**
     * 视频播放的数量
     */
    public String play_count;
    /**
     * 视频评论的数量
     */
    public String comment_count;

    /**
     * @param video_bg
     * @param play_icon
     * @param video_resId
     * @param title
     * @param subtitle
     * @param video_time
     * @param play_count
     * @param comment_count
     */
    public Video_Play_Bean(int video_bg, int play_icon, int video_resId, String title, String subtitle, String video_time, String play_count, String comment_count) {
        this.video_bg = video_bg;
        this.play_icon = play_icon;
        this.video_resId = video_resId;
        this.title = title;
        this.subtitle = subtitle;
        this.video_time = video_time;
        this.play_count = play_count;
        this.comment_count = comment_count;
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.news.fast_news_app.bean;', '/**', '*', 'Created', 'by', 'Administrator', 'on', '2016/2/27.', '*/', 'public', 'class', 'Video_Play_Bean', '{', '/**', '*', '未点击播放按钮时的默认图片', '*/', 'public', 'int', 'video_bg;', '/**', '*', '视频播放的图标', '*/', 'public', 'int', 'play_icon;', '/**', '*', '视频id', '*/', 'public', 'int', 'video_resId;', '/**', '*', '标题', '*/', 'public', 'String', 'title;', '/**', '*', '副标题', '*/', 'public', 'String', 'subtitle;', '/**', '*', '视频时长', '*/', 'public', 'String', 'video_time;', '/**', '*', '视频播放的数量', '*/', 'public', 'String', 'play_count;', '/**', '*', '视频评论的数量', '*/', 'public', 'String', 'comment_count;', '/**', '*', '@param', 'video_bg', '*', '@param', 'play_icon', '*', '@param', 'video_resId', '*', '@param', 'title', '*', '@param', 'subtitle', '*', '@param', 'video_time', '*', '@param', 'play_count', '*', '@param', 'comment_count', '*/', 'public', 'Video_Play_Bean(int', 'video_bg,', 'int', 'play_icon,', 'int', 'video_resId,', 'String', 'title,', 'String', 'subtitle,', 'String', 'video_time,', 'String', 'play_count,', 'String', 'comment_count)', '{', 'this.video_bg', '=', 'video_bg;', 'this.play_icon', '=', 'play_icon;', 'this.video_resId', '=', 'video_resId;', 'this.title', '=', 'title;', 'this.subtitle', '=', 'subtitle;', 'this.video_time', '=', 'video_time;', 'this.play_count', '=', 'play_count;', 'this.comment_count', '=', 'comment_count;', '}', '}', '```']",challenge not surrounded by ''': ,
"// { dg-do run }

struct T
{
  static void (*handler)();
  static void func() {}
};

bool fail;

struct S {
  S() {
    if (T::handler != T::func)
      fail = true;
  }
};

static S s;

void (*T::handler)() = func;

int main()
{
  if (fail)
    return 1;
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//', '{', 'dg-do', 'run', '}', 'struct', 'T', '{', 'static', 'void', '(*handler)();', 'static', 'void', 'func()', '{}', '};', 'bool', 'fail;', 'struct', 'S', '{', 'S()', '{', 'if', '(T::handler', '!=', 'T::func)', 'fail', '=', 'true;', '}', '};', 'static', 'S', 's;', 'void', '(*T::handler)()', '=', 'func;', 'int', 'main()', '{', 'if', '(fail)', 'return', '1;', '}', '```']",challenge not surrounded by ''': ,
"// Generated by CoffeeScript 1.9.3

/*

Returns a copy of array with dulicates removed
 */
module.exports = function(array) {
  var i, item, key, len, obj, value;
  obj = {};
  for (i = 0, len = array.length; i < len; i++) {
    item = array[i];
    obj[item] = item;
  }
  return (function() {
    var results;
    results = [];
    for (key in obj) {
      value = obj[key];
      results.push(value);
    }
    return results;
  })();
};
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//', 'Generated', 'by', 'CoffeeScript', '1.9.3', '/*', 'Returns', 'a', 'copy', 'of', 'array', 'with', 'dulicates', 'removed', '*/', 'module.exports', '=', 'function(array)', '{', 'var', 'i,', 'item,', 'key,', 'len,', 'obj,', 'value;', 'obj', '=', '{};', 'for', '(i', '=', '0,', 'len', '=', 'array.length;', 'i', '<', 'len;', 'i++)', '{', 'item', '=', 'array[i];', 'obj[item]', '=', 'item;', '}', 'return', '(function()', '{', 'var', 'results;', 'results', '=', '[];', 'for', '(key', 'in', 'obj)', '{', 'value', '=', 'obj[key];', 'results.push(value);', '}', 'return', 'results;', '})();', '};', '```']",challenge not surrounded by ''': ,
"#ifndef APHY_WORLD_HPP_
#define APHY_WORLD_HPP_

#include <unordered_set>
#include ""Common.hpp""
#include ""btBulletDynamicsCommon.h""
#include ""LinearMath/btIDebugDraw.h""
#include <memory>

namespace APhyBullet
{

class BulletWorldDebugDrawer;

/**
* Bullet world
*/
struct BulletWorld : public aphy::world
{
public:
    BulletWorld(btDynamicsWorld *handle);
    ~BulletWorld();

    virtual aphy_uint getNumberOfCollisionObject() override;
	virtual aphy_uint getNumberOfConstraints() override;
	virtual aphy_error addCollisionObject(const collision_object_ref &object, aphy_short collision_filter_group, aphy_short collision_filter_mask) override;
	virtual aphy_error removeCollisionObject(const collision_object_ref &object) override;
	virtual aphy_error addRigidBody(const collision_object_ref &object) override;
	virtual aphy_error removeRigidBody(const collision_object_ref &object) override;
	virtual aphy_error addCharacterController(const character_controller_ref &character) override;
	virtual aphy_error removeCharacterController(const character_controller_ref &character) override;
	virtual aphy_error addRigidBodyWithFilter(const collision_object_ref &object, aphy_short collision_filter_group, aphy_short collision_filter_mask) override;
	virtual aphy_error stepSimulation(aphy_scalar time_step, aphy_int max_sub_steps, aphy_scalar fixed_time_step) override;
	virtual aphy_error setGravity(aphy_scalar x, aphy_scalar y, aphy_scalar z) override;
	virtual aphy_size encodeDebugDrawing() override;
	virtual aphy_error getDebugDrawingData(aphy_size buffer_size, aphy_pointer buffer) override;

    btDynamicsWorld *handle;
    collision_dispatcher_ref collisionDispatcher;
    broadphase_ref broadphase;
    constraint_solver_ref constraintSolver;
    collision_configuration_ref collisionConfiguration;

    std::unordered_set<collision_object_ref> collisionObjects;
    std::unordered_set<character_controller_ref> characterControllers;
    std::shared_ptr<BulletWorldDebugDrawer> debugDrawer;
};

} // End of namespace APhyBullet

#endif //APHY_WORLD_HPP_
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#ifndef', 'APHY_WORLD_HPP_', '#define', 'APHY_WORLD_HPP_', '#include', '<unordered_set>', '#include', '""Common.hpp""', '#include', '""btBulletDynamicsCommon.h""', '#include', '""LinearMath/btIDebugDraw.h""', '#include', '<memory>', 'namespace', 'APhyBullet', '{', 'class', 'BulletWorldDebugDrawer;', '/**', '*', 'Bullet', 'world', '*/', 'struct', 'BulletWorld', ':', 'public', 'aphy::world', '{', 'public:', 'BulletWorld(btDynamicsWorld', '*handle);', '~BulletWorld();', 'virtual', 'aphy_uint', 'getNumberOfCollisionObject()', 'override;', 'virtual', 'aphy_uint', 'getNumberOfConstraints()', 'override;', 'virtual', 'aphy_error', 'addCollisionObject(const', 'collision_object_ref', '&object,', 'aphy_short', 'collision_filter_group,', 'aphy_short', 'collision_filter_mask)', 'override;', 'virtual', 'aphy_error', 'removeCollisionObject(const', 'collision_object_ref', '&object)', 'override;', 'virtual', 'aphy_error', 'addRigidBody(const', 'collision_object_ref', '&object)', 'override;', 'virtual', 'aphy_error', 'removeRigidBody(const', 'collision_object_ref', '&object)', 'override;', 'virtual', 'aphy_error', 'addCharacterController(const', 'character_controller_ref', '&character)', 'override;', 'virtual', 'aphy_error', 'removeCharacterController(const', 'character_controller_ref', '&character)', 'override;', 'virtual', 'aphy_error', 'addRigidBodyWithFilter(const', 'collision_object_ref', '&object,', 'aphy_short', 'collision_filter_group,', 'aphy_short', 'collision_filter_mask)', 'override;', 'virtual', 'aphy_error', 'stepSimulation(aphy_scalar', 'time_step,', 'aphy_int', 'max_sub_steps,', 'aphy_scalar', 'fixed_time_step)', 'override;', 'virtual', 'aphy_error', 'setGravity(aphy_scalar', 'x,', 'aphy_scalar', 'y,', 'aphy_scalar', 'z)', 'override;', 'virtual', 'aphy_size', 'encodeDebugDrawing()', 'override;', 'virtual', 'aphy_error', 'getDebugDrawingData(aphy_size', 'buffer_size,', 'aphy_pointer', 'buffer)', 'override;', 'btDynamicsWorld', '*handle;', 'collision_dispatcher_ref', 'collisionDispatcher;', 'broadphase_ref', 'broadphase;', 'constraint_solver_ref', 'constraintSolver;', 'collision_configuration_ref', 'collisionConfiguration;', 'std::unordered_set<collision_object_ref>', 'collisionObjects;', 'std::unordered_set<character_controller_ref>', 'characterControllers;', 'std::shared_ptr<BulletWorldDebugDrawer>', 'debugDrawer;', '};', '}', '//', 'End', 'of', 'namespace', 'APhyBullet', '#endif', '//APHY_WORLD_HPP_', '```']",challenge not surrounded by ''': ,
"Router.route('/', {
  name: 'home',
  template: 'flight',
  data: function () {
    return Flights.findOne({}, {sort: {date: -1}});
  },
  waitOn: function () {
    return Meteor.subscribe('recent-flights', {limit: 4});
  }
});

Router.route('/f/:date', {
  name: 'flight.show',
  template: 'flight',
  data: function () {
    return Flights.findOne({date: this.params.date});
  },
  waitOn: function () {
    return [
      Meteor.subscribe('recent-flights', {limit: 4}),
      Meteor.subscribe('flight', this.params.date)
    ];
  },
  onAfterAction: function () {
    if (this.ready()) {
      var flight = this.data();
      var date = Utils.dateStringToDate(flight.date);
      var displayDate = moment(date).add(1,'month').format('MMM DD YYYY');
      var sourceCount = Utils.getSourceList(flight).length;

      SEO.set({
        title: `airstrip.io - Nomad flight #${flight.number} on ${displayDate}`,
        meta: {
          'description': `This flight features ${flight.itemIds.length} digital nomad stories from ${sourceCount} sources.`
        }
      });
    }
  }
});

Router.route('/f', {
  name: 'flight.index',
  template: 'flights',
  waitOn: function () {
    return Meteor.subscribe('all-flights');
  }
});
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', ""```Router.route('/',"", '{', 'name:', ""'home',"", 'template:', ""'flight',"", 'data:', 'function', '()', '{', 'return', 'Flights.findOne({},', '{sort:', '{date:', '-1}});', '},', 'waitOn:', 'function', '()', '{', 'return', ""Meteor.subscribe('recent-flights',"", '{limit:', '4});', '}', '});', ""Router.route('/f/:date',"", '{', 'name:', ""'flight.show',"", 'template:', ""'flight',"", 'data:', 'function', '()', '{', 'return', 'Flights.findOne({date:', 'this.params.date});', '},', 'waitOn:', 'function', '()', '{', 'return', '[', ""Meteor.subscribe('recent-flights',"", '{limit:', '4}),', ""Meteor.subscribe('flight',"", 'this.params.date)', '];', '},', 'onAfterAction:', 'function', '()', '{', 'if', '(this.ready())', '{', 'var', 'flight', '=', 'this.data();', 'var', 'date', '=', 'Utils.dateStringToDate(flight.date);', 'var', 'displayDate', '=', ""moment(date).add(1,'month').format('MMM"", 'DD', ""YYYY');"", 'var', 'sourceCount', '=', 'Utils.getSourceList(flight).length;', 'SEO.set({', 'title:', '`airstrip.io', '-', 'Nomad', 'flight', '#${flight.number}', 'on', '${displayDate}`,', 'meta:', '{', ""'description':"", '`This', 'flight', 'features', '${flight.itemIds.length}', 'digital', 'nomad', 'stories', 'from', '${sourceCount}', 'sources.`', '}', '});', '}', '}', '});', ""Router.route('/f',"", '{', 'name:', ""'flight.index',"", 'template:', ""'flights',"", 'waitOn:', 'function', '()', '{', 'return', ""Meteor.subscribe('all-flights');"", '}', '});', '```']",challenge not surrounded by ''': ,
"""""""
:Copyright: 2006-2021 Jochen Kupperschmidt
:License: Revised BSD (see `LICENSE` file for details)
""""""

import pytest

from byceps.services.user import service as user_service


@pytest.fixture(scope='module')
def named_user(make_user):
    return make_user('HimWhoCanBeNamed')


@pytest.fixture(scope='module')
def unnamed_user(make_user):
    return make_user(None)


def test_find_screen_name_for_unknown_user_id(site_app):
    unknown_user_id = '00000000-0000-0000-0000-000000000000'
    actual = user_service.find_screen_name(unknown_user_id)
    assert actual is None


def test_find_screen_name_for_user_with_screen_name(site_app, named_user):
    actual = user_service.find_screen_name(named_user.id)
    assert actual == 'HimWhoCanBeNamed'


def test_find_screen_name_for_user_without_screen_name(site_app, unnamed_user):
    actual = user_service.find_screen_name(unnamed_user.id)
    assert actual is None
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```""""""', ':Copyright:', '2006-2021', 'Jochen', 'Kupperschmidt', ':License:', 'Revised', 'BSD', '(see', '`LICENSE`', 'file', 'for', 'details)', '""""""', 'import', 'pytest', 'from', 'byceps.services.user', 'import', 'service', 'as', 'user_service', ""@pytest.fixture(scope='module')"", 'def', 'named_user(make_user):', 'return', ""make_user('HimWhoCanBeNamed')"", ""@pytest.fixture(scope='module')"", 'def', 'unnamed_user(make_user):', 'return', 'make_user(None)', 'def', 'test_find_screen_name_for_unknown_user_id(site_app):', 'unknown_user_id', '=', ""'00000000-0000-0000-0000-000000000000'"", 'actual', '=', 'user_service.find_screen_name(unknown_user_id)', 'assert', 'actual', 'is', 'None', 'def', 'test_find_screen_name_for_user_with_screen_name(site_app,', 'named_user):', 'actual', '=', 'user_service.find_screen_name(named_user.id)', 'assert', 'actual', '==', ""'HimWhoCanBeNamed'"", 'def', 'test_find_screen_name_for_user_without_screen_name(site_app,', 'unnamed_user):', 'actual', '=', 'user_service.find_screen_name(unnamed_user.id)', 'assert', 'actual', 'is', 'None', '```']",challenge not surrounded by ''': ,
"#!/usr/bin/env python3

import	getopt
import	sys
import	re
import	random
import	sqlite3

def main():
	g_input_fn = False
	g_do_search = False
	g_dict_fn = False
	g_words = []

	try:
		opts, args = getopt.getopt(sys.argv[1:],
				""hi:d:s:v"",
				[""help"", ""input="", ""dict="", ""search=""])
	except getopt.GetoptError as err:
		print(str(err))
		usage()
		sys.exit(2)
	output = None
	verbose = False
	for o, a in opts:
		if o in (""-h"", ""--help""):
			usage()
			sys.exit()
		elif o in (""-i"", ""--input""):
			g_input_fn = a
		elif o in (""-s"", ""--search""):
			g_do_search = a;
		elif o in (""-d"", ""--dict""):
			g_dict_fn = a
		else:
			assert False, ""unhandled option""

	if g_input_fn == False:
		print(""You must pass --input to indicate where DB is"");
		sys.exit(2);
	if g_do_search == False and g_dict_fn == False:
		print(""You must either pass --input with --dict"");
		sys.exit(2)

	random.seed(14)
	conn = sqlite3.connect(g_input_fn);
	c = conn.cursor()
	if g_do_search == False:
		assert(g_dict_fn != None);
		print(""# initializing database "" + g_dict_fn);
		with open(g_dict_fn, ""r"") as f:
			g_words += [ [line, random.randint(0, 1000)]
				for line in f.read().split(""\n"")
					if not re.match(""^$"", line)]
		f.close()

		c.execute(""DROP TABLE IF EXISTS words"");
		c.execute('''CREATE TABLE words(word text, score real)''')
		for word in g_words:
			if len(word) <= 0:
				continue;
			c.execute(""""""
				INSERT INTO words VALUES('{0}','{1}');
				"""""".format(word[0], word[1]));
		conn.commit();
		conn.close();
	else:
		# From http://stackoverflow.com/questions/5071601/how-do-i-use-regex-in-a-sqlite-query
		def match(expr, item):
			return re.match(expr, item) is not None

		conn.create_function(""MATCH"", 2, match)
		c.execute(""""""
				SELECT * FROM words
				WHERE MATCH('.*{0}.*', word)
				ORDER BY score DESC LIMIT 10;
			"""""".format(g_do_search));

		for v, r in c.fetchall():
			print(v, r)



if __name__ == ""__main__"":
    main()
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/usr/bin/env', 'python3', 'import', 'getopt', 'import', 'sys', 'import', 're', 'import', 'random', 'import', 'sqlite3', 'def', 'main():', 'g_input_fn', '=', 'False', 'g_do_search', '=', 'False', 'g_dict_fn', '=', 'False', 'g_words', '=', '[]', 'try:', 'opts,', 'args', '=', 'getopt.getopt(sys.argv[1:],', '""hi:d:s:v"",', '[""help"",', '""input="",', '""dict="",', '""search=""])', 'except', 'getopt.GetoptError', 'as', 'err:', 'print(str(err))', 'usage()', 'sys.exit(2)', 'output', '=', 'None', 'verbose', '=', 'False', 'for', 'o,', 'a', 'in', 'opts:', 'if', 'o', 'in', '(""-h"",', '""--help""):', 'usage()', 'sys.exit()', 'elif', 'o', 'in', '(""-i"",', '""--input""):', 'g_input_fn', '=', 'a', 'elif', 'o', 'in', '(""-s"",', '""--search""):', 'g_do_search', '=', 'a;', 'elif', 'o', 'in', '(""-d"",', '""--dict""):', 'g_dict_fn', '=', 'a', 'else:', 'assert', 'False,', '""unhandled', 'option""', 'if', 'g_input_fn', '==', 'False:', 'print(""You', 'must', 'pass', '--input', 'to', 'indicate', 'where', 'DB', 'is"");', 'sys.exit(2);', 'if', 'g_do_search', '==', 'False', 'and', 'g_dict_fn', '==', 'False:', 'print(""You', 'must', 'either', 'pass', '--input', 'with', '--dict"");', 'sys.exit(2)', 'random.seed(14)', 'conn', '=', 'sqlite3.connect(g_input_fn);', 'c', '=', 'conn.cursor()', 'if', 'g_do_search', '==', 'False:', 'assert(g_dict_fn', '!=', 'None);', 'print(""#', 'initializing', 'database', '""', '+', 'g_dict_fn);', 'with', 'open(g_dict_fn,', '""r"")', 'as', 'f:', 'g_words', '+=', '[', '[line,', 'random.randint(0,', '1000)]', 'for', 'line', 'in', 'f.read().split(""\\n"")', 'if', 'not', 're.match(""^$"",', 'line)]', 'f.close()', 'c.execute(""DROP', 'TABLE', 'IF', 'EXISTS', 'words"");', ""c.execute('''CREATE"", 'TABLE', 'words(word', 'text,', 'score', ""real)''')"", 'for', 'word', 'in', 'g_words:', 'if', 'len(word)', '<=', '0:', 'continue;', 'c.execute(""""""', 'INSERT', 'INTO', 'words', ""VALUES('{0}','{1}');"", '"""""".format(word[0],', 'word[1]));', 'conn.commit();', 'conn.close();', 'else:', '#', 'From', 'http://stackoverflow.com/questions/5071601/how-do-i-use-regex-in-a-sqlite-query', 'def', 'match(expr,', 'item):', 'return', 're.match(expr,', 'item)', 'is', 'not', 'None', 'conn.create_function(""MATCH"",', '2,', 'match)', 'c.execute(""""""', 'SELECT', '*', 'FROM', 'words', 'WHERE', ""MATCH('.*{0}.*',"", 'word)', 'ORDER', 'BY', 'score', 'DESC', 'LIMIT', '10;', '"""""".format(g_do_search));', 'for', 'v,', 'r', 'in', 'c.fetchall():', 'print(v,', 'r)', 'if', '__name__', '==', '""__main__"":', 'main()', '```']",challenge not surrounded by ''': ,
"/**
 * Creado por: danimaniARQSOFT
 * Autor     : Daniel Pichardo	
 * Fecha     : Apr 11, 2014
 * Hora      : 10:30:22 PM
 * 
 */
package com.danimaniarqsoft.asterix.util;

import java.io.File;
import java.io.FilenameFilter;

/**
 * La Clase FileNameFilter. Filtra en un directorio sólo los archivos que se
 * pasen en el parámetro targetWord
 *
 * @author Daniel Pichardo
 */
public class FindFileFilter implements FilenameFilter {

    private String targetWord;

    /**
     * Crea una instancia de file name filter.
     *
     * @param targetWord
     *            the target word
     */
    public FindFileFilter(String targetWord) {
        this.targetWord = targetWord.trim();
    }

    /*
     * (non-Javadoc)
     * 
     * @see java.io.FilenameFilter#accept(java.io.File, java.lang.String)
     */
    @Override
    public boolean accept(File dir, String name) {
        // return name.replace("".java"", """").equalsIgnoreCase(targetWord);
        return name.equalsIgnoreCase(targetWord);
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', 'Creado', 'por:', 'danimaniARQSOFT', '*', 'Autor', ':', 'Daniel', 'Pichardo', '*', 'Fecha', ':', 'Apr', '11,', '2014', '*', 'Hora', ':', '10:30:22', 'PM', '*', '*/', 'package', 'com.danimaniarqsoft.asterix.util;', 'import', 'java.io.File;', 'import', 'java.io.FilenameFilter;', '/**', '*', 'La', 'Clase', 'FileNameFilter.', 'Filtra', 'en', 'un', 'directorio', 'sólo', 'los', 'archivos', 'que', 'se', '*', 'pasen', 'en', 'el', 'parámetro', 'targetWord', '*', '*', '@author', 'Daniel', 'Pichardo', '*/', 'public', 'class', 'FindFileFilter', 'implements', 'FilenameFilter', '{', 'private', 'String', 'targetWord;', '/**', '*', 'Crea', 'una', 'instancia', 'de', 'file', 'name', 'filter.', '*', '*', '@param', 'targetWord', '*', 'the', 'target', 'word', '*/', 'public', 'FindFileFilter(String', 'targetWord)', '{', 'this.targetWord', '=', 'targetWord.trim();', '}', '/*', '*', '(non-Javadoc)', '*', '*', '@see', 'java.io.FilenameFilter#accept(java.io.File,', 'java.lang.String)', '*/', '@Override', 'public', 'boolean', 'accept(File', 'dir,', 'String', 'name)', '{', '//', 'return', 'name.replace("".java"",', '"""").equalsIgnoreCase(targetWord);', 'return', 'name.equalsIgnoreCase(targetWord);', '}', '}', '```']",challenge not surrounded by ''': ,
"package com.github.lunatrius.ingameinfo.parser.text;

import java.util.Locale;

public class Location {
    private int row;
    private int column;

    public Location(int row, int column) {
        this.row = row;
        this.column = column;
    }

    @Override
    public String toString() {
        return String.format(Locale.ENGLISH, ""(%d,%d)"", this.row, this.column);
    }

    @Override
    protected Location clone() {
        return new Location(this.row, this.column);
    }

    public void setRow(int row) {
        this.row = row;
    }

    public void setColumn(int column) {
        this.column = column;
    }

    public int getRow() {
        return this.row;
    }

    public int getColumn() {
        return this.column;
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.github.lunatrius.ingameinfo.parser.text;', 'import', 'java.util.Locale;', 'public', 'class', 'Location', '{', 'private', 'int', 'row;', 'private', 'int', 'column;', 'public', 'Location(int', 'row,', 'int', 'column)', '{', 'this.row', '=', 'row;', 'this.column', '=', 'column;', '}', '@Override', 'public', 'String', 'toString()', '{', 'return', 'String.format(Locale.ENGLISH,', '""(%d,%d)"",', 'this.row,', 'this.column);', '}', '@Override', 'protected', 'Location', 'clone()', '{', 'return', 'new', 'Location(this.row,', 'this.column);', '}', 'public', 'void', 'setRow(int', 'row)', '{', 'this.row', '=', 'row;', '}', 'public', 'void', 'setColumn(int', 'column)', '{', 'this.column', '=', 'column;', '}', 'public', 'int', 'getRow()', '{', 'return', 'this.row;', '}', 'public', 'int', 'getColumn()', '{', 'return', 'this.column;', '}', '}', '```']",challenge not surrounded by ''': ,
"/*
 * This file is part of the Raster Storage Archive (RSA).
 *
 * The RSA is free software: you can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option) any later
 * version.
 *
 * The RSA is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
 * A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * the RSA.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Copyright 2013 CRCSI - Cooperative Research Centre for Spatial Information
 * http://www.crcsi.com.au/
 */

package org.vpac.ndg.storage.dao;

import java.util.List;

import org.vpac.ndg.storage.model.JobProgress;
import org.vpac.ndg.common.datamodel.TaskState;
import org.vpac.ndg.common.datamodel.TaskType;

public interface JobProgressDao {
	void save(JobProgress job);
	JobProgress retrieve(String id);
	List<JobProgress> search(TaskType type, TaskState state, int page, int pageSize);
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'This', 'file', 'is', 'part', 'of', 'the', 'Raster', 'Storage', 'Archive', '(RSA).', '*', '*', 'The', 'RSA', 'is', 'free', 'software:', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', 'it', 'under', 'the', '*', 'terms', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'as', 'published', 'by', 'the', 'Free', 'Software', '*', 'Foundation,', 'either', 'version', '3', 'of', 'the', 'License,', 'or', '(at', 'your', 'option)', 'any', 'later', '*', 'version.', '*', '*', 'The', 'RSA', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', 'but', 'WITHOUT', 'ANY', '*', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', '*', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', 'GNU', 'General', 'Public', 'License', 'for', 'more', 'details.', '*', '*', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'along', 'with', '*', 'the', 'RSA.', 'If', 'not,', 'see', '<http://www.gnu.org/licenses/>.', '*', '*', 'Copyright', '2013', 'CRCSI', '-', 'Cooperative', 'Research', 'Centre', 'for', 'Spatial', 'Information', '*', 'http://www.crcsi.com.au/', '*/', 'package', 'org.vpac.ndg.storage.dao;', 'import', 'java.util.List;', 'import', 'org.vpac.ndg.storage.model.JobProgress;', 'import', 'org.vpac.ndg.common.datamodel.TaskState;', 'import', 'org.vpac.ndg.common.datamodel.TaskType;', 'public', 'interface', 'JobProgressDao', '{', 'void', 'save(JobProgress', 'job);', 'JobProgress', 'retrieve(String', 'id);', 'List<JobProgress>', 'search(TaskType', 'type,', 'TaskState', 'state,', 'int', 'page,', 'int', 'pageSize);', '}', '```']",challenge not surrounded by ''': ,
"{%extends display.crmMain%}


{%block pageContent%}
{%include ""content_crm/permission/add/permView.html""%}
{%endblock%}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```{%extends', 'display.crmMain%}', '{%block', 'pageContent%}', '{%include', '""content_crm/permission/add/permView.html""%}', '{%endblock%}', '```']",challenge not surrounded by ''': ,
"package com.marshalchen.ultimaterecyclerview.gridSection;

import androidx.annotation.IdRes;
import androidx.recyclerview.widget.RecyclerView;
import android.view.View;
import android.widget.TextView;

/**
 * Created by hesk on 01/06/15.
 */
public class HeaderViewHolder extends RecyclerView.ViewHolder {

    protected TextView titleText = null;

    public HeaderViewHolder(View itemView, @IdRes int titleID) {
        super(itemView);
        titleText = (TextView) itemView.findViewById(titleID);
    }

    public void render(String title) {
        titleText.setText(title);
    }

}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.marshalchen.ultimaterecyclerview.gridSection;', 'import', 'androidx.annotation.IdRes;', 'import', 'androidx.recyclerview.widget.RecyclerView;', 'import', 'android.view.View;', 'import', 'android.widget.TextView;', '/**', '*', 'Created', 'by', 'hesk', 'on', '01/06/15.', '*/', 'public', 'class', 'HeaderViewHolder', 'extends', 'RecyclerView.ViewHolder', '{', 'protected', 'TextView', 'titleText', '=', 'null;', 'public', 'HeaderViewHolder(View', 'itemView,', '@IdRes', 'int', 'titleID)', '{', 'super(itemView);', 'titleText', '=', '(TextView)', 'itemView.findViewById(titleID);', '}', 'public', 'void', 'render(String', 'title)', '{', 'titleText.setText(title);', '}', '}```']",challenge not surrounded by ''': ,
"#!/usr/bin/env bash

WORKDIR=`echo $0 | sed -e s/build.sh//`
cd ${WORKDIR}

export GOOS=linux
export GOARCH=amd64

echo ""Building linux binary: rbacq with env variables:""
env | grep GO
go build -ldflags='-s -w' -v -o $TRAVIS_BUILD_DIR/rbacq

export GOOS=windows
export GOARCH=amd64

echo ""Building windows binary: rbacq.exe with env variables:""
env | grep GO
go build -ldflags='-s -w' -v -o $TRAVIS_BUILD_DIR/rbacq.exe

echo ""Downloading upx""
cd $TRAVIS_BUILD_DIR
curl -L -O https://github.com/upx/upx/releases/download/v3.93/upx-3.93-amd64_linux.tar.xz
tar xvf upx-3.93-amd64_linux.tar.xz

echo ""Using upx on rbacq""
upx-3.93-amd64_linux/upx $TRAVIS_BUILD_DIR/rbacq

echo ""Using upx on rbacq.exe""
upx-3.93-amd64_linux/upx $TRAVIS_BUILD_DIR/rbacq.exe
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/usr/bin/env', 'bash', 'WORKDIR=`echo', '$0', '|', 'sed', '-e', 's/build.sh//`', 'cd', '${WORKDIR}', 'export', 'GOOS=linux', 'export', 'GOARCH=amd64', 'echo', '""Building', 'linux', 'binary:', 'rbacq', 'with', 'env', 'variables:""', 'env', '|', 'grep', 'GO', 'go', 'build', ""-ldflags='-s"", ""-w'"", '-v', '-o', '$TRAVIS_BUILD_DIR/rbacq', 'export', 'GOOS=windows', 'export', 'GOARCH=amd64', 'echo', '""Building', 'windows', 'binary:', 'rbacq.exe', 'with', 'env', 'variables:""', 'env', '|', 'grep', 'GO', 'go', 'build', ""-ldflags='-s"", ""-w'"", '-v', '-o', '$TRAVIS_BUILD_DIR/rbacq.exe', 'echo', '""Downloading', 'upx""', 'cd', '$TRAVIS_BUILD_DIR', 'curl', '-L', '-O', 'https://github.com/upx/upx/releases/download/v3.93/upx-3.93-amd64_linux.tar.xz', 'tar', 'xvf', 'upx-3.93-amd64_linux.tar.xz', 'echo', '""Using', 'upx', 'on', 'rbacq""', 'upx-3.93-amd64_linux/upx', '$TRAVIS_BUILD_DIR/rbacq', 'echo', '""Using', 'upx', 'on', 'rbacq.exe""', 'upx-3.93-amd64_linux/upx', '$TRAVIS_BUILD_DIR/rbacq.exe', '```']",challenge not surrounded by ''': ,
"package gcba.ratings.example;

import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;

import gcba.ratings.sdk.Ratings;
import gcba.ratings.sdk.RatingsResult;

public class MainActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        setContentView(R.layout.activity_main);

        Thread t = new Thread(new Runnable() {
            public void run() {
                String app = ""c33367701511b4f6020ec61ded352059"";
                String platform = app;
                String range = app;
                String token = app;

                Ratings sdk = new Ratings(""https://75100f11.ngrok.io"", token, app, platform, range);
                RatingsResult result;

                // Rating only; no user

                result = sdk.create(5);

                if (result.error != null) {
                    Log.e(""RATINGS-ERROR"", result.error.getDescription());
                }

                // Rating and description only; no user

                result = sdk.create(4, ""Bueno"");

                if (result.error != null) {
                    Log.e(""RATINGS-ERROR"", result.error.getDescription());
                }

                // Rating, description and comment; no user

                result = sdk.create(3, ""Regular"", ""Lorem ipsum dolor..."");

                if (result.error != null) {
                    Log.e(""RATINGS-ERROR"", result.error.getDescription());
                }

                // Rating, description and comment; user name and mibaId only

                sdk.setUser(""Juan Pérez"", null, ""dc62591b-1cd3-4c6c-a943-f682e8860e08"");

                result = sdk.create(2, ""Regular"", ""Lorem ipsum dolor..."");

                if (result.error != null) {
                    Log.e(""RATINGS-ERROR"", result.error.getDescription());
                }

                // Rating, description and comment; user name and email only

                sdk.setUser(""Juan Pérez"", ""juan@example.com"",null);

                result = sdk.create(1, ""Muy Malo"", ""Lorem ipsum dolor..."");

                if (result.error != null) {
                    Log.e(""RATINGS-ERROR"", result.error.getDescription());
                }

                // Rating, description and comment; user name, email and mibaId

                sdk.setUser(""Juan Pérez"",""juan@perez.com"", ""ae0bfd64-7b37-4bb5-a628-b6cfe28a68af"");

                result = sdk.create(5, ""Muy Bueno"", ""Lorem ipsum dolor..."");

                if (result.error != null) {
                    Log.e(""RATINGS-ERROR"", result.error.getDescription());
                }
            }
        });

        t.start();
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'gcba.ratings.example;', 'import', 'android.support.v7.app.AppCompatActivity;', 'import', 'android.os.Bundle;', 'import', 'android.util.Log;', 'import', 'gcba.ratings.sdk.Ratings;', 'import', 'gcba.ratings.sdk.RatingsResult;', 'public', 'class', 'MainActivity', 'extends', 'AppCompatActivity', '{', '@Override', 'protected', 'void', 'onCreate(Bundle', 'savedInstanceState)', '{', 'super.onCreate(savedInstanceState);', 'setContentView(R.layout.activity_main);', 'Thread', 't', '=', 'new', 'Thread(new', 'Runnable()', '{', 'public', 'void', 'run()', '{', 'String', 'app', '=', '""c33367701511b4f6020ec61ded352059"";', 'String', 'platform', '=', 'app;', 'String', 'range', '=', 'app;', 'String', 'token', '=', 'app;', 'Ratings', 'sdk', '=', 'new', 'Ratings(""https://75100f11.ngrok.io"",', 'token,', 'app,', 'platform,', 'range);', 'RatingsResult', 'result;', '//', 'Rating', 'only;', 'no', 'user', 'result', '=', 'sdk.create(5);', 'if', '(result.error', '!=', 'null)', '{', 'Log.e(""RATINGS-ERROR"",', 'result.error.getDescription());', '}', '//', 'Rating', 'and', 'description', 'only;', 'no', 'user', 'result', '=', 'sdk.create(4,', '""Bueno"");', 'if', '(result.error', '!=', 'null)', '{', 'Log.e(""RATINGS-ERROR"",', 'result.error.getDescription());', '}', '//', 'Rating,', 'description', 'and', 'comment;', 'no', 'user', 'result', '=', 'sdk.create(3,', '""Regular"",', '""Lorem', 'ipsum', 'dolor..."");', 'if', '(result.error', '!=', 'null)', '{', 'Log.e(""RATINGS-ERROR"",', 'result.error.getDescription());', '}', '//', 'Rating,', 'description', 'and', 'comment;', 'user', 'name', 'and', 'mibaId', 'only', 'sdk.setUser(""Juan', 'Pérez"",', 'null,', '""dc62591b-1cd3-4c6c-a943-f682e8860e08"");', 'result', '=', 'sdk.create(2,', '""Regular"",', '""Lorem', 'ipsum', 'dolor..."");', 'if', '(result.error', '!=', 'null)', '{', 'Log.e(""RATINGS-ERROR"",', 'result.error.getDescription());', '}', '//', 'Rating,', 'description', 'and', 'comment;', 'user', 'name', 'and', 'email', 'only', 'sdk.setUser(""Juan', 'Pérez"",', '""juan@example.com"",null);', 'result', '=', 'sdk.create(1,', '""Muy', 'Malo"",', '""Lorem', 'ipsum', 'dolor..."");', 'if', '(result.error', '!=', 'null)', '{', 'Log.e(""RATINGS-ERROR"",', 'result.error.getDescription());', '}', '//', 'Rating,', 'description', 'and', 'comment;', 'user', 'name,', 'email', 'and', 'mibaId', 'sdk.setUser(""Juan', 'Pérez"",""juan@perez.com"",', '""ae0bfd64-7b37-4bb5-a628-b6cfe28a68af"");', 'result', '=', 'sdk.create(5,', '""Muy', 'Bueno"",', '""Lorem', 'ipsum', 'dolor..."");', 'if', '(result.error', '!=', 'null)', '{', 'Log.e(""RATINGS-ERROR"",', 'result.error.getDescription());', '}', '}', '});', 't.start();', '}', '}', '```']",challenge not surrounded by ''': ,
"#include ""../../std_lib_facilities.h""

double ftoc(double f){
    double c_exact = (f - 32) * 5/9;
    int c = (f - 32) * 5/9;
    if(c != c_exact) error(""Result cannot be represented as an integer"");
    return c;
}

double ctof(double c){
    double f_exact = c * 9/5 + 32;
    int f = c * 9/5 + 32;
    if(f != f_exact) error(""Result cannot be represented as an integer"");
    return f;
}

int main(){
    double temp = 0;
    char c;
    try {
        cout << ""Type a temperature and conversion type e.g. 100 c (c to f) or 200 f (f to c) "" << endl;
        cin >> temp >> c;
        switch(c){
            case 'c':
                cout << ""Celsius to fahrenheit = "" << ctof(temp) << endl;
                break;
            case 'f':
                cout << ""Fahrenheit to celsius = "" <<  ftoc(temp) << endl;
                break;
            default:
                error(""No idea what calculation you want!"");
        }
    } catch(exception& e){
        cout << ""Error: "" << e.what() << endl;
    } catch(...) {
        cout << ""Unknown error"" << endl;
    }
    return 0;
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#include', '""../../std_lib_facilities.h""', 'double', 'ftoc(double', 'f){', 'double', 'c_exact', '=', '(f', '-', '32)', '*', '5/9;', 'int', 'c', '=', '(f', '-', '32)', '*', '5/9;', 'if(c', '!=', 'c_exact)', 'error(""Result', 'cannot', 'be', 'represented', 'as', 'an', 'integer"");', 'return', 'c;', '}', 'double', 'ctof(double', 'c){', 'double', 'f_exact', '=', 'c', '*', '9/5', '+', '32;', 'int', 'f', '=', 'c', '*', '9/5', '+', '32;', 'if(f', '!=', 'f_exact)', 'error(""Result', 'cannot', 'be', 'represented', 'as', 'an', 'integer"");', 'return', 'f;', '}', 'int', 'main(){', 'double', 'temp', '=', '0;', 'char', 'c;', 'try', '{', 'cout', '<<', '""Type', 'a', 'temperature', 'and', 'conversion', 'type', 'e.g.', '100', 'c', '(c', 'to', 'f)', 'or', '200', 'f', '(f', 'to', 'c)', '""', '<<', 'endl;', 'cin', '>>', 'temp', '>>', 'c;', 'switch(c){', 'case', ""'c':"", 'cout', '<<', '""Celsius', 'to', 'fahrenheit', '=', '""', '<<', 'ctof(temp)', '<<', 'endl;', 'break;', 'case', ""'f':"", 'cout', '<<', '""Fahrenheit', 'to', 'celsius', '=', '""', '<<', 'ftoc(temp)', '<<', 'endl;', 'break;', 'default:', 'error(""No', 'idea', 'what', 'calculation', 'you', 'want!"");', '}', '}', 'catch(exception&', 'e){', 'cout', '<<', '""Error:', '""', '<<', 'e.what()', '<<', 'endl;', '}', 'catch(...)', '{', 'cout', '<<', '""Unknown', 'error""', '<<', 'endl;', '}', 'return', '0;', '}', '```']",challenge not surrounded by ''': ,
"/**
 * Licensed to the Austrian Association for Software Tool Integration (AASTI)
 * under one or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information regarding copyright
 * ownership. The AASTI licenses this file to you under the Apache License,
 * Version 2.0 (the ""License""); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.openengsb.itests.remoteclient;

import javax.jms.Connection;
import javax.jms.Destination;
import javax.jms.JMSException;
import javax.jms.MessageConsumer;
import javax.jms.MessageListener;
import javax.jms.MessageProducer;
import javax.jms.Session;
import javax.jms.TextMessage;

import org.apache.activemq.ActiveMQConnectionFactory;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class JmsConfig {

    private static final Logger LOGGER = LoggerFactory.getLogger(JmsConfig.class);

    private String url;

    private Connection connection;
    private Session session;

    public JmsConfig(String url) {
        this.url = url;
    }

    public void init() throws JMSException {
        ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory(url);
        connection = connectionFactory.createConnection();
        connection.start();
        session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
    }

    public MessageProducer createProducerForQueue(String name) throws JMSException {
        Destination destination = session.createQueue(name);
        return session.createProducer(destination);
    }

    public MessageConsumer createConsumerForQueue(String name) throws JMSException {
        Destination queue = session.createQueue(name);
        return session.createConsumer(queue);
    }

    public MessageConsumer createConsumerForQueue(String name, MessageListener listener) throws JMSException {
        MessageConsumer result = createConsumerForQueue(name);
        result.setMessageListener(listener);
        return result;
    }

    public void sendMessage(String queue, String message) throws JMSException {
        LOGGER.info(""sending message {}"", message);
        LOGGER.info(""to queue {}"", queue);
        TextMessage message2 = session.createTextMessage(message);
        MessageProducer resultProducer = createProducerForQueue(queue);
        resultProducer.send(message2);

    }

    public void stop() throws JMSException {
        session.close();
        connection.stop();
        connection.close();
    }

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', 'Licensed', 'to', 'the', 'Austrian', 'Association', 'for', 'Software', 'Tool', 'Integration', '(AASTI)', '*', 'under', 'one', 'or', 'more', 'contributor', 'license', 'agreements.', 'See', 'the', 'NOTICE', 'file', '*', 'distributed', 'with', 'this', 'work', 'for', 'additional', 'information', 'regarding', 'copyright', '*', 'ownership.', 'The', 'AASTI', 'licenses', 'this', 'file', 'to', 'you', 'under', 'the', 'Apache', 'License,', '*', 'Version', '2.0', '(the', '""License"");', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', '*', 'with', 'the', 'License.', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'org.openengsb.itests.remoteclient;', 'import', 'javax.jms.Connection;', 'import', 'javax.jms.Destination;', 'import', 'javax.jms.JMSException;', 'import', 'javax.jms.MessageConsumer;', 'import', 'javax.jms.MessageListener;', 'import', 'javax.jms.MessageProducer;', 'import', 'javax.jms.Session;', 'import', 'javax.jms.TextMessage;', 'import', 'org.apache.activemq.ActiveMQConnectionFactory;', 'import', 'org.slf4j.Logger;', 'import', 'org.slf4j.LoggerFactory;', 'public', 'class', 'JmsConfig', '{', 'private', 'static', 'final', 'Logger', 'LOGGER', '=', 'LoggerFactory.getLogger(JmsConfig.class);', 'private', 'String', 'url;', 'private', 'Connection', 'connection;', 'private', 'Session', 'session;', 'public', 'JmsConfig(String', 'url)', '{', 'this.url', '=', 'url;', '}', 'public', 'void', 'init()', 'throws', 'JMSException', '{', 'ActiveMQConnectionFactory', 'connectionFactory', '=', 'new', 'ActiveMQConnectionFactory(url);', 'connection', '=', 'connectionFactory.createConnection();', 'connection.start();', 'session', '=', 'connection.createSession(false,', 'Session.AUTO_ACKNOWLEDGE);', '}', 'public', 'MessageProducer', 'createProducerForQueue(String', 'name)', 'throws', 'JMSException', '{', 'Destination', 'destination', '=', 'session.createQueue(name);', 'return', 'session.createProducer(destination);', '}', 'public', 'MessageConsumer', 'createConsumerForQueue(String', 'name)', 'throws', 'JMSException', '{', 'Destination', 'queue', '=', 'session.createQueue(name);', 'return', 'session.createConsumer(queue);', '}', 'public', 'MessageConsumer', 'createConsumerForQueue(String', 'name,', 'MessageListener', 'listener)', 'throws', 'JMSException', '{', 'MessageConsumer', 'result', '=', 'createConsumerForQueue(name);', 'result.setMessageListener(listener);', 'return', 'result;', '}', 'public', 'void', 'sendMessage(String', 'queue,', 'String', 'message)', 'throws', 'JMSException', '{', 'LOGGER.info(""sending', 'message', '{}"",', 'message);', 'LOGGER.info(""to', 'queue', '{}"",', 'queue);', 'TextMessage', 'message2', '=', 'session.createTextMessage(message);', 'MessageProducer', 'resultProducer', '=', 'createProducerForQueue(queue);', 'resultProducer.send(message2);', '}', 'public', 'void', 'stop()', 'throws', 'JMSException', '{', 'session.close();', 'connection.stop();', 'connection.close();', '}', '}', '```']",challenge not surrounded by ''': ,
"
#/* OSSEC Configuration for the UI. Make sure to set
# * right ossec_dir in here. If your server does not
# * have much memory available, reduce the max_alerts
# * variable to something smaller.
# */

#/* Ossec directory */
ossec_dir=""/var/ossec""


#/* Maximum alerts per page */
ossec_max_alerts_per_page = 1000


#/* Default search values */
ossec_search_level = 7
ossec_search_time = 14400


#/* Default refreshing time */
ossec_refresh_time = 90
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```', '#/*', 'OSSEC', 'Configuration', 'for', 'the', 'UI.', 'Make', 'sure', 'to', 'set', '#', '*', 'right', 'ossec_dir', 'in', 'here.', 'If', 'your', 'server', 'does', 'not', '#', '*', 'have', 'much', 'memory', 'available,', 'reduce', 'the', 'max_alerts', '#', '*', 'variable', 'to', 'something', 'smaller.', '#', '*/', '#/*', 'Ossec', 'directory', '*/', 'ossec_dir=""/var/ossec""', '#/*', 'Maximum', 'alerts', 'per', 'page', '*/', 'ossec_max_alerts_per_page', '=', '1000', '#/*', 'Default', 'search', 'values', '*/', 'ossec_search_level', '=', '7', 'ossec_search_time', '=', '14400', '#/*', 'Default', 'refreshing', 'time', '*/', 'ossec_refresh_time', '=', '90', '```']",challenge not surrounded by ''': ,
"/* 
 * File:   context.cpp
 * Author: Ralf Stephan <ralf@ark.in-berlin.de>
 */

#include <stdexcept>
#include ""context.h""

namespace GiNaC {


bool global_hold = false;

void set_state(const std::string& name, bool state)
{
        std::hash<std::string> hash_fn;
        static const auto hold = hash_fn(""hold"");
        const auto hash = hash_fn(name);

        // the following can be changed to switch/case in C++14
        if (hash == hold)
                global_hold = state;
        else
                throw std::runtime_error(""set_state: unknown name"");
}

} // namespace GiNaC
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'File:', 'context.cpp', '*', 'Author:', 'Ralf', 'Stephan', '<ralf@ark.in-berlin.de>', '*/', '#include', '<stdexcept>', '#include', '""context.h""', 'namespace', 'GiNaC', '{', 'bool', 'global_hold', '=', 'false;', 'void', 'set_state(const', 'std::string&', 'name,', 'bool', 'state)', '{', 'std::hash<std::string>', 'hash_fn;', 'static', 'const', 'auto', 'hold', '=', 'hash_fn(""hold"");', 'const', 'auto', 'hash', '=', 'hash_fn(name);', '//', 'the', 'following', 'can', 'be', 'changed', 'to', 'switch/case', 'in', 'C++14', 'if', '(hash', '==', 'hold)', 'global_hold', '=', 'state;', 'else', 'throw', 'std::runtime_error(""set_state:', 'unknown', 'name"");', '}', '}', '//', 'namespace', 'GiNaC', '```']",challenge not surrounded by ''': ,
"'use strict';

var assign = require('object.assign');


module.exports = function u (type, props, value) {
  if (value == null && (typeof props != 'object' || Array.isArray(props))) {
    value = props;
    props = {};
  }

  return assign({}, props, { type: String(type) },
                value != null && (Array.isArray(value)
                                  ? { children: value }
                                  : { value: String(value) }));
};
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', ""```'use"", ""strict';"", 'var', 'assign', '=', ""require('object.assign');"", 'module.exports', '=', 'function', 'u', '(type,', 'props,', 'value)', '{', 'if', '(value', '==', 'null', '&&', '(typeof', 'props', '!=', ""'object'"", '||', 'Array.isArray(props)))', '{', 'value', '=', 'props;', 'props', '=', '{};', '}', 'return', 'assign({},', 'props,', '{', 'type:', 'String(type)', '},', 'value', '!=', 'null', '&&', '(Array.isArray(value)', '?', '{', 'children:', 'value', '}', ':', '{', 'value:', 'String(value)', '}));', '};', '```']",challenge not surrounded by ''': ,
"package com.example.ytshen.opengles.platform;

import android.content.res.AssetManager;

public class PlatformFileUtils {
    public static native void init_asset_manager(AssetManager assetManager);
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.example.ytshen.opengles.platform;', 'import', 'android.content.res.AssetManager;', 'public', 'class', 'PlatformFileUtils', '{', 'public', 'static', 'native', 'void', 'init_asset_manager(AssetManager', 'assetManager);', '}', '```']",challenge not surrounded by ''': ,
"#! /bin/bash

source /root/.nvm/nvm.sh

nvm install 6
nvm alias default 6
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!', '/bin/bash', 'source', '/root/.nvm/nvm.sh', 'nvm', 'install', '6', 'nvm', 'alias', 'default', '6', '```']",challenge not surrounded by ''': ,
"<html xmlns=""http://www.w3.org/1999/xhtml""
  xmlns:py=""http://genshi.edgewall.org/""
  xmlns:xi=""http://www.w3.org/2001/XInclude"">

<xi:include href=""master.html"" />

<head>
  <meta content=""text/html; charset=UTF-8"" http-equiv=""content-type"" py:replace=""''""/>
  <link rel=""stylesheet"" type=""text/css"" media=""screen"" href=""${tg.url('/css/pagination.css')}"" />
  <link rel=""stylesheet"" type=""text/css"" media=""screen"" href=""${tg.url('/css/form.css')}"" />
  <title>Synthesis ${pname}</title>
</head>

<body>
<div id=""left_content"" style=""display:block;"">
    ${sidebar()}
    <div style=""clear:both;""/>    
     <hr style=""border: 2px ridge #000;"" />
     <div id=""cssmenu"">
        <ul>
            <li><a href=""${tg.url('/'+pname+'/synthesis/get_all')}"">Show all</a></li>
            <li><a href=""${tg.url('/'+pname+'/synthesis')}"">Show my</a></li>
        </ul>
    </div>
    <div style=""clear:both;""/>
     <hr style=""border: 2px ridge #000;"" />
     <div>
        <ul>
            <li><a href=""${tg.url('/'+pname+'/synthesis/details')}/${scompound.gid}/${scompound.id}"">Details</a></li>
            <li><a href=""${tg.url('/'+pname+'/synthesis/addreag')}/${scompound.id}"">Add reagents</a></li>
            <li><a href=""${tg.url('/'+pname+'/synthesis/edit')}/${scompound.id}"">Edit</a></li>
            <li><a href=""${tg.url('/'+pname+'/synthesis/allefforts')}/${scompound.id}""><b>Efforts</b></a></li>
            <li><a href=""${tg.url('/'+pname+'/synthesis/accept')}/${scompound.id}"">Recive</a></li>
        </ul>
     </div>
</div> 
 
<div class=""accept"">
<h2 class=""text-align:center;"">Phase changing for Effort <span style=""color:red"">${scompound.effort.index(effort)+1}</span></h2>
  <form action=""${tg.url('/'+pname+'/synthesis/save_etap')}/${scompound.id}/${effort.id}"" enctype=""multipart/form-data"" method=""post"" >
    <table style=""width:700px;"">
        <tr>
            <td><label for=""id"">GID: </label></td>
            <td><input id=""accept"" type=""text"" name=""id"" value=""${scompound.gid}"" disabled=""True"" size=""1"" /></td>
        </tr>
        <tr>
            <td><label for=""id"">Synthesis ID: </label></td>
            <td><input id=""accept"" type=""text"" name=""id"" value=""${scompound.id}"" disabled=""True"" size=""1"" /></td>
        </tr>
        <tr>
            <td><label for=""structure"">Smiles: </label></td>
            <td><input id=""structure"" type=""text"" name=""structure"" value=""${scompound.mol.structure}"" disabled=""True""  /></td>
        </tr>
        <tr>
            <td><label for=""name"">Name: </label></td>
            <td><input id=""accept"" type=""text"" name=""name"" value=""${scompound.mol.name}"" disabled=""True""  /></td>
        </tr>
        <tr>
            <td><label for=""lso"">LSO:</label></td>
            <td><textarea id=""notes"" name=""lso"" rows=""2"">${scompound.lso}</textarea></td>
        </tr>
        <tr>
            <td><label for=""notes"">Notes: </label></td>
            <td><textarea id=""notes"" name=""notes"" rows=""2"" value=""None"" >${scompound.notes}</textarea></td>
        </tr>
            <tr><td></td><td><input id=""submit"" type=""submit"" name=""submit"" value=""phase change"" /></td></tr>
        <tr>
        <td></td>
        <td>
            <br /><b style=""color:red;  font-size: 80%;"">*</b>  - required fields for custom changes in the number of stages or of current phase. <br />
        </td>
        </tr>
    </table>
<input type=""hidden"" name=""come_from"" value=""${come_from}"" />
  </form>
  <br />
            <div class=""efforts"" style=""font-size:14px;border:2px dotted;padding:5px;width:300px"">  
             <p><i>Effort information:</i></p>
               <p><b>Effort number:</b> ${scompound.effort.index(effort)+1}</p>
                <p><b>Name:</b> ${effort.name}</p>
                <p><b>Phases: </b>${effort.etap}/${effort.etap_max} </p>
                <p><b>Notes: </b>${effort.notes}</p>
            </div>
</div>
<div style=""clear:both;""/>
</body>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<html', 'xmlns=""http://www.w3.org/1999/xhtml""', 'xmlns:py=""http://genshi.edgewall.org/""', 'xmlns:xi=""http://www.w3.org/2001/XInclude"">', '<xi:include', 'href=""master.html""', '/>', '<head>', '<meta', 'content=""text/html;', 'charset=UTF-8""', 'http-equiv=""content-type""', 'py:replace=""\'\'""/>', '<link', 'rel=""stylesheet""', 'type=""text/css""', 'media=""screen""', 'href=""${tg.url(\'/css/pagination.css\')}""', '/>', '<link', 'rel=""stylesheet""', 'type=""text/css""', 'media=""screen""', 'href=""${tg.url(\'/css/form.css\')}""', '/>', '<title>Synthesis', '${pname}</title>', '</head>', '<body>', '<div', 'id=""left_content""', 'style=""display:block;"">', '${sidebar()}', '<div', 'style=""clear:both;""/>', '<hr', 'style=""border:', '2px', 'ridge', '#000;""', '/>', '<div', 'id=""cssmenu"">', '<ul>', '<li><a', 'href=""${tg.url(\'/\'+pname+\'/synthesis/get_all\')}"">Show', 'all</a></li>', '<li><a', 'href=""${tg.url(\'/\'+pname+\'/synthesis\')}"">Show', 'my</a></li>', '</ul>', '</div>', '<div', 'style=""clear:both;""/>', '<hr', 'style=""border:', '2px', 'ridge', '#000;""', '/>', '<div>', '<ul>', '<li><a', 'href=""${tg.url(\'/\'+pname+\'/synthesis/details\')}/${scompound.gid}/${scompound.id}"">Details</a></li>', '<li><a', 'href=""${tg.url(\'/\'+pname+\'/synthesis/addreag\')}/${scompound.id}"">Add', 'reagents</a></li>', '<li><a', 'href=""${tg.url(\'/\'+pname+\'/synthesis/edit\')}/${scompound.id}"">Edit</a></li>', '<li><a', 'href=""${tg.url(\'/\'+pname+\'/synthesis/allefforts\')}/${scompound.id}""><b>Efforts</b></a></li>', '<li><a', 'href=""${tg.url(\'/\'+pname+\'/synthesis/accept\')}/${scompound.id}"">Recive</a></li>', '</ul>', '</div>', '</div>', '<div', 'class=""accept"">', '<h2', 'class=""text-align:center;"">Phase', 'changing', 'for', 'Effort', '<span', 'style=""color:red"">${scompound.effort.index(effort)+1}</span></h2>', '<form', 'action=""${tg.url(\'/\'+pname+\'/synthesis/save_etap\')}/${scompound.id}/${effort.id}""', 'enctype=""multipart/form-data""', 'method=""post""', '>', '<table', 'style=""width:700px;"">', '<tr>', '<td><label', 'for=""id"">GID:', '</label></td>', '<td><input', 'id=""accept""', 'type=""text""', 'name=""id""', 'value=""${scompound.gid}""', 'disabled=""True""', 'size=""1""', '/></td>', '</tr>', '<tr>', '<td><label', 'for=""id"">Synthesis', 'ID:', '</label></td>', '<td><input', 'id=""accept""', 'type=""text""', 'name=""id""', 'value=""${scompound.id}""', 'disabled=""True""', 'size=""1""', '/></td>', '</tr>', '<tr>', '<td><label', 'for=""structure"">Smiles:', '</label></td>', '<td><input', 'id=""structure""', 'type=""text""', 'name=""structure""', 'value=""${scompound.mol.structure}""', 'disabled=""True""', '/></td>', '</tr>', '<tr>', '<td><label', 'for=""name"">Name:', '</label></td>', '<td><input', 'id=""accept""', 'type=""text""', 'name=""name""', 'value=""${scompound.mol.name}""', 'disabled=""True""', '/></td>', '</tr>', '<tr>', '<td><label', 'for=""lso"">LSO:</label></td>', '<td><textarea', 'id=""notes""', 'name=""lso""', 'rows=""2"">${scompound.lso}</textarea></td>', '</tr>', '<tr>', '<td><label', 'for=""notes"">Notes:', '</label></td>', '<td><textarea', 'id=""notes""', 'name=""notes""', 'rows=""2""', 'value=""None""', '>${scompound.notes}</textarea></td>', '</tr>', '<tr><td></td><td><input', 'id=""submit""', 'type=""submit""', 'name=""submit""', 'value=""phase', 'change""', '/></td></tr>', '<tr>', '<td></td>', '<td>', '<br', '/><b', 'style=""color:red;', 'font-size:', '80%;"">*</b>', '-', 'required', 'fields', 'for', 'custom', 'changes', 'in', 'the', 'number', 'of', 'stages', 'or', 'of', 'current', 'phase.', '<br', '/>', '</td>', '</tr>', '</table>', '<input', 'type=""hidden""', 'name=""come_from""', 'value=""${come_from}""', '/>', '</form>', '<br', '/>', '<div', 'class=""efforts""', 'style=""font-size:14px;border:2px', 'dotted;padding:5px;width:300px"">', '<p><i>Effort', 'information:</i></p>', '<p><b>Effort', 'number:</b>', '${scompound.effort.index(effort)+1}</p>', '<p><b>Name:</b>', '${effort.name}</p>', '<p><b>Phases:', '</b>${effort.etap}/${effort.etap_max}', '</p>', '<p><b>Notes:', '</b>${effort.notes}</p>', '</div>', '</div>', '<div', 'style=""clear:both;""/>', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"/**
 * Copyright (c) 2010-2014, openHAB.org and others.
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 */
package org.openhab.binding.astro.internal.bus;

import org.apache.commons.lang.StringUtils;
import org.openhab.binding.astro.internal.common.AstroType;
import org.openhab.binding.astro.internal.config.AstroBindingConfig;
import org.openhab.core.items.Item;
import org.openhab.model.item.binding.BindingConfigParseException;

/**
 * Class to parse the key - value base config for an Astro item.
 * <p>Example:</p>
 * <pre>
 * Number   Azimuth        ""Azimuth [%.2f]""         {astro=""type=AZIMUTH""}
 * Number   Elevation      ""Elevation [%.2f]""       {astro=""type=ELEVATION""}
 * 
 * DateTime Sunrise_Time   ""Sunrise [%1$tH:%1$tM]""  {astro=""type=SUNRISE_TIME""}
 * DateTime Noon_Time      ""Noon [%1$tH:%1$tM]""     {astro=""type=NOON_TIME""}
 * DateTime Sunset_Time    ""Sunset [%1$tH:%1$tM]""   {astro=""type=SUNSET_TIME""}
 *
 * Switch   Sunrise_Event                           {astro=""type=SUNRISE""}
 * Switch   Noon_Event                              {astro=""type=NOON""}
 * Switch   Sunset_Event                            {astro=""type=SUNSET""}
 * </pre>
 * 
 * @author Gerhard Riegler
 * @since 1.5.0
 */
public class BindingConfigParser {

	/**
	 * Parses the bindingConfig of an item and returns a AstroBindingConfig.
	 */
	public AstroBindingConfig parse(Item item, String bindingConfig) throws BindingConfigParseException {
		bindingConfig = StringUtils.trimToEmpty(bindingConfig);
		bindingConfig = StringUtils.removeStart(bindingConfig, ""{"");
		bindingConfig = StringUtils.removeEnd(bindingConfig, ""}"");

		String[] entryParts = StringUtils.trimToEmpty(bindingConfig).split(""[=]"");
		if (entryParts.length != 2) {
			throw new BindingConfigParseException(""A bindingConfig must have a key and a value"");
		}

		String key = StringUtils.trim(entryParts[0]);
		if (!""type"".equalsIgnoreCase(key)) {
			throw new BindingConfigParseException(""Unknown key "" + key);
		}
		String value = StringUtils.trim(entryParts[1]);
		value = StringUtils.removeStart(value, ""\"""");
		value = StringUtils.removeEnd(value, ""\"""");

		AstroType type = null;
		try {
			type = AstroType.valueOf(StringUtils.upperCase(value));
		} catch (Exception ex) {
			throw new BindingConfigParseException(""Invalid binding: "" + bindingConfig);
		}

		if (!item.getAcceptedDataTypes().contains(type.getAcceptedDataType())) {
			throw new BindingConfigParseException(""Item "" + item.getName() + "" must support ""
					+ type.getAcceptedDataType().getSimpleName() + "" for binding "" + value);
		}

		return new AstroBindingConfig(type);
	}
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', 'Copyright', '(c)', '2010-2014,', 'openHAB.org', 'and', 'others.', '*', '*', 'All', 'rights', 'reserved.', 'This', 'program', 'and', 'the', 'accompanying', 'materials', '*', 'are', 'made', 'available', 'under', 'the', 'terms', 'of', 'the', 'Eclipse', 'Public', 'License', 'v1.0', '*', 'which', 'accompanies', 'this', 'distribution,', 'and', 'is', 'available', 'at', '*', 'http://www.eclipse.org/legal/epl-v10.html', '*/', 'package', 'org.openhab.binding.astro.internal.bus;', 'import', 'org.apache.commons.lang.StringUtils;', 'import', 'org.openhab.binding.astro.internal.common.AstroType;', 'import', 'org.openhab.binding.astro.internal.config.AstroBindingConfig;', 'import', 'org.openhab.core.items.Item;', 'import', 'org.openhab.model.item.binding.BindingConfigParseException;', '/**', '*', 'Class', 'to', 'parse', 'the', 'key', '-', 'value', 'base', 'config', 'for', 'an', 'Astro', 'item.', '*', '<p>Example:</p>', '*', '<pre>', '*', 'Number', 'Azimuth', '""Azimuth', '[%.2f]""', '{astro=""type=AZIMUTH""}', '*', 'Number', 'Elevation', '""Elevation', '[%.2f]""', '{astro=""type=ELEVATION""}', '*', '*', 'DateTime', 'Sunrise_Time', '""Sunrise', '[%1$tH:%1$tM]""', '{astro=""type=SUNRISE_TIME""}', '*', 'DateTime', 'Noon_Time', '""Noon', '[%1$tH:%1$tM]""', '{astro=""type=NOON_TIME""}', '*', 'DateTime', 'Sunset_Time', '""Sunset', '[%1$tH:%1$tM]""', '{astro=""type=SUNSET_TIME""}', '*', '*', 'Switch', 'Sunrise_Event', '{astro=""type=SUNRISE""}', '*', 'Switch', 'Noon_Event', '{astro=""type=NOON""}', '*', 'Switch', 'Sunset_Event', '{astro=""type=SUNSET""}', '*', '</pre>', '*', '*', '@author', 'Gerhard', 'Riegler', '*', '@since', '1.5.0', '*/', 'public', 'class', 'BindingConfigParser', '{', '/**', '*', 'Parses', 'the', 'bindingConfig', 'of', 'an', 'item', 'and', 'returns', 'a', 'AstroBindingConfig.', '*/', 'public', 'AstroBindingConfig', 'parse(Item', 'item,', 'String', 'bindingConfig)', 'throws', 'BindingConfigParseException', '{', 'bindingConfig', '=', 'StringUtils.trimToEmpty(bindingConfig);', 'bindingConfig', '=', 'StringUtils.removeStart(bindingConfig,', '""{"");', 'bindingConfig', '=', 'StringUtils.removeEnd(bindingConfig,', '""}"");', 'String[]', 'entryParts', '=', 'StringUtils.trimToEmpty(bindingConfig).split(""[=]"");', 'if', '(entryParts.length', '!=', '2)', '{', 'throw', 'new', 'BindingConfigParseException(""A', 'bindingConfig', 'must', 'have', 'a', 'key', 'and', 'a', 'value"");', '}', 'String', 'key', '=', 'StringUtils.trim(entryParts[0]);', 'if', '(!""type"".equalsIgnoreCase(key))', '{', 'throw', 'new', 'BindingConfigParseException(""Unknown', 'key', '""', '+', 'key);', '}', 'String', 'value', '=', 'StringUtils.trim(entryParts[1]);', 'value', '=', 'StringUtils.removeStart(value,', '""\\"""");', 'value', '=', 'StringUtils.removeEnd(value,', '""\\"""");', 'AstroType', 'type', '=', 'null;', 'try', '{', 'type', '=', 'AstroType.valueOf(StringUtils.upperCase(value));', '}', 'catch', '(Exception', 'ex)', '{', 'throw', 'new', 'BindingConfigParseException(""Invalid', 'binding:', '""', '+', 'bindingConfig);', '}', 'if', '(!item.getAcceptedDataTypes().contains(type.getAcceptedDataType()))', '{', 'throw', 'new', 'BindingConfigParseException(""Item', '""', '+', 'item.getName()', '+', '""', 'must', 'support', '""', '+', 'type.getAcceptedDataType().getSimpleName()', '+', '""', 'for', 'binding', '""', '+', 'value);', '}', 'return', 'new', 'AstroBindingConfig(type);', '}', '}', '```']",challenge not surrounded by ''': ,
"/**
 * Created by garusis on 18/06/17.
 */
function drawBullet(ctx, bullet) {
    var offset = bullet.size / 2;

    ctx.save(); // saves the coordinate system


    ctx.lineJoin = ""round"";
    ctx.lineWidth = 3;
    ctx.fillStyle = ""blue"";
    ctx.translate(bullet.x, bullet.y);
    ctx.rotate(bullet.angle);
    ctx.beginPath();
    ctx.moveTo(0, -offset);
    ctx.lineTo(-offset, offset);
    ctx.lineTo(offset, offset);
    ctx.lineTo(0, -offset);
    ctx.fill();
    ctx.stroke();

    ctx.restore();
}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', 'Created', 'by', 'garusis', 'on', '18/06/17.', '*/', 'function', 'drawBullet(ctx,', 'bullet)', '{', 'var', 'offset', '=', 'bullet.size', '/', '2;', 'ctx.save();', '//', 'saves', 'the', 'coordinate', 'system', 'ctx.lineJoin', '=', '""round"";', 'ctx.lineWidth', '=', '3;', 'ctx.fillStyle', '=', '""blue"";', 'ctx.translate(bullet.x,', 'bullet.y);', 'ctx.rotate(bullet.angle);', 'ctx.beginPath();', 'ctx.moveTo(0,', '-offset);', 'ctx.lineTo(-offset,', 'offset);', 'ctx.lineTo(offset,', 'offset);', 'ctx.lineTo(0,', '-offset);', 'ctx.fill();', 'ctx.stroke();', 'ctx.restore();', '}```']",challenge not surrounded by ''': ,
"// Copyright 2020 Signal Messenger, LLC
// SPDX-License-Identifier: AGPL-3.0-only

/* global $ */

$(() => {
  $('.message').text(window.i18n('optimizingApplication'));
});
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//', 'Copyright', '2020', 'Signal', 'Messenger,', 'LLC', '//', 'SPDX-License-Identifier:', 'AGPL-3.0-only', '/*', 'global', '$', '*/', '$(()', '=>', '{', ""$('.message').text(window.i18n('optimizingApplication'));"", '});', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE html>
<html class=""reftest-wait"">
<link rel=""match"" href=""parse-input-arguments-ref.html"">
<style>
.container {
  width: 100px;
  height: 100px;
}

#canvas-geometry {
  background-image: paint(geometry);
}
</style>
<script src=""/common/reftest-wait.js""></script>
<script src=""/common/worklet-reftest.js""></script>
<body>
<div id=""canvas-geometry"" class=""container""></div>

<script id=""code"" type=""text/worklet"">
var testsPassed = false;
try {
    registerPaint('foo7', class { });
} catch(ex) {
    if (ex.name == 'TypeError' && ex.message == ""Failed to execute 'registerPaint' on 'PaintWorkletGlobalScope': The 'paint' property on the prototype does not exist."")
        testsPassed = true;
}

registerPaint('geometry', class {
    paint(ctx, geom) {
        if (testsPassed)
            ctx.strokeStyle = 'green';
        else
            ctx.strokeStyle = 'red';
        ctx.lineWidth = 4;
        ctx.strokeRect(0, 0, geom.width, geom.height);
    }
});
</script>

<script>
    importWorkletAndTerminateTestAfterAsyncPaint(CSS.paintWorklet, document.getElementById('code').textContent);
</script>
</body>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'html>', '<html', 'class=""reftest-wait"">', '<link', 'rel=""match""', 'href=""parse-input-arguments-ref.html"">', '<style>', '.container', '{', 'width:', '100px;', 'height:', '100px;', '}', '#canvas-geometry', '{', 'background-image:', 'paint(geometry);', '}', '</style>', '<script', 'src=""/common/reftest-wait.js""></script>', '<script', 'src=""/common/worklet-reftest.js""></script>', '<body>', '<div', 'id=""canvas-geometry""', 'class=""container""></div>', '<script', 'id=""code""', 'type=""text/worklet"">', 'var', 'testsPassed', '=', 'false;', 'try', '{', ""registerPaint('foo7',"", 'class', '{', '});', '}', 'catch(ex)', '{', 'if', '(ex.name', '==', ""'TypeError'"", '&&', 'ex.message', '==', '""Failed', 'to', 'execute', ""'registerPaint'"", 'on', ""'PaintWorkletGlobalScope':"", 'The', ""'paint'"", 'property', 'on', 'the', 'prototype', 'does', 'not', 'exist."")', 'testsPassed', '=', 'true;', '}', ""registerPaint('geometry',"", 'class', '{', 'paint(ctx,', 'geom)', '{', 'if', '(testsPassed)', 'ctx.strokeStyle', '=', ""'green';"", 'else', 'ctx.strokeStyle', '=', ""'red';"", 'ctx.lineWidth', '=', '4;', 'ctx.strokeRect(0,', '0,', 'geom.width,', 'geom.height);', '}', '});', '</script>', '<script>', 'importWorkletAndTerminateTestAfterAsyncPaint(CSS.paintWorklet,', ""document.getElementById('code').textContent);"", '</script>', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"const md5 = require('md5');

/**
 * SPA 项目语言包脚本的 _Webpack_ 入口 ID
 * @param {string} localeId
 * @returns {string}
 */
module.exports = localeId => md5(`koot-spa-locale-file-${localeId}`);
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```const', 'md5', '=', ""require('md5');"", '/**', '*', 'SPA', '项目语言包脚本的', '_Webpack_', '入口', 'ID', '*', '@param', '{string}', 'localeId', '*', '@returns', '{string}', '*/', 'module.exports', '=', 'localeId', '=>', 'md5(`koot-spa-locale-file-${localeId}`);', '```']",challenge not surrounded by ''': ,
"<table width=""90%"" border=""0""><tr><td><script>function openfile(url) {fullwin = window.open(url, ""fulltext"", ""toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=yes,resizable=yes"");}</script><div class=""layoutclass_pic""><div class=""layoutclass_first_pic""><table class=""ztable""><tr><th class=""ztd1""><b>成語&nbsp;</b></th><td class=""ztd2"">過河拆橋</td></tr>
<tr><th class=""ztd1""><b>典源&nbsp;</b></th><td class=""ztd2""> <font class=""dianuan_mark"">《元史．卷一四二．徹里帖木兒列傳》</font><br><font  size=4 color=""#808080"">至元元年，（徹里帖木兒）拜中書平章政事。首議罷科舉，又欲損太廟四祭為一祭。監察御史呂思誠等列其罪狀劾之，帝不允，詔徹里帖木兒仍出署事。時罷科舉詔已書而未用寶，參政許有壬入爭之。太師伯顏怒曰：「汝風臺臣言徹里帖木兒邪？」有壬曰：「太師以徹里帖木兒宣力之故，擢置中書。御史三十人不畏太師而聽有壬，豈有壬權重於太師耶？」伯顏意解。……伯顏心然其言，然其議已定不可中輟，乃為溫言慰解之，且（為）<font class=""dianuan_mark"">〔謂〕</font>有壬為能言。有壬聞之曰：「能言何益於事。」徹里帖木兒時在座，曰：「參政坐，無多言也。」有壬曰：「太師謂我風人劾平章，可共坐邪？」徹里帖木兒笑曰：「吾固未嘗信此語也。」有壬曰：「宜平章之不信也，設有壬果風人言平章，則言之必中矣，豈止如此而已。」眾皆笑而罷。翌日，崇天門宣詔，特令有壬為班首以折辱之。有壬懼及禍，勉從之。</font>治書侍御史普化<font size=-2 color=""#999900""><font class=""dianyuanfont""><b><i>1></i></b></font></font>誚<font size=-2 color=""#999900""><font class=""dianyuanfont""><b><i>2></i></b></font></font>有壬<font size=-2 color=""#999900""><font class=""dianyuanfont""><b><i>3></i></b></font></font>曰：「參政可謂過河拆橋者矣。」有壬以為大恥，遂移疾不出。</font> <br><font class=""dianuan_mark2"">〔注解〕</font><br></font>
<div class=""Rulediv""><font class=""english_word"">(1)</font> 普化：元朝治書侍御史，生卒年不詳。</font></div>
<div class=""Rulediv""><font class=""english_word"">(2)</font> 誚：音ㄑ｜ㄠˋ，責備、責怪。</font></div>
<div class=""Rulediv""><font class=""english_word"">(3)</font> 有壬：即許有壬。元朝人，生卒年不詳。官至參政。</font></div>
</td></tr>
</td></tr></table></div> <!-- layoutclass_first_pic --><div class=""layoutclass_second_pic""></div> <!-- layoutclass_second_pic --></div> <!-- layoutclass_pic --></td></tr></table>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<table', 'width=""90%""', 'border=""0""><tr><td><script>function', 'openfile(url)', '{fullwin', '=', 'window.open(url,', '""fulltext"",', '""toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=yes,resizable=yes"");}</script><div', 'class=""layoutclass_pic""><div', 'class=""layoutclass_first_pic""><table', 'class=""ztable""><tr><th', 'class=""ztd1""><b>成語&nbsp;</b></th><td', 'class=""ztd2"">過河拆橋</td></tr>', '<tr><th', 'class=""ztd1""><b>典源&nbsp;</b></th><td', 'class=""ztd2"">', '<font', 'class=""dianuan_mark"">《元史．卷一四二．徹里帖木兒列傳》</font><br><font', 'size=4', 'color=""#808080"">至元元年，（徹里帖木兒）拜中書平章政事。首議罷科舉，又欲損太廟四祭為一祭。監察御史呂思誠等列其罪狀劾之，帝不允，詔徹里帖木兒仍出署事。時罷科舉詔已書而未用寶，參政許有壬入爭之。太師伯顏怒曰：「汝風臺臣言徹里帖木兒邪？」有壬曰：「太師以徹里帖木兒宣力之故，擢置中書。御史三十人不畏太師而聽有壬，豈有壬權重於太師耶？」伯顏意解。……伯顏心然其言，然其議已定不可中輟，乃為溫言慰解之，且（為）<font', 'class=""dianuan_mark"">〔謂〕</font>有壬為能言。有壬聞之曰：「能言何益於事。」徹里帖木兒時在座，曰：「參政坐，無多言也。」有壬曰：「太師謂我風人劾平章，可共坐邪？」徹里帖木兒笑曰：「吾固未嘗信此語也。」有壬曰：「宜平章之不信也，設有壬果風人言平章，則言之必中矣，豈止如此而已。」眾皆笑而罷。翌日，崇天門宣詔，特令有壬為班首以折辱之。有壬懼及禍，勉從之。</font>治書侍御史普化<font', 'size=-2', 'color=""#999900""><font', 'class=""dianyuanfont""><b><i>1></i></b></font></font>誚<font', 'size=-2', 'color=""#999900""><font', 'class=""dianyuanfont""><b><i>2></i></b></font></font>有壬<font', 'size=-2', 'color=""#999900""><font', 'class=""dianyuanfont""><b><i>3></i></b></font></font>曰：「參政可謂過河拆橋者矣。」有壬以為大恥，遂移疾不出。</font>', '<br><font', 'class=""dianuan_mark2"">〔注解〕</font><br></font>', '<div', 'class=""Rulediv""><font', 'class=""english_word"">(1)</font>', '普化：元朝治書侍御史，生卒年不詳。</font></div>', '<div', 'class=""Rulediv""><font', 'class=""english_word"">(2)</font>', '誚：音ㄑ｜ㄠˋ，責備、責怪。</font></div>', '<div', 'class=""Rulediv""><font', 'class=""english_word"">(3)</font>', '有壬：即許有壬。元朝人，生卒年不詳。官至參政。</font></div>', '</td></tr>', '</td></tr></table></div>', '<!--', 'layoutclass_first_pic', '--><div', 'class=""layoutclass_second_pic""></div>', '<!--', 'layoutclass_second_pic', '--></div>', '<!--', 'layoutclass_pic', '--></td></tr></table>', '```']",challenge not surrounded by ''': ,
"# -*- coding: utf-8 -*-

""""""
***************************************************************************
    lasinfo.py
    ---------------------
    Date                 : August 2012
    Copyright            : (C) 2012 by Victor Olaya
    Email                : volayaf at gmail dot com
    ---------------------
    Date                 : September 2013
    Copyright            : (C) 2013 by Martin Isenburg
    Email                : martin near rapidlasso point com
***************************************************************************
*                                                                         *
*   This program is free software; you can redistribute it and/or modify  *
*   it under the terms of the GNU General Public License as published by  *
*   the Free Software Foundation; either version 2 of the License, or     *
*   (at your option) any later version.                                   *
*                                                                         *
***************************************************************************
""""""

__author__ = 'Martin Isenburg'
__date__ = 'September 2013'
__copyright__ = '(C) 2013, Martin Isenburg'

# This will get replaced with a git SHA1 when you do a git archive

__revision__ = '$Format:%H$'

import os
from processing.lidar.lastools.LAStoolsUtils import LAStoolsUtils
from processing.lidar.lastools.LAStoolsAlgorithm import LAStoolsAlgorithm


class lasview(LAStoolsAlgorithm):

    INPUT = 'INPUT'
    OUTPUT = 'OUTPUT'

    def defineCharacteristics(self):
        self.name = 'lasview'
        self.group = 'LAStools'
        self.addParametersVerboseGUI()
        self.addParametersPointInputGUI()

    def processAlgorithm(self, progress):
        commands = [os.path.join(LAStoolsUtils.LAStoolsPath(), 'bin',
                    'lasview.exe')]
        self.addParametersVerboseCommands(commands)
        self.addParametersPointInputCommands(commands)

        LAStoolsUtils.runLAStools(commands, progress)
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', '-*-', 'coding:', 'utf-8', '-*-', '""""""', '***************************************************************************', 'lasinfo.py', '---------------------', 'Date', ':', 'August', '2012', 'Copyright', ':', '(C)', '2012', 'by', 'Victor', 'Olaya', 'Email', ':', 'volayaf', 'at', 'gmail', 'dot', 'com', '---------------------', 'Date', ':', 'September', '2013', 'Copyright', ':', '(C)', '2013', 'by', 'Martin', 'Isenburg', 'Email', ':', 'martin', 'near', 'rapidlasso', 'point', 'com', '***************************************************************************', '*', '*', '*', 'This', 'program', 'is', 'free', 'software;', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', '*', '*', 'it', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'as', 'published', 'by', '*', '*', 'the', 'Free', 'Software', 'Foundation;', 'either', 'version', '2', 'of', 'the', 'License,', 'or', '*', '*', '(at', 'your', 'option)', 'any', 'later', 'version.', '*', '*', '*', '***************************************************************************', '""""""', '__author__', '=', ""'Martin"", ""Isenburg'"", '__date__', '=', ""'September"", ""2013'"", '__copyright__', '=', ""'(C)"", '2013,', 'Martin', ""Isenburg'"", '#', 'This', 'will', 'get', 'replaced', 'with', 'a', 'git', 'SHA1', 'when', 'you', 'do', 'a', 'git', 'archive', '__revision__', '=', ""'$Format:%H$'"", 'import', 'os', 'from', 'processing.lidar.lastools.LAStoolsUtils', 'import', 'LAStoolsUtils', 'from', 'processing.lidar.lastools.LAStoolsAlgorithm', 'import', 'LAStoolsAlgorithm', 'class', 'lasview(LAStoolsAlgorithm):', 'INPUT', '=', ""'INPUT'"", 'OUTPUT', '=', ""'OUTPUT'"", 'def', 'defineCharacteristics(self):', 'self.name', '=', ""'lasview'"", 'self.group', '=', ""'LAStools'"", 'self.addParametersVerboseGUI()', 'self.addParametersPointInputGUI()', 'def', 'processAlgorithm(self,', 'progress):', 'commands', '=', '[os.path.join(LAStoolsUtils.LAStoolsPath(),', ""'bin',"", ""'lasview.exe')]"", 'self.addParametersVerboseCommands(commands)', 'self.addParametersPointInputCommands(commands)', 'LAStoolsUtils.runLAStools(commands,', 'progress)', '```']",challenge not surrounded by ''': ,
"// This file is part of Sophus.
//
// Copyright 2013 Hauke Strasdat
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the ""Software""), to
// deal in the Software without restriction, including without limitation the
// rights  to use, copy, modify, merge, publish, distribute, sublicense, and/or
// sell copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
// IN THE SOFTWARE.

#ifndef SOPHUS_HPP
#define SOPHUS_HPP

#include <stdexcept>

// fix log1p not being found on Android in Eigen
#if defined( ANDROID )
#include <cmath>
namespace std {
  using ::log1p;
}
#endif

#include <Eigen/Eigen>
#include <Eigen/Geometry>

namespace Sophus {
using namespace Eigen;

template<typename Scalar>
struct SophusConstants {
  EIGEN_ALWAYS_INLINE static
  const Scalar epsilon() {
    return static_cast<Scalar>(1e-10);
  }

  EIGEN_ALWAYS_INLINE static
  const Scalar pi() {
    return static_cast<Scalar>(M_PI);
  }
};

template<>
struct SophusConstants<float> {
  EIGEN_ALWAYS_INLINE static
  float epsilon() {
    return static_cast<float>(1e-5);
  }

  EIGEN_ALWAYS_INLINE static
  float pi() {
    return static_cast<float>(M_PI);
  }
};

class SophusException : public std::runtime_error {
public:
  SophusException (const std::string& str)
    : runtime_error(""Sophus exception: "" + str) {
  }
};

}

#endif
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//', 'This', 'file', 'is', 'part', 'of', 'Sophus.', '//', '//', 'Copyright', '2013', 'Hauke', 'Strasdat', '//', '//', 'Permission', 'is', 'hereby', 'granted,', 'free', 'of', 'charge,', 'to', 'any', 'person', 'obtaining', 'a', 'copy', '//', 'of', 'this', 'software', 'and', 'associated', 'documentation', 'files', '(the', '""Software""),', 'to', '//', 'deal', 'in', 'the', 'Software', 'without', 'restriction,', 'including', 'without', 'limitation', 'the', '//', 'rights', 'to', 'use,', 'copy,', 'modify,', 'merge,', 'publish,', 'distribute,', 'sublicense,', 'and/or', '//', 'sell', 'copies', 'of', 'the', 'Software,', 'and', 'to', 'permit', 'persons', 'to', 'whom', 'the', 'Software', 'is', '//', 'furnished', 'to', 'do', 'so,', 'subject', 'to', 'the', 'following', 'conditions:', '//', '//', 'The', 'above', 'copyright', 'notice', 'and', 'this', 'permission', 'notice', 'shall', 'be', 'included', 'in', '//', 'all', 'copies', 'or', 'substantial', 'portions', 'of', 'the', 'Software.', '//', '//', 'THE', 'SOFTWARE', 'IS', 'PROVIDED', '""AS', 'IS"",', 'WITHOUT', 'WARRANTY', 'OF', 'ANY', 'KIND,', 'EXPRESS', 'OR', '//', 'IMPLIED,', 'INCLUDING', 'BUT', 'NOT', 'LIMITED', 'TO', 'THE', 'WARRANTIES', 'OF', 'MERCHANTABILITY,', '//', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE', 'AND', 'NONINFRINGEMENT.', 'IN', 'NO', 'EVENT', 'SHALL', 'THE', '//', 'AUTHORS', 'OR', 'COPYRIGHT', 'HOLDERS', 'BE', 'LIABLE', 'FOR', 'ANY', 'CLAIM,', 'DAMAGES', 'OR', 'OTHER', '//', 'LIABILITY,', 'WHETHER', 'IN', 'AN', 'ACTION', 'OF', 'CONTRACT,', 'TORT', 'OR', 'OTHERWISE,', 'ARISING', '//', 'FROM,', 'OUT', 'OF', 'OR', 'IN', 'CONNECTION', 'WITH', 'THE', 'SOFTWARE', 'OR', 'THE', 'USE', 'OR', 'OTHER', 'DEALINGS', '//', 'IN', 'THE', 'SOFTWARE.', '#ifndef', 'SOPHUS_HPP', '#define', 'SOPHUS_HPP', '#include', '<stdexcept>', '//', 'fix', 'log1p', 'not', 'being', 'found', 'on', 'Android', 'in', 'Eigen', '#if', 'defined(', 'ANDROID', ')', '#include', '<cmath>', 'namespace', 'std', '{', 'using', '::log1p;', '}', '#endif', '#include', '<Eigen/Eigen>', '#include', '<Eigen/Geometry>', 'namespace', 'Sophus', '{', 'using', 'namespace', 'Eigen;', 'template<typename', 'Scalar>', 'struct', 'SophusConstants', '{', 'EIGEN_ALWAYS_INLINE', 'static', 'const', 'Scalar', 'epsilon()', '{', 'return', 'static_cast<Scalar>(1e-10);', '}', 'EIGEN_ALWAYS_INLINE', 'static', 'const', 'Scalar', 'pi()', '{', 'return', 'static_cast<Scalar>(M_PI);', '}', '};', 'template<>', 'struct', 'SophusConstants<float>', '{', 'EIGEN_ALWAYS_INLINE', 'static', 'float', 'epsilon()', '{', 'return', 'static_cast<float>(1e-5);', '}', 'EIGEN_ALWAYS_INLINE', 'static', 'float', 'pi()', '{', 'return', 'static_cast<float>(M_PI);', '}', '};', 'class', 'SophusException', ':', 'public', 'std::runtime_error', '{', 'public:', 'SophusException', '(const', 'std::string&', 'str)', ':', 'runtime_error(""Sophus', 'exception:', '""', '+', 'str)', '{', '}', '};', '}', '#endif', '```']",challenge not surrounded by ''': ,
"﻿<div class=""sidebar-module sidebar-module-inset"">
    <a title=""About"" href=""@(Html.BuildUrlFromExpression<HomeController>(c => c.About()))""><h4>About</h4></a>
    <div class=""instagram-profile-picture text-center margin-bottom-10 instafeed""></div>
    <p class=""instagram-bio""></p>
    @(Html.Action<ContentHtmlController>(c=> c.DetailsChild(CMS.ContentHtml.SideBarAbout), true))
</div>","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```\ufeff<div', 'class=""sidebar-module', 'sidebar-module-inset"">', '<a', 'title=""About""', 'href=""@(Html.BuildUrlFromExpression<HomeController>(c', '=>', 'c.About()))""><h4>About</h4></a>', '<div', 'class=""instagram-profile-picture', 'text-center', 'margin-bottom-10', 'instafeed""></div>', '<p', 'class=""instagram-bio""></p>', '@(Html.Action<ContentHtmlController>(c=>', 'c.DetailsChild(CMS.ContentHtml.SideBarAbout),', 'true))', '</div>```']",challenge not surrounded by ''': ,
"#!/usr/bin/env bash
# vim: set sw=4 sts=4 et :

# Copyright (c) 2007, 2008, 2011 Ciaran McCreesh
#
# This file is part of the Paludis package manager. Paludis is free software;
# you can redistribute it and/or modify it under the terms of the GNU General
# Public License, version 2, as published by the Free Software Foundation.
#
# Paludis is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc., 59 Temple
# Place, Suite 330, Boston, MA  02111-1307  USA

default_pkg_pretend()
{
    verify_not_called_cross_phase ${FUNCNAME[0]#default_}
    :
}

pkg_pretend()
{
    default ""$@""
}

exheres_internal_pretend()
{
    if hasq ""pretend"" ${SKIP_FUNCTIONS} ; then
        ebuild_section ""Skipping pkg_pretend (SKIP_FUNCTIONS)""
    else
        pkg_pretend
    fi

    true
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/usr/bin/env', 'bash', '#', 'vim:', 'set', 'sw=4', 'sts=4', 'et', ':', '#', 'Copyright', '(c)', '2007,', '2008,', '2011', 'Ciaran', 'McCreesh', '#', '#', 'This', 'file', 'is', 'part', 'of', 'the', 'Paludis', 'package', 'manager.', 'Paludis', 'is', 'free', 'software;', '#', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', 'it', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'General', '#', 'Public', 'License,', 'version', '2,', 'as', 'published', 'by', 'the', 'Free', 'Software', 'Foundation.', '#', '#', 'Paludis', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', 'but', 'WITHOUT', 'ANY', '#', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', 'MERCHANTABILITY', 'or', 'FITNESS', '#', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', 'GNU', 'General', 'Public', 'License', 'for', 'more', '#', 'details.', '#', '#', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'along', 'with', '#', 'this', 'program;', 'if', 'not,', 'write', 'to', 'the', 'Free', 'Software', 'Foundation,', 'Inc.,', '59', 'Temple', '#', 'Place,', 'Suite', '330,', 'Boston,', 'MA', '02111-1307', 'USA', 'default_pkg_pretend()', '{', 'verify_not_called_cross_phase', '${FUNCNAME[0]#default_}', ':', '}', 'pkg_pretend()', '{', 'default', '""$@""', '}', 'exheres_internal_pretend()', '{', 'if', 'hasq', '""pretend""', '${SKIP_FUNCTIONS}', ';', 'then', 'ebuild_section', '""Skipping', 'pkg_pretend', '(SKIP_FUNCTIONS)""', 'else', 'pkg_pretend', 'fi', 'true', '}', '```']",challenge not surrounded by ''': ,
"<div class=""location-string"">
  <i data-ng-if=""vm.mapConfig.address"" class=""fa fa-map-marker"" aria-hidden=""true""></i>
  <a href=""""
     data-ng-bind=""vm.mapConfig.address""
     data-ng-click=""vm.openLocationModal()""
  ></a>
</div>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<div', 'class=""location-string"">', '<i', 'data-ng-if=""vm.mapConfig.address""', 'class=""fa', 'fa-map-marker""', 'aria-hidden=""true""></i>', '<a', 'href=""""', 'data-ng-bind=""vm.mapConfig.address""', 'data-ng-click=""vm.openLocationModal()""', '></a>', '</div>', '```']",challenge not surrounded by ''': ,
"// Ionic Starter App

// angular.module is a global place for creating, registering and retrieving Angular modules
// 'starter' is the name of this angular module example (also set in a <body> attribute in index.html)
// the 2nd parameter is an array of 'requires'
var app = angular.module('app', ['ionic'])

  .config(function($compileProvider, $stateProvider, $urlRouterProvider, $locationProvider){
    $compileProvider.imgSrcSanitizationWhitelist(/^\s*(https?|ftp|mailto|file|tel):/);

    // routes
    $urlRouterProvider.otherwise('/');

    $stateProvider
      .state('app', {
        url: '/',
        templateUrl: 'templates/start.html',
        controller: 'StartCtrl'
      })

      .state('app.entry',{
        url: 'entry',
        templateUrl: 'templates/entry.html',
        controller: 'EntryCtrl'
      })

      .state('app.tracking', {
        url: 'tracking',
        templateUrl: 'templates/tracking.html',
        controller: 'TrackingCtrl'
      });

  })

  .run(function($ionicPlatform, $localstorage) {

    $ionicPlatform.ready(function() {
      // Hide the accessory bar by default (remove this to show the accessory bar above the keyboard
      // for form inputs)
      if(window.cordova && window.cordova.plugins.Keyboard) {
        cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);
      }
      if(window.StatusBar) {
        StatusBar.styleDefault();
      }
    });


  });
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//', 'Ionic', 'Starter', 'App', '//', 'angular.module', 'is', 'a', 'global', 'place', 'for', 'creating,', 'registering', 'and', 'retrieving', 'Angular', 'modules', '//', ""'starter'"", 'is', 'the', 'name', 'of', 'this', 'angular', 'module', 'example', '(also', 'set', 'in', 'a', '<body>', 'attribute', 'in', 'index.html)', '//', 'the', '2nd', 'parameter', 'is', 'an', 'array', 'of', ""'requires'"", 'var', 'app', '=', ""angular.module('app',"", ""['ionic'])"", '.config(function($compileProvider,', '$stateProvider,', '$urlRouterProvider,', '$locationProvider){', '$compileProvider.imgSrcSanitizationWhitelist(/^\\s*(https?|ftp|mailto|file|tel):/);', '//', 'routes', ""$urlRouterProvider.otherwise('/');"", '$stateProvider', "".state('app',"", '{', 'url:', ""'/',"", 'templateUrl:', ""'templates/start.html',"", 'controller:', ""'StartCtrl'"", '})', "".state('app.entry',{"", 'url:', ""'entry',"", 'templateUrl:', ""'templates/entry.html',"", 'controller:', ""'EntryCtrl'"", '})', "".state('app.tracking',"", '{', 'url:', ""'tracking',"", 'templateUrl:', ""'templates/tracking.html',"", 'controller:', ""'TrackingCtrl'"", '});', '})', '.run(function($ionicPlatform,', '$localstorage)', '{', '$ionicPlatform.ready(function()', '{', '//', 'Hide', 'the', 'accessory', 'bar', 'by', 'default', '(remove', 'this', 'to', 'show', 'the', 'accessory', 'bar', 'above', 'the', 'keyboard', '//', 'for', 'form', 'inputs)', 'if(window.cordova', '&&', 'window.cordova.plugins.Keyboard)', '{', 'cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);', '}', 'if(window.StatusBar)', '{', 'StatusBar.styleDefault();', '}', '});', '});', '```']",challenge not surrounded by ''': ,
"﻿<!DOCTYPE html>
<html>
	<head>
		<title>Simple Form</title>
		<meta charset=""ISO-8859-1"">
	</head>
	<body bgcolor=""#eee"">
		<h2 style=""color: #234465;"">Enter the system</h2>
		<p style=""color: #9a9a9a;"">It is necessary to login in Your account in order to sign in for a course.</p>
		<div style=""display: inline-block; width: 25%; height: 40%;"">
			<h4 style=""margin-bottom: 0px; margin-top: 5px; margin-left: 5px; color: #9a9a9a;"">ARE YOU NEW? <span style=""color: #234465;"">REGISTER</span></h4>
			<form>
				<input type=""text"" name=""userName"" value=""User name"" width=""100px"" style=""width: 95%; margin: 7px; height: 25px;""><br/>
				<input type=""email"" name=""eMail"" value=""Email"" style=""width: 95%; margin: 7px; height: 25px;""><br/>
				<input type=""text"" name=""pass"" value=""Password"" style=""width: 95%; margin: 7px; height: 25px;""><br/>
				<input type=""text"" name=""confirmPass"" value=""Confirm Password"" style=""width: 95%; margin: 7px; height: 25px;""><br/>
				<button style=""float: right; margin: 7px; width: 130px; height: 30px; border-color: #234465; color: #234465; background-color: #eee;""><b>Register</b></button>
			</form>
		</div>
		<div style=""display: inline-block; width: 25%; height: 40%; background-color: #234465; vertical-align: top;"">
			<h4 style=""color: white; margin-bottom: 10px; margin-top: 5px; margin-left: 5px;"">ALREDY A STUDENT? LOGIN</h4>
			<form>
				<center><input type=""text"" name=""userName"" value=""User name"" style=""width: 95%; margin: 5px; height: 25px;""></center>
				<center><input type=""email"" name=""eMail"" value=""Email"" style=""width: 95%; margin: 5px; margin-bottom: 0px; height: 25px;""></center>
				<table width=""100%"" style=""margin-top: 0px;"">
					<tr>
						<td><input type=""checkbox"" name=""remember"" value=""remember"" style=""height: 20px; width: 20px;""><span style=""color: white; vertical-align: top;"">Remember me?</span></td><br/>
						<td><button border=""1"" style=""float: right; background-color: #234465; margin: 7px; width: 130px; height: 30px; border-color: #fa9a02; color: white;"">Login</button></td>						
					</tr>
					<tr>
						<td colspan=""2""><a href="""" style=""color: black; float: right; color: white; margin-right: 10px;"">Forgot Password</a></td>
					</tr>
				</table>
			</form><br/><br/>
		</div>
	</body>
</html>","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```\ufeff<!DOCTYPE', 'html>', '<html>', '<head>', '<title>Simple', 'Form</title>', '<meta', 'charset=""ISO-8859-1"">', '</head>', '<body', 'bgcolor=""#eee"">', '<h2', 'style=""color:', '#234465;"">Enter', 'the', 'system</h2>', '<p', 'style=""color:', '#9a9a9a;"">It', 'is', 'necessary', 'to', 'login', 'in', 'Your', 'account', 'in', 'order', 'to', 'sign', 'in', 'for', 'a', 'course.</p>', '<div', 'style=""display:', 'inline-block;', 'width:', '25%;', 'height:', '40%;"">', '<h4', 'style=""margin-bottom:', '0px;', 'margin-top:', '5px;', 'margin-left:', '5px;', 'color:', '#9a9a9a;"">ARE', 'YOU', 'NEW?', '<span', 'style=""color:', '#234465;"">REGISTER</span></h4>', '<form>', '<input', 'type=""text""', 'name=""userName""', 'value=""User', 'name""', 'width=""100px""', 'style=""width:', '95%;', 'margin:', '7px;', 'height:', '25px;""><br/>', '<input', 'type=""email""', 'name=""eMail""', 'value=""Email""', 'style=""width:', '95%;', 'margin:', '7px;', 'height:', '25px;""><br/>', '<input', 'type=""text""', 'name=""pass""', 'value=""Password""', 'style=""width:', '95%;', 'margin:', '7px;', 'height:', '25px;""><br/>', '<input', 'type=""text""', 'name=""confirmPass""', 'value=""Confirm', 'Password""', 'style=""width:', '95%;', 'margin:', '7px;', 'height:', '25px;""><br/>', '<button', 'style=""float:', 'right;', 'margin:', '7px;', 'width:', '130px;', 'height:', '30px;', 'border-color:', '#234465;', 'color:', '#234465;', 'background-color:', '#eee;""><b>Register</b></button>', '</form>', '</div>', '<div', 'style=""display:', 'inline-block;', 'width:', '25%;', 'height:', '40%;', 'background-color:', '#234465;', 'vertical-align:', 'top;"">', '<h4', 'style=""color:', 'white;', 'margin-bottom:', '10px;', 'margin-top:', '5px;', 'margin-left:', '5px;"">ALREDY', 'A', 'STUDENT?', 'LOGIN</h4>', '<form>', '<center><input', 'type=""text""', 'name=""userName""', 'value=""User', 'name""', 'style=""width:', '95%;', 'margin:', '5px;', 'height:', '25px;""></center>', '<center><input', 'type=""email""', 'name=""eMail""', 'value=""Email""', 'style=""width:', '95%;', 'margin:', '5px;', 'margin-bottom:', '0px;', 'height:', '25px;""></center>', '<table', 'width=""100%""', 'style=""margin-top:', '0px;"">', '<tr>', '<td><input', 'type=""checkbox""', 'name=""remember""', 'value=""remember""', 'style=""height:', '20px;', 'width:', '20px;""><span', 'style=""color:', 'white;', 'vertical-align:', 'top;"">Remember', 'me?</span></td><br/>', '<td><button', 'border=""1""', 'style=""float:', 'right;', 'background-color:', '#234465;', 'margin:', '7px;', 'width:', '130px;', 'height:', '30px;', 'border-color:', '#fa9a02;', 'color:', 'white;"">Login</button></td>', '</tr>', '<tr>', '<td', 'colspan=""2""><a', 'href=""""', 'style=""color:', 'black;', 'float:', 'right;', 'color:', 'white;', 'margin-right:', '10px;"">Forgot', 'Password</a></td>', '</tr>', '</table>', '</form><br/><br/>', '</div>', '</body>', '</html>```']",challenge not surrounded by ''': ,
"package fr.labri.progress.comet.service;

import java.io.IOException;

import org.eclipse.egit.github.core.Repository;

import fr.labri.progress.comet.exception.GitHubDiscrepencyException;
import fr.labri.progress.comet.model.GitUser;

public abstract class GitHubWebHookService extends
		org.eclipse.egit.github.core.service.GitHubService {

	public abstract void registerWebHook(GitUser user,
			org.eclipse.egit.github.core.Repository repo) throws IOException,
			GitHubDiscrepencyException;

	public abstract void unregisterWebHook(
			org.eclipse.egit.github.core.Repository repo) throws IOException;

	public abstract void SyncWebHookDb(Repository repository);
			

}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'fr.labri.progress.comet.service;', 'import', 'java.io.IOException;', 'import', 'org.eclipse.egit.github.core.Repository;', 'import', 'fr.labri.progress.comet.exception.GitHubDiscrepencyException;', 'import', 'fr.labri.progress.comet.model.GitUser;', 'public', 'abstract', 'class', 'GitHubWebHookService', 'extends', 'org.eclipse.egit.github.core.service.GitHubService', '{', 'public', 'abstract', 'void', 'registerWebHook(GitUser', 'user,', 'org.eclipse.egit.github.core.Repository', 'repo)', 'throws', 'IOException,', 'GitHubDiscrepencyException;', 'public', 'abstract', 'void', 'unregisterWebHook(', 'org.eclipse.egit.github.core.Repository', 'repo)', 'throws', 'IOException;', 'public', 'abstract', 'void', 'SyncWebHookDb(Repository', 'repository);', '}```']",challenge not surrounded by ''': ,
"</td>
<script type=""text/javascript"">
if(j8Selected){
if(j8Selected==2){document.getElementById('main').src='/cgi-bin/services';}
if(j8Selected==102){document.getElementById('main').src='/cgi-bin/desktop';}
if(j8Selected==103){document.getElementById('main').src='/cgi-bin/tscapplications';}
if(j8Selected==105){document.getElementById('main').src='/cgi-bin/themes';}
if(j8Selected==104){document.getElementById('main').src='/cgi-bin/sslvpnclient';}
if(j8Selected==106){document.getElementById('main').src='/cgi-bin/virtualtransport';}
if(j8Selected==107){document.getElementById('main').src='/cgi-bin/sslvpnclient';}
if(j8Selected==108){document.getElementById('main').src='/cgi-bin/clientlinux?link_clicked=Mac';}
if(j8Selected==109){document.getElementById('main').src='/cgi-bin/clientlinux?link_clicked=Linux';}
if(j8Selected==110){document.getElementById('main').src='/cgi-bin/sslvpnclient?jni_installer=show_page';}
if(j8Selected==112){document.getElementById('main').src='/cgi-bin/vpdesktopclient';}
if(j8Selected==111){document.getElementById('main').src='/cgi-bin/changepassword';}
}
</script>
<td width=21 class=""mainback"" valign=bottom align=right><img src=""/images/shim.gif"" height=1 width=19><br>
</td>
<td width=1 class=""darkback"" height=400><img src=""/images/shim.gif"" height=400 width=1></td>
</tr></table></td></tr><tr>
<td class=""mainbottom"" width=743 height=17 colspan=2><img src=""/images/shim.gif"" border=0 width=743 height=17></td>
</tr>
</table>
</center>
<div valign=bottom align=left>
<iframe name=virtualpassageframe id=virtualpassageframe src=""/blank.html"" height=1 width=1 scrolling='no' scroll='no' scrollbars='no' border=0 frameborder=0></iframe>
</div>
<div valign=bottom align=right>
<iframe name=virtualtransportframe id=virtualtransportframe src=""/blank.html"" height=1 width=1 scrolling='no' scroll='no' scrollbars='no' border=0 frameborder=0></iframe>
</div>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```</td>', '<script', 'type=""text/javascript"">', 'if(j8Selected){', ""if(j8Selected==2){document.getElementById('main').src='/cgi-bin/services';}"", ""if(j8Selected==102){document.getElementById('main').src='/cgi-bin/desktop';}"", ""if(j8Selected==103){document.getElementById('main').src='/cgi-bin/tscapplications';}"", ""if(j8Selected==105){document.getElementById('main').src='/cgi-bin/themes';}"", ""if(j8Selected==104){document.getElementById('main').src='/cgi-bin/sslvpnclient';}"", ""if(j8Selected==106){document.getElementById('main').src='/cgi-bin/virtualtransport';}"", ""if(j8Selected==107){document.getElementById('main').src='/cgi-bin/sslvpnclient';}"", ""if(j8Selected==108){document.getElementById('main').src='/cgi-bin/clientlinux?link_clicked=Mac';}"", ""if(j8Selected==109){document.getElementById('main').src='/cgi-bin/clientlinux?link_clicked=Linux';}"", ""if(j8Selected==110){document.getElementById('main').src='/cgi-bin/sslvpnclient?jni_installer=show_page';}"", ""if(j8Selected==112){document.getElementById('main').src='/cgi-bin/vpdesktopclient';}"", ""if(j8Selected==111){document.getElementById('main').src='/cgi-bin/changepassword';}"", '}', '</script>', '<td', 'width=21', 'class=""mainback""', 'valign=bottom', 'align=right><img', 'src=""/images/shim.gif""', 'height=1', 'width=19><br>', '</td>', '<td', 'width=1', 'class=""darkback""', 'height=400><img', 'src=""/images/shim.gif""', 'height=400', 'width=1></td>', '</tr></table></td></tr><tr>', '<td', 'class=""mainbottom""', 'width=743', 'height=17', 'colspan=2><img', 'src=""/images/shim.gif""', 'border=0', 'width=743', 'height=17></td>', '</tr>', '</table>', '</center>', '<div', 'valign=bottom', 'align=left>', '<iframe', 'name=virtualpassageframe', 'id=virtualpassageframe', 'src=""/blank.html""', 'height=1', 'width=1', ""scrolling='no'"", ""scroll='no'"", ""scrollbars='no'"", 'border=0', 'frameborder=0></iframe>', '</div>', '<div', 'valign=bottom', 'align=right>', '<iframe', 'name=virtualtransportframe', 'id=virtualtransportframe', 'src=""/blank.html""', 'height=1', 'width=1', ""scrolling='no'"", ""scroll='no'"", ""scrollbars='no'"", 'border=0', 'frameborder=0></iframe>', '</div>', '```']",challenge not surrounded by ''': ,
"# Copyright 2018 The TensorFlow Authors. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the ""License"");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an ""AS IS"" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ==============================================================================
""""""Tests for checkpointing the ParseExampleDataset.""""""
from __future__ import absolute_import
from __future__ import division
from __future__ import print_function

from absl.testing import parameterized

from tensorflow.python.data.experimental.kernel_tests import reader_dataset_ops_test_base
from tensorflow.python.data.kernel_tests import checkpoint_test_base
from tensorflow.python.data.kernel_tests import test_base
from tensorflow.python.framework import combinations
from tensorflow.python.platform import test


class ParseExampleDatasetCheckpointTest(
    reader_dataset_ops_test_base.MakeBatchedFeaturesDatasetTestBase,
    checkpoint_test_base.CheckpointTestBase, parameterized.TestCase):

  def _parse_example_dataset(self, num_repeat, batch_size):
    return self.make_batch_feature(
        filenames=self.test_filenames,
        num_epochs=num_repeat,
        batch_size=batch_size,
        reader_num_threads=5,
        parser_num_threads=10)

  @combinations.generate(test_base.default_test_combinations())
  def testCheckpointCore(self):
    num_repeat = 5
    batch_size = 2
    num_outputs = self._num_records * self._num_files * num_repeat // batch_size
    # pylint: disable=g-long-lambda
    self.run_core_tests(
        lambda: self._parse_example_dataset(
            num_repeat=num_repeat, batch_size=batch_size), num_outputs)


if __name__ == ""__main__"":
  test.main()
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', 'Copyright', '2018', 'The', 'TensorFlow', 'Authors.', 'All', 'Rights', 'Reserved.', '#', '#', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '#', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '#', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '#', '#', 'http://www.apache.org/licenses/LICENSE-2.0', '#', '#', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '#', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '#', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '#', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '#', 'limitations', 'under', 'the', 'License.', '#', '==============================================================================', '""""""Tests', 'for', 'checkpointing', 'the', 'ParseExampleDataset.""""""', 'from', '__future__', 'import', 'absolute_import', 'from', '__future__', 'import', 'division', 'from', '__future__', 'import', 'print_function', 'from', 'absl.testing', 'import', 'parameterized', 'from', 'tensorflow.python.data.experimental.kernel_tests', 'import', 'reader_dataset_ops_test_base', 'from', 'tensorflow.python.data.kernel_tests', 'import', 'checkpoint_test_base', 'from', 'tensorflow.python.data.kernel_tests', 'import', 'test_base', 'from', 'tensorflow.python.framework', 'import', 'combinations', 'from', 'tensorflow.python.platform', 'import', 'test', 'class', 'ParseExampleDatasetCheckpointTest(', 'reader_dataset_ops_test_base.MakeBatchedFeaturesDatasetTestBase,', 'checkpoint_test_base.CheckpointTestBase,', 'parameterized.TestCase):', 'def', '_parse_example_dataset(self,', 'num_repeat,', 'batch_size):', 'return', 'self.make_batch_feature(', 'filenames=self.test_filenames,', 'num_epochs=num_repeat,', 'batch_size=batch_size,', 'reader_num_threads=5,', 'parser_num_threads=10)', '@combinations.generate(test_base.default_test_combinations())', 'def', 'testCheckpointCore(self):', 'num_repeat', '=', '5', 'batch_size', '=', '2', 'num_outputs', '=', 'self._num_records', '*', 'self._num_files', '*', 'num_repeat', '//', 'batch_size', '#', 'pylint:', 'disable=g-long-lambda', 'self.run_core_tests(', 'lambda:', 'self._parse_example_dataset(', 'num_repeat=num_repeat,', 'batch_size=batch_size),', 'num_outputs)', 'if', '__name__', '==', '""__main__"":', 'test.main()', '```']",challenge not surrounded by ''': ,
"/**
 *
 * Copyright 2009-2011 Rickard Öberg AB
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.qi4j.library.rest.common;

import java.util.Map;
import org.qi4j.api.common.UseDefaults;
import org.qi4j.api.property.Property;
import org.qi4j.api.value.ValueComposite;

/**
 * Value that represents a form. This can be used to mimic a HTML form.
 */
public interface Form
      extends ValueComposite
{
   @UseDefaults
   Property<Map<String,String>> form();
}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', '*', 'Copyright', '2009-2011', 'Rickard', 'Öberg', 'AB', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'org.qi4j.library.rest.common;', 'import', 'java.util.Map;', 'import', 'org.qi4j.api.common.UseDefaults;', 'import', 'org.qi4j.api.property.Property;', 'import', 'org.qi4j.api.value.ValueComposite;', '/**', '*', 'Value', 'that', 'represents', 'a', 'form.', 'This', 'can', 'be', 'used', 'to', 'mimic', 'a', 'HTML', 'form.', '*/', 'public', 'interface', 'Form', 'extends', 'ValueComposite', '{', '@UseDefaults', 'Property<Map<String,String>>', 'form();', '}```']",challenge not surrounded by ''': ,
"'use strict';

const angular = require('angular');

import { DELIVERY_STATES } from './delivery.states';
import { EXECUTION_DETAILS_COMPONENT } from './details/executionDetails.component';
import { BUILD_DISPLAY_NAME_FILTER } from './executionBuild/buildDisplayName.filter';
import { EXECUTION_BUILD_NUMBER_COMPONENT } from './executionBuild/executionBuildNumber.component';
import { EXECUTION_COMPONENT } from './executionGroup/execution/execution.component';
import { EXECUTION_GROUPS_COMPONENT } from './executionGroup/executionGroups.component';
import { EXECUTIONS_COMPONENT } from './executions/executions.component';
import { STAGE_FAILURE_MESSAGE_COMPONENT } from './stageFailureMessage/stageFailureMessage.component';
import { EXECUTION_STATUS_COMPONENT } from './status/executionStatus.component';
import { CORE_DELIVERY_DETAILS_SINGLEEXECUTIONDETAILS } from './details/singleExecutionDetails.component';


module.exports = angular.module('spinnaker.delivery', [

  require('./details/executionDetails.controller.js'),
  CORE_DELIVERY_DETAILS_SINGLEEXECUTIONDETAILS,
  EXECUTION_COMPONENT,
  EXECUTION_GROUPS_COMPONENT,
  EXECUTION_DETAILS_COMPONENT,
  EXECUTIONS_COMPONENT,
  require('./details/executionDetailsSectionNav.directive.js'),

  BUILD_DISPLAY_NAME_FILTER,
  EXECUTION_BUILD_NUMBER_COMPONENT,

  require('./filter/executionFilters.directive.js'),

  require('./manualExecution/manualPipelineExecution.controller.js'),

  STAGE_FAILURE_MESSAGE_COMPONENT,
  EXECUTION_STATUS_COMPONENT,

  require('../utils/appendTransform.js'),
  require('../utils/moment.js'),

  require('./delivery.dataSource'),
  DELIVERY_STATES,
]);
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', ""```'use"", ""strict';"", 'const', 'angular', '=', ""require('angular');"", 'import', '{', 'DELIVERY_STATES', '}', 'from', ""'./delivery.states';"", 'import', '{', 'EXECUTION_DETAILS_COMPONENT', '}', 'from', ""'./details/executionDetails.component';"", 'import', '{', 'BUILD_DISPLAY_NAME_FILTER', '}', 'from', ""'./executionBuild/buildDisplayName.filter';"", 'import', '{', 'EXECUTION_BUILD_NUMBER_COMPONENT', '}', 'from', ""'./executionBuild/executionBuildNumber.component';"", 'import', '{', 'EXECUTION_COMPONENT', '}', 'from', ""'./executionGroup/execution/execution.component';"", 'import', '{', 'EXECUTION_GROUPS_COMPONENT', '}', 'from', ""'./executionGroup/executionGroups.component';"", 'import', '{', 'EXECUTIONS_COMPONENT', '}', 'from', ""'./executions/executions.component';"", 'import', '{', 'STAGE_FAILURE_MESSAGE_COMPONENT', '}', 'from', ""'./stageFailureMessage/stageFailureMessage.component';"", 'import', '{', 'EXECUTION_STATUS_COMPONENT', '}', 'from', ""'./status/executionStatus.component';"", 'import', '{', 'CORE_DELIVERY_DETAILS_SINGLEEXECUTIONDETAILS', '}', 'from', ""'./details/singleExecutionDetails.component';"", 'module.exports', '=', ""angular.module('spinnaker.delivery',"", '[', ""require('./details/executionDetails.controller.js'),"", 'CORE_DELIVERY_DETAILS_SINGLEEXECUTIONDETAILS,', 'EXECUTION_COMPONENT,', 'EXECUTION_GROUPS_COMPONENT,', 'EXECUTION_DETAILS_COMPONENT,', 'EXECUTIONS_COMPONENT,', ""require('./details/executionDetailsSectionNav.directive.js'),"", 'BUILD_DISPLAY_NAME_FILTER,', 'EXECUTION_BUILD_NUMBER_COMPONENT,', ""require('./filter/executionFilters.directive.js'),"", ""require('./manualExecution/manualPipelineExecution.controller.js'),"", 'STAGE_FAILURE_MESSAGE_COMPONENT,', 'EXECUTION_STATUS_COMPONENT,', ""require('../utils/appendTransform.js'),"", ""require('../utils/moment.js'),"", ""require('./delivery.dataSource'),"", 'DELIVERY_STATES,', ']);', '```']",challenge not surrounded by ''': ,
"'use strict';

// FDB SQL Layer raw
// This file was adapted from the PostgreSQL raw

module.exports = function(client) {

var Raw = require('../../raw');
var inherits = require('inherits');

// Inherit from the `Raw` constructor's prototype,
// so we can add the correct `then` method.
function Raw_FDB() {
  this.client = client;
  Raw.apply(this, arguments);
}
inherits(Raw_FDB, Raw);

// Assign the newly extended `Raw` constructor to the client object.
client.Raw = Raw_FDB;

};
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', ""```'use"", ""strict';"", '//', 'FDB', 'SQL', 'Layer', 'raw', '//', 'This', 'file', 'was', 'adapted', 'from', 'the', 'PostgreSQL', 'raw', 'module.exports', '=', 'function(client)', '{', 'var', 'Raw', '=', ""require('../../raw');"", 'var', 'inherits', '=', ""require('inherits');"", '//', 'Inherit', 'from', 'the', '`Raw`', ""constructor's"", 'prototype,', '//', 'so', 'we', 'can', 'add', 'the', 'correct', '`then`', 'method.', 'function', 'Raw_FDB()', '{', 'this.client', '=', 'client;', 'Raw.apply(this,', 'arguments);', '}', 'inherits(Raw_FDB,', 'Raw);', '//', 'Assign', 'the', 'newly', 'extended', '`Raw`', 'constructor', 'to', 'the', 'client', 'object.', 'client.Raw', '=', 'Raw_FDB;', '};', '```']",challenge not surrounded by ''': ,
"package com.victortoader.angajati.client.view;


import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;

/**
 * Created by Administrator on 10/21/2015.
 */
class DownPanel extends JPanel {


    DownPanel() {
        add(new JLabel(""Employee table goes here""));
        setBorder(BorderFactory.createLineBorder(Color.RED));


    }


}




","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.victortoader.angajati.client.view;', 'import', 'javax.swing.*;', 'import', 'javax.swing.table.DefaultTableModel;', 'import', 'java.awt.*;', '/**', '*', 'Created', 'by', 'Administrator', 'on', '10/21/2015.', '*/', 'class', 'DownPanel', 'extends', 'JPanel', '{', 'DownPanel()', '{', 'add(new', 'JLabel(""Employee', 'table', 'goes', 'here""));', 'setBorder(BorderFactory.createLineBorder(Color.RED));', '}', '}', '```']",challenge not surrounded by ''': ,
"angular.module( 'ngRuter', [
  'templates-app',
  'templates-common',
  'ngRuter.home',
  'ngRuter.road',
  'ngRuter.about',
  'ngRuter.settings',
  'ui.router'
])

.config( function myAppConfig ( $stateProvider, $urlRouterProvider ) {
  $urlRouterProvider.otherwise( '/home' );
})

.run( function run () {
})

.controller( 'AppCtrl', function AppCtrl ( $scope, $location ) {
  $scope.$on('$stateChangeSuccess', function(event, toState, toParams, fromState, fromParams){
    if ( angular.isDefined( toState.data.pageTitle ) ) {
      $scope.pageTitle = toState.data.pageTitle + ' | ngRuter' ;
    }
  });
})

;

","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```angular.module(', ""'ngRuter',"", '[', ""'templates-app',"", ""'templates-common',"", ""'ngRuter.home',"", ""'ngRuter.road',"", ""'ngRuter.about',"", ""'ngRuter.settings',"", ""'ui.router'"", '])', '.config(', 'function', 'myAppConfig', '(', '$stateProvider,', '$urlRouterProvider', ')', '{', '$urlRouterProvider.otherwise(', ""'/home'"", ');', '})', '.run(', 'function', 'run', '()', '{', '})', '.controller(', ""'AppCtrl',"", 'function', 'AppCtrl', '(', '$scope,', '$location', ')', '{', ""$scope.$on('$stateChangeSuccess',"", 'function(event,', 'toState,', 'toParams,', 'fromState,', 'fromParams){', 'if', '(', 'angular.isDefined(', 'toState.data.pageTitle', ')', ')', '{', '$scope.pageTitle', '=', 'toState.data.pageTitle', '+', ""'"", '|', ""ngRuter'"", ';', '}', '});', '})', ';', '```']",challenge not surrounded by ''': ,
"package casebook.utils;

import org.modelmapper.ModelMapper;
import org.modelmapper.PropertyMap;


import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

public class ModelParserImpl implements ModelParser{

    private final ModelMapper mapper;

    public ModelParserImpl() {
        this.mapper = new ModelMapper();
    }

    @Override
    public <S, D> D convert(S source, Class<D> destinationClass) {
        return mapper.map(source, destinationClass);
    }

    @Override
    public <S, D> D convert(S source, Class<D> destinationClass, PropertyMap<S, D> propertyMap) {
        this.mapper.addMappings(propertyMap);
        return mapper.map(source, destinationClass);
    }

    @Override
    public <S, D> List<D> convert(Iterable<S> sourceIter, Class<D> destinationClass){
        List<D> resultList = new ArrayList<>();

        for (S s : sourceIter) {
            D d = convert(s, destinationClass);
            resultList.add(d);
        }

        return resultList;
    }

    @Override
    public <S, D> Set<D> convertToSet(Iterable<S> sourceIter, Class<D> destinationClass){
        Set<D> resultSet = new HashSet<>();

        for (S s : sourceIter) {
            D d = convert(s, destinationClass);
            resultSet.add(d);
        }

        return resultSet;
    }

    @Override
    public ModelMapper getMapper() {
        return this.mapper;
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'casebook.utils;', 'import', 'org.modelmapper.ModelMapper;', 'import', 'org.modelmapper.PropertyMap;', 'import', 'java.util.ArrayList;', 'import', 'java.util.HashSet;', 'import', 'java.util.List;', 'import', 'java.util.Set;', 'public', 'class', 'ModelParserImpl', 'implements', 'ModelParser{', 'private', 'final', 'ModelMapper', 'mapper;', 'public', 'ModelParserImpl()', '{', 'this.mapper', '=', 'new', 'ModelMapper();', '}', '@Override', 'public', '<S,', 'D>', 'D', 'convert(S', 'source,', 'Class<D>', 'destinationClass)', '{', 'return', 'mapper.map(source,', 'destinationClass);', '}', '@Override', 'public', '<S,', 'D>', 'D', 'convert(S', 'source,', 'Class<D>', 'destinationClass,', 'PropertyMap<S,', 'D>', 'propertyMap)', '{', 'this.mapper.addMappings(propertyMap);', 'return', 'mapper.map(source,', 'destinationClass);', '}', '@Override', 'public', '<S,', 'D>', 'List<D>', 'convert(Iterable<S>', 'sourceIter,', 'Class<D>', 'destinationClass){', 'List<D>', 'resultList', '=', 'new', 'ArrayList<>();', 'for', '(S', 's', ':', 'sourceIter)', '{', 'D', 'd', '=', 'convert(s,', 'destinationClass);', 'resultList.add(d);', '}', 'return', 'resultList;', '}', '@Override', 'public', '<S,', 'D>', 'Set<D>', 'convertToSet(Iterable<S>', 'sourceIter,', 'Class<D>', 'destinationClass){', 'Set<D>', 'resultSet', '=', 'new', 'HashSet<>();', 'for', '(S', 's', ':', 'sourceIter)', '{', 'D', 'd', '=', 'convert(s,', 'destinationClass);', 'resultSet.add(d);', '}', 'return', 'resultSet;', '}', '@Override', 'public', 'ModelMapper', 'getMapper()', '{', 'return', 'this.mapper;', '}', '}', '```']",challenge not surrounded by ''': ,
"/**
 * A network library for processing which supports UDP, TCP and Multicast.
 *
 * (c) 2004-2012
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General
 * Public License along with this library; if not, write to the
 * Free Software Foundation, Inc., 59 Temple Place, Suite 330,
 * Boston, MA  02111-1307  USA
 * 
 * @author		Andreas Schlegel http://www.sojamo.de
 * @modified	12/23/2012
 * @version		0.9.9
 */

package netP5;


/**
 * @author andreas schlegel
 */
public class UdpClient extends AbstractUdpClient {

  public UdpClient() {
    super();
  }


  public UdpClient(String theAddr, int thePort) {
    super(theAddr, thePort);
  }


  public UdpClient(NetAddress theNetAddress) {
    super(theNetAddress.address(), theNetAddress.port);
  }


}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', 'A', 'network', 'library', 'for', 'processing', 'which', 'supports', 'UDP,', 'TCP', 'and', 'Multicast.', '*', '*', '(c)', '2004-2012', '*', '*', 'This', 'library', 'is', 'free', 'software;', 'you', 'can', 'redistribute', 'it', 'and/or', '*', 'modify', 'it', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'Lesser', 'General', 'Public', '*', 'License', 'as', 'published', 'by', 'the', 'Free', 'Software', 'Foundation;', 'either', '*', 'version', '2.1', 'of', 'the', 'License,', 'or', '(at', 'your', 'option)', 'any', 'later', 'version.', '*', '*', 'This', 'library', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', '*', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', '*', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', 'GNU', '*', 'Lesser', 'General', 'Public', 'License', 'for', 'more', 'details.', '*', '*', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'Lesser', 'General', '*', 'Public', 'License', 'along', 'with', 'this', 'library;', 'if', 'not,', 'write', 'to', 'the', '*', 'Free', 'Software', 'Foundation,', 'Inc.,', '59', 'Temple', 'Place,', 'Suite', '330,', '*', 'Boston,', 'MA', '02111-1307', 'USA', '*', '*', '@author', 'Andreas', 'Schlegel', 'http://www.sojamo.de', '*', '@modified', '12/23/2012', '*', '@version', '0.9.9', '*/', 'package', 'netP5;', '/**', '*', '@author', 'andreas', 'schlegel', '*/', 'public', 'class', 'UdpClient', 'extends', 'AbstractUdpClient', '{', 'public', 'UdpClient()', '{', 'super();', '}', 'public', 'UdpClient(String', 'theAddr,', 'int', 'thePort)', '{', 'super(theAddr,', 'thePort);', '}', 'public', 'UdpClient(NetAddress', 'theNetAddress)', '{', 'super(theNetAddress.address(),', 'theNetAddress.port);', '}', '}', '```']",challenge not surrounded by ''': ,
"angular.module('directives', [])

  .directive('hideTab', [""$icu"", function ($icu) {
    return {
      restrict: 'A',
      link: function (scope, ele, attr) {
        scope.$on(""$ionicView.beforeEnter"", function () {
          $icu.showTab(attr.hideTab == ""false"");
        });
      }
    };
  }])
  .directive(""statusBar"", [""$icu"", function ($icu) {
    return {
      restrict: ""A"",
      link: function (scope, ele, attr) {
        scope.$on(""$ionicView.beforeEnter"", function () {
          $icu.setStatusBarStyle(+attr.statusBar);
        });
      }
    };
  }])
  .directive(""carousel"", [""$icu"", 'localImgUrl', function ($icu, localImgUrl) {
    return {
      restrict: ""E"",
      replace: true,
      scope: {
        images: ""="",
        click: ""&""
      },
      template: '<div class=""carousel""><ion-slide-box show-pager=""true"" auto-play=""true"" does-continue=""true"" slide-interval=""3000"">' +
        '<ion-slide ng-repeat=""img in images"">' +
        '<img ng-click=""click()"" ng-src=""' + localImgUrl + '{{img}}"" width=""100%""/>' +
        '</ion-slide>' +
        '</ion-slide-box></div>'
    };
  }]);

","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', ""```angular.module('directives',"", '[])', "".directive('hideTab',"", '[""$icu"",', 'function', '($icu)', '{', 'return', '{', 'restrict:', ""'A',"", 'link:', 'function', '(scope,', 'ele,', 'attr)', '{', 'scope.$on(""$ionicView.beforeEnter"",', 'function', '()', '{', '$icu.showTab(attr.hideTab', '==', '""false"");', '});', '}', '};', '}])', '.directive(""statusBar"",', '[""$icu"",', 'function', '($icu)', '{', 'return', '{', 'restrict:', '""A"",', 'link:', 'function', '(scope,', 'ele,', 'attr)', '{', 'scope.$on(""$ionicView.beforeEnter"",', 'function', '()', '{', '$icu.setStatusBarStyle(+attr.statusBar);', '});', '}', '};', '}])', '.directive(""carousel"",', '[""$icu"",', ""'localImgUrl',"", 'function', '($icu,', 'localImgUrl)', '{', 'return', '{', 'restrict:', '""E"",', 'replace:', 'true,', 'scope:', '{', 'images:', '""="",', 'click:', '""&""', '},', 'template:', ""'<div"", 'class=""carousel""><ion-slide-box', 'show-pager=""true""', 'auto-play=""true""', 'does-continue=""true""', 'slide-interval=""3000"">\'', '+', ""'<ion-slide"", 'ng-repeat=""img', 'in', 'images"">\'', '+', ""'<img"", 'ng-click=""click()""', 'ng-src=""\'', '+', 'localImgUrl', '+', '\'{{img}}""', 'width=""100%""/>\'', '+', ""'</ion-slide>'"", '+', ""'</ion-slide-box></div>'"", '};', '}]);', '```']",challenge not surrounded by ''': ,
"from newt.views import JSONRestView
from newt.views import AuthJSONRestView
from common.response import json_response
from django.shortcuts import render
from django.conf import settings

import logging
logger = logging.getLogger(""newt."" + __name__)

from importlib import import_module
acct_adapter = import_module(settings.NEWT_CONFIG['ADAPTERS']['ACCOUNT']['adapter'])

# /api/account/user/<user_name>/
# /api/account/user/id/<uid>/
class UserInfoView(AuthJSONRestView):
    def get(self, request, user_name=None, uid=None):
        logger.debug(""Entering %s:%s"" % (self.__class__.__name__, __name__))
        return acct_adapter.get_user_info(user_name=user_name, uid=uid)

# /api/account/group/<group_name>/
# /api/account/group/<gid>/
class GroupInfoView(AuthJSONRestView):
    def get(self, request, group_name=None, gid=None):
        return acct_adapter.get_group_info(group_name=group_name, gid=gid)

# /api/account/<query>/
class ExtraAcctView(JSONRestView):
    def get(self, request, query):
        return acct_adapter.extras_router(request, query)","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```from', 'newt.views', 'import', 'JSONRestView', 'from', 'newt.views', 'import', 'AuthJSONRestView', 'from', 'common.response', 'import', 'json_response', 'from', 'django.shortcuts', 'import', 'render', 'from', 'django.conf', 'import', 'settings', 'import', 'logging', 'logger', '=', 'logging.getLogger(""newt.""', '+', '__name__)', 'from', 'importlib', 'import', 'import_module', 'acct_adapter', '=', ""import_module(settings.NEWT_CONFIG['ADAPTERS']['ACCOUNT']['adapter'])"", '#', '/api/account/user/<user_name>/', '#', '/api/account/user/id/<uid>/', 'class', 'UserInfoView(AuthJSONRestView):', 'def', 'get(self,', 'request,', 'user_name=None,', 'uid=None):', 'logger.debug(""Entering', '%s:%s""', '%', '(self.__class__.__name__,', '__name__))', 'return', 'acct_adapter.get_user_info(user_name=user_name,', 'uid=uid)', '#', '/api/account/group/<group_name>/', '#', '/api/account/group/<gid>/', 'class', 'GroupInfoView(AuthJSONRestView):', 'def', 'get(self,', 'request,', 'group_name=None,', 'gid=None):', 'return', 'acct_adapter.get_group_info(group_name=group_name,', 'gid=gid)', '#', '/api/account/<query>/', 'class', 'ExtraAcctView(JSONRestView):', 'def', 'get(self,', 'request,', 'query):', 'return', 'acct_adapter.extras_router(request,', 'query)```']",challenge not surrounded by ''': ,
"#include ""DaneUzytkownika.hh""

/*!
 *\file
 *\brief	Plik zawierający implementacje wszystkich metod klasy DaneUzytkownika oraz przeciążeń operatorów wejścia/wyjścia.
*/

DaneUzytkownika::DaneUzytkownika() {
	Login = """";
	Imie = """";
	Nazwisko = """";
	Dane = """";
	ID = 0;
	CzyNormalny = false;
}
			
bool DaneUzytkownika::getNorm() {
	return CzyNormalny;
}
		
void DaneUzytkownika::getDane(ostream & wyj) {
	wyj << Dane;
}
		
string DaneUzytkownika::getLogin() {
	return Login;
}
		
int DaneUzytkownika::getID() {
	return ID;
}

ostream & operator << (ostream & wyj, DaneUzytkownika & D) {
	wyj.width(8);
	wyj << D.Login << "" "";
	wyj.width(6);
	wyj << D.ID << "" "";
	wyj.width(10);
	wyj << D.Imie << "" "";
	wyj << D.Nazwisko << "" "";
	return wyj;
}

istream & operator >> (istream & wej,  DaneUzytkownika & D) {
	string pomoc;
	unsigned l, m;
	wej >> pomoc;
	if (wej.fail()) return wej;
	else {
		l = pomoc.length();
		m = pomoc.find("":"");
		D.Login = pomoc.substr(0,m);
		pomoc = pomoc.substr(m+3,l);
		m = pomoc.find("":"");
		D.ID = atoi(pomoc.c_str());
		pomoc = pomoc.substr(m+1,l);
		m = pomoc.find("":"");
		pomoc = pomoc.substr(m+1,l);
		D.Imie = pomoc.substr(0,l);
		if (D.Imie[0] >= 'A' && D.Imie[0] <= 'Z' && D.ID >= 1000) {
			D.CzyNormalny = true;
			wej >> pomoc;
			if (wej.fail()) return wej;
			else {	
				m = pomoc.find("","");
				if (m != string::npos) {
					D.Nazwisko = pomoc.substr(0,m);
					pomoc = pomoc.substr(m+1,l);
					m = pomoc.find("":"");
					D.Dane = pomoc.substr(0,m);
					if ((D.Dane).compare("",,"") == 0) D.Dane = """";
				}
				else {
					D.Nazwisko = """";
					D.Dane = """";
				}
				if (D.ID >= 1000 && D.Nazwisko != """") D.CzyNormalny = true;
				else D.CzyNormalny = false;
			}
		}
		else D.CzyNormalny = false;
	}
	return wej;
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#include', '""DaneUzytkownika.hh""', '/*!', '*\\file', '*\\brief', 'Plik', 'zawierający', 'implementacje', 'wszystkich', 'metod', 'klasy', 'DaneUzytkownika', 'oraz', 'przeciążeń', 'operatorów', 'wejścia/wyjścia.', '*/', 'DaneUzytkownika::DaneUzytkownika()', '{', 'Login', '=', '"""";', 'Imie', '=', '"""";', 'Nazwisko', '=', '"""";', 'Dane', '=', '"""";', 'ID', '=', '0;', 'CzyNormalny', '=', 'false;', '}', 'bool', 'DaneUzytkownika::getNorm()', '{', 'return', 'CzyNormalny;', '}', 'void', 'DaneUzytkownika::getDane(ostream', '&', 'wyj)', '{', 'wyj', '<<', 'Dane;', '}', 'string', 'DaneUzytkownika::getLogin()', '{', 'return', 'Login;', '}', 'int', 'DaneUzytkownika::getID()', '{', 'return', 'ID;', '}', 'ostream', '&', 'operator', '<<', '(ostream', '&', 'wyj,', 'DaneUzytkownika', '&', 'D)', '{', 'wyj.width(8);', 'wyj', '<<', 'D.Login', '<<', '""', '"";', 'wyj.width(6);', 'wyj', '<<', 'D.ID', '<<', '""', '"";', 'wyj.width(10);', 'wyj', '<<', 'D.Imie', '<<', '""', '"";', 'wyj', '<<', 'D.Nazwisko', '<<', '""', '"";', 'return', 'wyj;', '}', 'istream', '&', 'operator', '>>', '(istream', '&', 'wej,', 'DaneUzytkownika', '&', 'D)', '{', 'string', 'pomoc;', 'unsigned', 'l,', 'm;', 'wej', '>>', 'pomoc;', 'if', '(wej.fail())', 'return', 'wej;', 'else', '{', 'l', '=', 'pomoc.length();', 'm', '=', 'pomoc.find("":"");', 'D.Login', '=', 'pomoc.substr(0,m);', 'pomoc', '=', 'pomoc.substr(m+3,l);', 'm', '=', 'pomoc.find("":"");', 'D.ID', '=', 'atoi(pomoc.c_str());', 'pomoc', '=', 'pomoc.substr(m+1,l);', 'm', '=', 'pomoc.find("":"");', 'pomoc', '=', 'pomoc.substr(m+1,l);', 'D.Imie', '=', 'pomoc.substr(0,l);', 'if', '(D.Imie[0]', '>=', ""'A'"", '&&', 'D.Imie[0]', '<=', ""'Z'"", '&&', 'D.ID', '>=', '1000)', '{', 'D.CzyNormalny', '=', 'true;', 'wej', '>>', 'pomoc;', 'if', '(wej.fail())', 'return', 'wej;', 'else', '{', 'm', '=', 'pomoc.find("","");', 'if', '(m', '!=', 'string::npos)', '{', 'D.Nazwisko', '=', 'pomoc.substr(0,m);', 'pomoc', '=', 'pomoc.substr(m+1,l);', 'm', '=', 'pomoc.find("":"");', 'D.Dane', '=', 'pomoc.substr(0,m);', 'if', '((D.Dane).compare("",,"")', '==', '0)', 'D.Dane', '=', '"""";', '}', 'else', '{', 'D.Nazwisko', '=', '"""";', 'D.Dane', '=', '"""";', '}', 'if', '(D.ID', '>=', '1000', '&&', 'D.Nazwisko', '!=', '"""")', 'D.CzyNormalny', '=', 'true;', 'else', 'D.CzyNormalny', '=', 'false;', '}', '}', 'else', 'D.CzyNormalny', '=', 'false;', '}', 'return', 'wej;', '}', '```']",challenge not surrounded by ''': ,
"/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * ""License""); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package ai.angus.sdk.impl;

import java.net.URL;

import org.json.simple.JSONObject;

import ai.angus.sdk.Collection;
import ai.angus.sdk.Configuration;
import ai.angus.sdk.Resource;
import ai.angus.sdk.ResourceFactory;

public class CollectionFactoryImpl<T extends Resource> implements
        ResourceFactory<Collection<T>> {

    @Override
    public Collection<T> create(URL parent, String name, JSONObject content,
            Configuration conf) {
        return new CollectionImpl<T>(parent, name, content, conf);
    }

    @Override
    public Collection<T> create(URL parent, String name, Configuration conf) {
        return new CollectionImpl<T>(parent, name, conf);
    }

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Licensed', 'to', 'the', 'Apache', 'Software', 'Foundation', '(ASF)', 'under', 'one', '*', 'or', 'more', 'contributor', 'license', 'agreements.', 'See', 'the', 'NOTICE', 'file', '*', 'distributed', 'with', 'this', 'work', 'for', 'additional', 'information', '*', 'regarding', 'copyright', 'ownership.', 'The', 'ASF', 'licenses', 'this', 'file', '*', 'to', 'you', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '*', '""License"");', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', '*', 'with', 'the', 'License.', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', '*', 'software', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '*', '""AS', 'IS""', 'BASIS,', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', '*', 'KIND,', 'either', 'express', 'or', 'implied.', 'See', 'the', 'License', 'for', 'the', '*', 'specific', 'language', 'governing', 'permissions', 'and', 'limitations', '*', 'under', 'the', 'License.', '*/', 'package', 'ai.angus.sdk.impl;', 'import', 'java.net.URL;', 'import', 'org.json.simple.JSONObject;', 'import', 'ai.angus.sdk.Collection;', 'import', 'ai.angus.sdk.Configuration;', 'import', 'ai.angus.sdk.Resource;', 'import', 'ai.angus.sdk.ResourceFactory;', 'public', 'class', 'CollectionFactoryImpl<T', 'extends', 'Resource>', 'implements', 'ResourceFactory<Collection<T>>', '{', '@Override', 'public', 'Collection<T>', 'create(URL', 'parent,', 'String', 'name,', 'JSONObject', 'content,', 'Configuration', 'conf)', '{', 'return', 'new', 'CollectionImpl<T>(parent,', 'name,', 'content,', 'conf);', '}', '@Override', 'public', 'Collection<T>', 'create(URL', 'parent,', 'String', 'name,', 'Configuration', 'conf)', '{', 'return', 'new', 'CollectionImpl<T>(parent,', 'name,', 'conf);', '}', '}', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE html>
<html data-require=""math"" ""rational"">
<head>
  <title>Algorithm Analysis Exercise: Square Root 2</title>
  <script src=""../../lib/jquery.min.js""></script>
  <script src=""../../lib/jquery-ui.min.js""></script>
<script src=""../../ODSAkhan-exercises/khan-exercise.js""></script>
</head>

<body>
<div class=""exercise"">
  <div class=""problems"">
    <div id=""problem-type-or-description"">
      <p class=""question""> For what value of <code>k</code> is
	<code> \sqrt n = \Theta(n^k) </code>? </p>
      <p class=""solution"" data-type=""text""><var>0.5</var></p>
      <div class=""hints"">
	<p><code>\sqrt n = n^{0.5}</code></p>
      </div> 
    </div>
  </div>
</div>
</body>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'html>', '<html', 'data-require=""math""', '""rational"">', '<head>', '<title>Algorithm', 'Analysis', 'Exercise:', 'Square', 'Root', '2</title>', '<script', 'src=""../../lib/jquery.min.js""></script>', '<script', 'src=""../../lib/jquery-ui.min.js""></script>', '<script', 'src=""../../ODSAkhan-exercises/khan-exercise.js""></script>', '</head>', '<body>', '<div', 'class=""exercise"">', '<div', 'class=""problems"">', '<div', 'id=""problem-type-or-description"">', '<p', 'class=""question"">', 'For', 'what', 'value', 'of', '<code>k</code>', 'is', '<code>', '\\sqrt', 'n', '=', '\\Theta(n^k)', '</code>?', '</p>', '<p', 'class=""solution""', 'data-type=""text""><var>0.5</var></p>', '<div', 'class=""hints"">', '<p><code>\\sqrt', 'n', '=', 'n^{0.5}</code></p>', '</div>', '</div>', '</div>', '</div>', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"vannevar

`Prev <vanity-domain.html>`__ 

V

 `Next <vaporware.html>`__

--------------

**vannevar**: /van'@·var/, n.

A bogus technological prediction or a foredoomed engineering concept,
esp. one that fails by implicitly assuming that technologies develop
linearly, incrementally, and in isolation from one another when in fact
the learning curve tends to be highly nonlinear, revolutions are common,
and competition is the rule. The prototype was Vannevar Bush's
prediction of ‘electronic brains’ the size of the Empire State Building
with a Niagara-Falls-equivalent cooling system for their tubes and
relays, a prediction made at a time when the semiconductor effect had
already been demonstrated. Other famous vannevars have included
magnetic-bubble memory, LISP machines, `*videotex* <videotex.html>`__,
and a paper from the late 1970s that computed a purported ultimate limit
on areal density for ICs that was in fact less than the routine
densities of 5 years later.

--------------

+----------------------------------+----------------------------+------------------------------+
| `Prev <vanity-domain.html>`__    | `Up <../V.html>`__         |  `Next <vaporware.html>`__   |
+----------------------------------+----------------------------+------------------------------+
| vanity domain                    | `Home <../index.html>`__   |  vaporware                   |
+----------------------------------+----------------------------+------------------------------+

","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```vannevar', '`Prev', '<vanity-domain.html>`__', 'V', '`Next', '<vaporware.html>`__', '--------------', '**vannevar**:', ""/van'@·var/,"", 'n.', 'A', 'bogus', 'technological', 'prediction', 'or', 'a', 'foredoomed', 'engineering', 'concept,', 'esp.', 'one', 'that', 'fails', 'by', 'implicitly', 'assuming', 'that', 'technologies', 'develop', 'linearly,', 'incrementally,', 'and', 'in', 'isolation', 'from', 'one', 'another', 'when', 'in', 'fact', 'the', 'learning', 'curve', 'tends', 'to', 'be', 'highly', 'nonlinear,', 'revolutions', 'are', 'common,', 'and', 'competition', 'is', 'the', 'rule.', 'The', 'prototype', 'was', 'Vannevar', ""Bush's"", 'prediction', 'of', '‘electronic', 'brains’', 'the', 'size', 'of', 'the', 'Empire', 'State', 'Building', 'with', 'a', 'Niagara-Falls-equivalent', 'cooling', 'system', 'for', 'their', 'tubes', 'and', 'relays,', 'a', 'prediction', 'made', 'at', 'a', 'time', 'when', 'the', 'semiconductor', 'effect', 'had', 'already', 'been', 'demonstrated.', 'Other', 'famous', 'vannevars', 'have', 'included', 'magnetic-bubble', 'memory,', 'LISP', 'machines,', '`*videotex*', '<videotex.html>`__,', 'and', 'a', 'paper', 'from', 'the', 'late', '1970s', 'that', 'computed', 'a', 'purported', 'ultimate', 'limit', 'on', 'areal', 'density', 'for', 'ICs', 'that', 'was', 'in', 'fact', 'less', 'than', 'the', 'routine', 'densities', 'of', '5', 'years', 'later.', '--------------', '+----------------------------------+----------------------------+------------------------------+', '|', '`Prev', '<vanity-domain.html>`__', '|', '`Up', '<../V.html>`__', '|', '`Next', '<vaporware.html>`__', '|', '+----------------------------------+----------------------------+------------------------------+', '|', 'vanity', 'domain', '|', '`Home', '<../index.html>`__', '|', 'vaporware', '|', '+----------------------------------+----------------------------+------------------------------+', '```']",challenge not surrounded by ''': ,
"<?xml version=""1.0"" encoding=""UTF-8""?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  ""License""); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at
  
         http://www.apache.org/licenses/LICENSE-2.0
         
  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.
-->
<html xmlns:wicket=""http://wicket.apache.org"">
<wicket:panel>
    <div class=""aboutPanel aboutComponentType"">
        <h2 wicket:id=""applicationName"" class=""applicationName"">[application name]</h2>
        <h4 wicket:id=""applicationVersion"" class=""applicationVersion"">[application version]</h4>
        <p wicket:id=""aboutMessage"" class=""aboutMessage"">[about message]</p>
        <div wicket:id=""manifestAttributes""></div>
    </div>
</wicket:panel>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<?xml', 'version=""1.0""', 'encoding=""UTF-8""?>', '<!--', 'Licensed', 'to', 'the', 'Apache', 'Software', 'Foundation', '(ASF)', 'under', 'one', 'or', 'more', 'contributor', 'license', 'agreements.', 'See', 'the', 'NOTICE', 'file', 'distributed', 'with', 'this', 'work', 'for', 'additional', 'information', 'regarding', 'copyright', 'ownership.', 'The', 'ASF', 'licenses', 'this', 'file', 'to', 'you', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', 'http://www.apache.org/licenses/LICENSE-2.0', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', 'limitations', 'under', 'the', 'License.', '-->', '<html', 'xmlns:wicket=""http://wicket.apache.org"">', '<wicket:panel>', '<div', 'class=""aboutPanel', 'aboutComponentType"">', '<h2', 'wicket:id=""applicationName""', 'class=""applicationName"">[application', 'name]</h2>', '<h4', 'wicket:id=""applicationVersion""', 'class=""applicationVersion"">[application', 'version]</h4>', '<p', 'wicket:id=""aboutMessage""', 'class=""aboutMessage"">[about', 'message]</p>', '<div', 'wicket:id=""manifestAttributes""></div>', '</div>', '</wicket:panel>', '</html>', '```']",challenge not surrounded by ''': ,
"""""""
WSGI config for mcq project.

It exposes the WSGI callable as a module-level variable named ``application``.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/howto/deployment/wsgi/
""""""

import os

from django.core.wsgi import get_wsgi_application

os.environ.setdefault(""DJANGO_SETTINGS_MODULE"", ""mcq.settings"")

application = get_wsgi_application()
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```""""""', 'WSGI', 'config', 'for', 'mcq', 'project.', 'It', 'exposes', 'the', 'WSGI', 'callable', 'as', 'a', 'module-level', 'variable', 'named', '``application``.', 'For', 'more', 'information', 'on', 'this', 'file,', 'see', 'https://docs.djangoproject.com/en/1.9/howto/deployment/wsgi/', '""""""', 'import', 'os', 'from', 'django.core.wsgi', 'import', 'get_wsgi_application', 'os.environ.setdefault(""DJANGO_SETTINGS_MODULE"",', '""mcq.settings"")', 'application', '=', 'get_wsgi_application()', '```']",challenge not surrounded by ''': ,
"from django.contrib import admin

# Register your models here.
from msgvis.apps.groups import models
admin.site.register(models.Group)
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```from', 'django.contrib', 'import', 'admin', '#', 'Register', 'your', 'models', 'here.', 'from', 'msgvis.apps.groups', 'import', 'models', 'admin.site.register(models.Group)', '```']",challenge not surrounded by ''': ,
"/* (swing1.1.1) */
package jp.gr.java_conf.tame.swing.plaf;

import javax.swing.*;
import javax.swing.plaf.*;


/**
 * @version 1.0 09/08/99
 */
public class AssistantUIManager {

  public static ComponentUI createUI(JComponent c)  {
    String componentName   = c.getClass().getName();
    
    int index = componentName.lastIndexOf(""."") +1;
    StringBuffer sb = new StringBuffer();
    sb.append( componentName.substring(0, index) );
    
    //
    // UIManager.getLookAndFeel().getName()
    // 
    // [ Metal ] [  Motif  ] [   Mac   ] [ Windows ]
    //   Metal    CDE/Motif   Macintosh    Windows
    //
    
    String lookAndFeelName = UIManager.getLookAndFeel().getName();
    if (lookAndFeelName.startsWith(""CDE/"")) {
      lookAndFeelName = lookAndFeelName.substring(4,lookAndFeelName.length());
    }
    sb.append( lookAndFeelName );    
    sb.append( componentName.substring(index) );    
    sb.append( ""UI"" );    
    
    ComponentUI componentUI = getInstance(sb.toString());
    
    if (componentUI == null) {
      sb.setLength(0);
      sb.append( componentName.substring(0, index) );
      sb.append( ""Basic"");
      sb.append( componentName.substring(index) );
      sb.append( ""UI"" );      
      componentUI = getInstance(sb.toString());
    }
    
    return componentUI;
  }
  
  private static ComponentUI getInstance(String name) {
    try {
      return (ComponentUI)Class.forName(name).newInstance();
    } catch (ClassNotFoundException ex) {
    } catch (IllegalAccessException ex) {
      ex.printStackTrace();
    } catch (InstantiationException ex) {
      ex.printStackTrace();
    }
    return null;
  }

  
  public static void setUIName(JComponent c) {
    String key = c.getUIClassID();
    String uiClassName = (String)UIManager.get(key);
    
    if (uiClassName == null) {
      String componentName   = c.getClass().getName();    
      int index = componentName.lastIndexOf(""."") +1;
      StringBuffer sb = new StringBuffer();
      sb.append( componentName.substring(0, index) );    
      String lookAndFeelName = UIManager.getLookAndFeel().getName();
      if (lookAndFeelName.startsWith(""CDE/"")) {
        lookAndFeelName = lookAndFeelName.substring(4,lookAndFeelName.length());
      }
      sb.append( lookAndFeelName );    
      sb.append( key );    
      UIManager.put(key, sb.toString());      
    }       
  }
  

  public AssistantUIManager() {
  }
  
  
}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '(swing1.1.1)', '*/', 'package', 'jp.gr.java_conf.tame.swing.plaf;', 'import', 'javax.swing.*;', 'import', 'javax.swing.plaf.*;', '/**', '*', '@version', '1.0', '09/08/99', '*/', 'public', 'class', 'AssistantUIManager', '{', 'public', 'static', 'ComponentUI', 'createUI(JComponent', 'c)', '{', 'String', 'componentName', '=', 'c.getClass().getName();', 'int', 'index', '=', 'componentName.lastIndexOf(""."")', '+1;', 'StringBuffer', 'sb', '=', 'new', 'StringBuffer();', 'sb.append(', 'componentName.substring(0,', 'index)', ');', '//', '//', 'UIManager.getLookAndFeel().getName()', '//', '//', '[', 'Metal', ']', '[', 'Motif', ']', '[', 'Mac', ']', '[', 'Windows', ']', '//', 'Metal', 'CDE/Motif', 'Macintosh', 'Windows', '//', 'String', 'lookAndFeelName', '=', 'UIManager.getLookAndFeel().getName();', 'if', '(lookAndFeelName.startsWith(""CDE/""))', '{', 'lookAndFeelName', '=', 'lookAndFeelName.substring(4,lookAndFeelName.length());', '}', 'sb.append(', 'lookAndFeelName', ');', 'sb.append(', 'componentName.substring(index)', ');', 'sb.append(', '""UI""', ');', 'ComponentUI', 'componentUI', '=', 'getInstance(sb.toString());', 'if', '(componentUI', '==', 'null)', '{', 'sb.setLength(0);', 'sb.append(', 'componentName.substring(0,', 'index)', ');', 'sb.append(', '""Basic"");', 'sb.append(', 'componentName.substring(index)', ');', 'sb.append(', '""UI""', ');', 'componentUI', '=', 'getInstance(sb.toString());', '}', 'return', 'componentUI;', '}', 'private', 'static', 'ComponentUI', 'getInstance(String', 'name)', '{', 'try', '{', 'return', '(ComponentUI)Class.forName(name).newInstance();', '}', 'catch', '(ClassNotFoundException', 'ex)', '{', '}', 'catch', '(IllegalAccessException', 'ex)', '{', 'ex.printStackTrace();', '}', 'catch', '(InstantiationException', 'ex)', '{', 'ex.printStackTrace();', '}', 'return', 'null;', '}', 'public', 'static', 'void', 'setUIName(JComponent', 'c)', '{', 'String', 'key', '=', 'c.getUIClassID();', 'String', 'uiClassName', '=', '(String)UIManager.get(key);', 'if', '(uiClassName', '==', 'null)', '{', 'String', 'componentName', '=', 'c.getClass().getName();', 'int', 'index', '=', 'componentName.lastIndexOf(""."")', '+1;', 'StringBuffer', 'sb', '=', 'new', 'StringBuffer();', 'sb.append(', 'componentName.substring(0,', 'index)', ');', 'String', 'lookAndFeelName', '=', 'UIManager.getLookAndFeel().getName();', 'if', '(lookAndFeelName.startsWith(""CDE/""))', '{', 'lookAndFeelName', '=', 'lookAndFeelName.substring(4,lookAndFeelName.length());', '}', 'sb.append(', 'lookAndFeelName', ');', 'sb.append(', 'key', ');', 'UIManager.put(key,', 'sb.toString());', '}', '}', 'public', 'AssistantUIManager()', '{', '}', '}```']",challenge not surrounded by ''': ,
"var=$1
#pandoc About.md -o about.html
#pandoc instructions.md -o instructions.html
javac -d . -cp  ':lib/*' src/*.java

if [ ""$var"" == ""jar"" ]; then
  jar -cvfm autodoc-v1.6.jar MANIFEST.MF -C bin bin/* gov/ html/instructions.html img/jpl_logo.png html/about.html
  rm -rf gov
fi
#rm instructions.html
#rm about.html
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```var=$1', '#pandoc', 'About.md', '-o', 'about.html', '#pandoc', 'instructions.md', '-o', 'instructions.html', 'javac', '-d', '.', '-cp', ""':lib/*'"", 'src/*.java', 'if', '[', '""$var""', '==', '""jar""', '];', 'then', 'jar', '-cvfm', 'autodoc-v1.6.jar', 'MANIFEST.MF', '-C', 'bin', 'bin/*', 'gov/', 'html/instructions.html', 'img/jpl_logo.png', 'html/about.html', 'rm', '-rf', 'gov', 'fi', '#rm', 'instructions.html', '#rm', 'about.html', '```']",challenge not surrounded by ''': ,
"'use strict';
import * as _ from 'lodash';

export function BandSearchQuery(bandName) {
  this._bandName = bandName;
}

BandSearchQuery.QUERY_STRING =
  ""select * from json where url = 'http://www.metal-archives.com/search/ajax-advanced/searching/bands/?bandName={bandName}&exactBandMatch=1'"";

_.extend(BandSearchQuery.prototype, {
  build: function() {
    return {
      q: BandSearchQuery.QUERY_STRING.replace(/{bandName}/gi, encodeURIComponent(this._bandName)),
      format: 'json'
    };
  }
});
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', ""```'use"", ""strict';"", 'import', '*', 'as', '_', 'from', ""'lodash';"", 'export', 'function', 'BandSearchQuery(bandName)', '{', 'this._bandName', '=', 'bandName;', '}', 'BandSearchQuery.QUERY_STRING', '=', '""select', '*', 'from', 'json', 'where', 'url', '=', '\'http://www.metal-archives.com/search/ajax-advanced/searching/bands/?bandName={bandName}&exactBandMatch=1\'"";', '_.extend(BandSearchQuery.prototype,', '{', 'build:', 'function()', '{', 'return', '{', 'q:', 'BandSearchQuery.QUERY_STRING.replace(/{bandName}/gi,', 'encodeURIComponent(this._bandName)),', 'format:', ""'json'"", '};', '}', '});', '```']",challenge not surrounded by ''': ,
"/**
 *  \file
 *  Copyright (C) 2006-2010 Jedox AG
 *
 *  This program is free software; you can redistribute it and/or modify it
 *  under the terms of the GNU General Public License (Version 2) as published
 *  by the Free Software Foundation at http://www.gnu.org/copyleft/gpl.html.
 *
 *  This program is distributed in the hope that it will be useful, but WITHOUT
 *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 *  more details.
 *
 *  You should have received a copy of the GNU General Public License along with
 *  this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 *  Place, Suite 330, Boston, MA 02111-1307 USA
 *
 *  You may obtain a copy of the License at
 *
 *  <a href=""http://www.jedox.com/license_palo_bi_suite.txt"">
 *    http://www.jedox.com/license_palo_bi_suite.txt
 *  </a>
 *
 *  If you are developing and distributing open source applications under the
 *  GPL License, then you are free to use Worksheetserver under the GPL License.
 *  For OEMs, ISVs, and VARs who distribute Worksheetserver with their products,
 *  and do not license and distribute their source code under the GPL, Jedox provides
 *  a flexible OEM Commercial License.
 *
 *  \author
 *  Florian Schaper <florian.schaper@jedox.com>
 */

#pragma once

#include <wss/define.hpp>
#include <wss/base_command.hpp>
#include <wss/session.hpp>
#include <wss/type.hpp>
#include <wss/clipboard.hpp>

/*!
 * \brief
 * move range command.
 *
 * \author
 * Florian Schaper <florian.schaper@jedox.com>
 */
class WSS_MODULE move_range_command
    : public base_command<i_command>
{
public:
    typedef clipboard::clipboard_id_type result_type;

    move_range_command( session& s, const sheet_range& p );

    virtual void execute();

    result_type value() const;

    DECLARE_CLONEABLE( move_range_command );

private:
    sheet_range m_position;
    result_type m_clipboard_id;
};

","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', '\\file', '*', 'Copyright', '(C)', '2006-2010', 'Jedox', 'AG', '*', '*', 'This', 'program', 'is', 'free', 'software;', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', 'it', '*', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'General', 'Public', 'License', '(Version', '2)', 'as', 'published', '*', 'by', 'the', 'Free', 'Software', 'Foundation', 'at', 'http://www.gnu.org/copyleft/gpl.html.', '*', '*', 'This', 'program', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', 'but', 'WITHOUT', '*', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', 'MERCHANTABILITY', 'or', '*', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', 'GNU', 'General', 'Public', 'License', 'for', '*', 'more', 'details.', '*', '*', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'along', 'with', '*', 'this', 'program;', 'if', 'not,', 'write', 'to', 'the', 'Free', 'Software', 'Foundation,', 'Inc.,', '59', 'Temple', '*', 'Place,', 'Suite', '330,', 'Boston,', 'MA', '02111-1307', 'USA', '*', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', '<a', 'href=""http://www.jedox.com/license_palo_bi_suite.txt"">', '*', 'http://www.jedox.com/license_palo_bi_suite.txt', '*', '</a>', '*', '*', 'If', 'you', 'are', 'developing', 'and', 'distributing', 'open', 'source', 'applications', 'under', 'the', '*', 'GPL', 'License,', 'then', 'you', 'are', 'free', 'to', 'use', 'Worksheetserver', 'under', 'the', 'GPL', 'License.', '*', 'For', 'OEMs,', 'ISVs,', 'and', 'VARs', 'who', 'distribute', 'Worksheetserver', 'with', 'their', 'products,', '*', 'and', 'do', 'not', 'license', 'and', 'distribute', 'their', 'source', 'code', 'under', 'the', 'GPL,', 'Jedox', 'provides', '*', 'a', 'flexible', 'OEM', 'Commercial', 'License.', '*', '*', '\\author', '*', 'Florian', 'Schaper', '<florian.schaper@jedox.com>', '*/', '#pragma', 'once', '#include', '<wss/define.hpp>', '#include', '<wss/base_command.hpp>', '#include', '<wss/session.hpp>', '#include', '<wss/type.hpp>', '#include', '<wss/clipboard.hpp>', '/*!', '*', '\\brief', '*', 'move', 'range', 'command.', '*', '*', '\\author', '*', 'Florian', 'Schaper', '<florian.schaper@jedox.com>', '*/', 'class', 'WSS_MODULE', 'move_range_command', ':', 'public', 'base_command<i_command>', '{', 'public:', 'typedef', 'clipboard::clipboard_id_type', 'result_type;', 'move_range_command(', 'session&', 's,', 'const', 'sheet_range&', 'p', ');', 'virtual', 'void', 'execute();', 'result_type', 'value()', 'const;', 'DECLARE_CLONEABLE(', 'move_range_command', ');', 'private:', 'sheet_range', 'm_position;', 'result_type', 'm_clipboard_id;', '};', '```']",challenge not surrounded by ''': ,
"## 
## Copyright(c) 2009 Syntext, Inc. All Rights Reserved.
## Contact: info@syntext.com, http://www.syntext.com
## 
## This file is part of Syntext Serna XML Editor.
## 
## COMMERCIAL USAGE
## Licensees holding valid Syntext Serna commercial licenses may use this file
## in accordance with the Syntext Serna Commercial License Agreement provided
## with the software, or, alternatively, in accorance with the terms contained
## in a written agreement between you and Syntext, Inc.
## 
## GNU GENERAL PUBLIC LICENSE USAGE
## Alternatively, this file may be used under the terms of the GNU General 
## Public License versions 2.0 or 3.0 as published by the Free Software 
## Foundation and appearing in the file LICENSE.GPL included in the packaging 
## of this file. In addition, as a special exception, Syntext, Inc. gives you
## certain additional rights, which are described in the Syntext, Inc. GPL 
## Exception for Syntext Serna Free Edition, included in the file 
## GPL_EXCEPTION.txt in this package.
## 
## You should have received a copy of appropriate licenses along with this 
## package. If not, see <http://www.syntext.com/legal/>. If you are unsure
## which license is appropriate for your use, please contact the sales 
## department at sales@syntext.com.
## 
## This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
## WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
## 
import os, re
from utils import dump_ptree
from PropertyNode import PropertyNode

__all__ = ['SernaConfig']

class Resolver(object):
    def __init__(self, props):
        self._props = props

    def __call__(self, mobj):
        vg = mobj.group(""varref"")
        if vg:
            if not self._props is None and self._props.firstChild():
                prop = self._props.getProperty(vg[1:])
                if prop:
                    return unicode(prop.getString())
            return unicode(os.environ.get(vg[1:], ''))

class SernaConfig(object):
    _root = PropertyNode()

    @staticmethod
    def resolveResource(propName, resPath, baseUri, localVars=None):
        resolver = Resolver(localVars)
        nsubs = 1
        while nsubs:
            resPath, nsubs = re.subn(r'(?P<varref>\$SERNA_[A-Z0-9_]+)',
                                     resolver, resPath)
        if not os.path.isabs(resPath):
            baseDir = os.path.dirname(baseUri)
            return baseDir + '/' + resPath

        return unicode(resPath)

    @staticmethod
    def init(**kwargs):
        for name, value in kwargs.iteritems():
            SernaConfig._root.makeDescendant(name, unicode(value))

    @staticmethod
    def getProperty(name):
        return SernaConfig._root.getProperty(name).getString()
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```##', '##', 'Copyright(c)', '2009', 'Syntext,', 'Inc.', 'All', 'Rights', 'Reserved.', '##', 'Contact:', 'info@syntext.com,', 'http://www.syntext.com', '##', '##', 'This', 'file', 'is', 'part', 'of', 'Syntext', 'Serna', 'XML', 'Editor.', '##', '##', 'COMMERCIAL', 'USAGE', '##', 'Licensees', 'holding', 'valid', 'Syntext', 'Serna', 'commercial', 'licenses', 'may', 'use', 'this', 'file', '##', 'in', 'accordance', 'with', 'the', 'Syntext', 'Serna', 'Commercial', 'License', 'Agreement', 'provided', '##', 'with', 'the', 'software,', 'or,', 'alternatively,', 'in', 'accorance', 'with', 'the', 'terms', 'contained', '##', 'in', 'a', 'written', 'agreement', 'between', 'you', 'and', 'Syntext,', 'Inc.', '##', '##', 'GNU', 'GENERAL', 'PUBLIC', 'LICENSE', 'USAGE', '##', 'Alternatively,', 'this', 'file', 'may', 'be', 'used', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'General', '##', 'Public', 'License', 'versions', '2.0', 'or', '3.0', 'as', 'published', 'by', 'the', 'Free', 'Software', '##', 'Foundation', 'and', 'appearing', 'in', 'the', 'file', 'LICENSE.GPL', 'included', 'in', 'the', 'packaging', '##', 'of', 'this', 'file.', 'In', 'addition,', 'as', 'a', 'special', 'exception,', 'Syntext,', 'Inc.', 'gives', 'you', '##', 'certain', 'additional', 'rights,', 'which', 'are', 'described', 'in', 'the', 'Syntext,', 'Inc.', 'GPL', '##', 'Exception', 'for', 'Syntext', 'Serna', 'Free', 'Edition,', 'included', 'in', 'the', 'file', '##', 'GPL_EXCEPTION.txt', 'in', 'this', 'package.', '##', '##', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'appropriate', 'licenses', 'along', 'with', 'this', '##', 'package.', 'If', 'not,', 'see', '<http://www.syntext.com/legal/>.', 'If', 'you', 'are', 'unsure', '##', 'which', 'license', 'is', 'appropriate', 'for', 'your', 'use,', 'please', 'contact', 'the', 'sales', '##', 'department', 'at', 'sales@syntext.com.', '##', '##', 'This', 'file', 'is', 'provided', 'AS', 'IS', 'with', 'NO', 'WARRANTY', 'OF', 'ANY', 'KIND,', 'INCLUDING', 'THE', '##', 'WARRANTY', 'OF', 'DESIGN,', 'MERCHANTABILITY', 'AND', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', '##', 'import', 'os,', 're', 'from', 'utils', 'import', 'dump_ptree', 'from', 'PropertyNode', 'import', 'PropertyNode', '__all__', '=', ""['SernaConfig']"", 'class', 'Resolver(object):', 'def', '__init__(self,', 'props):', 'self._props', '=', 'props', 'def', '__call__(self,', 'mobj):', 'vg', '=', 'mobj.group(""varref"")', 'if', 'vg:', 'if', 'not', 'self._props', 'is', 'None', 'and', 'self._props.firstChild():', 'prop', '=', 'self._props.getProperty(vg[1:])', 'if', 'prop:', 'return', 'unicode(prop.getString())', 'return', 'unicode(os.environ.get(vg[1:],', ""''))"", 'class', 'SernaConfig(object):', '_root', '=', 'PropertyNode()', '@staticmethod', 'def', 'resolveResource(propName,', 'resPath,', 'baseUri,', 'localVars=None):', 'resolver', '=', 'Resolver(localVars)', 'nsubs', '=', '1', 'while', 'nsubs:', 'resPath,', 'nsubs', '=', ""re.subn(r'(?P<varref>\\$SERNA_[A-Z0-9_]+)',"", 'resolver,', 'resPath)', 'if', 'not', 'os.path.isabs(resPath):', 'baseDir', '=', 'os.path.dirname(baseUri)', 'return', 'baseDir', '+', ""'/'"", '+', 'resPath', 'return', 'unicode(resPath)', '@staticmethod', 'def', 'init(**kwargs):', 'for', 'name,', 'value', 'in', 'kwargs.iteritems():', 'SernaConfig._root.makeDescendant(name,', 'unicode(value))', '@staticmethod', 'def', 'getProperty(name):', 'return', 'SernaConfig._root.getProperty(name).getString()', '```']",challenge not surrounded by ''': ,
"import socket
import os
import subprocess
from subprocess import Popen, PIPE, STDOUT
import time
import RPi.GPIO as GPIO

GPIO.setmode(GPIO.BCM)
GPIO.setup(4,GPIO.IN)

while True:
	if GPIO.input(4)== 1:
		#empty quote
		open('clay1.txt', 'w').close()
		# timer triggers webcam to take image
		os.system('fswebcam --no-banner -S 20 claycam.jpg')
		# send image
		s = socket.socket()
		host = ""TO DO: fill in external ip of remote server""
		port = 12345
		s.connect((host, port))
		time.sleep (2)
		f=open (""claycam.jpg"", ""rb"") 
		l = f.read(4096)
		while (l):
      			s.send(l)
     			l = f.read(4096)
		s.send(""end"")
		time.sleep(2)
		print ""image sent""   
		s.close()                # Close the connection

    		# wait for densecap & torch-rnn to write quote
		print ""done""
		time.sleep(6)
		s = socket.socket()
		host = ""TO DO: fill in external ip of remote server""
		port = 12345
                
		s.connect((host, port))
		l = s.recv(1024)
		clay = open(""clay1.txt"", ""w"")
		clay.write(l)
		clay.close()			
		s.send(""file received"")
		s.close()
		
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'socket', 'import', 'os', 'import', 'subprocess', 'from', 'subprocess', 'import', 'Popen,', 'PIPE,', 'STDOUT', 'import', 'time', 'import', 'RPi.GPIO', 'as', 'GPIO', 'GPIO.setmode(GPIO.BCM)', 'GPIO.setup(4,GPIO.IN)', 'while', 'True:', 'if', 'GPIO.input(4)==', '1:', '#empty', 'quote', ""open('clay1.txt',"", ""'w').close()"", '#', 'timer', 'triggers', 'webcam', 'to', 'take', 'image', ""os.system('fswebcam"", '--no-banner', '-S', '20', ""claycam.jpg')"", '#', 'send', 'image', 's', '=', 'socket.socket()', 'host', '=', '""TO', 'DO:', 'fill', 'in', 'external', 'ip', 'of', 'remote', 'server""', 'port', '=', '12345', 's.connect((host,', 'port))', 'time.sleep', '(2)', 'f=open', '(""claycam.jpg"",', '""rb"")', 'l', '=', 'f.read(4096)', 'while', '(l):', 's.send(l)', 'l', '=', 'f.read(4096)', 's.send(""end"")', 'time.sleep(2)', 'print', '""image', 'sent""', 's.close()', '#', 'Close', 'the', 'connection', '#', 'wait', 'for', 'densecap', '&', 'torch-rnn', 'to', 'write', 'quote', 'print', '""done""', 'time.sleep(6)', 's', '=', 'socket.socket()', 'host', '=', '""TO', 'DO:', 'fill', 'in', 'external', 'ip', 'of', 'remote', 'server""', 'port', '=', '12345', 's.connect((host,', 'port))', 'l', '=', 's.recv(1024)', 'clay', '=', 'open(""clay1.txt"",', '""w"")', 'clay.write(l)', 'clay.close()', 's.send(""file', 'received"")', 's.close()', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE html> 
<html>

<!-- Mirrored from www.w3schools.com/tags/tryhtml5_av_prop_seeking.htm by HTTrack Website Copier/3.x [XR&CO'2014], Fri, 23 Jan 2015 08:35:40 GMT -->
<body>

<video id=""myVideo"" controls onseeking=""myFunction()"" onseeked=""myFunction()"">
  <source src=""mov_bbb.mp4"" type=""video/mp4"">
  <source src=""mov_bbb.ogg"" type=""video/ogg"">
  Your browser does not support HTML5 video.
</video>

<p>Try seeking in the video: <span id=""mySpan""></span></p>
<p>Video courtesy of <a href=""http://www.bigbuckbunny.org/"" target=""_blank"">Big Buck Bunny</a>.</p>

<script>
function myFunction() { 
    var vid = document.getElementById(""myVideo"");
    document.getElementById(""mySpan"").innerHTML = ""Seeking: "" + vid.seeking;
} 
</script>

</body> 

<!-- Mirrored from www.w3schools.com/tags/tryhtml5_av_prop_seeking.htm by HTTrack Website Copier/3.x [XR&CO'2014], Fri, 23 Jan 2015 08:35:40 GMT -->
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'html>', '<html>', '<!--', 'Mirrored', 'from', 'www.w3schools.com/tags/tryhtml5_av_prop_seeking.htm', 'by', 'HTTrack', 'Website', 'Copier/3.x', ""[XR&CO'2014],"", 'Fri,', '23', 'Jan', '2015', '08:35:40', 'GMT', '-->', '<body>', '<video', 'id=""myVideo""', 'controls', 'onseeking=""myFunction()""', 'onseeked=""myFunction()"">', '<source', 'src=""mov_bbb.mp4""', 'type=""video/mp4"">', '<source', 'src=""mov_bbb.ogg""', 'type=""video/ogg"">', 'Your', 'browser', 'does', 'not', 'support', 'HTML5', 'video.', '</video>', '<p>Try', 'seeking', 'in', 'the', 'video:', '<span', 'id=""mySpan""></span></p>', '<p>Video', 'courtesy', 'of', '<a', 'href=""http://www.bigbuckbunny.org/""', 'target=""_blank"">Big', 'Buck', 'Bunny</a>.</p>', '<script>', 'function', 'myFunction()', '{', 'var', 'vid', '=', 'document.getElementById(""myVideo"");', 'document.getElementById(""mySpan"").innerHTML', '=', '""Seeking:', '""', '+', 'vid.seeking;', '}', '</script>', '</body>', '<!--', 'Mirrored', 'from', 'www.w3schools.com/tags/tryhtml5_av_prop_seeking.htm', 'by', 'HTTrack', 'Website', 'Copier/3.x', ""[XR&CO'2014],"", 'Fri,', '23', 'Jan', '2015', '08:35:40', 'GMT', '-->', '</html>', '```']",challenge not surrounded by ''': ,
"package com.bupt.unicom.app.ui;

import android.app.Activity;
import android.support.v7.app.ActionBarActivity;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import com.bupt.unicom.app.R;

public class cookAcitvity extends Activity{

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_cook_acitvity);
    }


    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.cook_acitvity, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();
        if (id == R.id.action_settings) {
            return true;
        }
        return super.onOptionsItemSelected(item);
    }

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.bupt.unicom.app.ui;', 'import', 'android.app.Activity;', 'import', 'android.support.v7.app.ActionBarActivity;', 'import', 'android.os.Bundle;', 'import', 'android.view.Menu;', 'import', 'android.view.MenuItem;', 'import', 'com.bupt.unicom.app.R;', 'public', 'class', 'cookAcitvity', 'extends', 'Activity{', '@Override', 'protected', 'void', 'onCreate(Bundle', 'savedInstanceState)', '{', 'super.onCreate(savedInstanceState);', 'setContentView(R.layout.activity_cook_acitvity);', '}', '@Override', 'public', 'boolean', 'onCreateOptionsMenu(Menu', 'menu)', '{', '//', 'Inflate', 'the', 'menu;', 'this', 'adds', 'items', 'to', 'the', 'action', 'bar', 'if', 'it', 'is', 'present.', 'getMenuInflater().inflate(R.menu.cook_acitvity,', 'menu);', 'return', 'true;', '}', '@Override', 'public', 'boolean', 'onOptionsItemSelected(MenuItem', 'item)', '{', '//', 'Handle', 'action', 'bar', 'item', 'clicks', 'here.', 'The', 'action', 'bar', 'will', '//', 'automatically', 'handle', 'clicks', 'on', 'the', 'Home/Up', 'button,', 'so', 'long', '//', 'as', 'you', 'specify', 'a', 'parent', 'activity', 'in', 'AndroidManifest.xml.', 'int', 'id', '=', 'item.getItemId();', 'if', '(id', '==', 'R.id.action_settings)', '{', 'return', 'true;', '}', 'return', 'super.onOptionsItemSelected(item);', '}', '}', '```']",challenge not surrounded by ''': ,
"from django.http import HttpResponse

def hide_popup(request):
    """"""Store the information to hide the popup in the session.""""""
    popup = request.POST.get(""popup"", None)
    if popup is None:
        return HttpResponse(""0"")
    request.session[""popups_"" + popup] = False
    return HttpResponse(""1"")
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```from', 'django.http', 'import', 'HttpResponse', 'def', 'hide_popup(request):', '""""""Store', 'the', 'information', 'to', 'hide', 'the', 'popup', 'in', 'the', 'session.""""""', 'popup', '=', 'request.POST.get(""popup"",', 'None)', 'if', 'popup', 'is', 'None:', 'return', 'HttpResponse(""0"")', 'request.session[""popups_""', '+', 'popup]', '=', 'False', 'return', 'HttpResponse(""1"")', '```']",challenge not surrounded by ''': ,
"/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package event;

import sensor.GRTXBoxJoystick;

/**
 *
 * @author student
 */
public class XboxJoystickEvent {

    public static final int DEFAULT = 0;
    private GRTXBoxJoystick source;
    private int id;
    private double value;

    public XboxJoystickEvent(GRTXBoxJoystick source, int id, double value) {
        this.source = source;
        this.id = id;
        this.value = value;
    }

    public int getId() {
        return id;
    }

    public GRTXBoxJoystick getSource() {
        return source;
    }

    public double getValue() {
        return value;
    }
}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'To', 'change', 'this', 'template,', 'choose', 'Tools', '|', 'Templates', '*', 'and', 'open', 'the', 'template', 'in', 'the', 'editor.', '*/', 'package', 'event;', 'import', 'sensor.GRTXBoxJoystick;', '/**', '*', '*', '@author', 'student', '*/', 'public', 'class', 'XboxJoystickEvent', '{', 'public', 'static', 'final', 'int', 'DEFAULT', '=', '0;', 'private', 'GRTXBoxJoystick', 'source;', 'private', 'int', 'id;', 'private', 'double', 'value;', 'public', 'XboxJoystickEvent(GRTXBoxJoystick', 'source,', 'int', 'id,', 'double', 'value)', '{', 'this.source', '=', 'source;', 'this.id', '=', 'id;', 'this.value', '=', 'value;', '}', 'public', 'int', 'getId()', '{', 'return', 'id;', '}', 'public', 'GRTXBoxJoystick', 'getSource()', '{', 'return', 'source;', '}', 'public', 'double', 'getValue()', '{', 'return', 'value;', '}', '}```']",challenge not surrounded by ''': ,
"(function (angular) {
    'use strict';

    angular.module('app', [
        'ui.router',
        'ngMessages',
        'ngMap',
        'ngAnimate'
    ])
    .config(config);

    config.$inject = ['$urlRouterProvider'];
    function config($urlRouterProvider) {
        $urlRouterProvider.otherwise('/home');
    }

})(angular);
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```(function', '(angular)', '{', ""'use"", ""strict';"", ""angular.module('app',"", '[', ""'ui.router',"", ""'ngMessages',"", ""'ngMap',"", ""'ngAnimate'"", '])', '.config(config);', 'config.$inject', '=', ""['$urlRouterProvider'];"", 'function', 'config($urlRouterProvider)', '{', ""$urlRouterProvider.otherwise('/home');"", '}', '})(angular);', '```']",challenge not surrounded by ''': ,
"from inei.enssec.models import TotalDigitacionConsulado

__author__ = 'holivares'

from django.conf.urls import patterns, url
from inei.enssec.views import (IndexView, CuestionarioView, SignOut, TotalDigitacionListView, TotalDigitacionConsuladoListView,
                               ResumenDigitacionListView, AdminView, CuestionarioDetailView, CuestionarioAjaxView)

urlpatterns = patterns('',
                       url(r'^$', IndexView.as_view(), name='index'),
                       url(r'^cuestionario/$', CuestionarioView.as_view(), name='cuestionario1'),
                       url(r'^cuestionario/(?P<pk>\d+)/$', CuestionarioDetailView.as_view(), name='cuestionario-view'),
                       url(r'^cuestionario/ajax/$', CuestionarioAjaxView.as_view(), name='cuestionario-ajax'),
                       url(r'^cuestionario/admin/$', AdminView.as_view(), name='cuestionario-admin'),
                       url(r'^cuestionario/total/$', TotalDigitacionListView.as_view(), name='cuestionario-total'),
                       url(r'^cuestionario/resumen/$', ResumenDigitacionListView.as_view(), name='cuestionario-resumen'),
                       url(r'^cuestionario/total/consulado/$', TotalDigitacionConsuladoListView.as_view(),
                           name='cuestionario-total-consulado'),
                       url(r'^logout/$', SignOut.as_view(), name='logout'),
)","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```from', 'inei.enssec.models', 'import', 'TotalDigitacionConsulado', '__author__', '=', ""'holivares'"", 'from', 'django.conf.urls', 'import', 'patterns,', 'url', 'from', 'inei.enssec.views', 'import', '(IndexView,', 'CuestionarioView,', 'SignOut,', 'TotalDigitacionListView,', 'TotalDigitacionConsuladoListView,', 'ResumenDigitacionListView,', 'AdminView,', 'CuestionarioDetailView,', 'CuestionarioAjaxView)', 'urlpatterns', '=', ""patterns('',"", ""url(r'^$',"", 'IndexView.as_view(),', ""name='index'),"", ""url(r'^cuestionario/$',"", 'CuestionarioView.as_view(),', ""name='cuestionario1'),"", ""url(r'^cuestionario/(?P<pk>\\d+)/$',"", 'CuestionarioDetailView.as_view(),', ""name='cuestionario-view'),"", ""url(r'^cuestionario/ajax/$',"", 'CuestionarioAjaxView.as_view(),', ""name='cuestionario-ajax'),"", ""url(r'^cuestionario/admin/$',"", 'AdminView.as_view(),', ""name='cuestionario-admin'),"", ""url(r'^cuestionario/total/$',"", 'TotalDigitacionListView.as_view(),', ""name='cuestionario-total'),"", ""url(r'^cuestionario/resumen/$',"", 'ResumenDigitacionListView.as_view(),', ""name='cuestionario-resumen'),"", ""url(r'^cuestionario/total/consulado/$',"", 'TotalDigitacionConsuladoListView.as_view(),', ""name='cuestionario-total-consulado'),"", ""url(r'^logout/$',"", 'SignOut.as_view(),', ""name='logout'),"", ')```']",challenge not surrounded by ''': ,
"/**
 * @fileoverview Tests for no-constructor-return rule.
 * @author Pig Fang <https://github.com/g-plane>
 */

""use strict"";

//------------------------------------------------------------------------------
// Requirements
//------------------------------------------------------------------------------

const rule = require(""../../../lib/rules/no-constructor-return""),
    { RuleTester } = require(""../../../lib/rule-tester"");

//------------------------------------------------------------------------------
// Tests
//------------------------------------------------------------------------------

const ruleTester = new RuleTester({ parserOptions: { ecmaVersion: 2015 } });

const errors = [{ type: ""ReturnStatement"", messageId: ""unexpected"" }];

ruleTester.run(""no-constructor-return"", rule, {
    valid: [
        ""function fn() { return }"",
        ""function fn(kumiko) { if (kumiko) { return kumiko } }"",
        ""const fn = function () { return }"",
        ""const fn = function () { if (kumiko) { return kumiko } }"",
        ""const fn = () => { return }"",
        ""const fn = () => { if (kumiko) { return kumiko } }"",
        {
            code: ""return 'Kumiko Oumae'"",
            parserOptions: { ecmaFeatures: { globalReturn: true } }
        },

        ""class C {  }"",
        ""class C { constructor() {} }"",
        ""class C { constructor() { let v } }"",
        ""class C { method() { return '' } }"",
        ""class C { get value() { return '' } }"",
        ""class C { constructor(a) { if (!a) { return } else { a() } } }"",
        ""class C { constructor() { function fn() { return true } } }"",
        ""class C { constructor() { this.fn = function () { return true } } }"",
        ""class C { constructor() { this.fn = () => { return true } } }""
    ],
    invalid: [
        {
            code: ""class C { constructor() { return } }"",
            errors
        },
        {
            code: ""class C { constructor() { return '' } }"",
            errors
        },
        {
            code: ""class C { constructor(a) { if (!a) { return '' } else { a() } } }"",
            errors
        }
    ]
});
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', '@fileoverview', 'Tests', 'for', 'no-constructor-return', 'rule.', '*', '@author', 'Pig', 'Fang', '<https://github.com/g-plane>', '*/', '""use', 'strict"";', '//------------------------------------------------------------------------------', '//', 'Requirements', '//------------------------------------------------------------------------------', 'const', 'rule', '=', 'require(""../../../lib/rules/no-constructor-return""),', '{', 'RuleTester', '}', '=', 'require(""../../../lib/rule-tester"");', '//------------------------------------------------------------------------------', '//', 'Tests', '//------------------------------------------------------------------------------', 'const', 'ruleTester', '=', 'new', 'RuleTester({', 'parserOptions:', '{', 'ecmaVersion:', '2015', '}', '});', 'const', 'errors', '=', '[{', 'type:', '""ReturnStatement"",', 'messageId:', '""unexpected""', '}];', 'ruleTester.run(""no-constructor-return"",', 'rule,', '{', 'valid:', '[', '""function', 'fn()', '{', 'return', '}"",', '""function', 'fn(kumiko)', '{', 'if', '(kumiko)', '{', 'return', 'kumiko', '}', '}"",', '""const', 'fn', '=', 'function', '()', '{', 'return', '}"",', '""const', 'fn', '=', 'function', '()', '{', 'if', '(kumiko)', '{', 'return', 'kumiko', '}', '}"",', '""const', 'fn', '=', '()', '=>', '{', 'return', '}"",', '""const', 'fn', '=', '()', '=>', '{', 'if', '(kumiko)', '{', 'return', 'kumiko', '}', '}"",', '{', 'code:', '""return', ""'Kumiko"", 'Oumae\'"",', 'parserOptions:', '{', 'ecmaFeatures:', '{', 'globalReturn:', 'true', '}', '}', '},', '""class', 'C', '{', '}"",', '""class', 'C', '{', 'constructor()', '{}', '}"",', '""class', 'C', '{', 'constructor()', '{', 'let', 'v', '}', '}"",', '""class', 'C', '{', 'method()', '{', 'return', ""''"", '}', '}"",', '""class', 'C', '{', 'get', 'value()', '{', 'return', ""''"", '}', '}"",', '""class', 'C', '{', 'constructor(a)', '{', 'if', '(!a)', '{', 'return', '}', 'else', '{', 'a()', '}', '}', '}"",', '""class', 'C', '{', 'constructor()', '{', 'function', 'fn()', '{', 'return', 'true', '}', '}', '}"",', '""class', 'C', '{', 'constructor()', '{', 'this.fn', '=', 'function', '()', '{', 'return', 'true', '}', '}', '}"",', '""class', 'C', '{', 'constructor()', '{', 'this.fn', '=', '()', '=>', '{', 'return', 'true', '}', '}', '}""', '],', 'invalid:', '[', '{', 'code:', '""class', 'C', '{', 'constructor()', '{', 'return', '}', '}"",', 'errors', '},', '{', 'code:', '""class', 'C', '{', 'constructor()', '{', 'return', ""''"", '}', '}"",', 'errors', '},', '{', 'code:', '""class', 'C', '{', 'constructor(a)', '{', 'if', '(!a)', '{', 'return', ""''"", '}', 'else', '{', 'a()', '}', '}', '}"",', 'errors', '}', ']', '});', '```']",challenge not surrounded by ''': ,
"select CASE WHEN 1=1 THEN 1 ELSE NULL END;
select CASE WHEN 1=0 THEN 1 ELSE NULL END;
select CASE WHEN 2=2 THEN 2 else cast(null as char) end;
select CASE WHEN 2=0 THEN 2 else cast(null as char) end;
select CASE WHEN 3=3 THEN 3 else cast(null as int) end;
select CASE WHEN 3=0 THEN 3 else cast(null as int) end;
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```select', 'CASE', 'WHEN', '1=1', 'THEN', '1', 'ELSE', 'NULL', 'END;', 'select', 'CASE', 'WHEN', '1=0', 'THEN', '1', 'ELSE', 'NULL', 'END;', 'select', 'CASE', 'WHEN', '2=2', 'THEN', '2', 'else', 'cast(null', 'as', 'char)', 'end;', 'select', 'CASE', 'WHEN', '2=0', 'THEN', '2', 'else', 'cast(null', 'as', 'char)', 'end;', 'select', 'CASE', 'WHEN', '3=3', 'THEN', '3', 'else', 'cast(null', 'as', 'int)', 'end;', 'select', 'CASE', 'WHEN', '3=0', 'THEN', '3', 'else', 'cast(null', 'as', 'int)', 'end;', '```']",challenge not surrounded by ''': ,
"<footer>

    <div class=""page-header"">
        <h4>無廣告、無 Google 追蹤分析器、無利害關聯、無跨站請求</h4>
    </div>

    <div class=""row mt-3"">
        <div class=""col-md-3 col-sm-6 mb-3 d-flex justify-content-center d-flex justify-content-center"">
            <a href=""http://www.wtfpl.net/"" data-toggle=""tooltip"" data-placement=""top"" style=""margin-right:30px;"" data-original-title=""本站內容自由開放授權，任何人可依 Sam Hocevar 的 ""Do What The Fuck You Want To Public License'' 條件，自由散佈、修改之。""><img alt=""WTFPL"" src=""assets/img/layout/wtfpl.png"" style=""margin-right:15px;"">WTFPL</a>
        </div>

        <div class=""col-md-3 col-sm-6 mb-3 d-flex justify-content-center"">
            <a href=""https://www.kopimi.com/"" data-toggle=""tooltip"" data-placement=""top"" style=""margin-right:30px;"" data-original-title=""kopimi (copyme), symbol showing that you want to be copied. use kopimi in your own fancy. kopimi may be put on homepages or blogs, in books, in software, as sound logos in music or whatever.""><img alt=""kopimi"" src=""assets/img/layout/kopimi.png"" style=""margin-right:15px;"">kopimi (copyme)</a>
        </div>

        <div class=""col-md-3 col-sm-6 mb-3 d-flex justify-content-center"">
            <a href=""donate.html"" data-toggle=""tooltip"" data-placement=""top"" data-original-title=""捐助比特幣支援本站隱私專案，本站無廣告干援，也無與任何服務供應商有利害關係。個人捐款會用於本站伺服器與域名租用支出。""><img alt=""Bitcoin"" src=""assets/img/layout/Bitcoin.png"">捐贈比特幣（BTC）</a>
        </div>

        <div class=""col-md-3 col-sm-6 mb-3 d-flex justify-content-center"">
            <i class=""fab fa-paypal fa-2x""></i>
            <a data-toggle=""tooltip"" data-placement=""top"" data-original-title=""你可以使用 Paypal 捐贈。"" href=""https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=5G9CBU8P6F4K2"">PayPal</a>
        </div>
    </div>

    <p><em>privacytools.io 是一個為社會現況激發的社群網站，它提供保護上網者資料安全的資訊。不要信任任何一家公司會善待保護隱私，時時刻刻作好加密防備。</em></p>

</footer>","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<footer>', '<div', 'class=""page-header"">', '<h4>無廣告、無', 'Google', '追蹤分析器、無利害關聯、無跨站請求</h4>', '</div>', '<div', 'class=""row', 'mt-3"">', '<div', 'class=""col-md-3', 'col-sm-6', 'mb-3', 'd-flex', 'justify-content-center', 'd-flex', 'justify-content-center"">', '<a', 'href=""http://www.wtfpl.net/""', 'data-toggle=""tooltip""', 'data-placement=""top""', 'style=""margin-right:30px;""', 'data-original-title=""本站內容自由開放授權，任何人可依', 'Sam', 'Hocevar', '的', '""Do', 'What', 'The', 'Fuck', 'You', 'Want', 'To', 'Public', ""License''"", '條件，自由散佈、修改之。""><img', 'alt=""WTFPL""', 'src=""assets/img/layout/wtfpl.png""', 'style=""margin-right:15px;"">WTFPL</a>', '</div>', '<div', 'class=""col-md-3', 'col-sm-6', 'mb-3', 'd-flex', 'justify-content-center"">', '<a', 'href=""https://www.kopimi.com/""', 'data-toggle=""tooltip""', 'data-placement=""top""', 'style=""margin-right:30px;""', 'data-original-title=""kopimi', '(copyme),', 'symbol', 'showing', 'that', 'you', 'want', 'to', 'be', 'copied.', 'use', 'kopimi', 'in', 'your', 'own', 'fancy.', 'kopimi', 'may', 'be', 'put', 'on', 'homepages', 'or', 'blogs,', 'in', 'books,', 'in', 'software,', 'as', 'sound', 'logos', 'in', 'music', 'or', 'whatever.""><img', 'alt=""kopimi""', 'src=""assets/img/layout/kopimi.png""', 'style=""margin-right:15px;"">kopimi', '(copyme)</a>', '</div>', '<div', 'class=""col-md-3', 'col-sm-6', 'mb-3', 'd-flex', 'justify-content-center"">', '<a', 'href=""donate.html""', 'data-toggle=""tooltip""', 'data-placement=""top""', 'data-original-title=""捐助比特幣支援本站隱私專案，本站無廣告干援，也無與任何服務供應商有利害關係。個人捐款會用於本站伺服器與域名租用支出。""><img', 'alt=""Bitcoin""', 'src=""assets/img/layout/Bitcoin.png"">捐贈比特幣（BTC）</a>', '</div>', '<div', 'class=""col-md-3', 'col-sm-6', 'mb-3', 'd-flex', 'justify-content-center"">', '<i', 'class=""fab', 'fa-paypal', 'fa-2x""></i>', '<a', 'data-toggle=""tooltip""', 'data-placement=""top""', 'data-original-title=""你可以使用', 'Paypal', '捐贈。""', 'href=""https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=5G9CBU8P6F4K2"">PayPal</a>', '</div>', '</div>', '<p><em>privacytools.io', '是一個為社會現況激發的社群網站，它提供保護上網者資料安全的資訊。不要信任任何一家公司會善待保護隱私，時時刻刻作好加密防備。</em></p>', '</footer>```']",challenge not surrounded by ''': ,
"<form method=""post"" action=""_('changeemail.php')"" name=""changeemailform"">
    <table width=""100%"" border=""0"" cellspacing=""0"" cellpadding=""0"" class=""border-col"">
        <tr>
            <td>
                <table width=""100%"" border=""0"" cellspacing=""1"" cellpadding=""3"">
                    <tr class=""color4"">
                        <td colspan=""2"">
                            $style[smallfont]<span style=""color:$style[col_he_fo_font]""><strong>Email-Adresse &Auml;ndern</strong></span>$style[smallfontend]
                        </td>
                    </tr>
                    <tr class=""cella"">
                        <td width=""20%"">
                            $style[stdfont]Derzeitiges Passwort$style[stdfontend]
                        </td>
                        <td>
                            <input class=""tbinput"" type=""password"" name=""user[useroldpassword]"">
                            $style[smallfont]Bitte geben Sie ihr derzeitiges Passwort an! (<a href=""_('send_password.php')"">Passwort vergessen?</a>) $style[smallfontend]
                        </td>
                    </tr>
                    <tr class=""cellb"">
                        <td width=""20%"">
                            $style[stdfont]Neue Email-Adresse$style[stdfontend]
                        </td>
                        <td>
                            <input class=""tbinput"" type=""text"" name=""user[usernewemail]"">
                            $style[smallfont]Ihre neue Email Adresse$style[smallfontend]
                        </td>
                    </tr>
                    $t_changewarning
                    <tr class=""color4"">
                        <td colspan=""2"" align=""center"">
                            <input type=""hidden"" class=""tbbutton"" name=""change"" value=""1"">
                            <input type=""submit"" class=""tbbutton"" name=""Submit"" value=""Profil &auml;ndern"">
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
    </table>
</form>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<form', 'method=""post""', 'action=""_(\'changeemail.php\')""', 'name=""changeemailform"">', '<table', 'width=""100%""', 'border=""0""', 'cellspacing=""0""', 'cellpadding=""0""', 'class=""border-col"">', '<tr>', '<td>', '<table', 'width=""100%""', 'border=""0""', 'cellspacing=""1""', 'cellpadding=""3"">', '<tr', 'class=""color4"">', '<td', 'colspan=""2"">', '$style[smallfont]<span', 'style=""color:$style[col_he_fo_font]""><strong>Email-Adresse', '&Auml;ndern</strong></span>$style[smallfontend]', '</td>', '</tr>', '<tr', 'class=""cella"">', '<td', 'width=""20%"">', '$style[stdfont]Derzeitiges', 'Passwort$style[stdfontend]', '</td>', '<td>', '<input', 'class=""tbinput""', 'type=""password""', 'name=""user[useroldpassword]"">', '$style[smallfont]Bitte', 'geben', 'Sie', 'ihr', 'derzeitiges', 'Passwort', 'an!', '(<a', 'href=""_(\'send_password.php\')"">Passwort', 'vergessen?</a>)', '$style[smallfontend]', '</td>', '</tr>', '<tr', 'class=""cellb"">', '<td', 'width=""20%"">', '$style[stdfont]Neue', 'Email-Adresse$style[stdfontend]', '</td>', '<td>', '<input', 'class=""tbinput""', 'type=""text""', 'name=""user[usernewemail]"">', '$style[smallfont]Ihre', 'neue', 'Email', 'Adresse$style[smallfontend]', '</td>', '</tr>', '$t_changewarning', '<tr', 'class=""color4"">', '<td', 'colspan=""2""', 'align=""center"">', '<input', 'type=""hidden""', 'class=""tbbutton""', 'name=""change""', 'value=""1"">', '<input', 'type=""submit""', 'class=""tbbutton""', 'name=""Submit""', 'value=""Profil', '&auml;ndern"">', '</td>', '</tr>', '</table>', '</td>', '</tr>', '</table>', '</form>', '```']",challenge not surrounded by ''': ,
"/**
 */
package de.dfki.iui.basys.model.domain.resourcetype;


/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Lift</b></em>'.
 * <!-- end-user-doc -->
 *
 *
 * @see de.dfki.iui.basys.model.domain.resourcetype.ResourcetypePackage#getLift()
 * @model
 * @generated
 */
public interface Lift extends VerticalTransport {
} // Lift
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*/', 'package', 'de.dfki.iui.basys.model.domain.resourcetype;', '/**', '*', '<!--', 'begin-user-doc', '-->', '*', 'A', 'representation', 'of', 'the', 'model', 'object', ""'<em><b>Lift</b></em>'."", '*', '<!--', 'end-user-doc', '-->', '*', '*', '*', '@see', 'de.dfki.iui.basys.model.domain.resourcetype.ResourcetypePackage#getLift()', '*', '@model', '*', '@generated', '*/', 'public', 'interface', 'Lift', 'extends', 'VerticalTransport', '{', '}', '//', 'Lift', '```']",challenge not surrounded by ''': ,
"package org.escalate42.javaz.common.function.extra;

import org.escalate42.javaz.common.function.extra.carried.Carry;

/**
 * Created by vadimvd
 * on 21.10.2014 22:04.
 */
public interface Function7<A1, A2, A3, A4, A5, A6, A7, B> {
    B apply(A1 a1, A2 a2, A3 a3, A4 a4, A5 a5, A6 a6, A7 a7);
    default Function6<A2, A3, A4, A5, A6, A7, B> carry(A1 a1) {
        return Carry.carry(a1, this);
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'org.escalate42.javaz.common.function.extra;', 'import', 'org.escalate42.javaz.common.function.extra.carried.Carry;', '/**', '*', 'Created', 'by', 'vadimvd', '*', 'on', '21.10.2014', '22:04.', '*/', 'public', 'interface', 'Function7<A1,', 'A2,', 'A3,', 'A4,', 'A5,', 'A6,', 'A7,', 'B>', '{', 'B', 'apply(A1', 'a1,', 'A2', 'a2,', 'A3', 'a3,', 'A4', 'a4,', 'A5', 'a5,', 'A6', 'a6,', 'A7', 'a7);', 'default', 'Function6<A2,', 'A3,', 'A4,', 'A5,', 'A6,', 'A7,', 'B>', 'carry(A1', 'a1)', '{', 'return', 'Carry.carry(a1,', 'this);', '}', '}', '```']",challenge not surrounded by ''': ,
"#!/bin/bash
# java -jar post.jar file_with_json_structure [-d]
JAVA_FLAGS=""-Dhttp.proxyHost=proxy -Dhttp.proxyPort=3128""

java ${JAVA_FLAGS} -cp . -jar IBCPost.jar $*
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/bin/bash', '#', 'java', '-jar', 'post.jar', 'file_with_json_structure', '[-d]', 'JAVA_FLAGS=""-Dhttp.proxyHost=proxy', '-Dhttp.proxyPort=3128""', 'java', '${JAVA_FLAGS}', '-cp', '.', '-jar', 'IBCPost.jar', '$*', '```']",challenge not surrounded by ''': ,
"import directions from '../model/directions';
import * as Hammer from 'hammerjs';

const activateSwipeSupport = (callback, canvasId) => {
    const hammer = new Hammer.default(document.getElementById(canvasId));

    hammer.get('swipe').set({ direction: Hammer.DIRECTION_ALL });

    hammer.on('swipeup', function() {
        callback({direction: directions.up});
    });
    hammer.on('swiperight', function() {
        callback({direction: directions.right});
    });
    hammer.on('swipedown', function() {
        callback({direction: directions.down});
    });
    hammer.on('swipeleft', function() {
        callback({direction: directions.left});
    });
};

export const input = (callback) => {

    const handler = (event) => {
        if(event.keyCode === 39) {
            callback({direction: directions.right});
        }
        else if(event.keyCode === 37) {
            callback({direction: directions.left});
        }
        else if(event.keyCode === 40) {
            callback({direction: directions.down});
        }
        else if(event.keyCode === 38) {
            callback({direction: directions.up});
        }
    };

    document.addEventListener('keydown', handler, false);

    return {
        withSwipeSupport: (canvasId) => {
            activateSwipeSupport(callback, canvasId);
        }
    };
};

export default input;","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'directions', 'from', ""'../model/directions';"", 'import', '*', 'as', 'Hammer', 'from', ""'hammerjs';"", 'const', 'activateSwipeSupport', '=', '(callback,', 'canvasId)', '=>', '{', 'const', 'hammer', '=', 'new', 'Hammer.default(document.getElementById(canvasId));', ""hammer.get('swipe').set({"", 'direction:', 'Hammer.DIRECTION_ALL', '});', ""hammer.on('swipeup',"", 'function()', '{', 'callback({direction:', 'directions.up});', '});', ""hammer.on('swiperight',"", 'function()', '{', 'callback({direction:', 'directions.right});', '});', ""hammer.on('swipedown',"", 'function()', '{', 'callback({direction:', 'directions.down});', '});', ""hammer.on('swipeleft',"", 'function()', '{', 'callback({direction:', 'directions.left});', '});', '};', 'export', 'const', 'input', '=', '(callback)', '=>', '{', 'const', 'handler', '=', '(event)', '=>', '{', 'if(event.keyCode', '===', '39)', '{', 'callback({direction:', 'directions.right});', '}', 'else', 'if(event.keyCode', '===', '37)', '{', 'callback({direction:', 'directions.left});', '}', 'else', 'if(event.keyCode', '===', '40)', '{', 'callback({direction:', 'directions.down});', '}', 'else', 'if(event.keyCode', '===', '38)', '{', 'callback({direction:', 'directions.up});', '}', '};', ""document.addEventListener('keydown',"", 'handler,', 'false);', 'return', '{', 'withSwipeSupport:', '(canvasId)', '=>', '{', 'activateSwipeSupport(callback,', 'canvasId);', '}', '};', '};', 'export', 'default', 'input;```']",challenge not surrounded by ''': ,
"// { dg-require-namedlocale ""se_NO.UTF-8"" }

// 2003-03-12  Petur Runolfsson  <peturr02@ru.is>

// Copyright (C) 2003-2021 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 3, or (at your option)
// any later version.

// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING3.  If not see
// <http://www.gnu.org/licenses/>.


// 22.2.1.3.2 ctype<wchar_t> members

#include <locale>
#include <testsuite_hooks.h>

// libstdc++/9581
void test03()
{
  using namespace std;

  locale loc = locale(""se_NO.UTF-8"");
  const ctype<wchar_t>& wct = use_facet<ctype<wchar_t> >(loc);

  const char* strlit = ""\xc2\x80"";
	
  wchar_t wbuf[3];
  wct.widen(strlit, strlit + 3, wbuf);
  VERIFY( wbuf[0] == wct.widen(strlit[0]) );
  VERIFY( wbuf[1] == wct.widen(strlit[1]) );
  VERIFY( wbuf[2] == wct.widen(strlit[2]) );
}

int main() 
{
  test03();
  return 0;
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//', '{', 'dg-require-namedlocale', '""se_NO.UTF-8""', '}', '//', '2003-03-12', 'Petur', 'Runolfsson', '<peturr02@ru.is>', '//', 'Copyright', '(C)', '2003-2021', 'Free', 'Software', 'Foundation,', 'Inc.', '//', '//', 'This', 'file', 'is', 'part', 'of', 'the', 'GNU', 'ISO', 'C++', 'Library.', 'This', 'library', 'is', 'free', '//', 'software;', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', 'it', 'under', 'the', '//', 'terms', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'as', 'published', 'by', 'the', '//', 'Free', 'Software', 'Foundation;', 'either', 'version', '3,', 'or', '(at', 'your', 'option)', '//', 'any', 'later', 'version.', '//', 'This', 'library', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', '//', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', '//', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', '//', 'GNU', 'General', 'Public', 'License', 'for', 'more', 'details.', '//', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'along', '//', 'with', 'this', 'library;', 'see', 'the', 'file', 'COPYING3.', 'If', 'not', 'see', '//', '<http://www.gnu.org/licenses/>.', '//', '22.2.1.3.2', 'ctype<wchar_t>', 'members', '#include', '<locale>', '#include', '<testsuite_hooks.h>', '//', 'libstdc++/9581', 'void', 'test03()', '{', 'using', 'namespace', 'std;', 'locale', 'loc', '=', 'locale(""se_NO.UTF-8"");', 'const', 'ctype<wchar_t>&', 'wct', '=', 'use_facet<ctype<wchar_t>', '>(loc);', 'const', 'char*', 'strlit', '=', '""\\xc2\\x80"";', 'wchar_t', 'wbuf[3];', 'wct.widen(strlit,', 'strlit', '+', '3,', 'wbuf);', 'VERIFY(', 'wbuf[0]', '==', 'wct.widen(strlit[0])', ');', 'VERIFY(', 'wbuf[1]', '==', 'wct.widen(strlit[1])', ');', 'VERIFY(', 'wbuf[2]', '==', 'wct.widen(strlit[2])', ');', '}', 'int', 'main()', '{', 'test03();', 'return', '0;', '}', '```']",challenge not surrounded by ''': ,
"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.servicemix.kernel.gshell.admin.internal.commands;

import org.apache.geronimo.gshell.clp.Argument;
import org.apache.geronimo.gshell.clp.Option;

public class StartCommand extends AdminCommandSupport {

    @Option(name = ""-o"", aliases = { ""--java-opts""}, description = ""Java options when launching the instance"")
    private String javaOpts;

    @Argument(index=0, required=true, description=""The instance name"")
    private String instance = null;

    protected Object doExecute() throws Exception {
        getExistingInstance(instance).start(javaOpts);
        return Result.SUCCESS;
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Licensed', 'to', 'the', 'Apache', 'Software', 'Foundation', '(ASF)', 'under', 'one', 'or', 'more', '*', 'contributor', 'license', 'agreements.', 'See', 'the', 'NOTICE', 'file', 'distributed', 'with', '*', 'this', 'work', 'for', 'additional', 'information', 'regarding', 'copyright', 'ownership.', '*', 'The', 'ASF', 'licenses', 'this', 'file', 'to', 'You', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '*', '(the', '""License"");', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', '*', 'the', 'License.', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'org.apache.servicemix.kernel.gshell.admin.internal.commands;', 'import', 'org.apache.geronimo.gshell.clp.Argument;', 'import', 'org.apache.geronimo.gshell.clp.Option;', 'public', 'class', 'StartCommand', 'extends', 'AdminCommandSupport', '{', '@Option(name', '=', '""-o"",', 'aliases', '=', '{', '""--java-opts""},', 'description', '=', '""Java', 'options', 'when', 'launching', 'the', 'instance"")', 'private', 'String', 'javaOpts;', '@Argument(index=0,', 'required=true,', 'description=""The', 'instance', 'name"")', 'private', 'String', 'instance', '=', 'null;', 'protected', 'Object', 'doExecute()', 'throws', 'Exception', '{', 'getExistingInstance(instance).start(javaOpts);', 'return', 'Result.SUCCESS;', '}', '}', '```']",challenge not surrounded by ''': ,
"-- Shattered WHs statics data, gathered from ellatha.com at 2017-11-19 21:12:30.359758 UTC
UPDATE wormholesystems_new SET statics='J244,N110'  WHERE solarsystemid=31002505;  -- J015092
UPDATE wormholesystems_new SET statics='J244,N110'  WHERE solarsystemid=31002506;  -- J005834; was: N110,Z060
UPDATE wormholesystems_new SET statics='J244,N110'  WHERE solarsystemid=31002507;  -- J012402
UPDATE wormholesystems_new SET statics='J244,N110'  WHERE solarsystemid=31002510;  -- J012157; was: J244,Z060,C125
UPDATE wormholesystems_new SET statics='J244,N110'  WHERE solarsystemid=31002511;  -- J002757
UPDATE wormholesystems_new SET statics='J244,N110'  WHERE solarsystemid=31002514;  -- J002216
UPDATE wormholesystems_new SET statics='B274,E545'  WHERE solarsystemid=31002515;  -- J005482
UPDATE wormholesystems_new SET statics='B274,E545'  WHERE solarsystemid=31002517;  -- J013070
UPDATE wormholesystems_new SET statics='B274,E545'  WHERE solarsystemid=31002518;  -- J001057; was: E545,Y683,B274,D382
UPDATE wormholesystems_new SET statics='B274,E545'  WHERE solarsystemid=31002519;  -- J011321; was: B274,E545,Y683
UPDATE wormholesystems_new SET statics='B274,E545'  WHERE solarsystemid=31002520;  -- J013123
UPDATE wormholesystems_new SET statics='B274,E545'  WHERE solarsystemid=31002521;  -- J012735; was: B274,Y683,O477,E545
UPDATE wormholesystems_new SET statics='B274,E545'  WHERE solarsystemid=31002522;  -- J012635; was: B274,A239
UPDATE wormholesystems_new SET statics='B274,E545'  WHERE solarsystemid=31002523;  -- J010000; was: B274
UPDATE wormholesystems_new SET statics='A239,B274'  WHERE solarsystemid=31002524;  -- J001890; was: Z647,B274,A239
UPDATE wormholesystems_new SET statics='B274,E545'  WHERE solarsystemid=31002525;  -- J002964
UPDATE wormholesystems_new SET statics='B274,E545'  WHERE solarsystemid=31002526;  -- J004686
UPDATE wormholesystems_new SET statics='D845,U210'  WHERE solarsystemid=31002528;  -- J001348
UPDATE wormholesystems_new SET statics='D845,U210'  WHERE solarsystemid=31002529;  -- J002838; was: U210,K346
UPDATE wormholesystems_new SET statics='K346,U210'  WHERE solarsystemid=31002530;  -- J001670
UPDATE wormholesystems_new SET statics='D845,U210'  WHERE solarsystemid=31002533;  -- J012794; was: U210,K346
UPDATE wormholesystems_new SET statics='K346,U210'  WHERE solarsystemid=31002534;  -- J005923
UPDATE wormholesystems_new SET statics='D845,U210'  WHERE solarsystemid=31002535;  -- J001398; was: U210,K346
UPDATE wormholesystems_new SET statics='K346,U210'  WHERE solarsystemid=31002537;  -- J004283
UPDATE wormholesystems_new SET statics='C247,X877'  WHERE solarsystemid=31002538;  -- J002625; was: C247,U210,X977
UPDATE wormholesystems_new SET statics='C247,X877'  WHERE solarsystemid=31002539;  -- J004470
UPDATE wormholesystems_new SET statics='C247,X877'  WHERE solarsystemid=31002540;  -- J011824; was: K346,C247,X877
UPDATE wormholesystems_new SET statics='C247,X877'  WHERE solarsystemid=31002541;  -- J010247; was: U210,X877,N766
UPDATE wormholesystems_new SET statics='C247,X877'  WHERE solarsystemid=31002542;  -- J002423; was: N766,P060,D845
UPDATE wormholesystems_new SET statics='C247,H900'  WHERE solarsystemid=31002543;  -- J001302; was: K346,H900,U576
UPDATE wormholesystems_new SET statics='C247,X877'  WHERE solarsystemid=31002544;  -- J010556; was: N766,P060,D485
UPDATE wormholesystems_new SET statics='C247,X877'  WHERE solarsystemid=31002545;  -- J011778
UPDATE wormholesystems_new SET statics='C247,X877'  WHERE solarsystemid=31002546;  -- J005259; was: X877,C247,D845
UPDATE wormholesystems_new SET statics='C247,X877'  WHERE solarsystemid=31002547;  -- J005969
UPDATE wormholesystems_new SET statics='H900,X877'  WHERE solarsystemid=31002548;  -- J001769; was: H900,K346,X877
UPDATE wormholesystems_new SET statics='C247,D845'  WHERE solarsystemid=31002549;  -- J004150; was: D845,C247,N766
UPDATE wormholesystems_new SET statics='C247,X877'  WHERE solarsystemid=31002550;  -- J005872
UPDATE wormholesystems_new SET statics='U210,X877'  WHERE solarsystemid=31002551;  -- J011376; was: X877,H900,U210
UPDATE wormholesystems_new SET statics='C247,K346'  WHERE solarsystemid=31002552;  -- J005299; was: H900,C247,K346
UPDATE wormholesystems_new SET statics='C247,X877'  WHERE solarsystemid=31002553;  -- J011355
UPDATE wormholesystems_new SET statics='C247,X877'  WHERE solarsystemid=31002554;  -- J011195; was: U210,X877,H900
UPDATE wormholesystems_new SET statics='C247,X877'  WHERE solarsystemid=31002555;  -- J005280; was: X877,C247,U210
UPDATE wormholesystems_new SET statics='H296,U210'  WHERE solarsystemid=31002556;  -- J010811
UPDATE wormholesystems_new SET statics='H296,U210'  WHERE solarsystemid=31002558;  -- J003941; was: H296,K346
UPDATE wormholesystems_new SET statics='H296,U210'  WHERE solarsystemid=31002559;  -- J011790; was: D792,M267,K346
UPDATE wormholesystems_new SET statics='H296,U210'  WHERE solarsystemid=31002560;  -- J013146; was: H296,K346
UPDATE wormholesystems_new SET statics='H296,U210'  WHERE solarsystemid=31002561;  -- J004998
UPDATE wormholesystems_new SET statics='D364,U210'  WHERE solarsystemid=31002562;  -- J003382
UPDATE wormholesystems_new SET statics='H296,U210'  WHERE solarsystemid=31002563;  -- J003546; was: M267,U210
UPDATE wormholesystems_new SET statics='H296,U210'  WHERE solarsystemid=31002566;  -- J012773
UPDATE wormholesystems_new SET statics='H296,U210'  WHERE solarsystemid=31002568;  -- J005663; was: U210,Y790
UPDATE wormholesystems_new SET statics='H296,U210'  WHERE solarsystemid=31002569;  -- J003793; was: K346,E175,Z142
UPDATE wormholesystems_new SET statics='H296,U210'  WHERE solarsystemid=31002571;  -- J005070; was: V753,K346
UPDATE wormholesystems_new SET statics='H296,U210'  WHERE solarsystemid=31002572;  -- J001025
UPDATE wormholesystems_new SET statics='H296,U210'  WHERE solarsystemid=31002573;  -- J005724; was: H296,K346
UPDATE wormholesystems_new SET statics='H296,U210'  WHERE solarsystemid=31002574;  -- J004921; was: H296,K346
UPDATE wormholesystems_new SET statics='K346,V911'  WHERE solarsystemid=31002576;  -- J010366
UPDATE wormholesystems_new SET statics='C248,K346'  WHERE solarsystemid=31002578;  -- J015227; was: W237,K346
UPDATE wormholesystems_new SET statics='K346,V911'  WHERE solarsystemid=31002579;  -- J010951; was: K346,V753
UPDATE wormholesystems_new SET statics='C008,Q003'  WHERE solarsystemid=31002587;  -- J000186
UPDATE wormholesystems_new SET statics='C008,Q003'  WHERE solarsystemid=31002599;  -- J000214
UPDATE wormholesystems_new SET statics='C008,Q003'  WHERE solarsystemid=31002601;  -- J000313
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```--', 'Shattered', 'WHs', 'statics', 'data,', 'gathered', 'from', 'ellatha.com', 'at', '2017-11-19', '21:12:30.359758', 'UTC', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='J244,N110'"", 'WHERE', 'solarsystemid=31002505;', '--', 'J015092', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='J244,N110'"", 'WHERE', 'solarsystemid=31002506;', '--', 'J005834;', 'was:', 'N110,Z060', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='J244,N110'"", 'WHERE', 'solarsystemid=31002507;', '--', 'J012402', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='J244,N110'"", 'WHERE', 'solarsystemid=31002510;', '--', 'J012157;', 'was:', 'J244,Z060,C125', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='J244,N110'"", 'WHERE', 'solarsystemid=31002511;', '--', 'J002757', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='J244,N110'"", 'WHERE', 'solarsystemid=31002514;', '--', 'J002216', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='B274,E545'"", 'WHERE', 'solarsystemid=31002515;', '--', 'J005482', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='B274,E545'"", 'WHERE', 'solarsystemid=31002517;', '--', 'J013070', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='B274,E545'"", 'WHERE', 'solarsystemid=31002518;', '--', 'J001057;', 'was:', 'E545,Y683,B274,D382', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='B274,E545'"", 'WHERE', 'solarsystemid=31002519;', '--', 'J011321;', 'was:', 'B274,E545,Y683', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='B274,E545'"", 'WHERE', 'solarsystemid=31002520;', '--', 'J013123', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='B274,E545'"", 'WHERE', 'solarsystemid=31002521;', '--', 'J012735;', 'was:', 'B274,Y683,O477,E545', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='B274,E545'"", 'WHERE', 'solarsystemid=31002522;', '--', 'J012635;', 'was:', 'B274,A239', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='B274,E545'"", 'WHERE', 'solarsystemid=31002523;', '--', 'J010000;', 'was:', 'B274', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='A239,B274'"", 'WHERE', 'solarsystemid=31002524;', '--', 'J001890;', 'was:', 'Z647,B274,A239', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='B274,E545'"", 'WHERE', 'solarsystemid=31002525;', '--', 'J002964', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='B274,E545'"", 'WHERE', 'solarsystemid=31002526;', '--', 'J004686', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='D845,U210'"", 'WHERE', 'solarsystemid=31002528;', '--', 'J001348', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='D845,U210'"", 'WHERE', 'solarsystemid=31002529;', '--', 'J002838;', 'was:', 'U210,K346', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='K346,U210'"", 'WHERE', 'solarsystemid=31002530;', '--', 'J001670', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='D845,U210'"", 'WHERE', 'solarsystemid=31002533;', '--', 'J012794;', 'was:', 'U210,K346', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='K346,U210'"", 'WHERE', 'solarsystemid=31002534;', '--', 'J005923', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='D845,U210'"", 'WHERE', 'solarsystemid=31002535;', '--', 'J001398;', 'was:', 'U210,K346', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='K346,U210'"", 'WHERE', 'solarsystemid=31002537;', '--', 'J004283', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='C247,X877'"", 'WHERE', 'solarsystemid=31002538;', '--', 'J002625;', 'was:', 'C247,U210,X977', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='C247,X877'"", 'WHERE', 'solarsystemid=31002539;', '--', 'J004470', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='C247,X877'"", 'WHERE', 'solarsystemid=31002540;', '--', 'J011824;', 'was:', 'K346,C247,X877', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='C247,X877'"", 'WHERE', 'solarsystemid=31002541;', '--', 'J010247;', 'was:', 'U210,X877,N766', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='C247,X877'"", 'WHERE', 'solarsystemid=31002542;', '--', 'J002423;', 'was:', 'N766,P060,D845', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='C247,H900'"", 'WHERE', 'solarsystemid=31002543;', '--', 'J001302;', 'was:', 'K346,H900,U576', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='C247,X877'"", 'WHERE', 'solarsystemid=31002544;', '--', 'J010556;', 'was:', 'N766,P060,D485', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='C247,X877'"", 'WHERE', 'solarsystemid=31002545;', '--', 'J011778', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='C247,X877'"", 'WHERE', 'solarsystemid=31002546;', '--', 'J005259;', 'was:', 'X877,C247,D845', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='C247,X877'"", 'WHERE', 'solarsystemid=31002547;', '--', 'J005969', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='H900,X877'"", 'WHERE', 'solarsystemid=31002548;', '--', 'J001769;', 'was:', 'H900,K346,X877', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='C247,D845'"", 'WHERE', 'solarsystemid=31002549;', '--', 'J004150;', 'was:', 'D845,C247,N766', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='C247,X877'"", 'WHERE', 'solarsystemid=31002550;', '--', 'J005872', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='U210,X877'"", 'WHERE', 'solarsystemid=31002551;', '--', 'J011376;', 'was:', 'X877,H900,U210', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='C247,K346'"", 'WHERE', 'solarsystemid=31002552;', '--', 'J005299;', 'was:', 'H900,C247,K346', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='C247,X877'"", 'WHERE', 'solarsystemid=31002553;', '--', 'J011355', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='C247,X877'"", 'WHERE', 'solarsystemid=31002554;', '--', 'J011195;', 'was:', 'U210,X877,H900', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='C247,X877'"", 'WHERE', 'solarsystemid=31002555;', '--', 'J005280;', 'was:', 'X877,C247,U210', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='H296,U210'"", 'WHERE', 'solarsystemid=31002556;', '--', 'J010811', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='H296,U210'"", 'WHERE', 'solarsystemid=31002558;', '--', 'J003941;', 'was:', 'H296,K346', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='H296,U210'"", 'WHERE', 'solarsystemid=31002559;', '--', 'J011790;', 'was:', 'D792,M267,K346', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='H296,U210'"", 'WHERE', 'solarsystemid=31002560;', '--', 'J013146;', 'was:', 'H296,K346', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='H296,U210'"", 'WHERE', 'solarsystemid=31002561;', '--', 'J004998', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='D364,U210'"", 'WHERE', 'solarsystemid=31002562;', '--', 'J003382', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='H296,U210'"", 'WHERE', 'solarsystemid=31002563;', '--', 'J003546;', 'was:', 'M267,U210', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='H296,U210'"", 'WHERE', 'solarsystemid=31002566;', '--', 'J012773', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='H296,U210'"", 'WHERE', 'solarsystemid=31002568;', '--', 'J005663;', 'was:', 'U210,Y790', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='H296,U210'"", 'WHERE', 'solarsystemid=31002569;', '--', 'J003793;', 'was:', 'K346,E175,Z142', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='H296,U210'"", 'WHERE', 'solarsystemid=31002571;', '--', 'J005070;', 'was:', 'V753,K346', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='H296,U210'"", 'WHERE', 'solarsystemid=31002572;', '--', 'J001025', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='H296,U210'"", 'WHERE', 'solarsystemid=31002573;', '--', 'J005724;', 'was:', 'H296,K346', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='H296,U210'"", 'WHERE', 'solarsystemid=31002574;', '--', 'J004921;', 'was:', 'H296,K346', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='K346,V911'"", 'WHERE', 'solarsystemid=31002576;', '--', 'J010366', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='C248,K346'"", 'WHERE', 'solarsystemid=31002578;', '--', 'J015227;', 'was:', 'W237,K346', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='K346,V911'"", 'WHERE', 'solarsystemid=31002579;', '--', 'J010951;', 'was:', 'K346,V753', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='C008,Q003'"", 'WHERE', 'solarsystemid=31002587;', '--', 'J000186', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='C008,Q003'"", 'WHERE', 'solarsystemid=31002599;', '--', 'J000214', 'UPDATE', 'wormholesystems_new', 'SET', ""statics='C008,Q003'"", 'WHERE', 'solarsystemid=31002601;', '--', 'J000313', '```']",challenge not surrounded by ''': ,
"package org.apereo.cas.web.flow;

import lombok.extern.slf4j.Slf4j;
import org.apache.commons.lang3.StringUtils;
import org.apereo.cas.authentication.Credential;
import org.apereo.cas.authentication.adaptive.AdaptiveAuthenticationPolicy;
import org.apereo.cas.authentication.principal.Service;
import org.apereo.cas.services.RegisteredService;
import org.apereo.cas.services.RegisteredServiceAccessStrategyUtils;
import org.apereo.cas.services.ServicesManager;
import org.apereo.cas.token.authentication.TokenCredential;
import org.apereo.cas.web.TokenRequestExtractor;
import org.apereo.cas.web.flow.actions.AbstractNonInteractiveCredentialsAction;
import org.apereo.cas.web.flow.resolver.CasDelegatingWebflowEventResolver;
import org.apereo.cas.web.flow.resolver.CasWebflowEventResolver;
import org.apereo.cas.web.support.WebUtils;
import org.springframework.webflow.execution.RequestContext;

import javax.servlet.http.HttpServletRequest;

/**
 * This is {@link TokenAuthenticationAction}.  This class represents an action in the webflow to retrieve
 * user information from an AES128 encrypted token. If the auth_token
 * parameter exists in the web request, it is used to create a new TokenCredential.
 *
 * @author Eric Pierce
 * @author Misagh Moayyed
 * @since 4.2.0
 */
@Slf4j
public class TokenAuthenticationAction extends AbstractNonInteractiveCredentialsAction {



    private final TokenRequestExtractor tokenRequestExtractor;
    private final ServicesManager servicesManager;

    public TokenAuthenticationAction(final CasDelegatingWebflowEventResolver initialAuthenticationAttemptWebflowEventResolver,
                                     final CasWebflowEventResolver serviceTicketRequestWebflowEventResolver,
                                     final AdaptiveAuthenticationPolicy adaptiveAuthenticationPolicy,
                                     final TokenRequestExtractor tokenRequestExtractor,
                                     final ServicesManager servicesManager) {
        super(initialAuthenticationAttemptWebflowEventResolver, serviceTicketRequestWebflowEventResolver, adaptiveAuthenticationPolicy);
        this.tokenRequestExtractor = tokenRequestExtractor;
        this.servicesManager = servicesManager;
    }

    @Override
    protected Credential constructCredentialsFromRequest(final RequestContext requestContext) {
        final HttpServletRequest request = WebUtils.getHttpServletRequestFromExternalWebflowContext(requestContext);
        final String authTokenValue = this.tokenRequestExtractor.extract(request);
        final Service service = WebUtils.getService(requestContext);

        if (StringUtils.isNotBlank(authTokenValue) && service != null) {
            try {
                final RegisteredService registeredService = this.servicesManager.findServiceBy(service);
                RegisteredServiceAccessStrategyUtils.ensureServiceAccessIsAllowed(service, registeredService);

                final Credential credential = new TokenCredential(authTokenValue, service);
                LOGGER.debug(""Received token authentication request [{}] "", credential);
                return credential;
            } catch (final Exception e) {
                LOGGER.warn(e.getMessage(), e);
            }
        }
        return null;
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'org.apereo.cas.web.flow;', 'import', 'lombok.extern.slf4j.Slf4j;', 'import', 'org.apache.commons.lang3.StringUtils;', 'import', 'org.apereo.cas.authentication.Credential;', 'import', 'org.apereo.cas.authentication.adaptive.AdaptiveAuthenticationPolicy;', 'import', 'org.apereo.cas.authentication.principal.Service;', 'import', 'org.apereo.cas.services.RegisteredService;', 'import', 'org.apereo.cas.services.RegisteredServiceAccessStrategyUtils;', 'import', 'org.apereo.cas.services.ServicesManager;', 'import', 'org.apereo.cas.token.authentication.TokenCredential;', 'import', 'org.apereo.cas.web.TokenRequestExtractor;', 'import', 'org.apereo.cas.web.flow.actions.AbstractNonInteractiveCredentialsAction;', 'import', 'org.apereo.cas.web.flow.resolver.CasDelegatingWebflowEventResolver;', 'import', 'org.apereo.cas.web.flow.resolver.CasWebflowEventResolver;', 'import', 'org.apereo.cas.web.support.WebUtils;', 'import', 'org.springframework.webflow.execution.RequestContext;', 'import', 'javax.servlet.http.HttpServletRequest;', '/**', '*', 'This', 'is', '{@link', 'TokenAuthenticationAction}.', 'This', 'class', 'represents', 'an', 'action', 'in', 'the', 'webflow', 'to', 'retrieve', '*', 'user', 'information', 'from', 'an', 'AES128', 'encrypted', 'token.', 'If', 'the', 'auth_token', '*', 'parameter', 'exists', 'in', 'the', 'web', 'request,', 'it', 'is', 'used', 'to', 'create', 'a', 'new', 'TokenCredential.', '*', '*', '@author', 'Eric', 'Pierce', '*', '@author', 'Misagh', 'Moayyed', '*', '@since', '4.2.0', '*/', '@Slf4j', 'public', 'class', 'TokenAuthenticationAction', 'extends', 'AbstractNonInteractiveCredentialsAction', '{', 'private', 'final', 'TokenRequestExtractor', 'tokenRequestExtractor;', 'private', 'final', 'ServicesManager', 'servicesManager;', 'public', 'TokenAuthenticationAction(final', 'CasDelegatingWebflowEventResolver', 'initialAuthenticationAttemptWebflowEventResolver,', 'final', 'CasWebflowEventResolver', 'serviceTicketRequestWebflowEventResolver,', 'final', 'AdaptiveAuthenticationPolicy', 'adaptiveAuthenticationPolicy,', 'final', 'TokenRequestExtractor', 'tokenRequestExtractor,', 'final', 'ServicesManager', 'servicesManager)', '{', 'super(initialAuthenticationAttemptWebflowEventResolver,', 'serviceTicketRequestWebflowEventResolver,', 'adaptiveAuthenticationPolicy);', 'this.tokenRequestExtractor', '=', 'tokenRequestExtractor;', 'this.servicesManager', '=', 'servicesManager;', '}', '@Override', 'protected', 'Credential', 'constructCredentialsFromRequest(final', 'RequestContext', 'requestContext)', '{', 'final', 'HttpServletRequest', 'request', '=', 'WebUtils.getHttpServletRequestFromExternalWebflowContext(requestContext);', 'final', 'String', 'authTokenValue', '=', 'this.tokenRequestExtractor.extract(request);', 'final', 'Service', 'service', '=', 'WebUtils.getService(requestContext);', 'if', '(StringUtils.isNotBlank(authTokenValue)', '&&', 'service', '!=', 'null)', '{', 'try', '{', 'final', 'RegisteredService', 'registeredService', '=', 'this.servicesManager.findServiceBy(service);', 'RegisteredServiceAccessStrategyUtils.ensureServiceAccessIsAllowed(service,', 'registeredService);', 'final', 'Credential', 'credential', '=', 'new', 'TokenCredential(authTokenValue,', 'service);', 'LOGGER.debug(""Received', 'token', 'authentication', 'request', '[{}]', '"",', 'credential);', 'return', 'credential;', '}', 'catch', '(final', 'Exception', 'e)', '{', 'LOGGER.warn(e.getMessage(),', 'e);', '}', '}', 'return', 'null;', '}', '}', '```']",challenge not surrounded by ''': ,
"#!/bin/bash
set -e

if [ ""$1"" = 'liquidsoap' ]; then
    eval $(gosu liquidsoap opam config env)
    exec gosu liquidsoap ""$@""
fi

exec ""$@""
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/bin/bash', 'set', '-e', 'if', '[', '""$1""', '=', ""'liquidsoap'"", '];', 'then', 'eval', '$(gosu', 'liquidsoap', 'opam', 'config', 'env)', 'exec', 'gosu', 'liquidsoap', '""$@""', 'fi', 'exec', '""$@""', '```']",challenge not surrounded by ''': ,
"<div data-role=""page"" id=""about"">
    <div data-role=""header"">
        <h1>About Pokodex</h1>
    </div><!-- /header -->

    <div role=""main"" class=""ui-content"">
        <h2>Developers:</h2>
        <p>
            Naam:Niek Hoffmans
            <br>
            Email: <span class=""blue""><a onClick=""app.openNativeAppWindow('mailto:niek.f.j.hoffmans@gmail.com')"" >niek.f.j.hoffmans@gmail.com</a></span>
            <br>
            tel.: <span class=""blue""><a onClick=""app.openNativeAppWindow('tel:0610256898')"">0610256898</a></span>
        </p>
        <h2>Credits:</h2>
        <p>
            <ul>
                <li><a href=""http://pokeapi.co"" class=""internetLink"">Pokodex.co</a> voor het beschikbaar stellen van alle pokemons</li>
                <li>Stijn Smulders voor het bedenken van de opdracht</li>
                <li><a href=""http://phonegap.com/"" class=""internetLink"">PohoneGap</a> voor het beschikbaar stellen van hun compiler</li>
            </ul>
        </p>
    </div><!-- /content -->

    <div data-role=""footer""  data-position=""fixed"">
        <div data-role=""navbar"">
            <ul>
                <li><a href=""index.html"" data-icon=""search""  data-transition=""slide"">Pokodex</a></li>
                <li><a href=""inventory.html"" data-icon=""grid"" data-transition=""slide"" >Invetory</a></li>
                <li><a href=""about.html"" data-icon=""info"" class=""ui-btn-active"">About</a></li>
                <li><a href=""settings.html"" data-icon=""gear"" data-transition=""slide"">Setup</a></li>
            </ul>
        </div><!-- /navbar -->
    </div><!-- /footer -->
</div>","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<div', 'data-role=""page""', 'id=""about"">', '<div', 'data-role=""header"">', '<h1>About', 'Pokodex</h1>', '</div><!--', '/header', '-->', '<div', 'role=""main""', 'class=""ui-content"">', '<h2>Developers:</h2>', '<p>', 'Naam:Niek', 'Hoffmans', '<br>', 'Email:', '<span', 'class=""blue""><a', 'onClick=""app.openNativeAppWindow(\'mailto:niek.f.j.hoffmans@gmail.com\')""', '>niek.f.j.hoffmans@gmail.com</a></span>', '<br>', 'tel.:', '<span', 'class=""blue""><a', 'onClick=""app.openNativeAppWindow(\'tel:0610256898\')"">0610256898</a></span>', '</p>', '<h2>Credits:</h2>', '<p>', '<ul>', '<li><a', 'href=""http://pokeapi.co""', 'class=""internetLink"">Pokodex.co</a>', 'voor', 'het', 'beschikbaar', 'stellen', 'van', 'alle', 'pokemons</li>', '<li>Stijn', 'Smulders', 'voor', 'het', 'bedenken', 'van', 'de', 'opdracht</li>', '<li><a', 'href=""http://phonegap.com/""', 'class=""internetLink"">PohoneGap</a>', 'voor', 'het', 'beschikbaar', 'stellen', 'van', 'hun', 'compiler</li>', '</ul>', '</p>', '</div><!--', '/content', '-->', '<div', 'data-role=""footer""', 'data-position=""fixed"">', '<div', 'data-role=""navbar"">', '<ul>', '<li><a', 'href=""index.html""', 'data-icon=""search""', 'data-transition=""slide"">Pokodex</a></li>', '<li><a', 'href=""inventory.html""', 'data-icon=""grid""', 'data-transition=""slide""', '>Invetory</a></li>', '<li><a', 'href=""about.html""', 'data-icon=""info""', 'class=""ui-btn-active"">About</a></li>', '<li><a', 'href=""settings.html""', 'data-icon=""gear""', 'data-transition=""slide"">Setup</a></li>', '</ul>', '</div><!--', '/navbar', '-->', '</div><!--', '/footer', '-->', '</div>```']",challenge not surrounded by ''': ,
"/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */

/*jshint forin:true, noarg:true, noempty:true, eqeqeq:true, bitwise:true,
  strict:true, undef:true, unused:true, curly:true, browser:true, white:true,
  moz:true, esnext:false, indent:2, maxerr:50, devel:true, node:true, boss:true,
  globalstrict:true, nomen:false, newcap:false */

""use strict"";

const { Class } = require('sdk/core/heritage');
var Request = require('sdk/request').Request;
var timeout = require('sdk/timers').setTimeout;

const Etherpad = Class({
  initialize: function initialize(page) {
    this.PLACEHOLDERS = {};
    this.page = page;
    this.urls = [
      'https://raw.githubusercontent.com/gregoryjost/tabsy/gh-pages/' + this.page + '.txt',
      'https://etherpad.mozilla.org/ep/pad/export/' + this.page + '/latest?format=txt'
    ];
  },

  setDefaults: function (defaults) {
    this.PLACEHOLDERS = defaults;
  },

  loadPlaceholders: function () {
    var self = this;
    console.log(""BW: Loading data for "" + self.urls[0]);
    new Request({
      url: self.urls[0],
      onComplete: function (response) {
        if (response.text.length < 100 || response.status < 200 || response.status >= 300) {
          if (self.urls.length > 1) {
            console.log(""BW: "" + self.urls[0] + "" failed.  Popping."");
            self.urls.shift();
            timeout(self.loadPlaceholders.bind(self), 1);
          } else {
            console.log(""BW: "" + self.urls[0] + "" failed.  Nothing left to pop."");
          }
          return;
        }
        var result = response.text.split('\n');
        result = result.map(function (x) {
          return x.trim();
        }).filter(function (x) {
          return !x.startsWith('#') && (x !== '');
        });
        self.PLACEHOLDERS = result;
      }
    }).get();
    timeout(self.loadPlaceholders.bind(self), 4 * 60 * 60 * 1000);
  },

  getItem: function (id, values) {
    if (!values) {
      values = this.PLACEHOLDERS;
    }
    return values[id % values.length];
  },

  getRandomItem: function () {
    var id = Math.floor(Math.random() * this.PLACEHOLDERS.length);
    return this.getItem(id);
  },

  getRandomItems: function (n) {
    var rv = [];
    var values = this.PLACEHOLDERS.slice(0);

    for (var i = 0; i < n; ++i) {
      var id = Math.floor(Math.random() * values.length);
      var item = this.getItem(id, values);
      values.splice(id, 1);
      rv.push(item);
    }
    return rv;
  }

});
exports.Etherpad = Etherpad;
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', 'This', 'Source', 'Code', 'Form', 'is', 'subject', 'to', 'the', 'terms', 'of', 'the', 'Mozilla', 'Public', '*', 'License,', 'v.', '2.0.', 'If', 'a', 'copy', 'of', 'the', 'MPL', 'was', 'not', 'distributed', 'with', 'this', '*', 'file,', 'You', 'can', 'obtain', 'one', 'at', 'http://mozilla.org/MPL/2.0/.', '*/', '/*jshint', 'forin:true,', 'noarg:true,', 'noempty:true,', 'eqeqeq:true,', 'bitwise:true,', 'strict:true,', 'undef:true,', 'unused:true,', 'curly:true,', 'browser:true,', 'white:true,', 'moz:true,', 'esnext:false,', 'indent:2,', 'maxerr:50,', 'devel:true,', 'node:true,', 'boss:true,', 'globalstrict:true,', 'nomen:false,', 'newcap:false', '*/', '""use', 'strict"";', 'const', '{', 'Class', '}', '=', ""require('sdk/core/heritage');"", 'var', 'Request', '=', ""require('sdk/request').Request;"", 'var', 'timeout', '=', ""require('sdk/timers').setTimeout;"", 'const', 'Etherpad', '=', 'Class({', 'initialize:', 'function', 'initialize(page)', '{', 'this.PLACEHOLDERS', '=', '{};', 'this.page', '=', 'page;', 'this.urls', '=', '[', ""'https://raw.githubusercontent.com/gregoryjost/tabsy/gh-pages/'"", '+', 'this.page', '+', ""'.txt',"", ""'https://etherpad.mozilla.org/ep/pad/export/'"", '+', 'this.page', '+', ""'/latest?format=txt'"", '];', '},', 'setDefaults:', 'function', '(defaults)', '{', 'this.PLACEHOLDERS', '=', 'defaults;', '},', 'loadPlaceholders:', 'function', '()', '{', 'var', 'self', '=', 'this;', 'console.log(""BW:', 'Loading', 'data', 'for', '""', '+', 'self.urls[0]);', 'new', 'Request({', 'url:', 'self.urls[0],', 'onComplete:', 'function', '(response)', '{', 'if', '(response.text.length', '<', '100', '||', 'response.status', '<', '200', '||', 'response.status', '>=', '300)', '{', 'if', '(self.urls.length', '>', '1)', '{', 'console.log(""BW:', '""', '+', 'self.urls[0]', '+', '""', 'failed.', 'Popping."");', 'self.urls.shift();', 'timeout(self.loadPlaceholders.bind(self),', '1);', '}', 'else', '{', 'console.log(""BW:', '""', '+', 'self.urls[0]', '+', '""', 'failed.', 'Nothing', 'left', 'to', 'pop."");', '}', 'return;', '}', 'var', 'result', '=', ""response.text.split('\\n');"", 'result', '=', 'result.map(function', '(x)', '{', 'return', 'x.trim();', '}).filter(function', '(x)', '{', 'return', ""!x.startsWith('#')"", '&&', '(x', '!==', ""'');"", '});', 'self.PLACEHOLDERS', '=', 'result;', '}', '}).get();', 'timeout(self.loadPlaceholders.bind(self),', '4', '*', '60', '*', '60', '*', '1000);', '},', 'getItem:', 'function', '(id,', 'values)', '{', 'if', '(!values)', '{', 'values', '=', 'this.PLACEHOLDERS;', '}', 'return', 'values[id', '%', 'values.length];', '},', 'getRandomItem:', 'function', '()', '{', 'var', 'id', '=', 'Math.floor(Math.random()', '*', 'this.PLACEHOLDERS.length);', 'return', 'this.getItem(id);', '},', 'getRandomItems:', 'function', '(n)', '{', 'var', 'rv', '=', '[];', 'var', 'values', '=', 'this.PLACEHOLDERS.slice(0);', 'for', '(var', 'i', '=', '0;', 'i', '<', 'n;', '++i)', '{', 'var', 'id', '=', 'Math.floor(Math.random()', '*', 'values.length);', 'var', 'item', '=', 'this.getItem(id,', 'values);', 'values.splice(id,', '1);', 'rv.push(item);', '}', 'return', 'rv;', '}', '});', 'exports.Etherpad', '=', 'Etherpad;', '```']",challenge not surrounded by ''': ,
"import math
class Point():
    def __init__(self,x,y):
        self.x = x
        self.y = y
    def distanceTo(self,p):
        return math.sqrt(pow(self.x-p.x,2) + pow(self.y-p.y,2))
    def prints(self):
        print ""("" + str(self.x) + "","" + str(self.y) + "")""
    
d = Point(2,2)
a = Point (3,3)
print d.distanceTo(a)
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'math', 'class', 'Point():', 'def', '__init__(self,x,y):', 'self.x', '=', 'x', 'self.y', '=', 'y', 'def', 'distanceTo(self,p):', 'return', 'math.sqrt(pow(self.x-p.x,2)', '+', 'pow(self.y-p.y,2))', 'def', 'prints(self):', 'print', '""(""', '+', 'str(self.x)', '+', '"",""', '+', 'str(self.y)', '+', '"")""', 'd', '=', 'Point(2,2)', 'a', '=', 'Point', '(3,3)', 'print', 'd.distanceTo(a)', '```']",challenge not surrounded by ''': ,
"window.Muters = window.Muters || {};

(function(ClickListener) {
  function clickListener(chrome) {
    var storage = chrome.storage;

    return function(tab) {
      storage.local.get(""notificationMuter"", function(items) {
        storage.local.set({""notificationMuter"": !items.notificationMuter});
      });
    }
  }

  Muters.ClickListener = clickListener;
})(window.Muters);
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```window.Muters', '=', 'window.Muters', '||', '{};', '(function(ClickListener)', '{', 'function', 'clickListener(chrome)', '{', 'var', 'storage', '=', 'chrome.storage;', 'return', 'function(tab)', '{', 'storage.local.get(""notificationMuter"",', 'function(items)', '{', 'storage.local.set({""notificationMuter"":', '!items.notificationMuter});', '});', '}', '}', 'Muters.ClickListener', '=', 'clickListener;', '})(window.Muters);', '```']",challenge not surrounded by ''': ,
"#
# Copyright 2012 Free Software Foundation, Inc.
#
# This file is part of GNU Radio
#
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
#
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.
#

'''
This is the gr-blocks package. This package provides GNU Radio
processing blocks common to many flowgraphs.
'''

from blocks_swig import *

#alias old gr_add_vXX and gr_multiply_vXX
add_vcc = add_cc
add_vff = add_ff
add_vii = add_ii
add_vss = add_ss
multiply_vcc = multiply_cc
multiply_vff = multiply_ff
multiply_vii = multiply_ii
multiply_vss = multiply_ss
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', '#', 'Copyright', '2012', 'Free', 'Software', 'Foundation,', 'Inc.', '#', '#', 'This', 'file', 'is', 'part', 'of', 'GNU', 'Radio', '#', '#', 'GNU', 'Radio', 'is', 'free', 'software;', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', '#', 'it', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'as', 'published', 'by', '#', 'the', 'Free', 'Software', 'Foundation;', 'either', 'version', '3,', 'or', '(at', 'your', 'option)', '#', 'any', 'later', 'version.', '#', '#', 'GNU', 'Radio', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', '#', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', '#', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', '#', 'GNU', 'General', 'Public', 'License', 'for', 'more', 'details.', '#', '#', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'General', 'Public', 'License', '#', 'along', 'with', 'GNU', 'Radio;', 'see', 'the', 'file', 'COPYING.', 'If', 'not,', 'write', 'to', '#', 'the', 'Free', 'Software', 'Foundation,', 'Inc.,', '51', 'Franklin', 'Street,', '#', 'Boston,', 'MA', '02110-1301,', 'USA.', '#', ""'''"", 'This', 'is', 'the', 'gr-blocks', 'package.', 'This', 'package', 'provides', 'GNU', 'Radio', 'processing', 'blocks', 'common', 'to', 'many', 'flowgraphs.', ""'''"", 'from', 'blocks_swig', 'import', '*', '#alias', 'old', 'gr_add_vXX', 'and', 'gr_multiply_vXX', 'add_vcc', '=', 'add_cc', 'add_vff', '=', 'add_ff', 'add_vii', '=', 'add_ii', 'add_vss', '=', 'add_ss', 'multiply_vcc', '=', 'multiply_cc', 'multiply_vff', '=', 'multiply_ff', 'multiply_vii', '=', 'multiply_ii', 'multiply_vss', '=', 'multiply_ss', '```']",challenge not surrounded by ''': ,
"package classy;

import java.lang.annotation.Documented;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

/**
 * Indicates that the annotated value is automatically generated during class
 * writing. The practical consequence of this is that direct mutation of data
 * with this annotation is discouraged, since any changes will be overwritten
 * when writing the class. Loosely speaking, annotated values can be interpreted
 * as read-only.
 *
 * @author Martin Tuskevicius
 */
@Documented
@Target(ElementType.FIELD)
@Retention(RetentionPolicy.SOURCE)
public @interface Generated {

}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'classy;', 'import', 'java.lang.annotation.Documented;', 'import', 'java.lang.annotation.ElementType;', 'import', 'java.lang.annotation.Retention;', 'import', 'java.lang.annotation.RetentionPolicy;', 'import', 'java.lang.annotation.Target;', '/**', '*', 'Indicates', 'that', 'the', 'annotated', 'value', 'is', 'automatically', 'generated', 'during', 'class', '*', 'writing.', 'The', 'practical', 'consequence', 'of', 'this', 'is', 'that', 'direct', 'mutation', 'of', 'data', '*', 'with', 'this', 'annotation', 'is', 'discouraged,', 'since', 'any', 'changes', 'will', 'be', 'overwritten', '*', 'when', 'writing', 'the', 'class.', 'Loosely', 'speaking,', 'annotated', 'values', 'can', 'be', 'interpreted', '*', 'as', 'read-only.', '*', '*', '@author', 'Martin', 'Tuskevicius', '*/', '@Documented', '@Target(ElementType.FIELD)', '@Retention(RetentionPolicy.SOURCE)', 'public', '@interface', 'Generated', '{', '}```']",challenge not surrounded by ''': ,
"package com.after_sunrise.machina.karakuri.reference.common;

import org.junit.Assert;
import org.junit.Test;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
import java.math.BigDecimal;

/**
 * @author takanori.takase
 */
public class ClonesTest {

    @Test(expected = InvocationTargetException.class)
    public void testConstructor() throws ReflectiveOperationException {

        Constructor<?> c = Clones.class.getDeclaredConstructor();

        c.setAccessible(true);

        c.newInstance();

    }

    @Test
    public void cloneSerializable() throws Exception {

        BigDecimal input = new BigDecimal(""123.45"");

        BigDecimal output = Clones.cloneSerializable(input);

        Assert.assertEquals(input, output);

        Assert.assertNotSame(input, output);

        Assert.assertNull(Clones.cloneSerializable(null));

    }

    @Test(expected = IOException.class)
    public void cloneSerializable_Exception() throws Exception {

        Externalizable serializable = new Externalizable() {
            @Override
            public void writeExternal(ObjectOutput out) throws IOException {
                // Do nothing
            }

            @Override
            public void readExternal(ObjectInput in) throws IOException, ClassNotFoundException {
                throw new ClassNotFoundException(""bar"");
            }
        };

        Clones.cloneSerializable(serializable);

    }

}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.after_sunrise.machina.karakuri.reference.common;', 'import', 'org.junit.Assert;', 'import', 'org.junit.Test;', 'import', 'java.io.Externalizable;', 'import', 'java.io.IOException;', 'import', 'java.io.ObjectInput;', 'import', 'java.io.ObjectOutput;', 'import', 'java.lang.reflect.Constructor;', 'import', 'java.lang.reflect.InvocationTargetException;', 'import', 'java.math.BigDecimal;', '/**', '*', '@author', 'takanori.takase', '*/', 'public', 'class', 'ClonesTest', '{', '@Test(expected', '=', 'InvocationTargetException.class)', 'public', 'void', 'testConstructor()', 'throws', 'ReflectiveOperationException', '{', 'Constructor<?>', 'c', '=', 'Clones.class.getDeclaredConstructor();', 'c.setAccessible(true);', 'c.newInstance();', '}', '@Test', 'public', 'void', 'cloneSerializable()', 'throws', 'Exception', '{', 'BigDecimal', 'input', '=', 'new', 'BigDecimal(""123.45"");', 'BigDecimal', 'output', '=', 'Clones.cloneSerializable(input);', 'Assert.assertEquals(input,', 'output);', 'Assert.assertNotSame(input,', 'output);', 'Assert.assertNull(Clones.cloneSerializable(null));', '}', '@Test(expected', '=', 'IOException.class)', 'public', 'void', 'cloneSerializable_Exception()', 'throws', 'Exception', '{', 'Externalizable', 'serializable', '=', 'new', 'Externalizable()', '{', '@Override', 'public', 'void', 'writeExternal(ObjectOutput', 'out)', 'throws', 'IOException', '{', '//', 'Do', 'nothing', '}', '@Override', 'public', 'void', 'readExternal(ObjectInput', 'in)', 'throws', 'IOException,', 'ClassNotFoundException', '{', 'throw', 'new', 'ClassNotFoundException(""bar"");', '}', '};', 'Clones.cloneSerializable(serializable);', '}', '}```']",challenge not surrounded by ''': ,
"# BenchExec is a framework for reliable benchmarking.
# This file is part of BenchExec.
#
# Copyright (C) 2007-2015  Dirk Beyer
# All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the ""License"");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an ""AS IS"" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import sys
import unittest
sys.dont_write_bytecode = True # prevent creation of .pyc files

class Python2Tests(unittest.TestSuite):
    """"""
    Test suite aggregating all tests that should be executed when using Python 2
    (runexecutor supports Python 2, the rest does not).
    """"""

    def __init__(self):
        loader = unittest.TestLoader()
        super(Python2Tests, self).__init__([
            loader.loadTestsFromName('benchexec.test_cgroups'),
            loader.loadTestsFromName('benchexec.test_runexecutor'),
            loader.loadTestsFromName('benchexec.test_util'),
            ])
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', 'BenchExec', 'is', 'a', 'framework', 'for', 'reliable', 'benchmarking.', '#', 'This', 'file', 'is', 'part', 'of', 'BenchExec.', '#', '#', 'Copyright', '(C)', '2007-2015', 'Dirk', 'Beyer', '#', 'All', 'rights', 'reserved.', '#', '#', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '#', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '#', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '#', '#', 'http://www.apache.org/licenses/LICENSE-2.0', '#', '#', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '#', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '#', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '#', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '#', 'limitations', 'under', 'the', 'License.', 'import', 'sys', 'import', 'unittest', 'sys.dont_write_bytecode', '=', 'True', '#', 'prevent', 'creation', 'of', '.pyc', 'files', 'class', 'Python2Tests(unittest.TestSuite):', '""""""', 'Test', 'suite', 'aggregating', 'all', 'tests', 'that', 'should', 'be', 'executed', 'when', 'using', 'Python', '2', '(runexecutor', 'supports', 'Python', '2,', 'the', 'rest', 'does', 'not).', '""""""', 'def', '__init__(self):', 'loader', '=', 'unittest.TestLoader()', 'super(Python2Tests,', 'self).__init__([', ""loader.loadTestsFromName('benchexec.test_cgroups'),"", ""loader.loadTestsFromName('benchexec.test_runexecutor'),"", ""loader.loadTestsFromName('benchexec.test_util'),"", '])', '```']",challenge not surrounded by ''': ,
"#!/bin/sh

# Action script to enable/disable wpa-roam interfaces in reaction to
# pm-action or ifplugd events.
#
# Copyright: Copyright (c) 2008, Kel Modderman <kel@otaku42.de>
# License:   GPL-2
#

PATH=/sbin:/usr/sbin:/bin:/usr/bin

if [ ! -x /sbin/wpa_action ]; then
	exit 0
fi

SELF=action_wpa
COMMAND=
IFPLUGD_IFACE=

# pm-action(8) - <action> <suspend method>
#
# On suspend|hibernate, disconnect any wpa-roam managed interfaces,
# reconnect it on resume.

case ""${1}"" in
        suspend|hibernate)
                COMMAND=disconnect
                ;;
        resume|thaw)
                COMMAND=reconnect
                ;;
esac

if [ -z ""$COMMAND"" ]; then
	# ifplugd(8) - <iface> <action>
	#
	# If an ifplugd managed interface is brought up, disconnect any
	# wpa-roam managed interfaces so that only one ""roaming"" interface
	# remains active on the system.

	IFPLUGD_IFACE=""${1}""

	case ""${2}"" in
		up)
			COMMAND=disconnect
			;;
		down)
			COMMAND=reconnect
			;;
		*)
			echo ""${SELF}: unknown $0 arguments: ${@}"" >&2
			exit 1
			;;
        esac
fi

if [ -z ""$COMMAND"" ]; then
	echo ""${SELF}: unknown arguments: ${@}"" >&2
	exit 1
fi

for CTRL in /var/run/wpa_supplicant/*; do
	[ -S ""${CTRL}"" ] || continue

	IFACE=""${CTRL#/var/run/wpa_supplicant/}""

	wpa_action ""${IFACE}"" check || continue

	if [ ""${IFPLUGD_IFACE}"" ] && [ ""${IFPLUGD_IFACE}"" = ""${IFACE}"" ]; then
		# if ifplugd is managing this interface (not likely but..)
		# do nothing
		continue
	fi

	wpa_cli -i ""${IFACE}"" ""${COMMAND}""
done
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/bin/sh', '#', 'Action', 'script', 'to', 'enable/disable', 'wpa-roam', 'interfaces', 'in', 'reaction', 'to', '#', 'pm-action', 'or', 'ifplugd', 'events.', '#', '#', 'Copyright:', 'Copyright', '(c)', '2008,', 'Kel', 'Modderman', '<kel@otaku42.de>', '#', 'License:', 'GPL-2', '#', 'PATH=/sbin:/usr/sbin:/bin:/usr/bin', 'if', '[', '!', '-x', '/sbin/wpa_action', '];', 'then', 'exit', '0', 'fi', 'SELF=action_wpa', 'COMMAND=', 'IFPLUGD_IFACE=', '#', 'pm-action(8)', '-', '<action>', '<suspend', 'method>', '#', '#', 'On', 'suspend|hibernate,', 'disconnect', 'any', 'wpa-roam', 'managed', 'interfaces,', '#', 'reconnect', 'it', 'on', 'resume.', 'case', '""${1}""', 'in', 'suspend|hibernate)', 'COMMAND=disconnect', ';;', 'resume|thaw)', 'COMMAND=reconnect', ';;', 'esac', 'if', '[', '-z', '""$COMMAND""', '];', 'then', '#', 'ifplugd(8)', '-', '<iface>', '<action>', '#', '#', 'If', 'an', 'ifplugd', 'managed', 'interface', 'is', 'brought', 'up,', 'disconnect', 'any', '#', 'wpa-roam', 'managed', 'interfaces', 'so', 'that', 'only', 'one', '""roaming""', 'interface', '#', 'remains', 'active', 'on', 'the', 'system.', 'IFPLUGD_IFACE=""${1}""', 'case', '""${2}""', 'in', 'up)', 'COMMAND=disconnect', ';;', 'down)', 'COMMAND=reconnect', ';;', '*)', 'echo', '""${SELF}:', 'unknown', '$0', 'arguments:', '${@}""', '>&2', 'exit', '1', ';;', 'esac', 'fi', 'if', '[', '-z', '""$COMMAND""', '];', 'then', 'echo', '""${SELF}:', 'unknown', 'arguments:', '${@}""', '>&2', 'exit', '1', 'fi', 'for', 'CTRL', 'in', '/var/run/wpa_supplicant/*;', 'do', '[', '-S', '""${CTRL}""', ']', '||', 'continue', 'IFACE=""${CTRL#/var/run/wpa_supplicant/}""', 'wpa_action', '""${IFACE}""', 'check', '||', 'continue', 'if', '[', '""${IFPLUGD_IFACE}""', ']', '&&', '[', '""${IFPLUGD_IFACE}""', '=', '""${IFACE}""', '];', 'then', '#', 'if', 'ifplugd', 'is', 'managing', 'this', 'interface', '(not', 'likely', 'but..)', '#', 'do', 'nothing', 'continue', 'fi', 'wpa_cli', '-i', '""${IFACE}""', '""${COMMAND}""', 'done', '```']",challenge not surrounded by ''': ,
"package eskimo.invoker.enums;

public enum CompilationVerdict {
    SUCCESS,
    COMPILATION_ERROR,
    INTERNAL_INVOKER_ERROR
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'eskimo.invoker.enums;', 'public', 'enum', 'CompilationVerdict', '{', 'SUCCESS,', 'COMPILATION_ERROR,', 'INTERNAL_INVOKER_ERROR', '}', '```']",challenge not surrounded by ''': ,
"(function() {
  'use strict';

  angular.module('esn.calendar')
    .component('calendarConfigurationTabDelegation', calendarConfigurationTabDelegation());

  ////////////

  function calendarConfigurationTabDelegation() {
    return {
      templateUrl: '/calendar/app/calendar-configuration/calendar-configuration-tab-delegation/calendar-configuration-tab-delegation.html',
      bindings: {
        delegationTypes: '<',
        delegations: '=',
        selection: '=',
        goToEditDelegation: '=',
        newUsersGroups: '=',
        addUserGroup: '=',
        removeUserGroup: '=',
        onAddingUser: '='
      },
      controllerAs: '$ctrl'
    };
  }
})();
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```(function()', '{', ""'use"", ""strict';"", ""angular.module('esn.calendar')"", "".component('calendarConfigurationTabDelegation',"", 'calendarConfigurationTabDelegation());', '////////////', 'function', 'calendarConfigurationTabDelegation()', '{', 'return', '{', 'templateUrl:', ""'/calendar/app/calendar-configuration/calendar-configuration-tab-delegation/calendar-configuration-tab-delegation.html',"", 'bindings:', '{', 'delegationTypes:', ""'<',"", 'delegations:', ""'=',"", 'selection:', ""'=',"", 'goToEditDelegation:', ""'=',"", 'newUsersGroups:', ""'=',"", 'addUserGroup:', ""'=',"", 'removeUserGroup:', ""'=',"", 'onAddingUser:', ""'='"", '},', 'controllerAs:', ""'$ctrl'"", '};', '}', '})();', '```']",challenge not surrounded by ''': ,
"/* jshint expr: true, mocha:true */
(function () {
    'use strict';

    var fb = require('../lib');
    var assert = require('assert');

    var options = {
        host: 'rf-server',
        port: '3050',
        database: 'd:/bases/test/node_firebird.fdb',
        user: 'SYSDBA',
        password: 'masterkey'
    };

    describe('tr', function () {
        it(""read transaction shouldn't modify data"", function (done) {
            fb.attach(options, function (err, db) {
                assert.ifError(err);

                db.transaction(fb.ISOLATION_READ, function (err, transaction) {
                    assert.ifError(err);

                    transaction.query('INSERT INTO test_table (int_field) VALUES (1) ', function (err) {
                        assert.notEqual(err, null);
                        assert.equal(err.code, 335544361);

                        transaction.commit(function (err) {
                            assert.ifError(err);
                            done();
                        });
                    });
                });
            });
        });

        it('should execute block without return value', function (done) {
            this.timeout(500);

            var sql = """" +
                ""EXECUTE BLOCK "" +
                ""AS "" +
                ""  DECLARE VARIABLE key BIGINT; "" +
                ""BEGIN "" +
                ""  key = 1; "" +
                ""END"";

            fb.attach(options, function (err, db) {
                assert.ifError(err);

                db.transaction(fb.ISOLATION_READ, function (err, transaction) {
                    assert.ifError(err);

                    transaction.query(sql, function (err) {
                        assert.equal(err, null);

                        transaction.commit(function (err) {
                            assert.ifError(err);
                            done();
                        });
                    });
                });
            });
        });

        it('can fetch many rows', (done) => {
            var sql = """" +
                ""EXECUTE BLOCK \n"" +
                ""RETURNS (val INTEGER) \n"" +
                ""AS \n"" +
                ""BEGIN \n"" +
                ""  val = 0; \n"" +
                ""  WHILE (val < 50000) DO \n"" +
                ""  BEGIN \n"" +
                ""    val = val + 1; \n"" +
                ""    SUSPEND; \n"" +
                ""  END \n"" +
                ""END"";

            fb.attach(options, (err, db) => {
                assert.ifError(err);

                db.transaction(fb.ISOLATION_READ, (err, transaction) => {
                    assert.ifError(err);

                    transaction.query(sql, (err, result) => {
                        assert.equal(err, null);
                        assert.notEqual(result, null);
                        assert.equal(result.length, 50000);

                        transaction.commit((err) => {
                            assert.ifError(err);
                            done();
                        });
                    });
                });
            });
        });
    });
})();
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', 'jshint', 'expr:', 'true,', 'mocha:true', '*/', '(function', '()', '{', ""'use"", ""strict';"", 'var', 'fb', '=', ""require('../lib');"", 'var', 'assert', '=', ""require('assert');"", 'var', 'options', '=', '{', 'host:', ""'rf-server',"", 'port:', ""'3050',"", 'database:', ""'d:/bases/test/node_firebird.fdb',"", 'user:', ""'SYSDBA',"", 'password:', ""'masterkey'"", '};', ""describe('tr',"", 'function', '()', '{', 'it(""read', 'transaction', ""shouldn't"", 'modify', 'data"",', 'function', '(done)', '{', 'fb.attach(options,', 'function', '(err,', 'db)', '{', 'assert.ifError(err);', 'db.transaction(fb.ISOLATION_READ,', 'function', '(err,', 'transaction)', '{', 'assert.ifError(err);', ""transaction.query('INSERT"", 'INTO', 'test_table', '(int_field)', 'VALUES', '(1)', ""',"", 'function', '(err)', '{', 'assert.notEqual(err,', 'null);', 'assert.equal(err.code,', '335544361);', 'transaction.commit(function', '(err)', '{', 'assert.ifError(err);', 'done();', '});', '});', '});', '});', '});', ""it('should"", 'execute', 'block', 'without', 'return', ""value',"", 'function', '(done)', '{', 'this.timeout(500);', 'var', 'sql', '=', '""""', '+', '""EXECUTE', 'BLOCK', '""', '+', '""AS', '""', '+', '""', 'DECLARE', 'VARIABLE', 'key', 'BIGINT;', '""', '+', '""BEGIN', '""', '+', '""', 'key', '=', '1;', '""', '+', '""END"";', 'fb.attach(options,', 'function', '(err,', 'db)', '{', 'assert.ifError(err);', 'db.transaction(fb.ISOLATION_READ,', 'function', '(err,', 'transaction)', '{', 'assert.ifError(err);', 'transaction.query(sql,', 'function', '(err)', '{', 'assert.equal(err,', 'null);', 'transaction.commit(function', '(err)', '{', 'assert.ifError(err);', 'done();', '});', '});', '});', '});', '});', ""it('can"", 'fetch', 'many', ""rows',"", '(done)', '=>', '{', 'var', 'sql', '=', '""""', '+', '""EXECUTE', 'BLOCK', '\\n""', '+', '""RETURNS', '(val', 'INTEGER)', '\\n""', '+', '""AS', '\\n""', '+', '""BEGIN', '\\n""', '+', '""', 'val', '=', '0;', '\\n""', '+', '""', 'WHILE', '(val', '<', '50000)', 'DO', '\\n""', '+', '""', 'BEGIN', '\\n""', '+', '""', 'val', '=', 'val', '+', '1;', '\\n""', '+', '""', 'SUSPEND;', '\\n""', '+', '""', 'END', '\\n""', '+', '""END"";', 'fb.attach(options,', '(err,', 'db)', '=>', '{', 'assert.ifError(err);', 'db.transaction(fb.ISOLATION_READ,', '(err,', 'transaction)', '=>', '{', 'assert.ifError(err);', 'transaction.query(sql,', '(err,', 'result)', '=>', '{', 'assert.equal(err,', 'null);', 'assert.notEqual(result,', 'null);', 'assert.equal(result.length,', '50000);', 'transaction.commit((err)', '=>', '{', 'assert.ifError(err);', 'done();', '});', '});', '});', '});', '});', '});', '})();', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright (C) 2014-2015 LinkedIn Corp. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License""); you may not use
 * this file except in compliance with the License. You may obtain a copy of the
 * License at  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed
 * under the License is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied.
 */

package gobblin.yarn.event;

import java.util.Properties;


/**
 * A type of events for the arrival of a new job configuration to be used with a
 * {@link com.google.common.eventbus.EventBus}.
 *
 * @author Yinan Li
 */
public class NewJobConfigArrivalEvent {

  private final String jobName;
  private final Properties jobConfig;

  public NewJobConfigArrivalEvent(String jobName, Properties jobConfig) {
    this.jobName = jobName;
    this.jobConfig = new Properties();
    this.jobConfig.putAll(jobConfig);
  }

  /**
   * Get the job name.
   *
   * @return the job name
   */
  public String getJobName() {
    return this.jobName;
  }

  /**
   * Get the job config in a {@link Properties} object.
   *
   * @return the job config in a {@link Properties} object
   */
  public Properties getJobConfig() {
    return this.jobConfig;
  }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '(C)', '2014-2015', 'LinkedIn', 'Corp.', 'All', 'rights', 'reserved.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', 'you', 'may', 'not', 'use', '*', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', '*', 'License', 'at', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', 'distributed', '*', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', 'WITHOUT', 'WARRANTIES', 'OR', '*', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*/', 'package', 'gobblin.yarn.event;', 'import', 'java.util.Properties;', '/**', '*', 'A', 'type', 'of', 'events', 'for', 'the', 'arrival', 'of', 'a', 'new', 'job', 'configuration', 'to', 'be', 'used', 'with', 'a', '*', '{@link', 'com.google.common.eventbus.EventBus}.', '*', '*', '@author', 'Yinan', 'Li', '*/', 'public', 'class', 'NewJobConfigArrivalEvent', '{', 'private', 'final', 'String', 'jobName;', 'private', 'final', 'Properties', 'jobConfig;', 'public', 'NewJobConfigArrivalEvent(String', 'jobName,', 'Properties', 'jobConfig)', '{', 'this.jobName', '=', 'jobName;', 'this.jobConfig', '=', 'new', 'Properties();', 'this.jobConfig.putAll(jobConfig);', '}', '/**', '*', 'Get', 'the', 'job', 'name.', '*', '*', '@return', 'the', 'job', 'name', '*/', 'public', 'String', 'getJobName()', '{', 'return', 'this.jobName;', '}', '/**', '*', 'Get', 'the', 'job', 'config', 'in', 'a', '{@link', 'Properties}', 'object.', '*', '*', '@return', 'the', 'job', 'config', 'in', 'a', '{@link', 'Properties}', 'object', '*/', 'public', 'Properties', 'getJobConfig()', '{', 'return', 'this.jobConfig;', '}', '}', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright 2010-2016 Amazon.com, Inc. or its affiliates. All Rights
 * Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 *
 *  http://aws.amazon.com/apache2.0
 *
 * or in the ""license"" file accompanying this file. This file is distributed
 * on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

package com.amazonaws.services.importexport.model.transform;

import org.w3c.dom.Node;

import com.amazonaws.AmazonServiceException;
import com.amazonaws.util.XpathUtils;
import com.amazonaws.transform.StandardErrorUnmarshaller;

import com.amazonaws.services.importexport.model.ExpiredJobIdException;

public class ExpiredJobIdExceptionUnmarshaller extends
        StandardErrorUnmarshaller {

    public ExpiredJobIdExceptionUnmarshaller() {
        super(ExpiredJobIdException.class);
    }

    @Override
    public AmazonServiceException unmarshall(Node node) throws Exception {
        // Bail out if this isn't the right error code that this
        // marshaller understands
        String errorCode = parseErrorCode(node);
        if (errorCode == null || !errorCode.equals(""ExpiredJobIdException""))
            return null;

        ExpiredJobIdException e = (ExpiredJobIdException) super
                .unmarshall(node);

        return e;
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '2010-2016', 'Amazon.com,', 'Inc.', 'or', 'its', 'affiliates.', 'All', 'Rights', '*', 'Reserved.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"").', '*', 'You', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'A', 'copy', 'of', 'the', 'License', 'is', 'located', 'at', '*', '*', 'http://aws.amazon.com/apache2.0', '*', '*', 'or', 'in', 'the', '""license""', 'file', 'accompanying', 'this', 'file.', 'This', 'file', 'is', 'distributed', '*', 'on', 'an', '""AS', 'IS""', 'BASIS,', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', '*', 'express', 'or', 'implied.', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', '*', 'permissions', 'and', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'com.amazonaws.services.importexport.model.transform;', 'import', 'org.w3c.dom.Node;', 'import', 'com.amazonaws.AmazonServiceException;', 'import', 'com.amazonaws.util.XpathUtils;', 'import', 'com.amazonaws.transform.StandardErrorUnmarshaller;', 'import', 'com.amazonaws.services.importexport.model.ExpiredJobIdException;', 'public', 'class', 'ExpiredJobIdExceptionUnmarshaller', 'extends', 'StandardErrorUnmarshaller', '{', 'public', 'ExpiredJobIdExceptionUnmarshaller()', '{', 'super(ExpiredJobIdException.class);', '}', '@Override', 'public', 'AmazonServiceException', 'unmarshall(Node', 'node)', 'throws', 'Exception', '{', '//', 'Bail', 'out', 'if', 'this', ""isn't"", 'the', 'right', 'error', 'code', 'that', 'this', '//', 'marshaller', 'understands', 'String', 'errorCode', '=', 'parseErrorCode(node);', 'if', '(errorCode', '==', 'null', '||', '!errorCode.equals(""ExpiredJobIdException""))', 'return', 'null;', 'ExpiredJobIdException', 'e', '=', '(ExpiredJobIdException)', 'super', '.unmarshall(node);', 'return', 'e;', '}', '}', '```']",challenge not surrounded by ''': ,
"/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * ""License""); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.hadoop.hbase.master.procedure;

import org.apache.hadoop.hbase.TableName;
import org.apache.hadoop.hbase.procedure2.LockStatus;
import org.apache.hadoop.hbase.procedure2.Procedure;
import org.apache.yetus.audience.InterfaceAudience;

@InterfaceAudience.Private
class TableQueue extends Queue<TableName> {
  private final LockStatus namespaceLockStatus;

  public TableQueue(TableName tableName, int priority, LockStatus tableLock,
      LockStatus namespaceLockStatus) {
    super(tableName, priority, tableLock);
    this.namespaceLockStatus = namespaceLockStatus;
  }

  @Override
  public boolean isAvailable() {
    return !isEmpty() && !namespaceLockStatus.hasExclusiveLock();
  }

  @Override
  public boolean requireExclusiveLock(Procedure<?> proc) {
    return requireTableExclusiveLock((TableProcedureInterface) proc);
  }

  /**
   * @param proc must not be null
   */
  private static boolean requireTableExclusiveLock(TableProcedureInterface proc) {
    switch (proc.getTableOperationType()) {
      case CREATE:
      case DELETE:
      case DISABLE:
      case ENABLE:
        return true;
      case EDIT:
        // we allow concurrent edit on the ns family in meta table
        return !proc.getTableName().equals(TableProcedureInterface.DUMMY_NAMESPACE_TABLE_NAME);
      case READ:
        return false;
      // region operations are using the shared-lock on the table
      // and then they will grab an xlock on the region.
      case REGION_SPLIT:
      case REGION_MERGE:
      case REGION_ASSIGN:
      case REGION_UNASSIGN:
      case REGION_EDIT:
      case REGION_GC:
      case MERGED_REGIONS_GC:
        return false;
      default:
        break;
    }
    throw new UnsupportedOperationException(""unexpected type "" + proc.getTableOperationType());
  }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', 'Licensed', 'to', 'the', 'Apache', 'Software', 'Foundation', '(ASF)', 'under', 'one', '*', 'or', 'more', 'contributor', 'license', 'agreements.', 'See', 'the', 'NOTICE', 'file', '*', 'distributed', 'with', 'this', 'work', 'for', 'additional', 'information', '*', 'regarding', 'copyright', 'ownership.', 'The', 'ASF', 'licenses', 'this', 'file', '*', 'to', 'you', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '*', '""License"");', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', '*', 'with', 'the', 'License.', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'org.apache.hadoop.hbase.master.procedure;', 'import', 'org.apache.hadoop.hbase.TableName;', 'import', 'org.apache.hadoop.hbase.procedure2.LockStatus;', 'import', 'org.apache.hadoop.hbase.procedure2.Procedure;', 'import', 'org.apache.yetus.audience.InterfaceAudience;', '@InterfaceAudience.Private', 'class', 'TableQueue', 'extends', 'Queue<TableName>', '{', 'private', 'final', 'LockStatus', 'namespaceLockStatus;', 'public', 'TableQueue(TableName', 'tableName,', 'int', 'priority,', 'LockStatus', 'tableLock,', 'LockStatus', 'namespaceLockStatus)', '{', 'super(tableName,', 'priority,', 'tableLock);', 'this.namespaceLockStatus', '=', 'namespaceLockStatus;', '}', '@Override', 'public', 'boolean', 'isAvailable()', '{', 'return', '!isEmpty()', '&&', '!namespaceLockStatus.hasExclusiveLock();', '}', '@Override', 'public', 'boolean', 'requireExclusiveLock(Procedure<?>', 'proc)', '{', 'return', 'requireTableExclusiveLock((TableProcedureInterface)', 'proc);', '}', '/**', '*', '@param', 'proc', 'must', 'not', 'be', 'null', '*/', 'private', 'static', 'boolean', 'requireTableExclusiveLock(TableProcedureInterface', 'proc)', '{', 'switch', '(proc.getTableOperationType())', '{', 'case', 'CREATE:', 'case', 'DELETE:', 'case', 'DISABLE:', 'case', 'ENABLE:', 'return', 'true;', 'case', 'EDIT:', '//', 'we', 'allow', 'concurrent', 'edit', 'on', 'the', 'ns', 'family', 'in', 'meta', 'table', 'return', '!proc.getTableName().equals(TableProcedureInterface.DUMMY_NAMESPACE_TABLE_NAME);', 'case', 'READ:', 'return', 'false;', '//', 'region', 'operations', 'are', 'using', 'the', 'shared-lock', 'on', 'the', 'table', '//', 'and', 'then', 'they', 'will', 'grab', 'an', 'xlock', 'on', 'the', 'region.', 'case', 'REGION_SPLIT:', 'case', 'REGION_MERGE:', 'case', 'REGION_ASSIGN:', 'case', 'REGION_UNASSIGN:', 'case', 'REGION_EDIT:', 'case', 'REGION_GC:', 'case', 'MERGED_REGIONS_GC:', 'return', 'false;', 'default:', 'break;', '}', 'throw', 'new', 'UnsupportedOperationException(""unexpected', 'type', '""', '+', 'proc.getTableOperationType());', '}', '}', '```']",challenge not surrounded by ''': ,
"import Helper, { states } from './_helper';
import { module, test } from 'qunit';

module('Integration | ORM | Belongs To | Named Reflexive | association #create', function(hooks) {
  hooks.beforeEach(function() {
    this.helper = new Helper();
  });

  /*
    The model can create a belongs-to association, for all states
  */
  states.forEach((state) => {

    test(`a ${state} can create an associated parent`, function(assert) {
      let [ user ] = this.helper[state]();

      let ganon = user.createBestFriend({ name: 'Ganon' });

      assert.ok(ganon.id, 'the parent was persisted');
      assert.deepEqual(user.bestFriend.attrs, ganon.attrs);
      assert.equal(user.bestFriendId, ganon.id);
      assert.equal(this.helper.schema.users.find(user.id).bestFriendId, ganon.id, 'the user was persisted');
    });

  });
});
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'Helper,', '{', 'states', '}', 'from', ""'./_helper';"", 'import', '{', 'module,', 'test', '}', 'from', ""'qunit';"", ""module('Integration"", '|', 'ORM', '|', 'Belongs', 'To', '|', 'Named', 'Reflexive', '|', 'association', ""#create',"", 'function(hooks)', '{', 'hooks.beforeEach(function()', '{', 'this.helper', '=', 'new', 'Helper();', '});', '/*', 'The', 'model', 'can', 'create', 'a', 'belongs-to', 'association,', 'for', 'all', 'states', '*/', 'states.forEach((state)', '=>', '{', 'test(`a', '${state}', 'can', 'create', 'an', 'associated', 'parent`,', 'function(assert)', '{', 'let', '[', 'user', ']', '=', 'this.helper[state]();', 'let', 'ganon', '=', 'user.createBestFriend({', 'name:', ""'Ganon'"", '});', 'assert.ok(ganon.id,', ""'the"", 'parent', 'was', ""persisted');"", 'assert.deepEqual(user.bestFriend.attrs,', 'ganon.attrs);', 'assert.equal(user.bestFriendId,', 'ganon.id);', 'assert.equal(this.helper.schema.users.find(user.id).bestFriendId,', 'ganon.id,', ""'the"", 'user', 'was', ""persisted');"", '});', '});', '});', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"" ""http://www.w3.org/TR/html4/loose.dtd"">
<!-- NewPage -->
<html lang=""en"">
<head>
<!-- Generated by javadoc (1.8.0) on Thu Jun 21 00:32:55 EDT 2018 -->
<meta http-equiv=""Content-Type"" content=""text/html; charset=UTF-8"">
<title>Uses of Class org.owasp.appsensor.analysis.AggregateEventAnalysisEngine (appsensor-parent 2.3.3 API)</title>
<meta name=""date"" content=""2018-06-21"">
<link rel=""stylesheet"" type=""text/css"" href=""../../../../../stylesheet.css"" title=""Style"">
<script type=""text/javascript"" src=""../../../../../script.js""></script>
</head>
<body>
<script type=""text/javascript""><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title=""Uses of Class org.owasp.appsensor.analysis.AggregateEventAnalysisEngine (appsensor-parent 2.3.3 API)"";
        }
    }
    catch(err) {
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<div class=""header"">
<h2 title=""Uses of Class org.owasp.appsensor.analysis.AggregateEventAnalysisEngine"" class=""title"">Uses of Class<br>org.owasp.appsensor.analysis.AggregateEventAnalysisEngine</h2>
</div>
<div class=""classUseContainer"">No usage of org.owasp.appsensor.analysis.AggregateEventAnalysisEngine</div>
<p class=""legalCopy""><small>Copyright &#169; 2018 <a href=""http://www.owasp.org"">The Open Web Application Security Project (OWASP)</a>. All rights reserved.</small></p>
</body>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'HTML', 'PUBLIC', '""-//W3C//DTD', 'HTML', '4.01', 'Transitional//EN""', '""http://www.w3.org/TR/html4/loose.dtd"">', '<!--', 'NewPage', '-->', '<html', 'lang=""en"">', '<head>', '<!--', 'Generated', 'by', 'javadoc', '(1.8.0)', 'on', 'Thu', 'Jun', '21', '00:32:55', 'EDT', '2018', '-->', '<meta', 'http-equiv=""Content-Type""', 'content=""text/html;', 'charset=UTF-8"">', '<title>Uses', 'of', 'Class', 'org.owasp.appsensor.analysis.AggregateEventAnalysisEngine', '(appsensor-parent', '2.3.3', 'API)</title>', '<meta', 'name=""date""', 'content=""2018-06-21"">', '<link', 'rel=""stylesheet""', 'type=""text/css""', 'href=""../../../../../stylesheet.css""', 'title=""Style"">', '<script', 'type=""text/javascript""', 'src=""../../../../../script.js""></script>', '</head>', '<body>', '<script', 'type=""text/javascript""><!--', 'try', '{', 'if', ""(location.href.indexOf('is-external=true')"", '==', '-1)', '{', 'parent.document.title=""Uses', 'of', 'Class', 'org.owasp.appsensor.analysis.AggregateEventAnalysisEngine', '(appsensor-parent', '2.3.3', 'API)"";', '}', '}', 'catch(err)', '{', '}', '//-->', '</script>', '<noscript>', '<div>JavaScript', 'is', 'disabled', 'on', 'your', 'browser.</div>', '</noscript>', '<div', 'class=""header"">', '<h2', 'title=""Uses', 'of', 'Class', 'org.owasp.appsensor.analysis.AggregateEventAnalysisEngine""', 'class=""title"">Uses', 'of', 'Class<br>org.owasp.appsensor.analysis.AggregateEventAnalysisEngine</h2>', '</div>', '<div', 'class=""classUseContainer"">No', 'usage', 'of', 'org.owasp.appsensor.analysis.AggregateEventAnalysisEngine</div>', '<p', 'class=""legalCopy""><small>Copyright', '&#169;', '2018', '<a', 'href=""http://www.owasp.org"">The', 'Open', 'Web', 'Application', 'Security', 'Project', '(OWASP)</a>.', 'All', 'rights', 'reserved.</small></p>', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"package org.jenkinsci.plugins.codedx.model;

import java.io.Serializable;
import java.util.LinkedList;
import java.util.List;

import org.kohsuke.stapler.export.Exported;

/**
 *
 * @author anthonyd
 *
 */
public class CodeDxReportStatistics implements Serializable{

	/** Serial version UID. */
	private static final long serialVersionUID = 0L;

	private List<CodeDxGroupStatistics> statistics;

	public CodeDxReportStatistics(List<CodeDxGroupStatistics> statistics) {

		System.out.println(""Statistics is: "" + statistics);
		this.statistics = statistics;
	}

	@Exported(name=""groups"")
	public List<CodeDxGroupStatistics> getStatistics() {
		return statistics;
	}

	@Exported(name=""totalFindings"")
	public int getFindings() {
		int findings = 0;

		for(CodeDxGroupStatistics it : statistics) {
			findings += it.getFindings();
		}

		return findings;
	}

	public List<String> getAllGroups() {
		List<String> groups = new LinkedList<String>();

		for(CodeDxGroupStatistics it : statistics) {
			groups.add(it.getGroup());
		}

		return groups;
	}

	public CodeDxGroupStatistics getGroup(String group) {
		for(CodeDxGroupStatistics it : statistics) {
			if(it.getGroup().equals(group)) {
				return it;
			}
		}

		return new CodeDxGroupStatistics(group, 0);
	}
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'org.jenkinsci.plugins.codedx.model;', 'import', 'java.io.Serializable;', 'import', 'java.util.LinkedList;', 'import', 'java.util.List;', 'import', 'org.kohsuke.stapler.export.Exported;', '/**', '*', '*', '@author', 'anthonyd', '*', '*/', 'public', 'class', 'CodeDxReportStatistics', 'implements', 'Serializable{', '/**', 'Serial', 'version', 'UID.', '*/', 'private', 'static', 'final', 'long', 'serialVersionUID', '=', '0L;', 'private', 'List<CodeDxGroupStatistics>', 'statistics;', 'public', 'CodeDxReportStatistics(List<CodeDxGroupStatistics>', 'statistics)', '{', 'System.out.println(""Statistics', 'is:', '""', '+', 'statistics);', 'this.statistics', '=', 'statistics;', '}', '@Exported(name=""groups"")', 'public', 'List<CodeDxGroupStatistics>', 'getStatistics()', '{', 'return', 'statistics;', '}', '@Exported(name=""totalFindings"")', 'public', 'int', 'getFindings()', '{', 'int', 'findings', '=', '0;', 'for(CodeDxGroupStatistics', 'it', ':', 'statistics)', '{', 'findings', '+=', 'it.getFindings();', '}', 'return', 'findings;', '}', 'public', 'List<String>', 'getAllGroups()', '{', 'List<String>', 'groups', '=', 'new', 'LinkedList<String>();', 'for(CodeDxGroupStatistics', 'it', ':', 'statistics)', '{', 'groups.add(it.getGroup());', '}', 'return', 'groups;', '}', 'public', 'CodeDxGroupStatistics', 'getGroup(String', 'group)', '{', 'for(CodeDxGroupStatistics', 'it', ':', 'statistics)', '{', 'if(it.getGroup().equals(group))', '{', 'return', 'it;', '}', '}', 'return', 'new', 'CodeDxGroupStatistics(group,', '0);', '}', '}', '```']",challenge not surrounded by ''': ,
"package com.oshi.genericsettings.java.utils;


import com.oshi.libgenericsettings.data.CheckableSubItem;

import java.util.Arrays;
import java.util.List;

public class ArrayUtils {

    public static List<String> getNewSimpleItemsList() {
        return Arrays.asList(""First"", ""Rocket man"", ""Third!"", ""Last"");
    }

    public static List<CheckableSubItem> getNewCheckableItemsList() {
        return Arrays.asList(
                new CheckableSubItem(""First""),
                new CheckableSubItem(""Second""),
                new CheckableSubItem(""Third""));
    }

    public static List<String> createSimpleItemsArray(String... items) {
        return Arrays.asList(items);
    }

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.oshi.genericsettings.java.utils;', 'import', 'com.oshi.libgenericsettings.data.CheckableSubItem;', 'import', 'java.util.Arrays;', 'import', 'java.util.List;', 'public', 'class', 'ArrayUtils', '{', 'public', 'static', 'List<String>', 'getNewSimpleItemsList()', '{', 'return', 'Arrays.asList(""First"",', '""Rocket', 'man"",', '""Third!"",', '""Last"");', '}', 'public', 'static', 'List<CheckableSubItem>', 'getNewCheckableItemsList()', '{', 'return', 'Arrays.asList(', 'new', 'CheckableSubItem(""First""),', 'new', 'CheckableSubItem(""Second""),', 'new', 'CheckableSubItem(""Third""));', '}', 'public', 'static', 'List<String>', 'createSimpleItemsArray(String...', 'items)', '{', 'return', 'Arrays.asList(items);', '}', '}', '```']",challenge not surrounded by ''': ,
"/*******************************************************************************
 * Copyright (c) 2013, Daniel Murphy
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 * 	* Redistributions of source code must retain the above copyright notice,
 * 	  this list of conditions and the following disclaimer.
 * 	* Redistributions in binary form must reproduce the above copyright notice,
 * 	  this list of conditions and the following disclaimer in the documentation
 * 	  and/or other materials provided with the distribution.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 ******************************************************************************/
package com.jbox2d.callbacks;

import com.jbox2d.collision.RayCastInput;
import com.jbox2d.collision.broadphase.DynamicTree;

// updated to rev 100

/**
 * callback for {@link DynamicTree}
 * @author Daniel Murphy
 *
 */
public interface TreeRayCastCallback {
	/**
	 * 
	 * @param input
	 * @param nodeId
	 * @return the fraction to the node
	 */
	public float raycastCallback( RayCastInput input, int nodeId);
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*******************************************************************************', '*', 'Copyright', '(c)', '2013,', 'Daniel', 'Murphy', '*', 'All', 'rights', 'reserved.', '*', '*', 'Redistribution', 'and', 'use', 'in', 'source', 'and', 'binary', 'forms,', 'with', 'or', 'without', 'modification,', '*', 'are', 'permitted', 'provided', 'that', 'the', 'following', 'conditions', 'are', 'met:', '*', '*', 'Redistributions', 'of', 'source', 'code', 'must', 'retain', 'the', 'above', 'copyright', 'notice,', '*', 'this', 'list', 'of', 'conditions', 'and', 'the', 'following', 'disclaimer.', '*', '*', 'Redistributions', 'in', 'binary', 'form', 'must', 'reproduce', 'the', 'above', 'copyright', 'notice,', '*', 'this', 'list', 'of', 'conditions', 'and', 'the', 'following', 'disclaimer', 'in', 'the', 'documentation', '*', 'and/or', 'other', 'materials', 'provided', 'with', 'the', 'distribution.', '*', '*', 'THIS', 'SOFTWARE', 'IS', 'PROVIDED', 'BY', 'THE', 'COPYRIGHT', 'HOLDERS', 'AND', 'CONTRIBUTORS', '""AS', 'IS""', 'AND', '*', 'ANY', 'EXPRESS', 'OR', 'IMPLIED', 'WARRANTIES,', 'INCLUDING,', 'BUT', 'NOT', 'LIMITED', 'TO,', 'THE', 'IMPLIED', '*', 'WARRANTIES', 'OF', 'MERCHANTABILITY', 'AND', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE', 'ARE', 'DISCLAIMED.', '*', 'IN', 'NO', 'EVENT', 'SHALL', 'THE', 'COPYRIGHT', 'HOLDER', 'OR', 'CONTRIBUTORS', 'BE', 'LIABLE', 'FOR', 'ANY', 'DIRECT,', '*', 'INDIRECT,', 'INCIDENTAL,', 'SPECIAL,', 'EXEMPLARY,', 'OR', 'CONSEQUENTIAL', 'DAMAGES', '(INCLUDING,', 'BUT', '*', 'NOT', 'LIMITED', 'TO,', 'PROCUREMENT', 'OF', 'SUBSTITUTE', 'GOODS', 'OR', 'SERVICES;', 'LOSS', 'OF', 'USE,', 'DATA,', 'OR', '*', 'PROFITS;', 'OR', 'BUSINESS', 'INTERRUPTION)', 'HOWEVER', 'CAUSED', 'AND', 'ON', 'ANY', 'THEORY', 'OF', 'LIABILITY,', '*', 'WHETHER', 'IN', 'CONTRACT,', 'STRICT', 'LIABILITY,', 'OR', 'TORT', '(INCLUDING', 'NEGLIGENCE', 'OR', 'OTHERWISE)', '*', 'ARISING', 'IN', 'ANY', 'WAY', 'OUT', 'OF', 'THE', 'USE', 'OF', 'THIS', 'SOFTWARE,', 'EVEN', 'IF', 'ADVISED', 'OF', 'THE', '*', 'POSSIBILITY', 'OF', 'SUCH', 'DAMAGE.', '******************************************************************************/', 'package', 'com.jbox2d.callbacks;', 'import', 'com.jbox2d.collision.RayCastInput;', 'import', 'com.jbox2d.collision.broadphase.DynamicTree;', '//', 'updated', 'to', 'rev', '100', '/**', '*', 'callback', 'for', '{@link', 'DynamicTree}', '*', '@author', 'Daniel', 'Murphy', '*', '*/', 'public', 'interface', 'TreeRayCastCallback', '{', '/**', '*', '*', '@param', 'input', '*', '@param', 'nodeId', '*', '@return', 'the', 'fraction', 'to', 'the', 'node', '*/', 'public', 'float', 'raycastCallback(', 'RayCastInput', 'input,', 'int', 'nodeId);', '}', '```']",challenge not surrounded by ''': ,
"import React from 'react';
import SidebarBody from ""./sidebar-body"";
import SidebarHeader from ""./sidebar-header"";

const Sidebar = ({cards, allCards, info, mode, filters, inExtensions, inDeckCreation, handleFilterViewToggle, handleFilterReset, handleInputChange, handleSliderClick, handleIconClick}) => {


  return (
    <div className=""container__page--inner  container__page--left"">
      <SidebarHeader filters={filters}
                     inExtensions={inExtensions}
                     inDeckCreation={inDeckCreation}
                     handleFilterViewToggle={handleFilterViewToggle}
                     handleFilterReset={handleFilterReset} />
      <SidebarBody filters={filters}
                   info={info}
                   mode={mode}
                   cards={cards}
                   allCards={allCards}
                   inExtensions={inExtensions}
                   handleFilterReset={handleFilterReset}
                   handleInputChange={handleInputChange}
                   handleSliderClick={handleSliderClick}
                   handleIconClick={handleIconClick} />
    </div>
  );
};

export default Sidebar;","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'React', 'from', ""'react';"", 'import', 'SidebarBody', 'from', '""./sidebar-body"";', 'import', 'SidebarHeader', 'from', '""./sidebar-header"";', 'const', 'Sidebar', '=', '({cards,', 'allCards,', 'info,', 'mode,', 'filters,', 'inExtensions,', 'inDeckCreation,', 'handleFilterViewToggle,', 'handleFilterReset,', 'handleInputChange,', 'handleSliderClick,', 'handleIconClick})', '=>', '{', 'return', '(', '<div', 'className=""container__page--inner', 'container__page--left"">', '<SidebarHeader', 'filters={filters}', 'inExtensions={inExtensions}', 'inDeckCreation={inDeckCreation}', 'handleFilterViewToggle={handleFilterViewToggle}', 'handleFilterReset={handleFilterReset}', '/>', '<SidebarBody', 'filters={filters}', 'info={info}', 'mode={mode}', 'cards={cards}', 'allCards={allCards}', 'inExtensions={inExtensions}', 'handleFilterReset={handleFilterReset}', 'handleInputChange={handleInputChange}', 'handleSliderClick={handleSliderClick}', 'handleIconClick={handleIconClick}', '/>', '</div>', ');', '};', 'export', 'default', 'Sidebar;```']",challenge not surrounded by ''': ,
"/*
 * Copyright (c) 2010, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.wso2.developerstudio.eclipse.ds.customvalidator.utils;

public class DataserviceConstants {
	public static final String DATASERVICE_VALIDATOR_INTERFACE_NAME =
	                                                                  ""org.wso2.carbon.dataservices.core.validation.Validator"";

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '(c)', '2010,', 'WSO2', 'Inc.', '(http://www.wso2.org)', 'All', 'Rights', 'Reserved.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'org.wso2.developerstudio.eclipse.ds.customvalidator.utils;', 'public', 'class', 'DataserviceConstants', '{', 'public', 'static', 'final', 'String', 'DATASERVICE_VALIDATOR_INTERFACE_NAME', '=', '""org.wso2.carbon.dataservices.core.validation.Validator"";', '}', '```']",challenge not surrounded by ''': ,
"
package com.djs.learn.spring_sample.knight;

import org.apache.log4j.Logger;

import com.djs.learn.spring_sample.knightI.Knight;

public class KnightOfTheRoundTable extends AbstractKnight implements Knight
{
	private final Logger log = Logger.getLogger( KnightOfTheRoundTable.class );

	private final String name;
	private Quest quest;

	public KnightOfTheRoundTable( String name )
	{
		if (log.isTraceEnabled())
		{
			log.trace( ""New Knight of the round table = "" + name );
		}

		this.name = name;
	}

	@Override
	public String getName()
	{
		return name;
	}

	public void setQuest( Quest quest )
	{
		if (log.isInfoEnabled())
		{
			log.info( ""Assign a quest = "" + quest );
		}

		this.quest = quest;
	}

	@Override
	public Object embarkOnQuest() throws QuestFailedException
	{
		if (log.isInfoEnabled())
		{
			log.info( ""Embark on quest."" );
		}

		Object target = quest.embark();

		if (log.isInfoEnabled())
		{
			log.info( ""Got "" + target + ""."" );
		}

		return target;
	}

	@Override
	public String toString()
	{
		return ""Knight of the round table "" + name;
	}
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```', 'package', 'com.djs.learn.spring_sample.knight;', 'import', 'org.apache.log4j.Logger;', 'import', 'com.djs.learn.spring_sample.knightI.Knight;', 'public', 'class', 'KnightOfTheRoundTable', 'extends', 'AbstractKnight', 'implements', 'Knight', '{', 'private', 'final', 'Logger', 'log', '=', 'Logger.getLogger(', 'KnightOfTheRoundTable.class', ');', 'private', 'final', 'String', 'name;', 'private', 'Quest', 'quest;', 'public', 'KnightOfTheRoundTable(', 'String', 'name', ')', '{', 'if', '(log.isTraceEnabled())', '{', 'log.trace(', '""New', 'Knight', 'of', 'the', 'round', 'table', '=', '""', '+', 'name', ');', '}', 'this.name', '=', 'name;', '}', '@Override', 'public', 'String', 'getName()', '{', 'return', 'name;', '}', 'public', 'void', 'setQuest(', 'Quest', 'quest', ')', '{', 'if', '(log.isInfoEnabled())', '{', 'log.info(', '""Assign', 'a', 'quest', '=', '""', '+', 'quest', ');', '}', 'this.quest', '=', 'quest;', '}', '@Override', 'public', 'Object', 'embarkOnQuest()', 'throws', 'QuestFailedException', '{', 'if', '(log.isInfoEnabled())', '{', 'log.info(', '""Embark', 'on', 'quest.""', ');', '}', 'Object', 'target', '=', 'quest.embark();', 'if', '(log.isInfoEnabled())', '{', 'log.info(', '""Got', '""', '+', 'target', '+', '"".""', ');', '}', 'return', 'target;', '}', '@Override', 'public', 'String', 'toString()', '{', 'return', '""Knight', 'of', 'the', 'round', 'table', '""', '+', 'name;', '}', '}', '```']",challenge not surrounded by ''': ,
"""""""Let's Encrypt client errors.""""""


class LetsEncryptClientError(Exception):
    """"""Generic Let's Encrypt client error.""""""


class NetworkError(LetsEncryptClientError):
    """"""Network error.""""""


class UnexpectedUpdate(NetworkError):
    """"""Unexpected update.""""""


class LetsEncryptReverterError(LetsEncryptClientError):
    """"""Let's Encrypt Reverter error.""""""


# Auth Handler Errors
class AuthorizationError(LetsEncryptClientError):
    """"""Authorization error.""""""


class LetsEncryptContAuthError(AuthorizationError):
    """"""Let's Encrypt Continuity Authenticator error.""""""


class LetsEncryptDvAuthError(AuthorizationError):
    """"""Let's Encrypt DV Authenticator error.""""""


# Authenticator - Challenge specific errors
class LetsEncryptDvsniError(LetsEncryptDvAuthError):
    """"""Let's Encrypt DVSNI error.""""""


# Configurator Errors
class LetsEncryptConfiguratorError(LetsEncryptClientError):
    """"""Let's Encrypt Configurator error.""""""


class LetsEncryptNoInstallationError(LetsEncryptConfiguratorError):
    """"""Let's Encrypt No Installation error.""""""


class LetsEncryptMisconfigurationError(LetsEncryptConfiguratorError):
    """"""Let's Encrypt Misconfiguration error.""""""


class LetsEncryptRevokerError(LetsEncryptClientError):
    """"""Let's Encrypt Revoker error.""""""
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```""""""Let\'s', 'Encrypt', 'client', 'errors.""""""', 'class', 'LetsEncryptClientError(Exception):', '""""""Generic', ""Let's"", 'Encrypt', 'client', 'error.""""""', 'class', 'NetworkError(LetsEncryptClientError):', '""""""Network', 'error.""""""', 'class', 'UnexpectedUpdate(NetworkError):', '""""""Unexpected', 'update.""""""', 'class', 'LetsEncryptReverterError(LetsEncryptClientError):', '""""""Let\'s', 'Encrypt', 'Reverter', 'error.""""""', '#', 'Auth', 'Handler', 'Errors', 'class', 'AuthorizationError(LetsEncryptClientError):', '""""""Authorization', 'error.""""""', 'class', 'LetsEncryptContAuthError(AuthorizationError):', '""""""Let\'s', 'Encrypt', 'Continuity', 'Authenticator', 'error.""""""', 'class', 'LetsEncryptDvAuthError(AuthorizationError):', '""""""Let\'s', 'Encrypt', 'DV', 'Authenticator', 'error.""""""', '#', 'Authenticator', '-', 'Challenge', 'specific', 'errors', 'class', 'LetsEncryptDvsniError(LetsEncryptDvAuthError):', '""""""Let\'s', 'Encrypt', 'DVSNI', 'error.""""""', '#', 'Configurator', 'Errors', 'class', 'LetsEncryptConfiguratorError(LetsEncryptClientError):', '""""""Let\'s', 'Encrypt', 'Configurator', 'error.""""""', 'class', 'LetsEncryptNoInstallationError(LetsEncryptConfiguratorError):', '""""""Let\'s', 'Encrypt', 'No', 'Installation', 'error.""""""', 'class', 'LetsEncryptMisconfigurationError(LetsEncryptConfiguratorError):', '""""""Let\'s', 'Encrypt', 'Misconfiguration', 'error.""""""', 'class', 'LetsEncryptRevokerError(LetsEncryptClientError):', '""""""Let\'s', 'Encrypt', 'Revoker', 'error.""""""', '```']",challenge not surrounded by ''': ,
"/*
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.facebook.presto.mysql.util;

import java.net.InetAddress;
public class MySQLHost
{
     private InetAddress address;
     public MySQLHost(InetAddress address)
     {
         if (address == null) {
           throw new NullPointerException();
         }
         this.address = address;
     }
     public InetAddress getAddress()
     {
         return address;
     }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'com.facebook.presto.mysql.util;', 'import', 'java.net.InetAddress;', 'public', 'class', 'MySQLHost', '{', 'private', 'InetAddress', 'address;', 'public', 'MySQLHost(InetAddress', 'address)', '{', 'if', '(address', '==', 'null)', '{', 'throw', 'new', 'NullPointerException();', '}', 'this.address', '=', 'address;', '}', 'public', 'InetAddress', 'getAddress()', '{', 'return', 'address;', '}', '}', '```']",challenge not surrounded by ''': ,
"#include ""myxh_dvlistctrl.h""
#include <wx/dataview.h>
#include <wx/imaglist.h>
#include <wx/tokenzr.h>

MyWxDataViewListCtrlHandler::MyWxDataViewListCtrlHandler()
    : wxXmlResourceHandler()
{
    XRC_ADD_STYLE(wxDV_SINGLE);
    XRC_ADD_STYLE(wxDV_MULTIPLE);
    XRC_ADD_STYLE(wxDV_ROW_LINES);
    XRC_ADD_STYLE(wxDV_HORIZ_RULES);
    XRC_ADD_STYLE(wxDV_VERT_RULES);
    XRC_ADD_STYLE(wxDV_VARIABLE_LINE_HEIGHT);
    XRC_ADD_STYLE(wxDV_NO_HEADER);
    AddWindowStyles();
}

wxObject* MyWxDataViewListCtrlHandler::DoCreateResource()
{
    if(m_class == ""wxDataViewColumn"") {
        HandleListCol();

    } else {
        wxASSERT_MSG(m_class == ""wxDataViewListCtrl"", wxT(""can't handle unknown node""));

        return HandleListCtrl();
    }

    return m_parentAsWindow;
}

bool MyWxDataViewListCtrlHandler::CanHandle(wxXmlNode* node)
{
    return IsOfClass(node, ""wxDataViewListCtrl"") || IsOfClass(node, ""wxDataViewColumn"");
}

void MyWxDataViewListCtrlHandler::HandleListCol()
{
    // Add column to the wxDataViewListCtrl
    wxDataViewListCtrl* const list = wxDynamicCast(m_parentAsWindow, wxDataViewListCtrl);
    wxCHECK_RET(list, wxT(""must have wxDataViewListCtrl parent""));

    if(!HasParam(wxT(""coltype""))) { return; }

    // Column properties
    wxString coltype = GetText(""coltype"");
    int colwidth = GetLong(""width"", -1);
    wxString label = GetText(""label"");
    wxString salign = GetText(""align"", false);
    int style = GetLong(""style"", 0);
    wxString cellmode = GetText(""cellmode"", false);

    wxDataViewCellMode mode = wxDATAVIEW_CELL_INERT;
    if(cellmode == ""wxDATAVIEW_CELL_ACTIVATABLE"")
        mode = wxDATAVIEW_CELL_ACTIVATABLE;
    else if(cellmode == """")
        mode = wxDATAVIEW_CELL_EDITABLE;

    wxAlignment al = wxALIGN_LEFT;
    if(salign == ""wxALIGN_RIGHT"")
        al = wxALIGN_RIGHT;
    else if(salign == ""wxALIGN_CENTER"")
        al = wxALIGN_CENTER;

    if(coltype == ""bitmap"") {
        list->AppendBitmapColumn(label, list->GetColumnCount(), mode, colwidth, al, style);

    } else if(coltype == ""check"") {
        list->AppendToggleColumn(label, mode, colwidth, al, style);

    } else if(coltype == ""text"") {
        list->AppendTextColumn(label, mode, colwidth, al, style);

    } else if(coltype == ""icontext"") {
        list->AppendIconTextColumn(label, mode, colwidth, al, style);

    } else if(coltype == ""progress"") {
        list->AppendProgressColumn(label, mode, colwidth, al, style);

    } else if(coltype == ""choice"") {
        wxString content = GetText(""choices"", false);
        wxArrayString choices = ::wxStringTokenize(content, "","", wxTOKEN_STRTOK);
        list->AppendColumn(new wxDataViewColumn(label,
                                                new wxDataViewChoiceRenderer(choices, mode, wxDVR_DEFAULT_ALIGNMENT),
                                                list->GetColumnCount(), colwidth, al, style));
    }
}

wxDataViewListCtrl* MyWxDataViewListCtrlHandler::HandleListCtrl()
{
    XRC_MAKE_INSTANCE(list, wxDataViewListCtrl)

    list->Create(m_parentAsWindow, GetID(), GetPosition(), GetSize(), GetStyle());
    list->SetName(GetName());
    CreateChildrenPrivately(list);
    SetupWindow(list);
    return list;
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#include', '""myxh_dvlistctrl.h""', '#include', '<wx/dataview.h>', '#include', '<wx/imaglist.h>', '#include', '<wx/tokenzr.h>', 'MyWxDataViewListCtrlHandler::MyWxDataViewListCtrlHandler()', ':', 'wxXmlResourceHandler()', '{', 'XRC_ADD_STYLE(wxDV_SINGLE);', 'XRC_ADD_STYLE(wxDV_MULTIPLE);', 'XRC_ADD_STYLE(wxDV_ROW_LINES);', 'XRC_ADD_STYLE(wxDV_HORIZ_RULES);', 'XRC_ADD_STYLE(wxDV_VERT_RULES);', 'XRC_ADD_STYLE(wxDV_VARIABLE_LINE_HEIGHT);', 'XRC_ADD_STYLE(wxDV_NO_HEADER);', 'AddWindowStyles();', '}', 'wxObject*', 'MyWxDataViewListCtrlHandler::DoCreateResource()', '{', 'if(m_class', '==', '""wxDataViewColumn"")', '{', 'HandleListCol();', '}', 'else', '{', 'wxASSERT_MSG(m_class', '==', '""wxDataViewListCtrl"",', 'wxT(""can\'t', 'handle', 'unknown', 'node""));', 'return', 'HandleListCtrl();', '}', 'return', 'm_parentAsWindow;', '}', 'bool', 'MyWxDataViewListCtrlHandler::CanHandle(wxXmlNode*', 'node)', '{', 'return', 'IsOfClass(node,', '""wxDataViewListCtrl"")', '||', 'IsOfClass(node,', '""wxDataViewColumn"");', '}', 'void', 'MyWxDataViewListCtrlHandler::HandleListCol()', '{', '//', 'Add', 'column', 'to', 'the', 'wxDataViewListCtrl', 'wxDataViewListCtrl*', 'const', 'list', '=', 'wxDynamicCast(m_parentAsWindow,', 'wxDataViewListCtrl);', 'wxCHECK_RET(list,', 'wxT(""must', 'have', 'wxDataViewListCtrl', 'parent""));', 'if(!HasParam(wxT(""coltype"")))', '{', 'return;', '}', '//', 'Column', 'properties', 'wxString', 'coltype', '=', 'GetText(""coltype"");', 'int', 'colwidth', '=', 'GetLong(""width"",', '-1);', 'wxString', 'label', '=', 'GetText(""label"");', 'wxString', 'salign', '=', 'GetText(""align"",', 'false);', 'int', 'style', '=', 'GetLong(""style"",', '0);', 'wxString', 'cellmode', '=', 'GetText(""cellmode"",', 'false);', 'wxDataViewCellMode', 'mode', '=', 'wxDATAVIEW_CELL_INERT;', 'if(cellmode', '==', '""wxDATAVIEW_CELL_ACTIVATABLE"")', 'mode', '=', 'wxDATAVIEW_CELL_ACTIVATABLE;', 'else', 'if(cellmode', '==', '"""")', 'mode', '=', 'wxDATAVIEW_CELL_EDITABLE;', 'wxAlignment', 'al', '=', 'wxALIGN_LEFT;', 'if(salign', '==', '""wxALIGN_RIGHT"")', 'al', '=', 'wxALIGN_RIGHT;', 'else', 'if(salign', '==', '""wxALIGN_CENTER"")', 'al', '=', 'wxALIGN_CENTER;', 'if(coltype', '==', '""bitmap"")', '{', 'list->AppendBitmapColumn(label,', 'list->GetColumnCount(),', 'mode,', 'colwidth,', 'al,', 'style);', '}', 'else', 'if(coltype', '==', '""check"")', '{', 'list->AppendToggleColumn(label,', 'mode,', 'colwidth,', 'al,', 'style);', '}', 'else', 'if(coltype', '==', '""text"")', '{', 'list->AppendTextColumn(label,', 'mode,', 'colwidth,', 'al,', 'style);', '}', 'else', 'if(coltype', '==', '""icontext"")', '{', 'list->AppendIconTextColumn(label,', 'mode,', 'colwidth,', 'al,', 'style);', '}', 'else', 'if(coltype', '==', '""progress"")', '{', 'list->AppendProgressColumn(label,', 'mode,', 'colwidth,', 'al,', 'style);', '}', 'else', 'if(coltype', '==', '""choice"")', '{', 'wxString', 'content', '=', 'GetText(""choices"",', 'false);', 'wxArrayString', 'choices', '=', '::wxStringTokenize(content,', '"","",', 'wxTOKEN_STRTOK);', 'list->AppendColumn(new', 'wxDataViewColumn(label,', 'new', 'wxDataViewChoiceRenderer(choices,', 'mode,', 'wxDVR_DEFAULT_ALIGNMENT),', 'list->GetColumnCount(),', 'colwidth,', 'al,', 'style));', '}', '}', 'wxDataViewListCtrl*', 'MyWxDataViewListCtrlHandler::HandleListCtrl()', '{', 'XRC_MAKE_INSTANCE(list,', 'wxDataViewListCtrl)', 'list->Create(m_parentAsWindow,', 'GetID(),', 'GetPosition(),', 'GetSize(),', 'GetStyle());', 'list->SetName(GetName());', 'CreateChildrenPrivately(list);', 'SetupWindow(list);', 'return', 'list;', '}', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright (c) 2007, intarsys consulting GmbH
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * - Redistributions of source code must retain the above copyright notice,
 *   this list of conditions and the following disclaimer.
 *
 * - Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * - Neither the name of intarsys nor the names of its contributors may be used
 *   to endorse or promote products derived from this software without specific
 *   prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS""
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
package de.intarsys.tools.event;

/**
 * An event indicating the the request to positively terminate.
 * 
 */
public class OkRequestedEvent extends Event {
	public static final EventType ID = new EventType(OkRequestedEvent.class
			.getName());

	public OkRequestedEvent(Object source) {
		super(source);
	}

	@Override
	public EventType getEventType() {
		return ID;
	}
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '(c)', '2007,', 'intarsys', 'consulting', 'GmbH', '*', '*', 'Redistribution', 'and', 'use', 'in', 'source', 'and', 'binary', 'forms,', 'with', 'or', 'without', '*', 'modification,', 'are', 'permitted', 'provided', 'that', 'the', 'following', 'conditions', 'are', 'met:', '*', '*', '-', 'Redistributions', 'of', 'source', 'code', 'must', 'retain', 'the', 'above', 'copyright', 'notice,', '*', 'this', 'list', 'of', 'conditions', 'and', 'the', 'following', 'disclaimer.', '*', '*', '-', 'Redistributions', 'in', 'binary', 'form', 'must', 'reproduce', 'the', 'above', 'copyright', 'notice,', '*', 'this', 'list', 'of', 'conditions', 'and', 'the', 'following', 'disclaimer', 'in', 'the', 'documentation', '*', 'and/or', 'other', 'materials', 'provided', 'with', 'the', 'distribution.', '*', '*', '-', 'Neither', 'the', 'name', 'of', 'intarsys', 'nor', 'the', 'names', 'of', 'its', 'contributors', 'may', 'be', 'used', '*', 'to', 'endorse', 'or', 'promote', 'products', 'derived', 'from', 'this', 'software', 'without', 'specific', '*', 'prior', 'written', 'permission.', '*', '*', 'THIS', 'SOFTWARE', 'IS', 'PROVIDED', 'BY', 'THE', 'COPYRIGHT', 'HOLDERS', 'AND', 'CONTRIBUTORS', '""AS', 'IS""', '*', 'AND', 'ANY', 'EXPRESS', 'OR', 'IMPLIED', 'WARRANTIES,', 'INCLUDING,', 'BUT', 'NOT', 'LIMITED', 'TO,', 'THE', '*', 'IMPLIED', 'WARRANTIES', 'OF', 'MERCHANTABILITY', 'AND', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE', '*', 'ARE', 'DISCLAIMED.', 'IN', 'NO', 'EVENT', 'SHALL', 'THE', 'COPYRIGHT', 'OWNER', 'OR', 'CONTRIBUTORS', 'BE', '*', 'LIABLE', 'FOR', 'ANY', 'DIRECT,', 'INDIRECT,', 'INCIDENTAL,', 'SPECIAL,', 'EXEMPLARY,', 'OR', '*', 'CONSEQUENTIAL', 'DAMAGES', '(INCLUDING,', 'BUT', 'NOT', 'LIMITED', 'TO,', 'PROCUREMENT', 'OF', '*', 'SUBSTITUTE', 'GOODS', 'OR', 'SERVICES;', 'LOSS', 'OF', 'USE,', 'DATA,', 'OR', 'PROFITS;', 'OR', 'BUSINESS', '*', 'INTERRUPTION)', 'HOWEVER', 'CAUSED', 'AND', 'ON', 'ANY', 'THEORY', 'OF', 'LIABILITY,', 'WHETHER', 'IN', '*', 'CONTRACT,', 'STRICT', 'LIABILITY,', 'OR', 'TORT', '(INCLUDING', 'NEGLIGENCE', 'OR', 'OTHERWISE)', '*', 'ARISING', 'IN', 'ANY', 'WAY', 'OUT', 'OF', 'THE', 'USE', 'OF', 'THIS', 'SOFTWARE,', 'EVEN', 'IF', 'ADVISED', 'OF', 'THE', '*', 'POSSIBILITY', 'OF', 'SUCH', 'DAMAGE.', '*/', 'package', 'de.intarsys.tools.event;', '/**', '*', 'An', 'event', 'indicating', 'the', 'the', 'request', 'to', 'positively', 'terminate.', '*', '*/', 'public', 'class', 'OkRequestedEvent', 'extends', 'Event', '{', 'public', 'static', 'final', 'EventType', 'ID', '=', 'new', 'EventType(OkRequestedEvent.class', '.getName());', 'public', 'OkRequestedEvent(Object', 'source)', '{', 'super(source);', '}', '@Override', 'public', 'EventType', 'getEventType()', '{', 'return', 'ID;', '}', '}', '```']",challenge not surrounded by ''': ,
"const mv = require('mv');
const PDFImage = require('pdf-image').PDFImage;
const path = require('path');
const fs = require('fs');

const getDirectories = () => {
    const srcpath = path.join(__dirname, '../pdf');
    return fs.readdirSync(srcpath);
};

const getTemplateName = PDF => {
    return PDF.replace('.pdf', '');
};

const convert = async (PDF) => {
    const pdfImage = new PDFImage(path.join(__dirname, '../pdf/' + PDF));
    await pdfImage.convertPage(0);
};

const directories = getDirectories();
directories.forEach(async (dir) => {
    try {
        await convert(dir);
    } catch (e) {
        console.dir(e);
    }
    const source = path.join(__dirname, '../pdf/' + getTemplateName(dir) + '-0.png');
    const output = path.join(__dirname, '../src/assets/preview/resume-' + getTemplateName(dir) + '.png');
    console.log(output);
    mv(source, output, function (err) {
        if (err) console.dir(err);
    });
});
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```const', 'mv', '=', ""require('mv');"", 'const', 'PDFImage', '=', ""require('pdf-image').PDFImage;"", 'const', 'path', '=', ""require('path');"", 'const', 'fs', '=', ""require('fs');"", 'const', 'getDirectories', '=', '()', '=>', '{', 'const', 'srcpath', '=', 'path.join(__dirname,', ""'../pdf');"", 'return', 'fs.readdirSync(srcpath);', '};', 'const', 'getTemplateName', '=', 'PDF', '=>', '{', 'return', ""PDF.replace('.pdf',"", ""'');"", '};', 'const', 'convert', '=', 'async', '(PDF)', '=>', '{', 'const', 'pdfImage', '=', 'new', 'PDFImage(path.join(__dirname,', ""'../pdf/'"", '+', 'PDF));', 'await', 'pdfImage.convertPage(0);', '};', 'const', 'directories', '=', 'getDirectories();', 'directories.forEach(async', '(dir)', '=>', '{', 'try', '{', 'await', 'convert(dir);', '}', 'catch', '(e)', '{', 'console.dir(e);', '}', 'const', 'source', '=', 'path.join(__dirname,', ""'../pdf/'"", '+', 'getTemplateName(dir)', '+', ""'-0.png');"", 'const', 'output', '=', 'path.join(__dirname,', ""'../src/assets/preview/resume-'"", '+', 'getTemplateName(dir)', '+', ""'.png');"", 'console.log(output);', 'mv(source,', 'output,', 'function', '(err)', '{', 'if', '(err)', 'console.dir(err);', '});', '});', '```']",challenge not surrounded by ''': ,
"/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * ""License""); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package org.apache.pulsar.functions.windowing;

/**
 * Context information that can be used by the eviction policy.
 */
public interface EvictionContext {
    /**
     * Returns the reference time that the eviction policy could use to
     * evict the events. In the case of event time processing, this would be
     * the watermark time.
     *
     * @return the reference time in millis
     */
    Long getReferenceTime();

    /**
     * Returns the sliding count for count based windows.
     *
     * @return the sliding count
     */
    Long getSlidingCount();


    /**
     * Returns the sliding interval for time based windows.
     *
     * @return the sliding interval
     */
    Long getSlidingInterval();

    /**
     * Returns the current count of events in the queue up to the reference time
     * based on which count based evictions can be performed.
     *
     * @return the current count
     */
    Long getCurrentCount();
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', 'Licensed', 'to', 'the', 'Apache', 'Software', 'Foundation', '(ASF)', 'under', 'one', '*', 'or', 'more', 'contributor', 'license', 'agreements.', 'See', 'the', 'NOTICE', 'file', '*', 'distributed', 'with', 'this', 'work', 'for', 'additional', 'information', '*', 'regarding', 'copyright', 'ownership.', 'The', 'ASF', 'licenses', 'this', 'file', '*', 'to', 'you', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '*', '""License"");', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', '*', 'with', 'the', 'License.', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', '*', 'software', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '*', '""AS', 'IS""', 'BASIS,', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', '*', 'KIND,', 'either', 'express', 'or', 'implied.', 'See', 'the', 'License', 'for', 'the', '*', 'specific', 'language', 'governing', 'permissions', 'and', 'limitations', '*', 'under', 'the', 'License.', '*/', 'package', 'org.apache.pulsar.functions.windowing;', '/**', '*', 'Context', 'information', 'that', 'can', 'be', 'used', 'by', 'the', 'eviction', 'policy.', '*/', 'public', 'interface', 'EvictionContext', '{', '/**', '*', 'Returns', 'the', 'reference', 'time', 'that', 'the', 'eviction', 'policy', 'could', 'use', 'to', '*', 'evict', 'the', 'events.', 'In', 'the', 'case', 'of', 'event', 'time', 'processing,', 'this', 'would', 'be', '*', 'the', 'watermark', 'time.', '*', '*', '@return', 'the', 'reference', 'time', 'in', 'millis', '*/', 'Long', 'getReferenceTime();', '/**', '*', 'Returns', 'the', 'sliding', 'count', 'for', 'count', 'based', 'windows.', '*', '*', '@return', 'the', 'sliding', 'count', '*/', 'Long', 'getSlidingCount();', '/**', '*', 'Returns', 'the', 'sliding', 'interval', 'for', 'time', 'based', 'windows.', '*', '*', '@return', 'the', 'sliding', 'interval', '*/', 'Long', 'getSlidingInterval();', '/**', '*', 'Returns', 'the', 'current', 'count', 'of', 'events', 'in', 'the', 'queue', 'up', 'to', 'the', 'reference', 'time', '*', 'based', 'on', 'which', 'count', 'based', 'evictions', 'can', 'be', 'performed.', '*', '*', '@return', 'the', 'current', 'count', '*/', 'Long', 'getCurrentCount();', '}', '```']",challenge not surrounded by ''': ,
"from cthulhubot.commands.interface import Command

class DjangoUnitTestConfiguration(Command):
    identifier = 'cthulhubot-django-unit-test-config'
    name = {
        'basic' : u""update from repository"",
        'running' : u'updating repository',
        'succeeded' : u'repository updated',
        'failed' : u'failed to update from repository',
    }

    parameters = {
        'database_config_file' : {
            'help' : u'Path to configuration file (on given slave), where DATABASE_* settings are specified',
            'value' : None,
            'required' : True,
        },
        'django_settings_directory' : {
            ""help"" : u""Directory (relative to repository root), where gathered configuration should be written (as local.py). Default to tests/unit_project/settings"",
            'value' : 'tests/unit_project/settings',
            'required' : False,
        },
    }

    command = [""python"", ""setup.py"", ""configtest"", ""-f"",
        ""--database-config-file=%(database_config_file)s"", ""--django-settings-directory=%(django_settings_directory)s"",
    ]

","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```from', 'cthulhubot.commands.interface', 'import', 'Command', 'class', 'DjangoUnitTestConfiguration(Command):', 'identifier', '=', ""'cthulhubot-django-unit-test-config'"", 'name', '=', '{', ""'basic'"", ':', 'u""update', 'from', 'repository"",', ""'running'"", ':', ""u'updating"", ""repository',"", ""'succeeded'"", ':', ""u'repository"", ""updated',"", ""'failed'"", ':', ""u'failed"", 'to', 'update', 'from', ""repository',"", '}', 'parameters', '=', '{', ""'database_config_file'"", ':', '{', ""'help'"", ':', ""u'Path"", 'to', 'configuration', 'file', '(on', 'given', 'slave),', 'where', 'DATABASE_*', 'settings', 'are', ""specified',"", ""'value'"", ':', 'None,', ""'required'"", ':', 'True,', '},', ""'django_settings_directory'"", ':', '{', '""help""', ':', 'u""Directory', '(relative', 'to', 'repository', 'root),', 'where', 'gathered', 'configuration', 'should', 'be', 'written', '(as', 'local.py).', 'Default', 'to', 'tests/unit_project/settings"",', ""'value'"", ':', ""'tests/unit_project/settings',"", ""'required'"", ':', 'False,', '},', '}', 'command', '=', '[""python"",', '""setup.py"",', '""configtest"",', '""-f"",', '""--database-config-file=%(database_config_file)s"",', '""--django-settings-directory=%(django_settings_directory)s"",', ']', '```']",challenge not surrounded by ''': ,
"<html>
<head>
<meta http-equiv=""Content-Type"" content=""text/html; charset=US-ASCII"">
<title>Function operator-=</title>
<link rel=""stylesheet"" href=""../../../../doc/src/boostbook.css"" type=""text/css"">
<meta name=""generator"" content=""DocBook XSL Stylesheets V1.76.1"">
<link rel=""home"" href=""../../index.html"" title=""The Boost C++ Libraries BoostBook Documentation Subset"">
<link rel=""up"" href=""../../date_time/doxy.html#header.boost.date_time.posix_time.date_duration_operators_hpp"" title=""Header &lt;boost/date_time/posix_time/date_duration_operators.hpp&gt;"">
<link rel=""prev"" href=""operator-_id715233.html"" title=""Function operator-"">
<link rel=""next"" href=""time_duration.html"" title=""Class time_duration"">
</head>
<body bgcolor=""white"" text=""black"" link=""#0000FF"" vlink=""#840084"" alink=""#0000FF"">
<table cellpadding=""2"" width=""100%""><tr>
<td valign=""top""><img alt=""Boost C++ Libraries"" width=""277"" height=""86"" src=""../../../../boost.png""></td>
<td align=""center""><a href=""../../../../index.html"">Home</a></td>
<td align=""center""><a href=""../../../../libs/libraries.htm"">Libraries</a></td>
<td align=""center""><a href=""http://www.boost.org/users/people.html"">People</a></td>
<td align=""center""><a href=""http://www.boost.org/users/faq.html"">FAQ</a></td>
<td align=""center""><a href=""../../../../more/index.htm"">More</a></td>
</tr></table>
<hr>
<div class=""spirit-nav"">
<a accesskey=""p"" href=""operator-_id715233.html""><img src=""../../../../doc/src/images/prev.png"" alt=""Prev""></a><a accesskey=""u"" href=""../../date_time/doxy.html#header.boost.date_time.posix_time.date_duration_operators_hpp""><img src=""../../../../doc/src/images/up.png"" alt=""Up""></a><a accesskey=""h"" href=""../../index.html""><img src=""../../../../doc/src/images/home.png"" alt=""Home""></a><a accesskey=""n"" href=""time_duration.html""><img src=""../../../../doc/src/images/next.png"" alt=""Next""></a>
</div>
<div class=""refentry"">
<a name=""boost.posix_time.operator-=_id723097""></a><div class=""titlepage""></div>
<div class=""refnamediv"">
<h2><span class=""refentrytitle"">Function operator-=</span></h2>
<p>boost::posix_time::operator-=</p>
</div>
<h2 xmlns:rev=""http://www.cs.rpi.edu/~gregod/boost/tools/doc/revision"" class=""refsynopsisdiv-title"">Synopsis</h2>
<div xmlns:rev=""http://www.cs.rpi.edu/~gregod/boost/tools/doc/revision"" class=""refsynopsisdiv""><pre class=""synopsis""><span class=""comment"">// In header: &lt;<a class=""link"" href=""../../date_time/doxy.html#header.boost.date_time.posix_time.date_duration_operators_hpp"" title=""Header &lt;boost/date_time/posix_time/date_duration_operators.hpp&gt;"">boost/date_time/posix_time/date_duration_operators.hpp</a>&gt;

</span>
<a class=""link"" href=""ptime.html"" title=""Class ptime"">ptime</a> <span class=""keyword"">operator</span><span class=""special"">-=</span><span class=""special"">(</span><a class=""link"" href=""ptime.html"" title=""Class ptime"">ptime</a> <span class=""special"">&amp;</span> t<span class=""special"">,</span> <span class=""keyword"">const</span> <span class=""identifier"">boost</span><span class=""special"">::</span><span class=""identifier"">gregorian</span><span class=""special"">::</span><span class=""identifier"">years</span> <span class=""special"">&amp;</span> y<span class=""special"">)</span><span class=""special"">;</span></pre></div>
<div class=""refsect1"">
<a name=""id1512379""></a><h2>Description</h2>
<p>Subtracts a years object from a ptime. Result will be same month and day-of-month as ptime unless original day was the last day of month. see date_time::years_duration for more details </p>
</div>
</div>
<table xmlns:rev=""http://www.cs.rpi.edu/~gregod/boost/tools/doc/revision"" width=""100%""><tr>
<td align=""left""></td>
<td align=""right""><div class=""copyright-footer"">Copyright &#169; 2001-2005 CrystalClear Software, Inc<p>Subject to the Boost Software License, Version 1.0. (See accompanying file
    <code class=""filename"">LICENSE_1_0.txt</code> or copy at <a href=""http://www.boost.org/LICENSE_1_0.txt"" target=""_top"">http://www.boost.org/LICENSE_1_0.txt</a>)</p>
</div></td>
</tr></table>
<hr>
<div class=""spirit-nav"">
<a accesskey=""p"" href=""operator-_id715233.html""><img src=""../../../../doc/src/images/prev.png"" alt=""Prev""></a><a accesskey=""u"" href=""../../date_time/doxy.html#header.boost.date_time.posix_time.date_duration_operators_hpp""><img src=""../../../../doc/src/images/up.png"" alt=""Up""></a><a accesskey=""h"" href=""../../index.html""><img src=""../../../../doc/src/images/home.png"" alt=""Home""></a><a accesskey=""n"" href=""time_duration.html""><img src=""../../../../doc/src/images/next.png"" alt=""Next""></a>
</div>
</body>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<html>', '<head>', '<meta', 'http-equiv=""Content-Type""', 'content=""text/html;', 'charset=US-ASCII"">', '<title>Function', 'operator-=</title>', '<link', 'rel=""stylesheet""', 'href=""../../../../doc/src/boostbook.css""', 'type=""text/css"">', '<meta', 'name=""generator""', 'content=""DocBook', 'XSL', 'Stylesheets', 'V1.76.1"">', '<link', 'rel=""home""', 'href=""../../index.html""', 'title=""The', 'Boost', 'C++', 'Libraries', 'BoostBook', 'Documentation', 'Subset"">', '<link', 'rel=""up""', 'href=""../../date_time/doxy.html#header.boost.date_time.posix_time.date_duration_operators_hpp""', 'title=""Header', '&lt;boost/date_time/posix_time/date_duration_operators.hpp&gt;"">', '<link', 'rel=""prev""', 'href=""operator-_id715233.html""', 'title=""Function', 'operator-"">', '<link', 'rel=""next""', 'href=""time_duration.html""', 'title=""Class', 'time_duration"">', '</head>', '<body', 'bgcolor=""white""', 'text=""black""', 'link=""#0000FF""', 'vlink=""#840084""', 'alink=""#0000FF"">', '<table', 'cellpadding=""2""', 'width=""100%""><tr>', '<td', 'valign=""top""><img', 'alt=""Boost', 'C++', 'Libraries""', 'width=""277""', 'height=""86""', 'src=""../../../../boost.png""></td>', '<td', 'align=""center""><a', 'href=""../../../../index.html"">Home</a></td>', '<td', 'align=""center""><a', 'href=""../../../../libs/libraries.htm"">Libraries</a></td>', '<td', 'align=""center""><a', 'href=""http://www.boost.org/users/people.html"">People</a></td>', '<td', 'align=""center""><a', 'href=""http://www.boost.org/users/faq.html"">FAQ</a></td>', '<td', 'align=""center""><a', 'href=""../../../../more/index.htm"">More</a></td>', '</tr></table>', '<hr>', '<div', 'class=""spirit-nav"">', '<a', 'accesskey=""p""', 'href=""operator-_id715233.html""><img', 'src=""../../../../doc/src/images/prev.png""', 'alt=""Prev""></a><a', 'accesskey=""u""', 'href=""../../date_time/doxy.html#header.boost.date_time.posix_time.date_duration_operators_hpp""><img', 'src=""../../../../doc/src/images/up.png""', 'alt=""Up""></a><a', 'accesskey=""h""', 'href=""../../index.html""><img', 'src=""../../../../doc/src/images/home.png""', 'alt=""Home""></a><a', 'accesskey=""n""', 'href=""time_duration.html""><img', 'src=""../../../../doc/src/images/next.png""', 'alt=""Next""></a>', '</div>', '<div', 'class=""refentry"">', '<a', 'name=""boost.posix_time.operator-=_id723097""></a><div', 'class=""titlepage""></div>', '<div', 'class=""refnamediv"">', '<h2><span', 'class=""refentrytitle"">Function', 'operator-=</span></h2>', '<p>boost::posix_time::operator-=</p>', '</div>', '<h2', 'xmlns:rev=""http://www.cs.rpi.edu/~gregod/boost/tools/doc/revision""', 'class=""refsynopsisdiv-title"">Synopsis</h2>', '<div', 'xmlns:rev=""http://www.cs.rpi.edu/~gregod/boost/tools/doc/revision""', 'class=""refsynopsisdiv""><pre', 'class=""synopsis""><span', 'class=""comment"">//', 'In', 'header:', '&lt;<a', 'class=""link""', 'href=""../../date_time/doxy.html#header.boost.date_time.posix_time.date_duration_operators_hpp""', 'title=""Header', '&lt;boost/date_time/posix_time/date_duration_operators.hpp&gt;"">boost/date_time/posix_time/date_duration_operators.hpp</a>&gt;', '</span>', '<a', 'class=""link""', 'href=""ptime.html""', 'title=""Class', 'ptime"">ptime</a>', '<span', 'class=""keyword"">operator</span><span', 'class=""special"">-=</span><span', 'class=""special"">(</span><a', 'class=""link""', 'href=""ptime.html""', 'title=""Class', 'ptime"">ptime</a>', '<span', 'class=""special"">&amp;</span>', 't<span', 'class=""special"">,</span>', '<span', 'class=""keyword"">const</span>', '<span', 'class=""identifier"">boost</span><span', 'class=""special"">::</span><span', 'class=""identifier"">gregorian</span><span', 'class=""special"">::</span><span', 'class=""identifier"">years</span>', '<span', 'class=""special"">&amp;</span>', 'y<span', 'class=""special"">)</span><span', 'class=""special"">;</span></pre></div>', '<div', 'class=""refsect1"">', '<a', 'name=""id1512379""></a><h2>Description</h2>', '<p>Subtracts', 'a', 'years', 'object', 'from', 'a', 'ptime.', 'Result', 'will', 'be', 'same', 'month', 'and', 'day-of-month', 'as', 'ptime', 'unless', 'original', 'day', 'was', 'the', 'last', 'day', 'of', 'month.', 'see', 'date_time::years_duration', 'for', 'more', 'details', '</p>', '</div>', '</div>', '<table', 'xmlns:rev=""http://www.cs.rpi.edu/~gregod/boost/tools/doc/revision""', 'width=""100%""><tr>', '<td', 'align=""left""></td>', '<td', 'align=""right""><div', 'class=""copyright-footer"">Copyright', '&#169;', '2001-2005', 'CrystalClear', 'Software,', 'Inc<p>Subject', 'to', 'the', 'Boost', 'Software', 'License,', 'Version', '1.0.', '(See', 'accompanying', 'file', '<code', 'class=""filename"">LICENSE_1_0.txt</code>', 'or', 'copy', 'at', '<a', 'href=""http://www.boost.org/LICENSE_1_0.txt""', 'target=""_top"">http://www.boost.org/LICENSE_1_0.txt</a>)</p>', '</div></td>', '</tr></table>', '<hr>', '<div', 'class=""spirit-nav"">', '<a', 'accesskey=""p""', 'href=""operator-_id715233.html""><img', 'src=""../../../../doc/src/images/prev.png""', 'alt=""Prev""></a><a', 'accesskey=""u""', 'href=""../../date_time/doxy.html#header.boost.date_time.posix_time.date_duration_operators_hpp""><img', 'src=""../../../../doc/src/images/up.png""', 'alt=""Up""></a><a', 'accesskey=""h""', 'href=""../../index.html""><img', 'src=""../../../../doc/src/images/home.png""', 'alt=""Home""></a><a', 'accesskey=""n""', 'href=""time_duration.html""><img', 'src=""../../../../doc/src/images/next.png""', 'alt=""Next""></a>', '</div>', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"package at.jku.chess.saksanturilas.player;

import java.util.List;
import java.util.Random;

import at.jku.chess.saksanturilas.board.Board;
import at.jku.chess.saksanturilas.board.ChessUtil;
import at.jku.chess.saksanturilas.move.Move;
import at.jku.chess.saksanturilas.ui.GameUI;

/**
 * Class represents a player who plays on a random basis.
 * 
 * @author Fabian Jordan (0855941)
 * @author Wolfgang Kuellinger (0955711)
 * 
 */
public class RandomPlayer extends AbstractPlayer {

	public RandomPlayer(GameUI ui) {
		super(ui);
		isHumanPlayer = false;
	}

	@Override
	public int getFitness(Board board, byte color) {
		return 0;
	}

	@Override
	public Move chooseMove(Board board, byte color, int milliSeconds, Random seed) {
		// get valid moves
		List<Move> moves = board.getValidMoves(color);

		if (board.getResult() != ChessUtil.NO_MATE || moves.size() == 0) {
			return null;
		}

		// exclude option to offer remis
		int i = moves.size();
		if (moves.get(i - 1).getRemis() == Move.REMIS_OFFER) {
			i--;
		}

		// choose move by random
		return moves.get(seed.nextInt(i));
	}

	@Override
	public String getDescription() {
		return ""A computer player that plays on a random basis."";
	}
}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'at.jku.chess.saksanturilas.player;', 'import', 'java.util.List;', 'import', 'java.util.Random;', 'import', 'at.jku.chess.saksanturilas.board.Board;', 'import', 'at.jku.chess.saksanturilas.board.ChessUtil;', 'import', 'at.jku.chess.saksanturilas.move.Move;', 'import', 'at.jku.chess.saksanturilas.ui.GameUI;', '/**', '*', 'Class', 'represents', 'a', 'player', 'who', 'plays', 'on', 'a', 'random', 'basis.', '*', '*', '@author', 'Fabian', 'Jordan', '(0855941)', '*', '@author', 'Wolfgang', 'Kuellinger', '(0955711)', '*', '*/', 'public', 'class', 'RandomPlayer', 'extends', 'AbstractPlayer', '{', 'public', 'RandomPlayer(GameUI', 'ui)', '{', 'super(ui);', 'isHumanPlayer', '=', 'false;', '}', '@Override', 'public', 'int', 'getFitness(Board', 'board,', 'byte', 'color)', '{', 'return', '0;', '}', '@Override', 'public', 'Move', 'chooseMove(Board', 'board,', 'byte', 'color,', 'int', 'milliSeconds,', 'Random', 'seed)', '{', '//', 'get', 'valid', 'moves', 'List<Move>', 'moves', '=', 'board.getValidMoves(color);', 'if', '(board.getResult()', '!=', 'ChessUtil.NO_MATE', '||', 'moves.size()', '==', '0)', '{', 'return', 'null;', '}', '//', 'exclude', 'option', 'to', 'offer', 'remis', 'int', 'i', '=', 'moves.size();', 'if', '(moves.get(i', '-', '1).getRemis()', '==', 'Move.REMIS_OFFER)', '{', 'i--;', '}', '//', 'choose', 'move', 'by', 'random', 'return', 'moves.get(seed.nextInt(i));', '}', '@Override', 'public', 'String', 'getDescription()', '{', 'return', '""A', 'computer', 'player', 'that', 'plays', 'on', 'a', 'random', 'basis."";', '}', '}```']",challenge not surrounded by ''': ,
"# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations


class Migration(migrations.Migration):

    dependencies = [
        ('cfp', '0007_auto_20150210_0452'),
    ]

    operations = [
        migrations.AlterField(
            model_name='conference',
            name='legacy_slug',
            field=models.CharField(db_index=True, max_length=100, blank=True),
            preserve_default=True,
        ),
    ]
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', '-*-', 'coding:', 'utf-8', '-*-', 'from', '__future__', 'import', 'unicode_literals', 'from', 'django.db', 'import', 'models,', 'migrations', 'class', 'Migration(migrations.Migration):', 'dependencies', '=', '[', ""('cfp',"", ""'0007_auto_20150210_0452'),"", ']', 'operations', '=', '[', 'migrations.AlterField(', ""model_name='conference',"", ""name='legacy_slug',"", 'field=models.CharField(db_index=True,', 'max_length=100,', 'blank=True),', 'preserve_default=True,', '),', ']', '```']",challenge not surrounded by ''': ,
"var express = require('express');
var bodyParser = require('body-parser');
var path = require('path');

var Database = require('./db');
var db = new Database();

var app = express();
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({extended: true}));

app.set('views', path.join(__dirname + '/', 'views'));
app.set('view engine', 'jade');

app.get('/', function (req, res) {
    'use strict';
    res.render('index', {
        title: 'Home'
    });
});

app.post('/', function (req, res) {
    var userId = req.params.user_id;
    var payload = {user: userId};

    var data = req.body;
    data.user = userId;

    db.find(payload, function (results) {
        if (results.length > 0) {
            db.update(data);
            res.send({db: ""update""});
        } else {
            db.insert(data);
            res.send({db: ""insert""});
        }
    });
});

app.get('/api/', function (req, res) {
    var payload = {};
    db.find(payload, function (results) {
        return res.json(results);
    });
});

app.get('/api/:user_id', function (req, res) {
    var payload = {user: req.params.user_id};
    db.find(payload, function (results) {
        return res.json(results);
    });
});

function updateData(req, res) {
    var userId = req.params.user_id;
    var payload = {user: userId};

    var data = req.body;
    data.user = userId;
    
    db.find(payload, function (results) {
        console.log(results);
        if (results.length > 0) {
            db.update(data);
            res.send({db: ""update""});
        } else {
            db.insert(data);
            res.send({db: ""insert""});
        }
    });
}

app.post('/api/:user_id', function (req, res) {
    updateData(req, res);
});

app.put('/api/:user_id', function (req, res) {
    updateData(req, res);
});

app.delete('/api/:user_id', function (req, res) {
    res.send({});
});

app.listen(3000);","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```var', 'express', '=', ""require('express');"", 'var', 'bodyParser', '=', ""require('body-parser');"", 'var', 'path', '=', ""require('path');"", 'var', 'Database', '=', ""require('./db');"", 'var', 'db', '=', 'new', 'Database();', 'var', 'app', '=', 'express();', 'app.use(bodyParser.json());', 'app.use(bodyParser.urlencoded({extended:', 'true}));', ""app.set('views',"", 'path.join(__dirname', '+', ""'/',"", ""'views'));"", ""app.set('view"", ""engine',"", ""'jade');"", ""app.get('/',"", 'function', '(req,', 'res)', '{', ""'use"", ""strict';"", ""res.render('index',"", '{', 'title:', ""'Home'"", '});', '});', ""app.post('/',"", 'function', '(req,', 'res)', '{', 'var', 'userId', '=', 'req.params.user_id;', 'var', 'payload', '=', '{user:', 'userId};', 'var', 'data', '=', 'req.body;', 'data.user', '=', 'userId;', 'db.find(payload,', 'function', '(results)', '{', 'if', '(results.length', '>', '0)', '{', 'db.update(data);', 'res.send({db:', '""update""});', '}', 'else', '{', 'db.insert(data);', 'res.send({db:', '""insert""});', '}', '});', '});', ""app.get('/api/',"", 'function', '(req,', 'res)', '{', 'var', 'payload', '=', '{};', 'db.find(payload,', 'function', '(results)', '{', 'return', 'res.json(results);', '});', '});', ""app.get('/api/:user_id',"", 'function', '(req,', 'res)', '{', 'var', 'payload', '=', '{user:', 'req.params.user_id};', 'db.find(payload,', 'function', '(results)', '{', 'return', 'res.json(results);', '});', '});', 'function', 'updateData(req,', 'res)', '{', 'var', 'userId', '=', 'req.params.user_id;', 'var', 'payload', '=', '{user:', 'userId};', 'var', 'data', '=', 'req.body;', 'data.user', '=', 'userId;', 'db.find(payload,', 'function', '(results)', '{', 'console.log(results);', 'if', '(results.length', '>', '0)', '{', 'db.update(data);', 'res.send({db:', '""update""});', '}', 'else', '{', 'db.insert(data);', 'res.send({db:', '""insert""});', '}', '});', '}', ""app.post('/api/:user_id',"", 'function', '(req,', 'res)', '{', 'updateData(req,', 'res);', '});', ""app.put('/api/:user_id',"", 'function', '(req,', 'res)', '{', 'updateData(req,', 'res);', '});', ""app.delete('/api/:user_id',"", 'function', '(req,', 'res)', '{', 'res.send({});', '});', 'app.listen(3000);```']",challenge not surrounded by ''': ,
"/*******************************************************************************
 * Copyright 2014, 2017 gwt-ol3
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *******************************************************************************/
package com.github.tdesjardins.ol3.demo.client.example;

import com.github.tdesjardins.ol3.demo.client.utils.DemoUtils;

import ol.Coordinate;
import ol.Map;
import ol.MapOptions;
import ol.OLFactory;
import ol.View;
import ol.control.Rotate;
import ol.control.ScaleLine;
import ol.interaction.KeyboardPan;
import ol.interaction.KeyboardZoom;
import ol.layer.Image;
import ol.layer.LayerOptions;
import ol.source.ImageArcGisRest;
import ol.source.ImageArcGisRestOptions;
import ol.source.ImageArcGisRestParams;

/**
 * Example with ArcGIS Server layer
 * 
 * @author Peter Zanetti
 */
public class ArcGISExample implements Example {

    /* (non-Javadoc)
     * @see de.desjardins.ol3.demo.client.example.Example#show() */
    @Override
    public void show(String exampleId) {

        ImageArcGisRestParams params = new ImageArcGisRestParams();
        params.showLayers(""2"");

        ImageArcGisRestOptions options = new ImageArcGisRestOptions();
        options.setUrl(
                ""https://sampleserver1.arcgisonline.com/ArcGIS/rest/services/Specialty/ESRI_StateCityHighway_USA/MapServer"");
        options.setParams(params);
        options.setRatio(1.5f);

        ImageArcGisRest source = new ImageArcGisRest(options);

        LayerOptions layerOptions = OLFactory.createOptions();
        layerOptions.setSource(source);

        Image layer = new Image(layerOptions);

        // create a view
        View view = new View();

        Coordinate center = OLFactory.createCoordinate(-10997148, 4569099);

        view.setCenter(center);
        view.setZoom(4);

        // create the map
        MapOptions mapOptions = OLFactory.createOptions();
        mapOptions.setTarget(exampleId);
        mapOptions.setView(view);

        Map map = new Map(mapOptions);

        map.addLayer(layer);

        // add some controls
        map.addControl(new ScaleLine());
        DemoUtils.addDefaultControls(map.getControls());

        // add some interactions
        map.addInteraction(new KeyboardPan());
        map.addInteraction(new KeyboardZoom());
        map.addControl(new Rotate());

    }

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*******************************************************************************', '*', 'Copyright', '2014,', '2017', 'gwt-ol3', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*******************************************************************************/', 'package', 'com.github.tdesjardins.ol3.demo.client.example;', 'import', 'com.github.tdesjardins.ol3.demo.client.utils.DemoUtils;', 'import', 'ol.Coordinate;', 'import', 'ol.Map;', 'import', 'ol.MapOptions;', 'import', 'ol.OLFactory;', 'import', 'ol.View;', 'import', 'ol.control.Rotate;', 'import', 'ol.control.ScaleLine;', 'import', 'ol.interaction.KeyboardPan;', 'import', 'ol.interaction.KeyboardZoom;', 'import', 'ol.layer.Image;', 'import', 'ol.layer.LayerOptions;', 'import', 'ol.source.ImageArcGisRest;', 'import', 'ol.source.ImageArcGisRestOptions;', 'import', 'ol.source.ImageArcGisRestParams;', '/**', '*', 'Example', 'with', 'ArcGIS', 'Server', 'layer', '*', '*', '@author', 'Peter', 'Zanetti', '*/', 'public', 'class', 'ArcGISExample', 'implements', 'Example', '{', '/*', '(non-Javadoc)', '*', '@see', 'de.desjardins.ol3.demo.client.example.Example#show()', '*/', '@Override', 'public', 'void', 'show(String', 'exampleId)', '{', 'ImageArcGisRestParams', 'params', '=', 'new', 'ImageArcGisRestParams();', 'params.showLayers(""2"");', 'ImageArcGisRestOptions', 'options', '=', 'new', 'ImageArcGisRestOptions();', 'options.setUrl(', '""https://sampleserver1.arcgisonline.com/ArcGIS/rest/services/Specialty/ESRI_StateCityHighway_USA/MapServer"");', 'options.setParams(params);', 'options.setRatio(1.5f);', 'ImageArcGisRest', 'source', '=', 'new', 'ImageArcGisRest(options);', 'LayerOptions', 'layerOptions', '=', 'OLFactory.createOptions();', 'layerOptions.setSource(source);', 'Image', 'layer', '=', 'new', 'Image(layerOptions);', '//', 'create', 'a', 'view', 'View', 'view', '=', 'new', 'View();', 'Coordinate', 'center', '=', 'OLFactory.createCoordinate(-10997148,', '4569099);', 'view.setCenter(center);', 'view.setZoom(4);', '//', 'create', 'the', 'map', 'MapOptions', 'mapOptions', '=', 'OLFactory.createOptions();', 'mapOptions.setTarget(exampleId);', 'mapOptions.setView(view);', 'Map', 'map', '=', 'new', 'Map(mapOptions);', 'map.addLayer(layer);', '//', 'add', 'some', 'controls', 'map.addControl(new', 'ScaleLine());', 'DemoUtils.addDefaultControls(map.getControls());', '//', 'add', 'some', 'interactions', 'map.addInteraction(new', 'KeyboardPan());', 'map.addInteraction(new', 'KeyboardZoom());', 'map.addControl(new', 'Rotate());', '}', '}', '```']",challenge not surrounded by ''': ,
"# AUTOGENERATED FILE
FROM balenalib/up-squared-fedora:35-run

# http://bugs.python.org/issue19846
# > At the moment, setting ""LANG=C"" on a Linux system *fundamentally breaks Python 3*, and that's not OK.
ENV LANG C.UTF-8

RUN dnf install -y \
		python3-pip \
		python3-dbus \
	&& dnf clean all

# install ""virtualenv"", since the vast majority of users of this image will want it
RUN pip3 install -U --no-cache-dir --ignore-installed pip setuptools \
	&& pip3 install --no-cache-dir virtualenv

RUN [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'As of January 1st, 2020, Python 2 was end-of-life, we will change the latest tag for Balenalib Python base image to Python 3.x and drop support for Python 2 soon. So after 1st July, 2020, all the balenalib Python latest tag will point to the latest Python 3 version and no changes, or fixes will be made to balenalib Python 2 base image. If you are using Python 2 for your application, please upgrade to Python 3 before 1st July.' > /.balena/messages/python-deprecation-warnin

CMD [""echo"",""'No CMD command was set in Dockerfile! Details about CMD command could be found in Dockerfile Guide section in our Docs. Here's the link: https://balena.io/docs""]

 RUN curl -SLO ""https://raw.githubusercontent.com/balena-io-library/base-images/8accad6af708fca7271c5c65f18a86782e19f877/scripts/assets/tests/test-stack@python.sh"" \
  && echo ""Running test-stack@python"" \
  && chmod +x test-stack@python.sh \
  && bash test-stack@python.sh \
  && rm -rf test-stack@python.sh 

RUN [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \nArchitecture: Intel 64-bit (x86-64) \nOS: Fedora 35 \nVariant: run variant \nDefault variable(s): UDEV=off \nThe following software stack is preinstalled: \nPython v3.9.7, Pip v21.2.4, Setuptools v58.0.0 \nExtra features: \n- Easy way to install packages with `install_packages <package-name>` command \n- Run anywhere with cross-build feature  (for ARM only) \n- Keep the container idling with `balena-idle` command \n- Show base image details with `balena-info` command' > /.balena/messages/image-info

RUN echo $'#!/bin/sh.real\nbalena-info\nrm -f /bin/sh\ncp /bin/sh.real /bin/sh\n/bin/sh ""$@""' > /bin/sh-shim \
	&& chmod +x /bin/sh-shim \
	&& cp /bin/sh /bin/sh.real \
	&& mv /bin/sh-shim /bin/sh","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', 'AUTOGENERATED', 'FILE', 'FROM', 'balenalib/up-squared-fedora:35-run', '#', 'http://bugs.python.org/issue19846', '#', '>', 'At', 'the', 'moment,', 'setting', '""LANG=C""', 'on', 'a', 'Linux', 'system', '*fundamentally', 'breaks', 'Python', '3*,', 'and', ""that's"", 'not', 'OK.', 'ENV', 'LANG', 'C.UTF-8', 'RUN', 'dnf', 'install', '-y', '\\', 'python3-pip', '\\', 'python3-dbus', '\\', '&&', 'dnf', 'clean', 'all', '#', 'install', '""virtualenv"",', 'since', 'the', 'vast', 'majority', 'of', 'users', 'of', 'this', 'image', 'will', 'want', 'it', 'RUN', 'pip3', 'install', '-U', '--no-cache-dir', '--ignore-installed', 'pip', 'setuptools', '\\', '&&', 'pip3', 'install', '--no-cache-dir', 'virtualenv', 'RUN', '[', '!', '-d', '/.balena/messages', ']', '&&', 'mkdir', '-p', '/.balena/messages;', 'echo', ""$'As"", 'of', 'January', '1st,', '2020,', 'Python', '2', 'was', 'end-of-life,', 'we', 'will', 'change', 'the', 'latest', 'tag', 'for', 'Balenalib', 'Python', 'base', 'image', 'to', 'Python', '3.x', 'and', 'drop', 'support', 'for', 'Python', '2', 'soon.', 'So', 'after', '1st', 'July,', '2020,', 'all', 'the', 'balenalib', 'Python', 'latest', 'tag', 'will', 'point', 'to', 'the', 'latest', 'Python', '3', 'version', 'and', 'no', 'changes,', 'or', 'fixes', 'will', 'be', 'made', 'to', 'balenalib', 'Python', '2', 'base', 'image.', 'If', 'you', 'are', 'using', 'Python', '2', 'for', 'your', 'application,', 'please', 'upgrade', 'to', 'Python', '3', 'before', '1st', ""July.'"", '>', '/.balena/messages/python-deprecation-warnin', 'CMD', '[""echo"",""\'No', 'CMD', 'command', 'was', 'set', 'in', 'Dockerfile!', 'Details', 'about', 'CMD', 'command', 'could', 'be', 'found', 'in', 'Dockerfile', 'Guide', 'section', 'in', 'our', 'Docs.', ""Here's"", 'the', 'link:', 'https://balena.io/docs""]', 'RUN', 'curl', '-SLO', '""https://raw.githubusercontent.com/balena-io-library/base-images/8accad6af708fca7271c5c65f18a86782e19f877/scripts/assets/tests/test-stack@python.sh""', '\\', '&&', 'echo', '""Running', 'test-stack@python""', '\\', '&&', 'chmod', '+x', 'test-stack@python.sh', '\\', '&&', 'bash', 'test-stack@python.sh', '\\', '&&', 'rm', '-rf', 'test-stack@python.sh', 'RUN', '[', '!', '-d', '/.balena/messages', ']', '&&', 'mkdir', '-p', '/.balena/messages;', 'echo', ""$'Here"", 'are', 'a', 'few', 'details', 'about', 'this', 'Docker', 'image', '(For', 'more', 'information', 'please', 'visit', 'https://www.balena.io/docs/reference/base-images/base-images/):', '\\nArchitecture:', 'Intel', '64-bit', '(x86-64)', '\\nOS:', 'Fedora', '35', '\\nVariant:', 'run', 'variant', '\\nDefault', 'variable(s):', 'UDEV=off', '\\nThe', 'following', 'software', 'stack', 'is', 'preinstalled:', '\\nPython', 'v3.9.7,', 'Pip', 'v21.2.4,', 'Setuptools', 'v58.0.0', '\\nExtra', 'features:', '\\n-', 'Easy', 'way', 'to', 'install', 'packages', 'with', '`install_packages', '<package-name>`', 'command', '\\n-', 'Run', 'anywhere', 'with', 'cross-build', 'feature', '(for', 'ARM', 'only)', '\\n-', 'Keep', 'the', 'container', 'idling', 'with', '`balena-idle`', 'command', '\\n-', 'Show', 'base', 'image', 'details', 'with', '`balena-info`', ""command'"", '>', '/.balena/messages/image-info', 'RUN', 'echo', ""$'#!/bin/sh.real\\nbalena-info\\nrm"", '-f', '/bin/sh\\ncp', '/bin/sh.real', '/bin/sh\\n/bin/sh', '""$@""\'', '>', '/bin/sh-shim', '\\', '&&', 'chmod', '+x', '/bin/sh-shim', '\\', '&&', 'cp', '/bin/sh', '/bin/sh.real', '\\', '&&', 'mv', '/bin/sh-shim', '/bin/sh```']",challenge not surrounded by ''': ,
"from datetime import datetime
from pydantic import BaseModel


class BarModel(BaseModel):
    whatever: int


class FooBarModel(BaseModel):
    foo: datetime
    bar: BarModel


m = FooBarModel(foo=datetime(2032, 6, 1, 12, 13, 14), bar={'whatever': 123})
print(m.json())
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```from', 'datetime', 'import', 'datetime', 'from', 'pydantic', 'import', 'BaseModel', 'class', 'BarModel(BaseModel):', 'whatever:', 'int', 'class', 'FooBarModel(BaseModel):', 'foo:', 'datetime', 'bar:', 'BarModel', 'm', '=', 'FooBarModel(foo=datetime(2032,', '6,', '1,', '12,', '13,', '14),', ""bar={'whatever':"", '123})', 'print(m.json())', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE html PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"" ""http://www.w3.org/TR/html4/loose.dtd"">
<html>
<!-- Created by GNU Texinfo 6.3, http://www.gnu.org/software/texinfo/ -->
<!-- This file redirects to the location of a node or anchor -->
<head>
<title>GNU Octave: XREFcell2struct</title>

<meta name=""description"" content=""GNU Octave: XREFcell2struct"">
<meta name=""keywords"" content=""GNU Octave: XREFcell2struct"">
<meta name=""resource-type"" content=""document"">
<meta name=""distribution"" content=""global"">
<meta name=""Generator"" content=""makeinfo"">
<meta http-equiv=""Content-Type"" content=""text/html; charset=utf-8"">
<style type=""text/css"">
<!--
a.summary-letter {text-decoration: none}
blockquote.indentedblock {margin-right: 0em}
blockquote.smallindentedblock {margin-right: 0em; font-size: smaller}
blockquote.smallquotation {font-size: smaller}
div.display {margin-left: 3.2em}
div.example {margin-left: 3.2em}
div.lisp {margin-left: 3.2em}
div.smalldisplay {margin-left: 3.2em}
div.smallexample {margin-left: 3.2em}
div.smalllisp {margin-left: 3.2em}
kbd {font-style: oblique}
pre.display {font-family: inherit}
pre.format {font-family: inherit}
pre.menu-comment {font-family: serif}
pre.menu-preformatted {font-family: serif}
pre.smalldisplay {font-family: inherit; font-size: smaller}
pre.smallexample {font-size: smaller}
pre.smallformat {font-family: inherit; font-size: smaller}
pre.smalllisp {font-size: smaller}
span.nolinebreak {white-space: nowrap}
span.roman {font-family: initial; font-weight: normal}
span.sansserif {font-family: sans-serif; font-weight: normal}
ul.no-bullet {list-style: none}
-->
</style>
<link rel=""stylesheet"" type=""text/css"" href=""octave.css"">

<meta http-equiv=""Refresh"" content=""0; url=Processing-Data-in-Cell-Arrays.html#XREFcell2struct"">

</head>

<body lang=""en"">

<p>The node you are looking for is at <a href=""Processing-Data-in-Cell-Arrays.html#XREFcell2struct"">XREFcell2struct</a>.</p>
</body>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'html', 'PUBLIC', '""-//W3C//DTD', 'HTML', '4.01', 'Transitional//EN""', '""http://www.w3.org/TR/html4/loose.dtd"">', '<html>', '<!--', 'Created', 'by', 'GNU', 'Texinfo', '6.3,', 'http://www.gnu.org/software/texinfo/', '-->', '<!--', 'This', 'file', 'redirects', 'to', 'the', 'location', 'of', 'a', 'node', 'or', 'anchor', '-->', '<head>', '<title>GNU', 'Octave:', 'XREFcell2struct</title>', '<meta', 'name=""description""', 'content=""GNU', 'Octave:', 'XREFcell2struct"">', '<meta', 'name=""keywords""', 'content=""GNU', 'Octave:', 'XREFcell2struct"">', '<meta', 'name=""resource-type""', 'content=""document"">', '<meta', 'name=""distribution""', 'content=""global"">', '<meta', 'name=""Generator""', 'content=""makeinfo"">', '<meta', 'http-equiv=""Content-Type""', 'content=""text/html;', 'charset=utf-8"">', '<style', 'type=""text/css"">', '<!--', 'a.summary-letter', '{text-decoration:', 'none}', 'blockquote.indentedblock', '{margin-right:', '0em}', 'blockquote.smallindentedblock', '{margin-right:', '0em;', 'font-size:', 'smaller}', 'blockquote.smallquotation', '{font-size:', 'smaller}', 'div.display', '{margin-left:', '3.2em}', 'div.example', '{margin-left:', '3.2em}', 'div.lisp', '{margin-left:', '3.2em}', 'div.smalldisplay', '{margin-left:', '3.2em}', 'div.smallexample', '{margin-left:', '3.2em}', 'div.smalllisp', '{margin-left:', '3.2em}', 'kbd', '{font-style:', 'oblique}', 'pre.display', '{font-family:', 'inherit}', 'pre.format', '{font-family:', 'inherit}', 'pre.menu-comment', '{font-family:', 'serif}', 'pre.menu-preformatted', '{font-family:', 'serif}', 'pre.smalldisplay', '{font-family:', 'inherit;', 'font-size:', 'smaller}', 'pre.smallexample', '{font-size:', 'smaller}', 'pre.smallformat', '{font-family:', 'inherit;', 'font-size:', 'smaller}', 'pre.smalllisp', '{font-size:', 'smaller}', 'span.nolinebreak', '{white-space:', 'nowrap}', 'span.roman', '{font-family:', 'initial;', 'font-weight:', 'normal}', 'span.sansserif', '{font-family:', 'sans-serif;', 'font-weight:', 'normal}', 'ul.no-bullet', '{list-style:', 'none}', '-->', '</style>', '<link', 'rel=""stylesheet""', 'type=""text/css""', 'href=""octave.css"">', '<meta', 'http-equiv=""Refresh""', 'content=""0;', 'url=Processing-Data-in-Cell-Arrays.html#XREFcell2struct"">', '</head>', '<body', 'lang=""en"">', '<p>The', 'node', 'you', 'are', 'looking', 'for', 'is', 'at', '<a', 'href=""Processing-Data-in-Cell-Arrays.html#XREFcell2struct"">XREFcell2struct</a>.</p>', '</body>', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright 2000-2009 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.jetbrains.plugins.groovy.annotator.intentions.dynamic.elements;

import com.intellij.psi.PsiManager;
import com.intellij.psi.PsiVariable;
import com.intellij.psi.PsiModifier;
import com.intellij.psi.PsiElement;
import com.intellij.util.IncorrectOperationException;
import org.jetbrains.plugins.groovy.lang.psi.impl.synthetic.GrDynamicImplicitProperty;
import org.jetbrains.plugins.groovy.lang.psi.impl.synthetic.LightModifierList;
import org.jetbrains.plugins.groovy.annotator.intentions.dynamic.DynamicManager;
import org.jetbrains.annotations.NotNull;

import java.util.LinkedHashSet;

/**
 * User: Dmitry.Krasilschikov
 * Date: 20.12.2007
 */
public class DPropertyElement extends DItemElement {
  private PsiVariable myPsi;

  //Do not use directly! Persistence component uses default constructor for deserializable
  public DPropertyElement() {
    super(null, null, null);
  }

  public DPropertyElement(Boolean isStatic, String name, String type) {
    super(isStatic, name, type);
  }

  public void clearCache() {
    myPsi = null;
  }

  @NotNull
  public PsiVariable getPsi(PsiManager manager, final String containingClassName) {
    if (myPsi != null) return myPsi;

    LinkedHashSet<String> hashSet = new LinkedHashSet<String>();

    Boolean isStatic = isStatic();
    if (isStatic != null && isStatic.booleanValue()) {
      hashSet.add(PsiModifier.STATIC);
    }
    myPsi = new GrDynamicImplicitProperty(manager, getName(), getType(), containingClassName, new LightModifierList(manager, hashSet)) {
      @Override
      public PsiElement setName(@NotNull String name) throws IncorrectOperationException {
        DynamicManager.getInstance(getProject()).replaceDynamicPropertyName(containingClassName, getName(), name);
        return super.setName(name);
      }
    };
    return myPsi;
  }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '2000-2009', 'JetBrains', 's.r.o.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'org.jetbrains.plugins.groovy.annotator.intentions.dynamic.elements;', 'import', 'com.intellij.psi.PsiManager;', 'import', 'com.intellij.psi.PsiVariable;', 'import', 'com.intellij.psi.PsiModifier;', 'import', 'com.intellij.psi.PsiElement;', 'import', 'com.intellij.util.IncorrectOperationException;', 'import', 'org.jetbrains.plugins.groovy.lang.psi.impl.synthetic.GrDynamicImplicitProperty;', 'import', 'org.jetbrains.plugins.groovy.lang.psi.impl.synthetic.LightModifierList;', 'import', 'org.jetbrains.plugins.groovy.annotator.intentions.dynamic.DynamicManager;', 'import', 'org.jetbrains.annotations.NotNull;', 'import', 'java.util.LinkedHashSet;', '/**', '*', 'User:', 'Dmitry.Krasilschikov', '*', 'Date:', '20.12.2007', '*/', 'public', 'class', 'DPropertyElement', 'extends', 'DItemElement', '{', 'private', 'PsiVariable', 'myPsi;', '//Do', 'not', 'use', 'directly!', 'Persistence', 'component', 'uses', 'default', 'constructor', 'for', 'deserializable', 'public', 'DPropertyElement()', '{', 'super(null,', 'null,', 'null);', '}', 'public', 'DPropertyElement(Boolean', 'isStatic,', 'String', 'name,', 'String', 'type)', '{', 'super(isStatic,', 'name,', 'type);', '}', 'public', 'void', 'clearCache()', '{', 'myPsi', '=', 'null;', '}', '@NotNull', 'public', 'PsiVariable', 'getPsi(PsiManager', 'manager,', 'final', 'String', 'containingClassName)', '{', 'if', '(myPsi', '!=', 'null)', 'return', 'myPsi;', 'LinkedHashSet<String>', 'hashSet', '=', 'new', 'LinkedHashSet<String>();', 'Boolean', 'isStatic', '=', 'isStatic();', 'if', '(isStatic', '!=', 'null', '&&', 'isStatic.booleanValue())', '{', 'hashSet.add(PsiModifier.STATIC);', '}', 'myPsi', '=', 'new', 'GrDynamicImplicitProperty(manager,', 'getName(),', 'getType(),', 'containingClassName,', 'new', 'LightModifierList(manager,', 'hashSet))', '{', '@Override', 'public', 'PsiElement', 'setName(@NotNull', 'String', 'name)', 'throws', 'IncorrectOperationException', '{', 'DynamicManager.getInstance(getProject()).replaceDynamicPropertyName(containingClassName,', 'getName(),', 'name);', 'return', 'super.setName(name);', '}', '};', 'return', 'myPsi;', '}', '}', '```']",challenge not surrounded by ''': ,
"/*
 * Licensed under the Apache License, Version 2.0 (the ""License""); you may not use this file except in compliance with
 * the License.
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
 * an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 */
package com.savvasdalkitsis.butterknifeaspects.aspects;

import android.os.Bundle;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import com.shazam.android.aspects.aspects.fragment.NoOpDialogFragmentAspect;
import com.shazam.android.aspects.base.fragment.AspectDialogFragment;

public class ButterKnifeDialogFragmentAspect extends NoOpDialogFragmentAspect {

    @Nullable
    @Override
    public View onCreateView(@NonNull AspectDialogFragment fragment, LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        return Binder.bindTo(fragment, inflater, container);
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', '*', 'the', 'License.', '*', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', '*', 'an', '""AS', 'IS""', 'BASIS,', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', 'See', 'the', 'License', 'for', 'the', '*', 'specific', 'language', 'governing', 'permissions', 'and', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'com.savvasdalkitsis.butterknifeaspects.aspects;', 'import', 'android.os.Bundle;', 'import', 'android.support.annotation.NonNull;', 'import', 'android.support.annotation.Nullable;', 'import', 'android.view.LayoutInflater;', 'import', 'android.view.View;', 'import', 'android.view.ViewGroup;', 'import', 'com.shazam.android.aspects.aspects.fragment.NoOpDialogFragmentAspect;', 'import', 'com.shazam.android.aspects.base.fragment.AspectDialogFragment;', 'public', 'class', 'ButterKnifeDialogFragmentAspect', 'extends', 'NoOpDialogFragmentAspect', '{', '@Nullable', '@Override', 'public', 'View', 'onCreateView(@NonNull', 'AspectDialogFragment', 'fragment,', 'LayoutInflater', 'inflater,', 'ViewGroup', 'container,', 'Bundle', 'savedInstanceState)', '{', 'return', 'Binder.bindTo(fragment,', 'inflater,', 'container);', '}', '}', '```']",challenge not surrounded by ''': ,
"--
--  Copyright (c) 1997-2013, www.tinygroup.org (luo_guo@icloud.com).
--
--  Licensed under the GPL, Version 3.0 (the ""License"");
--  you may not use this file except in compliance with the License.
--  You may obtain a copy of the License at
--
--       http://www.gnu.org/licenses/gpl.html
--
--  Unless required by applicable law or agreed to in writing, software
--  distributed under the License is distributed on an ""AS IS"" BASIS,
--  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
--  See the License for the specific language governing permissions and
--  limitations under the License.
--

select last_name ""Employee"", connect_by_root last_name ""Manager"",
   level-1 ""Pathlen"", sys_connect_by_path(last_name, '/') ""Path""
   from employees
   where level > 1 and department_id = 110
   connect by prior employee_id = manager_id
   order by ""Employee"", ""Manager"", ""Pathlen"", ""Path""
   ","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```--', '--', 'Copyright', '(c)', '1997-2013,', 'www.tinygroup.org', '(luo_guo@icloud.com).', '--', '--', 'Licensed', 'under', 'the', 'GPL,', 'Version', '3.0', '(the', '""License"");', '--', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '--', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '--', '--', 'http://www.gnu.org/licenses/gpl.html', '--', '--', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '--', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '--', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '--', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '--', 'limitations', 'under', 'the', 'License.', '--', 'select', 'last_name', '""Employee"",', 'connect_by_root', 'last_name', '""Manager"",', 'level-1', '""Pathlen"",', 'sys_connect_by_path(last_name,', ""'/')"", '""Path""', 'from', 'employees', 'where', 'level', '>', '1', 'and', 'department_id', '=', '110', 'connect', 'by', 'prior', 'employee_id', '=', 'manager_id', 'order', 'by', '""Employee"",', '""Manager"",', '""Pathlen"",', '""Path""', '```']",challenge not surrounded by ''': ,
"<!doctype html>
<html>
  <meta charset=""utf-8"">
  <title>DOMContentLoaded / DJS Compat Testcase: YUI 3.3</title>

  <style>
    .bad { color: red; }
    .good { color: green; display: none; }
    .passed .good { display: inline; }
    .passed .bad { display: none; }
  </style>

  <script type=""text/javascript"">
  window.onload = function(){
      window.onloadtime = (new Date()).getTime();
      console.log('Window.onload fired @ ' + window.onloadtime);

      var d=document,h=d.getElementsByTagName('head')[0],s=d.createElement('script');
      s.type='text/javascript';
      s.src='../../../vendor/yui3-3.3/yui-min.js';
      s.onload=function(){
          window.libtime = (new Date()).getTime();
          console.log('YUI loaded @ ' +
            libtime + ' | +' + (libtime - onloadtime) );
          YUI().use('event-base', function(Y){
            Y.on('load', function(){
              window.dcltime = (new Date()).getTime();
              console.log('Running on DOMContentLoaded (or close enough) @' +
                dcltime + ' | +' + (dcltime - onloadtime) );
              document.getElementById('goal').className = 'passed';
            }, window);
          });
      };
      h.appendChild(s);
  };
  </script>

<head>
</head>
<body>

<h1>DOMContentLoaded / DJS Compat Testcase: YUI 3.3</h1>
<p>View this page via the nginx-UI proxy, which will add DominateJS to the page.  Dominate will cause all JS to be loaded asyncronously, one of which is slowscript.js.  Slowscript will cause Dominate to not execute the JS lib or the inline script until after window.onload.</p>
<p><b>Expected:</b> inline script will execute OK anyways, no errors on the page.</p>
<p><b>Bad:</b> inline script doesn't run at all, or there are errors on the page</p>

<p id=""goal""><span class=""bad"">Failed</span> <span class=""good"">Passed</span></p>


</body>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!doctype', 'html>', '<html>', '<meta', 'charset=""utf-8"">', '<title>DOMContentLoaded', '/', 'DJS', 'Compat', 'Testcase:', 'YUI', '3.3</title>', '<style>', '.bad', '{', 'color:', 'red;', '}', '.good', '{', 'color:', 'green;', 'display:', 'none;', '}', '.passed', '.good', '{', 'display:', 'inline;', '}', '.passed', '.bad', '{', 'display:', 'none;', '}', '</style>', '<script', 'type=""text/javascript"">', 'window.onload', '=', 'function(){', 'window.onloadtime', '=', '(new', 'Date()).getTime();', ""console.log('Window.onload"", 'fired', '@', ""'"", '+', 'window.onloadtime);', 'var', ""d=document,h=d.getElementsByTagName('head')[0],s=d.createElement('script');"", ""s.type='text/javascript';"", ""s.src='../../../vendor/yui3-3.3/yui-min.js';"", 's.onload=function(){', 'window.libtime', '=', '(new', 'Date()).getTime();', ""console.log('YUI"", 'loaded', '@', ""'"", '+', 'libtime', '+', ""'"", '|', ""+'"", '+', '(libtime', '-', 'onloadtime)', ');', ""YUI().use('event-base',"", 'function(Y){', ""Y.on('load',"", 'function(){', 'window.dcltime', '=', '(new', 'Date()).getTime();', ""console.log('Running"", 'on', 'DOMContentLoaded', '(or', 'close', 'enough)', ""@'"", '+', 'dcltime', '+', ""'"", '|', ""+'"", '+', '(dcltime', '-', 'onloadtime)', ');', ""document.getElementById('goal').className"", '=', ""'passed';"", '},', 'window);', '});', '};', 'h.appendChild(s);', '};', '</script>', '<head>', '</head>', '<body>', '<h1>DOMContentLoaded', '/', 'DJS', 'Compat', 'Testcase:', 'YUI', '3.3</h1>', '<p>View', 'this', 'page', 'via', 'the', 'nginx-UI', 'proxy,', 'which', 'will', 'add', 'DominateJS', 'to', 'the', 'page.', 'Dominate', 'will', 'cause', 'all', 'JS', 'to', 'be', 'loaded', 'asyncronously,', 'one', 'of', 'which', 'is', 'slowscript.js.', 'Slowscript', 'will', 'cause', 'Dominate', 'to', 'not', 'execute', 'the', 'JS', 'lib', 'or', 'the', 'inline', 'script', 'until', 'after', 'window.onload.</p>', '<p><b>Expected:</b>', 'inline', 'script', 'will', 'execute', 'OK', 'anyways,', 'no', 'errors', 'on', 'the', 'page.</p>', '<p><b>Bad:</b>', 'inline', 'script', ""doesn't"", 'run', 'at', 'all,', 'or', 'there', 'are', 'errors', 'on', 'the', 'page</p>', '<p', 'id=""goal""><span', 'class=""bad"">Failed</span>', '<span', 'class=""good"">Passed</span></p>', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"#!/bin/bash
set -e -u

cd ""$(git rev-parse --show-toplevel)""
pushd platform
bazel build //apt-setup:package.deb
output=""$(bazel info bazel-bin)/apt-setup/package.deb""
popd
cp ""$output"" apt-setup.deb
chmod 'u=rw,go=r' apt-setup.deb
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/bin/bash', 'set', '-e', '-u', 'cd', '""$(git', 'rev-parse', '--show-toplevel)""', 'pushd', 'platform', 'bazel', 'build', '//apt-setup:package.deb', 'output=""$(bazel', 'info', 'bazel-bin)/apt-setup/package.deb""', 'popd', 'cp', '""$output""', 'apt-setup.deb', 'chmod', ""'u=rw,go=r'"", 'apt-setup.deb', '```']",challenge not surrounded by ''': ,
"from django.db import models

# Create your models here.

class House(models.Model):
    city = models.CharField(max_length=100)
    state = models.CharField(max_length=100)
    address = models.CharField(max_length=100)
    beds = models.CharField(max_length=100)
    baths = models.CharField(max_length=100)
    sqft = models.CharField(max_length=100)
    price = models.CharField(max_length=100)
    url = models.CharField(max_length=200)
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```from', 'django.db', 'import', 'models', '#', 'Create', 'your', 'models', 'here.', 'class', 'House(models.Model):', 'city', '=', 'models.CharField(max_length=100)', 'state', '=', 'models.CharField(max_length=100)', 'address', '=', 'models.CharField(max_length=100)', 'beds', '=', 'models.CharField(max_length=100)', 'baths', '=', 'models.CharField(max_length=100)', 'sqft', '=', 'models.CharField(max_length=100)', 'price', '=', 'models.CharField(max_length=100)', 'url', '=', 'models.CharField(max_length=200)', '```']",challenge not surrounded by ''': ,
"app.directive('pdfComment', function ($compile, $timeout) {
  return {
    restrict: 'E',
    terminal: true,
    scope: {
      postedBy: '@',
      postedDate: '@',
      showControl: '=',
      showReplyButton: '=',
      //showEditButton: '=',
      //showDeleteButton: '=',
      authorClickAction: '&',
      authorClickable: '=',
      postContent: '=',
      isPostOwner: '=',
      postOwner: '=',
      isDeleted: '=',
      postId: '@',
      editAction: '&',
      deleteAction: '&',
      replyAction: '&',
      showCommentingArea: '=',
      comments: '=',
      postComment: '&',
      recentSubmitOnAnnotation: '=',
      commentText: '=',
      removeFunction: '&',
      isPrivate: '='
    },
    templateUrl: '/partials/pdf-comment.html',
    controller: function ($http, $scope, $rootScope, $sce) {
      $scope.removeComment = function (commentId) {
        $scope.removeFunction({id: commentId});
      };

      var user = $rootScope.user;
      var isAuthor = $scope.postOwner === user.username;
      var isAdmin = user.role === 'admin';
      var hasPermission = (isAuthor || isAdmin);

      $scope.isAdmin = isAdmin;
      $scope.showEditButton = hasPermission;
      $scope.showDeleteButton = hasPermission;
      $scope.toggle = $scope.recentSubmitOnAnnotation;
      $scope.postedDate = new Date($scope.postedDate);
    }
  };
});","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', ""```app.directive('pdfComment',"", 'function', '($compile,', '$timeout)', '{', 'return', '{', 'restrict:', ""'E',"", 'terminal:', 'true,', 'scope:', '{', 'postedBy:', ""'@',"", 'postedDate:', ""'@',"", 'showControl:', ""'=',"", 'showReplyButton:', ""'=',"", '//showEditButton:', ""'=',"", '//showDeleteButton:', ""'=',"", 'authorClickAction:', ""'&',"", 'authorClickable:', ""'=',"", 'postContent:', ""'=',"", 'isPostOwner:', ""'=',"", 'postOwner:', ""'=',"", 'isDeleted:', ""'=',"", 'postId:', ""'@',"", 'editAction:', ""'&',"", 'deleteAction:', ""'&',"", 'replyAction:', ""'&',"", 'showCommentingArea:', ""'=',"", 'comments:', ""'=',"", 'postComment:', ""'&',"", 'recentSubmitOnAnnotation:', ""'=',"", 'commentText:', ""'=',"", 'removeFunction:', ""'&',"", 'isPrivate:', ""'='"", '},', 'templateUrl:', ""'/partials/pdf-comment.html',"", 'controller:', 'function', '($http,', '$scope,', '$rootScope,', '$sce)', '{', '$scope.removeComment', '=', 'function', '(commentId)', '{', '$scope.removeFunction({id:', 'commentId});', '};', 'var', 'user', '=', '$rootScope.user;', 'var', 'isAuthor', '=', '$scope.postOwner', '===', 'user.username;', 'var', 'isAdmin', '=', 'user.role', '===', ""'admin';"", 'var', 'hasPermission', '=', '(isAuthor', '||', 'isAdmin);', '$scope.isAdmin', '=', 'isAdmin;', '$scope.showEditButton', '=', 'hasPermission;', '$scope.showDeleteButton', '=', 'hasPermission;', '$scope.toggle', '=', '$scope.recentSubmitOnAnnotation;', '$scope.postedDate', '=', 'new', 'Date($scope.postedDate);', '}', '};', '});```']",challenge not surrounded by ''': ,
"package scenelib.annotations.toys;

public enum BalanceEnum {
  BALANCED,
  LEFT_HEAVY,
  RIGHT_HEAVY;
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'scenelib.annotations.toys;', 'public', 'enum', 'BalanceEnum', '{', 'BALANCED,', 'LEFT_HEAVY,', 'RIGHT_HEAVY;', '}', '```']",challenge not surrounded by ''': ,
"//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.core.domain.base.impl;

import ims.domain.impl.DomainImpl;

public abstract class BasePatientMedicalInsuranceImpl extends DomainImpl implements ims.core.domain.PatientMedicalInsurance, ims.domain.impl.Transactional
{
	private static final long serialVersionUID = 1L;

	@SuppressWarnings(""unused"")
	public void validatelistPatientMedicalInsuranceVo(ims.core.vo.PatientShort patient)
	{
	}

	@SuppressWarnings(""unused"")
	public void validatesavePatientMedicalInsuranceVo(ims.core.vo.PatientMedicalInsuranceVo patientMedicalInsuranceVo)
	{
	}

	@SuppressWarnings(""unused"")
	public void validategetPatientMedicalInsuranceVo(ims.core.clinical.vo.PatientMedicalInsuranceRefVo patientMedicalInsuranceRefVo)
	{
	}
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//#############################################################################', '//#', '#', '//#', 'Copyright', '(C)', '<2015>', '<IMS', 'MAXIMS>', '#', '//#', '#', '//#', 'This', 'program', 'is', 'free', 'software:', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', '#', '//#', 'it', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'Affero', 'General', 'Public', 'License', 'as', '#', '//#', 'published', 'by', 'the', 'Free', 'Software', 'Foundation,', 'either', 'version', '3', 'of', 'the', '#', '//#', 'License,', 'or', '(at', 'your', 'option)', 'any', 'later', 'version.', '#', '//#', '#', '//#', 'This', 'program', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', '#', '//#', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', '#', '//#', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', '#', '//#', 'GNU', 'Affero', 'General', 'Public', 'License', 'for', 'more', 'details.', '#', '//#', '#', '//#', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'Affero', 'General', 'Public', 'License', '#', '//#', 'along', 'with', 'this', 'program.', 'If', 'not,', 'see', '<http://www.gnu.org/licenses/>.', '#', '//#', '#', '//#', 'IMS', 'MAXIMS', 'provides', 'absolutely', 'NO', 'GUARANTEE', 'OF', 'THE', 'CLINICAL', 'SAFTEY', 'of', '#', '//#', 'this', 'program.', 'Users', 'of', 'this', 'software', 'do', 'so', 'entirely', 'at', 'their', 'own', 'risk.', '#', '//#', 'IMS', 'MAXIMS', 'only', 'ensures', 'the', 'Clinical', 'Safety', 'of', 'unaltered', 'run-time', '#', '//#', 'software', 'that', 'it', 'builds,', 'deploys', 'and', 'maintains.', '#', '//#', '#', '//#############################################################################', '//#EOH', '//', 'This', 'code', 'was', 'generated', 'by', 'Barbara', 'Worwood', 'using', 'IMS', 'Development', 'Environment', '(version', '1.80', 'build', '5589.25814)', '//', 'Copyright', '(C)', '1995-2015', 'IMS', 'MAXIMS.', 'All', 'rights', 'reserved.', '//', 'WARNING:', 'DO', 'NOT', 'MODIFY', 'the', 'content', 'of', 'this', 'file', 'package', 'ims.core.domain.base.impl;', 'import', 'ims.domain.impl.DomainImpl;', 'public', 'abstract', 'class', 'BasePatientMedicalInsuranceImpl', 'extends', 'DomainImpl', 'implements', 'ims.core.domain.PatientMedicalInsurance,', 'ims.domain.impl.Transactional', '{', 'private', 'static', 'final', 'long', 'serialVersionUID', '=', '1L;', '@SuppressWarnings(""unused"")', 'public', 'void', 'validatelistPatientMedicalInsuranceVo(ims.core.vo.PatientShort', 'patient)', '{', '}', '@SuppressWarnings(""unused"")', 'public', 'void', 'validatesavePatientMedicalInsuranceVo(ims.core.vo.PatientMedicalInsuranceVo', 'patientMedicalInsuranceVo)', '{', '}', '@SuppressWarnings(""unused"")', 'public', 'void', 'validategetPatientMedicalInsuranceVo(ims.core.clinical.vo.PatientMedicalInsuranceRefVo', 'patientMedicalInsuranceRefVo)', '{', '}', '}', '```']",challenge not surrounded by ''': ,
"package com.ecrm.Entity;

/**
 * Created by Htang on 7/6/2015.
 */
public class StatisticEntity {
    private int y;
    private String label;

    public StatisticEntity() {
    }

    public int getY() {
        return y;
    }

    public void setY(int y) {
        this.y = y;
    }

    public String getLabel() {
        return label;
    }

    public void setLabel(String label) {
        this.label = label;
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.ecrm.Entity;', '/**', '*', 'Created', 'by', 'Htang', 'on', '7/6/2015.', '*/', 'public', 'class', 'StatisticEntity', '{', 'private', 'int', 'y;', 'private', 'String', 'label;', 'public', 'StatisticEntity()', '{', '}', 'public', 'int', 'getY()', '{', 'return', 'y;', '}', 'public', 'void', 'setY(int', 'y)', '{', 'this.y', '=', 'y;', '}', 'public', 'String', 'getLabel()', '{', 'return', 'label;', '}', 'public', 'void', 'setLabel(String', 'label)', '{', 'this.label', '=', 'label;', '}', '}', '```']",challenge not surrounded by ''': ,
"// license:BSD-3-Clause
// copyright-holders:Wilbert Pol
#include ""emu.h""
#include ""msxdos2.h""

DEFINE_DEVICE_TYPE(MSX_CART_MSXDOS2, msx_cart_msxdos2_device, ""msx_cart_msxdos2"", ""MSX Cartridge - MSXDOS2"")


msx_cart_msxdos2_device::msx_cart_msxdos2_device(const machine_config &mconfig, const char *tag, device_t *owner, uint32_t clock)
	: device_t(mconfig, MSX_CART_MSXDOS2, tag, owner, clock)
	, msx_cart_interface(mconfig, *this)
	, m_selected_bank(0)
	, m_bank_base(nullptr)
{
}


void msx_cart_msxdos2_device::device_start()
{
	save_item(NAME(m_selected_bank));
}


void msx_cart_msxdos2_device::device_post_load()
{
	restore_banks();
}


void msx_cart_msxdos2_device::restore_banks()
{
	m_bank_base = get_rom_base() + ( m_selected_bank & 0x03 ) * 0x4000;
}


void msx_cart_msxdos2_device::device_reset()
{
	m_selected_bank = 0;
}


void msx_cart_msxdos2_device::initialize_cartridge()
{
	if (get_rom_size() != 0x10000)
	{
		fatalerror(""msxdos2: Invalid ROM size\n"");
	}

	restore_banks();
}


uint8_t msx_cart_msxdos2_device::read_cart(offs_t offset)
{
	if (offset >= 0x4000 && offset < 0x8000)
	{
		return m_bank_base[offset & 0x3fff];
	}

	return 0xff;
}


void msx_cart_msxdos2_device::write_cart(offs_t offset, uint8_t data)
{
	if (offset == 0x6000)
	{
		m_selected_bank = data;
		restore_banks();
	}
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//', 'license:BSD-3-Clause', '//', 'copyright-holders:Wilbert', 'Pol', '#include', '""emu.h""', '#include', '""msxdos2.h""', 'DEFINE_DEVICE_TYPE(MSX_CART_MSXDOS2,', 'msx_cart_msxdos2_device,', '""msx_cart_msxdos2"",', '""MSX', 'Cartridge', '-', 'MSXDOS2"")', 'msx_cart_msxdos2_device::msx_cart_msxdos2_device(const', 'machine_config', '&mconfig,', 'const', 'char', '*tag,', 'device_t', '*owner,', 'uint32_t', 'clock)', ':', 'device_t(mconfig,', 'MSX_CART_MSXDOS2,', 'tag,', 'owner,', 'clock)', ',', 'msx_cart_interface(mconfig,', '*this)', ',', 'm_selected_bank(0)', ',', 'm_bank_base(nullptr)', '{', '}', 'void', 'msx_cart_msxdos2_device::device_start()', '{', 'save_item(NAME(m_selected_bank));', '}', 'void', 'msx_cart_msxdos2_device::device_post_load()', '{', 'restore_banks();', '}', 'void', 'msx_cart_msxdos2_device::restore_banks()', '{', 'm_bank_base', '=', 'get_rom_base()', '+', '(', 'm_selected_bank', '&', '0x03', ')', '*', '0x4000;', '}', 'void', 'msx_cart_msxdos2_device::device_reset()', '{', 'm_selected_bank', '=', '0;', '}', 'void', 'msx_cart_msxdos2_device::initialize_cartridge()', '{', 'if', '(get_rom_size()', '!=', '0x10000)', '{', 'fatalerror(""msxdos2:', 'Invalid', 'ROM', 'size\\n"");', '}', 'restore_banks();', '}', 'uint8_t', 'msx_cart_msxdos2_device::read_cart(offs_t', 'offset)', '{', 'if', '(offset', '>=', '0x4000', '&&', 'offset', '<', '0x8000)', '{', 'return', 'm_bank_base[offset', '&', '0x3fff];', '}', 'return', '0xff;', '}', 'void', 'msx_cart_msxdos2_device::write_cart(offs_t', 'offset,', 'uint8_t', 'data)', '{', 'if', '(offset', '==', '0x6000)', '{', 'm_selected_bank', '=', 'data;', 'restore_banks();', '}', '}', '```']",challenge not surrounded by ''': ,
"var db = require('./MongoDB-user.js');
var api = require('./api.json');

var google = require('googleapis');
var OAuth2 = google.auth.OAuth2;
var oauth2Client = new OAuth2(api.web.client_id, api.web.client_secret, api.web.redirect_uris[1]);
var scopes = 'https://www.googleapis.com/auth/youtube';
var youtube = google.youtube('v3');


function getDashboardContent(user, callback) {
  db.getAPI(user.name, ""YouTube"", function(err, results){
    if (err) {
      callback(err);
    }
    else {
      oauth2Client.setCredentials(results);
      var opts = {
        part: ""snippet,contentDetails"",
        // q: """",       //query string, not super helpful
        maxResults: 15,
        home: true,
        //mine: true,
        // order: ""viewCount"",
        // regionCode: ""US"",
        //safeSearch: ""moderate"",
        //type: ""video"",
        auth: oauth2Client
      };
      youtube.activities.list(opts, function(err, response) {
        if (err) {
          console.log(err);
          content = [];
        } else {
          var recommendation = [];
          for (var item in response.items){
            if (response.items[item].snippet.type===""recommendation"") {
              recommendation.push({videoId:response.items[item].contentDetails.recommendation.resourceId.videoId,
                                    title: response.items[item].snippet.title,
                                    thumbnails: response.items[item].snippet.thumbnails.medium.url,
                                    description: response.items[item].snippet.description});
            }
          }
          //console.log(recommendation);
          //if (recommendation.length===0){
            for (var items in response.items){
              if (response.items[items].snippet.type===""upload"") {
                // console.log(response.items[items]);
                recommendation.push({videoId:response.items[items].contentDetails.upload.videoId,
                                      title: response.items[items].snippet.title,
                                      thumbnails: response.items[items].snippet.thumbnails.medium.url,
                                      description: response.items[items].snippet.description});
              }
            }
          //}
          //console.log(response.items[0].contentDetails);
          content = recommendation;
        }
        callback(undefined, content);
      });
    }
  });
}

module.exports = {
  getDashboardContent: getDashboardContent
};
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```var', 'db', '=', ""require('./MongoDB-user.js');"", 'var', 'api', '=', ""require('./api.json');"", 'var', 'google', '=', ""require('googleapis');"", 'var', 'OAuth2', '=', 'google.auth.OAuth2;', 'var', 'oauth2Client', '=', 'new', 'OAuth2(api.web.client_id,', 'api.web.client_secret,', 'api.web.redirect_uris[1]);', 'var', 'scopes', '=', ""'https://www.googleapis.com/auth/youtube';"", 'var', 'youtube', '=', ""google.youtube('v3');"", 'function', 'getDashboardContent(user,', 'callback)', '{', 'db.getAPI(user.name,', '""YouTube"",', 'function(err,', 'results){', 'if', '(err)', '{', 'callback(err);', '}', 'else', '{', 'oauth2Client.setCredentials(results);', 'var', 'opts', '=', '{', 'part:', '""snippet,contentDetails"",', '//', 'q:', '"""",', '//query', 'string,', 'not', 'super', 'helpful', 'maxResults:', '15,', 'home:', 'true,', '//mine:', 'true,', '//', 'order:', '""viewCount"",', '//', 'regionCode:', '""US"",', '//safeSearch:', '""moderate"",', '//type:', '""video"",', 'auth:', 'oauth2Client', '};', 'youtube.activities.list(opts,', 'function(err,', 'response)', '{', 'if', '(err)', '{', 'console.log(err);', 'content', '=', '[];', '}', 'else', '{', 'var', 'recommendation', '=', '[];', 'for', '(var', 'item', 'in', 'response.items){', 'if', '(response.items[item].snippet.type===""recommendation"")', '{', 'recommendation.push({videoId:response.items[item].contentDetails.recommendation.resourceId.videoId,', 'title:', 'response.items[item].snippet.title,', 'thumbnails:', 'response.items[item].snippet.thumbnails.medium.url,', 'description:', 'response.items[item].snippet.description});', '}', '}', '//console.log(recommendation);', '//if', '(recommendation.length===0){', 'for', '(var', 'items', 'in', 'response.items){', 'if', '(response.items[items].snippet.type===""upload"")', '{', '//', 'console.log(response.items[items]);', 'recommendation.push({videoId:response.items[items].contentDetails.upload.videoId,', 'title:', 'response.items[items].snippet.title,', 'thumbnails:', 'response.items[items].snippet.thumbnails.medium.url,', 'description:', 'response.items[items].snippet.description});', '}', '}', '//}', '//console.log(response.items[0].contentDetails);', 'content', '=', 'recommendation;', '}', 'callback(undefined,', 'content);', '});', '}', '});', '}', 'module.exports', '=', '{', 'getDashboardContent:', 'getDashboardContent', '};', '```']",challenge not surrounded by ''': ,
"#include ""Win7DaemonInstaller.h""

#include <iostream>

Win7DaemonInstaller::Win7DaemonInstaller()
{
}

Win7DaemonInstaller::~Win7DaemonInstaller()
{
}

void Win7DaemonInstaller::install(Daemon *component)
{
    std::cout << ""Installing daemon binary on WIN 7 host"" << std::endl;
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#include', '""Win7DaemonInstaller.h""', '#include', '<iostream>', 'Win7DaemonInstaller::Win7DaemonInstaller()', '{', '}', 'Win7DaemonInstaller::~Win7DaemonInstaller()', '{', '}', 'void', 'Win7DaemonInstaller::install(Daemon', '*component)', '{', 'std::cout', '<<', '""Installing', 'daemon', 'binary', 'on', 'WIN', '7', 'host""', '<<', 'std::endl;', '}', '```']",challenge not surrounded by ''': ,
"/* ====================================================================
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the ""License""); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an ""AS IS"" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
==================================================================== */

package org.apache.poi.hssf.record.formula.eval;

import junit.framework.Test;
import junit.framework.TestSuite;

/**
 * Collects all tests the package <tt>org.apache.poi.hssf.record.formula.eval</tt>.
 *
 * @author Josh Micich
 */
public class AllFormulaEvalTests {

	public static Test suite() {
		TestSuite result = new TestSuite(AllFormulaEvalTests.class.getName());
		result.addTestSuite(TestAreaEval.class);
		result.addTestSuite(TestCircularReferences.class);
		result.addTestSuite(TestDivideEval.class);
		result.addTestSuite(TestEqualEval.class);
		result.addTestSuite(TestExternalFunction.class);
		result.addTestSuite(TestFormulaBugs.class);
		result.addTestSuite(TestFormulasFromSpreadsheet.class);
		result.addTestSuite(TestMinusZeroResult.class);
		result.addTestSuite(TestMissingArgEval.class);
		result.addTestSuite(TestPercentEval.class);
		result.addTestSuite(TestRangeEval.class);
		result.addTestSuite(TestUnaryPlusEval.class);
		return result;
	}
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '====================================================================', 'Licensed', 'to', 'the', 'Apache', 'Software', 'Foundation', '(ASF)', 'under', 'one', 'or', 'more', 'contributor', 'license', 'agreements.', 'See', 'the', 'NOTICE', 'file', 'distributed', 'with', 'this', 'work', 'for', 'additional', 'information', 'regarding', 'copyright', 'ownership.', 'The', 'ASF', 'licenses', 'this', 'file', 'to', 'You', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', 'http://www.apache.org/licenses/LICENSE-2.0', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', 'limitations', 'under', 'the', 'License.', '====================================================================', '*/', 'package', 'org.apache.poi.hssf.record.formula.eval;', 'import', 'junit.framework.Test;', 'import', 'junit.framework.TestSuite;', '/**', '*', 'Collects', 'all', 'tests', 'the', 'package', '<tt>org.apache.poi.hssf.record.formula.eval</tt>.', '*', '*', '@author', 'Josh', 'Micich', '*/', 'public', 'class', 'AllFormulaEvalTests', '{', 'public', 'static', 'Test', 'suite()', '{', 'TestSuite', 'result', '=', 'new', 'TestSuite(AllFormulaEvalTests.class.getName());', 'result.addTestSuite(TestAreaEval.class);', 'result.addTestSuite(TestCircularReferences.class);', 'result.addTestSuite(TestDivideEval.class);', 'result.addTestSuite(TestEqualEval.class);', 'result.addTestSuite(TestExternalFunction.class);', 'result.addTestSuite(TestFormulaBugs.class);', 'result.addTestSuite(TestFormulasFromSpreadsheet.class);', 'result.addTestSuite(TestMinusZeroResult.class);', 'result.addTestSuite(TestMissingArgEval.class);', 'result.addTestSuite(TestPercentEval.class);', 'result.addTestSuite(TestRangeEval.class);', 'result.addTestSuite(TestUnaryPlusEval.class);', 'return', 'result;', '}', '}', '```']",challenge not surrounded by ''': ,
"import matplotlib as mpl
import pylab as plt
from pylab import rc
import numpy as np


def myhisteps(x,y):
    x=np.array(x)
    y=np.array(y)
    if len(x)==len(y):
        dx=np.diff(x)*0.5
        x=np.concatenate([x[:1]-dx[0],x[:-1]+dx,x[-1:]+dx[-1]])
    elif not len(x)==len(y)+1:
        print ('''either pass two arrays of equal length (to make the steps surrounding the x values, len(x)=len(y))
              or the x  change-points, a-la' bayesian block (ending one block and starting the next as
change-points, len(x) len(y)+1 )''')
        return -1,-1
    return np.array(zip(x,x)).flatten()[1:-1],np.array(zip(y,y)).flatten()

rc('axes', linewidth=1.2)
mpl.rcParams.update(mpl.rcParamsDefault)
mpl.rcParams['font.size'] = 26.
mpl.rcParams['font.family'] = 'serif'
#mpl.rcParams['font.family'] = 'serif'
mpl.rcParams['font.serif'] = [  'Times New Roman', 'Times','Palatino', 'Charter', 'serif']
mpl.rcParams['font.sans-serif'] = ['Helvetica']
mpl.rcParams['axes.labelsize'] = 24
mpl.rcParams['xtick.labelsize'] = 22.
mpl.rcParams['ytick.labelsize'] = 22.
mpl.rcParams['xtick.major.size']= 15.
mpl.rcParams['xtick.minor.size']= 10.
mpl.rcParams['ytick.major.size']= 15.
mpl.rcParams['ytick.minor.size']= 10.
#mpl.rcParams['figure.autolayout']= True

#fontsize=26
#mpl.rc('axes',  titlesize=fontsize)
#mpl.rc('axes',  labelsize=fontsize)
#mpl.rc('xtick', labelsize=fontsize)
#mpl.rc('ytick', labelsize=fontsize)
#mpl.rc('font', size=fontsize, family='serif', serif='Utopia',
#              style='normal', variant='normal',
#              stretch='normal', weight='normal')
#mpl.rc('font',**{'family':'serif','serif':[ 'Times New Roman', 'Times', 'serif'],
#                 'sans-serif':['Helvetica'], 'size':19, 
#                 'weight':'normal'})
mpl.rc('axes',**{'labelweight':'normal', 'linewidth':1})
mpl.rc('axes',**{'labelweight':'normal', 'linewidth':1})
mpl.rc('ytick',**{'major.pad':5, 'color':'k'})
mpl.rc('xtick',**{'major.pad':5, 'color':'k'})
params = {'legend.fontsize': 24,
          #'legend.linewidth': 1,
          'legend.numpoints':1,
          'legend.handletextpad':1
      }

plt.rcParams.update(params)   
plt.minorticks_on()



","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'matplotlib', 'as', 'mpl', 'import', 'pylab', 'as', 'plt', 'from', 'pylab', 'import', 'rc', 'import', 'numpy', 'as', 'np', 'def', 'myhisteps(x,y):', 'x=np.array(x)', 'y=np.array(y)', 'if', 'len(x)==len(y):', 'dx=np.diff(x)*0.5', 'x=np.concatenate([x[:1]-dx[0],x[:-1]+dx,x[-1:]+dx[-1]])', 'elif', 'not', 'len(x)==len(y)+1:', 'print', ""('''either"", 'pass', 'two', 'arrays', 'of', 'equal', 'length', '(to', 'make', 'the', 'steps', 'surrounding', 'the', 'x', 'values,', 'len(x)=len(y))', 'or', 'the', 'x', 'change-points,', ""a-la'"", 'bayesian', 'block', '(ending', 'one', 'block', 'and', 'starting', 'the', 'next', 'as', 'change-points,', 'len(x)', 'len(y)+1', "")''')"", 'return', '-1,-1', 'return', 'np.array(zip(x,x)).flatten()[1:-1],np.array(zip(y,y)).flatten()', ""rc('axes',"", 'linewidth=1.2)', 'mpl.rcParams.update(mpl.rcParamsDefault)', ""mpl.rcParams['font.size']"", '=', '26.', ""mpl.rcParams['font.family']"", '=', ""'serif'"", ""#mpl.rcParams['font.family']"", '=', ""'serif'"", ""mpl.rcParams['font.serif']"", '=', '[', ""'Times"", 'New', ""Roman',"", ""'Times','Palatino',"", ""'Charter',"", ""'serif']"", ""mpl.rcParams['font.sans-serif']"", '=', ""['Helvetica']"", ""mpl.rcParams['axes.labelsize']"", '=', '24', ""mpl.rcParams['xtick.labelsize']"", '=', '22.', ""mpl.rcParams['ytick.labelsize']"", '=', '22.', ""mpl.rcParams['xtick.major.size']="", '15.', ""mpl.rcParams['xtick.minor.size']="", '10.', ""mpl.rcParams['ytick.major.size']="", '15.', ""mpl.rcParams['ytick.minor.size']="", '10.', ""#mpl.rcParams['figure.autolayout']="", 'True', '#fontsize=26', ""#mpl.rc('axes',"", 'titlesize=fontsize)', ""#mpl.rc('axes',"", 'labelsize=fontsize)', ""#mpl.rc('xtick',"", 'labelsize=fontsize)', ""#mpl.rc('ytick',"", 'labelsize=fontsize)', ""#mpl.rc('font',"", 'size=fontsize,', ""family='serif',"", ""serif='Utopia',"", '#', ""style='normal',"", ""variant='normal',"", '#', ""stretch='normal',"", ""weight='normal')"", ""#mpl.rc('font',**{'family':'serif','serif':["", ""'Times"", 'New', ""Roman',"", ""'Times',"", ""'serif'],"", '#', ""'sans-serif':['Helvetica'],"", ""'size':19,"", '#', ""'weight':'normal'})"", ""mpl.rc('axes',**{'labelweight':'normal',"", ""'linewidth':1})"", ""mpl.rc('axes',**{'labelweight':'normal',"", ""'linewidth':1})"", ""mpl.rc('ytick',**{'major.pad':5,"", ""'color':'k'})"", ""mpl.rc('xtick',**{'major.pad':5,"", ""'color':'k'})"", 'params', '=', ""{'legend.fontsize':"", '24,', ""#'legend.linewidth':"", '1,', ""'legend.numpoints':1,"", ""'legend.handletextpad':1"", '}', 'plt.rcParams.update(params)', 'plt.minorticks_on()', '```']",challenge not surrounded by ''': ,
"// Testing color blending in d3 svg elements
// Testing how chroma.js works http://gka.github.io/chroma.js/#quick-start
// help and concept from Nadieh https://www.visualcinnamon.com/2016/05/beautiful-color-blending-svg-d3.html
// help for generating colors and circles from Shirley Wu http://bl.ocks.org/sxywu/533cece25dffcf3744da1e2d29653673


var w = h = 600; // width and height

// just some nicer math functions
var π = Math.PI;
function _cos(val) {
	return Math.cos(val);
}
function _sin(val) {
	return Math.sin(val);
}

var size = 100,
	numColors = 36
var colors = chroma.scale(['#F9A781', '#EF7960', '#C4A49D', '#A67CA0', '#7C4098', '#785C96']).colors(numColors)

// create our background svg parent
var svg = d3.select('.background').append('svg')
			.attr('width', w)
			.attr('height', h)
			.style('background-color', 'transparent')

var g = svg.selectAll('g')
					.data(colors)
				.enter().append('g')
					.attr('fill', function(d) { return d; })
					.attr('transform', function(d, i) {
						var x = i % 6 * size + size / 2
						var y = Math.floor(i / 6) * size + size / 2
						return 'translate(' + [x, y] + ')'
					})

var circle = g.append('circle')
				.attr('r', size / 4)","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//', 'Testing', 'color', 'blending', 'in', 'd3', 'svg', 'elements', '//', 'Testing', 'how', 'chroma.js', 'works', 'http://gka.github.io/chroma.js/#quick-start', '//', 'help', 'and', 'concept', 'from', 'Nadieh', 'https://www.visualcinnamon.com/2016/05/beautiful-color-blending-svg-d3.html', '//', 'help', 'for', 'generating', 'colors', 'and', 'circles', 'from', 'Shirley', 'Wu', 'http://bl.ocks.org/sxywu/533cece25dffcf3744da1e2d29653673', 'var', 'w', '=', 'h', '=', '600;', '//', 'width', 'and', 'height', '//', 'just', 'some', 'nicer', 'math', 'functions', 'var', 'π', '=', 'Math.PI;', 'function', '_cos(val)', '{', 'return', 'Math.cos(val);', '}', 'function', '_sin(val)', '{', 'return', 'Math.sin(val);', '}', 'var', 'size', '=', '100,', 'numColors', '=', '36', 'var', 'colors', '=', ""chroma.scale(['#F9A781',"", ""'#EF7960',"", ""'#C4A49D',"", ""'#A67CA0',"", ""'#7C4098',"", ""'#785C96']).colors(numColors)"", '//', 'create', 'our', 'background', 'svg', 'parent', 'var', 'svg', '=', ""d3.select('.background').append('svg')"", "".attr('width',"", 'w)', "".attr('height',"", 'h)', "".style('background-color',"", ""'transparent')"", 'var', 'g', '=', ""svg.selectAll('g')"", '.data(colors)', "".enter().append('g')"", "".attr('fill',"", 'function(d)', '{', 'return', 'd;', '})', "".attr('transform',"", 'function(d,', 'i)', '{', 'var', 'x', '=', 'i', '%', '6', '*', 'size', '+', 'size', '/', '2', 'var', 'y', '=', 'Math.floor(i', '/', '6)', '*', 'size', '+', 'size', '/', '2', 'return', ""'translate('"", '+', '[x,', 'y]', '+', ""')'"", '})', 'var', 'circle', '=', ""g.append('circle')"", "".attr('r',"", 'size', '/', '4)```']",challenge not surrounded by ''': ,
"<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"" ""http://www.w3.org/TR/html4/loose.dtd"">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_24) on Thu May 05 12:12:13 EDT 2011 -->
<TITLE>
com.larvalabs.svgandroid
</TITLE>

<META NAME=""date"" CONTENT=""2011-05-05"">

<LINK REL =""stylesheet"" TYPE=""text/css"" HREF=""../../../stylesheet.css"" TITLE=""Style"">


</HEAD>

<BODY BGCOLOR=""white"">
<FONT size=""+1"" CLASS=""FrameTitleFont"">
<A HREF=""../../../com/larvalabs/svgandroid/package-summary.html"" target=""classFrame"">com.larvalabs.svgandroid</A></FONT>
<TABLE BORDER=""0"" WIDTH=""100%"" SUMMARY="""">
<TR>
<TD NOWRAP><FONT size=""+1"" CLASS=""FrameHeadingFont"">
Classes</FONT>&nbsp;
<FONT CLASS=""FrameItemFont"">
<BR>
<A HREF=""ParserHelper.html"" title=""class in com.larvalabs.svgandroid"" target=""classFrame"">ParserHelper</A>
<BR>
<A HREF=""SVG.html"" title=""class in com.larvalabs.svgandroid"" target=""classFrame"">SVG</A>
<BR>
<A HREF=""SVGParser.html"" title=""class in com.larvalabs.svgandroid"" target=""classFrame"">SVGParser</A></FONT></TD>
</TR>
</TABLE>


<TABLE BORDER=""0"" WIDTH=""100%"" SUMMARY="""">
<TR>
<TD NOWRAP><FONT size=""+1"" CLASS=""FrameHeadingFont"">
Exceptions</FONT>&nbsp;
<FONT CLASS=""FrameItemFont"">
<BR>
<A HREF=""SVGParseException.html"" title=""class in com.larvalabs.svgandroid"" target=""classFrame"">SVGParseException</A></FONT></TD>
</TR>
</TABLE>


</BODY>
</HTML>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'HTML', 'PUBLIC', '""-//W3C//DTD', 'HTML', '4.01', 'Transitional//EN""', '""http://www.w3.org/TR/html4/loose.dtd"">', '<!--NewPage-->', '<HTML>', '<HEAD>', '<!--', 'Generated', 'by', 'javadoc', '(build', '1.6.0_24)', 'on', 'Thu', 'May', '05', '12:12:13', 'EDT', '2011', '-->', '<TITLE>', 'com.larvalabs.svgandroid', '</TITLE>', '<META', 'NAME=""date""', 'CONTENT=""2011-05-05"">', '<LINK', 'REL', '=""stylesheet""', 'TYPE=""text/css""', 'HREF=""../../../stylesheet.css""', 'TITLE=""Style"">', '</HEAD>', '<BODY', 'BGCOLOR=""white"">', '<FONT', 'size=""+1""', 'CLASS=""FrameTitleFont"">', '<A', 'HREF=""../../../com/larvalabs/svgandroid/package-summary.html""', 'target=""classFrame"">com.larvalabs.svgandroid</A></FONT>', '<TABLE', 'BORDER=""0""', 'WIDTH=""100%""', 'SUMMARY="""">', '<TR>', '<TD', 'NOWRAP><FONT', 'size=""+1""', 'CLASS=""FrameHeadingFont"">', 'Classes</FONT>&nbsp;', '<FONT', 'CLASS=""FrameItemFont"">', '<BR>', '<A', 'HREF=""ParserHelper.html""', 'title=""class', 'in', 'com.larvalabs.svgandroid""', 'target=""classFrame"">ParserHelper</A>', '<BR>', '<A', 'HREF=""SVG.html""', 'title=""class', 'in', 'com.larvalabs.svgandroid""', 'target=""classFrame"">SVG</A>', '<BR>', '<A', 'HREF=""SVGParser.html""', 'title=""class', 'in', 'com.larvalabs.svgandroid""', 'target=""classFrame"">SVGParser</A></FONT></TD>', '</TR>', '</TABLE>', '<TABLE', 'BORDER=""0""', 'WIDTH=""100%""', 'SUMMARY="""">', '<TR>', '<TD', 'NOWRAP><FONT', 'size=""+1""', 'CLASS=""FrameHeadingFont"">', 'Exceptions</FONT>&nbsp;', '<FONT', 'CLASS=""FrameItemFont"">', '<BR>', '<A', 'HREF=""SVGParseException.html""', 'title=""class', 'in', 'com.larvalabs.svgandroid""', 'target=""classFrame"">SVGParseException</A></FONT></TD>', '</TR>', '</TABLE>', '</BODY>', '</HTML>', '```']",challenge not surrounded by ''': ,
"package com.elytradev.movingworld.common.event;

import com.elytradev.movingworld.common.chunk.LocatedBlock;
import net.minecraftforge.fml.common.eventhandler.Event;

/**
 * Created by DarkEvilMac on 2/22/2015.
 */

public class AssembleBlockEvent extends Event {

    public LocatedBlock block;

    public AssembleBlockEvent(LocatedBlock block) {
        this.block = block;
    }

}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.elytradev.movingworld.common.event;', 'import', 'com.elytradev.movingworld.common.chunk.LocatedBlock;', 'import', 'net.minecraftforge.fml.common.eventhandler.Event;', '/**', '*', 'Created', 'by', 'DarkEvilMac', 'on', '2/22/2015.', '*/', 'public', 'class', 'AssembleBlockEvent', 'extends', 'Event', '{', 'public', 'LocatedBlock', 'block;', 'public', 'AssembleBlockEvent(LocatedBlock', 'block)', '{', 'this.block', '=', 'block;', '}', '}```']",challenge not surrounded by ''': ,
"# AUTOGENERATED FILE
FROM balenalib/beagleboard-xm-debian:bullseye-run

RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        ca-certificates \
        curl \
        \
# .NET Core dependencies
        libc6 \
        libgcc1 \
        libgssapi-krb5-2 \
        libicu63 \
        libssl1.1 \
        libstdc++6 \
        zlib1g \
    && rm -rf /var/lib/apt/lists/*

# Configure web servers to bind to port 80 when present
ENV ASPNETCORE_URLS=http://+:80 \
    # Enable detection of running in a container
    DOTNET_RUNNING_IN_CONTAINER=true

# Install .NET Core SDK
ENV DOTNET_SDK_VERSION 3.1.406

RUN curl -SL --output dotnet.tar.gz ""https://dotnetcli.blob.core.windows.net/dotnet/Sdk/$DOTNET_SDK_VERSION/dotnet-sdk-$DOTNET_SDK_VERSION-linux-arm.tar.gz"" \
    && dotnet_sha512='b978d8f8dd6af16abb16f42b8c36c356d18e6e88309967ae9faa9a8009245e4a94183a4c2a6acad48ba342a7429de8055e4e32aca79f0c1d2f2c3bca1a318530' \
    && echo ""$dotnet_sha512 dotnet.tar.gz"" | sha512sum -c - \
    && mkdir -p /usr/share/dotnet \
    && tar -zxf dotnet.tar.gz -C /usr/share/dotnet \
    && rm dotnet.tar.gz \
    && ln -s /usr/share/dotnet/dotnet /usr/bin/dotnet

# Configure web servers to bind to port 80 when present
# Enable correct mode for dotnet watch (only mode supported in a container)
ENV DOTNET_USE_POLLING_FILE_WATCHER=true \
    # Skip extraction of XML docs - generally not useful within an image/container - helps performance
    NUGET_XMLDOC_MODE=skip

# Trigger first run experience by running arbitrary cmd to populate local package cache
RUN dotnet help

CMD [""echo"",""'No CMD command was set in Dockerfile! Details about CMD command could be found in Dockerfile Guide section in our Docs. Here's the link: https://balena.io/docs""]

 RUN curl -SLO ""https://raw.githubusercontent.com/balena-io-library/base-images/8accad6af708fca7271c5c65f18a86782e19f877/scripts/assets/tests/test-stack@dotnet.sh"" \
  && echo ""Running test-stack@dotnet"" \
  && chmod +x test-stack@dotnet.sh \
  && bash test-stack@dotnet.sh \
  && rm -rf test-stack@dotnet.sh 

RUN [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \nArchitecture: ARM v7 \nOS: Debian Bullseye \nVariant: run variant \nDefault variable(s): UDEV=off \nThe following software stack is preinstalled: \ndotnet 3.1-sdk \nExtra features: \n- Easy way to install packages with `install_packages <package-name>` command \n- Run anywhere with cross-build feature  (for ARM only) \n- Keep the container idling with `balena-idle` command \n- Show base image details with `balena-info` command' > /.balena/messages/image-info

RUN echo '#!/bin/sh.real\nbalena-info\nrm -f /bin/sh\ncp /bin/sh.real /bin/sh\n/bin/sh ""$@""' > /bin/sh-shim \
	&& chmod +x /bin/sh-shim \
	&& cp /bin/sh /bin/sh.real \
	&& mv /bin/sh-shim /bin/sh","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', 'AUTOGENERATED', 'FILE', 'FROM', 'balenalib/beagleboard-xm-debian:bullseye-run', 'RUN', 'apt-get', 'update', '\\', '&&', 'apt-get', 'install', '-y', '--no-install-recommends', '\\', 'ca-certificates', '\\', 'curl', '\\', '\\', '#', '.NET', 'Core', 'dependencies', 'libc6', '\\', 'libgcc1', '\\', 'libgssapi-krb5-2', '\\', 'libicu63', '\\', 'libssl1.1', '\\', 'libstdc++6', '\\', 'zlib1g', '\\', '&&', 'rm', '-rf', '/var/lib/apt/lists/*', '#', 'Configure', 'web', 'servers', 'to', 'bind', 'to', 'port', '80', 'when', 'present', 'ENV', 'ASPNETCORE_URLS=http://+:80', '\\', '#', 'Enable', 'detection', 'of', 'running', 'in', 'a', 'container', 'DOTNET_RUNNING_IN_CONTAINER=true', '#', 'Install', '.NET', 'Core', 'SDK', 'ENV', 'DOTNET_SDK_VERSION', '3.1.406', 'RUN', 'curl', '-SL', '--output', 'dotnet.tar.gz', '""https://dotnetcli.blob.core.windows.net/dotnet/Sdk/$DOTNET_SDK_VERSION/dotnet-sdk-$DOTNET_SDK_VERSION-linux-arm.tar.gz""', '\\', '&&', ""dotnet_sha512='b978d8f8dd6af16abb16f42b8c36c356d18e6e88309967ae9faa9a8009245e4a94183a4c2a6acad48ba342a7429de8055e4e32aca79f0c1d2f2c3bca1a318530'"", '\\', '&&', 'echo', '""$dotnet_sha512', 'dotnet.tar.gz""', '|', 'sha512sum', '-c', '-', '\\', '&&', 'mkdir', '-p', '/usr/share/dotnet', '\\', '&&', 'tar', '-zxf', 'dotnet.tar.gz', '-C', '/usr/share/dotnet', '\\', '&&', 'rm', 'dotnet.tar.gz', '\\', '&&', 'ln', '-s', '/usr/share/dotnet/dotnet', '/usr/bin/dotnet', '#', 'Configure', 'web', 'servers', 'to', 'bind', 'to', 'port', '80', 'when', 'present', '#', 'Enable', 'correct', 'mode', 'for', 'dotnet', 'watch', '(only', 'mode', 'supported', 'in', 'a', 'container)', 'ENV', 'DOTNET_USE_POLLING_FILE_WATCHER=true', '\\', '#', 'Skip', 'extraction', 'of', 'XML', 'docs', '-', 'generally', 'not', 'useful', 'within', 'an', 'image/container', '-', 'helps', 'performance', 'NUGET_XMLDOC_MODE=skip', '#', 'Trigger', 'first', 'run', 'experience', 'by', 'running', 'arbitrary', 'cmd', 'to', 'populate', 'local', 'package', 'cache', 'RUN', 'dotnet', 'help', 'CMD', '[""echo"",""\'No', 'CMD', 'command', 'was', 'set', 'in', 'Dockerfile!', 'Details', 'about', 'CMD', 'command', 'could', 'be', 'found', 'in', 'Dockerfile', 'Guide', 'section', 'in', 'our', 'Docs.', ""Here's"", 'the', 'link:', 'https://balena.io/docs""]', 'RUN', 'curl', '-SLO', '""https://raw.githubusercontent.com/balena-io-library/base-images/8accad6af708fca7271c5c65f18a86782e19f877/scripts/assets/tests/test-stack@dotnet.sh""', '\\', '&&', 'echo', '""Running', 'test-stack@dotnet""', '\\', '&&', 'chmod', '+x', 'test-stack@dotnet.sh', '\\', '&&', 'bash', 'test-stack@dotnet.sh', '\\', '&&', 'rm', '-rf', 'test-stack@dotnet.sh', 'RUN', '[', '!', '-d', '/.balena/messages', ']', '&&', 'mkdir', '-p', '/.balena/messages;', 'echo', ""'Here"", 'are', 'a', 'few', 'details', 'about', 'this', 'Docker', 'image', '(For', 'more', 'information', 'please', 'visit', 'https://www.balena.io/docs/reference/base-images/base-images/):', '\\nArchitecture:', 'ARM', 'v7', '\\nOS:', 'Debian', 'Bullseye', '\\nVariant:', 'run', 'variant', '\\nDefault', 'variable(s):', 'UDEV=off', '\\nThe', 'following', 'software', 'stack', 'is', 'preinstalled:', '\\ndotnet', '3.1-sdk', '\\nExtra', 'features:', '\\n-', 'Easy', 'way', 'to', 'install', 'packages', 'with', '`install_packages', '<package-name>`', 'command', '\\n-', 'Run', 'anywhere', 'with', 'cross-build', 'feature', '(for', 'ARM', 'only)', '\\n-', 'Keep', 'the', 'container', 'idling', 'with', '`balena-idle`', 'command', '\\n-', 'Show', 'base', 'image', 'details', 'with', '`balena-info`', ""command'"", '>', '/.balena/messages/image-info', 'RUN', 'echo', ""'#!/bin/sh.real\\nbalena-info\\nrm"", '-f', '/bin/sh\\ncp', '/bin/sh.real', '/bin/sh\\n/bin/sh', '""$@""\'', '>', '/bin/sh-shim', '\\', '&&', 'chmod', '+x', '/bin/sh-shim', '\\', '&&', 'cp', '/bin/sh', '/bin/sh.real', '\\', '&&', 'mv', '/bin/sh-shim', '/bin/sh```']",challenge not surrounded by ''': ,
"#!/bin/sh
#
# arch/parisc/install.sh, derived from arch/i386/boot/install.sh
#
# This file is subject to the terms and conditions of the GNU General Public
# License.  See the file ""COPYING"" in the main directory of this archive
# for more details.
#
# Copyright (C) 1995 by Linus Torvalds
#
# Adapted from code in arch/i386/boot/Makefile by H. Peter Anvin
#
# ""make install"" script for i386 architecture
#
# Arguments:
#   $1 - kernel version
#   $2 - kernel image file
#   $3 - kernel map file
#   $4 - default install path (blank if root directory)
#

verify () {
	if [ ! -f ""$1"" ]; then
		echo """"                                                   1>&2
		echo "" *** Missing file: $1""                              1>&2
		echo ' *** You need to run ""make"" before ""make install"".' 1>&2
		echo """"                                                   1>&2
		exit 1
	fi
}

# Make sure the files actually exist

verify ""$2""
verify ""$3""

# User may have a custom install script

if [ -n ""${INSTALLKERNEL}"" ]; then
  if [ -x ~/bin/${INSTALLKERNEL} ]; then exec ~/bin/${INSTALLKERNEL} ""$@""; fi
  if [ -x /sbin/${INSTALLKERNEL} ]; then exec /sbin/${INSTALLKERNEL} ""$@""; fi
fi

# Default install

if [ ""$(basename $2)"" = ""vmlinuz"" ]; then
# Compressed install
  echo ""Installing compressed kernel""
  base=vmlinuz
else
# Normal install
  echo ""Installing normal kernel""
  base=vmlinux
fi

if [ -f $4/$base-$1 ]; then
  mv $4/$base-$1 $4/$base-$1.old
fi
cat $2 > $4/$base-$1

# Install system map file
if [ -f $4/System.map-$1 ]; then
  mv $4/System.map-$1 $4/System.map-$1.old
fi
cp $3 $4/System.map-$1

","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/bin/sh', '#', '#', 'arch/parisc/install.sh,', 'derived', 'from', 'arch/i386/boot/install.sh', '#', '#', 'This', 'file', 'is', 'subject', 'to', 'the', 'terms', 'and', 'conditions', 'of', 'the', 'GNU', 'General', 'Public', '#', 'License.', 'See', 'the', 'file', '""COPYING""', 'in', 'the', 'main', 'directory', 'of', 'this', 'archive', '#', 'for', 'more', 'details.', '#', '#', 'Copyright', '(C)', '1995', 'by', 'Linus', 'Torvalds', '#', '#', 'Adapted', 'from', 'code', 'in', 'arch/i386/boot/Makefile', 'by', 'H.', 'Peter', 'Anvin', '#', '#', '""make', 'install""', 'script', 'for', 'i386', 'architecture', '#', '#', 'Arguments:', '#', '$1', '-', 'kernel', 'version', '#', '$2', '-', 'kernel', 'image', 'file', '#', '$3', '-', 'kernel', 'map', 'file', '#', '$4', '-', 'default', 'install', 'path', '(blank', 'if', 'root', 'directory)', '#', 'verify', '()', '{', 'if', '[', '!', '-f', '""$1""', '];', 'then', 'echo', '""""', '1>&2', 'echo', '""', '***', 'Missing', 'file:', '$1""', '1>&2', 'echo', ""'"", '***', 'You', 'need', 'to', 'run', '""make""', 'before', '""make', 'install"".\'', '1>&2', 'echo', '""""', '1>&2', 'exit', '1', 'fi', '}', '#', 'Make', 'sure', 'the', 'files', 'actually', 'exist', 'verify', '""$2""', 'verify', '""$3""', '#', 'User', 'may', 'have', 'a', 'custom', 'install', 'script', 'if', '[', '-n', '""${INSTALLKERNEL}""', '];', 'then', 'if', '[', '-x', '~/bin/${INSTALLKERNEL}', '];', 'then', 'exec', '~/bin/${INSTALLKERNEL}', '""$@"";', 'fi', 'if', '[', '-x', '/sbin/${INSTALLKERNEL}', '];', 'then', 'exec', '/sbin/${INSTALLKERNEL}', '""$@"";', 'fi', 'fi', '#', 'Default', 'install', 'if', '[', '""$(basename', '$2)""', '=', '""vmlinuz""', '];', 'then', '#', 'Compressed', 'install', 'echo', '""Installing', 'compressed', 'kernel""', 'base=vmlinuz', 'else', '#', 'Normal', 'install', 'echo', '""Installing', 'normal', 'kernel""', 'base=vmlinux', 'fi', 'if', '[', '-f', '$4/$base-$1', '];', 'then', 'mv', '$4/$base-$1', '$4/$base-$1.old', 'fi', 'cat', '$2', '>', '$4/$base-$1', '#', 'Install', 'system', 'map', 'file', 'if', '[', '-f', '$4/System.map-$1', '];', 'then', 'mv', '$4/System.map-$1', '$4/System.map-$1.old', 'fi', 'cp', '$3', '$4/System.map-$1', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"" ""http://www.w3.org/TR/html4/loose.dtd"">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.5.0_03) on Sat Nov 12 18:10:35 CST 2005 -->
<TITLE>
org.jdesktop.swingx.plaf.metal
</TITLE>

<META NAME=""keywords"" CONTENT=""org.jdesktop.swingx.plaf.metal package"">

<LINK REL =""stylesheet"" TYPE=""text/css"" HREF=""../../../../../stylesheet.css"" TITLE=""Style"">


</HEAD>

<BODY BGCOLOR=""white"">
<FONT size=""+1"" CLASS=""FrameTitleFont"">
<A HREF=""../../../../../org/jdesktop/swingx/plaf/metal/package-summary.html"" target=""classFrame"">org.jdesktop.swingx.plaf.metal</A></FONT>
<TABLE BORDER=""0"" WIDTH=""100%"" SUMMARY="""">
<TR>
<TD NOWRAP><FONT size=""+1"" CLASS=""FrameHeadingFont"">
Classes</FONT>&nbsp;
<FONT CLASS=""FrameItemFont"">
<BR>
<A HREF=""MetalLookAndFeelAddons.html"" title=""class in org.jdesktop.swingx.plaf.metal"" target=""classFrame"">MetalLookAndFeelAddons</A>
<BR>
<A HREF=""MetalTaskPaneUI.html"" title=""class in org.jdesktop.swingx.plaf.metal"" target=""classFrame"">MetalTaskPaneUI</A>
<BR>
<A HREF=""MetalTitledPanelUI.html"" title=""class in org.jdesktop.swingx.plaf.metal"" target=""classFrame"">MetalTitledPanelUI</A></FONT></TD>
</TR>
</TABLE>


</BODY>
</HTML>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'HTML', 'PUBLIC', '""-//W3C//DTD', 'HTML', '4.01', 'Transitional//EN""', '""http://www.w3.org/TR/html4/loose.dtd"">', '<!--NewPage-->', '<HTML>', '<HEAD>', '<!--', 'Generated', 'by', 'javadoc', '(build', '1.5.0_03)', 'on', 'Sat', 'Nov', '12', '18:10:35', 'CST', '2005', '-->', '<TITLE>', 'org.jdesktop.swingx.plaf.metal', '</TITLE>', '<META', 'NAME=""keywords""', 'CONTENT=""org.jdesktop.swingx.plaf.metal', 'package"">', '<LINK', 'REL', '=""stylesheet""', 'TYPE=""text/css""', 'HREF=""../../../../../stylesheet.css""', 'TITLE=""Style"">', '</HEAD>', '<BODY', 'BGCOLOR=""white"">', '<FONT', 'size=""+1""', 'CLASS=""FrameTitleFont"">', '<A', 'HREF=""../../../../../org/jdesktop/swingx/plaf/metal/package-summary.html""', 'target=""classFrame"">org.jdesktop.swingx.plaf.metal</A></FONT>', '<TABLE', 'BORDER=""0""', 'WIDTH=""100%""', 'SUMMARY="""">', '<TR>', '<TD', 'NOWRAP><FONT', 'size=""+1""', 'CLASS=""FrameHeadingFont"">', 'Classes</FONT>&nbsp;', '<FONT', 'CLASS=""FrameItemFont"">', '<BR>', '<A', 'HREF=""MetalLookAndFeelAddons.html""', 'title=""class', 'in', 'org.jdesktop.swingx.plaf.metal""', 'target=""classFrame"">MetalLookAndFeelAddons</A>', '<BR>', '<A', 'HREF=""MetalTaskPaneUI.html""', 'title=""class', 'in', 'org.jdesktop.swingx.plaf.metal""', 'target=""classFrame"">MetalTaskPaneUI</A>', '<BR>', '<A', 'HREF=""MetalTitledPanelUI.html""', 'title=""class', 'in', 'org.jdesktop.swingx.plaf.metal""', 'target=""classFrame"">MetalTitledPanelUI</A></FONT></TD>', '</TR>', '</TABLE>', '</BODY>', '</HTML>', '```']",challenge not surrounded by ''': ,
"package com.github.ltsopensource.biz.logger;

import com.github.ltsopensource.core.cluster.Config;
import com.github.ltsopensource.core.spi.SPI;
import com.github.ltsopensource.core.constant.ExtConfig;

/**
 * @author Robert HG (254963746@qq.com) on 5/19/15.
 */
@SPI(key = ExtConfig.JOB_LOGGER, dftValue = ""mysql"")
public interface JobLoggerFactory {

    JobLogger getJobLogger(Config config);

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.github.ltsopensource.biz.logger;', 'import', 'com.github.ltsopensource.core.cluster.Config;', 'import', 'com.github.ltsopensource.core.spi.SPI;', 'import', 'com.github.ltsopensource.core.constant.ExtConfig;', '/**', '*', '@author', 'Robert', 'HG', '(254963746@qq.com)', 'on', '5/19/15.', '*/', '@SPI(key', '=', 'ExtConfig.JOB_LOGGER,', 'dftValue', '=', '""mysql"")', 'public', 'interface', 'JobLoggerFactory', '{', 'JobLogger', 'getJobLogger(Config', 'config);', '}', '```']",challenge not surrounded by ''': ,
"/*****************************************************************************
 *
 *                      HOPERUN PROPRIETARY INFORMATION
 *
 *          The information contained herein is proprietary to HopeRun
 *           and shall not be reproduced or disclosed in whole or in part
 *                    or used for any design or manufacture
 *              without direct written authorization from HopeRun.
 *
 *            Copyright (c) 2012 by HopeRun.  All rights reserved.
 *
 *****************************************************************************/
package com.hoperun.telematics.mobile.adapter;

import java.util.List;

import android.content.Context;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.TextView;

import com.hoperun.telematics.mobile.R;
import com.hoperun.telematics.mobile.model.score.Score;

/**
 * 
 * @author chen_guigui
 * 
 */
public class ScoreAdapter extends BaseAdapter{
	private LayoutInflater mInflater;
	private Context mContext;
	private List<Score> mList;
	
	/**
     * Creates a new instance of ScoreAdapter.
     */
    public ScoreAdapter(Context context, List<Score> list) {
	    super();
	    this.mContext = context;
	    this.mList = list;
	    Log.i(this.getClass().getName(), ""mList size is "" + mList.size());
		mInflater = LayoutInflater.from(context);
    }

	/* (non-Javadoc)
     * @see android.widget.Adapter#getCount()
     */
    @Override
    public int getCount() {
	    return mList.size();
    }

	/* (non-Javadoc)
     * @see android.widget.Adapter#getItem(int)
     */
    @Override
    public Object getItem(int position) {
	    return mList.get(position);
    }

	/* (non-Javadoc)
     * @see android.widget.Adapter#getItemId(int)
     */
    @Override
    public long getItemId(int position) {
	    return position;
    }

	/* (non-Javadoc)
     * @see android.widget.Adapter#getView(int, android.view.View, android.view.ViewGroup)
     */
    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
    	if(convertView == null) {
    		convertView = mInflater.inflate(R.layout.ui_score_item_layout, null);
    	}
    	TextView numberTextView = (TextView) convertView.findViewById(R.id.number);
    	TextView nameTextView = (TextView) convertView.findViewById(R.id.name);
    	TextView scoreTextView = (TextView) convertView.findViewById(R.id.score);
    	
    	numberTextView.setText(mList.get(position).getId());
    	nameTextView.setText(mList.get(position).getName());
    	scoreTextView.setText(String.format(""%s"", mList.get(position).getCost()));
	    return convertView;
    }

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*****************************************************************************', '*', '*', 'HOPERUN', 'PROPRIETARY', 'INFORMATION', '*', '*', 'The', 'information', 'contained', 'herein', 'is', 'proprietary', 'to', 'HopeRun', '*', 'and', 'shall', 'not', 'be', 'reproduced', 'or', 'disclosed', 'in', 'whole', 'or', 'in', 'part', '*', 'or', 'used', 'for', 'any', 'design', 'or', 'manufacture', '*', 'without', 'direct', 'written', 'authorization', 'from', 'HopeRun.', '*', '*', 'Copyright', '(c)', '2012', 'by', 'HopeRun.', 'All', 'rights', 'reserved.', '*', '*****************************************************************************/', 'package', 'com.hoperun.telematics.mobile.adapter;', 'import', 'java.util.List;', 'import', 'android.content.Context;', 'import', 'android.util.Log;', 'import', 'android.view.LayoutInflater;', 'import', 'android.view.View;', 'import', 'android.view.ViewGroup;', 'import', 'android.widget.BaseAdapter;', 'import', 'android.widget.TextView;', 'import', 'com.hoperun.telematics.mobile.R;', 'import', 'com.hoperun.telematics.mobile.model.score.Score;', '/**', '*', '*', '@author', 'chen_guigui', '*', '*/', 'public', 'class', 'ScoreAdapter', 'extends', 'BaseAdapter{', 'private', 'LayoutInflater', 'mInflater;', 'private', 'Context', 'mContext;', 'private', 'List<Score>', 'mList;', '/**', '*', 'Creates', 'a', 'new', 'instance', 'of', 'ScoreAdapter.', '*/', 'public', 'ScoreAdapter(Context', 'context,', 'List<Score>', 'list)', '{', 'super();', 'this.mContext', '=', 'context;', 'this.mList', '=', 'list;', 'Log.i(this.getClass().getName(),', '""mList', 'size', 'is', '""', '+', 'mList.size());', 'mInflater', '=', 'LayoutInflater.from(context);', '}', '/*', '(non-Javadoc)', '*', '@see', 'android.widget.Adapter#getCount()', '*/', '@Override', 'public', 'int', 'getCount()', '{', 'return', 'mList.size();', '}', '/*', '(non-Javadoc)', '*', '@see', 'android.widget.Adapter#getItem(int)', '*/', '@Override', 'public', 'Object', 'getItem(int', 'position)', '{', 'return', 'mList.get(position);', '}', '/*', '(non-Javadoc)', '*', '@see', 'android.widget.Adapter#getItemId(int)', '*/', '@Override', 'public', 'long', 'getItemId(int', 'position)', '{', 'return', 'position;', '}', '/*', '(non-Javadoc)', '*', '@see', 'android.widget.Adapter#getView(int,', 'android.view.View,', 'android.view.ViewGroup)', '*/', '@Override', 'public', 'View', 'getView(int', 'position,', 'View', 'convertView,', 'ViewGroup', 'parent)', '{', 'if(convertView', '==', 'null)', '{', 'convertView', '=', 'mInflater.inflate(R.layout.ui_score_item_layout,', 'null);', '}', 'TextView', 'numberTextView', '=', '(TextView)', 'convertView.findViewById(R.id.number);', 'TextView', 'nameTextView', '=', '(TextView)', 'convertView.findViewById(R.id.name);', 'TextView', 'scoreTextView', '=', '(TextView)', 'convertView.findViewById(R.id.score);', 'numberTextView.setText(mList.get(position).getId());', 'nameTextView.setText(mList.get(position).getName());', 'scoreTextView.setText(String.format(""%s"",', 'mList.get(position).getCost()));', 'return', 'convertView;', '}', '}', '```']",challenge not surrounded by ''': ,
"
/*
 * Camel EndpointConfiguration generated by camel-api-component-maven-plugin
 */
package org.apache.camel.component.twilio;

import org.apache.camel.spi.ApiMethod;
import org.apache.camel.spi.ApiParam;
import org.apache.camel.spi.ApiParams;
import org.apache.camel.spi.Configurer;
import org.apache.camel.spi.UriParam;
import org.apache.camel.spi.UriParams;

/**
 * Camel endpoint configuration for {@link com.twilio.rest.api.v2010.account.NewSigningKey}.
 */
@ApiParams(apiName = ""new-signing-key"", 
           description = """",
           apiMethods = {@ApiMethod(methodName = ""creator"", description=""Create a NewSigningKeyCreator to execute create"", signatures={""com.twilio.rest.api.v2010.account.NewSigningKeyCreator creator()"", ""com.twilio.rest.api.v2010.account.NewSigningKeyCreator creator(String pathAccountSid)""}), }, aliases = {""^creator$=create"", ""^deleter$=delete"", ""^fetcher$=fetch"", ""^reader$=read"", ""^updater$=update""})
@UriParams
@Configurer(extended = true)
public final class NewSigningKeyEndpointConfiguration extends TwilioConfiguration {
    @UriParam
    @ApiParam(optional = false, apiMethods = {@ApiMethod(methodName = ""creator"", description=""The SID of the Account that will be responsible for the new Key resource"")})
    private String pathAccountSid;

    public String getPathAccountSid() {
        return pathAccountSid;
    }

    public void setPathAccountSid(String pathAccountSid) {
        this.pathAccountSid = pathAccountSid;
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```', '/*', '*', 'Camel', 'EndpointConfiguration', 'generated', 'by', 'camel-api-component-maven-plugin', '*/', 'package', 'org.apache.camel.component.twilio;', 'import', 'org.apache.camel.spi.ApiMethod;', 'import', 'org.apache.camel.spi.ApiParam;', 'import', 'org.apache.camel.spi.ApiParams;', 'import', 'org.apache.camel.spi.Configurer;', 'import', 'org.apache.camel.spi.UriParam;', 'import', 'org.apache.camel.spi.UriParams;', '/**', '*', 'Camel', 'endpoint', 'configuration', 'for', '{@link', 'com.twilio.rest.api.v2010.account.NewSigningKey}.', '*/', '@ApiParams(apiName', '=', '""new-signing-key"",', 'description', '=', '"""",', 'apiMethods', '=', '{@ApiMethod(methodName', '=', '""creator"",', 'description=""Create', 'a', 'NewSigningKeyCreator', 'to', 'execute', 'create"",', 'signatures={""com.twilio.rest.api.v2010.account.NewSigningKeyCreator', 'creator()"",', '""com.twilio.rest.api.v2010.account.NewSigningKeyCreator', 'creator(String', 'pathAccountSid)""}),', '},', 'aliases', '=', '{""^creator$=create"",', '""^deleter$=delete"",', '""^fetcher$=fetch"",', '""^reader$=read"",', '""^updater$=update""})', '@UriParams', '@Configurer(extended', '=', 'true)', 'public', 'final', 'class', 'NewSigningKeyEndpointConfiguration', 'extends', 'TwilioConfiguration', '{', '@UriParam', '@ApiParam(optional', '=', 'false,', 'apiMethods', '=', '{@ApiMethod(methodName', '=', '""creator"",', 'description=""The', 'SID', 'of', 'the', 'Account', 'that', 'will', 'be', 'responsible', 'for', 'the', 'new', 'Key', 'resource"")})', 'private', 'String', 'pathAccountSid;', 'public', 'String', 'getPathAccountSid()', '{', 'return', 'pathAccountSid;', '}', 'public', 'void', 'setPathAccountSid(String', 'pathAccountSid)', '{', 'this.pathAccountSid', '=', 'pathAccountSid;', '}', '}', '```']",challenge not surrounded by ''': ,
"/*
 * JBoss, Home of Professional Open Source
 * Copyright 2011, Red Hat, Inc. and individual contributors
 * by the @authors tag. See the copyright.txt in the distribution for a
 * full listing of individual contributors.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
 */

package org.restcomm.protocols.ss7.m3ua.impl.fsm;

/**
 *
 * @author amit bhayani
 * @author kulikov
 *
 */
public class UnknownTransitionException extends Exception {

    /**
     * Creates a new instance of <code>UnknownTransitionException</code> without detail message.
     */
    public UnknownTransitionException() {
    }

    /**
     * Constructs an instance of <code>UnknownTransitionException</code> with the specified detail message.
     *
     * @param msg the detail message.
     */
    public UnknownTransitionException(String msg) {
        super(msg);
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'JBoss,', 'Home', 'of', 'Professional', 'Open', 'Source', '*', 'Copyright', '2011,', 'Red', 'Hat,', 'Inc.', 'and', 'individual', 'contributors', '*', 'by', 'the', '@authors', 'tag.', 'See', 'the', 'copyright.txt', 'in', 'the', 'distribution', 'for', 'a', '*', 'full', 'listing', 'of', 'individual', 'contributors.', '*', '*', 'This', 'is', 'free', 'software;', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', 'it', '*', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'Lesser', 'General', 'Public', 'License', 'as', '*', 'published', 'by', 'the', 'Free', 'Software', 'Foundation;', 'either', 'version', '2.1', 'of', '*', 'the', 'License,', 'or', '(at', 'your', 'option)', 'any', 'later', 'version.', '*', '*', 'This', 'software', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', '*', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', '*', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', 'GNU', '*', 'Lesser', 'General', 'Public', 'License', 'for', 'more', 'details.', '*', '*', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'Lesser', 'General', 'Public', '*', 'License', 'along', 'with', 'this', 'software;', 'if', 'not,', 'write', 'to', 'the', 'Free', '*', 'Software', 'Foundation,', 'Inc.,', '51', 'Franklin', 'St,', 'Fifth', 'Floor,', 'Boston,', 'MA', '*', '02110-1301', 'USA,', 'or', 'see', 'the', 'FSF', 'site:', 'http://www.fsf.org.', '*/', 'package', 'org.restcomm.protocols.ss7.m3ua.impl.fsm;', '/**', '*', '*', '@author', 'amit', 'bhayani', '*', '@author', 'kulikov', '*', '*/', 'public', 'class', 'UnknownTransitionException', 'extends', 'Exception', '{', '/**', '*', 'Creates', 'a', 'new', 'instance', 'of', '<code>UnknownTransitionException</code>', 'without', 'detail', 'message.', '*/', 'public', 'UnknownTransitionException()', '{', '}', '/**', '*', 'Constructs', 'an', 'instance', 'of', '<code>UnknownTransitionException</code>', 'with', 'the', 'specified', 'detail', 'message.', '*', '*', '@param', 'msg', 'the', 'detail', 'message.', '*/', 'public', 'UnknownTransitionException(String', 'msg)', '{', 'super(msg);', '}', '}', '```']",challenge not surrounded by ''': ,
"import random
 
szám = 999 
kísérlet = 0
 
while szám % 2 != 0:
    kísérlet += 1
    szám = random.randint(1, 100)
    print('A(z) ', kísérlet, '. dobás eredménye: ', szám, '.', sep='')
 
print('A(z) ', kísérlet, '. dobás járt eredménnyel.', sep='')
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'random', 'szám', '=', '999', 'kísérlet', '=', '0', 'while', 'szám', '%', '2', '!=', '0:', 'kísérlet', '+=', '1', 'szám', '=', 'random.randint(1,', '100)', ""print('A(z)"", ""',"", 'kísérlet,', ""'."", 'dobás', 'eredménye:', ""',"", 'szám,', ""'.',"", ""sep='')"", ""print('A(z)"", ""',"", 'kísérlet,', ""'."", 'dobás', 'járt', ""eredménnyel.',"", ""sep='')"", '```']",challenge not surrounded by ''': ,
"package org.zstack.simulator.storage.primary.nfs;

import org.zstack.storage.primary.nfs.NfsPrimaryStorageKVMBackendCommands.*;
import org.zstack.utils.data.SizeUnit;

import java.util.ArrayList;
import java.util.List;

public class NfsPrimaryStorageSimulatorConfig {
    public volatile boolean createRootVolumeFromTemplateSuccess = true;
    public volatile boolean createRootVolumeFromTemplateException;
    public volatile long totalCapacity = SizeUnit.GIGABYTE.toByte(100);
    public volatile long availableCapacity = SizeUnit.GIGABYTE.toByte(100);
    public volatile boolean mountException = false;
    public volatile boolean mountSuccess = true;
    public volatile List<MountCmd> mountCmds = new ArrayList<MountCmd>();
    public volatile List<UnmountCmd> unmountCmds = new ArrayList<UnmountCmd>();
    public volatile boolean unmountSuccess = true;
    public volatile boolean unmountException = false;
    public volatile boolean createEmptyVolumeSuccess = true;
    public volatile boolean createTemplateFromRootVolumeSuccess = true;
    public volatile List<String> imageCache = new ArrayList<String>();
    public volatile boolean checkImageSuccess = true;
    public volatile boolean uploadToSftp = true;
    public volatile String backupSnapshotFailurePrimaryStorageInstallPath = null;
    public volatile List<UploadToSftpCmd> uploadToSftpCmds = new ArrayList<UploadToSftpCmd>();
    public volatile boolean downloadFromSftpSuccess = true;
    public volatile List<DownloadBitsFromSftpBackupStorageCmd> downloadFromSftpCmds = new ArrayList<DownloadBitsFromSftpBackupStorageCmd>();
    public volatile boolean deleteSuccess = true;
    public volatile List<DeleteCmd> deleteCmds = new ArrayList<DeleteCmd>();
    public volatile boolean mergeSnapshotSuccess = true;
    public volatile List<MergeSnapshotCmd> mergeSnapshotCmds = new ArrayList<MergeSnapshotCmd>();
    public volatile boolean rebaseAndMergeSnapshotSuccess = true;
    public volatile List<RebaseAndMergeSnapshotsCmd> rebaseAndMergeSnapshotsCmds = new ArrayList<RebaseAndMergeSnapshotsCmd>();
    public volatile boolean revertVolumeFromSnapshotSuccess = true;
    public volatile List<RevertVolumeFromSnapshotCmd> revertVolumeFromSnapshotCmds = new ArrayList<RevertVolumeFromSnapshotCmd>();
    public volatile List<MoveBitsCmd> moveBitsCmds = new ArrayList<MoveBitsCmd>();
    public volatile boolean moveBitsSuccess = true;
    public volatile boolean offlineMergeSnapshotSuccess = true;
    public volatile List<OfflineMergeSnapshotCmd> offlineMergeSnapshotCmds = new ArrayList<OfflineMergeSnapshotCmd>();
    public volatile List<RemountCmd> remountCmds = new ArrayList<RemountCmd>();
    public volatile boolean remountSuccess = true;
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'org.zstack.simulator.storage.primary.nfs;', 'import', 'org.zstack.storage.primary.nfs.NfsPrimaryStorageKVMBackendCommands.*;', 'import', 'org.zstack.utils.data.SizeUnit;', 'import', 'java.util.ArrayList;', 'import', 'java.util.List;', 'public', 'class', 'NfsPrimaryStorageSimulatorConfig', '{', 'public', 'volatile', 'boolean', 'createRootVolumeFromTemplateSuccess', '=', 'true;', 'public', 'volatile', 'boolean', 'createRootVolumeFromTemplateException;', 'public', 'volatile', 'long', 'totalCapacity', '=', 'SizeUnit.GIGABYTE.toByte(100);', 'public', 'volatile', 'long', 'availableCapacity', '=', 'SizeUnit.GIGABYTE.toByte(100);', 'public', 'volatile', 'boolean', 'mountException', '=', 'false;', 'public', 'volatile', 'boolean', 'mountSuccess', '=', 'true;', 'public', 'volatile', 'List<MountCmd>', 'mountCmds', '=', 'new', 'ArrayList<MountCmd>();', 'public', 'volatile', 'List<UnmountCmd>', 'unmountCmds', '=', 'new', 'ArrayList<UnmountCmd>();', 'public', 'volatile', 'boolean', 'unmountSuccess', '=', 'true;', 'public', 'volatile', 'boolean', 'unmountException', '=', 'false;', 'public', 'volatile', 'boolean', 'createEmptyVolumeSuccess', '=', 'true;', 'public', 'volatile', 'boolean', 'createTemplateFromRootVolumeSuccess', '=', 'true;', 'public', 'volatile', 'List<String>', 'imageCache', '=', 'new', 'ArrayList<String>();', 'public', 'volatile', 'boolean', 'checkImageSuccess', '=', 'true;', 'public', 'volatile', 'boolean', 'uploadToSftp', '=', 'true;', 'public', 'volatile', 'String', 'backupSnapshotFailurePrimaryStorageInstallPath', '=', 'null;', 'public', 'volatile', 'List<UploadToSftpCmd>', 'uploadToSftpCmds', '=', 'new', 'ArrayList<UploadToSftpCmd>();', 'public', 'volatile', 'boolean', 'downloadFromSftpSuccess', '=', 'true;', 'public', 'volatile', 'List<DownloadBitsFromSftpBackupStorageCmd>', 'downloadFromSftpCmds', '=', 'new', 'ArrayList<DownloadBitsFromSftpBackupStorageCmd>();', 'public', 'volatile', 'boolean', 'deleteSuccess', '=', 'true;', 'public', 'volatile', 'List<DeleteCmd>', 'deleteCmds', '=', 'new', 'ArrayList<DeleteCmd>();', 'public', 'volatile', 'boolean', 'mergeSnapshotSuccess', '=', 'true;', 'public', 'volatile', 'List<MergeSnapshotCmd>', 'mergeSnapshotCmds', '=', 'new', 'ArrayList<MergeSnapshotCmd>();', 'public', 'volatile', 'boolean', 'rebaseAndMergeSnapshotSuccess', '=', 'true;', 'public', 'volatile', 'List<RebaseAndMergeSnapshotsCmd>', 'rebaseAndMergeSnapshotsCmds', '=', 'new', 'ArrayList<RebaseAndMergeSnapshotsCmd>();', 'public', 'volatile', 'boolean', 'revertVolumeFromSnapshotSuccess', '=', 'true;', 'public', 'volatile', 'List<RevertVolumeFromSnapshotCmd>', 'revertVolumeFromSnapshotCmds', '=', 'new', 'ArrayList<RevertVolumeFromSnapshotCmd>();', 'public', 'volatile', 'List<MoveBitsCmd>', 'moveBitsCmds', '=', 'new', 'ArrayList<MoveBitsCmd>();', 'public', 'volatile', 'boolean', 'moveBitsSuccess', '=', 'true;', 'public', 'volatile', 'boolean', 'offlineMergeSnapshotSuccess', '=', 'true;', 'public', 'volatile', 'List<OfflineMergeSnapshotCmd>', 'offlineMergeSnapshotCmds', '=', 'new', 'ArrayList<OfflineMergeSnapshotCmd>();', 'public', 'volatile', 'List<RemountCmd>', 'remountCmds', '=', 'new', 'ArrayList<RemountCmd>();', 'public', 'volatile', 'boolean', 'remountSuccess', '=', 'true;', '}', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE html>
<html>
<head>
    <meta charset=""utf-8"">
    <meta name=""description"" content=""Description of you Event"">
    <meta name=""keywords"" content=""Event,Feed,Live,Tour"">
    <meta name=""author"" content=""Host of Event"">
    <meta name=""apple-mobile-web-app-capable"" content=""yes"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1, maximum-scale=1"">
    <title>Your Event</title>
    <link rel=""stylesheet"" href=""assets/css/bootstrap.min.css"">
    <link rel=""stylesheet"" href=""assets/css/app.css"">
</head>
<body>
    <main class=""application"">
        <nav class=""navbar navbar-default"">
            <div class=""container-fluid"">
                <div class=""navbar-header"">
                    <button type=""button"" class=""navbar-toggle collapsed"" data-toggle=""collapse"" data-target=""#main-navbar-collapse"">
                        <span class=""sr-only"">Toggle navigation</span>
                        <span class=""icon-bar""></span>
                        <span class=""icon-bar""></span>
                        <span class=""icon-bar""></span>
                    </button>
                    <a class=""navbar-brand"" href=""#"">Your Event</a>
                </div>
                <div class=""collapse navbar-collapse"" id=""main-navbar-collapse"">
                    <ul class=""nav navbar-nav"">
                        <li class=""active""><a href=""#prevent"">Home <span class=""sr-only"">(current)</span></a></li>
                        <li><a href=""twitter.html"">Twitter Feed</a></li>
                        <li><a href=""lineup.html"">Lineup</a></li>
                    </ul>
                </div>
            </div>
        </nav>
        <div class=""container"">
            <ul class=""breadcrumb"">
                <li><a href=""index.html"">Event</a></li>
                <li class=""active"">Home</li>
            </ul>
            <h4>Information</h4>
            <p>
                Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.
            </p>
        </div>
    </main>
    <script src=""assets/js/jquery-2.1.4.min.js""></script>
    <script src=""assets/js/bootstrap.min.js""></script>
    <script src=""assets/js/app.js""></script>
</body>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'html>', '<html>', '<head>', '<meta', 'charset=""utf-8"">', '<meta', 'name=""description""', 'content=""Description', 'of', 'you', 'Event"">', '<meta', 'name=""keywords""', 'content=""Event,Feed,Live,Tour"">', '<meta', 'name=""author""', 'content=""Host', 'of', 'Event"">', '<meta', 'name=""apple-mobile-web-app-capable""', 'content=""yes"">', '<meta', 'name=""viewport""', 'content=""width=device-width,', 'initial-scale=1,', 'maximum-scale=1"">', '<title>Your', 'Event</title>', '<link', 'rel=""stylesheet""', 'href=""assets/css/bootstrap.min.css"">', '<link', 'rel=""stylesheet""', 'href=""assets/css/app.css"">', '</head>', '<body>', '<main', 'class=""application"">', '<nav', 'class=""navbar', 'navbar-default"">', '<div', 'class=""container-fluid"">', '<div', 'class=""navbar-header"">', '<button', 'type=""button""', 'class=""navbar-toggle', 'collapsed""', 'data-toggle=""collapse""', 'data-target=""#main-navbar-collapse"">', '<span', 'class=""sr-only"">Toggle', 'navigation</span>', '<span', 'class=""icon-bar""></span>', '<span', 'class=""icon-bar""></span>', '<span', 'class=""icon-bar""></span>', '</button>', '<a', 'class=""navbar-brand""', 'href=""#"">Your', 'Event</a>', '</div>', '<div', 'class=""collapse', 'navbar-collapse""', 'id=""main-navbar-collapse"">', '<ul', 'class=""nav', 'navbar-nav"">', '<li', 'class=""active""><a', 'href=""#prevent"">Home', '<span', 'class=""sr-only"">(current)</span></a></li>', '<li><a', 'href=""twitter.html"">Twitter', 'Feed</a></li>', '<li><a', 'href=""lineup.html"">Lineup</a></li>', '</ul>', '</div>', '</div>', '</nav>', '<div', 'class=""container"">', '<ul', 'class=""breadcrumb"">', '<li><a', 'href=""index.html"">Event</a></li>', '<li', 'class=""active"">Home</li>', '</ul>', '<h4>Information</h4>', '<p>', 'Lorem', 'ipsum', 'dolor', 'sit', 'amet,', 'consetetur', 'sadipscing', 'elitr,', 'sed', 'diam', 'nonumy', 'eirmod', 'tempor', 'invidunt', 'ut', 'labore', 'et', 'dolore', 'magna', 'aliquyam', 'erat,', 'sed', 'diam', 'voluptua.', 'At', 'vero', 'eos', 'et', 'accusam', 'et', 'justo', 'duo', 'dolores', 'et', 'ea', 'rebum.', 'Stet', 'clita', 'kasd', 'gubergren,', 'no', 'sea', 'takimata', 'sanctus', 'est', 'Lorem', 'ipsum', 'dolor', 'sit', 'amet.', 'Lorem', 'ipsum', 'dolor', 'sit', 'amet,', 'consetetur', 'sadipscing', 'elitr,', 'sed', 'diam', 'nonumy', 'eirmod', 'tempor', 'invidunt', 'ut', 'labore', 'et', 'dolore', 'magna', 'aliquyam', 'erat,', 'sed', 'diam', 'voluptua.', 'At', 'vero', 'eos', 'et', 'accusam', 'et', 'justo', 'duo', 'dolores', 'et', 'ea', 'rebum.', 'Stet', 'clita', 'kasd', 'gubergren,', 'no', 'sea', 'takimata', 'sanctus', 'est', 'Lorem', 'ipsum', 'dolor', 'sit', 'amet.', '</p>', '</div>', '</main>', '<script', 'src=""assets/js/jquery-2.1.4.min.js""></script>', '<script', 'src=""assets/js/bootstrap.min.js""></script>', '<script', 'src=""assets/js/app.js""></script>', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"package fr.javatronic.blog.massive.annotation1.sub1;

import fr.javatronic.blog.processor.Annotation_001;

@Annotation_001
public class Class_9906 {
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'fr.javatronic.blog.massive.annotation1.sub1;', 'import', 'fr.javatronic.blog.processor.Annotation_001;', '@Annotation_001', 'public', 'class', 'Class_9906', '{', '}', '```']",challenge not surrounded by ''': ,
"package io.quarkus.devtools.commands.data;

import static java.util.Objects.requireNonNull;

import io.quarkus.devtools.messagewriter.MessageWriter;
import io.quarkus.devtools.project.QuarkusProject;
import io.quarkus.registry.catalog.ExtensionCatalog;
import java.util.HashMap;
import java.util.Map;

public final class QuarkusCommandInvocation extends ValueMap<QuarkusCommandInvocation> {

    private final QuarkusProject quarkusProject;
    private final MessageWriter log;

    public QuarkusCommandInvocation(QuarkusProject quarkusProject) {
        this(quarkusProject, new HashMap<>());
    }

    public QuarkusCommandInvocation(final QuarkusProject quarkusProject, final Map<String, Object> values) {
        this(quarkusProject, values, quarkusProject.log());
    }

    public QuarkusCommandInvocation(final QuarkusProject quarkusProject, final Map<String, Object> values,
            final MessageWriter log) {
        super(values);
        this.quarkusProject = requireNonNull(quarkusProject, ""quarkusProject is required"");
        this.log = requireNonNull(log, ""log is required"");
    }

    public QuarkusCommandInvocation(QuarkusCommandInvocation original) {
        this(original.quarkusProject, original.values, original.log);
    }

    public QuarkusProject getQuarkusProject() {
        return quarkusProject;
    }

    public MessageWriter log() {
        return log;
    }

    public ExtensionCatalog getExtensionsCatalog() {
        return quarkusProject.getExtensionsCatalog();
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'io.quarkus.devtools.commands.data;', 'import', 'static', 'java.util.Objects.requireNonNull;', 'import', 'io.quarkus.devtools.messagewriter.MessageWriter;', 'import', 'io.quarkus.devtools.project.QuarkusProject;', 'import', 'io.quarkus.registry.catalog.ExtensionCatalog;', 'import', 'java.util.HashMap;', 'import', 'java.util.Map;', 'public', 'final', 'class', 'QuarkusCommandInvocation', 'extends', 'ValueMap<QuarkusCommandInvocation>', '{', 'private', 'final', 'QuarkusProject', 'quarkusProject;', 'private', 'final', 'MessageWriter', 'log;', 'public', 'QuarkusCommandInvocation(QuarkusProject', 'quarkusProject)', '{', 'this(quarkusProject,', 'new', 'HashMap<>());', '}', 'public', 'QuarkusCommandInvocation(final', 'QuarkusProject', 'quarkusProject,', 'final', 'Map<String,', 'Object>', 'values)', '{', 'this(quarkusProject,', 'values,', 'quarkusProject.log());', '}', 'public', 'QuarkusCommandInvocation(final', 'QuarkusProject', 'quarkusProject,', 'final', 'Map<String,', 'Object>', 'values,', 'final', 'MessageWriter', 'log)', '{', 'super(values);', 'this.quarkusProject', '=', 'requireNonNull(quarkusProject,', '""quarkusProject', 'is', 'required"");', 'this.log', '=', 'requireNonNull(log,', '""log', 'is', 'required"");', '}', 'public', 'QuarkusCommandInvocation(QuarkusCommandInvocation', 'original)', '{', 'this(original.quarkusProject,', 'original.values,', 'original.log);', '}', 'public', 'QuarkusProject', 'getQuarkusProject()', '{', 'return', 'quarkusProject;', '}', 'public', 'MessageWriter', 'log()', '{', 'return', 'log;', '}', 'public', 'ExtensionCatalog', 'getExtensionsCatalog()', '{', 'return', 'quarkusProject.getExtensionsCatalog();', '}', '}', '```']",challenge not surrounded by ''': ,
"<html>
<head>
<meta http-equiv=""refresh"" content=""0; URL=r_vdb-reuse.html"" />
</head>
</html>","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<html>', '<head>', '<meta', 'http-equiv=""refresh""', 'content=""0;', 'URL=r_vdb-reuse.html""', '/>', '</head>', '</html>```']",challenge not surrounded by ''': ,
"---
layout: page
title: ""About""
description: ""你是我的梦想""
header-img: ""img/about-bg.jpg""
multilingual: true
---

{% include multilingual-sel.html %}

<!-- Chinese Version -->
<div class=""zh post-container"">
    {% capture about_zh %}{% include about/zh.md %}{% endcapture %}
    {{ about_zh | markdownify }}
</div>

<!-- English Version -->
<div class=""en post-container"">
    {% capture about_en %}{% include about/en.md %}{% endcapture %}
    {{ about_en | markdownify }}
</div>


{% if site.disqus_username %}
<!-- disqus 评论框 start -->
<div class=""comment"">
    <div id=""disqus_thread"" class=""disqus-thread"">

    </div>
</div>
<!-- disqus 评论框 end -->

<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->
<script type=""text/javascript"">
    /* * * CONFIGURATION VARIABLES * * */
    var disqus_shortname = ""{{site.disqus_username}}"";
    var disqus_identifier = ""{{site.disqus_username}}/{{page.url}}"";
    var disqus_url = ""{{site.url}}{{page.url}}"";

    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>
<!-- disqus 公共JS代码 end -->
{% endif %}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```---', 'layout:', 'page', 'title:', '""About""', 'description:', '""你是我的梦想""', 'header-img:', '""img/about-bg.jpg""', 'multilingual:', 'true', '---', '{%', 'include', 'multilingual-sel.html', '%}', '<!--', 'Chinese', 'Version', '-->', '<div', 'class=""zh', 'post-container"">', '{%', 'capture', 'about_zh', '%}{%', 'include', 'about/zh.md', '%}{%', 'endcapture', '%}', '{{', 'about_zh', '|', 'markdownify', '}}', '</div>', '<!--', 'English', 'Version', '-->', '<div', 'class=""en', 'post-container"">', '{%', 'capture', 'about_en', '%}{%', 'include', 'about/en.md', '%}{%', 'endcapture', '%}', '{{', 'about_en', '|', 'markdownify', '}}', '</div>', '{%', 'if', 'site.disqus_username', '%}', '<!--', 'disqus', '评论框', 'start', '-->', '<div', 'class=""comment"">', '<div', 'id=""disqus_thread""', 'class=""disqus-thread"">', '</div>', '</div>', '<!--', 'disqus', '评论框', 'end', '-->', '<!--', 'disqus', '公共JS代码', 'start', '(一个网页只需插入一次)', '-->', '<script', 'type=""text/javascript"">', '/*', '*', '*', 'CONFIGURATION', 'VARIABLES', '*', '*', '*/', 'var', 'disqus_shortname', '=', '""{{site.disqus_username}}"";', 'var', 'disqus_identifier', '=', '""{{site.disqus_username}}/{{page.url}}"";', 'var', 'disqus_url', '=', '""{{site.url}}{{page.url}}"";', '(function()', '{', 'var', 'dsq', '=', ""document.createElement('script');"", 'dsq.type', '=', ""'text/javascript';"", 'dsq.async', '=', 'true;', 'dsq.src', '=', ""'//'"", '+', 'disqus_shortname', '+', ""'.disqus.com/embed.js';"", ""(document.getElementsByTagName('head')[0]"", '||', ""document.getElementsByTagName('body')[0]).appendChild(dsq);"", '})();', '</script>', '<!--', 'disqus', '公共JS代码', 'end', '-->', '{%', 'endif', '%}', '```']",challenge not surrounded by ''': ,
"// This file has been autogenerated.

exports.setEnvironment = function() {
  process.env['AZURE_TEST_LOCATION'] = 'westus';
  process.env['AZURE_SUBSCRIPTION_ID'] = 'd466671a-79ad-4ca5-878f-599df8bcd17e';
};

exports.scopes = [[function (nock) { 
var result = 
nock('http://management.azure.com:443')
  .get('/subscriptions/d466671a-79ad-4ca5-878f-599df8bcd17e/providers/Microsoft.DBforPostgreSQL/servers?api-version=2017-12-01')
  .reply(200, ""{\""value\"":[{\""id\"":\""/subscriptions/d466671a-79ad-4ca5-878f-599df8bcd17e/resourceGroups/nodeTestGroup5834/providers/Microsoft.DBforPostgreSQL/servers/testserver1149\"",\""name\"":\""testserver1149\"",\""type\"":\""Microsoft.DBforPostgreSQL/servers\"",\""location\"":\""westus\"",\""sku\"":{\""name\"":\""PGSQLB100\"",\""tier\"":\""Basic\"",\""capacity\"":100},\""properties\"":{\""administratorLogin\"":\""postgres\"",\""storageMB\"":51200,\""version\"":\""9.5\"",\""sslEnforcement\"":\""Enabled\"",\""userVisibleState\"":\""Ready\"",\""fullyQualifiedDomainName\"":\""testserver1149.postgres.database.azure.com\""}}]}"", { 'cache-control': 'no-cache',
  pragma: 'no-cache',
  'content-length': '515',
  'content-type': 'application/json; charset=utf-8',
  expires: '-1',
  'x-ms-request-id': '154c3125-145e-42de-9644-ed969d7605d7',
  server: 'Microsoft-HTTPAPI/2.0',
  'x-ms-ratelimit-remaining-subscription-reads': '14693',
  'x-ms-correlation-request-id': 'f4564155-d1f1-4632-b354-6e6b74c0656a',
  'x-ms-routing-request-id': 'EASTUS:20170525T000448Z:f4564155-d1f1-4632-b354-6e6b74c0656a',
  'strict-transport-security': 'max-age=31536000; includeSubDomains',
  date: 'Thu, 25 May 2017 00:04:48 GMT',
  connection: 'close' });
 return result; },
function (nock) { 
var result = 
nock('https://management.azure.com:443')
  .get('/subscriptions/d466671a-79ad-4ca5-878f-599df8bcd17e/providers/Microsoft.DBforPostgreSQL/servers?api-version=2017-12-01')
  .reply(200, ""{\""value\"":[{\""id\"":\""/subscriptions/d466671a-79ad-4ca5-878f-599df8bcd17e/resourceGroups/nodeTestGroup5834/providers/Microsoft.DBforPostgreSQL/servers/testserver1149\"",\""name\"":\""testserver1149\"",\""type\"":\""Microsoft.DBforPostgreSQL/servers\"",\""location\"":\""westus\"",\""sku\"":{\""name\"":\""PGSQLB100\"",\""tier\"":\""Basic\"",\""capacity\"":100},\""properties\"":{\""administratorLogin\"":\""postgres\"",\""storageMB\"":51200,\""version\"":\""9.5\"",\""sslEnforcement\"":\""Enabled\"",\""userVisibleState\"":\""Ready\"",\""fullyQualifiedDomainName\"":\""testserver1149.postgres.database.azure.com\""}}]}"", { 'cache-control': 'no-cache',
  pragma: 'no-cache',
  'content-length': '515',
  'content-type': 'application/json; charset=utf-8',
  expires: '-1',
  'x-ms-request-id': '154c3125-145e-42de-9644-ed969d7605d7',
  server: 'Microsoft-HTTPAPI/2.0',
  'x-ms-ratelimit-remaining-subscription-reads': '14693',
  'x-ms-correlation-request-id': 'f4564155-d1f1-4632-b354-6e6b74c0656a',
  'x-ms-routing-request-id': 'EASTUS:20170525T000448Z:f4564155-d1f1-4632-b354-6e6b74c0656a',
  'strict-transport-security': 'max-age=31536000; includeSubDomains',
  date: 'Thu, 25 May 2017 00:04:48 GMT',
  connection: 'close' });
 return result; }]];","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//', 'This', 'file', 'has', 'been', 'autogenerated.', 'exports.setEnvironment', '=', 'function()', '{', ""process.env['AZURE_TEST_LOCATION']"", '=', ""'westus';"", ""process.env['AZURE_SUBSCRIPTION_ID']"", '=', ""'d466671a-79ad-4ca5-878f-599df8bcd17e';"", '};', 'exports.scopes', '=', '[[function', '(nock)', '{', 'var', 'result', '=', ""nock('http://management.azure.com:443')"", "".get('/subscriptions/d466671a-79ad-4ca5-878f-599df8bcd17e/providers/Microsoft.DBforPostgreSQL/servers?api-version=2017-12-01')"", '.reply(200,', '""{\\""value\\"":[{\\""id\\"":\\""/subscriptions/d466671a-79ad-4ca5-878f-599df8bcd17e/resourceGroups/nodeTestGroup5834/providers/Microsoft.DBforPostgreSQL/servers/testserver1149\\"",\\""name\\"":\\""testserver1149\\"",\\""type\\"":\\""Microsoft.DBforPostgreSQL/servers\\"",\\""location\\"":\\""westus\\"",\\""sku\\"":{\\""name\\"":\\""PGSQLB100\\"",\\""tier\\"":\\""Basic\\"",\\""capacity\\"":100},\\""properties\\"":{\\""administratorLogin\\"":\\""postgres\\"",\\""storageMB\\"":51200,\\""version\\"":\\""9.5\\"",\\""sslEnforcement\\"":\\""Enabled\\"",\\""userVisibleState\\"":\\""Ready\\"",\\""fullyQualifiedDomainName\\"":\\""testserver1149.postgres.database.azure.com\\""}}]}"",', '{', ""'cache-control':"", ""'no-cache',"", 'pragma:', ""'no-cache',"", ""'content-length':"", ""'515',"", ""'content-type':"", ""'application/json;"", ""charset=utf-8',"", 'expires:', ""'-1',"", ""'x-ms-request-id':"", ""'154c3125-145e-42de-9644-ed969d7605d7',"", 'server:', ""'Microsoft-HTTPAPI/2.0',"", ""'x-ms-ratelimit-remaining-subscription-reads':"", ""'14693',"", ""'x-ms-correlation-request-id':"", ""'f4564155-d1f1-4632-b354-6e6b74c0656a',"", ""'x-ms-routing-request-id':"", ""'EASTUS:20170525T000448Z:f4564155-d1f1-4632-b354-6e6b74c0656a',"", ""'strict-transport-security':"", ""'max-age=31536000;"", ""includeSubDomains',"", 'date:', ""'Thu,"", '25', 'May', '2017', '00:04:48', ""GMT',"", 'connection:', ""'close'"", '});', 'return', 'result;', '},', 'function', '(nock)', '{', 'var', 'result', '=', ""nock('https://management.azure.com:443')"", "".get('/subscriptions/d466671a-79ad-4ca5-878f-599df8bcd17e/providers/Microsoft.DBforPostgreSQL/servers?api-version=2017-12-01')"", '.reply(200,', '""{\\""value\\"":[{\\""id\\"":\\""/subscriptions/d466671a-79ad-4ca5-878f-599df8bcd17e/resourceGroups/nodeTestGroup5834/providers/Microsoft.DBforPostgreSQL/servers/testserver1149\\"",\\""name\\"":\\""testserver1149\\"",\\""type\\"":\\""Microsoft.DBforPostgreSQL/servers\\"",\\""location\\"":\\""westus\\"",\\""sku\\"":{\\""name\\"":\\""PGSQLB100\\"",\\""tier\\"":\\""Basic\\"",\\""capacity\\"":100},\\""properties\\"":{\\""administratorLogin\\"":\\""postgres\\"",\\""storageMB\\"":51200,\\""version\\"":\\""9.5\\"",\\""sslEnforcement\\"":\\""Enabled\\"",\\""userVisibleState\\"":\\""Ready\\"",\\""fullyQualifiedDomainName\\"":\\""testserver1149.postgres.database.azure.com\\""}}]}"",', '{', ""'cache-control':"", ""'no-cache',"", 'pragma:', ""'no-cache',"", ""'content-length':"", ""'515',"", ""'content-type':"", ""'application/json;"", ""charset=utf-8',"", 'expires:', ""'-1',"", ""'x-ms-request-id':"", ""'154c3125-145e-42de-9644-ed969d7605d7',"", 'server:', ""'Microsoft-HTTPAPI/2.0',"", ""'x-ms-ratelimit-remaining-subscription-reads':"", ""'14693',"", ""'x-ms-correlation-request-id':"", ""'f4564155-d1f1-4632-b354-6e6b74c0656a',"", ""'x-ms-routing-request-id':"", ""'EASTUS:20170525T000448Z:f4564155-d1f1-4632-b354-6e6b74c0656a',"", ""'strict-transport-security':"", ""'max-age=31536000;"", ""includeSubDomains',"", 'date:', ""'Thu,"", '25', 'May', '2017', '00:04:48', ""GMT',"", 'connection:', ""'close'"", '});', 'return', 'result;', '}]];```']",challenge not surrounded by ''': ,
"package org.coffeeshop;

import org.glassfish.jersey.server.ChunkedOutput;

import javax.ws.rs.*;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.StreamingOutput;
import java.io.*;

/**
 *
 * A simple JAX-RS resource which demonstrates Streaming, Chunking
 * @author Bhakti Mehta
 *
 */
@Path(""v1/coffees"")
public class CoffeesResource {


    @GET
    @Produces(MediaType.TEXT_PLAIN)
    @Path(""/orders/{id}"")
    public Response streamExample(@PathParam(""id"") int id) {
        final Coffee coffee = CoffeeService.getCoffee(id);
        StreamingOutput stream = new StreamingOutput() {
            @Override
            public void write(OutputStream os) throws IOException,
                    WebApplicationException {
                Writer writer = new BufferedWriter(new OutputStreamWriter(os));
                writer.write(coffee.toString());
                writer.flush();
            }
        };
        return Response.ok(stream).build();
    }

    @GET
    @Produces(MediaType.TEXT_PLAIN)
    @Path(""/orders/{id}/chunk"")
    public ChunkedOutput<String> chunkExample(final @PathParam(""id"") int id) {
        final ChunkedOutput<String> output = new ChunkedOutput<String>(String.class);

        new Thread() {
            @Override
            public void run() {
                try {
                    output.write(""test"");
                    output.write(""test"");
                    output.write(""test"");
                } catch (IOException e) {
                   e.printStackTrace();
                } finally {
                    try {
                        output.close();
                    } catch (IOException e) {
                        e.printStackTrace();
                    }
                }
            }
        }.start();

        return output;

    }


}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'org.coffeeshop;', 'import', 'org.glassfish.jersey.server.ChunkedOutput;', 'import', 'javax.ws.rs.*;', 'import', 'javax.ws.rs.core.MediaType;', 'import', 'javax.ws.rs.core.Response;', 'import', 'javax.ws.rs.core.StreamingOutput;', 'import', 'java.io.*;', '/**', '*', '*', 'A', 'simple', 'JAX-RS', 'resource', 'which', 'demonstrates', 'Streaming,', 'Chunking', '*', '@author', 'Bhakti', 'Mehta', '*', '*/', '@Path(""v1/coffees"")', 'public', 'class', 'CoffeesResource', '{', '@GET', '@Produces(MediaType.TEXT_PLAIN)', '@Path(""/orders/{id}"")', 'public', 'Response', 'streamExample(@PathParam(""id"")', 'int', 'id)', '{', 'final', 'Coffee', 'coffee', '=', 'CoffeeService.getCoffee(id);', 'StreamingOutput', 'stream', '=', 'new', 'StreamingOutput()', '{', '@Override', 'public', 'void', 'write(OutputStream', 'os)', 'throws', 'IOException,', 'WebApplicationException', '{', 'Writer', 'writer', '=', 'new', 'BufferedWriter(new', 'OutputStreamWriter(os));', 'writer.write(coffee.toString());', 'writer.flush();', '}', '};', 'return', 'Response.ok(stream).build();', '}', '@GET', '@Produces(MediaType.TEXT_PLAIN)', '@Path(""/orders/{id}/chunk"")', 'public', 'ChunkedOutput<String>', 'chunkExample(final', '@PathParam(""id"")', 'int', 'id)', '{', 'final', 'ChunkedOutput<String>', 'output', '=', 'new', 'ChunkedOutput<String>(String.class);', 'new', 'Thread()', '{', '@Override', 'public', 'void', 'run()', '{', 'try', '{', 'output.write(""test"");', 'output.write(""test"");', 'output.write(""test"");', '}', 'catch', '(IOException', 'e)', '{', 'e.printStackTrace();', '}', 'finally', '{', 'try', '{', 'output.close();', '}', 'catch', '(IOException', 'e)', '{', 'e.printStackTrace();', '}', '}', '}', '}.start();', 'return', 'output;', '}', '}', '```']",challenge not surrounded by ''': ,
"<HTML>
<BODY>

<H2>Overview</H2>
This directory has examples of <code>tbb::flow</code>.

<H2>Directories</H2>
<DL>
<DT><A HREF=""dining_philosophers/index.html"">dining_philosophers</A>
<DD>An implementation of dining philosophers in graph using the reserving join node.
<DT><A HREF=""binpack/index.html"">binpack</A>
<DD>A solution to the binpacking problem using a queue_node, a buffer_node and function_nodes.
</DL>

<HR>
<A HREF=""../index.html"">Up to parent directory</A>
<p></p>
Copyright &copy; 2005-2011 Intel Corporation.  All Rights Reserved.
<P></P>
Intel is a registered trademark or trademark of Intel Corporation
or its subsidiaries in the United States and other countries.
<p></p>
* Other names and brands may be claimed as the property of others.
</BODY>
</HTML>

","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<HTML>', '<BODY>', '<H2>Overview</H2>', 'This', 'directory', 'has', 'examples', 'of', '<code>tbb::flow</code>.', '<H2>Directories</H2>', '<DL>', '<DT><A', 'HREF=""dining_philosophers/index.html"">dining_philosophers</A>', '<DD>An', 'implementation', 'of', 'dining', 'philosophers', 'in', 'graph', 'using', 'the', 'reserving', 'join', 'node.', '<DT><A', 'HREF=""binpack/index.html"">binpack</A>', '<DD>A', 'solution', 'to', 'the', 'binpacking', 'problem', 'using', 'a', 'queue_node,', 'a', 'buffer_node', 'and', 'function_nodes.', '</DL>', '<HR>', '<A', 'HREF=""../index.html"">Up', 'to', 'parent', 'directory</A>', '<p></p>', 'Copyright', '&copy;', '2005-2011', 'Intel', 'Corporation.', 'All', 'Rights', 'Reserved.', '<P></P>', 'Intel', 'is', 'a', 'registered', 'trademark', 'or', 'trademark', 'of', 'Intel', 'Corporation', 'or', 'its', 'subsidiaries', 'in', 'the', 'United', 'States', 'and', 'other', 'countries.', '<p></p>', '*', 'Other', 'names', 'and', 'brands', 'may', 'be', 'claimed', 'as', 'the', 'property', 'of', 'others.', '</BODY>', '</HTML>', '```']",challenge not surrounded by ''': ,
"// jQuery File Tree Plugin
//
// Version 1.01
//
// Cory S.N. LaViska
// A Beautiful Site (http://abeautifulsite.net/)
// 24 March 2008
//
// Visit http://abeautifulsite.net/notebook.php?article=58 for more information
//
// Usage: $('.fileTreeDemo').fileTree( options, callback )
//
// Options:  root           - root folder to display; default = /
//           script         - location of the serverside AJAX file to use; default = jqueryFileTree.php
//           folderEvent    - event to trigger expand/collapse; default = click
//           expandSpeed    - default = 500 (ms); use -1 for no animation
//           collapseSpeed  - default = 500 (ms); use -1 for no animation
//           expandEasing   - easing function to use on expand (optional)
//           collapseEasing - easing function to use on collapse (optional)
//           multiFolder    - whether or not to limit the browser to one subfolder at a time
//           loadMessage    - Message to display while initial tree loads (can be HTML)
//
// History:
//
// 1.01 - updated to work with foreign characters in directory/file names (12 April 2008)
// 1.00 - released (24 March 2008)
//
// TERMS OF USE
// 
// jQuery File Tree is licensed under a Creative Commons License and is copyrighted (C)2008 by Cory S.N. LaViska.
// For details, visit http://creativecommons.org/licenses/by/3.0/us/
//
if(jQuery) (function($){
	
	$.extend($.fn, {
		fileTree: function(o, h) {
			// Defaults
			if( !o ) var o = {};
			if( o.root == undefined ) o.root = '/';
			if( o.script == undefined ) o.script = 'jqueryFileTree.php';
			if( o.folderEvent == undefined ) o.folderEvent = 'click';
			if( o.expandSpeed == undefined ) o.expandSpeed= 500;
			if( o.collapseSpeed == undefined ) o.collapseSpeed= 500;
			if( o.expandEasing == undefined ) o.expandEasing = null;
			if( o.collapseEasing == undefined ) o.collapseEasing = null;
			if( o.multiFolder == undefined ) o.multiFolder = true;
			if( o.loadMessage == undefined ) o.loadMessage = 'Loading...';
			
			$(this).each( function() {
				
				function showTree(c, t) {
					$(c).addClass('wait');
					$("".jqueryFileTree.start"").remove();
					$.post(o.script, { dir: t }, function(data) {
						$(c).find('.start').html('');
						$(c).removeClass('wait').append(data);
						if( o.root == t ) $(c).find('UL:hidden').show(); else $(c).find('UL:hidden').slideDown({ duration: o.expandSpeed, easing: o.expandEasing });
						bindTree(c);
					});
				}
				
				function bindTree(t) {
					$(t).find('LI A').bind(o.folderEvent, function() {
						if( $(this).parent().hasClass('directory') ) {
							if( $(this).parent().hasClass('collapsed') ) {
								// Expand
								if( !o.multiFolder ) {
									$(this).parent().parent().find('UL').slideUp({ duration: o.collapseSpeed, easing: o.collapseEasing });
									$(this).parent().parent().find('LI.directory').removeClass('expanded').addClass('collapsed');
								}
								$(this).parent().find('UL').remove(); // cleanup
								showTree( $(this).parent(), escape($(this).attr('rel').match( /.*\// )) );
								$(this).parent().removeClass('collapsed').addClass('expanded');
							} else {
								// Collapse
								$(this).parent().find('UL').slideUp({ duration: o.collapseSpeed, easing: o.collapseEasing });
								$(this).parent().removeClass('expanded').addClass('collapsed');
							}
						} else {
							fileSelect($(this).attr('rel'));
							//h($(this).attr('rel'));
						}
						return false;
					});
					// Prevent A from triggering the # on non-click events
					if( o.folderEvent.toLowerCase != 'click' ) $(t).find('LI A').bind('click', function() { return false; });
				}
				// Loading message
				$(this).html('<ul class=""jqueryFileTree start""><li class=""wait"">' + o.loadMessage + '<li></ul>');
				// Get the initial file list
				showTree( $(this), escape(o.root) );
			});
		}
	});
	
})(jQuery);","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//', 'jQuery', 'File', 'Tree', 'Plugin', '//', '//', 'Version', '1.01', '//', '//', 'Cory', 'S.N.', 'LaViska', '//', 'A', 'Beautiful', 'Site', '(http://abeautifulsite.net/)', '//', '24', 'March', '2008', '//', '//', 'Visit', 'http://abeautifulsite.net/notebook.php?article=58', 'for', 'more', 'information', '//', '//', 'Usage:', ""$('.fileTreeDemo').fileTree("", 'options,', 'callback', ')', '//', '//', 'Options:', 'root', '-', 'root', 'folder', 'to', 'display;', 'default', '=', '/', '//', 'script', '-', 'location', 'of', 'the', 'serverside', 'AJAX', 'file', 'to', 'use;', 'default', '=', 'jqueryFileTree.php', '//', 'folderEvent', '-', 'event', 'to', 'trigger', 'expand/collapse;', 'default', '=', 'click', '//', 'expandSpeed', '-', 'default', '=', '500', '(ms);', 'use', '-1', 'for', 'no', 'animation', '//', 'collapseSpeed', '-', 'default', '=', '500', '(ms);', 'use', '-1', 'for', 'no', 'animation', '//', 'expandEasing', '-', 'easing', 'function', 'to', 'use', 'on', 'expand', '(optional)', '//', 'collapseEasing', '-', 'easing', 'function', 'to', 'use', 'on', 'collapse', '(optional)', '//', 'multiFolder', '-', 'whether', 'or', 'not', 'to', 'limit', 'the', 'browser', 'to', 'one', 'subfolder', 'at', 'a', 'time', '//', 'loadMessage', '-', 'Message', 'to', 'display', 'while', 'initial', 'tree', 'loads', '(can', 'be', 'HTML)', '//', '//', 'History:', '//', '//', '1.01', '-', 'updated', 'to', 'work', 'with', 'foreign', 'characters', 'in', 'directory/file', 'names', '(12', 'April', '2008)', '//', '1.00', '-', 'released', '(24', 'March', '2008)', '//', '//', 'TERMS', 'OF', 'USE', '//', '//', 'jQuery', 'File', 'Tree', 'is', 'licensed', 'under', 'a', 'Creative', 'Commons', 'License', 'and', 'is', 'copyrighted', '(C)2008', 'by', 'Cory', 'S.N.', 'LaViska.', '//', 'For', 'details,', 'visit', 'http://creativecommons.org/licenses/by/3.0/us/', '//', 'if(jQuery)', '(function($){', '$.extend($.fn,', '{', 'fileTree:', 'function(o,', 'h)', '{', '//', 'Defaults', 'if(', '!o', ')', 'var', 'o', '=', '{};', 'if(', 'o.root', '==', 'undefined', ')', 'o.root', '=', ""'/';"", 'if(', 'o.script', '==', 'undefined', ')', 'o.script', '=', ""'jqueryFileTree.php';"", 'if(', 'o.folderEvent', '==', 'undefined', ')', 'o.folderEvent', '=', ""'click';"", 'if(', 'o.expandSpeed', '==', 'undefined', ')', 'o.expandSpeed=', '500;', 'if(', 'o.collapseSpeed', '==', 'undefined', ')', 'o.collapseSpeed=', '500;', 'if(', 'o.expandEasing', '==', 'undefined', ')', 'o.expandEasing', '=', 'null;', 'if(', 'o.collapseEasing', '==', 'undefined', ')', 'o.collapseEasing', '=', 'null;', 'if(', 'o.multiFolder', '==', 'undefined', ')', 'o.multiFolder', '=', 'true;', 'if(', 'o.loadMessage', '==', 'undefined', ')', 'o.loadMessage', '=', ""'Loading...';"", '$(this).each(', 'function()', '{', 'function', 'showTree(c,', 't)', '{', ""$(c).addClass('wait');"", '$("".jqueryFileTree.start"").remove();', '$.post(o.script,', '{', 'dir:', 't', '},', 'function(data)', '{', ""$(c).find('.start').html('');"", ""$(c).removeClass('wait').append(data);"", 'if(', 'o.root', '==', 't', ')', ""$(c).find('UL:hidden').show();"", 'else', ""$(c).find('UL:hidden').slideDown({"", 'duration:', 'o.expandSpeed,', 'easing:', 'o.expandEasing', '});', 'bindTree(c);', '});', '}', 'function', 'bindTree(t)', '{', ""$(t).find('LI"", ""A').bind(o.folderEvent,"", 'function()', '{', 'if(', ""$(this).parent().hasClass('directory')"", ')', '{', 'if(', ""$(this).parent().hasClass('collapsed')"", ')', '{', '//', 'Expand', 'if(', '!o.multiFolder', ')', '{', ""$(this).parent().parent().find('UL').slideUp({"", 'duration:', 'o.collapseSpeed,', 'easing:', 'o.collapseEasing', '});', ""$(this).parent().parent().find('LI.directory').removeClass('expanded').addClass('collapsed');"", '}', ""$(this).parent().find('UL').remove();"", '//', 'cleanup', 'showTree(', '$(this).parent(),', ""escape($(this).attr('rel').match("", '/.*\\//', '))', ');', ""$(this).parent().removeClass('collapsed').addClass('expanded');"", '}', 'else', '{', '//', 'Collapse', ""$(this).parent().find('UL').slideUp({"", 'duration:', 'o.collapseSpeed,', 'easing:', 'o.collapseEasing', '});', ""$(this).parent().removeClass('expanded').addClass('collapsed');"", '}', '}', 'else', '{', ""fileSelect($(this).attr('rel'));"", ""//h($(this).attr('rel'));"", '}', 'return', 'false;', '});', '//', 'Prevent', 'A', 'from', 'triggering', 'the', '#', 'on', 'non-click', 'events', 'if(', 'o.folderEvent.toLowerCase', '!=', ""'click'"", ')', ""$(t).find('LI"", ""A').bind('click',"", 'function()', '{', 'return', 'false;', '});', '}', '//', 'Loading', 'message', ""$(this).html('<ul"", 'class=""jqueryFileTree', 'start""><li', 'class=""wait"">\'', '+', 'o.loadMessage', '+', ""'<li></ul>');"", '//', 'Get', 'the', 'initial', 'file', 'list', 'showTree(', '$(this),', 'escape(o.root)', ');', '});', '}', '});', '})(jQuery);```']",challenge not surrounded by ''': ,
"<?xml version=""1.0"" encoding=""iso-8859-1""?>
<!DOCTYPE html 
     PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN""
     ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">

<html>
<head>
  <title>execute (AspNetCompiler)</title>
  <meta http-equiv=""Content-Type"" content=""text/html; charset=iso-8859-1"" />
  <link rel=""stylesheet"" href=""../.././rdoc-style.css"" type=""text/css"" media=""screen"" />
</head>
<body class=""standalone-code"">
  <pre><span class=""ruby-comment cmt""># File lib/albacore/aspnetcompiler.rb, line 40</span>
  <span class=""ruby-keyword kw"">def</span> <span class=""ruby-identifier"">execute</span>
    <span class=""ruby-identifier"">params</span> = []
    <span class=""ruby-identifier"">params</span> <span class=""ruby-operator"">&lt;&lt;</span> <span class=""ruby-node"">&quot;-v #{@virtual_path}&quot;</span> <span class=""ruby-keyword kw"">unless</span> <span class=""ruby-ivar"">@virtual_path</span>.<span class=""ruby-identifier"">nil?</span>
    <span class=""ruby-identifier"">params</span> <span class=""ruby-operator"">&lt;&lt;</span> <span class=""ruby-node"">&quot;-p #{format_path(@physical_path)}&quot;</span> <span class=""ruby-keyword kw"">unless</span> <span class=""ruby-ivar"">@physical_path</span>.<span class=""ruby-identifier"">nil?</span>
    <span class=""ruby-identifier"">params</span> <span class=""ruby-operator"">&lt;&lt;</span> <span class=""ruby-value str"">&quot;-c&quot;</span> <span class=""ruby-keyword kw"">if</span> <span class=""ruby-ivar"">@clean</span>
    <span class=""ruby-identifier"">params</span> <span class=""ruby-operator"">&lt;&lt;</span> <span class=""ruby-value str"">&quot;-delaysign&quot;</span> <span class=""ruby-keyword kw"">if</span> <span class=""ruby-ivar"">@delay_sign</span>
    <span class=""ruby-identifier"">params</span> <span class=""ruby-operator"">&lt;&lt;</span> <span class=""ruby-value str"">&quot;-fixednames&quot;</span> <span class=""ruby-keyword kw"">if</span> <span class=""ruby-ivar"">@fixed_names</span>
    <span class=""ruby-identifier"">params</span> <span class=""ruby-operator"">&lt;&lt;</span> <span class=""ruby-value str"">&quot;-d&quot;</span> <span class=""ruby-keyword kw"">if</span> <span class=""ruby-ivar"">@debug</span>
    <span class=""ruby-identifier"">params</span> <span class=""ruby-operator"">&lt;&lt;</span> <span class=""ruby-value str"">&quot;-u&quot;</span> <span class=""ruby-keyword kw"">if</span> <span class=""ruby-ivar"">@updateable</span>
    <span class=""ruby-identifier"">params</span> <span class=""ruby-operator"">&lt;&lt;</span> <span class=""ruby-value str"">&quot;-f&quot;</span> <span class=""ruby-keyword kw"">if</span> <span class=""ruby-ivar"">@force</span>
    <span class=""ruby-identifier"">params</span> <span class=""ruby-operator"">&lt;&lt;</span> <span class=""ruby-identifier"">format_path</span>(<span class=""ruby-ivar"">@target_path</span>) <span class=""ruby-keyword kw"">unless</span> <span class=""ruby-ivar"">@target_path</span>.<span class=""ruby-identifier"">nil?</span>
    
    <span class=""ruby-identifier"">result</span> = <span class=""ruby-identifier"">run_command</span> <span class=""ruby-value str"">&quot;AspNetCompiler&quot;</span>, <span class=""ruby-identifier"">params</span>
    
    <span class=""ruby-identifier"">failure_message</span> = <span class=""ruby-value str"">'AspNetCompiler Failed. See Build Log For Detail'</span>
    <span class=""ruby-identifier"">fail_with_message</span> <span class=""ruby-identifier"">failure_message</span> <span class=""ruby-keyword kw"">if</span> <span class=""ruby-operator"">!</span><span class=""ruby-identifier"">result</span>
  <span class=""ruby-keyword kw"">end</span></pre>
</body>
</html>","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<?xml', 'version=""1.0""', 'encoding=""iso-8859-1""?>', '<!DOCTYPE', 'html', 'PUBLIC', '""-//W3C//DTD', 'XHTML', '1.0', 'Transitional//EN""', '""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">', '<html>', '<head>', '<title>execute', '(AspNetCompiler)</title>', '<meta', 'http-equiv=""Content-Type""', 'content=""text/html;', 'charset=iso-8859-1""', '/>', '<link', 'rel=""stylesheet""', 'href=""../.././rdoc-style.css""', 'type=""text/css""', 'media=""screen""', '/>', '</head>', '<body', 'class=""standalone-code"">', '<pre><span', 'class=""ruby-comment', 'cmt"">#', 'File', 'lib/albacore/aspnetcompiler.rb,', 'line', '40</span>', '<span', 'class=""ruby-keyword', 'kw"">def</span>', '<span', 'class=""ruby-identifier"">execute</span>', '<span', 'class=""ruby-identifier"">params</span>', '=', '[]', '<span', 'class=""ruby-identifier"">params</span>', '<span', 'class=""ruby-operator"">&lt;&lt;</span>', '<span', 'class=""ruby-node"">&quot;-v', '#{@virtual_path}&quot;</span>', '<span', 'class=""ruby-keyword', 'kw"">unless</span>', '<span', 'class=""ruby-ivar"">@virtual_path</span>.<span', 'class=""ruby-identifier"">nil?</span>', '<span', 'class=""ruby-identifier"">params</span>', '<span', 'class=""ruby-operator"">&lt;&lt;</span>', '<span', 'class=""ruby-node"">&quot;-p', '#{format_path(@physical_path)}&quot;</span>', '<span', 'class=""ruby-keyword', 'kw"">unless</span>', '<span', 'class=""ruby-ivar"">@physical_path</span>.<span', 'class=""ruby-identifier"">nil?</span>', '<span', 'class=""ruby-identifier"">params</span>', '<span', 'class=""ruby-operator"">&lt;&lt;</span>', '<span', 'class=""ruby-value', 'str"">&quot;-c&quot;</span>', '<span', 'class=""ruby-keyword', 'kw"">if</span>', '<span', 'class=""ruby-ivar"">@clean</span>', '<span', 'class=""ruby-identifier"">params</span>', '<span', 'class=""ruby-operator"">&lt;&lt;</span>', '<span', 'class=""ruby-value', 'str"">&quot;-delaysign&quot;</span>', '<span', 'class=""ruby-keyword', 'kw"">if</span>', '<span', 'class=""ruby-ivar"">@delay_sign</span>', '<span', 'class=""ruby-identifier"">params</span>', '<span', 'class=""ruby-operator"">&lt;&lt;</span>', '<span', 'class=""ruby-value', 'str"">&quot;-fixednames&quot;</span>', '<span', 'class=""ruby-keyword', 'kw"">if</span>', '<span', 'class=""ruby-ivar"">@fixed_names</span>', '<span', 'class=""ruby-identifier"">params</span>', '<span', 'class=""ruby-operator"">&lt;&lt;</span>', '<span', 'class=""ruby-value', 'str"">&quot;-d&quot;</span>', '<span', 'class=""ruby-keyword', 'kw"">if</span>', '<span', 'class=""ruby-ivar"">@debug</span>', '<span', 'class=""ruby-identifier"">params</span>', '<span', 'class=""ruby-operator"">&lt;&lt;</span>', '<span', 'class=""ruby-value', 'str"">&quot;-u&quot;</span>', '<span', 'class=""ruby-keyword', 'kw"">if</span>', '<span', 'class=""ruby-ivar"">@updateable</span>', '<span', 'class=""ruby-identifier"">params</span>', '<span', 'class=""ruby-operator"">&lt;&lt;</span>', '<span', 'class=""ruby-value', 'str"">&quot;-f&quot;</span>', '<span', 'class=""ruby-keyword', 'kw"">if</span>', '<span', 'class=""ruby-ivar"">@force</span>', '<span', 'class=""ruby-identifier"">params</span>', '<span', 'class=""ruby-operator"">&lt;&lt;</span>', '<span', 'class=""ruby-identifier"">format_path</span>(<span', 'class=""ruby-ivar"">@target_path</span>)', '<span', 'class=""ruby-keyword', 'kw"">unless</span>', '<span', 'class=""ruby-ivar"">@target_path</span>.<span', 'class=""ruby-identifier"">nil?</span>', '<span', 'class=""ruby-identifier"">result</span>', '=', '<span', 'class=""ruby-identifier"">run_command</span>', '<span', 'class=""ruby-value', 'str"">&quot;AspNetCompiler&quot;</span>,', '<span', 'class=""ruby-identifier"">params</span>', '<span', 'class=""ruby-identifier"">failure_message</span>', '=', '<span', 'class=""ruby-value', 'str"">\'AspNetCompiler', 'Failed.', 'See', 'Build', 'Log', 'For', ""Detail'</span>"", '<span', 'class=""ruby-identifier"">fail_with_message</span>', '<span', 'class=""ruby-identifier"">failure_message</span>', '<span', 'class=""ruby-keyword', 'kw"">if</span>', '<span', 'class=""ruby-operator"">!</span><span', 'class=""ruby-identifier"">result</span>', '<span', 'class=""ruby-keyword', 'kw"">end</span></pre>', '</body>', '</html>```']",challenge not surrounded by ''': ,
"import os

from django.core.wsgi import get_wsgi_application

os.environ.setdefault(""DJANGO_SETTINGS_MODULE"", ""config.settings"")

from whitenoise.django import DjangoWhiteNoise  # Must be after DJANGO_SETTINGS_MODULE is defined

application = DjangoWhiteNoise(get_wsgi_application())
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'os', 'from', 'django.core.wsgi', 'import', 'get_wsgi_application', 'os.environ.setdefault(""DJANGO_SETTINGS_MODULE"",', '""config.settings"")', 'from', 'whitenoise.django', 'import', 'DjangoWhiteNoise', '#', 'Must', 'be', 'after', 'DJANGO_SETTINGS_MODULE', 'is', 'defined', 'application', '=', 'DjangoWhiteNoise(get_wsgi_application())', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright (C) 1999-2008 Jive Software. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.jivesoftware.openfire.fastpath.settings.offline;

import org.jivesoftware.xmpp.workgroup.utils.ModelUtil;

public class OfflineSettings {
    private String redirectURL;

    private String offlineText;
    private String emailAddress;
    private String subject;

    public String getRedirectURL() {
        if(!ModelUtil.hasLength(redirectURL)){
            return """";
        }
        return redirectURL;
    }

    public void setRedirectURL(String redirectURL) {
        this.redirectURL = redirectURL;
    }

    public String getOfflineText() {
        if(!ModelUtil.hasLength(offlineText)){
            return """";
        }
        return offlineText;
    }

    public void setOfflineText(String offlineText) {
        this.offlineText = offlineText;
    }

    public String getEmailAddress() {
        if(!ModelUtil.hasLength(emailAddress)){
            return """";
        }
        return emailAddress;
    }

    public void setEmailAddress(String emailAddress) {
        this.emailAddress = emailAddress;
    }

    public String getSubject() {
        if(!ModelUtil.hasLength(subject)){
            return """";
        }
        return subject;
    }

    public void setSubject(String subject) {
        this.subject = subject;
    }

    public boolean redirects(){
        return (ModelUtil.hasLength(getRedirectURL()));
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '(C)', '1999-2008', 'Jive', 'Software.', 'All', 'rights', 'reserved.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'org.jivesoftware.openfire.fastpath.settings.offline;', 'import', 'org.jivesoftware.xmpp.workgroup.utils.ModelUtil;', 'public', 'class', 'OfflineSettings', '{', 'private', 'String', 'redirectURL;', 'private', 'String', 'offlineText;', 'private', 'String', 'emailAddress;', 'private', 'String', 'subject;', 'public', 'String', 'getRedirectURL()', '{', 'if(!ModelUtil.hasLength(redirectURL)){', 'return', '"""";', '}', 'return', 'redirectURL;', '}', 'public', 'void', 'setRedirectURL(String', 'redirectURL)', '{', 'this.redirectURL', '=', 'redirectURL;', '}', 'public', 'String', 'getOfflineText()', '{', 'if(!ModelUtil.hasLength(offlineText)){', 'return', '"""";', '}', 'return', 'offlineText;', '}', 'public', 'void', 'setOfflineText(String', 'offlineText)', '{', 'this.offlineText', '=', 'offlineText;', '}', 'public', 'String', 'getEmailAddress()', '{', 'if(!ModelUtil.hasLength(emailAddress)){', 'return', '"""";', '}', 'return', 'emailAddress;', '}', 'public', 'void', 'setEmailAddress(String', 'emailAddress)', '{', 'this.emailAddress', '=', 'emailAddress;', '}', 'public', 'String', 'getSubject()', '{', 'if(!ModelUtil.hasLength(subject)){', 'return', '"""";', '}', 'return', 'subject;', '}', 'public', 'void', 'setSubject(String', 'subject)', '{', 'this.subject', '=', 'subject;', '}', 'public', 'boolean', 'redirects(){', 'return', '(ModelUtil.hasLength(getRedirectURL()));', '}', '}', '```']",challenge not surrounded by ''': ,
"import * as Scrivito from 'scrivito'
import carouselWidgetIcon from '../../assets/images/carousel_widget.svg'

Scrivito.provideEditingConfig('CarouselWidget', {
  title: 'Carousel',
  thumbnail: carouselWidgetIcon,
  attributes: {
    images: {
      title: 'Images'
    },
    showDescription: {
      title: 'Show description?',
      description:
        'This allows to show an image and some text below this carousel. Default: No',
      values: [{ value: 'yes', title: 'Yes' }, { value: 'no', title: 'No' }]
    }
  },
  properties: ['images', 'showDescription'],
  initialContent: {
    showDescription: 'no'
  }
})
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', '*', 'as', 'Scrivito', 'from', ""'scrivito'"", 'import', 'carouselWidgetIcon', 'from', ""'../../assets/images/carousel_widget.svg'"", ""Scrivito.provideEditingConfig('CarouselWidget',"", '{', 'title:', ""'Carousel',"", 'thumbnail:', 'carouselWidgetIcon,', 'attributes:', '{', 'images:', '{', 'title:', ""'Images'"", '},', 'showDescription:', '{', 'title:', ""'Show"", ""description?',"", 'description:', ""'This"", 'allows', 'to', 'show', 'an', 'image', 'and', 'some', 'text', 'below', 'this', 'carousel.', 'Default:', ""No',"", 'values:', '[{', 'value:', ""'yes',"", 'title:', ""'Yes'"", '},', '{', 'value:', ""'no',"", 'title:', ""'No'"", '}]', '}', '},', 'properties:', ""['images',"", ""'showDescription'],"", 'initialContent:', '{', 'showDescription:', ""'no'"", '}', '})', '```']",challenge not surrounded by ''': ,
"/**
 * @license
 * Copyright 2015 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 */

CLASS({
  package: 'foam.flow',
  name: 'ToC',
  label: 'Table of Contents',
  extends: 'foam.flow.Element',

  requires: [ 'foam.ui.DAOListView' ],
  imports: [ 'parentSection' ],

  constants: { ELEMENT_NAME: 'toc' },

  properties: [
    {
      model_: 'foam.core.types.DAOProperty',
      name: 'sections',
      view: 'foam.ui.DAOListView',
      factory: function() { return []; }
    }
  ],

  templates: [
    function toInnerHTML() {/*
      <% this.sections = this.parentSection.subSections; %>
      <a name=""toc""></a>
      <heading>
        Table of Contents
      </heading>
      <blockquote>
        $$sections{mode: 'read-only'}
      </blockquote>
    */},
    function CSS() {/*
      toc { display: block }

      toc a {
        text-decoration: none;
        color: #444;
      }

      @media print {

        toc {
          page-break-after: always;
        }

      }
    */}
  ]
});
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', '@license', '*', 'Copyright', '2015', 'Google', 'Inc.', 'All', 'Rights', 'Reserved.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', 'License);', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*/', 'CLASS({', 'package:', ""'foam.flow',"", 'name:', ""'ToC',"", 'label:', ""'Table"", 'of', ""Contents',"", 'extends:', ""'foam.flow.Element',"", 'requires:', '[', ""'foam.ui.DAOListView'"", '],', 'imports:', '[', ""'parentSection'"", '],', 'constants:', '{', 'ELEMENT_NAME:', ""'toc'"", '},', 'properties:', '[', '{', 'model_:', ""'foam.core.types.DAOProperty',"", 'name:', ""'sections',"", 'view:', ""'foam.ui.DAOListView',"", 'factory:', 'function()', '{', 'return', '[];', '}', '}', '],', 'templates:', '[', 'function', 'toInnerHTML()', '{/*', '<%', 'this.sections', '=', 'this.parentSection.subSections;', '%>', '<a', 'name=""toc""></a>', '<heading>', 'Table', 'of', 'Contents', '</heading>', '<blockquote>', '$$sections{mode:', ""'read-only'}"", '</blockquote>', '*/},', 'function', 'CSS()', '{/*', 'toc', '{', 'display:', 'block', '}', 'toc', 'a', '{', 'text-decoration:', 'none;', 'color:', '#444;', '}', '@media', 'print', '{', 'toc', '{', 'page-break-after:', 'always;', '}', '}', '*/}', ']', '});', '```']",challenge not surrounded by ''': ,
"---
layout: page
title: Adopt Dataset
---


  <h1>Adopting...</h1>
  
  <p align=""center""><img src=""https://s3.amazonaws.com/kinlane-productions/loading.gif"" id=""loading"" width=""150"" /></p>
  
  <script type=""text/javascript"">  
  
    function callback(url){
        return function(){
            location.href=url;
        }
    }               
  
    $Unique = getUrlVar('unique'); 
    $UserLogin = getUrlVar('account');     
    $agencyid = getUrlVar('agencyid');     
    $oAuth_Token = getUrlVar('oAuth_Token');  
    $slug = getUrlVar('slug');

    
    var github = new Github({
        token: $oAuth_Token,
        auth: ""oauth""
            });
            
    $apiurl = ""http://api.publicprivatesector.org/adopt/?agencyid=""+$agencyid+""&unique=""+$Unique+""&account=""+$UserLogin+""&slug=""+$slug;    
    $.getJSON($apiurl,function(data) {  
                          
        var response = data.response;
        //$(""#displayMe"").append(response + ""<br />"");
        
        var repo = github.getRepo($UserLogin, 'adopted-federal-agency-dataset');
        repo.remove($slug,'README2.md', function(err) {
            
            redirectURL = ""https://github.com/"" + $UserLogin + ""/adopted-federal-agency-dataset/tree/"" + $slug;
            //console.log($slug);
            setTimeout(callback(redirectURL), 1000);                      
            
            });                                   
        });           
     
  </script> ","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```---', 'layout:', 'page', 'title:', 'Adopt', 'Dataset', '---', '<h1>Adopting...</h1>', '<p', 'align=""center""><img', 'src=""https://s3.amazonaws.com/kinlane-productions/loading.gif""', 'id=""loading""', 'width=""150""', '/></p>', '<script', 'type=""text/javascript"">', 'function', 'callback(url){', 'return', 'function(){', 'location.href=url;', '}', '}', '$Unique', '=', ""getUrlVar('unique');"", '$UserLogin', '=', ""getUrlVar('account');"", '$agencyid', '=', ""getUrlVar('agencyid');"", '$oAuth_Token', '=', ""getUrlVar('oAuth_Token');"", '$slug', '=', ""getUrlVar('slug');"", 'var', 'github', '=', 'new', 'Github({', 'token:', '$oAuth_Token,', 'auth:', '""oauth""', '});', '$apiurl', '=', '""http://api.publicprivatesector.org/adopt/?agencyid=""+$agencyid+""&unique=""+$Unique+""&account=""+$UserLogin+""&slug=""+$slug;', '$.getJSON($apiurl,function(data)', '{', 'var', 'response', '=', 'data.response;', '//$(""#displayMe"").append(response', '+', '""<br', '/>"");', 'var', 'repo', '=', 'github.getRepo($UserLogin,', ""'adopted-federal-agency-dataset');"", ""repo.remove($slug,'README2.md',"", 'function(err)', '{', 'redirectURL', '=', '""https://github.com/""', '+', '$UserLogin', '+', '""/adopted-federal-agency-dataset/tree/""', '+', '$slug;', '//console.log($slug);', 'setTimeout(callback(redirectURL),', '1000);', '});', '});', '</script>', '```']",challenge not surrounded by ''': ,
"import React from 'react';
import PropTypes from 'prop-types';
import { Slider } from '@mui/material';

const marks = [
  {
    value: 0,
    label: '0',
    width: '100%',
  },
  {
    value: 1,
    label: 'A',
    width: '36%',
  },
  {
    value: 2,
    label: 'B',
    width: '54%',
  },
  {
    value: 3,
    label: 'C',
    width: '65%',
  },
  {
    value: 4,
    label: 'D',
    width: '72%',
  },
  {
    value: 5,
    label: 'E',
    width: '78%',
  },
  {
    value: 6,
    label: 'F',
    width: '81%',
  },
  {
    value: 7,
    label: 'G',
    width: '85%',
  },
];
function valuetext(value) {
  return `${value}`;
}

const valueLabelFormat = (value) =>
  marks[marks.findIndex((mark) => mark.value === value)].label;

const QuantitySlider = (props) => {
  const { keys, onSelect, currentQuantity } = props;
  const myMarks = marks.filter((mark) => keys.includes(mark.label));
  if (myMarks.length === 0) return null;
  const { width } = [...myMarks].pop();
  return (
    <div style={{ width }}>
      <Slider
        value={currentQuantity}
        getAriaValueText={valuetext}
        valueLabelFormat={valueLabelFormat}
        aria-labelledby=""discrete-slider""
        valueLabelDisplay=""auto""
        step={1}
        marks={myMarks}
        min={0}
        max={myMarks.length}
        onChangeCommitted={(ev, val) => onSelect(val)}
      />
    </div>
  );
};

QuantitySlider.propTypes = {
  keys: PropTypes.arrayOf(PropTypes.string),
  onSelect: PropTypes.func.isRequired,
  currentQuantity: PropTypes.number,
};

QuantitySlider.defaultProps = {
  keys: [],
  currentQuantity: 0,
};

export default QuantitySlider;
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'React', 'from', ""'react';"", 'import', 'PropTypes', 'from', ""'prop-types';"", 'import', '{', 'Slider', '}', 'from', ""'@mui/material';"", 'const', 'marks', '=', '[', '{', 'value:', '0,', 'label:', ""'0',"", 'width:', ""'100%',"", '},', '{', 'value:', '1,', 'label:', ""'A',"", 'width:', ""'36%',"", '},', '{', 'value:', '2,', 'label:', ""'B',"", 'width:', ""'54%',"", '},', '{', 'value:', '3,', 'label:', ""'C',"", 'width:', ""'65%',"", '},', '{', 'value:', '4,', 'label:', ""'D',"", 'width:', ""'72%',"", '},', '{', 'value:', '5,', 'label:', ""'E',"", 'width:', ""'78%',"", '},', '{', 'value:', '6,', 'label:', ""'F',"", 'width:', ""'81%',"", '},', '{', 'value:', '7,', 'label:', ""'G',"", 'width:', ""'85%',"", '},', '];', 'function', 'valuetext(value)', '{', 'return', '`${value}`;', '}', 'const', 'valueLabelFormat', '=', '(value)', '=>', 'marks[marks.findIndex((mark)', '=>', 'mark.value', '===', 'value)].label;', 'const', 'QuantitySlider', '=', '(props)', '=>', '{', 'const', '{', 'keys,', 'onSelect,', 'currentQuantity', '}', '=', 'props;', 'const', 'myMarks', '=', 'marks.filter((mark)', '=>', 'keys.includes(mark.label));', 'if', '(myMarks.length', '===', '0)', 'return', 'null;', 'const', '{', 'width', '}', '=', '[...myMarks].pop();', 'return', '(', '<div', 'style={{', 'width', '}}>', '<Slider', 'value={currentQuantity}', 'getAriaValueText={valuetext}', 'valueLabelFormat={valueLabelFormat}', 'aria-labelledby=""discrete-slider""', 'valueLabelDisplay=""auto""', 'step={1}', 'marks={myMarks}', 'min={0}', 'max={myMarks.length}', 'onChangeCommitted={(ev,', 'val)', '=>', 'onSelect(val)}', '/>', '</div>', ');', '};', 'QuantitySlider.propTypes', '=', '{', 'keys:', 'PropTypes.arrayOf(PropTypes.string),', 'onSelect:', 'PropTypes.func.isRequired,', 'currentQuantity:', 'PropTypes.number,', '};', 'QuantitySlider.defaultProps', '=', '{', 'keys:', '[],', 'currentQuantity:', '0,', '};', 'export', 'default', 'QuantitySlider;', '```']",challenge not surrounded by ''': ,
"/**
           Copyright 2015, James G. Willmore

   Licensed under the Apache License, Version 2.0 (the ""License"");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an ""AS IS"" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
 */

package net.ljcomputing.core.domain;

/**
 * Interface for a node within a graph.
 * 
 * @author James G. Willmore
 *
 */
public interface Node extends Domain {

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', 'Copyright', '2015,', 'James', 'G.', 'Willmore', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', 'http://www.apache.org/licenses/LICENSE-2.0', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'net.ljcomputing.core.domain;', '/**', '*', 'Interface', 'for', 'a', 'node', 'within', 'a', 'graph.', '*', '*', '@author', 'James', 'G.', 'Willmore', '*', '*/', 'public', 'interface', 'Node', 'extends', 'Domain', '{', '}', '```']",challenge not surrounded by ''': ,
"/**
 * Handles the autocurrying of a function so that its arguments can be partially applied up until the last parameter accepted.
 * @param { function } originalFunction
 * @return { function }
 */
export function curry(originalFunction) {
  const nParams = originalFunction.length

  return function outer(...outerArgs) {
    if (outerArgs.length >= nParams) {
      return originalFunction.apply(this, outerArgs)
    } else {
      return function inner(...innerArgs) {
        return outer.apply(this, outerArgs.concat(innerArgs))
      }
    }
  }
}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', 'Handles', 'the', 'autocurrying', 'of', 'a', 'function', 'so', 'that', 'its', 'arguments', 'can', 'be', 'partially', 'applied', 'up', 'until', 'the', 'last', 'parameter', 'accepted.', '*', '@param', '{', 'function', '}', 'originalFunction', '*', '@return', '{', 'function', '}', '*/', 'export', 'function', 'curry(originalFunction)', '{', 'const', 'nParams', '=', 'originalFunction.length', 'return', 'function', 'outer(...outerArgs)', '{', 'if', '(outerArgs.length', '>=', 'nParams)', '{', 'return', 'originalFunction.apply(this,', 'outerArgs)', '}', 'else', '{', 'return', 'function', 'inner(...innerArgs)', '{', 'return', 'outer.apply(this,', 'outerArgs.concat(innerArgs))', '}', '}', '}', '}```']",challenge not surrounded by ''': ,
"var Test = function Test() {
  ""use strict"";

  babelHelpers.classCallCheck(this, Test);
  this.state = ""test"";
};

var Foo = /*#__PURE__*/function (_Bar) {
  ""use strict"";

  babelHelpers.inherits(Foo, _Bar);

  var _super = babelHelpers.createSuper(Foo);

  function Foo() {
    var _this;

    babelHelpers.classCallCheck(this, Foo);
    _this = _super.call(this);
    _this.state = ""test"";
    return _this;
  }

  return Foo;
}(Bar);

var ConstructorScoping = function ConstructorScoping() {
  ""use strict"";

  babelHelpers.classCallCheck(this, ConstructorScoping);
  var bar;
  {
    var _bar;
  }
};
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```var', 'Test', '=', 'function', 'Test()', '{', '""use', 'strict"";', 'babelHelpers.classCallCheck(this,', 'Test);', 'this.state', '=', '""test"";', '};', 'var', 'Foo', '=', '/*#__PURE__*/function', '(_Bar)', '{', '""use', 'strict"";', 'babelHelpers.inherits(Foo,', '_Bar);', 'var', '_super', '=', 'babelHelpers.createSuper(Foo);', 'function', 'Foo()', '{', 'var', '_this;', 'babelHelpers.classCallCheck(this,', 'Foo);', '_this', '=', '_super.call(this);', '_this.state', '=', '""test"";', 'return', '_this;', '}', 'return', 'Foo;', '}(Bar);', 'var', 'ConstructorScoping', '=', 'function', 'ConstructorScoping()', '{', '""use', 'strict"";', 'babelHelpers.classCallCheck(this,', 'ConstructorScoping);', 'var', 'bar;', '{', 'var', '_bar;', '}', '};', '```']",challenge not surrounded by ''': ,
"// Copyright 2012 Cloudera Inc.
//
// Licensed under the Apache License, Version 2.0 (the ""License"");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an ""AS IS"" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#include ""runtime/timestamp-value.h""

using namespace std;
using namespace boost;
using namespace boost::posix_time;
using namespace boost::gregorian;

DEFINE_bool(use_local_tz_for_unix_timestamp_conversions, false,
    ""When true, TIMESTAMPs are interpreted in the local time zone when converting to ""
    ""and from Unix times. When false, TIMESTAMPs are interpreted in the UTC time zone. ""
    ""Set to true for Hive compatibility."");

namespace impala {

const char* TimestampValue::LLVM_CLASS_NAME = ""class.impala::TimestampValue"";
const double TimestampValue::ONE_BILLIONTH = 0.000000001;

TimestampValue::TimestampValue(const char* str, int len) {
  TimestampParser::Parse(str, len, &date_, &time_);
}

TimestampValue::TimestampValue(const char* str, int len,
    const DateTimeFormatContext& dt_ctx) {
  TimestampParser::Parse(str, len, dt_ctx, &date_, &time_);
}

int TimestampValue::Format(const DateTimeFormatContext& dt_ctx, int len, char* buff) {
  return TimestampParser::Format(dt_ctx, date_, time_, len, buff);
}

void TimestampValue::UtcToLocal() {
  DCHECK(HasDateAndTime());
  try {
    tm temp_tm = to_tm(ptime(date_, time_));  // will throw if date/time is invalid
    time_t utc = timegm(&temp_tm);
    if (UNLIKELY(NULL == localtime_r(&utc, &temp_tm))) {
      *this = ptime(not_a_date_time);
      return;
    }
    // Unlikely but a time zone conversion may push the value over the min/max
    // boundary resulting in an exception.
    ptime local = ptime_from_tm(temp_tm);
    // Neither time_t nor struct tm allow fractional seconds so they have to be handled
    // separately.
    local += nanoseconds(time_.fractional_seconds());
    *this = local;
  } catch (std::exception& from_boost) {
    *this = ptime(not_a_date_time);
  }
}

ostream& operator<<(ostream& os, const TimestampValue& timestamp_value) {
  return os << timestamp_value.DebugString();
}

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//', 'Copyright', '2012', 'Cloudera', 'Inc.', '//', '//', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '//', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '//', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '//', '//', 'http://www.apache.org/licenses/LICENSE-2.0', '//', '//', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '//', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '//', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '//', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '//', 'limitations', 'under', 'the', 'License.', '#include', '""runtime/timestamp-value.h""', 'using', 'namespace', 'std;', 'using', 'namespace', 'boost;', 'using', 'namespace', 'boost::posix_time;', 'using', 'namespace', 'boost::gregorian;', 'DEFINE_bool(use_local_tz_for_unix_timestamp_conversions,', 'false,', '""When', 'true,', 'TIMESTAMPs', 'are', 'interpreted', 'in', 'the', 'local', 'time', 'zone', 'when', 'converting', 'to', '""', '""and', 'from', 'Unix', 'times.', 'When', 'false,', 'TIMESTAMPs', 'are', 'interpreted', 'in', 'the', 'UTC', 'time', 'zone.', '""', '""Set', 'to', 'true', 'for', 'Hive', 'compatibility."");', 'namespace', 'impala', '{', 'const', 'char*', 'TimestampValue::LLVM_CLASS_NAME', '=', '""class.impala::TimestampValue"";', 'const', 'double', 'TimestampValue::ONE_BILLIONTH', '=', '0.000000001;', 'TimestampValue::TimestampValue(const', 'char*', 'str,', 'int', 'len)', '{', 'TimestampParser::Parse(str,', 'len,', '&date_,', '&time_);', '}', 'TimestampValue::TimestampValue(const', 'char*', 'str,', 'int', 'len,', 'const', 'DateTimeFormatContext&', 'dt_ctx)', '{', 'TimestampParser::Parse(str,', 'len,', 'dt_ctx,', '&date_,', '&time_);', '}', 'int', 'TimestampValue::Format(const', 'DateTimeFormatContext&', 'dt_ctx,', 'int', 'len,', 'char*', 'buff)', '{', 'return', 'TimestampParser::Format(dt_ctx,', 'date_,', 'time_,', 'len,', 'buff);', '}', 'void', 'TimestampValue::UtcToLocal()', '{', 'DCHECK(HasDateAndTime());', 'try', '{', 'tm', 'temp_tm', '=', 'to_tm(ptime(date_,', 'time_));', '//', 'will', 'throw', 'if', 'date/time', 'is', 'invalid', 'time_t', 'utc', '=', 'timegm(&temp_tm);', 'if', '(UNLIKELY(NULL', '==', 'localtime_r(&utc,', '&temp_tm)))', '{', '*this', '=', 'ptime(not_a_date_time);', 'return;', '}', '//', 'Unlikely', 'but', 'a', 'time', 'zone', 'conversion', 'may', 'push', 'the', 'value', 'over', 'the', 'min/max', '//', 'boundary', 'resulting', 'in', 'an', 'exception.', 'ptime', 'local', '=', 'ptime_from_tm(temp_tm);', '//', 'Neither', 'time_t', 'nor', 'struct', 'tm', 'allow', 'fractional', 'seconds', 'so', 'they', 'have', 'to', 'be', 'handled', '//', 'separately.', 'local', '+=', 'nanoseconds(time_.fractional_seconds());', '*this', '=', 'local;', '}', 'catch', '(std::exception&', 'from_boost)', '{', '*this', '=', 'ptime(not_a_date_time);', '}', '}', 'ostream&', 'operator<<(ostream&', 'os,', 'const', 'TimestampValue&', 'timestamp_value)', '{', 'return', 'os', '<<', 'timestamp_value.DebugString();', '}', '}', '```']",challenge not surrounded by ''': ,
"var Wand = (function(wand) {

/* Inspiration taken from
   https://github.com/cugos/dropchop/blob/master/src/js/notifications/Notifications.js
 */

  'use strict';

  wand = wand || {};
  wand.notifications = {};
  var params;

  wand.notifications.init = function() {
    // create DOM element
    this.domElement = buildDomElement();

    // create notification center & locations
    wand.notifications.hub = document.getElementById('wand-notifications-container');
  };

  wand.notifications.add = function(options) {
    params = {};
    params.text = options.text || 'THIS NOTIFICATION REQUIRES TEXT';
    params.time = options.time || -1;
    params.type = options.type || 'default';

    // add a new notification to the stream
    var note = document.createElement('div');
    note.className = 'wand-notification ' + options.type;
    note.innerHTML = options.text;

    var hub = wand.notifications.hub || buildNotificationShell();
    hub.appendChild(note);

    wand.notifications.hub.appendChild(note);

    // TODO: add/remove notifications to an array to interact with them
    // instead of relying on setTimeout() dictating their existence.
    if (params.time > -1) {
      setTimeout(function () {
          hub.removeChild( wand.notifications.hub.firstChild );
          wand.notifications.hub.removeChild( wand.notifications.hub.firstChild );
      }, params.time);
    }

  };

  function buildDomElement() {
    var el = document.createElement('div');
    el.id = 'wand-notifications-container';

    var wandElem = wand.elem || document.body;
    wandElem.appendChild(el);
    return el;

  }

  function buildNotificationShell() {
    var el = document.createElement('div');
    el.className = 'wand-container';

    var notificationContainer = buildDomElement();
    el.appendChild(notificationContainer);
    document.body.appendChild(el);

    return notificationContainer;
  }

  return wand;
}(Wand || {}));
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```var', 'Wand', '=', '(function(wand)', '{', '/*', 'Inspiration', 'taken', 'from', 'https://github.com/cugos/dropchop/blob/master/src/js/notifications/Notifications.js', '*/', ""'use"", ""strict';"", 'wand', '=', 'wand', '||', '{};', 'wand.notifications', '=', '{};', 'var', 'params;', 'wand.notifications.init', '=', 'function()', '{', '//', 'create', 'DOM', 'element', 'this.domElement', '=', 'buildDomElement();', '//', 'create', 'notification', 'center', '&', 'locations', 'wand.notifications.hub', '=', ""document.getElementById('wand-notifications-container');"", '};', 'wand.notifications.add', '=', 'function(options)', '{', 'params', '=', '{};', 'params.text', '=', 'options.text', '||', ""'THIS"", 'NOTIFICATION', 'REQUIRES', ""TEXT';"", 'params.time', '=', 'options.time', '||', '-1;', 'params.type', '=', 'options.type', '||', ""'default';"", '//', 'add', 'a', 'new', 'notification', 'to', 'the', 'stream', 'var', 'note', '=', ""document.createElement('div');"", 'note.className', '=', ""'wand-notification"", ""'"", '+', 'options.type;', 'note.innerHTML', '=', 'options.text;', 'var', 'hub', '=', 'wand.notifications.hub', '||', 'buildNotificationShell();', 'hub.appendChild(note);', 'wand.notifications.hub.appendChild(note);', '//', 'TODO:', 'add/remove', 'notifications', 'to', 'an', 'array', 'to', 'interact', 'with', 'them', '//', 'instead', 'of', 'relying', 'on', 'setTimeout()', 'dictating', 'their', 'existence.', 'if', '(params.time', '>', '-1)', '{', 'setTimeout(function', '()', '{', 'hub.removeChild(', 'wand.notifications.hub.firstChild', ');', 'wand.notifications.hub.removeChild(', 'wand.notifications.hub.firstChild', ');', '},', 'params.time);', '}', '};', 'function', 'buildDomElement()', '{', 'var', 'el', '=', ""document.createElement('div');"", 'el.id', '=', ""'wand-notifications-container';"", 'var', 'wandElem', '=', 'wand.elem', '||', 'document.body;', 'wandElem.appendChild(el);', 'return', 'el;', '}', 'function', 'buildNotificationShell()', '{', 'var', 'el', '=', ""document.createElement('div');"", 'el.className', '=', ""'wand-container';"", 'var', 'notificationContainer', '=', 'buildDomElement();', 'el.appendChild(notificationContainer);', 'document.body.appendChild(el);', 'return', 'notificationContainer;', '}', 'return', 'wand;', '}(Wand', '||', '{}));', '```']",challenge not surrounded by ''': ,
"#include ""mainwindow.h""
#include ""ui_mainwindow.h""

MainWindow::MainWindow(QWidget *parent) :
    QMainWindow(parent),
    ui(new Ui::MainWindow)
{
    ui->setupUi(this);
}

MainWindow::~MainWindow()
{
    delete ui;
}

void MainWindow::on_ButtonCreate_clicked()
{
    auto lettersAllowed = ui->checkBoxLetters->isChecked();
    auto numbersAllowed = ui->checkBoxNumbers->isChecked();
    auto specialAllowed = ui->checkBoxSpecialChars->isChecked();

    auto length = ui->spinBoxLenght->value();

    auto ansiiPassword = createPassword( AllowedCharacters( lettersAllowed, numbersAllowed, specialAllowed ), length );

    ui->lineEditPassword->setText( QString::fromStdString( ansiiPassword ) );
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#include', '""mainwindow.h""', '#include', '""ui_mainwindow.h""', 'MainWindow::MainWindow(QWidget', '*parent)', ':', 'QMainWindow(parent),', 'ui(new', 'Ui::MainWindow)', '{', 'ui->setupUi(this);', '}', 'MainWindow::~MainWindow()', '{', 'delete', 'ui;', '}', 'void', 'MainWindow::on_ButtonCreate_clicked()', '{', 'auto', 'lettersAllowed', '=', 'ui->checkBoxLetters->isChecked();', 'auto', 'numbersAllowed', '=', 'ui->checkBoxNumbers->isChecked();', 'auto', 'specialAllowed', '=', 'ui->checkBoxSpecialChars->isChecked();', 'auto', 'length', '=', 'ui->spinBoxLenght->value();', 'auto', 'ansiiPassword', '=', 'createPassword(', 'AllowedCharacters(', 'lettersAllowed,', 'numbersAllowed,', 'specialAllowed', '),', 'length', ');', 'ui->lineEditPassword->setText(', 'QString::fromStdString(', 'ansiiPassword', ')', ');', '}', '```']",challenge not surrounded by ''': ,
"<html>
  <head>
    <title>Foosball</title>
    <link href=""/extern/css/bootstrap.min.css"" rel=""stylesheet"" type=""text/css"" />
    <link href=""/css/spinner.css"" rel=""stylesheet"" type=""text/css"" />
    <link href=""/extern/css/datepicker3.css"" rel=""stylesheet"" type=""text/css"">
  </head>
  <body>
    <div id=""app""></div>
    <script src=""/extern/js/react-0.11.1.js""></script>
    <script src=""/extern/js/jquery.min.js""></script>
    <script src=""/extern/js/bootstrap.min.js""></script>
    <script src=""/extern/js/bootstrap-datepicker.js""></script>
    <script src=""/js/dev/goog/base.js""></script>
    <script src=""/js/dev/foosball.js""></script>
    <script>goog.require(""user"");</script>
  </body>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<html>', '<head>', '<title>Foosball</title>', '<link', 'href=""/extern/css/bootstrap.min.css""', 'rel=""stylesheet""', 'type=""text/css""', '/>', '<link', 'href=""/css/spinner.css""', 'rel=""stylesheet""', 'type=""text/css""', '/>', '<link', 'href=""/extern/css/datepicker3.css""', 'rel=""stylesheet""', 'type=""text/css"">', '</head>', '<body>', '<div', 'id=""app""></div>', '<script', 'src=""/extern/js/react-0.11.1.js""></script>', '<script', 'src=""/extern/js/jquery.min.js""></script>', '<script', 'src=""/extern/js/bootstrap.min.js""></script>', '<script', 'src=""/extern/js/bootstrap-datepicker.js""></script>', '<script', 'src=""/js/dev/goog/base.js""></script>', '<script', 'src=""/js/dev/foosball.js""></script>', '<script>goog.require(""user"");</script>', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"// Import at the top of the file
var karma = require('karma').server;

var gulp = require('gulp');
var gutil = require('gulp-util');
var bower = require('bower');
var concat = require('gulp-concat');
var sass = require('gulp-sass');
var minifyCss = require('gulp-minify-css');
var rename = require('gulp-rename');
var sh = require('shelljs');

var paths = {
  sass: ['./scss/**/*.scss']
};


/**
* Test task, run test once and exit
*/
gulp.task('test', function(done) {
    karma.start({
        configFile: __dirname + '/tests/my.conf.js',
        singleRun: true
    }, function() {
        done();
    });
});

gulp.task('default', ['sass']);

gulp.task('sass', function(done) {
  gulp.src('./scss/ionic.app.scss')
    .pipe(sass())
    .on('error', sass.logError)
    .pipe(gulp.dest('./www/css/'))
    .pipe(minifyCss({
      keepSpecialComments: 0
    }))
    .pipe(rename({ extname: '.min.css' }))
    .pipe(gulp.dest('./www/css/'))
    .on('end', done);
});

gulp.task('watch', function() {
  gulp.watch(paths.sass, ['sass']);
});

gulp.task('install', ['git-check'], function() {
  return bower.commands.install()
    .on('log', function(data) {
      gutil.log('bower', gutil.colors.cyan(data.id), data.message);
    });
});

gulp.task('git-check', function(done) {
  if (!sh.which('git')) {
    console.log(
      '  ' + gutil.colors.red('Git is not installed.'),
      '\n  Git, the version control system, is required to download Ionic.',
      '\n  Download git here:', gutil.colors.cyan('http://git-scm.com/downloads') + '.',
      '\n  Once git is installed, run \'' + gutil.colors.cyan('gulp install') + '\' again.'
    );
    process.exit(1);
  }
  done();
});
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//', 'Import', 'at', 'the', 'top', 'of', 'the', 'file', 'var', 'karma', '=', ""require('karma').server;"", 'var', 'gulp', '=', ""require('gulp');"", 'var', 'gutil', '=', ""require('gulp-util');"", 'var', 'bower', '=', ""require('bower');"", 'var', 'concat', '=', ""require('gulp-concat');"", 'var', 'sass', '=', ""require('gulp-sass');"", 'var', 'minifyCss', '=', ""require('gulp-minify-css');"", 'var', 'rename', '=', ""require('gulp-rename');"", 'var', 'sh', '=', ""require('shelljs');"", 'var', 'paths', '=', '{', 'sass:', ""['./scss/**/*.scss']"", '};', '/**', '*', 'Test', 'task,', 'run', 'test', 'once', 'and', 'exit', '*/', ""gulp.task('test',"", 'function(done)', '{', 'karma.start({', 'configFile:', '__dirname', '+', ""'/tests/my.conf.js',"", 'singleRun:', 'true', '},', 'function()', '{', 'done();', '});', '});', ""gulp.task('default',"", ""['sass']);"", ""gulp.task('sass',"", 'function(done)', '{', ""gulp.src('./scss/ionic.app.scss')"", '.pipe(sass())', "".on('error',"", 'sass.logError)', "".pipe(gulp.dest('./www/css/'))"", '.pipe(minifyCss({', 'keepSpecialComments:', '0', '}))', '.pipe(rename({', 'extname:', ""'.min.css'"", '}))', "".pipe(gulp.dest('./www/css/'))"", "".on('end',"", 'done);', '});', ""gulp.task('watch',"", 'function()', '{', 'gulp.watch(paths.sass,', ""['sass']);"", '});', ""gulp.task('install',"", ""['git-check'],"", 'function()', '{', 'return', 'bower.commands.install()', "".on('log',"", 'function(data)', '{', ""gutil.log('bower',"", 'gutil.colors.cyan(data.id),', 'data.message);', '});', '});', ""gulp.task('git-check',"", 'function(done)', '{', 'if', ""(!sh.which('git'))"", '{', 'console.log(', ""'"", ""'"", '+', ""gutil.colors.red('Git"", 'is', 'not', ""installed.'),"", ""'\\n"", 'Git,', 'the', 'version', 'control', 'system,', 'is', 'required', 'to', 'download', ""Ionic.',"", ""'\\n"", 'Download', 'git', ""here:',"", ""gutil.colors.cyan('http://git-scm.com/downloads')"", '+', ""'.',"", ""'\\n"", 'Once', 'git', 'is', 'installed,', 'run', ""\\''"", '+', ""gutil.colors.cyan('gulp"", ""install')"", '+', ""'\\'"", ""again.'"", ');', 'process.exit(1);', '}', 'done();', '});', '```']",challenge not surrounded by ''': ,
"/**
 * ﻿Copyright (C) 2012-${latestYearOfContribution} 52°North Initiative for Geospatial Open Source
 * Software GmbH
 *
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License version 2 as publishedby the Free
 * Software Foundation.
 *
 * If the program is linked with libraries which are licensed under one of the
 * following licenses, the combination of the program with the linked library is
 * not considered a ""derivative work"" of the program:
 *
 *     - Apache License, version 2.0
 *     - Apache Software License, version 1.0
 *     - GNU Lesser General Public License, version 3
 *     - Mozilla Public License, versions 1.0, 1.1 and 2.0
 *     - Common Development and Distribution License (CDDL), version 1.0
 *
 * Therefore the distribution of the program linked with libraries licensed under
 * the aforementioned licenses, is permitted by the copyright holders if the
 * distribution is compliant with both the GNU General Public License version 2
 * and the aforementioned licenses.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE. See the GNU General Public License for more details.
 */
package org.n52.sps.service;

import org.n52.ows.service.binding.HttpBinding;

public interface SpsOperationExtension {
    
    public boolean isInterceptCapabilities();
    
    public void setExtensionBinding(HttpBinding httpBinding);
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', '\ufeffCopyright', '(C)', '2012-${latestYearOfContribution}', '52°North', 'Initiative', 'for', 'Geospatial', 'Open', 'Source', '*', 'Software', 'GmbH', '*', '*', 'This', 'program', 'is', 'free', 'software;', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', 'it', 'under', '*', 'the', 'terms', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'version', '2', 'as', 'publishedby', 'the', 'Free', '*', 'Software', 'Foundation.', '*', '*', 'If', 'the', 'program', 'is', 'linked', 'with', 'libraries', 'which', 'are', 'licensed', 'under', 'one', 'of', 'the', '*', 'following', 'licenses,', 'the', 'combination', 'of', 'the', 'program', 'with', 'the', 'linked', 'library', 'is', '*', 'not', 'considered', 'a', '""derivative', 'work""', 'of', 'the', 'program:', '*', '*', '-', 'Apache', 'License,', 'version', '2.0', '*', '-', 'Apache', 'Software', 'License,', 'version', '1.0', '*', '-', 'GNU', 'Lesser', 'General', 'Public', 'License,', 'version', '3', '*', '-', 'Mozilla', 'Public', 'License,', 'versions', '1.0,', '1.1', 'and', '2.0', '*', '-', 'Common', 'Development', 'and', 'Distribution', 'License', '(CDDL),', 'version', '1.0', '*', '*', 'Therefore', 'the', 'distribution', 'of', 'the', 'program', 'linked', 'with', 'libraries', 'licensed', 'under', '*', 'the', 'aforementioned', 'licenses,', 'is', 'permitted', 'by', 'the', 'copyright', 'holders', 'if', 'the', '*', 'distribution', 'is', 'compliant', 'with', 'both', 'the', 'GNU', 'General', 'Public', 'License', 'version', '2', '*', 'and', 'the', 'aforementioned', 'licenses.', '*', '*', 'This', 'program', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', 'but', 'WITHOUT', 'ANY', '*', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', '*', 'PARTICULAR', 'PURPOSE.', 'See', 'the', 'GNU', 'General', 'Public', 'License', 'for', 'more', 'details.', '*/', 'package', 'org.n52.sps.service;', 'import', 'org.n52.ows.service.binding.HttpBinding;', 'public', 'interface', 'SpsOperationExtension', '{', 'public', 'boolean', 'isInterceptCapabilities();', 'public', 'void', 'setExtensionBinding(HttpBinding', 'httpBinding);', '}', '```']",challenge not surrounded by ''': ,
"var searchData=
[
  ['pos',['Pos',['../class_row_iter.html#a3b3c4fd790e6f3ed8fd177322fcfb2c7',1,'RowIter::Pos()'],['../class_result_iter.html#a2ac9c081821745b8f44ed1398639fc67',1,'ResultIter::Pos()']]],
  ['presult',['pResult',['../class_result_iter.html#a9043f192862097477bb7ac5e01931b5d',1,'ResultIter']]],
  ['prow',['pRow',['../class_row_iter.html#ad96271ae177ab71db04ec9512415fdda',1,'RowIter']]]
];
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```var', 'searchData=', '[', ""['pos',['Pos',['../class_row_iter.html#a3b3c4fd790e6f3ed8fd177322fcfb2c7',1,'RowIter::Pos()'],['../class_result_iter.html#a2ac9c081821745b8f44ed1398639fc67',1,'ResultIter::Pos()']]],"", ""['presult',['pResult',['../class_result_iter.html#a9043f192862097477bb7ac5e01931b5d',1,'ResultIter']]],"", ""['prow',['pRow',['../class_row_iter.html#ad96271ae177ab71db04ec9512415fdda',1,'RowIter']]]"", '];', '```']",challenge not surrounded by ''': ,
"#! /usr/bin/python

# This file is Copyright 2005 Mario Zoppetti, and was added by
# Darryl A. Dixon <esrever_otua@pythonhacker.is-a-geek.net> to 
# 'NTLM Authorization Proxy Server',
# Copyright 2001 Dmitry A. Rozmanov <dima@xenon.spb.ru>
#
# NTLM APS is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# NTLM APS is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with the sofware; see the file COPYING. If not, write to the
# Free Software Foundation, Inc.,
# 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.
#
# setup.py
from distutils.core import setup
import sys, re, string, os

try:
    import py2exe 
    sys.argv.append(""py2exe"")
    use_py2exe=True
except:
    use_py2exe=False


if use_py2exe:
    serverCfgDir=''
else:
    serverCfgDir='/etc/ntlmaps'

setup(name='ntlmaps',
      version='1.0',
      description='NTLM Authorization Proxy Server',
      url='http://ntlmaps.sourceforge.net/',
      packages=['ntlmaps'],
      scripts=['scripts/ntlmaps', 'scripts/ntlmaps-hashes'],
      data_files=[(serverCfgDir, ['server.cfg']),
                  ('/etc/rc.d/init.d', ['init/ntlmaps'])],
      options = {""py2exe"": {""packages"": [""encodings"", ""win32console""],
                            ""optimize"": 2}},
      )
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!', '/usr/bin/python', '#', 'This', 'file', 'is', 'Copyright', '2005', 'Mario', 'Zoppetti,', 'and', 'was', 'added', 'by', '#', 'Darryl', 'A.', 'Dixon', '<esrever_otua@pythonhacker.is-a-geek.net>', 'to', '#', ""'NTLM"", 'Authorization', 'Proxy', ""Server',"", '#', 'Copyright', '2001', 'Dmitry', 'A.', 'Rozmanov', '<dima@xenon.spb.ru>', '#', '#', 'NTLM', 'APS', 'is', 'free', 'software;', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', '#', 'it', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'as', 'published', 'by', '#', 'the', 'Free', 'Software', 'Foundation;', 'either', 'version', '2', 'of', 'the', 'License,', 'or', '#', '(at', 'your', 'option)', 'any', 'later', 'version.', '#', '#', 'NTLM', 'APS', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', '#', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', '#', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', '#', 'GNU', 'General', 'Public', 'License', 'for', 'more', 'details.', '#', '#', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'General', 'Public', 'License', '#', 'along', 'with', 'the', 'sofware;', 'see', 'the', 'file', 'COPYING.', 'If', 'not,', 'write', 'to', 'the', '#', 'Free', 'Software', 'Foundation,', 'Inc.,', '#', '59', 'Temple', 'Place,', 'Suite', '330,', 'Boston,', 'MA', '02111-1307,', 'USA.', '#', '#', 'setup.py', 'from', 'distutils.core', 'import', 'setup', 'import', 'sys,', 're,', 'string,', 'os', 'try:', 'import', 'py2exe', 'sys.argv.append(""py2exe"")', 'use_py2exe=True', 'except:', 'use_py2exe=False', 'if', 'use_py2exe:', ""serverCfgDir=''"", 'else:', ""serverCfgDir='/etc/ntlmaps'"", ""setup(name='ntlmaps',"", ""version='1.0',"", ""description='NTLM"", 'Authorization', 'Proxy', ""Server',"", ""url='http://ntlmaps.sourceforge.net/',"", ""packages=['ntlmaps'],"", ""scripts=['scripts/ntlmaps',"", ""'scripts/ntlmaps-hashes'],"", 'data_files=[(serverCfgDir,', ""['server.cfg']),"", ""('/etc/rc.d/init.d',"", ""['init/ntlmaps'])],"", 'options', '=', '{""py2exe"":', '{""packages"":', '[""encodings"",', '""win32console""],', '""optimize"":', '2}},', ')', '```']",challenge not surrounded by ''': ,
"<template name=""mode-shortcuts-create-parallel"">
  <div class=""shortcuts"">

    <div class=""shortcut"">
      <span class=""shortcut__key shortcut__key--solo"">esc</span>
      <div class=""shortcut__flyout"">
        <h1 class=""flyout__h1"">Cancel / Exit</h1>
      </div>
    </div>

    <div class=""shortcut"">
      <span class=""shortcut__key shortcut__key--solo"">&#x21E7; shift</span>
      <div class=""shortcut__flyout"">
        <h1 class=""flyout__h1"">End a <span class=""flyout__bit-type"">parallel</span></h1>
        <hr>
        <p>What is a parallel? An association, a link
        </p>
      </div>
    </div>
  
  </div>
</template>


","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<template', 'name=""mode-shortcuts-create-parallel"">', '<div', 'class=""shortcuts"">', '<div', 'class=""shortcut"">', '<span', 'class=""shortcut__key', 'shortcut__key--solo"">esc</span>', '<div', 'class=""shortcut__flyout"">', '<h1', 'class=""flyout__h1"">Cancel', '/', 'Exit</h1>', '</div>', '</div>', '<div', 'class=""shortcut"">', '<span', 'class=""shortcut__key', 'shortcut__key--solo"">&#x21E7;', 'shift</span>', '<div', 'class=""shortcut__flyout"">', '<h1', 'class=""flyout__h1"">End', 'a', '<span', 'class=""flyout__bit-type"">parallel</span></h1>', '<hr>', '<p>What', 'is', 'a', 'parallel?', 'An', 'association,', 'a', 'link', '</p>', '</div>', '</div>', '</div>', '</template>', '```']",challenge not surrounded by ''': ,
"from __future__ import absolute_import
from pychron.processing.ratio import Ratio

__author__ = 'ross'

import unittest


class RatioTestCase(unittest.TestCase):
    def test_nom(self):
        r = Ratio(1, 2)
        self.assertEqual(r.nom.value.nominal_value, 1)

    def test_den(self):
        r = Ratio(1, 2)
        self.assertEqual(r.den.value.nominal_value, 2)

    def test_tuple1(self):
        r = Ratio((1, 0.1), (2, 0.2))
        self.assertEqual(r.value.nominal_value, 0.5)

    def test_tuple2(self):
        r = Ratio(1, (2, 0.2))
        self.assertEqual(r.value.nominal_value, 0.5)

    def test_int_value(self):
        r = Ratio(1, 2)
        self.assertEqual(r.value, 0.5)

    def test_float_value(self):
        r = Ratio(1, 2)
        self.assertEqual(r.value, 0.5)


if __name__ == '__main__':
    unittest.main()
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```from', '__future__', 'import', 'absolute_import', 'from', 'pychron.processing.ratio', 'import', 'Ratio', '__author__', '=', ""'ross'"", 'import', 'unittest', 'class', 'RatioTestCase(unittest.TestCase):', 'def', 'test_nom(self):', 'r', '=', 'Ratio(1,', '2)', 'self.assertEqual(r.nom.value.nominal_value,', '1)', 'def', 'test_den(self):', 'r', '=', 'Ratio(1,', '2)', 'self.assertEqual(r.den.value.nominal_value,', '2)', 'def', 'test_tuple1(self):', 'r', '=', 'Ratio((1,', '0.1),', '(2,', '0.2))', 'self.assertEqual(r.value.nominal_value,', '0.5)', 'def', 'test_tuple2(self):', 'r', '=', 'Ratio(1,', '(2,', '0.2))', 'self.assertEqual(r.value.nominal_value,', '0.5)', 'def', 'test_int_value(self):', 'r', '=', 'Ratio(1,', '2)', 'self.assertEqual(r.value,', '0.5)', 'def', 'test_float_value(self):', 'r', '=', 'Ratio(1,', '2)', 'self.assertEqual(r.value,', '0.5)', 'if', '__name__', '==', ""'__main__':"", 'unittest.main()', '```']",challenge not surrounded by ''': ,
"/*
 * Hemisphere.cpp
 *
 *  Created on: Mar 5, 2013
 *      Author: karsten
 */

#include <aqsis/util/logging.h>

#include ""Hemisphere.h""

namespace Aqsis {

using Imath::V3f;
using Imath::C3f;


inline float dot(V3f a, V3f b) {
	return a ^ b;
}

Hemisphere::Hemisphere( V3f N, int phong, V3f* directions, C3f* radiances, int num)
		: N(N), phong(phong), directions(directions), radiances(radiances), num(num), dPu(0), dPv(0), radius(0) {
	}


float Hemisphere::operator () (double theta, double phi) const {
	return radiosityInSpherDir(theta,phi).x;
}

C3f Hemisphere::radiosityInSpherDir(double theta, double phi) const {

	V3f dir = sphToCart(V3f(theta, phi, 1));
	return radiosityInDir(dir);

}

C3f Hemisphere::radiosityInDir(const V3f dir) const {

	C3f tot(0, 0, 0);

	if (num == 0)
		return tot;

	for (int i = 0; i < num; i++) {
		V3f L = directions[i];
		V3f Cl = radiances[i];
		V3f R = -L - 2 * (dot(-L, N)) * N;

		float dotp = dot(dir, N);
		if (dotp > 0) {
			float phongFactor = pow(std::max(0.0f, dot(R, dir)), phong);
			float normPhongFactor = phongFactor * ((phong + 1) / (2 * M_PI));
			tot += Cl * dotp * normPhongFactor;
		}

//		if (isnan(tot.x) || isnan(tot.y) || isnan(tot.z)) {
//			Aqsis::log() << warning << ""NaN-> L:("" << L.x << "", "" << L.y
//					<< "", "" << L.z << "") Cl:("" << Cl.x << "", "" << Cl.y << "", ""
//					<< Cl.z << "") num: "" << num << std::endl;
//			Aqsis::log() << warning << ""-"" << std::endl;
//		}
	}
	return tot;
}


Hemisphere::~Hemisphere() {
}


V3f cartToSph(const V3f dir) {
	V3f tmp;
	tmp.z = sqrt(dir.x * dir.x + dir.y * dir.y + dir.z * dir.z);
	tmp.x = acos(dir.z / tmp.z);
	if ( 0 <= dir.x) {
		tmp.y = atan(dir.y / dir.x);
	} else {
		tmp.y = M_PI-atan(dir.y / dir.x);
	}
	return tmp;
}

V3f sphToCart(const V3f dir) {
	V3f tmp;
	tmp.z = dir.z * cos(dir.x);
	tmp.x = dir.z * sin(dir.x)*cos(dir.y);
	tmp.y = dir.z * sin(dir.x)*sin(dir.y);
	return tmp;
}


}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Hemisphere.cpp', '*', '*', 'Created', 'on:', 'Mar', '5,', '2013', '*', 'Author:', 'karsten', '*/', '#include', '<aqsis/util/logging.h>', '#include', '""Hemisphere.h""', 'namespace', 'Aqsis', '{', 'using', 'Imath::V3f;', 'using', 'Imath::C3f;', 'inline', 'float', 'dot(V3f', 'a,', 'V3f', 'b)', '{', 'return', 'a', '^', 'b;', '}', 'Hemisphere::Hemisphere(', 'V3f', 'N,', 'int', 'phong,', 'V3f*', 'directions,', 'C3f*', 'radiances,', 'int', 'num)', ':', 'N(N),', 'phong(phong),', 'directions(directions),', 'radiances(radiances),', 'num(num),', 'dPu(0),', 'dPv(0),', 'radius(0)', '{', '}', 'float', 'Hemisphere::operator', '()', '(double', 'theta,', 'double', 'phi)', 'const', '{', 'return', 'radiosityInSpherDir(theta,phi).x;', '}', 'C3f', 'Hemisphere::radiosityInSpherDir(double', 'theta,', 'double', 'phi)', 'const', '{', 'V3f', 'dir', '=', 'sphToCart(V3f(theta,', 'phi,', '1));', 'return', 'radiosityInDir(dir);', '}', 'C3f', 'Hemisphere::radiosityInDir(const', 'V3f', 'dir)', 'const', '{', 'C3f', 'tot(0,', '0,', '0);', 'if', '(num', '==', '0)', 'return', 'tot;', 'for', '(int', 'i', '=', '0;', 'i', '<', 'num;', 'i++)', '{', 'V3f', 'L', '=', 'directions[i];', 'V3f', 'Cl', '=', 'radiances[i];', 'V3f', 'R', '=', '-L', '-', '2', '*', '(dot(-L,', 'N))', '*', 'N;', 'float', 'dotp', '=', 'dot(dir,', 'N);', 'if', '(dotp', '>', '0)', '{', 'float', 'phongFactor', '=', 'pow(std::max(0.0f,', 'dot(R,', 'dir)),', 'phong);', 'float', 'normPhongFactor', '=', 'phongFactor', '*', '((phong', '+', '1)', '/', '(2', '*', 'M_PI));', 'tot', '+=', 'Cl', '*', 'dotp', '*', 'normPhongFactor;', '}', '//', 'if', '(isnan(tot.x)', '||', 'isnan(tot.y)', '||', 'isnan(tot.z))', '{', '//', 'Aqsis::log()', '<<', 'warning', '<<', '""NaN->', 'L:(""', '<<', 'L.x', '<<', '"",', '""', '<<', 'L.y', '//', '<<', '"",', '""', '<<', 'L.z', '<<', '"")', 'Cl:(""', '<<', 'Cl.x', '<<', '"",', '""', '<<', 'Cl.y', '<<', '"",', '""', '//', '<<', 'Cl.z', '<<', '"")', 'num:', '""', '<<', 'num', '<<', 'std::endl;', '//', 'Aqsis::log()', '<<', 'warning', '<<', '""-""', '<<', 'std::endl;', '//', '}', '}', 'return', 'tot;', '}', 'Hemisphere::~Hemisphere()', '{', '}', 'V3f', 'cartToSph(const', 'V3f', 'dir)', '{', 'V3f', 'tmp;', 'tmp.z', '=', 'sqrt(dir.x', '*', 'dir.x', '+', 'dir.y', '*', 'dir.y', '+', 'dir.z', '*', 'dir.z);', 'tmp.x', '=', 'acos(dir.z', '/', 'tmp.z);', 'if', '(', '0', '<=', 'dir.x)', '{', 'tmp.y', '=', 'atan(dir.y', '/', 'dir.x);', '}', 'else', '{', 'tmp.y', '=', 'M_PI-atan(dir.y', '/', 'dir.x);', '}', 'return', 'tmp;', '}', 'V3f', 'sphToCart(const', 'V3f', 'dir)', '{', 'V3f', 'tmp;', 'tmp.z', '=', 'dir.z', '*', 'cos(dir.x);', 'tmp.x', '=', 'dir.z', '*', 'sin(dir.x)*cos(dir.y);', 'tmp.y', '=', 'dir.z', '*', 'sin(dir.x)*sin(dir.y);', 'return', 'tmp;', '}', '}', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""utf-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <meta name=""generator"" content=""rustdoc"">
    <meta name=""description"" content=""API documentation for the Rust `tag_lang_items_item_node_id` constant in crate `rustc_trans`."">
    <meta name=""keywords"" content=""rust, rustlang, rust-lang, tag_lang_items_item_node_id"">

    <title>rustc_trans::metadata::common::tag_lang_items_item_node_id - Rust</title>

    <link rel=""stylesheet"" type=""text/css"" href=""../../../main.css"">

    <link rel=""shortcut icon"" href=""http://www.rust-lang.org/favicon.ico"">
    
</head>
<body class=""rustdoc"">
    <!--[if lte IE 8]>
    <div class=""warning"">
        This old browser is unsupported and will most likely display funky
        things.
    </div>
    <![endif]-->

    

    <section class=""sidebar"">
        <a href='../../../rustc_trans/index.html'><img src='http://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png' alt='' width='100'></a>
        <p class='location'><a href='../../index.html'>rustc_trans</a>::<wbr><a href='../index.html'>metadata</a>::<wbr><a href='index.html'>common</a></p><script>window.sidebarCurrent = {name: 'tag_lang_items_item_node_id', ty: 'constant', relpath: ''};</script><script defer src=""sidebar-items.js""></script>
    </section>

    <nav class=""sub"">
        <form class=""search-form js-only"">
            <div class=""search-container"">
                <input class=""search-input"" name=""search""
                       autocomplete=""off""
                       placeholder=""Click or press 'S' to search, '?' for more options...""
                       type=""search"">
            </div>
        </form>
    </nav>

    <section id='main' class=""content constant"">
<h1 class='fqn'><span class='in-band'><a href='../../index.html'>rustc_trans</a>::<wbr><a href='../index.html'>metadata</a>::<wbr><a href='index.html'>common</a>::<wbr><a class='constant' href=''>tag_lang_items_item_node_id</a><wbr><a class='stability Unstable' title=''>Unstable</a></span><span class='out-of-band'><span id='render-detail'>
            <a id=""collapse-all"" href=""#"">[-]</a>&nbsp;<a id=""expand-all"" href=""#"">[+]</a>
        </span><a id='src-243560' href='../../../rustc/metadata/common/constant.tag_lang_items_item_node_id.html?gotosrc=243560'>[src]</a></span></h1>
<pre class='rust const'>pub const tag_lang_items_item_node_id: <a href='../../../std/primitive.usize.html'>usize</a><code> = </code><code>117</code></pre></section>
    <section id='search' class=""content hidden""></section>

    <section class=""footer""></section>

    <div id=""help"" class=""hidden"">
        <div class=""shortcuts"">
            <h1>Keyboard shortcuts</h1>
            <dl>
                <dt>?</dt>
                <dd>Show this help dialog</dd>
                <dt>S</dt>
                <dd>Focus the search field</dd>
                <dt>&larrb;</dt>
                <dd>Move up in search results</dd>
                <dt>&rarrb;</dt>
                <dd>Move down in search results</dd>
                <dt>&#9166;</dt>
                <dd>Go to active search result</dd>
            </dl>
        </div>
        <div class=""infos"">
            <h1>Search tricks</h1>
            <p>
                Prefix searches with a type followed by a colon (e.g.
                <code>fn:</code>) to restrict the search to a given type.
            </p>
            <p>
                Accepted types are: <code>fn</code>, <code>mod</code>,
                <code>struct</code>, <code>enum</code>,
                <code>trait</code>, <code>typedef</code> (or
                <code>tdef</code>).
            </p>
        </div>
    </div>

    

    <script>
        window.rootPath = ""../../../"";
        window.currentCrate = ""rustc_trans"";
        window.playgroundUrl = """";
    </script>
    <script src=""../../../jquery.js""></script>
    <script src=""../../../main.js""></script>
    
    <script async src=""../../../search-index.js""></script>
</body>
</html>","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'html>', '<html', 'lang=""en"">', '<head>', '<meta', 'charset=""utf-8"">', '<meta', 'name=""viewport""', 'content=""width=device-width,', 'initial-scale=1.0"">', '<meta', 'name=""generator""', 'content=""rustdoc"">', '<meta', 'name=""description""', 'content=""API', 'documentation', 'for', 'the', 'Rust', '`tag_lang_items_item_node_id`', 'constant', 'in', 'crate', '`rustc_trans`."">', '<meta', 'name=""keywords""', 'content=""rust,', 'rustlang,', 'rust-lang,', 'tag_lang_items_item_node_id"">', '<title>rustc_trans::metadata::common::tag_lang_items_item_node_id', '-', 'Rust</title>', '<link', 'rel=""stylesheet""', 'type=""text/css""', 'href=""../../../main.css"">', '<link', 'rel=""shortcut', 'icon""', 'href=""http://www.rust-lang.org/favicon.ico"">', '</head>', '<body', 'class=""rustdoc"">', '<!--[if', 'lte', 'IE', '8]>', '<div', 'class=""warning"">', 'This', 'old', 'browser', 'is', 'unsupported', 'and', 'will', 'most', 'likely', 'display', 'funky', 'things.', '</div>', '<![endif]-->', '<section', 'class=""sidebar"">', '<a', ""href='../../../rustc_trans/index.html'><img"", ""src='http://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png'"", ""alt=''"", ""width='100'></a>"", '<p', ""class='location'><a"", ""href='../../index.html'>rustc_trans</a>::<wbr><a"", ""href='../index.html'>metadata</a>::<wbr><a"", ""href='index.html'>common</a></p><script>window.sidebarCurrent"", '=', '{name:', ""'tag_lang_items_item_node_id',"", 'ty:', ""'constant',"", 'relpath:', ""''};</script><script"", 'defer', 'src=""sidebar-items.js""></script>', '</section>', '<nav', 'class=""sub"">', '<form', 'class=""search-form', 'js-only"">', '<div', 'class=""search-container"">', '<input', 'class=""search-input""', 'name=""search""', 'autocomplete=""off""', 'placeholder=""Click', 'or', 'press', ""'S'"", 'to', 'search,', ""'?'"", 'for', 'more', 'options...""', 'type=""search"">', '</div>', '</form>', '</nav>', '<section', ""id='main'"", 'class=""content', 'constant"">', '<h1', ""class='fqn'><span"", ""class='in-band'><a"", ""href='../../index.html'>rustc_trans</a>::<wbr><a"", ""href='../index.html'>metadata</a>::<wbr><a"", ""href='index.html'>common</a>::<wbr><a"", ""class='constant'"", ""href=''>tag_lang_items_item_node_id</a><wbr><a"", ""class='stability"", ""Unstable'"", ""title=''>Unstable</a></span><span"", ""class='out-of-band'><span"", ""id='render-detail'>"", '<a', 'id=""collapse-all""', 'href=""#"">[-]</a>&nbsp;<a', 'id=""expand-all""', 'href=""#"">[+]</a>', '</span><a', ""id='src-243560'"", ""href='../../../rustc/metadata/common/constant.tag_lang_items_item_node_id.html?gotosrc=243560'>[src]</a></span></h1>"", '<pre', ""class='rust"", ""const'>pub"", 'const', 'tag_lang_items_item_node_id:', '<a', ""href='../../../std/primitive.usize.html'>usize</a><code>"", '=', '</code><code>117</code></pre></section>', '<section', ""id='search'"", 'class=""content', 'hidden""></section>', '<section', 'class=""footer""></section>', '<div', 'id=""help""', 'class=""hidden"">', '<div', 'class=""shortcuts"">', '<h1>Keyboard', 'shortcuts</h1>', '<dl>', '<dt>?</dt>', '<dd>Show', 'this', 'help', 'dialog</dd>', '<dt>S</dt>', '<dd>Focus', 'the', 'search', 'field</dd>', '<dt>&larrb;</dt>', '<dd>Move', 'up', 'in', 'search', 'results</dd>', '<dt>&rarrb;</dt>', '<dd>Move', 'down', 'in', 'search', 'results</dd>', '<dt>&#9166;</dt>', '<dd>Go', 'to', 'active', 'search', 'result</dd>', '</dl>', '</div>', '<div', 'class=""infos"">', '<h1>Search', 'tricks</h1>', '<p>', 'Prefix', 'searches', 'with', 'a', 'type', 'followed', 'by', 'a', 'colon', '(e.g.', '<code>fn:</code>)', 'to', 'restrict', 'the', 'search', 'to', 'a', 'given', 'type.', '</p>', '<p>', 'Accepted', 'types', 'are:', '<code>fn</code>,', '<code>mod</code>,', '<code>struct</code>,', '<code>enum</code>,', '<code>trait</code>,', '<code>typedef</code>', '(or', '<code>tdef</code>).', '</p>', '</div>', '</div>', '<script>', 'window.rootPath', '=', '""../../../"";', 'window.currentCrate', '=', '""rustc_trans"";', 'window.playgroundUrl', '=', '"""";', '</script>', '<script', 'src=""../../../jquery.js""></script>', '<script', 'src=""../../../main.js""></script>', '<script', 'async', 'src=""../../../search-index.js""></script>', '</body>', '</html>```']",challenge not surrounded by ''': ,
"/**
 * Campaign Auto-pause
 *
 * This script will pause all campaigns if their total accumulated spend
 * for the current month is higher than specified.
 *
 * Copyright (c) 2014. by Way2CU, http://way2cu.com
 * Authors: Mladen Mijatov
 */

var LIMIT = 2000;

function main() {
	var total_spend = 0;
	var campaigns = AdWordsApp.campaigns.get();

	// find total amount of money spent for current month
	while (campaigns.hasNext()) {
		var campaign = campaigns.next();
		var stats = campaign.getStatsFor('THIS_MONTH');

		// accumulate total amount spent
		total_spend += stats.getCost();
	}

	// total spending is within limits
	if (total_spend < LIMIT)
		return;

	// pause all the campaigns
	var campaigns = AdWordsApp.campaigns.get();
	while (campaigns.hasNext()) {
		var campaign = campaigns.next();
		campaign.pause();
	}
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', 'Campaign', 'Auto-pause', '*', '*', 'This', 'script', 'will', 'pause', 'all', 'campaigns', 'if', 'their', 'total', 'accumulated', 'spend', '*', 'for', 'the', 'current', 'month', 'is', 'higher', 'than', 'specified.', '*', '*', 'Copyright', '(c)', '2014.', 'by', 'Way2CU,', 'http://way2cu.com', '*', 'Authors:', 'Mladen', 'Mijatov', '*/', 'var', 'LIMIT', '=', '2000;', 'function', 'main()', '{', 'var', 'total_spend', '=', '0;', 'var', 'campaigns', '=', 'AdWordsApp.campaigns.get();', '//', 'find', 'total', 'amount', 'of', 'money', 'spent', 'for', 'current', 'month', 'while', '(campaigns.hasNext())', '{', 'var', 'campaign', '=', 'campaigns.next();', 'var', 'stats', '=', ""campaign.getStatsFor('THIS_MONTH');"", '//', 'accumulate', 'total', 'amount', 'spent', 'total_spend', '+=', 'stats.getCost();', '}', '//', 'total', 'spending', 'is', 'within', 'limits', 'if', '(total_spend', '<', 'LIMIT)', 'return;', '//', 'pause', 'all', 'the', 'campaigns', 'var', 'campaigns', '=', 'AdWordsApp.campaigns.get();', 'while', '(campaigns.hasNext())', '{', 'var', 'campaign', '=', 'campaigns.next();', 'campaign.pause();', '}', '}', '```']",challenge not surrounded by ''': ,
"allmakers = [
  {
    user : { userId : 'xxx', name : 'Tom', twitter : '' },
    cando : [
      'Android', 'Arduino', 'Electronics', '3D Printing'
    ],
    lookingfor : [
      'Laser Cuting', 'Welding', 'Metal Lathe'
    ],
    public : false
  },
  {
    user : { userId : 'xxx', name : 'Richard',  twitter : '' },
    cando : [
      'Arduino', 'Bluetooth', 'RasberryPi'
    ],
    lookingfor : ['Soldering'],
    public : false
  },
  {
    user : { userId : 'xxx', name : 'Harrold', twitter : '' },
    cando : [
      'Soldering', 'LED', 'Laser Etching'
    ],
    lookingfor : [],
    public : false
  },
  {
    user : { userId : 'xxx', name : 'Steph', twitter : '' },
    cando : [
      'Jewellery', 'Glass Drilling', 'Soldering'
    ],
    lookingfor : ['Arduino'],
    public : false
  }
];
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```allmakers', '=', '[', '{', 'user', ':', '{', 'userId', ':', ""'xxx',"", 'name', ':', ""'Tom',"", 'twitter', ':', ""''"", '},', 'cando', ':', '[', ""'Android',"", ""'Arduino',"", ""'Electronics',"", ""'3D"", ""Printing'"", '],', 'lookingfor', ':', '[', ""'Laser"", ""Cuting',"", ""'Welding',"", ""'Metal"", ""Lathe'"", '],', 'public', ':', 'false', '},', '{', 'user', ':', '{', 'userId', ':', ""'xxx',"", 'name', ':', ""'Richard',"", 'twitter', ':', ""''"", '},', 'cando', ':', '[', ""'Arduino',"", ""'Bluetooth',"", ""'RasberryPi'"", '],', 'lookingfor', ':', ""['Soldering'],"", 'public', ':', 'false', '},', '{', 'user', ':', '{', 'userId', ':', ""'xxx',"", 'name', ':', ""'Harrold',"", 'twitter', ':', ""''"", '},', 'cando', ':', '[', ""'Soldering',"", ""'LED',"", ""'Laser"", ""Etching'"", '],', 'lookingfor', ':', '[],', 'public', ':', 'false', '},', '{', 'user', ':', '{', 'userId', ':', ""'xxx',"", 'name', ':', ""'Steph',"", 'twitter', ':', ""''"", '},', 'cando', ':', '[', ""'Jewellery',"", ""'Glass"", ""Drilling',"", ""'Soldering'"", '],', 'lookingfor', ':', ""['Arduino'],"", 'public', ':', 'false', '}', '];', '```']",challenge not surrounded by ''': ,
"package com.futureplatforms.kirin.gwt.client.delegates.db;

import com.futureplatforms.kirin.dependencies.db.DatabaseDelegate;
import com.futureplatforms.kirin.gwt.client.services.db.DatabaseAccessService;

public class GwtDatabaseDelegate implements DatabaseDelegate {
	@Override
	public void open(String filename, DatabaseOpenedCallback cb) {
		DatabaseAccessService das = DatabaseAccessService.BACKDOOR();
		das._openDatabase(filename, cb);
	}
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.futureplatforms.kirin.gwt.client.delegates.db;', 'import', 'com.futureplatforms.kirin.dependencies.db.DatabaseDelegate;', 'import', 'com.futureplatforms.kirin.gwt.client.services.db.DatabaseAccessService;', 'public', 'class', 'GwtDatabaseDelegate', 'implements', 'DatabaseDelegate', '{', '@Override', 'public', 'void', 'open(String', 'filename,', 'DatabaseOpenedCallback', 'cb)', '{', 'DatabaseAccessService', 'das', '=', 'DatabaseAccessService.BACKDOOR();', 'das._openDatabase(filename,', 'cb);', '}', '}', '```']",challenge not surrounded by ''': ,
"package me.ivanfenenko.timelinesample;

import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.util.TypedValue;
import android.widget.SeekBar;

import me.ivanfenenko.timeline.TimeLineView;

public class MainActivity extends AppCompatActivity {

    SampleListAdapter sampleListAdapter;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        TimeLineView timeLineView = (TimeLineView) findViewById(R.id.timeLineView);
        SeekBar seekBarRadius = (SeekBar) findViewById(R.id.seekBarRadius);
        SeekBar seekBarWidth = (SeekBar) findViewById(R.id.seekBarWidth);

        sampleListAdapter = new SampleListAdapter();
        timeLineView.setAdapter(sampleListAdapter);

        timeLineView.addItem(new ListItem(""#FF2FD700"", ""succeeded""));
        timeLineView.addItem(new ListItem(""#FF2FD700"", ""succeeded""));
        timeLineView.addItem(new ListItem(""#FF2FD700"", ""succeeded""));
        timeLineView.addItem(new ListItem(""#FF2FD700"", ""succeeded""));
        timeLineView.addItem(new ListItem(""#FF2FD700"", ""succeeded""));
        timeLineView.addItem(new ListItem(""#FFD70700"", ""failed""));
        timeLineView.addItem(new ListItem(""#FFBCBCBC"", ""hasn't happened""));
        timeLineView.addItem(new ListItem(""#FFBCBCBC"", ""hasn't happened""));
        timeLineView.addItem(new ListItem(""#FFBCBCBC"", ""hasn't happened""));

        seekBarRadius.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
            @Override
            public void onProgressChanged(SeekBar seekBar, int i, boolean b) {
                i += 1;
                int val = (int) TypedValue.applyDimension(
                        TypedValue.COMPLEX_UNIT_DIP, i, getResources().getDisplayMetrics()
                );
                sampleListAdapter.setDotRadius(val);
                sampleListAdapter.notifyDataSetChanged();
            }

            @Override public void onStartTrackingTouch(SeekBar seekBar) {}
            @Override public void onStopTrackingTouch(SeekBar seekBar) {}
        });

        seekBarWidth.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
            @Override
            public void onProgressChanged(SeekBar seekBar, int i, boolean b) {
                i += 1;
                int val = (int) TypedValue.applyDimension(
                        TypedValue.COMPLEX_UNIT_DIP, i, getResources().getDisplayMetrics()
                );
                sampleListAdapter.setLineWidth(val);
                sampleListAdapter.notifyDataSetChanged();
            }

            @Override public void onStartTrackingTouch(SeekBar seekBar) {}
            @Override public void onStopTrackingTouch(SeekBar seekBar) {}
        });
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'me.ivanfenenko.timelinesample;', 'import', 'android.os.Bundle;', 'import', 'android.support.v7.app.AppCompatActivity;', 'import', 'android.util.TypedValue;', 'import', 'android.widget.SeekBar;', 'import', 'me.ivanfenenko.timeline.TimeLineView;', 'public', 'class', 'MainActivity', 'extends', 'AppCompatActivity', '{', 'SampleListAdapter', 'sampleListAdapter;', '@Override', 'protected', 'void', 'onCreate(Bundle', 'savedInstanceState)', '{', 'super.onCreate(savedInstanceState);', 'setContentView(R.layout.activity_main);', 'TimeLineView', 'timeLineView', '=', '(TimeLineView)', 'findViewById(R.id.timeLineView);', 'SeekBar', 'seekBarRadius', '=', '(SeekBar)', 'findViewById(R.id.seekBarRadius);', 'SeekBar', 'seekBarWidth', '=', '(SeekBar)', 'findViewById(R.id.seekBarWidth);', 'sampleListAdapter', '=', 'new', 'SampleListAdapter();', 'timeLineView.setAdapter(sampleListAdapter);', 'timeLineView.addItem(new', 'ListItem(""#FF2FD700"",', '""succeeded""));', 'timeLineView.addItem(new', 'ListItem(""#FF2FD700"",', '""succeeded""));', 'timeLineView.addItem(new', 'ListItem(""#FF2FD700"",', '""succeeded""));', 'timeLineView.addItem(new', 'ListItem(""#FF2FD700"",', '""succeeded""));', 'timeLineView.addItem(new', 'ListItem(""#FF2FD700"",', '""succeeded""));', 'timeLineView.addItem(new', 'ListItem(""#FFD70700"",', '""failed""));', 'timeLineView.addItem(new', 'ListItem(""#FFBCBCBC"",', '""hasn\'t', 'happened""));', 'timeLineView.addItem(new', 'ListItem(""#FFBCBCBC"",', '""hasn\'t', 'happened""));', 'timeLineView.addItem(new', 'ListItem(""#FFBCBCBC"",', '""hasn\'t', 'happened""));', 'seekBarRadius.setOnSeekBarChangeListener(new', 'SeekBar.OnSeekBarChangeListener()', '{', '@Override', 'public', 'void', 'onProgressChanged(SeekBar', 'seekBar,', 'int', 'i,', 'boolean', 'b)', '{', 'i', '+=', '1;', 'int', 'val', '=', '(int)', 'TypedValue.applyDimension(', 'TypedValue.COMPLEX_UNIT_DIP,', 'i,', 'getResources().getDisplayMetrics()', ');', 'sampleListAdapter.setDotRadius(val);', 'sampleListAdapter.notifyDataSetChanged();', '}', '@Override', 'public', 'void', 'onStartTrackingTouch(SeekBar', 'seekBar)', '{}', '@Override', 'public', 'void', 'onStopTrackingTouch(SeekBar', 'seekBar)', '{}', '});', 'seekBarWidth.setOnSeekBarChangeListener(new', 'SeekBar.OnSeekBarChangeListener()', '{', '@Override', 'public', 'void', 'onProgressChanged(SeekBar', 'seekBar,', 'int', 'i,', 'boolean', 'b)', '{', 'i', '+=', '1;', 'int', 'val', '=', '(int)', 'TypedValue.applyDimension(', 'TypedValue.COMPLEX_UNIT_DIP,', 'i,', 'getResources().getDisplayMetrics()', ');', 'sampleListAdapter.setLineWidth(val);', 'sampleListAdapter.notifyDataSetChanged();', '}', '@Override', 'public', 'void', 'onStartTrackingTouch(SeekBar', 'seekBar)', '{}', '@Override', 'public', 'void', 'onStopTrackingTouch(SeekBar', 'seekBar)', '{}', '});', '}', '}', '```']",challenge not surrounded by ''': ,
"{% extends ""base.html"" %}

{% load message_centre_tags %}

{% block message_centre_class %} class=""active""{% endblock %}

{% block container %}
	<p>message_centre tag can render messages based on the theme pack.</p>
	{% message_centre %}
{% endblock %}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```{%', 'extends', '""base.html""', '%}', '{%', 'load', 'message_centre_tags', '%}', '{%', 'block', 'message_centre_class', '%}', 'class=""active""{%', 'endblock', '%}', '{%', 'block', 'container', '%}', '<p>message_centre', 'tag', 'can', 'render', 'messages', 'based', 'on', 'the', 'theme', 'pack.</p>', '{%', 'message_centre', '%}', '{%', 'endblock', '%}```']",challenge not surrounded by ''': ,
"describe(""Borrower"", function() {
  var borrower;
  var song;

  beforeEach(function() {
    borrower = new Borrower();
    book = new Book();
  });

  it(""should be able to borrow a Book"", function() {
    ApiLendBook(book);
    expect(player.currentlyPlayingSong).toEqual(song);

    //demonstrates use of custom matcher
    expect(player).toBePlaying(song);
  });

  describe(""when song has been paused"", function() {
    beforeEach(function() {
      player.play(song);
      player.pause();
    });

    it(""should indicate that the song is currently paused"", function() {
      expect(player.isPlaying).toBeFalsy();

      // demonstrates use of 'not' with a custom matcher
      expect(player).not.toBePlaying(song);
    });

    it(""should be possible to resume"", function() {
      player.resume();
      expect(player.isPlaying).toBeTruthy();
      expect(player.currentlyPlayingSong).toEqual(song);
    });
  });

  // demonstrates use of spies to intercept and test method calls
  it(""tells the current song if the user has made it a favorite"", function() {
    spyOn(song, 'persistFavoriteStatus');

    player.play(song);
    player.makeFavorite();

    expect(song.persistFavoriteStatus).toHaveBeenCalledWith(true);
  });

  //demonstrates use of expected exceptions
  describe(""#resume"", function() {
    it(""should throw an exception if song is already playing"", function() {
      player.play(song);

      expect(function() {
        player.resume();
      }).toThrowError(""song is already playing"");
    });
  });
});
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```describe(""Borrower"",', 'function()', '{', 'var', 'borrower;', 'var', 'song;', 'beforeEach(function()', '{', 'borrower', '=', 'new', 'Borrower();', 'book', '=', 'new', 'Book();', '});', 'it(""should', 'be', 'able', 'to', 'borrow', 'a', 'Book"",', 'function()', '{', 'ApiLendBook(book);', 'expect(player.currentlyPlayingSong).toEqual(song);', '//demonstrates', 'use', 'of', 'custom', 'matcher', 'expect(player).toBePlaying(song);', '});', 'describe(""when', 'song', 'has', 'been', 'paused"",', 'function()', '{', 'beforeEach(function()', '{', 'player.play(song);', 'player.pause();', '});', 'it(""should', 'indicate', 'that', 'the', 'song', 'is', 'currently', 'paused"",', 'function()', '{', 'expect(player.isPlaying).toBeFalsy();', '//', 'demonstrates', 'use', 'of', ""'not'"", 'with', 'a', 'custom', 'matcher', 'expect(player).not.toBePlaying(song);', '});', 'it(""should', 'be', 'possible', 'to', 'resume"",', 'function()', '{', 'player.resume();', 'expect(player.isPlaying).toBeTruthy();', 'expect(player.currentlyPlayingSong).toEqual(song);', '});', '});', '//', 'demonstrates', 'use', 'of', 'spies', 'to', 'intercept', 'and', 'test', 'method', 'calls', 'it(""tells', 'the', 'current', 'song', 'if', 'the', 'user', 'has', 'made', 'it', 'a', 'favorite"",', 'function()', '{', 'spyOn(song,', ""'persistFavoriteStatus');"", 'player.play(song);', 'player.makeFavorite();', 'expect(song.persistFavoriteStatus).toHaveBeenCalledWith(true);', '});', '//demonstrates', 'use', 'of', 'expected', 'exceptions', 'describe(""#resume"",', 'function()', '{', 'it(""should', 'throw', 'an', 'exception', 'if', 'song', 'is', 'already', 'playing"",', 'function()', '{', 'player.play(song);', 'expect(function()', '{', 'player.resume();', '}).toThrowError(""song', 'is', 'already', 'playing"");', '});', '});', '});', '```']",challenge not surrounded by ''': ,
"--done
alter table ALERTS_ALERTS drop constraint ALERTS_ALERTS_ID_PKEY;
alter table ALERTS_ALERTS drop  constraint FK_ALERTSET;
alter table ALERTS drop constraint ALERTS_ID_PKEY;
alter table EVENTS drop constraint EVENTS_SYMBOL_PKEY;
alter table portfolio drop constraint FK_PF2_STOCK;
alter table PORTFOLIO drop constraint FK_PORTFOLIO;
alter table PORTFOLIO_NAME  drop constraint SQL080630224258290; 
alter table alerts  drop constraint FK_AS_PORTFOLIO;
alter table portfolio  drop constraint ID_PK;
alter table alerts drop constraint ALERTS_ID_PKEY;
alter table quotations drop constraint  QUOTATIONS_PKEY; 
alter table portfolio drop constraint FK_STOCK;
alter table shares drop constraint SHARES_PKEY; 

--SELECT TABLENAME, CONGLOMERATENAME FROM SYS.SYSCONGLOMERATES,SYS.SYSCONSTRAINTS,SYS.SYStables
--	WHERE SYS.SYSCONGLOMERATES.TABLEID = sys.SYSCONSTRAINTS.TABLEID
--	AND sys.SYSTABLES.TABLEID = SYS.SYSCONGLOMERATES.TABLEID
--	ANd SYS.SYSTABLES.TABLENAME = 'PORTFOLIO'; 

drop index SYMBOL_ISIN_DATE_INDEX;
drop index SYMBOL_ISIN_INDEX;
drop index SYMBOL_DATE_INDEX;
drop index SYMBOL_INDEX;

drop index EVENTS_ANALYSENAME_DATE;
drop index EVENTS_SYMBOL_DATE_ISIN_INDEX;
drop index EVENTS_DATE_INDEX;
drop index EVENTS_ANALYSENAME_INDEX;



update portfolio set ISIN='FR0000054314' where  symbol = 'LAC.PA';
update shares set symbol = '10308438.PA' where isin ='FR0010773507';
update portfolio set ISIN='FR0000121220' where isin = 'FR0010618413';
delete from shares where isin = 'FR0010618413';

update portfolio set SYMBOL='BRE' where symbol ='BRES';
delete from shares where isin = 'FR0010345389' and symbol = 'BRES';

update shares set MARKETLISTPROVIDER = 'NYSE' where isin in ('LU0048575426','LU0074838565');
update shares set LASTQUOTE = '1970-01-01' where isin in ('LU0048575426','LU0074838565');
delete from quotations where isin in  ('LU0048575426','LU0074838565');




","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```--done', 'alter', 'table', 'ALERTS_ALERTS', 'drop', 'constraint', 'ALERTS_ALERTS_ID_PKEY;', 'alter', 'table', 'ALERTS_ALERTS', 'drop', 'constraint', 'FK_ALERTSET;', 'alter', 'table', 'ALERTS', 'drop', 'constraint', 'ALERTS_ID_PKEY;', 'alter', 'table', 'EVENTS', 'drop', 'constraint', 'EVENTS_SYMBOL_PKEY;', 'alter', 'table', 'portfolio', 'drop', 'constraint', 'FK_PF2_STOCK;', 'alter', 'table', 'PORTFOLIO', 'drop', 'constraint', 'FK_PORTFOLIO;', 'alter', 'table', 'PORTFOLIO_NAME', 'drop', 'constraint', 'SQL080630224258290;', 'alter', 'table', 'alerts', 'drop', 'constraint', 'FK_AS_PORTFOLIO;', 'alter', 'table', 'portfolio', 'drop', 'constraint', 'ID_PK;', 'alter', 'table', 'alerts', 'drop', 'constraint', 'ALERTS_ID_PKEY;', 'alter', 'table', 'quotations', 'drop', 'constraint', 'QUOTATIONS_PKEY;', 'alter', 'table', 'portfolio', 'drop', 'constraint', 'FK_STOCK;', 'alter', 'table', 'shares', 'drop', 'constraint', 'SHARES_PKEY;', '--SELECT', 'TABLENAME,', 'CONGLOMERATENAME', 'FROM', 'SYS.SYSCONGLOMERATES,SYS.SYSCONSTRAINTS,SYS.SYStables', '--', 'WHERE', 'SYS.SYSCONGLOMERATES.TABLEID', '=', 'sys.SYSCONSTRAINTS.TABLEID', '--', 'AND', 'sys.SYSTABLES.TABLEID', '=', 'SYS.SYSCONGLOMERATES.TABLEID', '--', 'ANd', 'SYS.SYSTABLES.TABLENAME', '=', ""'PORTFOLIO';"", 'drop', 'index', 'SYMBOL_ISIN_DATE_INDEX;', 'drop', 'index', 'SYMBOL_ISIN_INDEX;', 'drop', 'index', 'SYMBOL_DATE_INDEX;', 'drop', 'index', 'SYMBOL_INDEX;', 'drop', 'index', 'EVENTS_ANALYSENAME_DATE;', 'drop', 'index', 'EVENTS_SYMBOL_DATE_ISIN_INDEX;', 'drop', 'index', 'EVENTS_DATE_INDEX;', 'drop', 'index', 'EVENTS_ANALYSENAME_INDEX;', 'update', 'portfolio', 'set', ""ISIN='FR0000054314'"", 'where', 'symbol', '=', ""'LAC.PA';"", 'update', 'shares', 'set', 'symbol', '=', ""'10308438.PA'"", 'where', 'isin', ""='FR0010773507';"", 'update', 'portfolio', 'set', ""ISIN='FR0000121220'"", 'where', 'isin', '=', ""'FR0010618413';"", 'delete', 'from', 'shares', 'where', 'isin', '=', ""'FR0010618413';"", 'update', 'portfolio', 'set', ""SYMBOL='BRE'"", 'where', 'symbol', ""='BRES';"", 'delete', 'from', 'shares', 'where', 'isin', '=', ""'FR0010345389'"", 'and', 'symbol', '=', ""'BRES';"", 'update', 'shares', 'set', 'MARKETLISTPROVIDER', '=', ""'NYSE'"", 'where', 'isin', 'in', ""('LU0048575426','LU0074838565');"", 'update', 'shares', 'set', 'LASTQUOTE', '=', ""'1970-01-01'"", 'where', 'isin', 'in', ""('LU0048575426','LU0074838565');"", 'delete', 'from', 'quotations', 'where', 'isin', 'in', ""('LU0048575426','LU0074838565');"", '```']",challenge not surrounded by ''': ,
"from __future__ import absolute_import, unicode_literals

import os

import dj_database_url

from .base import *  # noqa

INSTALLED_APPS = INSTALLED_APPS + [ # noqa
    'wagtail.contrib.wagtailfrontendcache',
]

ALLOWED_HOSTS = ['*']
DEBUG = False

if os.environ.get('DEIS'):
    DATABASES = {
        'default': {
            'ENGINE': os.environ.get('DATABASE_ENGINE'),
            'NAME': os.environ.get('DATABASE_NAME'),
            'USER': os.environ.get('DATABASE_USER'),
            'PASSWORD': os.environ.get('DATABASE_PASSWORD'),
            'HOST': os.environ.get('DATABASE_HOST'),
            'PORT': os.environ.get('DATABASE_PORT'),
        }
    }
else:
    DATABASES['default'] = dj_database_url.config()


SECRET_KEY = os.environ['SECRET_KEY']

# ALLOWED_HOSTS = ['cosio.herokuapp.com']
PROJECT_ROOT = os.path.dirname(os.path.abspath(__file__))

# WAGTAILSEARCH_BACKENDS = {
#    'default': {
#        'BACKEND': 'wagtail.wagtailsearch.backends.elasticsearch.
#           ElasticSearch',
#        'URLS': ['http://localhost:9200'],
#        'INDEX': 'wagtail',
#        'TIMEOUT': 5,
#    }
# }

SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
SECURE_SSL_REDIRECT = True

AWS_ACCESS_KEY_ID = os.environ.get('AWS_ACCESS_KEY_ID')
AWS_SECRET_ACCESS_KEY = os.environ.get('AWS_SECRET_ACCESS_KEY')
AWS_STORAGE_BUCKET_NAME = os.environ.get('AWS_STORAGE_BUCKET_NAME')
AWS_S3_CUSTOM_DOMAIN = os.environ.get(
    'AWS_S3_CUSTOM_DOMAIN', '{}.s3.amazonaws.com'.
    format(AWS_STORAGE_BUCKET_NAME))
AWS_QUERYSTRING_AUTH = False

AWS_DISTRIBUTION_ID = os.environ.get('AWS_DISTRIBUTION_ID')
if AWS_DISTRIBUTION_ID:
    WAGTAILFRONTENDCACHE = {
        'cloudfront': {
            'BACKEND': 'wagtail.contrib.wagtailfrontendcache.backends.'
                       'CloudfrontBackend',
            'DISTRIBUTION_ID': AWS_DISTRIBUTION_ID,
        },
    }

STATICFILES_LOCATION = 'static'
STATIC_URL = 'https://{}/{}/'.format(AWS_S3_CUSTOM_DOMAIN,
                                     STATICFILES_LOCATION)
STATICFILES_STORAGE = 'website.storages.StaticStorage'

MEDIAFILES_LOCATION = 'media'
MEDIA_URL = 'https://{}/{}/'.format(AWS_S3_CUSTOM_DOMAIN, MEDIAFILES_LOCATION)
DEFAULT_FILE_STORAGE = 'website.storages.MediaStorage'

COMPRESS_ROOT = STATIC_ROOT # noqa
COMPRESS_URL = STATIC_URL
COMPRESS_STORAGE = STATICFILES_STORAGE
COMPRESS_ENABLED = True
COMPRESS_OFFLINE = True

try:
    from .local import *  # noqa
except ImportError:
    pass

# Base URL to use when referring to full URLs within the Wagtail admin backend
# e.g. in notification emails. Don't include '/admin' or a trailing slash
BASE_URL = 'https://cos.io'

# Used by common.middleware.URLRedirectMiddleware
URL_REDIRECTS = (
    (r'^(www\.)?centerforopenscience.org(.*)$', r'{}\1'.format(BASE_URL)),
    (r'^www\.cos\.io(.*)$', r'{}\1'.format(BASE_URL)),
)
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```from', '__future__', 'import', 'absolute_import,', 'unicode_literals', 'import', 'os', 'import', 'dj_database_url', 'from', '.base', 'import', '*', '#', 'noqa', 'INSTALLED_APPS', '=', 'INSTALLED_APPS', '+', '[', '#', 'noqa', ""'wagtail.contrib.wagtailfrontendcache',"", ']', 'ALLOWED_HOSTS', '=', ""['*']"", 'DEBUG', '=', 'False', 'if', ""os.environ.get('DEIS'):"", 'DATABASES', '=', '{', ""'default':"", '{', ""'ENGINE':"", ""os.environ.get('DATABASE_ENGINE'),"", ""'NAME':"", ""os.environ.get('DATABASE_NAME'),"", ""'USER':"", ""os.environ.get('DATABASE_USER'),"", ""'PASSWORD':"", ""os.environ.get('DATABASE_PASSWORD'),"", ""'HOST':"", ""os.environ.get('DATABASE_HOST'),"", ""'PORT':"", ""os.environ.get('DATABASE_PORT'),"", '}', '}', 'else:', ""DATABASES['default']"", '=', 'dj_database_url.config()', 'SECRET_KEY', '=', ""os.environ['SECRET_KEY']"", '#', 'ALLOWED_HOSTS', '=', ""['cosio.herokuapp.com']"", 'PROJECT_ROOT', '=', 'os.path.dirname(os.path.abspath(__file__))', '#', 'WAGTAILSEARCH_BACKENDS', '=', '{', '#', ""'default':"", '{', '#', ""'BACKEND':"", ""'wagtail.wagtailsearch.backends.elasticsearch."", '#', ""ElasticSearch',"", '#', ""'URLS':"", ""['http://localhost:9200'],"", '#', ""'INDEX':"", ""'wagtail',"", '#', ""'TIMEOUT':"", '5,', '#', '}', '#', '}', 'SECURE_PROXY_SSL_HEADER', '=', ""('HTTP_X_FORWARDED_PROTO',"", ""'https')"", 'SECURE_SSL_REDIRECT', '=', 'True', 'AWS_ACCESS_KEY_ID', '=', ""os.environ.get('AWS_ACCESS_KEY_ID')"", 'AWS_SECRET_ACCESS_KEY', '=', ""os.environ.get('AWS_SECRET_ACCESS_KEY')"", 'AWS_STORAGE_BUCKET_NAME', '=', ""os.environ.get('AWS_STORAGE_BUCKET_NAME')"", 'AWS_S3_CUSTOM_DOMAIN', '=', 'os.environ.get(', ""'AWS_S3_CUSTOM_DOMAIN',"", ""'{}.s3.amazonaws.com'."", 'format(AWS_STORAGE_BUCKET_NAME))', 'AWS_QUERYSTRING_AUTH', '=', 'False', 'AWS_DISTRIBUTION_ID', '=', ""os.environ.get('AWS_DISTRIBUTION_ID')"", 'if', 'AWS_DISTRIBUTION_ID:', 'WAGTAILFRONTENDCACHE', '=', '{', ""'cloudfront':"", '{', ""'BACKEND':"", ""'wagtail.contrib.wagtailfrontendcache.backends.'"", ""'CloudfrontBackend',"", ""'DISTRIBUTION_ID':"", 'AWS_DISTRIBUTION_ID,', '},', '}', 'STATICFILES_LOCATION', '=', ""'static'"", 'STATIC_URL', '=', ""'https://{}/{}/'.format(AWS_S3_CUSTOM_DOMAIN,"", 'STATICFILES_LOCATION)', 'STATICFILES_STORAGE', '=', ""'website.storages.StaticStorage'"", 'MEDIAFILES_LOCATION', '=', ""'media'"", 'MEDIA_URL', '=', ""'https://{}/{}/'.format(AWS_S3_CUSTOM_DOMAIN,"", 'MEDIAFILES_LOCATION)', 'DEFAULT_FILE_STORAGE', '=', ""'website.storages.MediaStorage'"", 'COMPRESS_ROOT', '=', 'STATIC_ROOT', '#', 'noqa', 'COMPRESS_URL', '=', 'STATIC_URL', 'COMPRESS_STORAGE', '=', 'STATICFILES_STORAGE', 'COMPRESS_ENABLED', '=', 'True', 'COMPRESS_OFFLINE', '=', 'True', 'try:', 'from', '.local', 'import', '*', '#', 'noqa', 'except', 'ImportError:', 'pass', '#', 'Base', 'URL', 'to', 'use', 'when', 'referring', 'to', 'full', 'URLs', 'within', 'the', 'Wagtail', 'admin', 'backend', '#', 'e.g.', 'in', 'notification', 'emails.', ""Don't"", 'include', ""'/admin'"", 'or', 'a', 'trailing', 'slash', 'BASE_URL', '=', ""'https://cos.io'"", '#', 'Used', 'by', 'common.middleware.URLRedirectMiddleware', 'URL_REDIRECTS', '=', '(', ""(r'^(www\\.)?centerforopenscience.org(.*)$',"", ""r'{}\\1'.format(BASE_URL)),"", ""(r'^www\\.cos\\.io(.*)$',"", ""r'{}\\1'.format(BASE_URL)),"", ')', '```']",challenge not surrounded by ''': ,
"import React from 'react';


/**
 * Component for rendering data container
 */
export default class DataManagerContainer extends React.Component {
  static defaultProps = {
    renderLoading: () => null,
  };

  constructor(props, context) {
    super(props, context);
    this.state = { result: {} };
    this.query = props.component.getQuery(props.variables);
    this.query.on('update', this._handleDataChanges.bind(this));
    this._executeQuery();
  }

  _executeQuery() {
    this._resolved = false;
    this.query.execute().then((result) => {
      this._resolved = true;
      this.setState({ result });
    });
  }

  _handleDataChanges(result) {
    if (this._resolved) {
      this.setState({ result });
    }
  }

  componentWillUnmount() {
    this.query.stop();
  }

  componentWillReceiveProps(nextProps) {
    this.query.updateVariables(nextProps);
  }

  renderLoading() {
    return this.props.renderLoading();
  }

  render() {
    const Component = this.props.component; // eslint-disable-line
    return this._resolved
      ? <Component {...this.props} {...this.state.result} />
      : this.renderLoading();
  }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'React', 'from', ""'react';"", '/**', '*', 'Component', 'for', 'rendering', 'data', 'container', '*/', 'export', 'default', 'class', 'DataManagerContainer', 'extends', 'React.Component', '{', 'static', 'defaultProps', '=', '{', 'renderLoading:', '()', '=>', 'null,', '};', 'constructor(props,', 'context)', '{', 'super(props,', 'context);', 'this.state', '=', '{', 'result:', '{}', '};', 'this.query', '=', 'props.component.getQuery(props.variables);', ""this.query.on('update',"", 'this._handleDataChanges.bind(this));', 'this._executeQuery();', '}', '_executeQuery()', '{', 'this._resolved', '=', 'false;', 'this.query.execute().then((result)', '=>', '{', 'this._resolved', '=', 'true;', 'this.setState({', 'result', '});', '});', '}', '_handleDataChanges(result)', '{', 'if', '(this._resolved)', '{', 'this.setState({', 'result', '});', '}', '}', 'componentWillUnmount()', '{', 'this.query.stop();', '}', 'componentWillReceiveProps(nextProps)', '{', 'this.query.updateVariables(nextProps);', '}', 'renderLoading()', '{', 'return', 'this.props.renderLoading();', '}', 'render()', '{', 'const', 'Component', '=', 'this.props.component;', '//', 'eslint-disable-line', 'return', 'this._resolved', '?', '<Component', '{...this.props}', '{...this.state.result}', '/>', ':', 'this.renderLoading();', '}', '}', '```']",challenge not surrounded by ''': ,
"#include <websocketpp/server.hpp>
#include <websocketpp/config/asio_no_tls.hpp>

int main()
{
	websocketpp::server<websocketpp::config::asio> s;
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#include', '<websocketpp/server.hpp>', '#include', '<websocketpp/config/asio_no_tls.hpp>', 'int', 'main()', '{', 'websocketpp::server<websocketpp::config::asio>', 's;', '}', '```']",challenge not surrounded by ''': ,
"/*
 * (c) Copyright 2015-2016 Hewlett Packard Enterprise Development LP
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.hpe.caf.worker.datastore.cs;

//  An interface implemented for keycloak access token refresh.
public interface TokenRefreshListener {
    void tokenRefreshed(String token);
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', '(c)', 'Copyright', '2015-2016', 'Hewlett', 'Packard', 'Enterprise', 'Development', 'LP', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'com.hpe.caf.worker.datastore.cs;', '//', 'An', 'interface', 'implemented', 'for', 'keycloak', 'access', 'token', 'refresh.', 'public', 'interface', 'TokenRefreshListener', '{', 'void', 'tokenRefreshed(String', 'token);', '}', '```']",challenge not surrounded by ''': ,
"/*
 *  Webapplication - Java library that runs on OpenML servers
 *  Copyright (C) 2014 
 *  @author Jan N. van Rijn (j.n.van.rijn@liacs.leidenuniv.nl)
 *  @author Quan Sun (quan.sun.nz@gmail.com)
 *  
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *  
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *  
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *  
 */
package org.openml.webapplication.fantail.dc.statistical;

import java.util.HashMap;
import java.util.Map;

import org.openml.webapplication.fantail.dc.Characterizer;

import weka.core.Instance;
import weka.core.Instances;

public class MissingValues extends Characterizer {

	protected final String[] ids = new String[] { ""NumMissingValues"",
			""PercentageOfMissingValues"" };

	@Override
	public String[] getIDs() {
		return ids;
	}

	@Override
	public Map<String, Double> characterize(Instances instances) {
		final int instance_count = instances.numInstances(), attrib_count = instances
				.numAttributes();
		int count = 0;

		for (int i = 0; i < instance_count; i++) {
			Instance instance = instances.instance(i);

			for (int j = 0; j < attrib_count; j++) {
				if (instance.isMissing(j)) {
					count++;
				}
			}
		}

		Map<String, Double> qualities = new HashMap<String, Double>();
		qualities.put(ids[0], (double) count);
		qualities.put(ids[1], 1.0 * count
				/ (instances.numAttributes() * instances.numInstances()));
		return qualities;
	}
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Webapplication', '-', 'Java', 'library', 'that', 'runs', 'on', 'OpenML', 'servers', '*', 'Copyright', '(C)', '2014', '*', '@author', 'Jan', 'N.', 'van', 'Rijn', '(j.n.van.rijn@liacs.leidenuniv.nl)', '*', '@author', 'Quan', 'Sun', '(quan.sun.nz@gmail.com)', '*', '*', 'This', 'program', 'is', 'free', 'software:', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', '*', 'it', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'as', 'published', 'by', '*', 'the', 'Free', 'Software', 'Foundation,', 'either', 'version', '3', 'of', 'the', 'License,', 'or', '*', '(at', 'your', 'option)', 'any', 'later', 'version.', '*', '*', 'This', 'program', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', '*', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', '*', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', '*', 'GNU', 'General', 'Public', 'License', 'for', 'more', 'details.', '*', '*', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'General', 'Public', 'License', '*', 'along', 'with', 'this', 'program.', 'If', 'not,', 'see', '<http://www.gnu.org/licenses/>.', '*', '*/', 'package', 'org.openml.webapplication.fantail.dc.statistical;', 'import', 'java.util.HashMap;', 'import', 'java.util.Map;', 'import', 'org.openml.webapplication.fantail.dc.Characterizer;', 'import', 'weka.core.Instance;', 'import', 'weka.core.Instances;', 'public', 'class', 'MissingValues', 'extends', 'Characterizer', '{', 'protected', 'final', 'String[]', 'ids', '=', 'new', 'String[]', '{', '""NumMissingValues"",', '""PercentageOfMissingValues""', '};', '@Override', 'public', 'String[]', 'getIDs()', '{', 'return', 'ids;', '}', '@Override', 'public', 'Map<String,', 'Double>', 'characterize(Instances', 'instances)', '{', 'final', 'int', 'instance_count', '=', 'instances.numInstances(),', 'attrib_count', '=', 'instances', '.numAttributes();', 'int', 'count', '=', '0;', 'for', '(int', 'i', '=', '0;', 'i', '<', 'instance_count;', 'i++)', '{', 'Instance', 'instance', '=', 'instances.instance(i);', 'for', '(int', 'j', '=', '0;', 'j', '<', 'attrib_count;', 'j++)', '{', 'if', '(instance.isMissing(j))', '{', 'count++;', '}', '}', '}', 'Map<String,', 'Double>', 'qualities', '=', 'new', 'HashMap<String,', 'Double>();', 'qualities.put(ids[0],', '(double)', 'count);', 'qualities.put(ids[1],', '1.0', '*', 'count', '/', '(instances.numAttributes()', '*', 'instances.numInstances()));', 'return', 'qualities;', '}', '}', '```']",challenge not surrounded by ''': ,
"/*
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.jdbi.v3.postgres;

import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.SQLException;

import org.postgresql.PGConnection;
import org.postgresql.largeobject.LargeObject;
import org.postgresql.largeobject.LargeObjectManager;

class PgLobApiImpl implements PgLobApi {
    private static final int BUF_SIZE = 1024 * 4;
    private final LargeObjectManager mgr;

    PgLobApiImpl(Connection conn) {
        try {
            this.mgr = conn.unwrap(PGConnection.class)
                    .getLargeObjectAPI();
        } catch (SQLException e) {
            throw new LargeObjectException(e);
        }
    }

    @Override
    public long createLob() {
        try {
            return mgr.createLO();
        } catch (SQLException e) {
            throw new LargeObjectException(e);
        }
    }

    @Override
    @SuppressWarnings(""PMD.AssignmentInOperand"")
    public void writeLob(long oid, InputStream data) {
        try (LargeObject lob = mgr.open(oid)) {
            byte[] buf = new byte[BUF_SIZE];
            int read;
            while ((read = data.read(buf, 0, buf.length)) > -1) {
                if (read > 0) {
                    lob.write(buf, 0, read);
                }
            }
        } catch (SQLException | IOException e) {
            throw new LargeObjectException(e);
        }
    }

    @Override
    public InputStream readLob(long oid) {
        try {
            return mgr.open(oid, LargeObjectManager.READ).getInputStream();
        } catch (SQLException e) {
            throw new LargeObjectException(e);
        }
    }

    @Override
    public void deleteLob(long oid) {
        try {
            mgr.delete(oid);
        } catch (SQLException e) {
            throw new LargeObjectException(e);
        }
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'org.jdbi.v3.postgres;', 'import', 'java.io.IOException;', 'import', 'java.io.InputStream;', 'import', 'java.sql.Connection;', 'import', 'java.sql.SQLException;', 'import', 'org.postgresql.PGConnection;', 'import', 'org.postgresql.largeobject.LargeObject;', 'import', 'org.postgresql.largeobject.LargeObjectManager;', 'class', 'PgLobApiImpl', 'implements', 'PgLobApi', '{', 'private', 'static', 'final', 'int', 'BUF_SIZE', '=', '1024', '*', '4;', 'private', 'final', 'LargeObjectManager', 'mgr;', 'PgLobApiImpl(Connection', 'conn)', '{', 'try', '{', 'this.mgr', '=', 'conn.unwrap(PGConnection.class)', '.getLargeObjectAPI();', '}', 'catch', '(SQLException', 'e)', '{', 'throw', 'new', 'LargeObjectException(e);', '}', '}', '@Override', 'public', 'long', 'createLob()', '{', 'try', '{', 'return', 'mgr.createLO();', '}', 'catch', '(SQLException', 'e)', '{', 'throw', 'new', 'LargeObjectException(e);', '}', '}', '@Override', '@SuppressWarnings(""PMD.AssignmentInOperand"")', 'public', 'void', 'writeLob(long', 'oid,', 'InputStream', 'data)', '{', 'try', '(LargeObject', 'lob', '=', 'mgr.open(oid))', '{', 'byte[]', 'buf', '=', 'new', 'byte[BUF_SIZE];', 'int', 'read;', 'while', '((read', '=', 'data.read(buf,', '0,', 'buf.length))', '>', '-1)', '{', 'if', '(read', '>', '0)', '{', 'lob.write(buf,', '0,', 'read);', '}', '}', '}', 'catch', '(SQLException', '|', 'IOException', 'e)', '{', 'throw', 'new', 'LargeObjectException(e);', '}', '}', '@Override', 'public', 'InputStream', 'readLob(long', 'oid)', '{', 'try', '{', 'return', 'mgr.open(oid,', 'LargeObjectManager.READ).getInputStream();', '}', 'catch', '(SQLException', 'e)', '{', 'throw', 'new', 'LargeObjectException(e);', '}', '}', '@Override', 'public', 'void', 'deleteLob(long', 'oid)', '{', 'try', '{', 'mgr.delete(oid);', '}', 'catch', '(SQLException', 'e)', '{', 'throw', 'new', 'LargeObjectException(e);', '}', '}', '}', '```']",challenge not surrounded by ''': ,
"# -*- coding: utf-8 -*-

""""""This code is a part of Hydra Toolkit

.. module:: hydratk.translation.lib.network.term.client.en.messages
   :platform: Unix
   :synopsis: English language translation for TERMINAL client messages
.. moduleauthor:: Petr Rašek <bowman@hydratk.org>

""""""

language = {
    'name': 'English',
    'ISO-639-1': 'en'
}

from hydratk.core import const

HIGHLIGHT_START = chr(27) + chr(91) + ""1m""
HIGHLIGHT_US = chr(27) + chr(91) + ""4m""
HIGHLIGHT_END = chr(27) + chr(91) + ""0m""

msg = {
    'htk_term_unknown_protocol': [""Unknown protocol: '{0}'""],
    'htk_term_connecting': [""Connecting to server: '{0}'""],
    'htk_term_connected': [""Connected successfully""],
    'htk_term_disconnected': [""Disconnected from server""],
    'htk_term_not_connected': [""Not connected to server""],
    'htk_term_executing_command': [""Executing command: '{0}'""],
    'htk_term_command_executed': [""Command executed""]
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', '-*-', 'coding:', 'utf-8', '-*-', '""""""This', 'code', 'is', 'a', 'part', 'of', 'Hydra', 'Toolkit', '..', 'module::', 'hydratk.translation.lib.network.term.client.en.messages', ':platform:', 'Unix', ':synopsis:', 'English', 'language', 'translation', 'for', 'TERMINAL', 'client', 'messages', '..', 'moduleauthor::', 'Petr', 'Rašek', '<bowman@hydratk.org>', '""""""', 'language', '=', '{', ""'name':"", ""'English',"", ""'ISO-639-1':"", ""'en'"", '}', 'from', 'hydratk.core', 'import', 'const', 'HIGHLIGHT_START', '=', 'chr(27)', '+', 'chr(91)', '+', '""1m""', 'HIGHLIGHT_US', '=', 'chr(27)', '+', 'chr(91)', '+', '""4m""', 'HIGHLIGHT_END', '=', 'chr(27)', '+', 'chr(91)', '+', '""0m""', 'msg', '=', '{', ""'htk_term_unknown_protocol':"", '[""Unknown', 'protocol:', '\'{0}\'""],', ""'htk_term_connecting':"", '[""Connecting', 'to', 'server:', '\'{0}\'""],', ""'htk_term_connected':"", '[""Connected', 'successfully""],', ""'htk_term_disconnected':"", '[""Disconnected', 'from', 'server""],', ""'htk_term_not_connected':"", '[""Not', 'connected', 'to', 'server""],', ""'htk_term_executing_command':"", '[""Executing', 'command:', '\'{0}\'""],', ""'htk_term_command_executed':"", '[""Command', 'executed""]', '}', '```']",challenge not surrounded by ''': ,
"/**
 * Created by Rockie Yang on 07/05/16.
 */

var http = require('http');
var bl = require('bl');
var url = process.argv[2];

http.get(url, function(response){
    response.setEncoding('utf-8');

    //response.on('data', function(data) {
    //    console.log(data);
    //})

    // since console.log is a function which accept one parameter
    // so the is identical to
    // function(data) {console.log(data);}
    response.on('data', console.log);
    response.on('error', console.error);
}).on('error', console.error)
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', 'Created', 'by', 'Rockie', 'Yang', 'on', '07/05/16.', '*/', 'var', 'http', '=', ""require('http');"", 'var', 'bl', '=', ""require('bl');"", 'var', 'url', '=', 'process.argv[2];', 'http.get(url,', 'function(response){', ""response.setEncoding('utf-8');"", ""//response.on('data',"", 'function(data)', '{', '//', 'console.log(data);', '//})', '//', 'since', 'console.log', 'is', 'a', 'function', 'which', 'accept', 'one', 'parameter', '//', 'so', 'the', 'is', 'identical', 'to', '//', 'function(data)', '{console.log(data);}', ""response.on('data',"", 'console.log);', ""response.on('error',"", 'console.error);', ""}).on('error',"", 'console.error)', '```']",challenge not surrounded by ''': ,
"var charts = [];
// Gender timeline chart
$(function () {
    chart = Highcharts.chart('escolaridade-timeline-chart', {
      title: {
          text: '',
          x: -20 //center
      },
      subtitle: {
          text: '',
          x: -20
      },
      xAxis: {
          categories: ['Jun/2014', 'Dez/2014']
      },
      yAxis: {
          title: {
              text: 'População total'
          },
          plotLines: [{
              value: 0,
              width: 1,
              color: '#808080'
          }]
      },
      tooltip: {
          valueSuffix: ''
      },
      legend: {
          layout: 'horizontal',
          align: 'center',
          verticalAlign: 'bottom',
          borderWidth: 0
      },
      series: [{
          name: 'Analfabeta',
          data: [49,49]
      },{
          name: 'Alfabetizada (s/ cursos regulares)',
          data: [0,0]
      },{
          name: 'Ensino Fundamental Incompleto',
          data: [119,107]
      },{
          name: 'Ensino Fundamental Completo',
          data: [20,20]
      },{
          name: 'Ensino Médio Incompleto',
          data: [15,15]
      },{
          name: 'Ensino Médio Completo',
          data: [17,17]
      },{
          name: 'Ensino Superior Incompleto',
          data: [3,0]
      },{
          name: 'Ensino Superior Completo',
          data: [1,0]
      },{
          name: 'Ensino acima do Superior Completo',
          data: [0,0]
      },{
          name: 'Não informado ',
          data: [0,0]
      }]
    });
    charts.push(chart);
});
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```var', 'charts', '=', '[];', '//', 'Gender', 'timeline', 'chart', '$(function', '()', '{', 'chart', '=', ""Highcharts.chart('escolaridade-timeline-chart',"", '{', 'title:', '{', 'text:', ""'',"", 'x:', '-20', '//center', '},', 'subtitle:', '{', 'text:', ""'',"", 'x:', '-20', '},', 'xAxis:', '{', 'categories:', ""['Jun/2014',"", ""'Dez/2014']"", '},', 'yAxis:', '{', 'title:', '{', 'text:', ""'População"", ""total'"", '},', 'plotLines:', '[{', 'value:', '0,', 'width:', '1,', 'color:', ""'#808080'"", '}]', '},', 'tooltip:', '{', 'valueSuffix:', ""''"", '},', 'legend:', '{', 'layout:', ""'horizontal',"", 'align:', ""'center',"", 'verticalAlign:', ""'bottom',"", 'borderWidth:', '0', '},', 'series:', '[{', 'name:', ""'Analfabeta',"", 'data:', '[49,49]', '},{', 'name:', ""'Alfabetizada"", '(s/', 'cursos', ""regulares)',"", 'data:', '[0,0]', '},{', 'name:', ""'Ensino"", 'Fundamental', ""Incompleto',"", 'data:', '[119,107]', '},{', 'name:', ""'Ensino"", 'Fundamental', ""Completo',"", 'data:', '[20,20]', '},{', 'name:', ""'Ensino"", 'Médio', ""Incompleto',"", 'data:', '[15,15]', '},{', 'name:', ""'Ensino"", 'Médio', ""Completo',"", 'data:', '[17,17]', '},{', 'name:', ""'Ensino"", 'Superior', ""Incompleto',"", 'data:', '[3,0]', '},{', 'name:', ""'Ensino"", 'Superior', ""Completo',"", 'data:', '[1,0]', '},{', 'name:', ""'Ensino"", 'acima', 'do', 'Superior', ""Completo',"", 'data:', '[0,0]', '},{', 'name:', ""'Não"", 'informado', ""',"", 'data:', '[0,0]', '}]', '});', 'charts.push(chart);', '});', '```']",challenge not surrounded by ''': ,
"<?xml version=""1.0"" encoding=""iso-8859-1""?>
<!DOCTYPE html 
     PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN""
     ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">

<html>
<head>
  <title>test_length (ActionColumnsTest)</title>
  <meta http-equiv=""Content-Type"" content=""text/html; charset=iso-8859-1"" />
  <link rel=""stylesheet"" href=""../.././rdoc-style.css"" type=""text/css"" media=""screen"" />
</head>
<body class=""standalone-code"">
  <pre><span class=""ruby-comment cmt""># File vendor/plugins/active_scaffold/test/data_structures/action_columns_test.rb, line 73</span>
  <span class=""ruby-keyword kw"">def</span> <span class=""ruby-identifier"">test_length</span>
    <span class=""ruby-identifier"">assert_equal</span> <span class=""ruby-value"">2</span>, <span class=""ruby-ivar"">@columns</span>.<span class=""ruby-identifier"">length</span>
  <span class=""ruby-keyword kw"">end</span></pre>
</body>
</html>","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<?xml', 'version=""1.0""', 'encoding=""iso-8859-1""?>', '<!DOCTYPE', 'html', 'PUBLIC', '""-//W3C//DTD', 'XHTML', '1.0', 'Transitional//EN""', '""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">', '<html>', '<head>', '<title>test_length', '(ActionColumnsTest)</title>', '<meta', 'http-equiv=""Content-Type""', 'content=""text/html;', 'charset=iso-8859-1""', '/>', '<link', 'rel=""stylesheet""', 'href=""../.././rdoc-style.css""', 'type=""text/css""', 'media=""screen""', '/>', '</head>', '<body', 'class=""standalone-code"">', '<pre><span', 'class=""ruby-comment', 'cmt"">#', 'File', 'vendor/plugins/active_scaffold/test/data_structures/action_columns_test.rb,', 'line', '73</span>', '<span', 'class=""ruby-keyword', 'kw"">def</span>', '<span', 'class=""ruby-identifier"">test_length</span>', '<span', 'class=""ruby-identifier"">assert_equal</span>', '<span', 'class=""ruby-value"">2</span>,', '<span', 'class=""ruby-ivar"">@columns</span>.<span', 'class=""ruby-identifier"">length</span>', '<span', 'class=""ruby-keyword', 'kw"">end</span></pre>', '</body>', '</html>```']",challenge not surrounded by ''': ,
"/*
 * Copyright 2013 NGDATA nv
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.ngdata.hbaseindexer.indexer;

import java.util.List;

import org.apache.hadoop.hbase.client.Result;
import com.ngdata.sep.impl.HBaseShims;

/**
 * {@code RowData} implementation that directly wraps a Result object that has been
 * read from HBase.
 */
public class ResultWrappingRowData implements RowData {
    private final Result result;
    private byte[] tableName;

    public ResultWrappingRowData(Result result, byte[] tableName) {
        this.result = result;
        this.tableName = tableName;
    }

    @Override
    public byte[] getRow() {
        return result.getRow();
    }

    @Override
    public List<Object> getKeyValues() {
        return HBaseShims.getKeyValues(result);
    }

    @Override
    public Result toResult() {
        return result;
    }

    @Override
    public byte[] getTable() {
        return tableName;
    }

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '2013', 'NGDATA', 'nv', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'com.ngdata.hbaseindexer.indexer;', 'import', 'java.util.List;', 'import', 'org.apache.hadoop.hbase.client.Result;', 'import', 'com.ngdata.sep.impl.HBaseShims;', '/**', '*', '{@code', 'RowData}', 'implementation', 'that', 'directly', 'wraps', 'a', 'Result', 'object', 'that', 'has', 'been', '*', 'read', 'from', 'HBase.', '*/', 'public', 'class', 'ResultWrappingRowData', 'implements', 'RowData', '{', 'private', 'final', 'Result', 'result;', 'private', 'byte[]', 'tableName;', 'public', 'ResultWrappingRowData(Result', 'result,', 'byte[]', 'tableName)', '{', 'this.result', '=', 'result;', 'this.tableName', '=', 'tableName;', '}', '@Override', 'public', 'byte[]', 'getRow()', '{', 'return', 'result.getRow();', '}', '@Override', 'public', 'List<Object>', 'getKeyValues()', '{', 'return', 'HBaseShims.getKeyValues(result);', '}', '@Override', 'public', 'Result', 'toResult()', '{', 'return', 'result;', '}', '@Override', 'public', 'byte[]', 'getTable()', '{', 'return', 'tableName;', '}', '}', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright 2017 Red Hat, Inc. and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.kie.workbench.common.services.backend.builder.ala;

import org.guvnor.ala.config.BinaryConfig;

/**
 * Interface that represents the build execution configuration for the local build system.
 */
public interface LocalBuildExecConfig extends BinaryConfig {

}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '2017', 'Red', 'Hat,', 'Inc.', 'and/or', 'its', 'affiliates.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'org.kie.workbench.common.services.backend.builder.ala;', 'import', 'org.guvnor.ala.config.BinaryConfig;', '/**', '*', 'Interface', 'that', 'represents', 'the', 'build', 'execution', 'configuration', 'for', 'the', 'local', 'build', 'system.', '*/', 'public', 'interface', 'LocalBuildExecConfig', 'extends', 'BinaryConfig', '{', '}```']",challenge not surrounded by ''': ,
"<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"" ""http://www.w3.org/TR/html4/loose.dtd"">
<!-- NewPage -->
<html lang=""en"">
<head>
<!-- Generated by javadoc (9-Debian) on Thu Sep 28 23:12:19 GMT 2017 -->
<title>dollar.internal.runtime.script.api (Dollar 0.4.5195 API)</title>
<meta http-equiv=""Content-Type"" content=""text/html; charset=UTF-8"">
<meta name=""date"" content=""2017-09-28"">
<link rel=""stylesheet"" type=""text/css"" href=""../../../../../stylesheet.css"" title=""Style"">
<link rel=""stylesheet"" type=""text/css"" href=""../../../../../jquery/jquery-ui.css"" title=""Style"">
<script type=""text/javascript"" src=""../../../../../script.js""></script>
<script type=""text/javascript"" src=""../../../../../jquery/jszip/dist/jszip.min.js""></script>
<script type=""text/javascript"" src=""../../../../../jquery/jszip-utils/dist/jszip-utils.min.js""></script>
<!--[if IE]>
<script type=""text/javascript"" src=""../../../../../jquery/jszip-utils/dist/jszip-utils-ie.min.js""></script>
<![endif]-->
<script type=""text/javascript"" src=""../../../../../jquery/jquery-1.10.2.js""></script>
<script type=""text/javascript"" src=""../../../../../jquery/jquery-ui.js""></script>
</head>
<body>
<h1 class=""bar""><a href=""../../../../../dollar/internal/runtime/script/api/package-summary.html"" target=""classFrame"">dollar.internal.runtime.script.api</a></h1>
<div class=""indexContainer"">
<h2 title=""Interfaces"">Interfaces</h2>
<ul title=""Interfaces"">
<li><a href=""Builtin.html"" title=""interface in dollar.internal.runtime.script.api"" target=""classFrame""><span class=""interfaceName"">Builtin</span></a></li>
<li><a href=""Builtin.DollarStyle.html"" title=""interface in dollar.internal.runtime.script.api"" target=""classFrame""><span class=""interfaceName"">Builtin.DollarStyle</span></a></li>
<li><a href=""Builtin.JavaStyle.html"" title=""interface in dollar.internal.runtime.script.api"" target=""classFrame""><span class=""interfaceName"">Builtin.JavaStyle</span></a></li>
<li><a href=""DollarUtil.html"" title=""interface in dollar.internal.runtime.script.api"" target=""classFrame""><span class=""interfaceName"">DollarUtil</span></a></li>
<li><a href=""HasKeyword.html"" title=""interface in dollar.internal.runtime.script.api"" target=""classFrame""><span class=""interfaceName"">HasKeyword</span></a></li>
<li><a href=""HasSymbol.html"" title=""interface in dollar.internal.runtime.script.api"" target=""classFrame""><span class=""interfaceName"">HasSymbol</span></a></li>
<li><a href=""Operator.html"" title=""interface in dollar.internal.runtime.script.api"" target=""classFrame""><span class=""interfaceName"">Operator</span></a></li>
<li><a href=""OperatorPriority.html"" title=""interface in dollar.internal.runtime.script.api"" target=""classFrame""><span class=""interfaceName"">OperatorPriority</span></a></li>
<li><a href=""ParserErrorHandler.html"" title=""interface in dollar.internal.runtime.script.api"" target=""classFrame""><span class=""interfaceName"">ParserErrorHandler</span></a></li>
<li><a href=""ScopeExecutable.html"" title=""interface in dollar.internal.runtime.script.api"" target=""classFrame""><span class=""interfaceName"">ScopeExecutable</span></a></li>
</ul>
<h2 title=""Classes"">Classes</h2>
<ul title=""Classes"">
<li><a href=""Builtin.BuiltinImpl.html"" title=""class in dollar.internal.runtime.script.api"" target=""classFrame"">Builtin.BuiltinImpl</a></li>
</ul>
</div>
</body>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'HTML', 'PUBLIC', '""-//W3C//DTD', 'HTML', '4.01', 'Transitional//EN""', '""http://www.w3.org/TR/html4/loose.dtd"">', '<!--', 'NewPage', '-->', '<html', 'lang=""en"">', '<head>', '<!--', 'Generated', 'by', 'javadoc', '(9-Debian)', 'on', 'Thu', 'Sep', '28', '23:12:19', 'GMT', '2017', '-->', '<title>dollar.internal.runtime.script.api', '(Dollar', '0.4.5195', 'API)</title>', '<meta', 'http-equiv=""Content-Type""', 'content=""text/html;', 'charset=UTF-8"">', '<meta', 'name=""date""', 'content=""2017-09-28"">', '<link', 'rel=""stylesheet""', 'type=""text/css""', 'href=""../../../../../stylesheet.css""', 'title=""Style"">', '<link', 'rel=""stylesheet""', 'type=""text/css""', 'href=""../../../../../jquery/jquery-ui.css""', 'title=""Style"">', '<script', 'type=""text/javascript""', 'src=""../../../../../script.js""></script>', '<script', 'type=""text/javascript""', 'src=""../../../../../jquery/jszip/dist/jszip.min.js""></script>', '<script', 'type=""text/javascript""', 'src=""../../../../../jquery/jszip-utils/dist/jszip-utils.min.js""></script>', '<!--[if', 'IE]>', '<script', 'type=""text/javascript""', 'src=""../../../../../jquery/jszip-utils/dist/jszip-utils-ie.min.js""></script>', '<![endif]-->', '<script', 'type=""text/javascript""', 'src=""../../../../../jquery/jquery-1.10.2.js""></script>', '<script', 'type=""text/javascript""', 'src=""../../../../../jquery/jquery-ui.js""></script>', '</head>', '<body>', '<h1', 'class=""bar""><a', 'href=""../../../../../dollar/internal/runtime/script/api/package-summary.html""', 'target=""classFrame"">dollar.internal.runtime.script.api</a></h1>', '<div', 'class=""indexContainer"">', '<h2', 'title=""Interfaces"">Interfaces</h2>', '<ul', 'title=""Interfaces"">', '<li><a', 'href=""Builtin.html""', 'title=""interface', 'in', 'dollar.internal.runtime.script.api""', 'target=""classFrame""><span', 'class=""interfaceName"">Builtin</span></a></li>', '<li><a', 'href=""Builtin.DollarStyle.html""', 'title=""interface', 'in', 'dollar.internal.runtime.script.api""', 'target=""classFrame""><span', 'class=""interfaceName"">Builtin.DollarStyle</span></a></li>', '<li><a', 'href=""Builtin.JavaStyle.html""', 'title=""interface', 'in', 'dollar.internal.runtime.script.api""', 'target=""classFrame""><span', 'class=""interfaceName"">Builtin.JavaStyle</span></a></li>', '<li><a', 'href=""DollarUtil.html""', 'title=""interface', 'in', 'dollar.internal.runtime.script.api""', 'target=""classFrame""><span', 'class=""interfaceName"">DollarUtil</span></a></li>', '<li><a', 'href=""HasKeyword.html""', 'title=""interface', 'in', 'dollar.internal.runtime.script.api""', 'target=""classFrame""><span', 'class=""interfaceName"">HasKeyword</span></a></li>', '<li><a', 'href=""HasSymbol.html""', 'title=""interface', 'in', 'dollar.internal.runtime.script.api""', 'target=""classFrame""><span', 'class=""interfaceName"">HasSymbol</span></a></li>', '<li><a', 'href=""Operator.html""', 'title=""interface', 'in', 'dollar.internal.runtime.script.api""', 'target=""classFrame""><span', 'class=""interfaceName"">Operator</span></a></li>', '<li><a', 'href=""OperatorPriority.html""', 'title=""interface', 'in', 'dollar.internal.runtime.script.api""', 'target=""classFrame""><span', 'class=""interfaceName"">OperatorPriority</span></a></li>', '<li><a', 'href=""ParserErrorHandler.html""', 'title=""interface', 'in', 'dollar.internal.runtime.script.api""', 'target=""classFrame""><span', 'class=""interfaceName"">ParserErrorHandler</span></a></li>', '<li><a', 'href=""ScopeExecutable.html""', 'title=""interface', 'in', 'dollar.internal.runtime.script.api""', 'target=""classFrame""><span', 'class=""interfaceName"">ScopeExecutable</span></a></li>', '</ul>', '<h2', 'title=""Classes"">Classes</h2>', '<ul', 'title=""Classes"">', '<li><a', 'href=""Builtin.BuiltinImpl.html""', 'title=""class', 'in', 'dollar.internal.runtime.script.api""', 'target=""classFrame"">Builtin.BuiltinImpl</a></li>', '</ul>', '</div>', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"package eu.uqasar.web.components.navigation.notification.complexity;

/*
 * #%L
 * U-QASAR
 * %%
 * Copyright (C) 2012 - 2015 U-QASAR Consortium
 * %%
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * #L%
 */


import org.apache.wicket.AttributeModifier;
import org.apache.wicket.ajax.AjaxEventBehavior;
import org.apache.wicket.ajax.AjaxRequestTarget;
import org.apache.wicket.markup.html.WebMarkupContainer;
import org.apache.wicket.markup.html.basic.Label;
import org.apache.wicket.model.IModel;
import org.apache.wicket.model.StringResourceModel;
import org.apache.wicket.request.mapper.parameter.PageParameters;

import de.agilecoders.wicket.core.markup.html.bootstrap.components.TooltipBehavior;
import de.agilecoders.wicket.core.markup.html.bootstrap.components.TooltipConfig;
import de.agilecoders.wicket.core.markup.html.bootstrap.image.IconType;
import eu.uqasar.model.notification.complexity.ComplexityNotification;
import eu.uqasar.util.UQasarUtil;
import eu.uqasar.web.components.navigation.notification.NotificationBookmarkablePageLink;
import eu.uqasar.web.pages.AboutPage;
import eu.uqasar.web.pages.BasePage;
import eu.uqasar.web.pages.tree.BaseTreePage;
import eu.uqasar.web.pages.tree.projects.ProjectViewPage;

public class ComplexityNotificationLink extends NotificationBookmarkablePageLink<ComplexityNotification, ProjectViewPage> {

	private static final long serialVersionUID = 3310107463188121652L;
	
	public ComplexityNotificationLink(String id,IModel<ComplexityNotification> model) {
		this(id, new PageParameters(), model);
	}

	public ComplexityNotificationLink(String id, PageParameters parameters, final IModel<ComplexityNotification> model) {

		super(id, ProjectViewPage.class, BaseTreePage.forProject(model.getObject().getProject()), model);
		
		add(new Label(""metric.name"",model.getObject().getName()));
		
		//set containers 
		setIcon(new IconType(""exclamation-sign""));
		get(""notification.container"").add(new AttributeModifier(""style"",""width:95%;""));
		get(""notification.container"").add(new AttributeModifier(""class"",""notification project red""));	
		
		add(new AjaxEventBehavior(""onclick"") {
			private static final long serialVersionUID = -4295786924073241665L;
			@Override
			protected void onEvent(AjaxRequestTarget target) {				
				setResponsePage(ProjectViewPage.class, getPageParameters().add(""id"", getModelObject().getProject().getId()));
			}
		});
		
		final WebMarkupContainer deleteContainer = new WebMarkupContainer(""delete"");
		final String deleteMessage = new StringResourceModel(""delete.message"", this, null).getString();
		deleteContainer.add(new AjaxEventBehavior(""onclick"") {
			private static final long serialVersionUID = 8973155682310698578L;

			@Override
			protected void onEvent(AjaxRequestTarget target) {				
				UQasarUtil.getNotifications().remove(model.getObject());
				setResponsePage(AboutPage.class, BasePage.appendSuccessMessage(getPageParameters(), deleteMessage));
			}
		});
		deleteContainer.setOutputMarkupId(true);
		add(deleteContainer);
		
		// tooltip
		TooltipConfig confConfig = new TooltipConfig().withPlacement(TooltipConfig.Placement.right);
		deleteContainer.add(new TooltipBehavior(new StringResourceModel(""delete.title"", this, null), confConfig));
	}	
	
	@Override
	protected void onConfigure() {
		super.onConfigure();
		logger.info(""########################"" + getModelObject().getNotificationType() + ""########################"");
	}
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'eu.uqasar.web.components.navigation.notification.complexity;', '/*', '*', '#%L', '*', 'U-QASAR', '*', '%%', '*', 'Copyright', '(C)', '2012', '-', '2015', 'U-QASAR', 'Consortium', '*', '%%', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*', '#L%', '*/', 'import', 'org.apache.wicket.AttributeModifier;', 'import', 'org.apache.wicket.ajax.AjaxEventBehavior;', 'import', 'org.apache.wicket.ajax.AjaxRequestTarget;', 'import', 'org.apache.wicket.markup.html.WebMarkupContainer;', 'import', 'org.apache.wicket.markup.html.basic.Label;', 'import', 'org.apache.wicket.model.IModel;', 'import', 'org.apache.wicket.model.StringResourceModel;', 'import', 'org.apache.wicket.request.mapper.parameter.PageParameters;', 'import', 'de.agilecoders.wicket.core.markup.html.bootstrap.components.TooltipBehavior;', 'import', 'de.agilecoders.wicket.core.markup.html.bootstrap.components.TooltipConfig;', 'import', 'de.agilecoders.wicket.core.markup.html.bootstrap.image.IconType;', 'import', 'eu.uqasar.model.notification.complexity.ComplexityNotification;', 'import', 'eu.uqasar.util.UQasarUtil;', 'import', 'eu.uqasar.web.components.navigation.notification.NotificationBookmarkablePageLink;', 'import', 'eu.uqasar.web.pages.AboutPage;', 'import', 'eu.uqasar.web.pages.BasePage;', 'import', 'eu.uqasar.web.pages.tree.BaseTreePage;', 'import', 'eu.uqasar.web.pages.tree.projects.ProjectViewPage;', 'public', 'class', 'ComplexityNotificationLink', 'extends', 'NotificationBookmarkablePageLink<ComplexityNotification,', 'ProjectViewPage>', '{', 'private', 'static', 'final', 'long', 'serialVersionUID', '=', '3310107463188121652L;', 'public', 'ComplexityNotificationLink(String', 'id,IModel<ComplexityNotification>', 'model)', '{', 'this(id,', 'new', 'PageParameters(),', 'model);', '}', 'public', 'ComplexityNotificationLink(String', 'id,', 'PageParameters', 'parameters,', 'final', 'IModel<ComplexityNotification>', 'model)', '{', 'super(id,', 'ProjectViewPage.class,', 'BaseTreePage.forProject(model.getObject().getProject()),', 'model);', 'add(new', 'Label(""metric.name"",model.getObject().getName()));', '//set', 'containers', 'setIcon(new', 'IconType(""exclamation-sign""));', 'get(""notification.container"").add(new', 'AttributeModifier(""style"",""width:95%;""));', 'get(""notification.container"").add(new', 'AttributeModifier(""class"",""notification', 'project', 'red""));', 'add(new', 'AjaxEventBehavior(""onclick"")', '{', 'private', 'static', 'final', 'long', 'serialVersionUID', '=', '-4295786924073241665L;', '@Override', 'protected', 'void', 'onEvent(AjaxRequestTarget', 'target)', '{', 'setResponsePage(ProjectViewPage.class,', 'getPageParameters().add(""id"",', 'getModelObject().getProject().getId()));', '}', '});', 'final', 'WebMarkupContainer', 'deleteContainer', '=', 'new', 'WebMarkupContainer(""delete"");', 'final', 'String', 'deleteMessage', '=', 'new', 'StringResourceModel(""delete.message"",', 'this,', 'null).getString();', 'deleteContainer.add(new', 'AjaxEventBehavior(""onclick"")', '{', 'private', 'static', 'final', 'long', 'serialVersionUID', '=', '8973155682310698578L;', '@Override', 'protected', 'void', 'onEvent(AjaxRequestTarget', 'target)', '{', 'UQasarUtil.getNotifications().remove(model.getObject());', 'setResponsePage(AboutPage.class,', 'BasePage.appendSuccessMessage(getPageParameters(),', 'deleteMessage));', '}', '});', 'deleteContainer.setOutputMarkupId(true);', 'add(deleteContainer);', '//', 'tooltip', 'TooltipConfig', 'confConfig', '=', 'new', 'TooltipConfig().withPlacement(TooltipConfig.Placement.right);', 'deleteContainer.add(new', 'TooltipBehavior(new', 'StringResourceModel(""delete.title"",', 'this,', 'null),', 'confConfig));', '}', '@Override', 'protected', 'void', 'onConfigure()', '{', 'super.onConfigure();', 'logger.info(""########################""', '+', 'getModelObject().getNotificationType()', '+', '""########################"");', '}', '}', '```']",challenge not surrounded by ''': ,
"package com.ptoceti.osgi.timeseries.impl;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.Dictionary;
import java.util.Hashtable;

import org.osgi.framework.Constants;
import org.osgi.framework.ServiceRegistration;
import org.osgi.service.cm.ConfigurationException;
import org.osgi.service.cm.ManagedService;
import org.osgi.service.log.LogService;

import com.ptoceti.influxdb.factory.InfluxDbFactoryBuilder;
import com.ptoceti.influxdb.factory.InfluxDbResourceFactory;
import com.ptoceti.osgi.timeseries.TimeSeriesService;

public class InfluxDbFactoryService implements ManagedService {
    
    public static final String INFLUXDBURL = ""com.ptoceti.osgi.influxdb.url"";
    public static final String INFLUXDBNAME = ""com.ptoceti.osgi.influxdb.dbname"";
    public static final String TIMESERIESIMMEDIATEPOLICYDURATION = ""com.ptoceti.osgi.timeseries.policy.immediate.duration"";
    public static final String TIMESERIESSHORTPOLICYDURATION = ""com.ptoceti.osgi.timeseries.policy.short.duration"";
    public static final String TIMESERIESMEDIUMPOLICYDURATION = ""com.ptoceti.osgi.timeseries.policy.medium.duration"";
    public static final String TIMESERIESLONGPOLICYDURATION = ""com.ptoceti.osgi.timeseries.policy.long.duration"";
    public static final String TIMESERIESIMMEDIATEAGGREGATEDURATION = ""com.ptoceti.osgi.timeseries.aggregate.immediate.duration"";
    public static final String TIMESERIESSHORTAGGREGATEDURATION = ""com.ptoceti.osgi.timeseries.aggregate.short.duration"";
    public static final String TIMESERIESMEDIUMAGGREGATEDURATION = ""com.ptoceti.osgi.timeseries.aggregate.medium.duration"";
    
    
    protected TimeSeriesServiceImpl timeSeriesService = null;
    // a reference to the service registration for the Controller object.
    protected ServiceRegistration sReg = null;

    protected synchronized void start() {

	String[] clazzes = new String[] { ManagedService.class.getName(), InfluxDbFactoryService.class.getName() };
	// register the class as a managed service.
	Hashtable<String, String> properties = new Hashtable<String, String>();
	properties.put(Constants.SERVICE_PID, InfluxDbFactoryService.class.getName());
	sReg = Activator.bc.registerService(clazzes, this, properties);

	Activator.log(LogService.LOG_INFO,""Registered "" + this.getClass().getName() + "", Pid = ""
				+ (String) properties.get(Constants.SERVICE_PID));

    }

    /**
     * Uregistered the class from the service registration system.
     * 
     * 
     */
    protected void stop() {
	// Unregister the factory first ..
	sReg.unregister();

	Activator.log(LogService.LOG_INFO, ""Unregistered "" + this.getClass().getName());
    }

  
    public void updated(Dictionary properties) throws ConfigurationException {
	// TODO Auto-generated method stub
	if (properties != null) {
	    
	    String url = (String) properties.get(INFLUXDBURL);
	    String dbname = (String) properties.get(INFLUXDBNAME);
	    
	    
	    try {
		InfluxDbResourceFactory influxDbFactory = InfluxDbFactoryBuilder.build(new URL(url)).dbName(dbname).getFactory();
		timeSeriesService = new TimeSeriesServiceImpl(influxDbFactory, properties);
		
	    } catch (MalformedURLException e) {
		Activator.log(LogService.LOG_ERROR, ""Couldn't create factory. Url malformed: "" + url );
	    }
	}
    }

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.ptoceti.osgi.timeseries.impl;', 'import', 'java.net.MalformedURLException;', 'import', 'java.net.URL;', 'import', 'java.util.Dictionary;', 'import', 'java.util.Hashtable;', 'import', 'org.osgi.framework.Constants;', 'import', 'org.osgi.framework.ServiceRegistration;', 'import', 'org.osgi.service.cm.ConfigurationException;', 'import', 'org.osgi.service.cm.ManagedService;', 'import', 'org.osgi.service.log.LogService;', 'import', 'com.ptoceti.influxdb.factory.InfluxDbFactoryBuilder;', 'import', 'com.ptoceti.influxdb.factory.InfluxDbResourceFactory;', 'import', 'com.ptoceti.osgi.timeseries.TimeSeriesService;', 'public', 'class', 'InfluxDbFactoryService', 'implements', 'ManagedService', '{', 'public', 'static', 'final', 'String', 'INFLUXDBURL', '=', '""com.ptoceti.osgi.influxdb.url"";', 'public', 'static', 'final', 'String', 'INFLUXDBNAME', '=', '""com.ptoceti.osgi.influxdb.dbname"";', 'public', 'static', 'final', 'String', 'TIMESERIESIMMEDIATEPOLICYDURATION', '=', '""com.ptoceti.osgi.timeseries.policy.immediate.duration"";', 'public', 'static', 'final', 'String', 'TIMESERIESSHORTPOLICYDURATION', '=', '""com.ptoceti.osgi.timeseries.policy.short.duration"";', 'public', 'static', 'final', 'String', 'TIMESERIESMEDIUMPOLICYDURATION', '=', '""com.ptoceti.osgi.timeseries.policy.medium.duration"";', 'public', 'static', 'final', 'String', 'TIMESERIESLONGPOLICYDURATION', '=', '""com.ptoceti.osgi.timeseries.policy.long.duration"";', 'public', 'static', 'final', 'String', 'TIMESERIESIMMEDIATEAGGREGATEDURATION', '=', '""com.ptoceti.osgi.timeseries.aggregate.immediate.duration"";', 'public', 'static', 'final', 'String', 'TIMESERIESSHORTAGGREGATEDURATION', '=', '""com.ptoceti.osgi.timeseries.aggregate.short.duration"";', 'public', 'static', 'final', 'String', 'TIMESERIESMEDIUMAGGREGATEDURATION', '=', '""com.ptoceti.osgi.timeseries.aggregate.medium.duration"";', 'protected', 'TimeSeriesServiceImpl', 'timeSeriesService', '=', 'null;', '//', 'a', 'reference', 'to', 'the', 'service', 'registration', 'for', 'the', 'Controller', 'object.', 'protected', 'ServiceRegistration', 'sReg', '=', 'null;', 'protected', 'synchronized', 'void', 'start()', '{', 'String[]', 'clazzes', '=', 'new', 'String[]', '{', 'ManagedService.class.getName(),', 'InfluxDbFactoryService.class.getName()', '};', '//', 'register', 'the', 'class', 'as', 'a', 'managed', 'service.', 'Hashtable<String,', 'String>', 'properties', '=', 'new', 'Hashtable<String,', 'String>();', 'properties.put(Constants.SERVICE_PID,', 'InfluxDbFactoryService.class.getName());', 'sReg', '=', 'Activator.bc.registerService(clazzes,', 'this,', 'properties);', 'Activator.log(LogService.LOG_INFO,""Registered', '""', '+', 'this.getClass().getName()', '+', '"",', 'Pid', '=', '""', '+', '(String)', 'properties.get(Constants.SERVICE_PID));', '}', '/**', '*', 'Uregistered', 'the', 'class', 'from', 'the', 'service', 'registration', 'system.', '*', '*', '*/', 'protected', 'void', 'stop()', '{', '//', 'Unregister', 'the', 'factory', 'first', '..', 'sReg.unregister();', 'Activator.log(LogService.LOG_INFO,', '""Unregistered', '""', '+', 'this.getClass().getName());', '}', 'public', 'void', 'updated(Dictionary', 'properties)', 'throws', 'ConfigurationException', '{', '//', 'TODO', 'Auto-generated', 'method', 'stub', 'if', '(properties', '!=', 'null)', '{', 'String', 'url', '=', '(String)', 'properties.get(INFLUXDBURL);', 'String', 'dbname', '=', '(String)', 'properties.get(INFLUXDBNAME);', 'try', '{', 'InfluxDbResourceFactory', 'influxDbFactory', '=', 'InfluxDbFactoryBuilder.build(new', 'URL(url)).dbName(dbname).getFactory();', 'timeSeriesService', '=', 'new', 'TimeSeriesServiceImpl(influxDbFactory,', 'properties);', '}', 'catch', '(MalformedURLException', 'e)', '{', 'Activator.log(LogService.LOG_ERROR,', '""Couldn\'t', 'create', 'factory.', 'Url', 'malformed:', '""', '+', 'url', ');', '}', '}', '}', '}', '```']",challenge not surrounded by ''': ,
"package com.alibaba.druid.bvt.pool;

import java.sql.Connection;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.atomic.AtomicInteger;

import junit.framework.TestCase;

import org.junit.Assert;

import com.alibaba.druid.pool.DruidDataSource;


public class DruidDataSourceTest_interrupt2 extends TestCase {

    private DruidDataSource dataSource;

    protected void setUp() throws Exception {
        dataSource = new DruidDataSource();

        dataSource.setUrl(""jdbc:mock:xxx"");
        dataSource.setTestOnBorrow(false);
        dataSource.setDefaultAutoCommit(true);
        dataSource.setInitialSize(1);
    }

    protected void tearDown() throws Exception {
        dataSource.close();
    }

    public void test_autoCommit() throws Exception {
        {
            Connection conn = dataSource.getConnection();
            conn.close();
        }
        
        dataSource.getLock().lock();
        
        try {
            final CountDownLatch startLatch = new CountDownLatch(1);
            final CountDownLatch endLatch = new CountDownLatch(1);
            final AtomicInteger errorCount = new AtomicInteger();
            Thread thread = new Thread() {

                public void run() {
                    try {
                        startLatch.countDown();
                        dataSource.getConnection();
                    } catch (Exception e) {
                        errorCount.incrementAndGet();
                    } finally {
                        endLatch.countDown();
                    }
                }
            };
            thread.setDaemon(true);
            thread.start();

            startLatch.await();

            Thread.sleep(10);

            Assert.assertEquals(0, errorCount.get());

            thread.interrupt();

            endLatch.await();
            Assert.assertEquals(1, errorCount.get());
        } finally {
            dataSource.getLock().unlock();
        }
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.alibaba.druid.bvt.pool;', 'import', 'java.sql.Connection;', 'import', 'java.util.concurrent.CountDownLatch;', 'import', 'java.util.concurrent.atomic.AtomicInteger;', 'import', 'junit.framework.TestCase;', 'import', 'org.junit.Assert;', 'import', 'com.alibaba.druid.pool.DruidDataSource;', 'public', 'class', 'DruidDataSourceTest_interrupt2', 'extends', 'TestCase', '{', 'private', 'DruidDataSource', 'dataSource;', 'protected', 'void', 'setUp()', 'throws', 'Exception', '{', 'dataSource', '=', 'new', 'DruidDataSource();', 'dataSource.setUrl(""jdbc:mock:xxx"");', 'dataSource.setTestOnBorrow(false);', 'dataSource.setDefaultAutoCommit(true);', 'dataSource.setInitialSize(1);', '}', 'protected', 'void', 'tearDown()', 'throws', 'Exception', '{', 'dataSource.close();', '}', 'public', 'void', 'test_autoCommit()', 'throws', 'Exception', '{', '{', 'Connection', 'conn', '=', 'dataSource.getConnection();', 'conn.close();', '}', 'dataSource.getLock().lock();', 'try', '{', 'final', 'CountDownLatch', 'startLatch', '=', 'new', 'CountDownLatch(1);', 'final', 'CountDownLatch', 'endLatch', '=', 'new', 'CountDownLatch(1);', 'final', 'AtomicInteger', 'errorCount', '=', 'new', 'AtomicInteger();', 'Thread', 'thread', '=', 'new', 'Thread()', '{', 'public', 'void', 'run()', '{', 'try', '{', 'startLatch.countDown();', 'dataSource.getConnection();', '}', 'catch', '(Exception', 'e)', '{', 'errorCount.incrementAndGet();', '}', 'finally', '{', 'endLatch.countDown();', '}', '}', '};', 'thread.setDaemon(true);', 'thread.start();', 'startLatch.await();', 'Thread.sleep(10);', 'Assert.assertEquals(0,', 'errorCount.get());', 'thread.interrupt();', 'endLatch.await();', 'Assert.assertEquals(1,', 'errorCount.get());', '}', 'finally', '{', 'dataSource.getLock().unlock();', '}', '}', '}', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
<html xmlns=""http://www.w3.org/1999/xhtml"">
<head>
<meta http-equiv=""Content-Type"" content=""text/html; charset=utf-8"" />
<title>markItUp! preview</title>
<link rel=""stylesheet"" type=""text/css"" href=""{{ STATIC_URL }}markitup/preview.css"" />
</head>
<body>
{{ preview|safe }}
</body>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'html', 'PUBLIC', '""-//W3C//DTD', 'XHTML', '1.0', 'Transitional//EN""', '""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">', '<html', 'xmlns=""http://www.w3.org/1999/xhtml"">', '<head>', '<meta', 'http-equiv=""Content-Type""', 'content=""text/html;', 'charset=utf-8""', '/>', '<title>markItUp!', 'preview</title>', '<link', 'rel=""stylesheet""', 'type=""text/css""', 'href=""{{', 'STATIC_URL', '}}markitup/preview.css""', '/>', '</head>', '<body>', '{{', 'preview|safe', '}}', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"'use strict';

const assert = require('assert');
const Browscap = require('../src/index.js');

suite('checking for issue 234. (2 tests)', function () {
  test('issue-234-A [""Mozilla/5.0 (iPhone; CPU iPhone OS 7_1_1 like Mac OS X) AppleWebKit/537.51.2 (KHTML, like Gecko) Mobile/11D201 Twitter for iPhone""]', function () {
    const browscap = new Browscap();
    const browser = browscap.getBrowser('Mozilla/5.0 (iPhone; CPU iPhone OS 7_1_1 like Mac OS X) AppleWebKit/537.51.2 (KHTML, like Gecko) Mobile/11D201 Twitter for iPhone');

    assert.strictEqual(browser['Comment'], 'Twitter App', 'Expected actual ""Comment"" to be \'Twitter App\' (was \'' + browser['Comment'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['Browser'], 'Twitter App', 'Expected actual ""Browser"" to be \'Twitter App\' (was \'' + browser['Browser'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['Browser_Type'], 'Application', 'Expected actual ""Browser_Type"" to be \'Application\' (was \'' + browser['Browser_Type'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['Browser_Bits'], '32', 'Expected actual ""Browser_Bits"" to be \'32\' (was \'' + browser['Browser_Bits'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['Browser_Maker'], 'Twitter', 'Expected actual ""Browser_Maker"" to be \'Twitter\' (was \'' + browser['Browser_Maker'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['Browser_Modus'], 'unknown', 'Expected actual ""Browser_Modus"" to be \'unknown\' (was \'' + browser['Browser_Modus'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['Version'], '0.0', 'Expected actual ""Version"" to be \'0.0\' (was \'' + browser['Version'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['Platform'], 'iOS', 'Expected actual ""Platform"" to be \'iOS\' (was \'' + browser['Platform'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['Platform_Version'], '7.1', 'Expected actual ""Platform_Version"" to be \'7.1\' (was \'' + browser['Platform_Version'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['Platform_Description'], 'iPod, iPhone & iPad', 'Expected actual ""Platform_Description"" to be \'iPod, iPhone & iPad\' (was \'' + browser['Platform_Description'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['Platform_Bits'], '32', 'Expected actual ""Platform_Bits"" to be \'32\' (was \'' + browser['Platform_Bits'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['Platform_Maker'], 'Apple Inc', 'Expected actual ""Platform_Maker"" to be \'Apple Inc\' (was \'' + browser['Platform_Maker'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['Alpha'], false, 'Expected actual ""Alpha"" to be false (was \'' + browser['Alpha'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['Beta'], false, 'Expected actual ""Beta"" to be false (was \'' + browser['Beta'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['Frames'], true, 'Expected actual ""Frames"" to be true (was \'' + browser['Frames'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['IFrames'], true, 'Expected actual ""IFrames"" to be true (was \'' + browser['IFrames'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['Tables'], true, 'Expected actual ""Tables"" to be true (was \'' + browser['Tables'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['Cookies'], true, 'Expected actual ""Cookies"" to be true (was \'' + browser['Cookies'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['JavaScript'], true, 'Expected actual ""JavaScript"" to be true (was \'' + browser['JavaScript'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['VBScript'], false, 'Expected actual ""VBScript"" to be false (was \'' + browser['VBScript'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['JavaApplets'], true, 'Expected actual ""JavaApplets"" to be true (was \'' + browser['JavaApplets'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['isSyndicationReader'], false, 'Expected actual ""isSyndicationReader"" to be false (was \'' + browser['isSyndicationReader'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['isFake'], false, 'Expected actual ""isFake"" to be false (was \'' + browser['isFake'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['isAnonymized'], false, 'Expected actual ""isAnonymized"" to be false (was \'' + browser['isAnonymized'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['isModified'], false, 'Expected actual ""isModified"" to be false (was \'' + browser['isModified'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['CssVersion'], '3', 'Expected actual ""CssVersion"" to be \'3\' (was \'' + browser['CssVersion'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['Device_Name'], 'iPhone', 'Expected actual ""Device_Name"" to be \'iPhone\' (was \'' + browser['Device_Name'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['Device_Maker'], 'Apple Inc', 'Expected actual ""Device_Maker"" to be \'Apple Inc\' (was \'' + browser['Device_Maker'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['Device_Type'], 'Mobile Phone', 'Expected actual ""Device_Type"" to be \'Mobile Phone\' (was \'' + browser['Device_Type'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['Device_Pointing_Method'], 'touchscreen', 'Expected actual ""Device_Pointing_Method"" to be \'touchscreen\' (was \'' + browser['Device_Pointing_Method'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['Device_Code_Name'], 'iPhone', 'Expected actual ""Device_Code_Name"" to be \'iPhone\' (was \'' + browser['Device_Code_Name'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['Device_Brand_Name'], 'Apple', 'Expected actual ""Device_Brand_Name"" to be \'Apple\' (was \'' + browser['Device_Brand_Name'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['RenderingEngine_Name'], 'WebKit', 'Expected actual ""RenderingEngine_Name"" to be \'WebKit\' (was \'' + browser['RenderingEngine_Name'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['RenderingEngine_Version'], 'unknown', 'Expected actual ""RenderingEngine_Version"" to be \'unknown\' (was \'' + browser['RenderingEngine_Version'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['RenderingEngine_Maker'], 'Apple Inc', 'Expected actual ""RenderingEngine_Maker"" to be \'Apple Inc\' (was \'' + browser['RenderingEngine_Maker'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
  });
  test('issue-234-B [""Mozilla/5.0 (iPhone; CPU iPhone OS 7_1_1 like Mac OS X) AppleWebKit/537.51.2 (KHTML, like Gecko) Coast/3.0.0.74604 Mobile/11D201 Safari/7534.48.3""]', function () {
    const browscap = new Browscap();
    const browser = browscap.getBrowser('Mozilla/5.0 (iPhone; CPU iPhone OS 7_1_1 like Mac OS X) AppleWebKit/537.51.2 (KHTML, like Gecko) Coast/3.0.0.74604 Mobile/11D201 Safari/7534.48.3');

    assert.strictEqual(browser['Comment'], 'Coast 3.0', 'Expected actual ""Comment"" to be \'Coast 3.0\' (was \'' + browser['Comment'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['Browser'], 'Coast', 'Expected actual ""Browser"" to be \'Coast\' (was \'' + browser['Browser'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['Browser_Type'], 'Application', 'Expected actual ""Browser_Type"" to be \'Application\' (was \'' + browser['Browser_Type'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['Browser_Bits'], '32', 'Expected actual ""Browser_Bits"" to be \'32\' (was \'' + browser['Browser_Bits'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['Browser_Maker'], 'Opera Software ASA', 'Expected actual ""Browser_Maker"" to be \'Opera Software ASA\' (was \'' + browser['Browser_Maker'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['Browser_Modus'], 'unknown', 'Expected actual ""Browser_Modus"" to be \'unknown\' (was \'' + browser['Browser_Modus'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['Version'], '3.0', 'Expected actual ""Version"" to be \'3.0\' (was \'' + browser['Version'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['Platform'], 'iOS', 'Expected actual ""Platform"" to be \'iOS\' (was \'' + browser['Platform'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['Platform_Version'], '7.1', 'Expected actual ""Platform_Version"" to be \'7.1\' (was \'' + browser['Platform_Version'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['Platform_Description'], 'iPod, iPhone & iPad', 'Expected actual ""Platform_Description"" to be \'iPod, iPhone & iPad\' (was \'' + browser['Platform_Description'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['Platform_Bits'], '32', 'Expected actual ""Platform_Bits"" to be \'32\' (was \'' + browser['Platform_Bits'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['Platform_Maker'], 'Apple Inc', 'Expected actual ""Platform_Maker"" to be \'Apple Inc\' (was \'' + browser['Platform_Maker'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['Alpha'], false, 'Expected actual ""Alpha"" to be false (was \'' + browser['Alpha'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['Beta'], false, 'Expected actual ""Beta"" to be false (was \'' + browser['Beta'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['Frames'], true, 'Expected actual ""Frames"" to be true (was \'' + browser['Frames'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['IFrames'], true, 'Expected actual ""IFrames"" to be true (was \'' + browser['IFrames'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['Tables'], true, 'Expected actual ""Tables"" to be true (was \'' + browser['Tables'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['Cookies'], true, 'Expected actual ""Cookies"" to be true (was \'' + browser['Cookies'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['JavaScript'], true, 'Expected actual ""JavaScript"" to be true (was \'' + browser['JavaScript'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['VBScript'], false, 'Expected actual ""VBScript"" to be false (was \'' + browser['VBScript'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['JavaApplets'], true, 'Expected actual ""JavaApplets"" to be true (was \'' + browser['JavaApplets'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['isSyndicationReader'], false, 'Expected actual ""isSyndicationReader"" to be false (was \'' + browser['isSyndicationReader'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['isFake'], false, 'Expected actual ""isFake"" to be false (was \'' + browser['isFake'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['isAnonymized'], false, 'Expected actual ""isAnonymized"" to be false (was \'' + browser['isAnonymized'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['isModified'], false, 'Expected actual ""isModified"" to be false (was \'' + browser['isModified'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['CssVersion'], '3', 'Expected actual ""CssVersion"" to be \'3\' (was \'' + browser['CssVersion'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['Device_Name'], 'iPhone', 'Expected actual ""Device_Name"" to be \'iPhone\' (was \'' + browser['Device_Name'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['Device_Maker'], 'Apple Inc', 'Expected actual ""Device_Maker"" to be \'Apple Inc\' (was \'' + browser['Device_Maker'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['Device_Type'], 'Mobile Phone', 'Expected actual ""Device_Type"" to be \'Mobile Phone\' (was \'' + browser['Device_Type'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['Device_Pointing_Method'], 'touchscreen', 'Expected actual ""Device_Pointing_Method"" to be \'touchscreen\' (was \'' + browser['Device_Pointing_Method'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['Device_Code_Name'], 'iPhone', 'Expected actual ""Device_Code_Name"" to be \'iPhone\' (was \'' + browser['Device_Code_Name'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['Device_Brand_Name'], 'Apple', 'Expected actual ""Device_Brand_Name"" to be \'Apple\' (was \'' + browser['Device_Brand_Name'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['RenderingEngine_Name'], 'WebKit', 'Expected actual ""RenderingEngine_Name"" to be \'WebKit\' (was \'' + browser['RenderingEngine_Name'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['RenderingEngine_Version'], 'unknown', 'Expected actual ""RenderingEngine_Version"" to be \'unknown\' (was \'' + browser['RenderingEngine_Version'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
    assert.strictEqual(browser['RenderingEngine_Maker'], 'Apple Inc', 'Expected actual ""RenderingEngine_Maker"" to be \'Apple Inc\' (was \'' + browser['RenderingEngine_Maker'] + '\'; used pattern: ' + browser['browser_name_regex'] + ')');
  });
});
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', ""```'use"", ""strict';"", 'const', 'assert', '=', ""require('assert');"", 'const', 'Browscap', '=', ""require('../src/index.js');"", ""suite('checking"", 'for', 'issue', '234.', '(2', ""tests)',"", 'function', '()', '{', ""test('issue-234-A"", '[""Mozilla/5.0', '(iPhone;', 'CPU', 'iPhone', 'OS', '7_1_1', 'like', 'Mac', 'OS', 'X)', 'AppleWebKit/537.51.2', '(KHTML,', 'like', 'Gecko)', 'Mobile/11D201', 'Twitter', 'for', 'iPhone""]\',', 'function', '()', '{', 'const', 'browscap', '=', 'new', 'Browscap();', 'const', 'browser', '=', ""browscap.getBrowser('Mozilla/5.0"", '(iPhone;', 'CPU', 'iPhone', 'OS', '7_1_1', 'like', 'Mac', 'OS', 'X)', 'AppleWebKit/537.51.2', '(KHTML,', 'like', 'Gecko)', 'Mobile/11D201', 'Twitter', 'for', ""iPhone');"", ""assert.strictEqual(browser['Comment'],"", ""'Twitter"", ""App',"", ""'Expected"", 'actual', '""Comment""', 'to', 'be', ""\\'Twitter"", ""App\\'"", '(was', ""\\''"", '+', ""browser['Comment']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['Browser'],"", ""'Twitter"", ""App',"", ""'Expected"", 'actual', '""Browser""', 'to', 'be', ""\\'Twitter"", ""App\\'"", '(was', ""\\''"", '+', ""browser['Browser']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['Browser_Type'],"", ""'Application',"", ""'Expected"", 'actual', '""Browser_Type""', 'to', 'be', ""\\'Application\\'"", '(was', ""\\''"", '+', ""browser['Browser_Type']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['Browser_Bits'],"", ""'32',"", ""'Expected"", 'actual', '""Browser_Bits""', 'to', 'be', ""\\'32\\'"", '(was', ""\\''"", '+', ""browser['Browser_Bits']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['Browser_Maker'],"", ""'Twitter',"", ""'Expected"", 'actual', '""Browser_Maker""', 'to', 'be', ""\\'Twitter\\'"", '(was', ""\\''"", '+', ""browser['Browser_Maker']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['Browser_Modus'],"", ""'unknown',"", ""'Expected"", 'actual', '""Browser_Modus""', 'to', 'be', ""\\'unknown\\'"", '(was', ""\\''"", '+', ""browser['Browser_Modus']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['Version'],"", ""'0.0',"", ""'Expected"", 'actual', '""Version""', 'to', 'be', ""\\'0.0\\'"", '(was', ""\\''"", '+', ""browser['Version']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['Platform'],"", ""'iOS',"", ""'Expected"", 'actual', '""Platform""', 'to', 'be', ""\\'iOS\\'"", '(was', ""\\''"", '+', ""browser['Platform']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['Platform_Version'],"", ""'7.1',"", ""'Expected"", 'actual', '""Platform_Version""', 'to', 'be', ""\\'7.1\\'"", '(was', ""\\''"", '+', ""browser['Platform_Version']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['Platform_Description'],"", ""'iPod,"", 'iPhone', '&', ""iPad',"", ""'Expected"", 'actual', '""Platform_Description""', 'to', 'be', ""\\'iPod,"", 'iPhone', '&', ""iPad\\'"", '(was', ""\\''"", '+', ""browser['Platform_Description']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['Platform_Bits'],"", ""'32',"", ""'Expected"", 'actual', '""Platform_Bits""', 'to', 'be', ""\\'32\\'"", '(was', ""\\''"", '+', ""browser['Platform_Bits']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['Platform_Maker'],"", ""'Apple"", ""Inc',"", ""'Expected"", 'actual', '""Platform_Maker""', 'to', 'be', ""\\'Apple"", ""Inc\\'"", '(was', ""\\''"", '+', ""browser['Platform_Maker']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['Alpha'],"", 'false,', ""'Expected"", 'actual', '""Alpha""', 'to', 'be', 'false', '(was', ""\\''"", '+', ""browser['Alpha']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['Beta'],"", 'false,', ""'Expected"", 'actual', '""Beta""', 'to', 'be', 'false', '(was', ""\\''"", '+', ""browser['Beta']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['Frames'],"", 'true,', ""'Expected"", 'actual', '""Frames""', 'to', 'be', 'true', '(was', ""\\''"", '+', ""browser['Frames']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['IFrames'],"", 'true,', ""'Expected"", 'actual', '""IFrames""', 'to', 'be', 'true', '(was', ""\\''"", '+', ""browser['IFrames']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['Tables'],"", 'true,', ""'Expected"", 'actual', '""Tables""', 'to', 'be', 'true', '(was', ""\\''"", '+', ""browser['Tables']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['Cookies'],"", 'true,', ""'Expected"", 'actual', '""Cookies""', 'to', 'be', 'true', '(was', ""\\''"", '+', ""browser['Cookies']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['JavaScript'],"", 'true,', ""'Expected"", 'actual', '""JavaScript""', 'to', 'be', 'true', '(was', ""\\''"", '+', ""browser['JavaScript']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['VBScript'],"", 'false,', ""'Expected"", 'actual', '""VBScript""', 'to', 'be', 'false', '(was', ""\\''"", '+', ""browser['VBScript']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['JavaApplets'],"", 'true,', ""'Expected"", 'actual', '""JavaApplets""', 'to', 'be', 'true', '(was', ""\\''"", '+', ""browser['JavaApplets']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['isSyndicationReader'],"", 'false,', ""'Expected"", 'actual', '""isSyndicationReader""', 'to', 'be', 'false', '(was', ""\\''"", '+', ""browser['isSyndicationReader']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['isFake'],"", 'false,', ""'Expected"", 'actual', '""isFake""', 'to', 'be', 'false', '(was', ""\\''"", '+', ""browser['isFake']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['isAnonymized'],"", 'false,', ""'Expected"", 'actual', '""isAnonymized""', 'to', 'be', 'false', '(was', ""\\''"", '+', ""browser['isAnonymized']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['isModified'],"", 'false,', ""'Expected"", 'actual', '""isModified""', 'to', 'be', 'false', '(was', ""\\''"", '+', ""browser['isModified']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['CssVersion'],"", ""'3',"", ""'Expected"", 'actual', '""CssVersion""', 'to', 'be', ""\\'3\\'"", '(was', ""\\''"", '+', ""browser['CssVersion']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['Device_Name'],"", ""'iPhone',"", ""'Expected"", 'actual', '""Device_Name""', 'to', 'be', ""\\'iPhone\\'"", '(was', ""\\''"", '+', ""browser['Device_Name']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['Device_Maker'],"", ""'Apple"", ""Inc',"", ""'Expected"", 'actual', '""Device_Maker""', 'to', 'be', ""\\'Apple"", ""Inc\\'"", '(was', ""\\''"", '+', ""browser['Device_Maker']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['Device_Type'],"", ""'Mobile"", ""Phone',"", ""'Expected"", 'actual', '""Device_Type""', 'to', 'be', ""\\'Mobile"", ""Phone\\'"", '(was', ""\\''"", '+', ""browser['Device_Type']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['Device_Pointing_Method'],"", ""'touchscreen',"", ""'Expected"", 'actual', '""Device_Pointing_Method""', 'to', 'be', ""\\'touchscreen\\'"", '(was', ""\\''"", '+', ""browser['Device_Pointing_Method']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['Device_Code_Name'],"", ""'iPhone',"", ""'Expected"", 'actual', '""Device_Code_Name""', 'to', 'be', ""\\'iPhone\\'"", '(was', ""\\''"", '+', ""browser['Device_Code_Name']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['Device_Brand_Name'],"", ""'Apple',"", ""'Expected"", 'actual', '""Device_Brand_Name""', 'to', 'be', ""\\'Apple\\'"", '(was', ""\\''"", '+', ""browser['Device_Brand_Name']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['RenderingEngine_Name'],"", ""'WebKit',"", ""'Expected"", 'actual', '""RenderingEngine_Name""', 'to', 'be', ""\\'WebKit\\'"", '(was', ""\\''"", '+', ""browser['RenderingEngine_Name']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['RenderingEngine_Version'],"", ""'unknown',"", ""'Expected"", 'actual', '""RenderingEngine_Version""', 'to', 'be', ""\\'unknown\\'"", '(was', ""\\''"", '+', ""browser['RenderingEngine_Version']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['RenderingEngine_Maker'],"", ""'Apple"", ""Inc',"", ""'Expected"", 'actual', '""RenderingEngine_Maker""', 'to', 'be', ""\\'Apple"", ""Inc\\'"", '(was', ""\\''"", '+', ""browser['RenderingEngine_Maker']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", '});', ""test('issue-234-B"", '[""Mozilla/5.0', '(iPhone;', 'CPU', 'iPhone', 'OS', '7_1_1', 'like', 'Mac', 'OS', 'X)', 'AppleWebKit/537.51.2', '(KHTML,', 'like', 'Gecko)', 'Coast/3.0.0.74604', 'Mobile/11D201', 'Safari/7534.48.3""]\',', 'function', '()', '{', 'const', 'browscap', '=', 'new', 'Browscap();', 'const', 'browser', '=', ""browscap.getBrowser('Mozilla/5.0"", '(iPhone;', 'CPU', 'iPhone', 'OS', '7_1_1', 'like', 'Mac', 'OS', 'X)', 'AppleWebKit/537.51.2', '(KHTML,', 'like', 'Gecko)', 'Coast/3.0.0.74604', 'Mobile/11D201', ""Safari/7534.48.3');"", ""assert.strictEqual(browser['Comment'],"", ""'Coast"", ""3.0',"", ""'Expected"", 'actual', '""Comment""', 'to', 'be', ""\\'Coast"", ""3.0\\'"", '(was', ""\\''"", '+', ""browser['Comment']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['Browser'],"", ""'Coast',"", ""'Expected"", 'actual', '""Browser""', 'to', 'be', ""\\'Coast\\'"", '(was', ""\\''"", '+', ""browser['Browser']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['Browser_Type'],"", ""'Application',"", ""'Expected"", 'actual', '""Browser_Type""', 'to', 'be', ""\\'Application\\'"", '(was', ""\\''"", '+', ""browser['Browser_Type']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['Browser_Bits'],"", ""'32',"", ""'Expected"", 'actual', '""Browser_Bits""', 'to', 'be', ""\\'32\\'"", '(was', ""\\''"", '+', ""browser['Browser_Bits']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['Browser_Maker'],"", ""'Opera"", 'Software', ""ASA',"", ""'Expected"", 'actual', '""Browser_Maker""', 'to', 'be', ""\\'Opera"", 'Software', ""ASA\\'"", '(was', ""\\''"", '+', ""browser['Browser_Maker']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['Browser_Modus'],"", ""'unknown',"", ""'Expected"", 'actual', '""Browser_Modus""', 'to', 'be', ""\\'unknown\\'"", '(was', ""\\''"", '+', ""browser['Browser_Modus']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['Version'],"", ""'3.0',"", ""'Expected"", 'actual', '""Version""', 'to', 'be', ""\\'3.0\\'"", '(was', ""\\''"", '+', ""browser['Version']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['Platform'],"", ""'iOS',"", ""'Expected"", 'actual', '""Platform""', 'to', 'be', ""\\'iOS\\'"", '(was', ""\\''"", '+', ""browser['Platform']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['Platform_Version'],"", ""'7.1',"", ""'Expected"", 'actual', '""Platform_Version""', 'to', 'be', ""\\'7.1\\'"", '(was', ""\\''"", '+', ""browser['Platform_Version']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['Platform_Description'],"", ""'iPod,"", 'iPhone', '&', ""iPad',"", ""'Expected"", 'actual', '""Platform_Description""', 'to', 'be', ""\\'iPod,"", 'iPhone', '&', ""iPad\\'"", '(was', ""\\''"", '+', ""browser['Platform_Description']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['Platform_Bits'],"", ""'32',"", ""'Expected"", 'actual', '""Platform_Bits""', 'to', 'be', ""\\'32\\'"", '(was', ""\\''"", '+', ""browser['Platform_Bits']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['Platform_Maker'],"", ""'Apple"", ""Inc',"", ""'Expected"", 'actual', '""Platform_Maker""', 'to', 'be', ""\\'Apple"", ""Inc\\'"", '(was', ""\\''"", '+', ""browser['Platform_Maker']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['Alpha'],"", 'false,', ""'Expected"", 'actual', '""Alpha""', 'to', 'be', 'false', '(was', ""\\''"", '+', ""browser['Alpha']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['Beta'],"", 'false,', ""'Expected"", 'actual', '""Beta""', 'to', 'be', 'false', '(was', ""\\''"", '+', ""browser['Beta']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['Frames'],"", 'true,', ""'Expected"", 'actual', '""Frames""', 'to', 'be', 'true', '(was', ""\\''"", '+', ""browser['Frames']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['IFrames'],"", 'true,', ""'Expected"", 'actual', '""IFrames""', 'to', 'be', 'true', '(was', ""\\''"", '+', ""browser['IFrames']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['Tables'],"", 'true,', ""'Expected"", 'actual', '""Tables""', 'to', 'be', 'true', '(was', ""\\''"", '+', ""browser['Tables']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['Cookies'],"", 'true,', ""'Expected"", 'actual', '""Cookies""', 'to', 'be', 'true', '(was', ""\\''"", '+', ""browser['Cookies']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['JavaScript'],"", 'true,', ""'Expected"", 'actual', '""JavaScript""', 'to', 'be', 'true', '(was', ""\\''"", '+', ""browser['JavaScript']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['VBScript'],"", 'false,', ""'Expected"", 'actual', '""VBScript""', 'to', 'be', 'false', '(was', ""\\''"", '+', ""browser['VBScript']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['JavaApplets'],"", 'true,', ""'Expected"", 'actual', '""JavaApplets""', 'to', 'be', 'true', '(was', ""\\''"", '+', ""browser['JavaApplets']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['isSyndicationReader'],"", 'false,', ""'Expected"", 'actual', '""isSyndicationReader""', 'to', 'be', 'false', '(was', ""\\''"", '+', ""browser['isSyndicationReader']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['isFake'],"", 'false,', ""'Expected"", 'actual', '""isFake""', 'to', 'be', 'false', '(was', ""\\''"", '+', ""browser['isFake']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['isAnonymized'],"", 'false,', ""'Expected"", 'actual', '""isAnonymized""', 'to', 'be', 'false', '(was', ""\\''"", '+', ""browser['isAnonymized']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['isModified'],"", 'false,', ""'Expected"", 'actual', '""isModified""', 'to', 'be', 'false', '(was', ""\\''"", '+', ""browser['isModified']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['CssVersion'],"", ""'3',"", ""'Expected"", 'actual', '""CssVersion""', 'to', 'be', ""\\'3\\'"", '(was', ""\\''"", '+', ""browser['CssVersion']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['Device_Name'],"", ""'iPhone',"", ""'Expected"", 'actual', '""Device_Name""', 'to', 'be', ""\\'iPhone\\'"", '(was', ""\\''"", '+', ""browser['Device_Name']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['Device_Maker'],"", ""'Apple"", ""Inc',"", ""'Expected"", 'actual', '""Device_Maker""', 'to', 'be', ""\\'Apple"", ""Inc\\'"", '(was', ""\\''"", '+', ""browser['Device_Maker']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['Device_Type'],"", ""'Mobile"", ""Phone',"", ""'Expected"", 'actual', '""Device_Type""', 'to', 'be', ""\\'Mobile"", ""Phone\\'"", '(was', ""\\''"", '+', ""browser['Device_Type']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['Device_Pointing_Method'],"", ""'touchscreen',"", ""'Expected"", 'actual', '""Device_Pointing_Method""', 'to', 'be', ""\\'touchscreen\\'"", '(was', ""\\''"", '+', ""browser['Device_Pointing_Method']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['Device_Code_Name'],"", ""'iPhone',"", ""'Expected"", 'actual', '""Device_Code_Name""', 'to', 'be', ""\\'iPhone\\'"", '(was', ""\\''"", '+', ""browser['Device_Code_Name']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['Device_Brand_Name'],"", ""'Apple',"", ""'Expected"", 'actual', '""Device_Brand_Name""', 'to', 'be', ""\\'Apple\\'"", '(was', ""\\''"", '+', ""browser['Device_Brand_Name']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['RenderingEngine_Name'],"", ""'WebKit',"", ""'Expected"", 'actual', '""RenderingEngine_Name""', 'to', 'be', ""\\'WebKit\\'"", '(was', ""\\''"", '+', ""browser['RenderingEngine_Name']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['RenderingEngine_Version'],"", ""'unknown',"", ""'Expected"", 'actual', '""RenderingEngine_Version""', 'to', 'be', ""\\'unknown\\'"", '(was', ""\\''"", '+', ""browser['RenderingEngine_Version']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", ""assert.strictEqual(browser['RenderingEngine_Maker'],"", ""'Apple"", ""Inc',"", ""'Expected"", 'actual', '""RenderingEngine_Maker""', 'to', 'be', ""\\'Apple"", ""Inc\\'"", '(was', ""\\''"", '+', ""browser['RenderingEngine_Maker']"", '+', ""'\\';"", 'used', 'pattern:', ""'"", '+', ""browser['browser_name_regex']"", '+', ""')');"", '});', '});', '```']",challenge not surrounded by ''': ,
"# Copyright 2015 ThoughtWorks, Inc.

# This file is part of Gauge.

# Gauge is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# Gauge is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with Gauge.  If not, see <http://www.gnu.org/licenses/>.

#!/bin/sh

#Using protoc version 3.0.0

cd gauge-proto
PATH=$PATH:$GOPATH/bin protoc --go_out=plugins=grpc:../gauge_messages *.proto

cd ..
sed  -i.backup '/import gauge_messages1 ""spec.pb""/d' gauge_messages/messages.pb.go && sed  -i.backup 's/gauge_messages1.//g' gauge_messages/messages.pb.go && rm gauge_messages/messages.pb.go.backup
sed  -i.backup '/import gauge_messages1 ""spec.pb""/d' gauge_messages/api.pb.go && sed  -i.backup 's/gauge_messages1.//g' gauge_messages/api.pb.go && rm gauge_messages/api.pb.go.backup

sed -i.backup '/import "".""/d' gauge_messages/api.pb.go && rm gauge_messages/api.pb.go.backup
sed -i.backup '/import "".""/d' gauge_messages/messages.pb.go && rm gauge_messages/messages.pb.go.backup
go fmt github.com/getgauge/gauge/...
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', 'Copyright', '2015', 'ThoughtWorks,', 'Inc.', '#', 'This', 'file', 'is', 'part', 'of', 'Gauge.', '#', 'Gauge', 'is', 'free', 'software:', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', '#', 'it', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'as', 'published', 'by', '#', 'the', 'Free', 'Software', 'Foundation,', 'either', 'version', '3', 'of', 'the', 'License,', 'or', '#', '(at', 'your', 'option)', 'any', 'later', 'version.', '#', 'Gauge', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', '#', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', '#', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', '#', 'GNU', 'General', 'Public', 'License', 'for', 'more', 'details.', '#', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'General', 'Public', 'License', '#', 'along', 'with', 'Gauge.', 'If', 'not,', 'see', '<http://www.gnu.org/licenses/>.', '#!/bin/sh', '#Using', 'protoc', 'version', '3.0.0', 'cd', 'gauge-proto', 'PATH=$PATH:$GOPATH/bin', 'protoc', '--go_out=plugins=grpc:../gauge_messages', '*.proto', 'cd', '..', 'sed', '-i.backup', ""'/import"", 'gauge_messages1', '""spec.pb""/d\'', 'gauge_messages/messages.pb.go', '&&', 'sed', '-i.backup', ""'s/gauge_messages1.//g'"", 'gauge_messages/messages.pb.go', '&&', 'rm', 'gauge_messages/messages.pb.go.backup', 'sed', '-i.backup', ""'/import"", 'gauge_messages1', '""spec.pb""/d\'', 'gauge_messages/api.pb.go', '&&', 'sed', '-i.backup', ""'s/gauge_messages1.//g'"", 'gauge_messages/api.pb.go', '&&', 'rm', 'gauge_messages/api.pb.go.backup', 'sed', '-i.backup', ""'/import"", '"".""/d\'', 'gauge_messages/api.pb.go', '&&', 'rm', 'gauge_messages/api.pb.go.backup', 'sed', '-i.backup', ""'/import"", '"".""/d\'', 'gauge_messages/messages.pb.go', '&&', 'rm', 'gauge_messages/messages.pb.go.backup', 'go', 'fmt', 'github.com/getgauge/gauge/...', '```']",challenge not surrounded by ''': ,
"#!/bin/bash

CWD=$(pwd)

box execute $CWD/makeAutoDocs.cfm
make html","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/bin/bash', 'CWD=$(pwd)', 'box', 'execute', '$CWD/makeAutoDocs.cfm', 'make', 'html```']",challenge not surrounded by ''': ,
"package grails.util;

/**
 * Subclass Spring's MockHttpServletResponse to tag the methods that have been deprecated in
 * the Servlet API.  
 *
 * Because Spring's MockHttpServletResponse doesn't tag these methods as deprecated, the 
 * compiler outputs noisy warnings complaining that we're using deprecated methods if we use
 * the raw MockHttpServletResponse from Spring.  By subclassing Spring's 
 * MockHttpServletResponse and tagging the methods as deprecated, we acknowledge to the 
 * compiler that these methods are deprecated, and we silence the compiler warnings.  
 *
 * Created: 08-Feb-2008
 */
class MockHttpServletResponse extends org.springframework.mock.web.MockHttpServletResponse {
  /** @deprecated */
	public String encodeRedirectUrl(String url) {
		return super.encodeRedirectURL(url);
	}

  /** @deprecated */
	public String encodeUrl(String url) {
		return super.encodeURL(url);
	}

  /** @deprecated */
	public void setStatus(int status, String errorMessage) {
		super.setStatus(status, errorMessage);
	}
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'grails.util;', '/**', '*', 'Subclass', ""Spring's"", 'MockHttpServletResponse', 'to', 'tag', 'the', 'methods', 'that', 'have', 'been', 'deprecated', 'in', '*', 'the', 'Servlet', 'API.', '*', '*', 'Because', ""Spring's"", 'MockHttpServletResponse', ""doesn't"", 'tag', 'these', 'methods', 'as', 'deprecated,', 'the', '*', 'compiler', 'outputs', 'noisy', 'warnings', 'complaining', 'that', ""we're"", 'using', 'deprecated', 'methods', 'if', 'we', 'use', '*', 'the', 'raw', 'MockHttpServletResponse', 'from', 'Spring.', 'By', 'subclassing', ""Spring's"", '*', 'MockHttpServletResponse', 'and', 'tagging', 'the', 'methods', 'as', 'deprecated,', 'we', 'acknowledge', 'to', 'the', '*', 'compiler', 'that', 'these', 'methods', 'are', 'deprecated,', 'and', 'we', 'silence', 'the', 'compiler', 'warnings.', '*', '*', 'Created:', '08-Feb-2008', '*/', 'class', 'MockHttpServletResponse', 'extends', 'org.springframework.mock.web.MockHttpServletResponse', '{', '/**', '@deprecated', '*/', 'public', 'String', 'encodeRedirectUrl(String', 'url)', '{', 'return', 'super.encodeRedirectURL(url);', '}', '/**', '@deprecated', '*/', 'public', 'String', 'encodeUrl(String', 'url)', '{', 'return', 'super.encodeURL(url);', '}', '/**', '@deprecated', '*/', 'public', 'void', 'setStatus(int', 'status,', 'String', 'errorMessage)', '{', 'super.setStatus(status,', 'errorMessage);', '}', '}', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN""
  ""http://www.w3.org/TR/html4/loose.dtd"">
<html>
<head>
  <title>Jasmine Test Runner</title>
  <link rel=""stylesheet"" type=""text/css"" href=""lib/jasmine-1.0.2/jasmine.css"">
  <script type=""text/javascript"" src=""lib/jasmine-1.0.2/jasmine.js""></script>
  <script type=""text/javascript"" src=""lib/jasmine-1.0.2/jasmine-html.js""></script>

  <!-- include source files here... -->
  <script type=""text/javascript"" src=""vendor/assets/javascripts/coffeescript-router.min.js""></script>

  <!-- include spec files here... -->
  <script type=""text/javascript"" src=""test/js/routerSpec.js""></script>

</head>
<body>

<script type=""text/javascript"">
  jasmine.getEnv().addReporter(new jasmine.TrivialReporter());
  jasmine.getEnv().execute();
</script>

</body>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'HTML', 'PUBLIC', '""-//W3C//DTD', 'HTML', '4.01', 'Transitional//EN""', '""http://www.w3.org/TR/html4/loose.dtd"">', '<html>', '<head>', '<title>Jasmine', 'Test', 'Runner</title>', '<link', 'rel=""stylesheet""', 'type=""text/css""', 'href=""lib/jasmine-1.0.2/jasmine.css"">', '<script', 'type=""text/javascript""', 'src=""lib/jasmine-1.0.2/jasmine.js""></script>', '<script', 'type=""text/javascript""', 'src=""lib/jasmine-1.0.2/jasmine-html.js""></script>', '<!--', 'include', 'source', 'files', 'here...', '-->', '<script', 'type=""text/javascript""', 'src=""vendor/assets/javascripts/coffeescript-router.min.js""></script>', '<!--', 'include', 'spec', 'files', 'here...', '-->', '<script', 'type=""text/javascript""', 'src=""test/js/routerSpec.js""></script>', '</head>', '<body>', '<script', 'type=""text/javascript"">', 'jasmine.getEnv().addReporter(new', 'jasmine.TrivialReporter());', 'jasmine.getEnv().execute();', '</script>', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"// documentation for these options can be
// found at https://6to5.org/docs/usage/options/
module.exports = {
  filename: '',
  filenameRelative: '',
  //blacklist: [],
  //whitelist: [],
  modules: '',
  sourceMap: true,
  sourceMapName: '',
  sourceRoot: '',
  moduleRoot: '',
  moduleIds: false,
  experimental: false,
  comments: false,
  compact: false,
  code:true,
  stage:2,
  optional: [""es7.decorators"",""es7.classProperties"",""es7.objectRestSpread""]
};
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//', 'documentation', 'for', 'these', 'options', 'can', 'be', '//', 'found', 'at', 'https://6to5.org/docs/usage/options/', 'module.exports', '=', '{', 'filename:', ""'',"", 'filenameRelative:', ""'',"", '//blacklist:', '[],', '//whitelist:', '[],', 'modules:', ""'',"", 'sourceMap:', 'true,', 'sourceMapName:', ""'',"", 'sourceRoot:', ""'',"", 'moduleRoot:', ""'',"", 'moduleIds:', 'false,', 'experimental:', 'false,', 'comments:', 'false,', 'compact:', 'false,', 'code:true,', 'stage:2,', 'optional:', '[""es7.decorators"",""es7.classProperties"",""es7.objectRestSpread""]', '};', '```']",challenge not surrounded by ''': ,
"import glob
import os
import tempfile
import shutil
import unittest

from avocado.core import exit_codes
from avocado.utils import process
from avocado.utils import script


basedir = os.path.join(os.path.dirname(os.path.abspath(__file__)), '..', '..')
basedir = os.path.abspath(basedir)

AVOCADO = os.environ.get(""UNITTEST_AVOCADO_CMD"", ""./scripts/avocado"")


class DiffTests(unittest.TestCase):

    def setUp(self):
        self.tmpdir = tempfile.mkdtemp(prefix='avocado_' + __name__)
        test = script.make_script(os.path.join(self.tmpdir, 'test'), 'exit 0')
        cmd_line = ('%s run %s '
                    '--external-runner /bin/bash '
                    '--job-results-dir %s --sysinfo=off --json -' %
                    (AVOCADO, test, self.tmpdir))
        expected_rc = exit_codes.AVOCADO_ALL_OK
        self.run_and_check(cmd_line, expected_rc)
        self.jobdir = ''.join(glob.glob(os.path.join(self.tmpdir, 'job-*')))

        self.tmpdir2 = tempfile.mkdtemp(prefix='avocado_' + __name__)
        cmd_line = ('%s run %s '
                    '--external-runner /bin/bash '
                    '--job-results-dir %s --sysinfo=off --json -' %
                    (AVOCADO, test, self.tmpdir2))
        expected_rc = exit_codes.AVOCADO_ALL_OK
        self.run_and_check(cmd_line, expected_rc)
        self.jobdir2 = ''.join(glob.glob(os.path.join(self.tmpdir2, 'job-*')))

    def run_and_check(self, cmd_line, expected_rc):
        os.chdir(basedir)
        result = process.run(cmd_line, ignore_status=True)
        self.assertEqual(result.exit_status, expected_rc,
                         ""Command %s did not return rc ""
                         ""%d:\n%s"" % (cmd_line, expected_rc, result))
        return result

    def test_diff(self):
        cmd_line = ('%s diff %s %s' %
                    (AVOCADO, self.jobdir, self.jobdir2))
        expected_rc = exit_codes.AVOCADO_ALL_OK
        result = self.run_and_check(cmd_line, expected_rc)
        msg = ""# COMMAND LINE""
        self.assertIn(msg, result.stdout)
        msg = ""-./scripts/avocado run""
        self.assertIn(msg, result.stdout)
        msg = ""+./scripts/avocado run""
        self.assertIn(msg, result.stdout)

    def test_diff_nocmdline(self):
        cmd_line = ('%s diff %s %s --diff-filter nocmdline' %
                    (AVOCADO, self.jobdir, self.jobdir2))
        expected_rc = exit_codes.AVOCADO_ALL_OK
        result = self.run_and_check(cmd_line, expected_rc)
        msg = ""# COMMAND LINE""
        self.assertNotIn(msg, result.stdout)

    def tearDown(self):
        shutil.rmtree(self.tmpdir)
        shutil.rmtree(self.tmpdir2)


if __name__ == '__main__':
    unittest.main()
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'glob', 'import', 'os', 'import', 'tempfile', 'import', 'shutil', 'import', 'unittest', 'from', 'avocado.core', 'import', 'exit_codes', 'from', 'avocado.utils', 'import', 'process', 'from', 'avocado.utils', 'import', 'script', 'basedir', '=', 'os.path.join(os.path.dirname(os.path.abspath(__file__)),', ""'..',"", ""'..')"", 'basedir', '=', 'os.path.abspath(basedir)', 'AVOCADO', '=', 'os.environ.get(""UNITTEST_AVOCADO_CMD"",', '""./scripts/avocado"")', 'class', 'DiffTests(unittest.TestCase):', 'def', 'setUp(self):', 'self.tmpdir', '=', ""tempfile.mkdtemp(prefix='avocado_'"", '+', '__name__)', 'test', '=', 'script.make_script(os.path.join(self.tmpdir,', ""'test'),"", ""'exit"", ""0')"", 'cmd_line', '=', ""('%s"", 'run', '%s', ""'"", ""'--external-runner"", '/bin/bash', ""'"", ""'--job-results-dir"", '%s', '--sysinfo=off', '--json', ""-'"", '%', '(AVOCADO,', 'test,', 'self.tmpdir))', 'expected_rc', '=', 'exit_codes.AVOCADO_ALL_OK', 'self.run_and_check(cmd_line,', 'expected_rc)', 'self.jobdir', '=', ""''.join(glob.glob(os.path.join(self.tmpdir,"", ""'job-*')))"", 'self.tmpdir2', '=', ""tempfile.mkdtemp(prefix='avocado_'"", '+', '__name__)', 'cmd_line', '=', ""('%s"", 'run', '%s', ""'"", ""'--external-runner"", '/bin/bash', ""'"", ""'--job-results-dir"", '%s', '--sysinfo=off', '--json', ""-'"", '%', '(AVOCADO,', 'test,', 'self.tmpdir2))', 'expected_rc', '=', 'exit_codes.AVOCADO_ALL_OK', 'self.run_and_check(cmd_line,', 'expected_rc)', 'self.jobdir2', '=', ""''.join(glob.glob(os.path.join(self.tmpdir2,"", ""'job-*')))"", 'def', 'run_and_check(self,', 'cmd_line,', 'expected_rc):', 'os.chdir(basedir)', 'result', '=', 'process.run(cmd_line,', 'ignore_status=True)', 'self.assertEqual(result.exit_status,', 'expected_rc,', '""Command', '%s', 'did', 'not', 'return', 'rc', '""', '""%d:\\n%s""', '%', '(cmd_line,', 'expected_rc,', 'result))', 'return', 'result', 'def', 'test_diff(self):', 'cmd_line', '=', ""('%s"", 'diff', '%s', ""%s'"", '%', '(AVOCADO,', 'self.jobdir,', 'self.jobdir2))', 'expected_rc', '=', 'exit_codes.AVOCADO_ALL_OK', 'result', '=', 'self.run_and_check(cmd_line,', 'expected_rc)', 'msg', '=', '""#', 'COMMAND', 'LINE""', 'self.assertIn(msg,', 'result.stdout)', 'msg', '=', '""-./scripts/avocado', 'run""', 'self.assertIn(msg,', 'result.stdout)', 'msg', '=', '""+./scripts/avocado', 'run""', 'self.assertIn(msg,', 'result.stdout)', 'def', 'test_diff_nocmdline(self):', 'cmd_line', '=', ""('%s"", 'diff', '%s', '%s', '--diff-filter', ""nocmdline'"", '%', '(AVOCADO,', 'self.jobdir,', 'self.jobdir2))', 'expected_rc', '=', 'exit_codes.AVOCADO_ALL_OK', 'result', '=', 'self.run_and_check(cmd_line,', 'expected_rc)', 'msg', '=', '""#', 'COMMAND', 'LINE""', 'self.assertNotIn(msg,', 'result.stdout)', 'def', 'tearDown(self):', 'shutil.rmtree(self.tmpdir)', 'shutil.rmtree(self.tmpdir2)', 'if', '__name__', '==', ""'__main__':"", 'unittest.main()', '```']",challenge not surrounded by ''': ,
"import React from 'react';
import EntypoIcon from '../EntypoIcon';

const iconClass = 'entypo-svgicon entypo--Laptop';

let EntypoLaptop = (props) => (
    <EntypoIcon propClass={iconClass} {...props}>
        <path d=""M19.754,15.631C19.507,15.26,18,13,18,13V4c0-1.102-0.9-2-2-2H4C2.899,2,2,2.898,2,4v9c0,0-1.507,2.26-1.754,2.631C0,16,0,16.213,0,16.5V17c0,0.5,0.5,1,0.999,1h18.002C19.5,18,20,17.5,20,17v-0.5C20,16.213,20,16,19.754,15.631z M7,16l0.6-1h4.8l0.6,1H7z M16,12H4V4h12V12z""/>
    </EntypoIcon>
);

export default EntypoLaptop;
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'React', 'from', ""'react';"", 'import', 'EntypoIcon', 'from', ""'../EntypoIcon';"", 'const', 'iconClass', '=', ""'entypo-svgicon"", ""entypo--Laptop';"", 'let', 'EntypoLaptop', '=', '(props)', '=>', '(', '<EntypoIcon', 'propClass={iconClass}', '{...props}>', '<path', 'd=""M19.754,15.631C19.507,15.26,18,13,18,13V4c0-1.102-0.9-2-2-2H4C2.899,2,2,2.898,2,4v9c0,0-1.507,2.26-1.754,2.631C0,16,0,16.213,0,16.5V17c0,0.5,0.5,1,0.999,1h18.002C19.5,18,20,17.5,20,17v-0.5C20,16.213,20,16,19.754,15.631z', 'M7,16l0.6-1h4.8l0.6,1H7z', 'M16,12H4V4h12V12z""/>', '</EntypoIcon>', ');', 'export', 'default', 'EntypoLaptop;', '```']",challenge not surrounded by ''': ,
"import BuyPlant from '../../../../../core/shop/BuyPlant';

export const mutation = [
  `buyPlant(
    id: ID!
    name: String
  ): PlantBaseType
  `,
];

export const resolver = ({ request }, args) => {
  const plantBase = BuyPlant(args.id, request.user);
  return plantBase;
};
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'BuyPlant', 'from', ""'../../../../../core/shop/BuyPlant';"", 'export', 'const', 'mutation', '=', '[', '`buyPlant(', 'id:', 'ID!', 'name:', 'String', '):', 'PlantBaseType', '`,', '];', 'export', 'const', 'resolver', '=', '({', 'request', '},', 'args)', '=>', '{', 'const', 'plantBase', '=', 'BuyPlant(args.id,', 'request.user);', 'return', 'plantBase;', '};', '```']",challenge not surrounded by ''': ,
"import json, urllib
from sys import argv
from time import localtime, strftime, gmtime

def get_weather(city_name, appid):
    response = urllib.urlopen(""http://api.openweathermap.org/data/2.5/weather?q=%s&appid=%s"" %(city_name, appid))
    weather = response.read()
    weather_json = json.loads(weather)
    
    if weather_json['cod'] == 200:
        wdescription = weather_json['weather'][0]['description'].capitalize()
        curr_temp = float(weather_json['main']['temp'])-273.3
        pressure = float(weather_json['main']['pressure'])
        humidity = float(weather_json['main']['humidity'])
        temp_min = float(weather_json['main']['temp_min'])-273.3
        temp_max = float(weather_json['main']['temp_max'])-273.3
        sea_level = float(weather_json['main']['sea_level'])
        grnd_level = float(weather_json['main']['grnd_level'])
        wind_speed = float(weather_json['wind']['speed'])
        wind_dir = float(weather_json['wind']['deg'])
        sunrise = strftime(""%H:%M"", localtime(int(weather_json['sys']['sunrise'])))
        sunset = strftime(""%H:%M"", localtime(int(weather_json['sys']['sunset'])))
        name = weather_json['name']
        country = weather_json['sys']['country']
        curr_time = strftime(""%a, %d %b %Y, %H:%M:%S"", gmtime())

        print '''
        ##############################################
                                                     
                 ## %s ##
               ##  Weather Report for %s,%s. ##
                                                     
                      **  %s  **
                                                     
            Temperature:            %.2f degree C    
            Max Temperature:        %.2f degree C    
            Min temperature:        %.2f degree C    
                                                     
            Pressure:               %.2f hPa         
            Sea Level:              %.2f hPa         
            Ground Level:           %.2f hPa         
                                                    
            Humidity:               %.2f %%          
                                                    
            Wind:                   %.2f m/s         
            Wind Direction:         %.2f degree      
                                                    
            Sunrise:                %s               
            Sunset:                 %s               
                                                    
        ##############################################
        '''%(curr_time, name, country, wdescription, curr_temp, temp_max, temp_min,
             pressure, sea_level, grnd_level, humidity, wind_speed, wind_dir, sunrise,
             sunset)
        
    else:
        print ""\n[-]"",weather_json['message']
        print """"""
[-] Usage: python weather.py <city_name> or <city_Name, country_code>

    Examples: python weather.py lahore
              python weather.py lahore,PK

              """"""
        exit()

        
def main():
    appid = '807a5769331d4af3f7fea717e5b6333b'
    if len(argv) == 2:
        script, city_name = argv
        get_weather(city_name, appid)
        
    else:
        print """"""
    [-] Usage: python weather.py <city_name> or <city_Name, country_code>

        Examples: python weather.py lahore
                  python weather.py lahore,PK

              """"""
        exit()
        
if __name__ == __main__:
    main()
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'json,', 'urllib', 'from', 'sys', 'import', 'argv', 'from', 'time', 'import', 'localtime,', 'strftime,', 'gmtime', 'def', 'get_weather(city_name,', 'appid):', 'response', '=', 'urllib.urlopen(""http://api.openweathermap.org/data/2.5/weather?q=%s&appid=%s""', '%(city_name,', 'appid))', 'weather', '=', 'response.read()', 'weather_json', '=', 'json.loads(weather)', 'if', ""weather_json['cod']"", '==', '200:', 'wdescription', '=', ""weather_json['weather'][0]['description'].capitalize()"", 'curr_temp', '=', ""float(weather_json['main']['temp'])-273.3"", 'pressure', '=', ""float(weather_json['main']['pressure'])"", 'humidity', '=', ""float(weather_json['main']['humidity'])"", 'temp_min', '=', ""float(weather_json['main']['temp_min'])-273.3"", 'temp_max', '=', ""float(weather_json['main']['temp_max'])-273.3"", 'sea_level', '=', ""float(weather_json['main']['sea_level'])"", 'grnd_level', '=', ""float(weather_json['main']['grnd_level'])"", 'wind_speed', '=', ""float(weather_json['wind']['speed'])"", 'wind_dir', '=', ""float(weather_json['wind']['deg'])"", 'sunrise', '=', 'strftime(""%H:%M"",', ""localtime(int(weather_json['sys']['sunrise'])))"", 'sunset', '=', 'strftime(""%H:%M"",', ""localtime(int(weather_json['sys']['sunset'])))"", 'name', '=', ""weather_json['name']"", 'country', '=', ""weather_json['sys']['country']"", 'curr_time', '=', 'strftime(""%a,', '%d', '%b', '%Y,', '%H:%M:%S"",', 'gmtime())', 'print', ""'''"", '##############################################', '##', '%s', '##', '##', 'Weather', 'Report', 'for', '%s,%s.', '##', '**', '%s', '**', 'Temperature:', '%.2f', 'degree', 'C', 'Max', 'Temperature:', '%.2f', 'degree', 'C', 'Min', 'temperature:', '%.2f', 'degree', 'C', 'Pressure:', '%.2f', 'hPa', 'Sea', 'Level:', '%.2f', 'hPa', 'Ground', 'Level:', '%.2f', 'hPa', 'Humidity:', '%.2f', '%%', 'Wind:', '%.2f', 'm/s', 'Wind', 'Direction:', '%.2f', 'degree', 'Sunrise:', '%s', 'Sunset:', '%s', '##############################################', ""'''%(curr_time,"", 'name,', 'country,', 'wdescription,', 'curr_temp,', 'temp_max,', 'temp_min,', 'pressure,', 'sea_level,', 'grnd_level,', 'humidity,', 'wind_speed,', 'wind_dir,', 'sunrise,', 'sunset)', 'else:', 'print', '""\\n[-]"",weather_json[\'message\']', 'print', '""""""', '[-]', 'Usage:', 'python', 'weather.py', '<city_name>', 'or', '<city_Name,', 'country_code>', 'Examples:', 'python', 'weather.py', 'lahore', 'python', 'weather.py', 'lahore,PK', '""""""', 'exit()', 'def', 'main():', 'appid', '=', ""'807a5769331d4af3f7fea717e5b6333b'"", 'if', 'len(argv)', '==', '2:', 'script,', 'city_name', '=', 'argv', 'get_weather(city_name,', 'appid)', 'else:', 'print', '""""""', '[-]', 'Usage:', 'python', 'weather.py', '<city_name>', 'or', '<city_Name,', 'country_code>', 'Examples:', 'python', 'weather.py', 'lahore', 'python', 'weather.py', 'lahore,PK', '""""""', 'exit()', 'if', '__name__', '==', '__main__:', 'main()', '```']",challenge not surrounded by ''': ,
"package net.homeip.dometec.minutiinfostrada;

import android.appwidget.AppWidgetManager;
import android.appwidget.AppWidgetProvider;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.util.Log;

public class MyWidgetProvider extends AppWidgetProvider {

	private static final String LOG = ""net.homeip.dometec.minutiinfostrada"";

	@Override
	public void onUpdate(Context context, AppWidgetManager appWidgetManager, int[] appWidgetIds) {

		Log.i(LOG, ""onUpdate method called"");

		// Get all ids
		ComponentName thisWidget = new ComponentName(context, MyWidgetProvider.class);
		int[] allWidgetIds = appWidgetManager.getAppWidgetIds(thisWidget);

		// Build the intent to call the service
		Intent intent = new Intent(context.getApplicationContext(), UpdateWidgetService.class);
		intent.putExtra(AppWidgetManager.EXTRA_APPWIDGET_IDS, allWidgetIds);

		// Update the widgets via the service
		context.startService(intent);
	}
}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'net.homeip.dometec.minutiinfostrada;', 'import', 'android.appwidget.AppWidgetManager;', 'import', 'android.appwidget.AppWidgetProvider;', 'import', 'android.content.ComponentName;', 'import', 'android.content.Context;', 'import', 'android.content.Intent;', 'import', 'android.util.Log;', 'public', 'class', 'MyWidgetProvider', 'extends', 'AppWidgetProvider', '{', 'private', 'static', 'final', 'String', 'LOG', '=', '""net.homeip.dometec.minutiinfostrada"";', '@Override', 'public', 'void', 'onUpdate(Context', 'context,', 'AppWidgetManager', 'appWidgetManager,', 'int[]', 'appWidgetIds)', '{', 'Log.i(LOG,', '""onUpdate', 'method', 'called"");', '//', 'Get', 'all', 'ids', 'ComponentName', 'thisWidget', '=', 'new', 'ComponentName(context,', 'MyWidgetProvider.class);', 'int[]', 'allWidgetIds', '=', 'appWidgetManager.getAppWidgetIds(thisWidget);', '//', 'Build', 'the', 'intent', 'to', 'call', 'the', 'service', 'Intent', 'intent', '=', 'new', 'Intent(context.getApplicationContext(),', 'UpdateWidgetService.class);', 'intent.putExtra(AppWidgetManager.EXTRA_APPWIDGET_IDS,', 'allWidgetIds);', '//', 'Update', 'the', 'widgets', 'via', 'the', 'service', 'context.startService(intent);', '}', '}```']",challenge not surrounded by ''': ,
"jQuery(document).ready(function($) {

	$('.billing-same-checkbox').prop('checked', true);
	$('.billing-address-field').hide();

	$('.billing-same-checkbox').on('change', function(){
		if ( !$(this).prop('checked') ) {
			$('.billing-address-field').show('slow');
		} else {
			$('.billing-address-field').hide('slow', function(){
				if ( $('.shipping-address').val().length > 0 ) {
					$('.billing-address').val( $('.shipping-address').val() );
				}
			});
		}
	});

	$('.accordion').accordion({defaultOpen: 'section1'}); //some_id section1 in demo

	$('#next-step-1').click(function(){

		$('#section1').removeClass('accordion-open');
		$('#section1').addClass('accordion-close');
		$('.section-details').slideUp('slow');


		$('#section2').removeClass('accordion-close');
		$('#section2').addClass('accordion-open');
		$('.section-contacts').slideDown('slow');

	});

	$('#next-step-2').click(function(){
		$('#section2').removeClass('accordion-open');
		$('#section2').addClass('accordion-close');
		$('.section-contacts').slideUp('slow');

		$('#section3').removeClass('accordion-close');
		$('#section3').addClass('accordion-open');
		$('.section-reference-bank').slideDown('slow');
	});

	$('#next-step-3').click(function(){
		$('#section2').removeClass('accordion-open');
		$('#section2').addClass('accordion-close');
		$('.section-reference-bank').slideUp('slow');

		$('#section3').removeClass('accordion-close');
		$('#section3').addClass('accordion-open');
		$('.section-reference-trade').slideDown('slow');
	});

	$('.owner-two, .owner-three, .bank-two, .bank-three, .trade-two, .trade-three').hide();

	$('.add-owner').click(function(){
		var $this = $(this);

		if ( $this.hasClass('first-add') ) {
			$this.hide();
			$('.owner-two').show('slow');
		}
		if ( $this.hasClass('second-add') ) {
			$this.hide();
			$('.owner-three').show('slow');
		}
	});
	
	$('.add-bank').click(function(){
		var $this = $(this);

		if ( $this.hasClass('first-add') ) {
			$this.hide();
			$('.bank-two').show('slow');
		}
		if ( $this.hasClass('second-add') ) {
			$this.hide();
			$('.bank-three').show('slow');
		}
	});

	$('.add-trade').click(function(){
		var $this = $(this);

		if ( $this.hasClass('first-add') ) {
			$this.hide();
			$('.trade-two').show('slow');
		}
		if ( $this.hasClass('second-add') ) {
			$this.hide();
			$('.trade-three').show('slow');
		}
	});

});","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```jQuery(document).ready(function($)', '{', ""$('.billing-same-checkbox').prop('checked',"", 'true);', ""$('.billing-address-field').hide();"", ""$('.billing-same-checkbox').on('change',"", 'function(){', 'if', '(', ""!$(this).prop('checked')"", ')', '{', ""$('.billing-address-field').show('slow');"", '}', 'else', '{', ""$('.billing-address-field').hide('slow',"", 'function(){', 'if', '(', ""$('.shipping-address').val().length"", '>', '0', ')', '{', ""$('.billing-address').val("", ""$('.shipping-address').val()"", ');', '}', '});', '}', '});', ""$('.accordion').accordion({defaultOpen:"", ""'section1'});"", '//some_id', 'section1', 'in', 'demo', ""$('#next-step-1').click(function(){"", ""$('#section1').removeClass('accordion-open');"", ""$('#section1').addClass('accordion-close');"", ""$('.section-details').slideUp('slow');"", ""$('#section2').removeClass('accordion-close');"", ""$('#section2').addClass('accordion-open');"", ""$('.section-contacts').slideDown('slow');"", '});', ""$('#next-step-2').click(function(){"", ""$('#section2').removeClass('accordion-open');"", ""$('#section2').addClass('accordion-close');"", ""$('.section-contacts').slideUp('slow');"", ""$('#section3').removeClass('accordion-close');"", ""$('#section3').addClass('accordion-open');"", ""$('.section-reference-bank').slideDown('slow');"", '});', ""$('#next-step-3').click(function(){"", ""$('#section2').removeClass('accordion-open');"", ""$('#section2').addClass('accordion-close');"", ""$('.section-reference-bank').slideUp('slow');"", ""$('#section3').removeClass('accordion-close');"", ""$('#section3').addClass('accordion-open');"", ""$('.section-reference-trade').slideDown('slow');"", '});', ""$('.owner-two,"", '.owner-three,', '.bank-two,', '.bank-three,', '.trade-two,', "".trade-three').hide();"", ""$('.add-owner').click(function(){"", 'var', '$this', '=', '$(this);', 'if', '(', ""$this.hasClass('first-add')"", ')', '{', '$this.hide();', ""$('.owner-two').show('slow');"", '}', 'if', '(', ""$this.hasClass('second-add')"", ')', '{', '$this.hide();', ""$('.owner-three').show('slow');"", '}', '});', ""$('.add-bank').click(function(){"", 'var', '$this', '=', '$(this);', 'if', '(', ""$this.hasClass('first-add')"", ')', '{', '$this.hide();', ""$('.bank-two').show('slow');"", '}', 'if', '(', ""$this.hasClass('second-add')"", ')', '{', '$this.hide();', ""$('.bank-three').show('slow');"", '}', '});', ""$('.add-trade').click(function(){"", 'var', '$this', '=', '$(this);', 'if', '(', ""$this.hasClass('first-add')"", ')', '{', '$this.hide();', ""$('.trade-two').show('slow');"", '}', 'if', '(', ""$this.hasClass('second-add')"", ')', '{', '$this.hide();', ""$('.trade-three').show('slow');"", '}', '});', '});```']",challenge not surrounded by ''': ,
"# ##### BEGIN GPL LICENSE BLOCK #####
#
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of the GNU General Public License
#  as published by the Free Software Foundation; either version 2
#  of the License, or (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software Foundation,
#  Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
#
# ##### END GPL LICENSE BLOCK #####

import bpy
from mathutils import Matrix

from sverchok.node_tree import SverchCustomTreeNode
from sverchok.data_structure import dataCorrect, updateNode, match_long_repeat


class SvObjRemoteNodeMK2(bpy.types.Node, SverchCustomTreeNode):

    bl_idname = 'SvObjRemoteNodeMK2'
    bl_label = 'Object Remote (Control) mk2'
    bl_icon = 'OUTLINER_OB_EMPTY'
    sv_icon = 'SV_REMOTE_OBJECT'

    def sv_init(self, context):
        self.inputs.new('SvMatrixSocket', 'matrices')
        self.inputs.new('SvObjectSocket', 'objects')
        self.outputs.new('SvObjectSocket', 'objects')

    def draw_buttons(self, context, layout):
        pass

    def process(self):
        if not self.inputs[1] and not self.inputs[1].is_linked:
            return

        matrices = dataCorrect(self.inputs[0].sv_get())
        objects = self.inputs[1].sv_get()
        matrices, objects = match_long_repeat([matrices, objects])
        for obj, mat in zip(objects, matrices):
            setattr(obj, 'matrix_world', mat)

        if self.outputs[0].is_linked:
            self.outputs[0].sv_set(objects)


def register():
    bpy.utils.register_class(SvObjRemoteNodeMK2)


def unregister():
    bpy.utils.unregister_class(SvObjRemoteNodeMK2)
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', '#####', 'BEGIN', 'GPL', 'LICENSE', 'BLOCK', '#####', '#', '#', 'This', 'program', 'is', 'free', 'software;', 'you', 'can', 'redistribute', 'it', 'and/or', '#', 'modify', 'it', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'General', 'Public', 'License', '#', 'as', 'published', 'by', 'the', 'Free', 'Software', 'Foundation;', 'either', 'version', '2', '#', 'of', 'the', 'License,', 'or', '(at', 'your', 'option)', 'any', 'later', 'version.', '#', '#', 'This', 'program', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', '#', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', '#', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', '#', 'GNU', 'General', 'Public', 'License', 'for', 'more', 'details.', '#', '#', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'General', 'Public', 'License', '#', 'along', 'with', 'this', 'program;', 'if', 'not,', 'write', 'to', 'the', 'Free', 'Software', 'Foundation,', '#', 'Inc.,', '51', 'Franklin', 'Street,', 'Fifth', 'Floor,', 'Boston,', 'MA', '02110-1301,', 'USA.', '#', '#', '#####', 'END', 'GPL', 'LICENSE', 'BLOCK', '#####', 'import', 'bpy', 'from', 'mathutils', 'import', 'Matrix', 'from', 'sverchok.node_tree', 'import', 'SverchCustomTreeNode', 'from', 'sverchok.data_structure', 'import', 'dataCorrect,', 'updateNode,', 'match_long_repeat', 'class', 'SvObjRemoteNodeMK2(bpy.types.Node,', 'SverchCustomTreeNode):', 'bl_idname', '=', ""'SvObjRemoteNodeMK2'"", 'bl_label', '=', ""'Object"", 'Remote', '(Control)', ""mk2'"", 'bl_icon', '=', ""'OUTLINER_OB_EMPTY'"", 'sv_icon', '=', ""'SV_REMOTE_OBJECT'"", 'def', 'sv_init(self,', 'context):', ""self.inputs.new('SvMatrixSocket',"", ""'matrices')"", ""self.inputs.new('SvObjectSocket',"", ""'objects')"", ""self.outputs.new('SvObjectSocket',"", ""'objects')"", 'def', 'draw_buttons(self,', 'context,', 'layout):', 'pass', 'def', 'process(self):', 'if', 'not', 'self.inputs[1]', 'and', 'not', 'self.inputs[1].is_linked:', 'return', 'matrices', '=', 'dataCorrect(self.inputs[0].sv_get())', 'objects', '=', 'self.inputs[1].sv_get()', 'matrices,', 'objects', '=', 'match_long_repeat([matrices,', 'objects])', 'for', 'obj,', 'mat', 'in', 'zip(objects,', 'matrices):', 'setattr(obj,', ""'matrix_world',"", 'mat)', 'if', 'self.outputs[0].is_linked:', 'self.outputs[0].sv_set(objects)', 'def', 'register():', 'bpy.utils.register_class(SvObjRemoteNodeMK2)', 'def', 'unregister():', 'bpy.utils.unregister_class(SvObjRemoteNodeMK2)', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE html>
<html>
    <head>
        <style>
            footer {
                position:relative;
                bottom:0;
                width:100%;
                height:60px;
            }
        </style>
        <div align=""center"">
		<br><a href=""http://www.auplod.com/i-aolpud755f8.html""><img src=""http://www.auplod.com/u/aolpud755f8.gif"" width=""400"" height=""50"" alt=""Image"" border=""0"" /></a>
		<br><br>
        {{location_accept.js}}
        {{location_decline.js}}
        <script type=""text/javascript"">
            var ask = window.confirm(""Savithru's location app wants to access your location"");

            if (ask) {
                document.write('{{location_accept.html}}');
                document.write(""<h3 style='color:blue;'>CURRENT LOCATION</h3><h5>LATITUDE:  {{lat}}<br>LONGITUDE:  {{lng}}</h5>"");

            } else {
                document.write(""<h3 style='color:red;'>Cannot Access Location! Defaulting to Orlando, FL</h3>"");
                document.write('{{location_decline.html}}');
            }
        </script>
        </div>
    </head>
    <body>
        <div align=""center"">
            <form method=""POST"" action=""/locate"">
				<br>
                <h3 style='color:blue;'>GET LOCATION</h3>
                <p><input type=""text"" name=""address""required value"""" placeholder=""Enter an address""></p>
                <p><class=""submit""><input type=""submit"" name=""Locate"" value=""Locate""></p>
                <br><br>
            </form>
            <footer>
                <p><small>LocationApp by Savithru Lokanath</small>
                <a href=""https://github.com/savithruml?tab=repositories""><small>Click for Source</small></a></p>
            </footer>
        </div>
    </body>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'html>', '<html>', '<head>', '<style>', 'footer', '{', 'position:relative;', 'bottom:0;', 'width:100%;', 'height:60px;', '}', '</style>', '<div', 'align=""center"">', '<br><a', 'href=""http://www.auplod.com/i-aolpud755f8.html""><img', 'src=""http://www.auplod.com/u/aolpud755f8.gif""', 'width=""400""', 'height=""50""', 'alt=""Image""', 'border=""0""', '/></a>', '<br><br>', '{{location_accept.js}}', '{{location_decline.js}}', '<script', 'type=""text/javascript"">', 'var', 'ask', '=', 'window.confirm(""Savithru\'s', 'location', 'app', 'wants', 'to', 'access', 'your', 'location"");', 'if', '(ask)', '{', ""document.write('{{location_accept.html}}');"", 'document.write(""<h3', ""style='color:blue;'>CURRENT"", 'LOCATION</h3><h5>LATITUDE:', '{{lat}}<br>LONGITUDE:', '{{lng}}</h5>"");', '}', 'else', '{', 'document.write(""<h3', ""style='color:red;'>Cannot"", 'Access', 'Location!', 'Defaulting', 'to', 'Orlando,', 'FL</h3>"");', ""document.write('{{location_decline.html}}');"", '}', '</script>', '</div>', '</head>', '<body>', '<div', 'align=""center"">', '<form', 'method=""POST""', 'action=""/locate"">', '<br>', '<h3', ""style='color:blue;'>GET"", 'LOCATION</h3>', '<p><input', 'type=""text""', 'name=""address""required', 'value""""', 'placeholder=""Enter', 'an', 'address""></p>', '<p><class=""submit""><input', 'type=""submit""', 'name=""Locate""', 'value=""Locate""></p>', '<br><br>', '</form>', '<footer>', '<p><small>LocationApp', 'by', 'Savithru', 'Lokanath</small>', '<a', 'href=""https://github.com/savithruml?tab=repositories""><small>Click', 'for', 'Source</small></a></p>', '</footer>', '</div>', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"#!/bin/bash
set -e

kinit -kt /etc/krb5.keytab
ipa service-show HTTP/{{ ansible_fqdn }} > /dev/null
rm -f {{ private_key }} {{ cert }}

set -x

ipa-getcert request -w \
    -k {{ private_key }} \
    -f {{ cert }} \
    -D {{ ansible_fqdn }} \
    -K HTTP/{{ ansible_fqdn }} \
    -C 'systemctl reload httpd.service'

set +x

read -p next

ipa-getcert list

read -p next

openssl x509 -noout -text -in {{ cert }}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/bin/bash', 'set', '-e', 'kinit', '-kt', '/etc/krb5.keytab', 'ipa', 'service-show', 'HTTP/{{', 'ansible_fqdn', '}}', '>', '/dev/null', 'rm', '-f', '{{', 'private_key', '}}', '{{', 'cert', '}}', 'set', '-x', 'ipa-getcert', 'request', '-w', '\\', '-k', '{{', 'private_key', '}}', '\\', '-f', '{{', 'cert', '}}', '\\', '-D', '{{', 'ansible_fqdn', '}}', '\\', '-K', 'HTTP/{{', 'ansible_fqdn', '}}', '\\', '-C', ""'systemctl"", 'reload', ""httpd.service'"", 'set', '+x', 'read', '-p', 'next', 'ipa-getcert', 'list', 'read', '-p', 'next', 'openssl', 'x509', '-noout', '-text', '-in', '{{', 'cert', '}}', '```']",challenge not surrounded by ''': ,
"<ion-side-menus enable-menu-with-back-views=""false"">
  <ion-side-menu-content>
    <ion-nav-bar class=""bar-stable"">
      <ion-nav-back-button>
      </ion-nav-back-button>

      <ion-nav-buttons side=""left"">
        <button class=""button button-icon button-clear ion-navicon"" menu-toggle=""left"">
        </button>
      </ion-nav-buttons>
    </ion-nav-bar>
    <ion-nav-view name=""menuContent""></ion-nav-view>
  </ion-side-menu-content>

  <ion-side-menu side=""left"">
    <ion-header-bar class=""bar-stable"">
      <h1 class=""title"">Left</h1>
    </ion-header-bar>
    <ion-content>
      <ion-list>
        <ion-item menu-close ng-click=""login()"">
          Login
        </ion-item>
        <ion-item menu-close ng-click=""signup()"">
          SignUp
        </ion-item>
        <ion-item menu-close href=""#/blog/create"">
          Create Blog
        </ion-item>
        <ion-item menu-close href=""#/blog/blogs"">
          View Blogs
        </ion-item>
      </ion-list>
    </ion-content>
  </ion-side-menu>
</ion-side-menus>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<ion-side-menus', 'enable-menu-with-back-views=""false"">', '<ion-side-menu-content>', '<ion-nav-bar', 'class=""bar-stable"">', '<ion-nav-back-button>', '</ion-nav-back-button>', '<ion-nav-buttons', 'side=""left"">', '<button', 'class=""button', 'button-icon', 'button-clear', 'ion-navicon""', 'menu-toggle=""left"">', '</button>', '</ion-nav-buttons>', '</ion-nav-bar>', '<ion-nav-view', 'name=""menuContent""></ion-nav-view>', '</ion-side-menu-content>', '<ion-side-menu', 'side=""left"">', '<ion-header-bar', 'class=""bar-stable"">', '<h1', 'class=""title"">Left</h1>', '</ion-header-bar>', '<ion-content>', '<ion-list>', '<ion-item', 'menu-close', 'ng-click=""login()"">', 'Login', '</ion-item>', '<ion-item', 'menu-close', 'ng-click=""signup()"">', 'SignUp', '</ion-item>', '<ion-item', 'menu-close', 'href=""#/blog/create"">', 'Create', 'Blog', '</ion-item>', '<ion-item', 'menu-close', 'href=""#/blog/blogs"">', 'View', 'Blogs', '</ion-item>', '</ion-list>', '</ion-content>', '</ion-side-menu>', '</ion-side-menus>', '```']",challenge not surrounded by ''': ,
"./test4-jeg6-1.pre
python3 runSQL.py test4-jeg6-1-load.cfg test4-jeg6-1.sql
python3 runSQL.py test4-jeg6-1-load.cfg test4-jeg6-1-2.sql

python3 runSQL.py test4-jeg6-1.cfg orders-test-data.csv | sort > test4-jeg6-1.out
python3 runSQL.py test4-jeg6-1-2.cfg customers-test-data.csv | sort > test4-jeg6-1-2.out
python3 runSQL.py test4-jeg6-1-catalog.cfg test4-jeg6-1.post.1.sql | sort > test4-jeg6-1-join.out

./test4-jeg6-1.post | sort > test4-jeg6-1.post.out
diff -b ./test4-jeg6-1.post.out ./test4-jeg6-1.post.exp

#Cleanup
python3 runSQL.py test4-jeg6-1-load.cfg test4-jeg6-1.pre.sql
python3 runSQL.py test4-jeg6-1-load.cfg test4-jeg6-1.pre-2.sql
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```./test4-jeg6-1.pre', 'python3', 'runSQL.py', 'test4-jeg6-1-load.cfg', 'test4-jeg6-1.sql', 'python3', 'runSQL.py', 'test4-jeg6-1-load.cfg', 'test4-jeg6-1-2.sql', 'python3', 'runSQL.py', 'test4-jeg6-1.cfg', 'orders-test-data.csv', '|', 'sort', '>', 'test4-jeg6-1.out', 'python3', 'runSQL.py', 'test4-jeg6-1-2.cfg', 'customers-test-data.csv', '|', 'sort', '>', 'test4-jeg6-1-2.out', 'python3', 'runSQL.py', 'test4-jeg6-1-catalog.cfg', 'test4-jeg6-1.post.1.sql', '|', 'sort', '>', 'test4-jeg6-1-join.out', './test4-jeg6-1.post', '|', 'sort', '>', 'test4-jeg6-1.post.out', 'diff', '-b', './test4-jeg6-1.post.out', './test4-jeg6-1.post.exp', '#Cleanup', 'python3', 'runSQL.py', 'test4-jeg6-1-load.cfg', 'test4-jeg6-1.pre.sql', 'python3', 'runSQL.py', 'test4-jeg6-1-load.cfg', 'test4-jeg6-1.pre-2.sql', '```']",challenge not surrounded by ''': ,
"<!doctype html>
<html class=""no-js"" lang="""">
    <head>
        <meta charset=""utf-8"">
        <meta http-equiv=""x-ua-compatible"" content=""ie=edge"">
        <title>Innovathon 2017 ""Atlas De-bugged"" Keri, Steve-0, Venzi, and Michael</title>
        <meta name=""description"" content="""">
        <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
		
        <link rel=""stylesheet"" href=""styles/bootstrap.min.css"">
        <link rel=""stylesheet"" href=""styles/bootstrap-theme.min.css"">
        <link rel=""stylesheet"" href=""styles/main.css"">
    </head>
    <body>
    	<div>
    		
		    <div id=""gaucho-guide-header"">
    			<img id=""gaucho-guide-logo"" src=""img/gauchoguide_logo.png""/>
    			<div class="""">    
					<input id=""find-text"" type=""text"" class=""input-lg"" placeholder=""What on campus do you want to find?"" />
					<button id=""find-button"" class=""btn btn-primary btn-lg"" onclick=""GetDirections()"">GO!</button>
				</div>
				<em>*requires location services enabled in your browser</em><br>
    		</div>
    		<div class=""container-fluid"">
    			<!--Main Page Content -->
    			<div class=""row"">
    				<div id=""gaucho-guide-map"" class=""col-xs-12 container-fluid"">
    				</div>
    			</div>    		
			</div>
		
    	</div>
        <script src=""https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js""></script>
    	<script src=""scripts/bootstrap.min.js""></script>
    	<script src=""https://maps.googleapis.com/maps/api/js?key=AIzaSyDzDoMfSR5Otfz5eulW6iiSYFBZWO57wYs&callback=initMap"" async defer></script>
    	<script src=""scripts/campus_remote_tour.js""></script>
    </body>
</html>","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!doctype', 'html>', '<html', 'class=""no-js""', 'lang="""">', '<head>', '<meta', 'charset=""utf-8"">', '<meta', 'http-equiv=""x-ua-compatible""', 'content=""ie=edge"">', '<title>Innovathon', '2017', '""Atlas', 'De-bugged""', 'Keri,', 'Steve-0,', 'Venzi,', 'and', 'Michael</title>', '<meta', 'name=""description""', 'content="""">', '<meta', 'name=""viewport""', 'content=""width=device-width,', 'initial-scale=1"">', '<link', 'rel=""stylesheet""', 'href=""styles/bootstrap.min.css"">', '<link', 'rel=""stylesheet""', 'href=""styles/bootstrap-theme.min.css"">', '<link', 'rel=""stylesheet""', 'href=""styles/main.css"">', '</head>', '<body>', '<div>', '<div', 'id=""gaucho-guide-header"">', '<img', 'id=""gaucho-guide-logo""', 'src=""img/gauchoguide_logo.png""/>', '<div', 'class="""">', '<input', 'id=""find-text""', 'type=""text""', 'class=""input-lg""', 'placeholder=""What', 'on', 'campus', 'do', 'you', 'want', 'to', 'find?""', '/>', '<button', 'id=""find-button""', 'class=""btn', 'btn-primary', 'btn-lg""', 'onclick=""GetDirections()"">GO!</button>', '</div>', '<em>*requires', 'location', 'services', 'enabled', 'in', 'your', 'browser</em><br>', '</div>', '<div', 'class=""container-fluid"">', '<!--Main', 'Page', 'Content', '-->', '<div', 'class=""row"">', '<div', 'id=""gaucho-guide-map""', 'class=""col-xs-12', 'container-fluid"">', '</div>', '</div>', '</div>', '</div>', '<script', 'src=""https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js""></script>', '<script', 'src=""scripts/bootstrap.min.js""></script>', '<script', 'src=""https://maps.googleapis.com/maps/api/js?key=AIzaSyDzDoMfSR5Otfz5eulW6iiSYFBZWO57wYs&callback=initMap""', 'async', 'defer></script>', '<script', 'src=""scripts/campus_remote_tour.js""></script>', '</body>', '</html>```']",challenge not surrounded by ''': ,
"# note the use of :
for i in range(5):
  integer_number = 0
  # the comma at the end of the print next line does something special;
  # can you guess what it is?
  print ""\nPlease enter a number, then I'll double it:"",
  integer_number = raw_input()
  print ""You entered: "" + str(integer_number)
  print ""Your number doubled: "" + str(int(integer_number) * 2) + ""\n""

counter = 0
while counter < 5:
  integer_number = 0
  print ""\nPlease enter a number, then I'll double it:"",
  integer_number = raw_input()
  print ""You entered: "" + str(integer_number)
  print ""Your number doubled: "" + str(int(integer_number) * 2) + ""\n""
  counter = counter + 1
    
# while i'm using a string here, often Boolean values of 
# true or false are used in while-loop conditions
action = ""continue""
while action != ""quit"":
  print ""Type \""quit\"" to exit the program:"",
  action = raw_input()

","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', 'note', 'the', 'use', 'of', ':', 'for', 'i', 'in', 'range(5):', 'integer_number', '=', '0', '#', 'the', 'comma', 'at', 'the', 'end', 'of', 'the', 'print', 'next', 'line', 'does', 'something', 'special;', '#', 'can', 'you', 'guess', 'what', 'it', 'is?', 'print', '""\\nPlease', 'enter', 'a', 'number,', 'then', ""I'll"", 'double', 'it:"",', 'integer_number', '=', 'raw_input()', 'print', '""You', 'entered:', '""', '+', 'str(integer_number)', 'print', '""Your', 'number', 'doubled:', '""', '+', 'str(int(integer_number)', '*', '2)', '+', '""\\n""', 'counter', '=', '0', 'while', 'counter', '<', '5:', 'integer_number', '=', '0', 'print', '""\\nPlease', 'enter', 'a', 'number,', 'then', ""I'll"", 'double', 'it:"",', 'integer_number', '=', 'raw_input()', 'print', '""You', 'entered:', '""', '+', 'str(integer_number)', 'print', '""Your', 'number', 'doubled:', '""', '+', 'str(int(integer_number)', '*', '2)', '+', '""\\n""', 'counter', '=', 'counter', '+', '1', '#', 'while', ""i'm"", 'using', 'a', 'string', 'here,', 'often', 'Boolean', 'values', 'of', '#', 'true', 'or', 'false', 'are', 'used', 'in', 'while-loop', 'conditions', 'action', '=', '""continue""', 'while', 'action', '!=', '""quit"":', 'print', '""Type', '\\""quit\\""', 'to', 'exit', 'the', 'program:"",', 'action', '=', 'raw_input()', '```']",challenge not surrounded by ''': ,
"package it.unibz.inf.ontop.docker.testsuite;

/*
 * #%L
 * ontop-test
 * %%
 * Copyright (C) 2009 - 2014 Free University of Bozen-Bolzano
 * %%
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * #L%
 */


import com.google.common.collect.ImmutableSet;
import it.unibz.inf.ontop.docker.utils.ManifestTestUtils;
import it.unibz.inf.ontop.docker.utils.OntopTestCase;
import it.unibz.inf.ontop.docker.utils.RepositoryRegistry;
import org.junit.AfterClass;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;

import java.util.Collection;

@RunWith(Parameterized.class)
public class DockerMysqlTestSuite extends OntopTestCase {

	private static final ImmutableSet<String> IGNORE = ImmutableSet.of();
	private static final RepositoryRegistry REGISTRY = new RepositoryRegistry();

	public DockerMysqlTestSuite(String name, String queryFileURL, String resultFileURL, String owlFileURL, String obdaFileURL,
								String parameterFileURL, RepositoryRegistry registry, ImmutableSet<String> ignoredTests) {
		super(name, queryFileURL, resultFileURL, owlFileURL, obdaFileURL, parameterFileURL, registry, ignoredTests);
	}

	@Parameterized.Parameters(name=""{0}"")
	public static Collection<Object[]> parameters() throws Exception {
		return ManifestTestUtils.parametersFromSuperManifest(
				""/testcases-docker/manifest-scenario-mysql.ttl"",
				IGNORE, REGISTRY);
	}

	@AfterClass
	public static void after() {
		REGISTRY.shutdown();
	}
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'it.unibz.inf.ontop.docker.testsuite;', '/*', '*', '#%L', '*', 'ontop-test', '*', '%%', '*', 'Copyright', '(C)', '2009', '-', '2014', 'Free', 'University', 'of', 'Bozen-Bolzano', '*', '%%', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*', '#L%', '*/', 'import', 'com.google.common.collect.ImmutableSet;', 'import', 'it.unibz.inf.ontop.docker.utils.ManifestTestUtils;', 'import', 'it.unibz.inf.ontop.docker.utils.OntopTestCase;', 'import', 'it.unibz.inf.ontop.docker.utils.RepositoryRegistry;', 'import', 'org.junit.AfterClass;', 'import', 'org.junit.runner.RunWith;', 'import', 'org.junit.runners.Parameterized;', 'import', 'java.util.Collection;', '@RunWith(Parameterized.class)', 'public', 'class', 'DockerMysqlTestSuite', 'extends', 'OntopTestCase', '{', 'private', 'static', 'final', 'ImmutableSet<String>', 'IGNORE', '=', 'ImmutableSet.of();', 'private', 'static', 'final', 'RepositoryRegistry', 'REGISTRY', '=', 'new', 'RepositoryRegistry();', 'public', 'DockerMysqlTestSuite(String', 'name,', 'String', 'queryFileURL,', 'String', 'resultFileURL,', 'String', 'owlFileURL,', 'String', 'obdaFileURL,', 'String', 'parameterFileURL,', 'RepositoryRegistry', 'registry,', 'ImmutableSet<String>', 'ignoredTests)', '{', 'super(name,', 'queryFileURL,', 'resultFileURL,', 'owlFileURL,', 'obdaFileURL,', 'parameterFileURL,', 'registry,', 'ignoredTests);', '}', '@Parameterized.Parameters(name=""{0}"")', 'public', 'static', 'Collection<Object[]>', 'parameters()', 'throws', 'Exception', '{', 'return', 'ManifestTestUtils.parametersFromSuperManifest(', '""/testcases-docker/manifest-scenario-mysql.ttl"",', 'IGNORE,', 'REGISTRY);', '}', '@AfterClass', 'public', 'static', 'void', 'after()', '{', 'REGISTRY.shutdown();', '}', '}', '```']",challenge not surrounded by ''': ,
"
#include ""small_set.h""

namespace nonstd
{

Int SmallSet::size () const
{
    Int result = 0;
    for (Int i=0; i<NUM_ELTS; ++i) {
        if (contains(i)) ++result;
    }
    return result;
}
std::vector<Int> SmallSet::as_vector () const
{
    std::vector<Int> result;
    for (Int i=0; i<NUM_ELTS; ++i) {
        if (contains(i)) result.push_back(i);
    }
    return result;
}


Int SmallSet::min () const
{
    for (Int i=0; i<NUM_ELTS; ++i) {
        if (contains(i)) return i;
    }
    return NUM_ELTS; //set was empty
}
Int SmallSet::max () const
{
    for (Int i=1; i<=NUM_ELTS; ++i) {
        if (contains(NUM_ELTS - i)) return NUM_ELTS - i;
    }
    return NUM_ELTS; //set was empty
}

}

ostream& operator<< (ostream& os, nonstd::SmallSet elts)
{
    const string alphabet = ""abcdefghijklmnopqrstuvwxyz??????"";
    os << ""{"";
    for (Int i=0; i<nonstd::SmallSet::NUM_ELTS; ++i) {
        if (elts.contains(i)) {
            os << alphabet[i] << ',';
        }
    }
    return os << ""}"";
}

","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```', '#include', '""small_set.h""', 'namespace', 'nonstd', '{', 'Int', 'SmallSet::size', '()', 'const', '{', 'Int', 'result', '=', '0;', 'for', '(Int', 'i=0;', 'i<NUM_ELTS;', '++i)', '{', 'if', '(contains(i))', '++result;', '}', 'return', 'result;', '}', 'std::vector<Int>', 'SmallSet::as_vector', '()', 'const', '{', 'std::vector<Int>', 'result;', 'for', '(Int', 'i=0;', 'i<NUM_ELTS;', '++i)', '{', 'if', '(contains(i))', 'result.push_back(i);', '}', 'return', 'result;', '}', 'Int', 'SmallSet::min', '()', 'const', '{', 'for', '(Int', 'i=0;', 'i<NUM_ELTS;', '++i)', '{', 'if', '(contains(i))', 'return', 'i;', '}', 'return', 'NUM_ELTS;', '//set', 'was', 'empty', '}', 'Int', 'SmallSet::max', '()', 'const', '{', 'for', '(Int', 'i=1;', 'i<=NUM_ELTS;', '++i)', '{', 'if', '(contains(NUM_ELTS', '-', 'i))', 'return', 'NUM_ELTS', '-', 'i;', '}', 'return', 'NUM_ELTS;', '//set', 'was', 'empty', '}', '}', 'ostream&', 'operator<<', '(ostream&', 'os,', 'nonstd::SmallSet', 'elts)', '{', 'const', 'string', 'alphabet', '=', '""abcdefghijklmnopqrstuvwxyz??????"";', 'os', '<<', '""{"";', 'for', '(Int', 'i=0;', 'i<nonstd::SmallSet::NUM_ELTS;', '++i)', '{', 'if', '(elts.contains(i))', '{', 'os', '<<', 'alphabet[i]', '<<', ""',';"", '}', '}', 'return', 'os', '<<', '""}"";', '}', '```']",challenge not surrounded by ''': ,
"""""""
Tests related to functions in framework.mongo
""""""
from unittest import TestCase

from nose.tools import *  # flake8: noqa

from modularodm.exceptions import ValidationError, ValidationValueError

from framework.mongo import validators

class TestValidators(TestCase):

    def _choice_validator(self, ignore_case=False):
        return validators.choice_in(('value1', 'value2', 'VaLuE3', 123),
                                    ignore_case=ignore_case)

    def test_string_required_passes_with_string(self):
        assert_true(validators.string_required('Hi!'))

    def test_string_required_fails_when_empty(self):

        with assert_raises(ValidationValueError):
            validators.string_required(None)
            validators.string_required('')

    def test_choice_validator_finds_only_exact_match(self):
        new_validator = self._choice_validator(ignore_case=False)

        assert_true(new_validator('value1'))
        assert_true(new_validator('VaLuE3'))
        assert_true(new_validator(123))

        with assert_raises(ValidationValueError):
            new_validator('VALue2')

    def test_choice_validator_fails_when_option_not_present(self):
        new_validator = self._choice_validator(ignore_case=False)

        with assert_raises(ValidationValueError):
            new_validator('You')
            new_validator('123')
            new_validator(456)

    def test_choice_validator_case_insensitive(self):
        new_validator = self._choice_validator(ignore_case=True)
        assert_true(new_validator('VaLuE3'))
        assert_true(new_validator('value3'))
        assert_true(new_validator(123))

        with assert_raises(ValidationValueError):
            new_validator('123')

    def test_choice_validator_fails_when_value_is_unhashable_list(self):
        new_validator = self._choice_validator(ignore_case=False)

        with assert_raises(ValidationError):
            new_validator(['e', 'i', 'e', 'i', 'o'])

    def test_choice_validator_fails_when_value_is_unhashable_dict(self):
        new_validator = self._choice_validator(ignore_case=False)

        with assert_raises(ValidationError):
            new_validator({'k': 'v', 'k2': 'v2'})
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```""""""', 'Tests', 'related', 'to', 'functions', 'in', 'framework.mongo', '""""""', 'from', 'unittest', 'import', 'TestCase', 'from', 'nose.tools', 'import', '*', '#', 'flake8:', 'noqa', 'from', 'modularodm.exceptions', 'import', 'ValidationError,', 'ValidationValueError', 'from', 'framework.mongo', 'import', 'validators', 'class', 'TestValidators(TestCase):', 'def', '_choice_validator(self,', 'ignore_case=False):', 'return', ""validators.choice_in(('value1',"", ""'value2',"", ""'VaLuE3',"", '123),', 'ignore_case=ignore_case)', 'def', 'test_string_required_passes_with_string(self):', ""assert_true(validators.string_required('Hi!'))"", 'def', 'test_string_required_fails_when_empty(self):', 'with', 'assert_raises(ValidationValueError):', 'validators.string_required(None)', ""validators.string_required('')"", 'def', 'test_choice_validator_finds_only_exact_match(self):', 'new_validator', '=', 'self._choice_validator(ignore_case=False)', ""assert_true(new_validator('value1'))"", ""assert_true(new_validator('VaLuE3'))"", 'assert_true(new_validator(123))', 'with', 'assert_raises(ValidationValueError):', ""new_validator('VALue2')"", 'def', 'test_choice_validator_fails_when_option_not_present(self):', 'new_validator', '=', 'self._choice_validator(ignore_case=False)', 'with', 'assert_raises(ValidationValueError):', ""new_validator('You')"", ""new_validator('123')"", 'new_validator(456)', 'def', 'test_choice_validator_case_insensitive(self):', 'new_validator', '=', 'self._choice_validator(ignore_case=True)', ""assert_true(new_validator('VaLuE3'))"", ""assert_true(new_validator('value3'))"", 'assert_true(new_validator(123))', 'with', 'assert_raises(ValidationValueError):', ""new_validator('123')"", 'def', 'test_choice_validator_fails_when_value_is_unhashable_list(self):', 'new_validator', '=', 'self._choice_validator(ignore_case=False)', 'with', 'assert_raises(ValidationError):', ""new_validator(['e',"", ""'i',"", ""'e',"", ""'i',"", ""'o'])"", 'def', 'test_choice_validator_fails_when_value_is_unhashable_dict(self):', 'new_validator', '=', 'self._choice_validator(ignore_case=False)', 'with', 'assert_raises(ValidationError):', ""new_validator({'k':"", ""'v',"", ""'k2':"", ""'v2'})"", '```']",challenge not surrounded by ''': ,
"# Copyright 2013 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.
import os
import unittest

from telemetry import value
from telemetry.page import page_set

class TestBase(unittest.TestCase):
  def setUp(self):
    self.page_set =  page_set.PageSet(file_path=os.path.dirname(__file__))
    self.page_set.AddPageWithDefaultRunNavigate(""http://www.bar.com/"")
    self.page_set.AddPageWithDefaultRunNavigate(""http://www.baz.com/"")
    self.page_set.AddPageWithDefaultRunNavigate(""http://www.foo.com/"")

  @property
  def pages(self):
    return self.page_set.pages

class ValueTest(TestBase):
  def testCompat(self):
    page0 = self.pages[0]
    page1 = self.pages[0]

    a = value.Value(page0, 'x', 'unit', important=False)
    b = value.Value(page1, 'x', 'unit', important=False)
    self.assertTrue(b.IsMergableWith(a))

  def testIncompat(self):
    page0 = self.pages[0]

    a = value.Value(page0, 'x', 'unit', important=False)
    b = value.Value(page0, 'x', 'incompatUnit', important=False)
    self.assertFalse(b.IsMergableWith(a))

    a = value.Value(page0, 'x', 'unit', important=False)
    b = value.Value(page0, 'x', 'unit', important=True)
    self.assertFalse(b.IsMergableWith(a))

    a = value.Value(page0, 'x', 'unit', important=False)
    b = value.ScalarValue(page0, 'x', 'unit', 3, important=True)
    self.assertFalse(b.IsMergableWith(a))
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', 'Copyright', '2013', 'The', 'Chromium', 'Authors.', 'All', 'rights', 'reserved.', '#', 'Use', 'of', 'this', 'source', 'code', 'is', 'governed', 'by', 'a', 'BSD-style', 'license', 'that', 'can', 'be', '#', 'found', 'in', 'the', 'LICENSE', 'file.', 'import', 'os', 'import', 'unittest', 'from', 'telemetry', 'import', 'value', 'from', 'telemetry.page', 'import', 'page_set', 'class', 'TestBase(unittest.TestCase):', 'def', 'setUp(self):', 'self.page_set', '=', 'page_set.PageSet(file_path=os.path.dirname(__file__))', 'self.page_set.AddPageWithDefaultRunNavigate(""http://www.bar.com/"")', 'self.page_set.AddPageWithDefaultRunNavigate(""http://www.baz.com/"")', 'self.page_set.AddPageWithDefaultRunNavigate(""http://www.foo.com/"")', '@property', 'def', 'pages(self):', 'return', 'self.page_set.pages', 'class', 'ValueTest(TestBase):', 'def', 'testCompat(self):', 'page0', '=', 'self.pages[0]', 'page1', '=', 'self.pages[0]', 'a', '=', 'value.Value(page0,', ""'x',"", ""'unit',"", 'important=False)', 'b', '=', 'value.Value(page1,', ""'x',"", ""'unit',"", 'important=False)', 'self.assertTrue(b.IsMergableWith(a))', 'def', 'testIncompat(self):', 'page0', '=', 'self.pages[0]', 'a', '=', 'value.Value(page0,', ""'x',"", ""'unit',"", 'important=False)', 'b', '=', 'value.Value(page0,', ""'x',"", ""'incompatUnit',"", 'important=False)', 'self.assertFalse(b.IsMergableWith(a))', 'a', '=', 'value.Value(page0,', ""'x',"", ""'unit',"", 'important=False)', 'b', '=', 'value.Value(page0,', ""'x',"", ""'unit',"", 'important=True)', 'self.assertFalse(b.IsMergableWith(a))', 'a', '=', 'value.Value(page0,', ""'x',"", ""'unit',"", 'important=False)', 'b', '=', 'value.ScalarValue(page0,', ""'x',"", ""'unit',"", '3,', 'important=True)', 'self.assertFalse(b.IsMergableWith(a))', '```']",challenge not surrounded by ''': ,
"""use strict"";

var express = require('express');

function HttpServer(port, staticServedPath, logRequest) {
  this.port = port;
  this.staticServedPath = staticServedPath;
  this.logRequest = (typeof logRequest === ""undefined"") ? true : logRequest;
}

HttpServer.prototype.start = function(fn) {
  console.log(""Starting server"");

  var self = this;
  var app = express();
  self.app = app;

  if(self.logRequest) {
    app.use(function (req, res, next) {
      console.log(req.method, req.url);
      next();
    });
  }

  app.use('/', express.static(self.staticServedPath));

  self.server  = app.listen(self.port, function () {
    console.log(""Server started on port"", self.port);
    if (fn !== undefined) fn();
  });
};

HttpServer.prototype.stop = function() {
  console.log(""Stopping server"");

  var self = this;
  self.server.close();
};

module.exports = HttpServer;","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```""use', 'strict"";', 'var', 'express', '=', ""require('express');"", 'function', 'HttpServer(port,', 'staticServedPath,', 'logRequest)', '{', 'this.port', '=', 'port;', 'this.staticServedPath', '=', 'staticServedPath;', 'this.logRequest', '=', '(typeof', 'logRequest', '===', '""undefined"")', '?', 'true', ':', 'logRequest;', '}', 'HttpServer.prototype.start', '=', 'function(fn)', '{', 'console.log(""Starting', 'server"");', 'var', 'self', '=', 'this;', 'var', 'app', '=', 'express();', 'self.app', '=', 'app;', 'if(self.logRequest)', '{', 'app.use(function', '(req,', 'res,', 'next)', '{', 'console.log(req.method,', 'req.url);', 'next();', '});', '}', ""app.use('/',"", 'express.static(self.staticServedPath));', 'self.server', '=', 'app.listen(self.port,', 'function', '()', '{', 'console.log(""Server', 'started', 'on', 'port"",', 'self.port);', 'if', '(fn', '!==', 'undefined)', 'fn();', '});', '};', 'HttpServer.prototype.stop', '=', 'function()', '{', 'console.log(""Stopping', 'server"");', 'var', 'self', '=', 'this;', 'self.server.close();', '};', 'module.exports', '=', 'HttpServer;```']",challenge not surrounded by ''': ,
"/// The definition of the type of the scene configurations.
/// \file
/// \author Antti Kivi
/// \date 5 June 2018
/// \copyright Copyright (c) 2018–2020 Antti Kivi.
/// Licensed under the Effective Elegy Licence.

#include ""ode/systems/scene_configuration.h""

namespace ode
{
} // namespace ode
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```///', 'The', 'definition', 'of', 'the', 'type', 'of', 'the', 'scene', 'configurations.', '///', '\\file', '///', '\\author', 'Antti', 'Kivi', '///', '\\date', '5', 'June', '2018', '///', '\\copyright', 'Copyright', '(c)', '2018–2020', 'Antti', 'Kivi.', '///', 'Licensed', 'under', 'the', 'Effective', 'Elegy', 'Licence.', '#include', '""ode/systems/scene_configuration.h""', 'namespace', 'ode', '{', '}', '//', 'namespace', 'ode', '```']",challenge not surrounded by ''': ,
"""use strict"";
var gulp = require(""gulp"");
var del = require(""del"");
var sourcemaps = require('gulp-sourcemaps');

/**
 * Remove build directory.
 */
gulp.task('clean', function (cb) {
    return del([""build""], cb);
});

/**
 * Copy all resources that are not TypeScript files into build directory.
 */
gulp.task(""resources"", [""server"", ""app"", ""assets""], function () {
    console.log(""Building resources..."");
});
/* copy the app core files to the build folder */
gulp.task(""app"", ['index'], function(){
    return gulp.src([""src/app/**"", ""!src/app/**/*.ts""])
        .pipe(gulp.dest(""build/app""));
});
/* get the index file to the root of the build */
gulp.task(""index"", function(){
    return gulp.src([""index.html""])
        .pipe(gulp.dest(""build""));
});
/* copy node server to build folder */
gulp.task(""server"", function () {
    return gulp.src([""index.js"", ""package.json""], { cwd: ""src/server/**"" })
        .pipe(gulp.dest(""build""));
});
/* styles and other assets */
gulp.task(""assets"", function(){
    return gulp.src([""styles.css""])
        .pipe(gulp.dest(""build""));
});
/**
 * Copy all required libraries into build directory.
 */
gulp.task(""libs"", function () {
    return gulp.src([
        'es6-shim/es6-shim.min.js',
        'es6-shim/es6-shim.map',
        'core-js/client/shim.min.js',
        'zone.js/dist/zone.js',
        'reflect-metadata/reflect.js',
        'refelct-metadata/reflect.js.map',
        'systemjs/dist/system-polyfills.js',
        'angular2/bundles/angular2-polyfills.js',
        'angular2/es6/dev/src/testing/shims_for_IE.js',
        'systemjs/dist/system.src.js',
        'rxjs/bundles/Rx.js',
        'angular2/bundles/angular2.dev.js',
        'angular2/bundles/router.dev.js'
    ], { cwd: ""node_modules/**"" }) /* Glob required here. */
        .pipe(gulp.dest(""build/lib""));
});
/**
 * Build the project.
 */
gulp.task(""default"", ['resources', 'libs'], function () {
    console.log(""Building the project ..."");
});

","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```""use', 'strict"";', 'var', 'gulp', '=', 'require(""gulp"");', 'var', 'del', '=', 'require(""del"");', 'var', 'sourcemaps', '=', ""require('gulp-sourcemaps');"", '/**', '*', 'Remove', 'build', 'directory.', '*/', ""gulp.task('clean',"", 'function', '(cb)', '{', 'return', 'del([""build""],', 'cb);', '});', '/**', '*', 'Copy', 'all', 'resources', 'that', 'are', 'not', 'TypeScript', 'files', 'into', 'build', 'directory.', '*/', 'gulp.task(""resources"",', '[""server"",', '""app"",', '""assets""],', 'function', '()', '{', 'console.log(""Building', 'resources..."");', '});', '/*', 'copy', 'the', 'app', 'core', 'files', 'to', 'the', 'build', 'folder', '*/', 'gulp.task(""app"",', ""['index'],"", 'function(){', 'return', 'gulp.src([""src/app/**"",', '""!src/app/**/*.ts""])', '.pipe(gulp.dest(""build/app""));', '});', '/*', 'get', 'the', 'index', 'file', 'to', 'the', 'root', 'of', 'the', 'build', '*/', 'gulp.task(""index"",', 'function(){', 'return', 'gulp.src([""index.html""])', '.pipe(gulp.dest(""build""));', '});', '/*', 'copy', 'node', 'server', 'to', 'build', 'folder', '*/', 'gulp.task(""server"",', 'function', '()', '{', 'return', 'gulp.src([""index.js"",', '""package.json""],', '{', 'cwd:', '""src/server/**""', '})', '.pipe(gulp.dest(""build""));', '});', '/*', 'styles', 'and', 'other', 'assets', '*/', 'gulp.task(""assets"",', 'function(){', 'return', 'gulp.src([""styles.css""])', '.pipe(gulp.dest(""build""));', '});', '/**', '*', 'Copy', 'all', 'required', 'libraries', 'into', 'build', 'directory.', '*/', 'gulp.task(""libs"",', 'function', '()', '{', 'return', 'gulp.src([', ""'es6-shim/es6-shim.min.js',"", ""'es6-shim/es6-shim.map',"", ""'core-js/client/shim.min.js',"", ""'zone.js/dist/zone.js',"", ""'reflect-metadata/reflect.js',"", ""'refelct-metadata/reflect.js.map',"", ""'systemjs/dist/system-polyfills.js',"", ""'angular2/bundles/angular2-polyfills.js',"", ""'angular2/es6/dev/src/testing/shims_for_IE.js',"", ""'systemjs/dist/system.src.js',"", ""'rxjs/bundles/Rx.js',"", ""'angular2/bundles/angular2.dev.js',"", ""'angular2/bundles/router.dev.js'"", '],', '{', 'cwd:', '""node_modules/**""', '})', '/*', 'Glob', 'required', 'here.', '*/', '.pipe(gulp.dest(""build/lib""));', '});', '/**', '*', 'Build', 'the', 'project.', '*/', 'gulp.task(""default"",', ""['resources',"", ""'libs'],"", 'function', '()', '{', 'console.log(""Building', 'the', 'project', '..."");', '});', '```']",challenge not surrounded by ''': ,
"<!--
Sliders.html, a simple javascript equation parser that creats dynamic sliders based on the equation
based on original work by Hunter Davis, 2010
Copyright Discursive Labs, LLC
We still need to decided on a license for our internal tools we share with the community
So if you'd like this to be gpl, send us an email
hunter or mark at discursivelabs.com
-->
<!doctype html>
<html lang=""en"">

  <head>
    <meta charset=""utf-8""/>
    <title>QuickGrapher Help</title>

    <!--[if lt IE 9]>
      <script src=""http://html5shim.googlecode.com/svn/trunk/html5.js""></script>
    <![endif]-->

    <link rel=""stylesheet"" media=""all"" href=""http://www.hunterdavis.com/quickgrapher/css/less-style.css""/>
    <meta name=""viewport"" content=""width=device-width; initial-scale=1""/>
    <!-- Add ""maximum-scale=1"" to fix the Mobile Safari auto-zoom bug on orientation changes,
      but keep in mind that it will disable user-zooming completely. Bad for accessibility. -->
    <!--script src=""/js/obfs.js"" type=""text/javascript"" charset=""utf-8""></script-->
  </head>

  <body>
    <div id=""container"">
      <div id=""inner"">
        <span style=""width: 100%;"">
          <a href=""http://www.hunterdavis.com/quickgrapher/"">
            <img class=""logo"" src=""http://www.hunterdavis.com/quickgrapher/images/logo_1.png""></img>
          </a>
        </span>
        <h2>Tutorial Videos</h2>

        <div class=""instructions"">
        QuickGrapher is a quick and easy way to solve and interact with equations in a whole new way. Take a look at our introductory video below to get a head start on using QuickGrapher.
        <object style=""height: 390px; width: 600px""><param name=""movie"" value=""http://www.youtube.com/v/o24ph-0_u9M?version=3""><param name=""allowFullScreen"" value=""true""><param name=""allowScriptAccess"" value=""always""><embed src=""http://www.youtube.com/v/o24ph-0_u9M?version=3"" type=""application/x-shockwave-flash"" allowfullscreen=""true"" allowScriptAccess=""always"" width=""600"" height=""390""></object>
        <br/>
        </div>

        <div class=""instructions"">
        With QuickGrapher, anyone can easily visualize the effects of multiple variables on complex equations in a simple way.  View a video demonstration of this below.
        <object style=""height: 390px; width: 600px""><param name=""movie"" value=""http://www.youtube.com/v/ej7pAX2fMj4?version=3""><param name=""allowFullScreen"" value=""true""><param name=""allowScriptAccess"" value=""always""><embed src=""http://www.youtube.com/v/ej7pAX2fMj4?version=3"" type=""application/x-shockwave-flash"" allowfullscreen=""true"" allowScriptAccess=""always"" width=""600"" height=""390""></object>
         <br/>
        </div>

        <div class=""instructions"">
        Quickgrapher allows you to quickly double-check any equation graph you come across.  View a demonstration video of one of our testers vetting an XKCD comic below.
        <object style=""height: 390px; width: 600px""><param name=""movie"" value=""http://www.youtube.com/v/XiIPsVVtCU4?version=3""><param name=""allowFullScreen"" value=""true""><param name=""allowScriptAccess"" value=""always""><embed src=""http://www.youtube.com/v/XiIPsVVtCU4?version=3"" type=""application/x-shockwave-flash"" allowfullscreen=""true"" allowScriptAccess=""always"" width=""600"" height=""390""></object>
        <br/>
        </div>

        <div class=""instructions"">
        QuickGrapher supports logical and complex functions that your old calculator never could and it is constantly improving.  View a demonstration of some of the advanced features of QuickGrapher below.
        <object style=""height: 390px; width: 600px""><param name=""movie"" value=""http://www.youtube.com/v/WOC_IzFQt44?version=3""><param name=""allowFullScreen"" value=""true""><param name=""allowScriptAccess"" value=""always""><embed src=""http://www.youtube.com/v/WOC_IzFQt44?version=3"" type=""application/x-shockwave-flash"" allowfullscreen=""true"" allowScriptAccess=""always"" width=""600"" height=""390""></object>
        <br/>
        </div>

      </div>
    </div>
    <center>
      Email: <font style=""font-weight: bold"">hunter @ hunterdavis.com/quickgrapher/</font><br/>
      Copyright 2011 Discursive Labs, LLC
    </center>
    <div id=""beta_box"" style=""position:absolute; top: 0px; right: 0px; padding: 4px; font-weight: bold; font-size: 13pt; color: rgb(195,220,235); background-color: rgb(164,157,143); width: 120px; text-align: right; border: 1px solid rgb(144,136,125);"">
        <div style=""text-align: center;"">We love feedback & suggestions!</div><br/><br/>
        <font style=""font-size: 10pt;"">Let us know your thoughts in an email to</font>
        <div style=""text-align: left; color: rgb(53, 52, 49); margin-bottom: -5px; padding-bottom: 10px; border-bottom: 1px solid black""><br/>beta <font style=""color: rgb(255,255,255);"">@</font><br/><font style=""font-size: 10pt;"">hunterdavis.com/quickgrapher/</font></div>
    </div>
    <script type=""text/javascript"">
        // Google analytics
        var _gaq = _gaq || [];
        _gaq.push(['_setAccount', 'UA-19995643-2']);
        _gaq.push(['_trackPageview']);

        (function() {
            var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
            ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
            var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
        })();
    </script>
  </body>

</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!--', 'Sliders.html,', 'a', 'simple', 'javascript', 'equation', 'parser', 'that', 'creats', 'dynamic', 'sliders', 'based', 'on', 'the', 'equation', 'based', 'on', 'original', 'work', 'by', 'Hunter', 'Davis,', '2010', 'Copyright', 'Discursive', 'Labs,', 'LLC', 'We', 'still', 'need', 'to', 'decided', 'on', 'a', 'license', 'for', 'our', 'internal', 'tools', 'we', 'share', 'with', 'the', 'community', 'So', 'if', ""you'd"", 'like', 'this', 'to', 'be', 'gpl,', 'send', 'us', 'an', 'email', 'hunter', 'or', 'mark', 'at', 'discursivelabs.com', '-->', '<!doctype', 'html>', '<html', 'lang=""en"">', '<head>', '<meta', 'charset=""utf-8""/>', '<title>QuickGrapher', 'Help</title>', '<!--[if', 'lt', 'IE', '9]>', '<script', 'src=""http://html5shim.googlecode.com/svn/trunk/html5.js""></script>', '<![endif]-->', '<link', 'rel=""stylesheet""', 'media=""all""', 'href=""http://www.hunterdavis.com/quickgrapher/css/less-style.css""/>', '<meta', 'name=""viewport""', 'content=""width=device-width;', 'initial-scale=1""/>', '<!--', 'Add', '""maximum-scale=1""', 'to', 'fix', 'the', 'Mobile', 'Safari', 'auto-zoom', 'bug', 'on', 'orientation', 'changes,', 'but', 'keep', 'in', 'mind', 'that', 'it', 'will', 'disable', 'user-zooming', 'completely.', 'Bad', 'for', 'accessibility.', '-->', '<!--script', 'src=""/js/obfs.js""', 'type=""text/javascript""', 'charset=""utf-8""></script-->', '</head>', '<body>', '<div', 'id=""container"">', '<div', 'id=""inner"">', '<span', 'style=""width:', '100%;"">', '<a', 'href=""http://www.hunterdavis.com/quickgrapher/"">', '<img', 'class=""logo""', 'src=""http://www.hunterdavis.com/quickgrapher/images/logo_1.png""></img>', '</a>', '</span>', '<h2>Tutorial', 'Videos</h2>', '<div', 'class=""instructions"">', 'QuickGrapher', 'is', 'a', 'quick', 'and', 'easy', 'way', 'to', 'solve', 'and', 'interact', 'with', 'equations', 'in', 'a', 'whole', 'new', 'way.', 'Take', 'a', 'look', 'at', 'our', 'introductory', 'video', 'below', 'to', 'get', 'a', 'head', 'start', 'on', 'using', 'QuickGrapher.', '<object', 'style=""height:', '390px;', 'width:', '600px""><param', 'name=""movie""', 'value=""http://www.youtube.com/v/o24ph-0_u9M?version=3""><param', 'name=""allowFullScreen""', 'value=""true""><param', 'name=""allowScriptAccess""', 'value=""always""><embed', 'src=""http://www.youtube.com/v/o24ph-0_u9M?version=3""', 'type=""application/x-shockwave-flash""', 'allowfullscreen=""true""', 'allowScriptAccess=""always""', 'width=""600""', 'height=""390""></object>', '<br/>', '</div>', '<div', 'class=""instructions"">', 'With', 'QuickGrapher,', 'anyone', 'can', 'easily', 'visualize', 'the', 'effects', 'of', 'multiple', 'variables', 'on', 'complex', 'equations', 'in', 'a', 'simple', 'way.', 'View', 'a', 'video', 'demonstration', 'of', 'this', 'below.', '<object', 'style=""height:', '390px;', 'width:', '600px""><param', 'name=""movie""', 'value=""http://www.youtube.com/v/ej7pAX2fMj4?version=3""><param', 'name=""allowFullScreen""', 'value=""true""><param', 'name=""allowScriptAccess""', 'value=""always""><embed', 'src=""http://www.youtube.com/v/ej7pAX2fMj4?version=3""', 'type=""application/x-shockwave-flash""', 'allowfullscreen=""true""', 'allowScriptAccess=""always""', 'width=""600""', 'height=""390""></object>', '<br/>', '</div>', '<div', 'class=""instructions"">', 'Quickgrapher', 'allows', 'you', 'to', 'quickly', 'double-check', 'any', 'equation', 'graph', 'you', 'come', 'across.', 'View', 'a', 'demonstration', 'video', 'of', 'one', 'of', 'our', 'testers', 'vetting', 'an', 'XKCD', 'comic', 'below.', '<object', 'style=""height:', '390px;', 'width:', '600px""><param', 'name=""movie""', 'value=""http://www.youtube.com/v/XiIPsVVtCU4?version=3""><param', 'name=""allowFullScreen""', 'value=""true""><param', 'name=""allowScriptAccess""', 'value=""always""><embed', 'src=""http://www.youtube.com/v/XiIPsVVtCU4?version=3""', 'type=""application/x-shockwave-flash""', 'allowfullscreen=""true""', 'allowScriptAccess=""always""', 'width=""600""', 'height=""390""></object>', '<br/>', '</div>', '<div', 'class=""instructions"">', 'QuickGrapher', 'supports', 'logical', 'and', 'complex', 'functions', 'that', 'your', 'old', 'calculator', 'never', 'could', 'and', 'it', 'is', 'constantly', 'improving.', 'View', 'a', 'demonstration', 'of', 'some', 'of', 'the', 'advanced', 'features', 'of', 'QuickGrapher', 'below.', '<object', 'style=""height:', '390px;', 'width:', '600px""><param', 'name=""movie""', 'value=""http://www.youtube.com/v/WOC_IzFQt44?version=3""><param', 'name=""allowFullScreen""', 'value=""true""><param', 'name=""allowScriptAccess""', 'value=""always""><embed', 'src=""http://www.youtube.com/v/WOC_IzFQt44?version=3""', 'type=""application/x-shockwave-flash""', 'allowfullscreen=""true""', 'allowScriptAccess=""always""', 'width=""600""', 'height=""390""></object>', '<br/>', '</div>', '</div>', '</div>', '<center>', 'Email:', '<font', 'style=""font-weight:', 'bold"">hunter', '@', 'hunterdavis.com/quickgrapher/</font><br/>', 'Copyright', '2011', 'Discursive', 'Labs,', 'LLC', '</center>', '<div', 'id=""beta_box""', 'style=""position:absolute;', 'top:', '0px;', 'right:', '0px;', 'padding:', '4px;', 'font-weight:', 'bold;', 'font-size:', '13pt;', 'color:', 'rgb(195,220,235);', 'background-color:', 'rgb(164,157,143);', 'width:', '120px;', 'text-align:', 'right;', 'border:', '1px', 'solid', 'rgb(144,136,125);"">', '<div', 'style=""text-align:', 'center;"">We', 'love', 'feedback', '&', 'suggestions!</div><br/><br/>', '<font', 'style=""font-size:', '10pt;"">Let', 'us', 'know', 'your', 'thoughts', 'in', 'an', 'email', 'to</font>', '<div', 'style=""text-align:', 'left;', 'color:', 'rgb(53,', '52,', '49);', 'margin-bottom:', '-5px;', 'padding-bottom:', '10px;', 'border-bottom:', '1px', 'solid', 'black""><br/>beta', '<font', 'style=""color:', 'rgb(255,255,255);"">@</font><br/><font', 'style=""font-size:', '10pt;"">hunterdavis.com/quickgrapher/</font></div>', '</div>', '<script', 'type=""text/javascript"">', '//', 'Google', 'analytics', 'var', '_gaq', '=', '_gaq', '||', '[];', ""_gaq.push(['_setAccount',"", ""'UA-19995643-2']);"", ""_gaq.push(['_trackPageview']);"", '(function()', '{', 'var', 'ga', '=', ""document.createElement('script');"", 'ga.type', '=', ""'text/javascript';"", 'ga.async', '=', 'true;', 'ga.src', '=', ""('https:'"", '==', 'document.location.protocol', '?', ""'https://ssl'"", ':', ""'http://www')"", '+', ""'.google-analytics.com/ga.js';"", 'var', 's', '=', ""document.getElementsByTagName('script')[0];"", 's.parentNode.insertBefore(ga,', 's);', '})();', '</script>', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"/* ======================================================================
Copyright 2021 Google LLC
Licensed under the Apache License, Version 2.0 (the ""License"");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    https://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an ""AS IS"" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License. 
========================================================================*/

/**
* @autor Rikard Lindstrom <rlindstrom@google.com>
*/

let audioContext;

const bufferCache = {};

function loadSound(url) {
  return new Promise((resolve, reject) => {
    const request = new XMLHttpRequest();
    request.open(""GET"", url, true);
    request.responseType = ""arraybuffer"";

    request.onload = () => {
      audioContext.decodeAudioData(
        request.response,
        (buffer) => {
          console.log('loaded url',url)

          resolve(buffer);
        },
        reject
      );
    };
    request.send();
  });
}

export default {
  init() {
    audioContext = new (window.AudioContext || window.webkitAudioContext)();
  },

  userInit(){
    audioContext.resume();
  },

  playSound(url, velocity) {
    const buffer = bufferCache[url];
    if (!buffer) {
      throw new Error(`${url} no loaded. Call .loadSound(url) first`);
    }

    const src = audioContext.createBufferSource();
    src.buffer = buffer;
    const gain = audioContext.createGain();
    gain.gain.value = Math.max(0.5, Math.min(1.,velocity / 127));
    gain.connect(audioContext.destination);
    src.connect(gain);
    src.start(audioContext.currentTime);
    src.onended = () => {
      src.disconnect();
      gain.disconnect();
      src.onended = null;
    };
  },

  loadSound(url) {
    console.log('load url',url)
    const cached = bufferCache[url];
    if (cached) {
      if (cached instanceof Promise) {
        return cached;
      } else {
        return Promise.resolve(cached);
      }
    } else {
      const promise = loadSound(url);
      bufferCache[url] = promise;
      promise.then((buffer) => (bufferCache[url] = buffer) && buffer);
      return promise;
    }
  },
};
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '======================================================================', 'Copyright', '2021', 'Google', 'LLC', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', 'https://www.apache.org/licenses/LICENSE-2.0', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', 'limitations', 'under', 'the', 'License.', '========================================================================*/', '/**', '*', '@autor', 'Rikard', 'Lindstrom', '<rlindstrom@google.com>', '*/', 'let', 'audioContext;', 'const', 'bufferCache', '=', '{};', 'function', 'loadSound(url)', '{', 'return', 'new', 'Promise((resolve,', 'reject)', '=>', '{', 'const', 'request', '=', 'new', 'XMLHttpRequest();', 'request.open(""GET"",', 'url,', 'true);', 'request.responseType', '=', '""arraybuffer"";', 'request.onload', '=', '()', '=>', '{', 'audioContext.decodeAudioData(', 'request.response,', '(buffer)', '=>', '{', ""console.log('loaded"", ""url',url)"", 'resolve(buffer);', '},', 'reject', ');', '};', 'request.send();', '});', '}', 'export', 'default', '{', 'init()', '{', 'audioContext', '=', 'new', '(window.AudioContext', '||', 'window.webkitAudioContext)();', '},', 'userInit(){', 'audioContext.resume();', '},', 'playSound(url,', 'velocity)', '{', 'const', 'buffer', '=', 'bufferCache[url];', 'if', '(!buffer)', '{', 'throw', 'new', 'Error(`${url}', 'no', 'loaded.', 'Call', '.loadSound(url)', 'first`);', '}', 'const', 'src', '=', 'audioContext.createBufferSource();', 'src.buffer', '=', 'buffer;', 'const', 'gain', '=', 'audioContext.createGain();', 'gain.gain.value', '=', 'Math.max(0.5,', 'Math.min(1.,velocity', '/', '127));', 'gain.connect(audioContext.destination);', 'src.connect(gain);', 'src.start(audioContext.currentTime);', 'src.onended', '=', '()', '=>', '{', 'src.disconnect();', 'gain.disconnect();', 'src.onended', '=', 'null;', '};', '},', 'loadSound(url)', '{', ""console.log('load"", ""url',url)"", 'const', 'cached', '=', 'bufferCache[url];', 'if', '(cached)', '{', 'if', '(cached', 'instanceof', 'Promise)', '{', 'return', 'cached;', '}', 'else', '{', 'return', 'Promise.resolve(cached);', '}', '}', 'else', '{', 'const', 'promise', '=', 'loadSound(url);', 'bufferCache[url]', '=', 'promise;', 'promise.then((buffer)', '=>', '(bufferCache[url]', '=', 'buffer)', '&&', 'buffer);', 'return', 'promise;', '}', '},', '};', '```']",challenge not surrounded by ''': ,
"var allTestFiles = [];
var TEST_REGEXP = /(spec|test)\.js$/i;

// Get a list of all the test files to include
Object.keys(window.__karma__.files).forEach(function (file) {
    if (TEST_REGEXP.test(file)) {
        // Normalize paths to RequireJS module names.
        // If you require sub-dependencies of test files to be loaded as-is (requiring file extension)
        // then do not normalize the paths
        var testModule = file.replace(/^\/base\/|\.js$/g, '');
        allTestFiles.push(testModule);
    }
});
require.config({
    // Karma serves files under /base, which is the basePath from your config file
    baseUrl: '/base',
    waitSeconds: 0,
    packages: [
        {
            name: '@syncfusion/ej2-base',
            location: 'node_modules/@syncfusion/ej2-base',
            main: 'index.js'
        },
        {
            name: '@syncfusion/ej2-data',
            location: 'node_modules/@syncfusion/ej2-data',
            main: 'index.js'
        }
        // Include dependent packages
    ],

    // dynamically load all test files
    deps: allTestFiles,

    // we have to kickoff jasmine, as it is asynchronous
    callback: window.__karma__.start
});
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```var', 'allTestFiles', '=', '[];', 'var', 'TEST_REGEXP', '=', '/(spec|test)\\.js$/i;', '//', 'Get', 'a', 'list', 'of', 'all', 'the', 'test', 'files', 'to', 'include', 'Object.keys(window.__karma__.files).forEach(function', '(file)', '{', 'if', '(TEST_REGEXP.test(file))', '{', '//', 'Normalize', 'paths', 'to', 'RequireJS', 'module', 'names.', '//', 'If', 'you', 'require', 'sub-dependencies', 'of', 'test', 'files', 'to', 'be', 'loaded', 'as-is', '(requiring', 'file', 'extension)', '//', 'then', 'do', 'not', 'normalize', 'the', 'paths', 'var', 'testModule', '=', 'file.replace(/^\\/base\\/|\\.js$/g,', ""'');"", 'allTestFiles.push(testModule);', '}', '});', 'require.config({', '//', 'Karma', 'serves', 'files', 'under', '/base,', 'which', 'is', 'the', 'basePath', 'from', 'your', 'config', 'file', 'baseUrl:', ""'/base',"", 'waitSeconds:', '0,', 'packages:', '[', '{', 'name:', ""'@syncfusion/ej2-base',"", 'location:', ""'node_modules/@syncfusion/ej2-base',"", 'main:', ""'index.js'"", '},', '{', 'name:', ""'@syncfusion/ej2-data',"", 'location:', ""'node_modules/@syncfusion/ej2-data',"", 'main:', ""'index.js'"", '}', '//', 'Include', 'dependent', 'packages', '],', '//', 'dynamically', 'load', 'all', 'test', 'files', 'deps:', 'allTestFiles,', '//', 'we', 'have', 'to', 'kickoff', 'jasmine,', 'as', 'it', 'is', 'asynchronous', 'callback:', 'window.__karma__.start', '});', '```']",challenge not surrounded by ''': ,
"class LoginService {
    constructor(resource) {
        this._resource = resource('api/user/register{/id}')
    }
}

export default LoginService","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```class', 'LoginService', '{', 'constructor(resource)', '{', 'this._resource', '=', ""resource('api/user/register{/id}')"", '}', '}', 'export', 'default', 'LoginService```']",challenge not surrounded by ''': ,
"package jsample.servlet;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class HelloWorld extends HttpServlet {

	private static final long serialVersionUID = 1L;

	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		PrintWriter out = resp.getWriter();
		out.println(""<html>"");
		out.println(""<body>"");
		out.println(""<h2>Hello Servlet !!!</h2>"");
		out.println(""</body>"");
		out.println(""</html>"");
	}

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'jsample.servlet;', 'import', 'java.io.IOException;', 'import', 'java.io.PrintWriter;', 'import', 'javax.servlet.ServletException;', 'import', 'javax.servlet.http.HttpServlet;', 'import', 'javax.servlet.http.HttpServletRequest;', 'import', 'javax.servlet.http.HttpServletResponse;', 'public', 'class', 'HelloWorld', 'extends', 'HttpServlet', '{', 'private', 'static', 'final', 'long', 'serialVersionUID', '=', '1L;', '@Override', 'protected', 'void', 'doGet(HttpServletRequest', 'req,', 'HttpServletResponse', 'resp)', 'throws', 'ServletException,', 'IOException', '{', 'PrintWriter', 'out', '=', 'resp.getWriter();', 'out.println(""<html>"");', 'out.println(""<body>"");', 'out.println(""<h2>Hello', 'Servlet', '!!!</h2>"");', 'out.println(""</body>"");', 'out.println(""</html>"");', '}', '}', '```']",challenge not surrounded by ''': ,
"{% extends 'style/base_section.html' %}
{% load crispy_forms_tags %}
{% load hq_shared_tags %}

{% block js %}{{ block.super }}
    <script src=""{% static 'accounting/js/accounting.billing_info_handler.js' %}""></script>
{% endblock %}

{% block js-inline %}{{ block.super }}
    <script>
        (function () {
            var AsyncSelect2Handler = hqImport('accounting/js/accounting.billing_info_handler.js').AsyncSelect2Handler;
            var domain_handler = new AsyncSelect2Handler('domain');
            domain_handler.init();
        }());
    </script>
{% endblock %}

{% block page_content %}
    {% crispy trigger_form %}
{% endblock %}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```{%', 'extends', ""'style/base_section.html'"", '%}', '{%', 'load', 'crispy_forms_tags', '%}', '{%', 'load', 'hq_shared_tags', '%}', '{%', 'block', 'js', '%}{{', 'block.super', '}}', '<script', 'src=""{%', 'static', ""'accounting/js/accounting.billing_info_handler.js'"", '%}""></script>', '{%', 'endblock', '%}', '{%', 'block', 'js-inline', '%}{{', 'block.super', '}}', '<script>', '(function', '()', '{', 'var', 'AsyncSelect2Handler', '=', ""hqImport('accounting/js/accounting.billing_info_handler.js').AsyncSelect2Handler;"", 'var', 'domain_handler', '=', 'new', ""AsyncSelect2Handler('domain');"", 'domain_handler.init();', '}());', '</script>', '{%', 'endblock', '%}', '{%', 'block', 'page_content', '%}', '{%', 'crispy', 'trigger_form', '%}', '{%', 'endblock', '%}', '```']",challenge not surrounded by ''': ,
"var year = prompt('Какой сейчас год?', 'Сюда пиши');
if (year == 2016) {
    alert('Хитёр, чертяка - правильно!');
} else {
    alert('Нет, но верните мне мой 2007й!');
};
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```var', 'year', '=', ""prompt('Какой"", 'сейчас', ""год?',"", ""'Сюда"", ""пиши');"", 'if', '(year', '==', '2016)', '{', ""alert('Хитёр,"", 'чертяка', '-', ""правильно!');"", '}', 'else', '{', ""alert('Нет,"", 'но', 'верните', 'мне', 'мой', ""2007й!');"", '};', '```']",challenge not surrounded by ''': ,
"#!/bin/bash
set -e
pegasus_lite_version_major=""4""
pegasus_lite_version_minor=""7""
pegasus_lite_version_patch=""0""
pegasus_lite_enforce_strict_wp_check=""true""
pegasus_lite_version_allow_wp_auto_download=""true""

. pegasus-lite-common.sh

pegasus_lite_init

# cleanup in case of failures
trap pegasus_lite_signal_int INT
trap pegasus_lite_signal_term TERM
trap pegasus_lite_exit EXIT

echo -e ""\n################################ Setting up workdir ################################""  1>&2
# work dir
export pegasus_lite_work_dir=$PWD
pegasus_lite_setup_work_dir

echo -e ""\n###################### figuring out the worker package to use ######################""  1>&2
# figure out the worker package to use
pegasus_lite_worker_package

echo -e ""\n##################### setting the xbit for executables staged #####################""  1>&2
# set the xbit for any executables staged
/bin/chmod +x example_workflow-calculateratio_7-1.0 

echo -e ""\n############################# executing the user tasks #############################""  1>&2
# execute the tasks
set +e
pegasus-kickstart -n example_workflow::calculateratio_7:1.0 -N ID0000022 -R condorpool  -L example_workflow -T 2016-11-30T10:46:09+00:00 ./example_workflow-calculateratio_7-1.0 
job_ec=$?
set -e

","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/bin/bash', 'set', '-e', 'pegasus_lite_version_major=""4""', 'pegasus_lite_version_minor=""7""', 'pegasus_lite_version_patch=""0""', 'pegasus_lite_enforce_strict_wp_check=""true""', 'pegasus_lite_version_allow_wp_auto_download=""true""', '.', 'pegasus-lite-common.sh', 'pegasus_lite_init', '#', 'cleanup', 'in', 'case', 'of', 'failures', 'trap', 'pegasus_lite_signal_int', 'INT', 'trap', 'pegasus_lite_signal_term', 'TERM', 'trap', 'pegasus_lite_exit', 'EXIT', 'echo', '-e', '""\\n################################', 'Setting', 'up', 'workdir', '################################""', '1>&2', '#', 'work', 'dir', 'export', 'pegasus_lite_work_dir=$PWD', 'pegasus_lite_setup_work_dir', 'echo', '-e', '""\\n######################', 'figuring', 'out', 'the', 'worker', 'package', 'to', 'use', '######################""', '1>&2', '#', 'figure', 'out', 'the', 'worker', 'package', 'to', 'use', 'pegasus_lite_worker_package', 'echo', '-e', '""\\n#####################', 'setting', 'the', 'xbit', 'for', 'executables', 'staged', '#####################""', '1>&2', '#', 'set', 'the', 'xbit', 'for', 'any', 'executables', 'staged', '/bin/chmod', '+x', 'example_workflow-calculateratio_7-1.0', 'echo', '-e', '""\\n#############################', 'executing', 'the', 'user', 'tasks', '#############################""', '1>&2', '#', 'execute', 'the', 'tasks', 'set', '+e', 'pegasus-kickstart', '-n', 'example_workflow::calculateratio_7:1.0', '-N', 'ID0000022', '-R', 'condorpool', '-L', 'example_workflow', '-T', '2016-11-30T10:46:09+00:00', './example_workflow-calculateratio_7-1.0', 'job_ec=$?', 'set', '-e', '```']",challenge not surrounded by ''': ,
"/**
 * cg_bool3x2.java
 *
 * This file was generated by XMLSpy 2007sp2 Enterprise Edition.
 *
 * YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
 * OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
 *
 * Refer to the XMLSpy Documentation for further details.
 * http://www.altova.com/xmlspy
 */


package com.jmex.model.collada.schema;

import com.jmex.xml.types.SchemaString;

public class cg_bool3x2 extends cg_ListOfBool {

	public cg_bool3x2() {
		super();
	}

	public cg_bool3x2(String newValue) {
		super(newValue);
		validate();
	}

	public cg_bool3x2(SchemaString newValue) {
		super(newValue);
		validate();
	}

	public void validate() {
	}
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', 'cg_bool3x2.java', '*', '*', 'This', 'file', 'was', 'generated', 'by', 'XMLSpy', '2007sp2', 'Enterprise', 'Edition.', '*', '*', 'YOU', 'SHOULD', 'NOT', 'MODIFY', 'THIS', 'FILE,', 'BECAUSE', 'IT', 'WILL', 'BE', '*', 'OVERWRITTEN', 'WHEN', 'YOU', 'RE-RUN', 'CODE', 'GENERATION.', '*', '*', 'Refer', 'to', 'the', 'XMLSpy', 'Documentation', 'for', 'further', 'details.', '*', 'http://www.altova.com/xmlspy', '*/', 'package', 'com.jmex.model.collada.schema;', 'import', 'com.jmex.xml.types.SchemaString;', 'public', 'class', 'cg_bool3x2', 'extends', 'cg_ListOfBool', '{', 'public', 'cg_bool3x2()', '{', 'super();', '}', 'public', 'cg_bool3x2(String', 'newValue)', '{', 'super(newValue);', 'validate();', '}', 'public', 'cg_bool3x2(SchemaString', 'newValue)', '{', 'super(newValue);', 'validate();', '}', 'public', 'void', 'validate()', '{', '}', '}', '```']",challenge not surrounded by ''': ,
"<?xml version=""1.0"" encoding=""iso-8859-1""?>
<!DOCTYPE html
    PUBLIC ""-//W3C//DTD XHTML 1.0 Strict//EN"" ""DTD/xhtml1-strict.dtd"">
<html xmlns=""http://www.w3.org/1999/xhtml"" xml:lang=""en"" lang=""en"">
<head>
  <title>Qt 4.4: window.h Example File (widgets/sliders/window.h)</title>
  <link href=""classic.css"" rel=""stylesheet"" type=""text/css"" />
</head>
<body>
<table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"">
<tr>
<td align=""left"" valign=""top"" width=""32""><a href=""http://www.trolltech.com/products/qt""><img src=""images/qt-logo.png"" align=""left"" border=""0"" /></a></td>
<td width=""1"">&nbsp;&nbsp;</td><td class=""postheader"" valign=""center""><a href=""index.html""><font color=""#004faf"">Home</font></a>&nbsp;&middot; <a href=""namespaces.html""><font color=""#004faf"">All&nbsp;Namespaces</font></a>&nbsp;&middot; <a href=""classes.html""><font color=""#004faf"">All&nbsp;Classes</font></a>&nbsp;&middot; <a href=""mainclasses.html""><font color=""#004faf"">Main&nbsp;Classes</font></a>&nbsp;&middot; <a href=""groups.html""><font color=""#004faf"">Grouped&nbsp;Classes</font></a>&nbsp;&middot; <a href=""modules.html""><font color=""#004faf"">Modules</font></a>&nbsp;&middot; <a href=""functions.html""><font color=""#004faf"">Functions</font></a></td>
<td align=""right"" valign=""top"" width=""230""></td></tr></table><h1 class=""title"">window.h Example File<br /><span class=""small-subtitle"">widgets/sliders/window.h</span>
</h1>
<pre><span class=""comment""> /****************************************************************************
 **
 ** Copyright (C) 2008 Nokia Corporation and/or its subsidiary(-ies).
 ** Contact: Qt Software Information (qt-info@nokia.com)
 **
 ** This file is part of the example classes of the Qt Toolkit.
 **
 ** Commercial Usage
 ** Licensees holding valid Qt Commercial licenses may use this file in
 ** accordance with the Qt Commercial License Agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
 ** a written agreement between you and Nokia.
 **
 **
 ** GNU General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU
 ** General Public License versions 2.0 or 3.0 as published by the Free
 ** Software Foundation and appearing in the file LICENSE.GPL included in
 ** the packaging of this file.  Please review the following information
 ** to ensure GNU General Public Licensing requirements will be met:
 ** http://www.fsf.org/licensing/licenses/info/GPLv2.html and
 ** http://www.gnu.org/copyleft/gpl.html.  In addition, as a special
 ** exception, Nokia gives you certain additional rights. These rights
 ** are described in the Nokia Qt GPL Exception version 1.3, included in
 ** the file GPL_EXCEPTION.txt in this package.
 **
 ** Qt for Windows(R) Licensees
 ** As a special exception, Nokia, as the sole copyright holder for Qt
 ** Designer, grants users of the Qt/Eclipse Integration plug-in the
 ** right for the Qt/Eclipse Integration to link to functionality
 ** provided by Qt Designer and its related libraries.
 **
 ** If you are unsure which license is appropriate for your use, please
 ** contact the sales department at qt-sales@nokia.com.
 **
 ****************************************************************************/</span>

 #ifndef WINDOW_H
 #define WINDOW_H

 #include &lt;QWidget&gt;

 class QCheckBox;
 class QComboBox;
 class QGroupBox;
 class QLabel;
 class QSpinBox;
 class QStackedWidget;

 class SlidersGroup;

 class Window : public QWidget
 {
     Q_OBJECT

 public:
     Window();

 private:
     void createControls(const QString &amp;title);

     SlidersGroup *horizontalSliders;
     SlidersGroup *verticalSliders;
     QStackedWidget *stackedWidget;

     QGroupBox *controlsGroup;
     QLabel *minimumLabel;
     QLabel *maximumLabel;
     QLabel *valueLabel;
     QCheckBox *invertedAppearance;
     QCheckBox *invertedKeyBindings;
     QSpinBox *minimumSpinBox;
     QSpinBox *maximumSpinBox;
     QSpinBox *valueSpinBox;
     QComboBox *orientationCombo;
 };

 #endif</pre>
<p /><address><hr /><div align=""center"">
<table width=""100%"" cellspacing=""0"" border=""0""><tr class=""address"">
<td width=""30%"" align=""left"">Copyright &copy; 2008 Nokia</td>
<td width=""40%"" align=""center""><a href=""trademarks.html"">Trademarks</a></td>
<td width=""30%"" align=""right""><div align=""right"">Qt 4.4.3</div></td>
</tr></table></div></address></body>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<?xml', 'version=""1.0""', 'encoding=""iso-8859-1""?>', '<!DOCTYPE', 'html', 'PUBLIC', '""-//W3C//DTD', 'XHTML', '1.0', 'Strict//EN""', '""DTD/xhtml1-strict.dtd"">', '<html', 'xmlns=""http://www.w3.org/1999/xhtml""', 'xml:lang=""en""', 'lang=""en"">', '<head>', '<title>Qt', '4.4:', 'window.h', 'Example', 'File', '(widgets/sliders/window.h)</title>', '<link', 'href=""classic.css""', 'rel=""stylesheet""', 'type=""text/css""', '/>', '</head>', '<body>', '<table', 'border=""0""', 'cellpadding=""0""', 'cellspacing=""0""', 'width=""100%"">', '<tr>', '<td', 'align=""left""', 'valign=""top""', 'width=""32""><a', 'href=""http://www.trolltech.com/products/qt""><img', 'src=""images/qt-logo.png""', 'align=""left""', 'border=""0""', '/></a></td>', '<td', 'width=""1"">&nbsp;&nbsp;</td><td', 'class=""postheader""', 'valign=""center""><a', 'href=""index.html""><font', 'color=""#004faf"">Home</font></a>&nbsp;&middot;', '<a', 'href=""namespaces.html""><font', 'color=""#004faf"">All&nbsp;Namespaces</font></a>&nbsp;&middot;', '<a', 'href=""classes.html""><font', 'color=""#004faf"">All&nbsp;Classes</font></a>&nbsp;&middot;', '<a', 'href=""mainclasses.html""><font', 'color=""#004faf"">Main&nbsp;Classes</font></a>&nbsp;&middot;', '<a', 'href=""groups.html""><font', 'color=""#004faf"">Grouped&nbsp;Classes</font></a>&nbsp;&middot;', '<a', 'href=""modules.html""><font', 'color=""#004faf"">Modules</font></a>&nbsp;&middot;', '<a', 'href=""functions.html""><font', 'color=""#004faf"">Functions</font></a></td>', '<td', 'align=""right""', 'valign=""top""', 'width=""230""></td></tr></table><h1', 'class=""title"">window.h', 'Example', 'File<br', '/><span', 'class=""small-subtitle"">widgets/sliders/window.h</span>', '</h1>', '<pre><span', 'class=""comment"">', '/****************************************************************************', '**', '**', 'Copyright', '(C)', '2008', 'Nokia', 'Corporation', 'and/or', 'its', 'subsidiary(-ies).', '**', 'Contact:', 'Qt', 'Software', 'Information', '(qt-info@nokia.com)', '**', '**', 'This', 'file', 'is', 'part', 'of', 'the', 'example', 'classes', 'of', 'the', 'Qt', 'Toolkit.', '**', '**', 'Commercial', 'Usage', '**', 'Licensees', 'holding', 'valid', 'Qt', 'Commercial', 'licenses', 'may', 'use', 'this', 'file', 'in', '**', 'accordance', 'with', 'the', 'Qt', 'Commercial', 'License', 'Agreement', 'provided', 'with', 'the', '**', 'Software', 'or,', 'alternatively,', 'in', 'accordance', 'with', 'the', 'terms', 'contained', 'in', '**', 'a', 'written', 'agreement', 'between', 'you', 'and', 'Nokia.', '**', '**', '**', 'GNU', 'General', 'Public', 'License', 'Usage', '**', 'Alternatively,', 'this', 'file', 'may', 'be', 'used', 'under', 'the', 'terms', 'of', 'the', 'GNU', '**', 'General', 'Public', 'License', 'versions', '2.0', 'or', '3.0', 'as', 'published', 'by', 'the', 'Free', '**', 'Software', 'Foundation', 'and', 'appearing', 'in', 'the', 'file', 'LICENSE.GPL', 'included', 'in', '**', 'the', 'packaging', 'of', 'this', 'file.', 'Please', 'review', 'the', 'following', 'information', '**', 'to', 'ensure', 'GNU', 'General', 'Public', 'Licensing', 'requirements', 'will', 'be', 'met:', '**', 'http://www.fsf.org/licensing/licenses/info/GPLv2.html', 'and', '**', 'http://www.gnu.org/copyleft/gpl.html.', 'In', 'addition,', 'as', 'a', 'special', '**', 'exception,', 'Nokia', 'gives', 'you', 'certain', 'additional', 'rights.', 'These', 'rights', '**', 'are', 'described', 'in', 'the', 'Nokia', 'Qt', 'GPL', 'Exception', 'version', '1.3,', 'included', 'in', '**', 'the', 'file', 'GPL_EXCEPTION.txt', 'in', 'this', 'package.', '**', '**', 'Qt', 'for', 'Windows(R)', 'Licensees', '**', 'As', 'a', 'special', 'exception,', 'Nokia,', 'as', 'the', 'sole', 'copyright', 'holder', 'for', 'Qt', '**', 'Designer,', 'grants', 'users', 'of', 'the', 'Qt/Eclipse', 'Integration', 'plug-in', 'the', '**', 'right', 'for', 'the', 'Qt/Eclipse', 'Integration', 'to', 'link', 'to', 'functionality', '**', 'provided', 'by', 'Qt', 'Designer', 'and', 'its', 'related', 'libraries.', '**', '**', 'If', 'you', 'are', 'unsure', 'which', 'license', 'is', 'appropriate', 'for', 'your', 'use,', 'please', '**', 'contact', 'the', 'sales', 'department', 'at', 'qt-sales@nokia.com.', '**', '****************************************************************************/</span>', '#ifndef', 'WINDOW_H', '#define', 'WINDOW_H', '#include', '&lt;QWidget&gt;', 'class', 'QCheckBox;', 'class', 'QComboBox;', 'class', 'QGroupBox;', 'class', 'QLabel;', 'class', 'QSpinBox;', 'class', 'QStackedWidget;', 'class', 'SlidersGroup;', 'class', 'Window', ':', 'public', 'QWidget', '{', 'Q_OBJECT', 'public:', 'Window();', 'private:', 'void', 'createControls(const', 'QString', '&amp;title);', 'SlidersGroup', '*horizontalSliders;', 'SlidersGroup', '*verticalSliders;', 'QStackedWidget', '*stackedWidget;', 'QGroupBox', '*controlsGroup;', 'QLabel', '*minimumLabel;', 'QLabel', '*maximumLabel;', 'QLabel', '*valueLabel;', 'QCheckBox', '*invertedAppearance;', 'QCheckBox', '*invertedKeyBindings;', 'QSpinBox', '*minimumSpinBox;', 'QSpinBox', '*maximumSpinBox;', 'QSpinBox', '*valueSpinBox;', 'QComboBox', '*orientationCombo;', '};', '#endif</pre>', '<p', '/><address><hr', '/><div', 'align=""center"">', '<table', 'width=""100%""', 'cellspacing=""0""', 'border=""0""><tr', 'class=""address"">', '<td', 'width=""30%""', 'align=""left"">Copyright', '&copy;', '2008', 'Nokia</td>', '<td', 'width=""40%""', 'align=""center""><a', 'href=""trademarks.html"">Trademarks</a></td>', '<td', 'width=""30%""', 'align=""right""><div', 'align=""right"">Qt', '4.4.3</div></td>', '</tr></table></div></address></body>', '</html>', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH
 * under one or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information regarding copyright
 * ownership. Camunda licenses this file to you under the Apache License,
 * Version 2.0; you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.camunda.bpm.engine.impl.cmd;

import org.camunda.bpm.engine.impl.ExternalTaskQueryImpl;
import org.camunda.bpm.engine.impl.interceptor.Command;
import org.camunda.bpm.engine.impl.interceptor.CommandContext;

import java.io.Serializable;
import java.util.List;

public class GetTopicNamesCmd implements Command<List<String>>, Serializable {

  protected ExternalTaskQueryImpl externalTaskQuery = new ExternalTaskQueryImpl();

  public GetTopicNamesCmd(boolean withLockedTasks, boolean withUnlockedTasks, boolean withRetriesLeft) {
    if (withLockedTasks) {
      externalTaskQuery.locked();
    }
    if (withUnlockedTasks) {
      externalTaskQuery.notLocked();
    }
    if (withRetriesLeft) {
      externalTaskQuery.withRetriesLeft();
    }
  }

  @Override public List<String> execute(CommandContext commandContext) {
    return commandContext
        .getExternalTaskManager()
        .selectTopicNamesByQuery(externalTaskQuery);
  }

}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', 'Camunda', 'Services', 'GmbH', 'and/or', 'licensed', 'to', 'Camunda', 'Services', 'GmbH', '*', 'under', 'one', 'or', 'more', 'contributor', 'license', 'agreements.', 'See', 'the', 'NOTICE', 'file', '*', 'distributed', 'with', 'this', 'work', 'for', 'additional', 'information', 'regarding', 'copyright', '*', 'ownership.', 'Camunda', 'licenses', 'this', 'file', 'to', 'you', 'under', 'the', 'Apache', 'License,', '*', 'Version', '2.0;', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'org.camunda.bpm.engine.impl.cmd;', 'import', 'org.camunda.bpm.engine.impl.ExternalTaskQueryImpl;', 'import', 'org.camunda.bpm.engine.impl.interceptor.Command;', 'import', 'org.camunda.bpm.engine.impl.interceptor.CommandContext;', 'import', 'java.io.Serializable;', 'import', 'java.util.List;', 'public', 'class', 'GetTopicNamesCmd', 'implements', 'Command<List<String>>,', 'Serializable', '{', 'protected', 'ExternalTaskQueryImpl', 'externalTaskQuery', '=', 'new', 'ExternalTaskQueryImpl();', 'public', 'GetTopicNamesCmd(boolean', 'withLockedTasks,', 'boolean', 'withUnlockedTasks,', 'boolean', 'withRetriesLeft)', '{', 'if', '(withLockedTasks)', '{', 'externalTaskQuery.locked();', '}', 'if', '(withUnlockedTasks)', '{', 'externalTaskQuery.notLocked();', '}', 'if', '(withRetriesLeft)', '{', 'externalTaskQuery.withRetriesLeft();', '}', '}', '@Override', 'public', 'List<String>', 'execute(CommandContext', 'commandContext)', '{', 'return', 'commandContext', '.getExternalTaskManager()', '.selectTopicNamesByQuery(externalTaskQuery);', '}', '}```']",challenge not surrounded by ''': ,
"
#%info%#

<form method=""POST"" action=""messages.php"">
<input class=""field10"" style=""width:500px"" type=""hidden"" name=""action"" value=""messages_edited"">
<input class=""field10"" style=""width:500px"" type=""hidden"" name=""selected_style"" value=""#%selected_style%#"">
<input class=""field10"" style=""width:500px"" type=""hidden"" name=""script"" value=""adlinks.php"">
<table border=""0"" width=""900"" cellspacing=""0"" cellpadding=""0"" class=""common_table"">
<tr><td class=""common_table_top_cell"" colspan=""2"" nowrap>Messages for script adlinks.php</td></tr>
<tr><td align=""center"" width=""100%"">
<table border=""0"" width=""100%"" cellspacing=""0"" cellpadding=""2"" class=""inside_table"">
<tr>
<td align=""left"" nowrap><span class=""text10a_bold"">Original message</span></td>
<td align=""left"" nowrap><span class=""text10a_bold"">Your message</span></td>
</tr>
<tr>
<td align=""left"" valign=""top""><span class=""text10"">Text #1</span></td>
<td align=""left"" valign=""top""><input class=""field10"" style=""width:500px"" name=""text1"" value=""#%text1%#""></td>
</tr>
<tr>
<td align=""left"" valign=""top""><span class=""text10"">Text #2</span></td>
<td align=""left"" valign=""top""><input class=""field10"" style=""width:500px"" name=""text2"" value=""#%text2%#""></td>
</tr>
<tr>
<td align=""left"" valign=""top""><span class=""text10"">Text #3</span></td>
<td align=""left"" valign=""top""><input class=""field10"" style=""width:500px"" name=""text3"" value=""#%text3%#""></td>
</tr>
<tr>
<td align=""left"" valign=""top""><span class=""text10"">Text #4</span></td>
<td align=""left"" valign=""top""><input class=""field10"" style=""width:500px"" name=""text4"" value=""#%text4%#""></td>
</tr>
<tr>
<td align=""left"" valign=""top""><span class=""text10"">Text #5</span></td>
<td align=""left"" valign=""top""><input class=""field10"" style=""width:500px"" name=""text5"" value=""#%text5%#""></td>
</tr>
<tr>
<td align=""left"" valign=""top""><span class=""text10"">Text #6</span></td>
<td align=""left"" valign=""top""><input class=""field10"" style=""width:500px"" name=""text6"" value=""#%text6%#""></td>
</tr>
<tr>
<td align=""left"" valign=""top""><span class=""text10"">Text #7</span></td>
<td align=""left"" valign=""top""><input class=""field10"" style=""width:500px"" name=""text7"" value=""#%text7%#""></td>
</tr>
<tr>
<td align=""left"" valign=""top""><span class=""text10"">Text #8</span></td>
<td align=""left"" valign=""top""><input class=""field10"" style=""width:500px"" name=""text8"" value=""#%text8%#""></td>
</tr>
<tr>
<td align=""left"" valign=""top""><span class=""text10"">Text #9</span></td>
<td align=""left"" valign=""top""><input class=""field10"" style=""width:500px"" name=""text9"" value=""#%text9%#""></td>
</tr>
<tr>
<td align=""left"" valign=""top""><span class=""text10"">Text #10</span></td>
<td align=""left"" valign=""top""><input class=""field10"" style=""width:500px"" name=""text10"" value=""#%text10%#""></td>
</tr>
<tr>
<td align=""left"" valign=""top""><span class=""text10"">HTML Ad<br />If you enter HTML ad, the fields above (Title, URL, Texts) will not be used</span></td>
<td align=""left"" valign=""top""><input class=""field10"" style=""width:500px"" name=""html_ad"" value=""#%html_ad%#""></td>
</tr>
<tr>
<td align=""left"" valign=""top""><span class=""text10"">Categories</span></td>
<td align=""left"" valign=""top""><input class=""field10"" style=""width:500px"" name=""categories"" value=""#%categories%#""></td>
</tr>
<tr>
<td align=""left"" valign=""top""><span class=""text10"">Keywords (separated by a comma)</span></td>
<td align=""left"" valign=""top""><input class=""field10"" style=""width:500px"" name=""keywords"" value=""#%keywords%#""></td>
</tr>
<tr>
<td align=""left"" valign=""top""><span class=""text10"">Your new AdLink has been created</span></td>
<td align=""left"" valign=""top""><input class=""field10"" style=""width:500px"" name=""adlink_created"" value=""#%adlink_created%#""></td>
</tr>
<tr>
<td align=""left"" valign=""top""><span class=""text10"">Selected AdLink has been edited</span></td>
<td align=""left"" valign=""top""><input class=""field10"" style=""width:500px"" name=""adlink_edited"" value=""#%adlink_edited%#""></td>
</tr>
<tr>
<td align=""left"" valign=""top""><span class=""text10"">AdLink deleted</span></td>
<td align=""left"" valign=""top""><input class=""field10"" style=""width:500px"" name=""adlink_deleted"" value=""#%adlink_deleted%#""></td>
</tr>
<tr>
<td align=""left"" valign=""top""><span class=""text10"">Clicks added to this AdLink: </span></td>
<td align=""left"" valign=""top""><input class=""field10"" style=""width:500px"" name=""clicks_added1"" value=""#%clicks_added1%#""></td>
</tr>
<tr>
<td align=""left"" valign=""top""><span class=""text10"">taken from your account.</span></td>
<td align=""left"" valign=""top""><input class=""field10"" style=""width:500px"" name=""clicks_added2"" value=""#%clicks_added2%#""></td>
</tr>
<tr>
<td align=""middle"" width=""100%"" colSpan=2><input class=""button10"" type=""submit"" value=""Save"" name=""submitbut""></td>
</tr>
</table></td></tr></table></form>
<br />","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```', '#%info%#', '<form', 'method=""POST""', 'action=""messages.php"">', '<input', 'class=""field10""', 'style=""width:500px""', 'type=""hidden""', 'name=""action""', 'value=""messages_edited"">', '<input', 'class=""field10""', 'style=""width:500px""', 'type=""hidden""', 'name=""selected_style""', 'value=""#%selected_style%#"">', '<input', 'class=""field10""', 'style=""width:500px""', 'type=""hidden""', 'name=""script""', 'value=""adlinks.php"">', '<table', 'border=""0""', 'width=""900""', 'cellspacing=""0""', 'cellpadding=""0""', 'class=""common_table"">', '<tr><td', 'class=""common_table_top_cell""', 'colspan=""2""', 'nowrap>Messages', 'for', 'script', 'adlinks.php</td></tr>', '<tr><td', 'align=""center""', 'width=""100%"">', '<table', 'border=""0""', 'width=""100%""', 'cellspacing=""0""', 'cellpadding=""2""', 'class=""inside_table"">', '<tr>', '<td', 'align=""left""', 'nowrap><span', 'class=""text10a_bold"">Original', 'message</span></td>', '<td', 'align=""left""', 'nowrap><span', 'class=""text10a_bold"">Your', 'message</span></td>', '</tr>', '<tr>', '<td', 'align=""left""', 'valign=""top""><span', 'class=""text10"">Text', '#1</span></td>', '<td', 'align=""left""', 'valign=""top""><input', 'class=""field10""', 'style=""width:500px""', 'name=""text1""', 'value=""#%text1%#""></td>', '</tr>', '<tr>', '<td', 'align=""left""', 'valign=""top""><span', 'class=""text10"">Text', '#2</span></td>', '<td', 'align=""left""', 'valign=""top""><input', 'class=""field10""', 'style=""width:500px""', 'name=""text2""', 'value=""#%text2%#""></td>', '</tr>', '<tr>', '<td', 'align=""left""', 'valign=""top""><span', 'class=""text10"">Text', '#3</span></td>', '<td', 'align=""left""', 'valign=""top""><input', 'class=""field10""', 'style=""width:500px""', 'name=""text3""', 'value=""#%text3%#""></td>', '</tr>', '<tr>', '<td', 'align=""left""', 'valign=""top""><span', 'class=""text10"">Text', '#4</span></td>', '<td', 'align=""left""', 'valign=""top""><input', 'class=""field10""', 'style=""width:500px""', 'name=""text4""', 'value=""#%text4%#""></td>', '</tr>', '<tr>', '<td', 'align=""left""', 'valign=""top""><span', 'class=""text10"">Text', '#5</span></td>', '<td', 'align=""left""', 'valign=""top""><input', 'class=""field10""', 'style=""width:500px""', 'name=""text5""', 'value=""#%text5%#""></td>', '</tr>', '<tr>', '<td', 'align=""left""', 'valign=""top""><span', 'class=""text10"">Text', '#6</span></td>', '<td', 'align=""left""', 'valign=""top""><input', 'class=""field10""', 'style=""width:500px""', 'name=""text6""', 'value=""#%text6%#""></td>', '</tr>', '<tr>', '<td', 'align=""left""', 'valign=""top""><span', 'class=""text10"">Text', '#7</span></td>', '<td', 'align=""left""', 'valign=""top""><input', 'class=""field10""', 'style=""width:500px""', 'name=""text7""', 'value=""#%text7%#""></td>', '</tr>', '<tr>', '<td', 'align=""left""', 'valign=""top""><span', 'class=""text10"">Text', '#8</span></td>', '<td', 'align=""left""', 'valign=""top""><input', 'class=""field10""', 'style=""width:500px""', 'name=""text8""', 'value=""#%text8%#""></td>', '</tr>', '<tr>', '<td', 'align=""left""', 'valign=""top""><span', 'class=""text10"">Text', '#9</span></td>', '<td', 'align=""left""', 'valign=""top""><input', 'class=""field10""', 'style=""width:500px""', 'name=""text9""', 'value=""#%text9%#""></td>', '</tr>', '<tr>', '<td', 'align=""left""', 'valign=""top""><span', 'class=""text10"">Text', '#10</span></td>', '<td', 'align=""left""', 'valign=""top""><input', 'class=""field10""', 'style=""width:500px""', 'name=""text10""', 'value=""#%text10%#""></td>', '</tr>', '<tr>', '<td', 'align=""left""', 'valign=""top""><span', 'class=""text10"">HTML', 'Ad<br', '/>If', 'you', 'enter', 'HTML', 'ad,', 'the', 'fields', 'above', '(Title,', 'URL,', 'Texts)', 'will', 'not', 'be', 'used</span></td>', '<td', 'align=""left""', 'valign=""top""><input', 'class=""field10""', 'style=""width:500px""', 'name=""html_ad""', 'value=""#%html_ad%#""></td>', '</tr>', '<tr>', '<td', 'align=""left""', 'valign=""top""><span', 'class=""text10"">Categories</span></td>', '<td', 'align=""left""', 'valign=""top""><input', 'class=""field10""', 'style=""width:500px""', 'name=""categories""', 'value=""#%categories%#""></td>', '</tr>', '<tr>', '<td', 'align=""left""', 'valign=""top""><span', 'class=""text10"">Keywords', '(separated', 'by', 'a', 'comma)</span></td>', '<td', 'align=""left""', 'valign=""top""><input', 'class=""field10""', 'style=""width:500px""', 'name=""keywords""', 'value=""#%keywords%#""></td>', '</tr>', '<tr>', '<td', 'align=""left""', 'valign=""top""><span', 'class=""text10"">Your', 'new', 'AdLink', 'has', 'been', 'created</span></td>', '<td', 'align=""left""', 'valign=""top""><input', 'class=""field10""', 'style=""width:500px""', 'name=""adlink_created""', 'value=""#%adlink_created%#""></td>', '</tr>', '<tr>', '<td', 'align=""left""', 'valign=""top""><span', 'class=""text10"">Selected', 'AdLink', 'has', 'been', 'edited</span></td>', '<td', 'align=""left""', 'valign=""top""><input', 'class=""field10""', 'style=""width:500px""', 'name=""adlink_edited""', 'value=""#%adlink_edited%#""></td>', '</tr>', '<tr>', '<td', 'align=""left""', 'valign=""top""><span', 'class=""text10"">AdLink', 'deleted</span></td>', '<td', 'align=""left""', 'valign=""top""><input', 'class=""field10""', 'style=""width:500px""', 'name=""adlink_deleted""', 'value=""#%adlink_deleted%#""></td>', '</tr>', '<tr>', '<td', 'align=""left""', 'valign=""top""><span', 'class=""text10"">Clicks', 'added', 'to', 'this', 'AdLink:', '</span></td>', '<td', 'align=""left""', 'valign=""top""><input', 'class=""field10""', 'style=""width:500px""', 'name=""clicks_added1""', 'value=""#%clicks_added1%#""></td>', '</tr>', '<tr>', '<td', 'align=""left""', 'valign=""top""><span', 'class=""text10"">taken', 'from', 'your', 'account.</span></td>', '<td', 'align=""left""', 'valign=""top""><input', 'class=""field10""', 'style=""width:500px""', 'name=""clicks_added2""', 'value=""#%clicks_added2%#""></td>', '</tr>', '<tr>', '<td', 'align=""middle""', 'width=""100%""', 'colSpan=2><input', 'class=""button10""', 'type=""submit""', 'value=""Save""', 'name=""submitbut""></td>', '</tr>', '</table></td></tr></table></form>', '<br', '/>```']",challenge not surrounded by ''': ,
"'use strict';

var path = require('path');
var dest = path.resolve.bind(path, __dirname);
var through = require('through2');

module.exports = function(app, options) {
  options = options || {};

  var destBase = dest(app.cwd, options.dest || 'examples');
  var srcBase = path.resolve.bind(path, options.cwd || __dirname);

  return {
    basic: {
      options: {
        cwd: srcBase('templates'),
        destBase: destBase,
        flatten: true
      },
      files: [
        {src: '*'}
      ]
    }
  };
};
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', ""```'use"", ""strict';"", 'var', 'path', '=', ""require('path');"", 'var', 'dest', '=', 'path.resolve.bind(path,', '__dirname);', 'var', 'through', '=', ""require('through2');"", 'module.exports', '=', 'function(app,', 'options)', '{', 'options', '=', 'options', '||', '{};', 'var', 'destBase', '=', 'dest(app.cwd,', 'options.dest', '||', ""'examples');"", 'var', 'srcBase', '=', 'path.resolve.bind(path,', 'options.cwd', '||', '__dirname);', 'return', '{', 'basic:', '{', 'options:', '{', 'cwd:', ""srcBase('templates'),"", 'destBase:', 'destBase,', 'flatten:', 'true', '},', 'files:', '[', '{src:', ""'*'}"", ']', '}', '};', '};', '```']",challenge not surrounded by ''': ,
"package edu.wpi.first.wpilibj.templates;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author henrypitcairn
 */

public class RooThreadedCatapult implements Runnable {

    private final Thread t;
    public RooThreadedCatapult() {
        t = new Thread(this);
    }
    public void launch() { t.start(); }
    public void run() {
        RooCatapult rc = RooCatapult.getInstance();
        rc.launch(true);
    }
    
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'edu.wpi.first.wpilibj.templates;', '/*', '*', 'To', 'change', 'this', 'license', 'header,', 'choose', 'License', 'Headers', 'in', 'Project', 'Properties.', '*', 'To', 'change', 'this', 'template', 'file,', 'choose', 'Tools', '|', 'Templates', '*', 'and', 'open', 'the', 'template', 'in', 'the', 'editor.', '*/', '/**', '*', '*', '@author', 'henrypitcairn', '*/', 'public', 'class', 'RooThreadedCatapult', 'implements', 'Runnable', '{', 'private', 'final', 'Thread', 't;', 'public', 'RooThreadedCatapult()', '{', 't', '=', 'new', 'Thread(this);', '}', 'public', 'void', 'launch()', '{', 't.start();', '}', 'public', 'void', 'run()', '{', 'RooCatapult', 'rc', '=', 'RooCatapult.getInstance();', 'rc.launch(true);', '}', '}', '```']",challenge not surrounded by ''': ,
"<html>
<head>
<meta http-equiv=""Content-Type"" content=""text/html; charset=US-ASCII"">
<title>basic_signal_set::implementation_type</title>
<link rel=""stylesheet"" href=""../../../../../doc/src/boostbook.css"" type=""text/css"">
<meta name=""generator"" content=""DocBook XSL Stylesheets V1.78.1"">
<link rel=""home"" href=""../../../boost_asio.html"" title=""Boost.Asio"">
<link rel=""up"" href=""../basic_signal_set.html"" title=""basic_signal_set"">
<link rel=""prev"" href=""implementation.html"" title=""basic_signal_set::implementation"">
<link rel=""next"" href=""remove.html"" title=""basic_signal_set::remove"">
</head>
<body bgcolor=""white"" text=""black"" link=""#0000FF"" vlink=""#840084"" alink=""#0000FF"">
<table cellpadding=""2"" width=""100%""><tr>
<td valign=""top""><img alt=""Boost C++ Libraries"" width=""277"" height=""86"" src=""../../../../../boost.png""></td>
<td align=""center""><a href=""../../../../../index.html"">Home</a></td>
<td align=""center""><a href=""../../../../../libs/libraries.htm"">Libraries</a></td>
<td align=""center""><a href=""http://www.boost.org/users/people.html"">People</a></td>
<td align=""center""><a href=""http://www.boost.org/users/faq.html"">FAQ</a></td>
<td align=""center""><a href=""../../../../../more/index.htm"">More</a></td>
</tr></table>
<hr>
<div class=""spirit-nav"">
<a accesskey=""p"" href=""implementation.html""><img src=""../../../../../doc/src/images/prev.png"" alt=""Prev""></a><a accesskey=""u"" href=""../basic_signal_set.html""><img src=""../../../../../doc/src/images/up.png"" alt=""Up""></a><a accesskey=""h"" href=""../../../boost_asio.html""><img src=""../../../../../doc/src/images/home.png"" alt=""Home""></a><a accesskey=""n"" href=""remove.html""><img src=""../../../../../doc/src/images/next.png"" alt=""Next""></a>
</div>
<div class=""section"">
<div class=""titlepage""><div><div><h4 class=""title"">
<a name=""boost_asio.reference.basic_signal_set.implementation_type""></a><a class=""link"" href=""implementation_type.html"" title=""basic_signal_set::implementation_type"">basic_signal_set::implementation_type</a>
</h4></div></div></div>
<p>
          <span class=""emphasis""><em>Inherited from basic_io_object.</em></span>
        </p>
<p>
          <a class=""indexterm"" name=""idm45773652008896""></a> 
The underlying implementation type of
          I/O object.
        </p>
<pre class=""programlisting""><span class=""keyword"">typedef</span> <span class=""identifier"">service_type</span><span class=""special"">::</span><span class=""identifier"">implementation_type</span> <span class=""identifier"">implementation_type</span><span class=""special"">;</span>
</pre>
<h6>
<a name=""boost_asio.reference.basic_signal_set.implementation_type.h0""></a>
          <span class=""phrase""><a name=""boost_asio.reference.basic_signal_set.implementation_type.requirements""></a></span><a class=""link"" href=""implementation_type.html#boost_asio.reference.basic_signal_set.implementation_type.requirements"">Requirements</a>
        </h6>
<p>
          <span class=""emphasis""><em>Header: </em></span><code class=""literal"">boost/asio/basic_signal_set.hpp</code>
        </p>
<p>
          <span class=""emphasis""><em>Convenience header: </em></span><code class=""literal"">boost/asio.hpp</code>
        </p>
</div>
<table xmlns:rev=""http://www.cs.rpi.edu/~gregod/boost/tools/doc/revision"" width=""100%""><tr>
<td align=""left""></td>
<td align=""right""><div class=""copyright-footer"">Copyright &#169; 2003-2015 Christopher M.
      Kohlhoff<p>
        Distributed under the Boost Software License, Version 1.0. (See accompanying
        file LICENSE_1_0.txt or copy at <a href=""http://www.boost.org/LICENSE_1_0.txt"" target=""_top"">http://www.boost.org/LICENSE_1_0.txt</a>)
      </p>
</div></td>
</tr></table>
<hr>
<div class=""spirit-nav"">
<a accesskey=""p"" href=""implementation.html""><img src=""../../../../../doc/src/images/prev.png"" alt=""Prev""></a><a accesskey=""u"" href=""../basic_signal_set.html""><img src=""../../../../../doc/src/images/up.png"" alt=""Up""></a><a accesskey=""h"" href=""../../../boost_asio.html""><img src=""../../../../../doc/src/images/home.png"" alt=""Home""></a><a accesskey=""n"" href=""remove.html""><img src=""../../../../../doc/src/images/next.png"" alt=""Next""></a>
</div>
</body>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<html>', '<head>', '<meta', 'http-equiv=""Content-Type""', 'content=""text/html;', 'charset=US-ASCII"">', '<title>basic_signal_set::implementation_type</title>', '<link', 'rel=""stylesheet""', 'href=""../../../../../doc/src/boostbook.css""', 'type=""text/css"">', '<meta', 'name=""generator""', 'content=""DocBook', 'XSL', 'Stylesheets', 'V1.78.1"">', '<link', 'rel=""home""', 'href=""../../../boost_asio.html""', 'title=""Boost.Asio"">', '<link', 'rel=""up""', 'href=""../basic_signal_set.html""', 'title=""basic_signal_set"">', '<link', 'rel=""prev""', 'href=""implementation.html""', 'title=""basic_signal_set::implementation"">', '<link', 'rel=""next""', 'href=""remove.html""', 'title=""basic_signal_set::remove"">', '</head>', '<body', 'bgcolor=""white""', 'text=""black""', 'link=""#0000FF""', 'vlink=""#840084""', 'alink=""#0000FF"">', '<table', 'cellpadding=""2""', 'width=""100%""><tr>', '<td', 'valign=""top""><img', 'alt=""Boost', 'C++', 'Libraries""', 'width=""277""', 'height=""86""', 'src=""../../../../../boost.png""></td>', '<td', 'align=""center""><a', 'href=""../../../../../index.html"">Home</a></td>', '<td', 'align=""center""><a', 'href=""../../../../../libs/libraries.htm"">Libraries</a></td>', '<td', 'align=""center""><a', 'href=""http://www.boost.org/users/people.html"">People</a></td>', '<td', 'align=""center""><a', 'href=""http://www.boost.org/users/faq.html"">FAQ</a></td>', '<td', 'align=""center""><a', 'href=""../../../../../more/index.htm"">More</a></td>', '</tr></table>', '<hr>', '<div', 'class=""spirit-nav"">', '<a', 'accesskey=""p""', 'href=""implementation.html""><img', 'src=""../../../../../doc/src/images/prev.png""', 'alt=""Prev""></a><a', 'accesskey=""u""', 'href=""../basic_signal_set.html""><img', 'src=""../../../../../doc/src/images/up.png""', 'alt=""Up""></a><a', 'accesskey=""h""', 'href=""../../../boost_asio.html""><img', 'src=""../../../../../doc/src/images/home.png""', 'alt=""Home""></a><a', 'accesskey=""n""', 'href=""remove.html""><img', 'src=""../../../../../doc/src/images/next.png""', 'alt=""Next""></a>', '</div>', '<div', 'class=""section"">', '<div', 'class=""titlepage""><div><div><h4', 'class=""title"">', '<a', 'name=""boost_asio.reference.basic_signal_set.implementation_type""></a><a', 'class=""link""', 'href=""implementation_type.html""', 'title=""basic_signal_set::implementation_type"">basic_signal_set::implementation_type</a>', '</h4></div></div></div>', '<p>', '<span', 'class=""emphasis""><em>Inherited', 'from', 'basic_io_object.</em></span>', '</p>', '<p>', '<a', 'class=""indexterm""', 'name=""idm45773652008896""></a>', 'The', 'underlying', 'implementation', 'type', 'of', 'I/O', 'object.', '</p>', '<pre', 'class=""programlisting""><span', 'class=""keyword"">typedef</span>', '<span', 'class=""identifier"">service_type</span><span', 'class=""special"">::</span><span', 'class=""identifier"">implementation_type</span>', '<span', 'class=""identifier"">implementation_type</span><span', 'class=""special"">;</span>', '</pre>', '<h6>', '<a', 'name=""boost_asio.reference.basic_signal_set.implementation_type.h0""></a>', '<span', 'class=""phrase""><a', 'name=""boost_asio.reference.basic_signal_set.implementation_type.requirements""></a></span><a', 'class=""link""', 'href=""implementation_type.html#boost_asio.reference.basic_signal_set.implementation_type.requirements"">Requirements</a>', '</h6>', '<p>', '<span', 'class=""emphasis""><em>Header:', '</em></span><code', 'class=""literal"">boost/asio/basic_signal_set.hpp</code>', '</p>', '<p>', '<span', 'class=""emphasis""><em>Convenience', 'header:', '</em></span><code', 'class=""literal"">boost/asio.hpp</code>', '</p>', '</div>', '<table', 'xmlns:rev=""http://www.cs.rpi.edu/~gregod/boost/tools/doc/revision""', 'width=""100%""><tr>', '<td', 'align=""left""></td>', '<td', 'align=""right""><div', 'class=""copyright-footer"">Copyright', '&#169;', '2003-2015', 'Christopher', 'M.', 'Kohlhoff<p>', 'Distributed', 'under', 'the', 'Boost', 'Software', 'License,', 'Version', '1.0.', '(See', 'accompanying', 'file', 'LICENSE_1_0.txt', 'or', 'copy', 'at', '<a', 'href=""http://www.boost.org/LICENSE_1_0.txt""', 'target=""_top"">http://www.boost.org/LICENSE_1_0.txt</a>)', '</p>', '</div></td>', '</tr></table>', '<hr>', '<div', 'class=""spirit-nav"">', '<a', 'accesskey=""p""', 'href=""implementation.html""><img', 'src=""../../../../../doc/src/images/prev.png""', 'alt=""Prev""></a><a', 'accesskey=""u""', 'href=""../basic_signal_set.html""><img', 'src=""../../../../../doc/src/images/up.png""', 'alt=""Up""></a><a', 'accesskey=""h""', 'href=""../../../boost_asio.html""><img', 'src=""../../../../../doc/src/images/home.png""', 'alt=""Home""></a><a', 'accesskey=""n""', 'href=""remove.html""><img', 'src=""../../../../../doc/src/images/next.png""', 'alt=""Next""></a>', '</div>', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"import DS from 'ember-data';
import moment from 'moment';

const { RESTSerializer } = DS;

export default RESTSerializer.extend({
  isNewSerializerAPI: true,
  serialize(snapshot, options) {
    let json = this._super(snapshot, options);

    // set time to 5pm, always.
    let dueDate = moment(json.dueDate);
    dueDate.hour('17');
    dueDate.minute('00');
    json.dueDate = dueDate.format();

    //don't persist this, it is handled by the server
    delete json.updatedAt;
    return json;
  }
});
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'DS', 'from', ""'ember-data';"", 'import', 'moment', 'from', ""'moment';"", 'const', '{', 'RESTSerializer', '}', '=', 'DS;', 'export', 'default', 'RESTSerializer.extend({', 'isNewSerializerAPI:', 'true,', 'serialize(snapshot,', 'options)', '{', 'let', 'json', '=', 'this._super(snapshot,', 'options);', '//', 'set', 'time', 'to', '5pm,', 'always.', 'let', 'dueDate', '=', 'moment(json.dueDate);', ""dueDate.hour('17');"", ""dueDate.minute('00');"", 'json.dueDate', '=', 'dueDate.format();', ""//don't"", 'persist', 'this,', 'it', 'is', 'handled', 'by', 'the', 'server', 'delete', 'json.updatedAt;', 'return', 'json;', '}', '});', '```']",challenge not surrounded by ''': ,
"import HtmlWebpackPlugin from 'html-webpack-plugin';

export default isProduction => (new HtmlWebpackPlugin({
    template: 'app/index.html',
    inject: true,
    trackJSToken: isProduction ? '' : '',
    minify: {
        removeComments: true,
        collapseWhitespace: true,
        removeRedundantAttributes: true,
        useShortDoctype: true,
        removeEmptyAttributes: true,
        removeStyleLinkTypeAttributes: true,
        keepClosingSlash: true,
        minifyJS: true,
        minifyCSS: true,
        minifyURLS: true,
    },
}));
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'HtmlWebpackPlugin', 'from', ""'html-webpack-plugin';"", 'export', 'default', 'isProduction', '=>', '(new', 'HtmlWebpackPlugin({', 'template:', ""'app/index.html',"", 'inject:', 'true,', 'trackJSToken:', 'isProduction', '?', ""''"", ':', ""'',"", 'minify:', '{', 'removeComments:', 'true,', 'collapseWhitespace:', 'true,', 'removeRedundantAttributes:', 'true,', 'useShortDoctype:', 'true,', 'removeEmptyAttributes:', 'true,', 'removeStyleLinkTypeAttributes:', 'true,', 'keepClosingSlash:', 'true,', 'minifyJS:', 'true,', 'minifyCSS:', 'true,', 'minifyURLS:', 'true,', '},', '}));', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.0 Frameset//EN""""http://www.w3.org/TR/REC-html40/frameset.dtd"">
<HTML>
<HEAD>
<meta name=""generator"" content=""JDiff v1.0.9"">
<!-- Generated by the JDiff Javadoc doclet -->
<!-- (http://www.jdiff.org) -->
<meta name=""description"" content=""JDiff is a Javadoc doclet which generates an HTML report of all the packages, classes, constructors, methods, and fields which have been removed, added or changed in any way, including their documentation, when two APIs are compared."">
<meta name=""keywords"" content=""diff, jdiff, javadiff, java diff, java difference, API difference, difference between two APIs, API diff, Javadoc, doclet"">
<TITLE>
org.apache.hadoop.http.FilterInitializer
</TITLE>
<LINK REL=""stylesheet"" TYPE=""text/css"" HREF=""../stylesheet-jdiff.css"" TITLE=""Style"">
</HEAD>
<BODY>
<!-- Start of nav bar -->
<TABLE summary=""Navigation bar"" BORDER=""0"" WIDTH=""100%"" CELLPADDING=""1"" CELLSPACING=""0"">
  <TR>
    <TD COLSPAN=2 BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1"">
    <TABLE summary=""Navigation bar"" BORDER=""0"" CELLPADDING=""0"" CELLSPACING=""3"">
    <TR ALIGN=""center"" VALIGN=""top"">
      <TD BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1""> <A HREF=""../../api/org/apache/hadoop/http/FilterInitializer.html"" target=""_top""><FONT CLASS=""NavBarFont1""><B><tt>hadoop 0.20.2-cdh3u5</tt></B></FONT></A>&nbsp;</TD>
      <TD BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1""> <A HREF=""changes-summary.html""><FONT CLASS=""NavBarFont1""><B>Overview</B></FONT></A>&nbsp;</TD>
      <TD BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1""> <A HREF=""pkg_org.apache.hadoop.http.html""><FONT CLASS=""NavBarFont1""><B>Package</B></FONT></A>&nbsp;</TD>
      <TD BGCOLOR=""#FFFFFF"" CLASS=""NavBarCell1Rev""> &nbsp;<FONT CLASS=""NavBarFont1Rev""><B>Class</B></FONT>&nbsp;</TD>
      <TD BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1""> <A HREF=""jdiff_statistics.html""><FONT CLASS=""NavBarFont1""><B>Statistics</B></FONT></A>&nbsp;</TD>
      <TD BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1""> <A HREF=""jdiff_help.html""><FONT CLASS=""NavBarFont1""><B>Help</B></FONT></A>&nbsp;</TD>
    </TR>
    </TABLE>
  </TD>
  <TD ALIGN=""right"" VALIGN=""top"" ROWSPAN=3><EM><b>Generated by<br><a href=""http://www.jdiff.org"" class=""staysblack"" target=""_top"">JDiff</a></b></EM></TD>
</TR>
<TR>
  <TD BGCOLOR=""#FFFFFF"" CLASS=""NavBarCell2""><FONT SIZE=""-2"">
&nbsp;<B>PREV CLASS</B>&nbsp;
&nbsp;<A HREF=""org.apache.hadoop.http.HttpServer.html""><B>NEXT CLASS</B></A>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  <A HREF=""../changes.html"" TARGET=""_top""><B>FRAMES</B></A>  &nbsp;
  &nbsp;<A HREF=""org.apache.hadoop.http.FilterInitializer.html"" TARGET=""_top""><B>NO FRAMES</B></A></FONT></TD>
  <TD BGCOLOR=""#FFFFFF"" CLASS=""NavBarCell3""><FONT SIZE=""-2""> DETAIL: &nbsp;
CONSTRUCTORS&nbsp;|&nbsp;
<a href=""#methods"">METHODS</a>&nbsp;|&nbsp;
FIELDS
  </FONT></TD>
</TR>
</TABLE>
<HR>
<!-- End of nav bar -->
<H2>
Class org.apache.hadoop.http.<A HREF=""../../api/org/apache/hadoop/http/FilterInitializer.html"" target=""_top""><tt>FilterInitializer</tt></A>
</H2>
<a NAME=""constructors""></a>
<a NAME=""methods""></a>
<p>
<a NAME=""Added""></a>
<TABLE summary=""Added Methods"" BORDER=""1"" CELLPADDING=""3"" CELLSPACING=""0"" WIDTH=""100%"">
<TR BGCOLOR=""#CCCCFF"" CLASS=""TableHeadingColor"">
  <TD VALIGN=""TOP"" COLSPAN=2><FONT SIZE=""+1""><B>Added Methods</B></FONT></TD>
</TR>
<TR BGCOLOR=""#FFFFFF"" CLASS=""TableRowColor"">
  <TD VALIGN=""TOP"" WIDTH=""25%"">
  <A NAME=""org.apache.hadoop.http.FilterInitializer.initFilter_added(org.apache.hadoop.http.FilterContainer, org.apache.hadoop.conf.Configuration)""></A>
  <nobr><code>void</code>&nbsp;<A HREF=""../../api/org/apache/hadoop/http/FilterInitializer.html#initFilter(org.apache.hadoop.http.FilterContainer, org.apache.hadoop.conf.Configuration)"" target=""_top""><tt>initFilter</tt></A>(<code>FilterContainer,</nobr> Configuration<nobr><nobr></code>)</nobr>
  </TD>
  <TD VALIGN=""TOP"">Initialize a Filter to a FilterContainer.</TD>
</TR>
</TABLE>
&nbsp;
<a NAME=""fields""></a>
<HR>
<!-- Start of nav bar -->
<TABLE summary=""Navigation bar"" BORDER=""0"" WIDTH=""100%"" CELLPADDING=""1"" CELLSPACING=""0"">
  <TR>
    <TD COLSPAN=2 BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1"">
    <TABLE summary=""Navigation bar"" BORDER=""0"" CELLPADDING=""0"" CELLSPACING=""3"">
    <TR ALIGN=""center"" VALIGN=""top"">
      <TD BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1""> <A HREF=""../../api/org/apache/hadoop/http/FilterInitializer.html"" target=""_top""><FONT CLASS=""NavBarFont1""><B><tt>hadoop 0.20.2-cdh3u5</tt></B></FONT></A>&nbsp;</TD>
      <TD BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1""> <A HREF=""changes-summary.html""><FONT CLASS=""NavBarFont1""><B>Overview</B></FONT></A>&nbsp;</TD>
      <TD BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1""> <A HREF=""pkg_org.apache.hadoop.http.html""><FONT CLASS=""NavBarFont1""><B>Package</B></FONT></A>&nbsp;</TD>
      <TD BGCOLOR=""#FFFFFF"" CLASS=""NavBarCell1Rev""> &nbsp;<FONT CLASS=""NavBarFont1Rev""><B>Class</B></FONT>&nbsp;</TD>
      <TD BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1""> <A HREF=""jdiff_statistics.html""><FONT CLASS=""NavBarFont1""><B>Statistics</B></FONT></A>&nbsp;</TD>
      <TD BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1""> <A HREF=""jdiff_help.html""><FONT CLASS=""NavBarFont1""><B>Help</B></FONT></A>&nbsp;</TD>
    </TR>
    </TABLE>
  </TD>
  <TD ALIGN=""right"" VALIGN=""top"" ROWSPAN=3></TD>
</TR>
<TR>
  <TD BGCOLOR=""#FFFFFF"" CLASS=""NavBarCell2""><FONT SIZE=""-2"">
&nbsp;<B>PREV CLASS</B>&nbsp;
&nbsp;<A HREF=""org.apache.hadoop.http.HttpServer.html""><B>NEXT CLASS</B></A>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  <A HREF=""../changes.html"" TARGET=""_top""><B>FRAMES</B></A>  &nbsp;
  &nbsp;<A HREF=""org.apache.hadoop.http.FilterInitializer.html"" TARGET=""_top""><B>NO FRAMES</B></A></FONT></TD>
<TD BGCOLOR=""0xFFFFFF"" CLASS=""NavBarCell3""></TD>
</TR>
</TABLE>
<HR>
<!-- End of nav bar -->
</BODY>
</HTML>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'HTML', 'PUBLIC', '""-//W3C//DTD', 'HTML', '4.0', 'Frameset//EN""""http://www.w3.org/TR/REC-html40/frameset.dtd"">', '<HTML>', '<HEAD>', '<meta', 'name=""generator""', 'content=""JDiff', 'v1.0.9"">', '<!--', 'Generated', 'by', 'the', 'JDiff', 'Javadoc', 'doclet', '-->', '<!--', '(http://www.jdiff.org)', '-->', '<meta', 'name=""description""', 'content=""JDiff', 'is', 'a', 'Javadoc', 'doclet', 'which', 'generates', 'an', 'HTML', 'report', 'of', 'all', 'the', 'packages,', 'classes,', 'constructors,', 'methods,', 'and', 'fields', 'which', 'have', 'been', 'removed,', 'added', 'or', 'changed', 'in', 'any', 'way,', 'including', 'their', 'documentation,', 'when', 'two', 'APIs', 'are', 'compared."">', '<meta', 'name=""keywords""', 'content=""diff,', 'jdiff,', 'javadiff,', 'java', 'diff,', 'java', 'difference,', 'API', 'difference,', 'difference', 'between', 'two', 'APIs,', 'API', 'diff,', 'Javadoc,', 'doclet"">', '<TITLE>', 'org.apache.hadoop.http.FilterInitializer', '</TITLE>', '<LINK', 'REL=""stylesheet""', 'TYPE=""text/css""', 'HREF=""../stylesheet-jdiff.css""', 'TITLE=""Style"">', '</HEAD>', '<BODY>', '<!--', 'Start', 'of', 'nav', 'bar', '-->', '<TABLE', 'summary=""Navigation', 'bar""', 'BORDER=""0""', 'WIDTH=""100%""', 'CELLPADDING=""1""', 'CELLSPACING=""0"">', '<TR>', '<TD', 'COLSPAN=2', 'BGCOLOR=""#EEEEFF""', 'CLASS=""NavBarCell1"">', '<TABLE', 'summary=""Navigation', 'bar""', 'BORDER=""0""', 'CELLPADDING=""0""', 'CELLSPACING=""3"">', '<TR', 'ALIGN=""center""', 'VALIGN=""top"">', '<TD', 'BGCOLOR=""#EEEEFF""', 'CLASS=""NavBarCell1"">', '<A', 'HREF=""../../api/org/apache/hadoop/http/FilterInitializer.html""', 'target=""_top""><FONT', 'CLASS=""NavBarFont1""><B><tt>hadoop', '0.20.2-cdh3u5</tt></B></FONT></A>&nbsp;</TD>', '<TD', 'BGCOLOR=""#EEEEFF""', 'CLASS=""NavBarCell1"">', '<A', 'HREF=""changes-summary.html""><FONT', 'CLASS=""NavBarFont1""><B>Overview</B></FONT></A>&nbsp;</TD>', '<TD', 'BGCOLOR=""#EEEEFF""', 'CLASS=""NavBarCell1"">', '<A', 'HREF=""pkg_org.apache.hadoop.http.html""><FONT', 'CLASS=""NavBarFont1""><B>Package</B></FONT></A>&nbsp;</TD>', '<TD', 'BGCOLOR=""#FFFFFF""', 'CLASS=""NavBarCell1Rev"">', '&nbsp;<FONT', 'CLASS=""NavBarFont1Rev""><B>Class</B></FONT>&nbsp;</TD>', '<TD', 'BGCOLOR=""#EEEEFF""', 'CLASS=""NavBarCell1"">', '<A', 'HREF=""jdiff_statistics.html""><FONT', 'CLASS=""NavBarFont1""><B>Statistics</B></FONT></A>&nbsp;</TD>', '<TD', 'BGCOLOR=""#EEEEFF""', 'CLASS=""NavBarCell1"">', '<A', 'HREF=""jdiff_help.html""><FONT', 'CLASS=""NavBarFont1""><B>Help</B></FONT></A>&nbsp;</TD>', '</TR>', '</TABLE>', '</TD>', '<TD', 'ALIGN=""right""', 'VALIGN=""top""', 'ROWSPAN=3><EM><b>Generated', 'by<br><a', 'href=""http://www.jdiff.org""', 'class=""staysblack""', 'target=""_top"">JDiff</a></b></EM></TD>', '</TR>', '<TR>', '<TD', 'BGCOLOR=""#FFFFFF""', 'CLASS=""NavBarCell2""><FONT', 'SIZE=""-2"">', '&nbsp;<B>PREV', 'CLASS</B>&nbsp;', '&nbsp;<A', 'HREF=""org.apache.hadoop.http.HttpServer.html""><B>NEXT', 'CLASS</B></A>', '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;', '<A', 'HREF=""../changes.html""', 'TARGET=""_top""><B>FRAMES</B></A>', '&nbsp;', '&nbsp;<A', 'HREF=""org.apache.hadoop.http.FilterInitializer.html""', 'TARGET=""_top""><B>NO', 'FRAMES</B></A></FONT></TD>', '<TD', 'BGCOLOR=""#FFFFFF""', 'CLASS=""NavBarCell3""><FONT', 'SIZE=""-2"">', 'DETAIL:', '&nbsp;', 'CONSTRUCTORS&nbsp;|&nbsp;', '<a', 'href=""#methods"">METHODS</a>&nbsp;|&nbsp;', 'FIELDS', '</FONT></TD>', '</TR>', '</TABLE>', '<HR>', '<!--', 'End', 'of', 'nav', 'bar', '-->', '<H2>', 'Class', 'org.apache.hadoop.http.<A', 'HREF=""../../api/org/apache/hadoop/http/FilterInitializer.html""', 'target=""_top""><tt>FilterInitializer</tt></A>', '</H2>', '<a', 'NAME=""constructors""></a>', '<a', 'NAME=""methods""></a>', '<p>', '<a', 'NAME=""Added""></a>', '<TABLE', 'summary=""Added', 'Methods""', 'BORDER=""1""', 'CELLPADDING=""3""', 'CELLSPACING=""0""', 'WIDTH=""100%"">', '<TR', 'BGCOLOR=""#CCCCFF""', 'CLASS=""TableHeadingColor"">', '<TD', 'VALIGN=""TOP""', 'COLSPAN=2><FONT', 'SIZE=""+1""><B>Added', 'Methods</B></FONT></TD>', '</TR>', '<TR', 'BGCOLOR=""#FFFFFF""', 'CLASS=""TableRowColor"">', '<TD', 'VALIGN=""TOP""', 'WIDTH=""25%"">', '<A', 'NAME=""org.apache.hadoop.http.FilterInitializer.initFilter_added(org.apache.hadoop.http.FilterContainer,', 'org.apache.hadoop.conf.Configuration)""></A>', '<nobr><code>void</code>&nbsp;<A', 'HREF=""../../api/org/apache/hadoop/http/FilterInitializer.html#initFilter(org.apache.hadoop.http.FilterContainer,', 'org.apache.hadoop.conf.Configuration)""', 'target=""_top""><tt>initFilter</tt></A>(<code>FilterContainer,</nobr>', 'Configuration<nobr><nobr></code>)</nobr>', '</TD>', '<TD', 'VALIGN=""TOP"">Initialize', 'a', 'Filter', 'to', 'a', 'FilterContainer.</TD>', '</TR>', '</TABLE>', '&nbsp;', '<a', 'NAME=""fields""></a>', '<HR>', '<!--', 'Start', 'of', 'nav', 'bar', '-->', '<TABLE', 'summary=""Navigation', 'bar""', 'BORDER=""0""', 'WIDTH=""100%""', 'CELLPADDING=""1""', 'CELLSPACING=""0"">', '<TR>', '<TD', 'COLSPAN=2', 'BGCOLOR=""#EEEEFF""', 'CLASS=""NavBarCell1"">', '<TABLE', 'summary=""Navigation', 'bar""', 'BORDER=""0""', 'CELLPADDING=""0""', 'CELLSPACING=""3"">', '<TR', 'ALIGN=""center""', 'VALIGN=""top"">', '<TD', 'BGCOLOR=""#EEEEFF""', 'CLASS=""NavBarCell1"">', '<A', 'HREF=""../../api/org/apache/hadoop/http/FilterInitializer.html""', 'target=""_top""><FONT', 'CLASS=""NavBarFont1""><B><tt>hadoop', '0.20.2-cdh3u5</tt></B></FONT></A>&nbsp;</TD>', '<TD', 'BGCOLOR=""#EEEEFF""', 'CLASS=""NavBarCell1"">', '<A', 'HREF=""changes-summary.html""><FONT', 'CLASS=""NavBarFont1""><B>Overview</B></FONT></A>&nbsp;</TD>', '<TD', 'BGCOLOR=""#EEEEFF""', 'CLASS=""NavBarCell1"">', '<A', 'HREF=""pkg_org.apache.hadoop.http.html""><FONT', 'CLASS=""NavBarFont1""><B>Package</B></FONT></A>&nbsp;</TD>', '<TD', 'BGCOLOR=""#FFFFFF""', 'CLASS=""NavBarCell1Rev"">', '&nbsp;<FONT', 'CLASS=""NavBarFont1Rev""><B>Class</B></FONT>&nbsp;</TD>', '<TD', 'BGCOLOR=""#EEEEFF""', 'CLASS=""NavBarCell1"">', '<A', 'HREF=""jdiff_statistics.html""><FONT', 'CLASS=""NavBarFont1""><B>Statistics</B></FONT></A>&nbsp;</TD>', '<TD', 'BGCOLOR=""#EEEEFF""', 'CLASS=""NavBarCell1"">', '<A', 'HREF=""jdiff_help.html""><FONT', 'CLASS=""NavBarFont1""><B>Help</B></FONT></A>&nbsp;</TD>', '</TR>', '</TABLE>', '</TD>', '<TD', 'ALIGN=""right""', 'VALIGN=""top""', 'ROWSPAN=3></TD>', '</TR>', '<TR>', '<TD', 'BGCOLOR=""#FFFFFF""', 'CLASS=""NavBarCell2""><FONT', 'SIZE=""-2"">', '&nbsp;<B>PREV', 'CLASS</B>&nbsp;', '&nbsp;<A', 'HREF=""org.apache.hadoop.http.HttpServer.html""><B>NEXT', 'CLASS</B></A>', '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;', '<A', 'HREF=""../changes.html""', 'TARGET=""_top""><B>FRAMES</B></A>', '&nbsp;', '&nbsp;<A', 'HREF=""org.apache.hadoop.http.FilterInitializer.html""', 'TARGET=""_top""><B>NO', 'FRAMES</B></A></FONT></TD>', '<TD', 'BGCOLOR=""0xFFFFFF""', 'CLASS=""NavBarCell3""></TD>', '</TR>', '</TABLE>', '<HR>', '<!--', 'End', 'of', 'nav', 'bar', '-->', '</BODY>', '</HTML>', '```']",challenge not surrounded by ''': ,
"package weixin.util.weixin.platform.wx.rewrite;


import weixin.util.weixin.platform.wx.WeixinMessage;



import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.lang.reflect.InvocationTargetException;

/**
 * url rewriter
 *
 * @author linux_china
 */
public class UrlRewriter {
    /**
     * rewriter configuration
     */
    private Conf conf;

    /**
     * construct method
     *
     * @param conf rewriter configuration
     */
    public UrlRewriter(Conf conf) {
        this.conf = conf;
    }


    /**
     * Helpful for testing but otherwise, don't use.
     */
    public RewrittenUrl processRequest(WeixinMessage wxMsg,
                                       final HttpServletRequest request,
                                       final HttpServletResponse response)
            throws IOException, ServletException, InvocationTargetException {
        RuleChain chain = getNewChain(request);
        chain.process(wxMsg, request, response);
        return chain.getFinalRewrittenRequest();
    }

    /**
     * get new rule  chain
     *
     * @param request     http servlet request
     * @return rule chain
     */
    private RuleChain getNewChain(final HttpServletRequest request) {
        return new RuleChain(conf.getRules());
    }

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'weixin.util.weixin.platform.wx.rewrite;', 'import', 'weixin.util.weixin.platform.wx.WeixinMessage;', 'import', 'javax.servlet.ServletException;', 'import', 'javax.servlet.http.HttpServletRequest;', 'import', 'javax.servlet.http.HttpServletResponse;', 'import', 'java.io.IOException;', 'import', 'java.lang.reflect.InvocationTargetException;', '/**', '*', 'url', 'rewriter', '*', '*', '@author', 'linux_china', '*/', 'public', 'class', 'UrlRewriter', '{', '/**', '*', 'rewriter', 'configuration', '*/', 'private', 'Conf', 'conf;', '/**', '*', 'construct', 'method', '*', '*', '@param', 'conf', 'rewriter', 'configuration', '*/', 'public', 'UrlRewriter(Conf', 'conf)', '{', 'this.conf', '=', 'conf;', '}', '/**', '*', 'Helpful', 'for', 'testing', 'but', 'otherwise,', ""don't"", 'use.', '*/', 'public', 'RewrittenUrl', 'processRequest(WeixinMessage', 'wxMsg,', 'final', 'HttpServletRequest', 'request,', 'final', 'HttpServletResponse', 'response)', 'throws', 'IOException,', 'ServletException,', 'InvocationTargetException', '{', 'RuleChain', 'chain', '=', 'getNewChain(request);', 'chain.process(wxMsg,', 'request,', 'response);', 'return', 'chain.getFinalRewrittenRequest();', '}', '/**', '*', 'get', 'new', 'rule', 'chain', '*', '*', '@param', 'request', 'http', 'servlet', 'request', '*', '@return', 'rule', 'chain', '*/', 'private', 'RuleChain', 'getNewChain(final', 'HttpServletRequest', 'request)', '{', 'return', 'new', 'RuleChain(conf.getRules());', '}', '}', '```']",challenge not surrounded by ''': ,
"//-----------------------------------------------------------------------------
// PresenceTypes: PresenceTypes.cpp
//-----------------------------------------------------------------------------
// Project: Kactus 2
// Author: Janne Virtanen
// Date: 08.12.2015
//
// Description:
// Contains definitions and functions for presence types.
//-----------------------------------------------------------------------------

#include ""PresenceTypes.h""

//-----------------------------------------------------------------------------
// Function: PresenceTypes::str2Presence()
//-----------------------------------------------------------------------------
PresenceTypes::Presence PresenceTypes::str2Presence(QString str, PresenceTypes::Presence defaultValue)
{
	// Identify the correct enum value.
	if (str == QLatin1String(""illegal""))
	{
		return PresenceTypes::ILLEGAL;
	}
	else if (str == QLatin1String(""required""))
	{
		return PresenceTypes::REQUIRED;
	}
	else if (str == QLatin1String(""optional""))
	{
		return PresenceTypes::OPTIONAL;
	}
	else
	{
		return defaultValue;
	}
}

//-----------------------------------------------------------------------------
// Function: PresenceTypes::presence2Str()
//-----------------------------------------------------------------------------
QString PresenceTypes::presence2Str(PresenceTypes::Presence presence)
{
    // Create string based on the enum value.
    if (presence == PresenceTypes::ILLEGAL)
    {
        return QStringLiteral(""illegal"");
    }
    else if (presence == PresenceTypes::REQUIRED)
    {
        return QStringLiteral(""required"");
    }
    else if (presence == PresenceTypes::OPTIONAL)
    {
        return QStringLiteral(""optional"");
    }
    else
    {
        return QString();
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//-----------------------------------------------------------------------------', '//', 'PresenceTypes:', 'PresenceTypes.cpp', '//-----------------------------------------------------------------------------', '//', 'Project:', 'Kactus', '2', '//', 'Author:', 'Janne', 'Virtanen', '//', 'Date:', '08.12.2015', '//', '//', 'Description:', '//', 'Contains', 'definitions', 'and', 'functions', 'for', 'presence', 'types.', '//-----------------------------------------------------------------------------', '#include', '""PresenceTypes.h""', '//-----------------------------------------------------------------------------', '//', 'Function:', 'PresenceTypes::str2Presence()', '//-----------------------------------------------------------------------------', 'PresenceTypes::Presence', 'PresenceTypes::str2Presence(QString', 'str,', 'PresenceTypes::Presence', 'defaultValue)', '{', '//', 'Identify', 'the', 'correct', 'enum', 'value.', 'if', '(str', '==', 'QLatin1String(""illegal""))', '{', 'return', 'PresenceTypes::ILLEGAL;', '}', 'else', 'if', '(str', '==', 'QLatin1String(""required""))', '{', 'return', 'PresenceTypes::REQUIRED;', '}', 'else', 'if', '(str', '==', 'QLatin1String(""optional""))', '{', 'return', 'PresenceTypes::OPTIONAL;', '}', 'else', '{', 'return', 'defaultValue;', '}', '}', '//-----------------------------------------------------------------------------', '//', 'Function:', 'PresenceTypes::presence2Str()', '//-----------------------------------------------------------------------------', 'QString', 'PresenceTypes::presence2Str(PresenceTypes::Presence', 'presence)', '{', '//', 'Create', 'string', 'based', 'on', 'the', 'enum', 'value.', 'if', '(presence', '==', 'PresenceTypes::ILLEGAL)', '{', 'return', 'QStringLiteral(""illegal"");', '}', 'else', 'if', '(presence', '==', 'PresenceTypes::REQUIRED)', '{', 'return', 'QStringLiteral(""required"");', '}', 'else', 'if', '(presence', '==', 'PresenceTypes::OPTIONAL)', '{', 'return', 'QStringLiteral(""optional"");', '}', 'else', '{', 'return', 'QString();', '}', '}', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright 2013 Google Inc.
 *
 * Use of this source code is governed by a BSD-style license that can be
 * found in the LICENSE file.
 */

#include ""Test.h""
#include ""TestClassDef.h""
#include ""SkMD5.h""

static bool digests_equal(const SkMD5::Digest& expectedDigest, const SkMD5::Digest& computedDigest) {
    for (size_t i = 0; i < SK_ARRAY_COUNT(expectedDigest.data); ++i) {
        if (expectedDigest.data[i] != computedDigest.data[i]) {
            return false;
        }
    }
    return true;
}

static void md5_test(const char* string, const SkMD5::Digest& expectedDigest, skiatest::Reporter* reporter) {
    size_t len = strlen(string);

    // All at once
    {
        SkMD5 context;
        context.update(reinterpret_cast<const uint8_t*>(string), len);
        SkMD5::Digest digest;
        context.finish(digest);

        REPORTER_ASSERT(reporter, digests_equal(expectedDigest, digest));
    }

    // One byte at a time.
    {
        SkMD5 context;
        const uint8_t* data = reinterpret_cast<const uint8_t*>(string);
        const uint8_t* end = reinterpret_cast<const uint8_t*>(string + len);
        for (; data < end; ++data) {
            context.update(data, 1);
        }
        SkMD5::Digest digest;
        context.finish(digest);

        REPORTER_ASSERT(reporter, digests_equal(expectedDigest, digest));
    }
}

static struct MD5Test {
    const char* message;
    SkMD5::Digest digest;
} md5_tests[] = {
    // Reference tests from RFC1321 Section A.5 ( http://www.ietf.org/rfc/rfc1321.txt )
    { """", {{ 0xd4, 0x1d, 0x8c, 0xd9, 0x8f, 0x00, 0xb2, 0x04, 0xe9, 0x80, 0x09, 0x98, 0xec, 0xf8, 0x42, 0x7e }} },
    { ""a"", {{ 0x0c, 0xc1, 0x75, 0xb9, 0xc0, 0xf1, 0xb6, 0xa8, 0x31, 0xc3, 0x99, 0xe2, 0x69, 0x77, 0x26, 0x61 }} },
    { ""abc"", {{ 0x90, 0x01, 0x50, 0x98, 0x3c, 0xd2, 0x4f, 0xb0, 0xd6, 0x96, 0x3f, 0x7d, 0x28, 0xe1, 0x7f, 0x72 }} },
    { ""message digest"", {{ 0xf9, 0x6b, 0x69, 0x7d, 0x7c, 0xb7, 0x93, 0x8d, 0x52, 0x5a, 0x2f, 0x31, 0xaa, 0xf1, 0x61, 0xd0 }} },
    { ""abcdefghijklmnopqrstuvwxyz"", {{ 0xc3, 0xfc, 0xd3, 0xd7, 0x61, 0x92, 0xe4, 0x00, 0x7d, 0xfb, 0x49, 0x6c, 0xca, 0x67, 0xe1, 0x3b }} },
    { ""ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"", {{ 0xd1, 0x74, 0xab, 0x98, 0xd2, 0x77, 0xd9, 0xf5, 0xa5, 0x61, 0x1c, 0x2c, 0x9f, 0x41, 0x9d, 0x9f }} },
    { ""12345678901234567890123456789012345678901234567890123456789012345678901234567890"", {{ 0x57, 0xed, 0xf4, 0xa2, 0x2b, 0xe3, 0xc9, 0x55, 0xac, 0x49, 0xda, 0x2e, 0x21, 0x07, 0xb6, 0x7a }} },
};

DEF_TEST(MD5, reporter) {
    for (size_t i = 0; i < SK_ARRAY_COUNT(md5_tests); ++i) {
        md5_test(md5_tests[i].message, md5_tests[i].digest, reporter);
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '2013', 'Google', 'Inc.', '*', '*', 'Use', 'of', 'this', 'source', 'code', 'is', 'governed', 'by', 'a', 'BSD-style', 'license', 'that', 'can', 'be', '*', 'found', 'in', 'the', 'LICENSE', 'file.', '*/', '#include', '""Test.h""', '#include', '""TestClassDef.h""', '#include', '""SkMD5.h""', 'static', 'bool', 'digests_equal(const', 'SkMD5::Digest&', 'expectedDigest,', 'const', 'SkMD5::Digest&', 'computedDigest)', '{', 'for', '(size_t', 'i', '=', '0;', 'i', '<', 'SK_ARRAY_COUNT(expectedDigest.data);', '++i)', '{', 'if', '(expectedDigest.data[i]', '!=', 'computedDigest.data[i])', '{', 'return', 'false;', '}', '}', 'return', 'true;', '}', 'static', 'void', 'md5_test(const', 'char*', 'string,', 'const', 'SkMD5::Digest&', 'expectedDigest,', 'skiatest::Reporter*', 'reporter)', '{', 'size_t', 'len', '=', 'strlen(string);', '//', 'All', 'at', 'once', '{', 'SkMD5', 'context;', 'context.update(reinterpret_cast<const', 'uint8_t*>(string),', 'len);', 'SkMD5::Digest', 'digest;', 'context.finish(digest);', 'REPORTER_ASSERT(reporter,', 'digests_equal(expectedDigest,', 'digest));', '}', '//', 'One', 'byte', 'at', 'a', 'time.', '{', 'SkMD5', 'context;', 'const', 'uint8_t*', 'data', '=', 'reinterpret_cast<const', 'uint8_t*>(string);', 'const', 'uint8_t*', 'end', '=', 'reinterpret_cast<const', 'uint8_t*>(string', '+', 'len);', 'for', '(;', 'data', '<', 'end;', '++data)', '{', 'context.update(data,', '1);', '}', 'SkMD5::Digest', 'digest;', 'context.finish(digest);', 'REPORTER_ASSERT(reporter,', 'digests_equal(expectedDigest,', 'digest));', '}', '}', 'static', 'struct', 'MD5Test', '{', 'const', 'char*', 'message;', 'SkMD5::Digest', 'digest;', '}', 'md5_tests[]', '=', '{', '//', 'Reference', 'tests', 'from', 'RFC1321', 'Section', 'A.5', '(', 'http://www.ietf.org/rfc/rfc1321.txt', ')', '{', '"""",', '{{', '0xd4,', '0x1d,', '0x8c,', '0xd9,', '0x8f,', '0x00,', '0xb2,', '0x04,', '0xe9,', '0x80,', '0x09,', '0x98,', '0xec,', '0xf8,', '0x42,', '0x7e', '}}', '},', '{', '""a"",', '{{', '0x0c,', '0xc1,', '0x75,', '0xb9,', '0xc0,', '0xf1,', '0xb6,', '0xa8,', '0x31,', '0xc3,', '0x99,', '0xe2,', '0x69,', '0x77,', '0x26,', '0x61', '}}', '},', '{', '""abc"",', '{{', '0x90,', '0x01,', '0x50,', '0x98,', '0x3c,', '0xd2,', '0x4f,', '0xb0,', '0xd6,', '0x96,', '0x3f,', '0x7d,', '0x28,', '0xe1,', '0x7f,', '0x72', '}}', '},', '{', '""message', 'digest"",', '{{', '0xf9,', '0x6b,', '0x69,', '0x7d,', '0x7c,', '0xb7,', '0x93,', '0x8d,', '0x52,', '0x5a,', '0x2f,', '0x31,', '0xaa,', '0xf1,', '0x61,', '0xd0', '}}', '},', '{', '""abcdefghijklmnopqrstuvwxyz"",', '{{', '0xc3,', '0xfc,', '0xd3,', '0xd7,', '0x61,', '0x92,', '0xe4,', '0x00,', '0x7d,', '0xfb,', '0x49,', '0x6c,', '0xca,', '0x67,', '0xe1,', '0x3b', '}}', '},', '{', '""ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"",', '{{', '0xd1,', '0x74,', '0xab,', '0x98,', '0xd2,', '0x77,', '0xd9,', '0xf5,', '0xa5,', '0x61,', '0x1c,', '0x2c,', '0x9f,', '0x41,', '0x9d,', '0x9f', '}}', '},', '{', '""12345678901234567890123456789012345678901234567890123456789012345678901234567890"",', '{{', '0x57,', '0xed,', '0xf4,', '0xa2,', '0x2b,', '0xe3,', '0xc9,', '0x55,', '0xac,', '0x49,', '0xda,', '0x2e,', '0x21,', '0x07,', '0xb6,', '0x7a', '}}', '},', '};', 'DEF_TEST(MD5,', 'reporter)', '{', 'for', '(size_t', 'i', '=', '0;', 'i', '<', 'SK_ARRAY_COUNT(md5_tests);', '++i)', '{', 'md5_test(md5_tests[i].message,', 'md5_tests[i].digest,', 'reporter);', '}', '}', '```']",challenge not surrounded by ''': ,
"/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

""use strict"";

const gKeyGroups = (function () {

  const KEY_GROUPS = {
    ""Navigation"": [
      ""goBackKb"", ""goBackKb2"", ""goForwardKb"", ""goForwardKb2"", ""goHome"",
      ""openFileKb"", /*""F5"",*/ ""key_reload"", /*""Ctrl+F5"", Ctrl+Shift+R,*/
      ""key_stop"", ""key_stop_mac"", ""focusURLBar"", ""focusURLBar2""
    ],

    ""Current Page"": [
      /*""End"", ""Home"", ""F6"", ""Shift+F6"",*/ ""key_viewInfo"", ""key_viewSource"",
      ""printKb"", ""key_savePage"", ""key_fullZoomEnlarge"", ""key_fullZoomReduce"",
      ""key_fullZoomReset"", ""key_switchTextDirection""
    ],

    ""Editing"": [
      ""key_copy"", ""key_cut"", ""key_delete"", ""key_paste"", ""key_redo"",
      ""key_selectAll"", ""key_undo""
    ],

    ""Search"": [
      ""key_find"", ""key_findAgain"", ""key_findPrevious"", ""key_search"",
      ""key_search2"", ""key_findSelection""
    ],

    ""Windows & Tabs"": [
      ""key_close"", ""key_closeWindow"", ""key_newNavigatorTab"", ""key_newNavigator"",
      ""key_undoCloseTab"", ""key_undoCloseWindow"",
      ""key_switchToNextTab"", ""key_switchToPrevTab"",
      ""key_selectTab1"", ""key_selectTab2"", ""key_selectTab3"", ""key_selectTab4"",
      ""key_selectTab5"", ""key_selectTab6"", ""key_selectTab7"", ""key_selectTab8"",
      ""key_selectLastTab"", ""key_tabview"", ""key_nextTabGroup"", ""key_prevTabGroup"",
      ""key_minimizeWindow"", ""key_showAllTabs"", ""key_privatebrowsing"",
    ],

    ""Bookmarks & History"": [
      ""addBookmarkAsKb"", ""viewBookmarksSidebarKb"", ""viewBookmarksSidebarWinKb"",
      ""manBookmarkKb"", ""bookmarkAllTabsKb"", ""key_gotoHistory"",
      ""showAllHistoryKb"", ""key_sanitize"", ""key_sanitize_mac""
    ],

    ""Tools"": [
      ""key_openDownloads"", ""key_openAddons"", ""key_preferencesCmdMac""
    ],

    ""Developer Tools"": [
      ""key_webconsole"", ""key_errorConsole"", ""key_jsdebugger"", ""key_inspector"",
      ""key_styleeditor"", ""key_jsprofiler"", ""key_devToolbar"", ""key_responsiveUI"",
      ""key_scratchpad"", ""key_netmonitor"", ""key_devToolboxMenuItemF12"",
      ""key_browserConsole"", ""key_devToolboxMenuItem"", ""key_webide""
    ]
  };

  function group(keys) {
    let remaining = new Map(keys);
    let retval = new Map();

    for (let name in KEY_GROUPS) {
      let group = [];

      for (let id of KEY_GROUPS[name]) {
        if (remaining.has(id)) {
          group.push(keys.get(id));
          remaining.delete(id);
        }
      }

      if (group.length) {
        // Sort by label.
        group.sort((a, b) => a.label > b.label ? 1 : a.label < b.label ? -1 : 0);
        retval.set(name, group);
      }
    }

    if (remaining.size) {
      retval.set(""Other"", [...remaining.values()]);
    }

    return retval;
  }

  return {group: group};
})();
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', 'This', 'Source', 'Code', 'Form', 'is', 'subject', 'to', 'the', 'terms', 'of', 'the', 'Mozilla', 'Public', '*', 'License,', 'v.', '2.0.', 'If', 'a', 'copy', 'of', 'the', 'MPL', 'was', 'not', 'distributed', 'with', 'this', '*', 'file,', 'You', 'can', 'obtain', 'one', 'at', 'http://mozilla.org/MPL/2.0/.', '*/', '""use', 'strict"";', 'const', 'gKeyGroups', '=', '(function', '()', '{', 'const', 'KEY_GROUPS', '=', '{', '""Navigation"":', '[', '""goBackKb"",', '""goBackKb2"",', '""goForwardKb"",', '""goForwardKb2"",', '""goHome"",', '""openFileKb"",', '/*""F5"",*/', '""key_reload"",', '/*""Ctrl+F5"",', 'Ctrl+Shift+R,*/', '""key_stop"",', '""key_stop_mac"",', '""focusURLBar"",', '""focusURLBar2""', '],', '""Current', 'Page"":', '[', '/*""End"",', '""Home"",', '""F6"",', '""Shift+F6"",*/', '""key_viewInfo"",', '""key_viewSource"",', '""printKb"",', '""key_savePage"",', '""key_fullZoomEnlarge"",', '""key_fullZoomReduce"",', '""key_fullZoomReset"",', '""key_switchTextDirection""', '],', '""Editing"":', '[', '""key_copy"",', '""key_cut"",', '""key_delete"",', '""key_paste"",', '""key_redo"",', '""key_selectAll"",', '""key_undo""', '],', '""Search"":', '[', '""key_find"",', '""key_findAgain"",', '""key_findPrevious"",', '""key_search"",', '""key_search2"",', '""key_findSelection""', '],', '""Windows', '&', 'Tabs"":', '[', '""key_close"",', '""key_closeWindow"",', '""key_newNavigatorTab"",', '""key_newNavigator"",', '""key_undoCloseTab"",', '""key_undoCloseWindow"",', '""key_switchToNextTab"",', '""key_switchToPrevTab"",', '""key_selectTab1"",', '""key_selectTab2"",', '""key_selectTab3"",', '""key_selectTab4"",', '""key_selectTab5"",', '""key_selectTab6"",', '""key_selectTab7"",', '""key_selectTab8"",', '""key_selectLastTab"",', '""key_tabview"",', '""key_nextTabGroup"",', '""key_prevTabGroup"",', '""key_minimizeWindow"",', '""key_showAllTabs"",', '""key_privatebrowsing"",', '],', '""Bookmarks', '&', 'History"":', '[', '""addBookmarkAsKb"",', '""viewBookmarksSidebarKb"",', '""viewBookmarksSidebarWinKb"",', '""manBookmarkKb"",', '""bookmarkAllTabsKb"",', '""key_gotoHistory"",', '""showAllHistoryKb"",', '""key_sanitize"",', '""key_sanitize_mac""', '],', '""Tools"":', '[', '""key_openDownloads"",', '""key_openAddons"",', '""key_preferencesCmdMac""', '],', '""Developer', 'Tools"":', '[', '""key_webconsole"",', '""key_errorConsole"",', '""key_jsdebugger"",', '""key_inspector"",', '""key_styleeditor"",', '""key_jsprofiler"",', '""key_devToolbar"",', '""key_responsiveUI"",', '""key_scratchpad"",', '""key_netmonitor"",', '""key_devToolboxMenuItemF12"",', '""key_browserConsole"",', '""key_devToolboxMenuItem"",', '""key_webide""', ']', '};', 'function', 'group(keys)', '{', 'let', 'remaining', '=', 'new', 'Map(keys);', 'let', 'retval', '=', 'new', 'Map();', 'for', '(let', 'name', 'in', 'KEY_GROUPS)', '{', 'let', 'group', '=', '[];', 'for', '(let', 'id', 'of', 'KEY_GROUPS[name])', '{', 'if', '(remaining.has(id))', '{', 'group.push(keys.get(id));', 'remaining.delete(id);', '}', '}', 'if', '(group.length)', '{', '//', 'Sort', 'by', 'label.', 'group.sort((a,', 'b)', '=>', 'a.label', '>', 'b.label', '?', '1', ':', 'a.label', '<', 'b.label', '?', '-1', ':', '0);', 'retval.set(name,', 'group);', '}', '}', 'if', '(remaining.size)', '{', 'retval.set(""Other"",', '[...remaining.values()]);', '}', 'return', 'retval;', '}', 'return', '{group:', 'group};', '})();', '```']",challenge not surrounded by ''': ,
"package it.alessioricco.btc.activities;

import android.support.v4.app.Fragment;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import it.alessioricco.btc.R;

/**
 * A placeholder fragment containing a simple view.
 */
public class FeedRSSActivityFragment extends Fragment {

    public FeedRSSActivityFragment() {
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        return inflater.inflate(R.layout.fragment_feed_rss, container, false);
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'it.alessioricco.btc.activities;', 'import', 'android.support.v4.app.Fragment;', 'import', 'android.os.Bundle;', 'import', 'android.view.LayoutInflater;', 'import', 'android.view.View;', 'import', 'android.view.ViewGroup;', 'import', 'it.alessioricco.btc.R;', '/**', '*', 'A', 'placeholder', 'fragment', 'containing', 'a', 'simple', 'view.', '*/', 'public', 'class', 'FeedRSSActivityFragment', 'extends', 'Fragment', '{', 'public', 'FeedRSSActivityFragment()', '{', '}', '@Override', 'public', 'View', 'onCreateView(LayoutInflater', 'inflater,', 'ViewGroup', 'container,', 'Bundle', 'savedInstanceState)', '{', 'return', 'inflater.inflate(R.layout.fragment_feed_rss,', 'container,', 'false);', '}', '}', '```']",challenge not surrounded by ''': ,
"function useBinder(target, renderState) {
  var gl = renderState.gl, scene = renderState.glSecne;
  objForEach(target, function (binderOrFunc) {
    if (isFunc(binderOrFunc)) {
      binderOrFunc(gl, renderState);
    } else if (isFunc(binderOrFunc.bind)) {
      binderOrFunc.bind(gl, renderState);
    }
  })
}
function correlateBinder(ctrl, state) {
  var scene = state.glSecne,
    attributes = scene.attributes,
    uniforms = scene.uniforms,
    target = ctrl.binder;
  if (ctrl._invalidBinder) {
    objForEach(target, function (binderOrFunc, name) {
      var convertedBinder;
      if (binderOrFunc instanceof GLBinder) {
        convertedBinder = binderOrFunc;
      }
      else if (uniforms.hasOwnProperty(name) && !(binderOrFunc instanceof GLUniform)) {
        convertedBinder = uniforms[name].convert(binderOrFunc);
      }
      else if (isFunc(binderOrFunc)) {
        convertedBinder = new GLBinder({ name: name, bind: binderOrFunc })
      }
      else if ((attributes.hasOwnProperty(name) && !(binderOrFunc instanceof GLAttribute))) {
        convertedBinder = attributes[name].convert(binderOrFunc);
      }
      else {
        return;
      }
      target[name] = convertedBinder;
      convertedBinder._controller = ctrl;
    });
    ctrl._invalidBinder = false;
  }
}
function addBinder(target, nameOrBinder, func) {
  if (isObj(nameOrBinder) && !(nameOrBinder instanceof GLBinder)) {
    objForEach(nameOrBinder, function (value, key) {
      add(key, value);
    });
  } else {
    if (isFunc(nameOrBinder) && !func) {
      func = nameOrBinder;
      nameOrBinder = 'GLBinder' + nextUid('GLBinder');
    }
    add(nameOrBinder, func);
  }
  return target;
  function add(nameOrBinder, func) {
    if (isStr(nameOrBinder) && (isFunc(func) || func instanceof GLBinder)) {
      target[nameOrBinder] = func;
    } else if (isObj(nameOrBinder) && nameOrBinder.name) {
      target[nameOrBinder.name] = nameOrBinder;
    }
    else {
      throw Error('argument error');
    }
  }
}
function disposeBinder(obj, gl) {
  objForEach(obj, function (val) {
    if (isObj(val) && isFunc(val.dispose)) {
      val.dispose(gl)
    }
  })
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```function', 'useBinder(target,', 'renderState)', '{', 'var', 'gl', '=', 'renderState.gl,', 'scene', '=', 'renderState.glSecne;', 'objForEach(target,', 'function', '(binderOrFunc)', '{', 'if', '(isFunc(binderOrFunc))', '{', 'binderOrFunc(gl,', 'renderState);', '}', 'else', 'if', '(isFunc(binderOrFunc.bind))', '{', 'binderOrFunc.bind(gl,', 'renderState);', '}', '})', '}', 'function', 'correlateBinder(ctrl,', 'state)', '{', 'var', 'scene', '=', 'state.glSecne,', 'attributes', '=', 'scene.attributes,', 'uniforms', '=', 'scene.uniforms,', 'target', '=', 'ctrl.binder;', 'if', '(ctrl._invalidBinder)', '{', 'objForEach(target,', 'function', '(binderOrFunc,', 'name)', '{', 'var', 'convertedBinder;', 'if', '(binderOrFunc', 'instanceof', 'GLBinder)', '{', 'convertedBinder', '=', 'binderOrFunc;', '}', 'else', 'if', '(uniforms.hasOwnProperty(name)', '&&', '!(binderOrFunc', 'instanceof', 'GLUniform))', '{', 'convertedBinder', '=', 'uniforms[name].convert(binderOrFunc);', '}', 'else', 'if', '(isFunc(binderOrFunc))', '{', 'convertedBinder', '=', 'new', 'GLBinder({', 'name:', 'name,', 'bind:', 'binderOrFunc', '})', '}', 'else', 'if', '((attributes.hasOwnProperty(name)', '&&', '!(binderOrFunc', 'instanceof', 'GLAttribute)))', '{', 'convertedBinder', '=', 'attributes[name].convert(binderOrFunc);', '}', 'else', '{', 'return;', '}', 'target[name]', '=', 'convertedBinder;', 'convertedBinder._controller', '=', 'ctrl;', '});', 'ctrl._invalidBinder', '=', 'false;', '}', '}', 'function', 'addBinder(target,', 'nameOrBinder,', 'func)', '{', 'if', '(isObj(nameOrBinder)', '&&', '!(nameOrBinder', 'instanceof', 'GLBinder))', '{', 'objForEach(nameOrBinder,', 'function', '(value,', 'key)', '{', 'add(key,', 'value);', '});', '}', 'else', '{', 'if', '(isFunc(nameOrBinder)', '&&', '!func)', '{', 'func', '=', 'nameOrBinder;', 'nameOrBinder', '=', ""'GLBinder'"", '+', ""nextUid('GLBinder');"", '}', 'add(nameOrBinder,', 'func);', '}', 'return', 'target;', 'function', 'add(nameOrBinder,', 'func)', '{', 'if', '(isStr(nameOrBinder)', '&&', '(isFunc(func)', '||', 'func', 'instanceof', 'GLBinder))', '{', 'target[nameOrBinder]', '=', 'func;', '}', 'else', 'if', '(isObj(nameOrBinder)', '&&', 'nameOrBinder.name)', '{', 'target[nameOrBinder.name]', '=', 'nameOrBinder;', '}', 'else', '{', 'throw', ""Error('argument"", ""error');"", '}', '}', '}', 'function', 'disposeBinder(obj,', 'gl)', '{', 'objForEach(obj,', 'function', '(val)', '{', 'if', '(isObj(val)', '&&', 'isFunc(val.dispose))', '{', 'val.dispose(gl)', '}', '})', '}', '```']",challenge not surrounded by ''': ,
"<!-- GENERATED FILE, DO NOT EDIT -->
<!DOCTYPE HTML>
<html>
  <head>
    <meta charset='utf-8'/>
    <title>
      Mochitest wrapper for WebGL Conformance Test Suite tests
    </title>
    <link rel='stylesheet' type='text/css' href='../iframe-passthrough.css'/>

    <script src='/tests/SimpleTest/SimpleTest.js'></script>
    <link rel='stylesheet' type='text/css' href='/tests/SimpleTest/test.css'/>
  </head>
  <body>
    <iframe src='../mochi-single.html?checkout/conformance/more/functions/vertexAttribBadArgs.html?webglVersion=2'></iframe>
  </body>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!--', 'GENERATED', 'FILE,', 'DO', 'NOT', 'EDIT', '-->', '<!DOCTYPE', 'HTML>', '<html>', '<head>', '<meta', ""charset='utf-8'/>"", '<title>', 'Mochitest', 'wrapper', 'for', 'WebGL', 'Conformance', 'Test', 'Suite', 'tests', '</title>', '<link', ""rel='stylesheet'"", ""type='text/css'"", ""href='../iframe-passthrough.css'/>"", '<script', ""src='/tests/SimpleTest/SimpleTest.js'></script>"", '<link', ""rel='stylesheet'"", ""type='text/css'"", ""href='/tests/SimpleTest/test.css'/>"", '</head>', '<body>', '<iframe', ""src='../mochi-single.html?checkout/conformance/more/functions/vertexAttribBadArgs.html?webglVersion=2'></iframe>"", '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"'''
Copyright 2016, EMC, Inc.

Author(s):
George Paulos

This script load SKU packs from sources specified in global_config.json.
'''


import os
import sys
import subprocess
# set path to common libraries
sys.path.append(subprocess.check_output(""git rev-parse --show-toplevel"", shell=True).rstrip(""\n"") + ""/test/fit_tests/common"")
import fit_common

class load_sku_packs(fit_common.unittest.TestCase):
    def test01_preload_sku_packs(self):
        print ""**** Processing SKU Packs""
        # Load SKU packs from GutHub
        subprocess.call(""rm -rf temp.sku; rm -rf on-skupack"", shell=True)
        os.mkdir(""on-skupack"")
        # download all SKU repos and merge into on-skupack
        for url in fit_common.GLOBAL_CONFIG['repos']['skupack']:
            print ""**** Cloning SKU Packs from "" + url
            subprocess.call(""git clone "" + url + "" temp.sku"", shell=True)
            subprocess.call('cp -R temp.sku/* on-skupack; rm -rf temp.sku', shell=True)
        # build build SKU packs
        for subdir, dirs, files in os.walk('on-skupack'):
            for skus in dirs:
                if skus not in [""debianstatic"", "".git""] and os.path.isfile('on-skupack/' + skus + '/config.json'):
                    subprocess.call(""cd on-skupack;mkdir -p "" + skus + ""/tasks "" + skus + ""/static ""
                                    + skus + ""/workflows "" + skus + ""/templates"", shell=True)
                    subprocess.call(""cd on-skupack; ./build-package.bash ""
                                    + skus + "" "" + skus + "" >/dev/null 2>&1"", shell=True)
            break
        # upload SKU packs to ORA
        print ""**** Loading SKU Packs to server""
        for subdir, dirs, files in os.walk('on-skupack/tarballs'):
            for skupacks in files:
                print ""\n**** Loading SKU Pack for "" + skupacks
                fit_common.rackhdapi(""/api/1.1/skus/pack"", action=""binary-post"",
                                     payload=file(fit_common.TEST_PATH + ""on-skupack/tarballs/"" + skupacks).read())
            break
        print ""\n""
        # check SKU directory against source files
        errorcount = 0
        skulist = fit_common.json.dumps(fit_common.rackhdapi(""/api/2.0/skus"")['json'])
        for subdir, dirs, files in os.walk('on-skupack'):
            for skus in dirs:
                if skus not in [""debianstatic"", "".git"", ""packagebuild"", ""tarballs""] and os.path.isfile('on-skupack/' + skus + '/config.json'):
                    configfile = fit_common.json.loads(open(""on-skupack/"" + skus  + ""/config.json"").read())
                    if configfile['name'] not in skulist:
                        print ""FAILURE - Missing SKU: "" + configfile['name']
                        errorcount += 1
            break
        self.assertEqual(errorcount, 0, ""SKU pack install error."")

    def test02_preload_default_sku(self):
        # Load default SKU for unsupported compute nodes
        print '**** Installing default SKU'
        payload = {
                        ""name"": ""Unsupported-Compute"",
                        ""rules"": [
                            {
                                ""path"": ""bmc.IP Address""
                            }
                        ]
                    }
        api_data = fit_common.rackhdapi(""/api/2.0/skus"", action='post', payload=payload)

if __name__ == '__main__':
    fit_common.unittest.main()","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', ""```'''"", 'Copyright', '2016,', 'EMC,', 'Inc.', 'Author(s):', 'George', 'Paulos', 'This', 'script', 'load', 'SKU', 'packs', 'from', 'sources', 'specified', 'in', 'global_config.json.', ""'''"", 'import', 'os', 'import', 'sys', 'import', 'subprocess', '#', 'set', 'path', 'to', 'common', 'libraries', 'sys.path.append(subprocess.check_output(""git', 'rev-parse', '--show-toplevel"",', 'shell=True).rstrip(""\\n"")', '+', '""/test/fit_tests/common"")', 'import', 'fit_common', 'class', 'load_sku_packs(fit_common.unittest.TestCase):', 'def', 'test01_preload_sku_packs(self):', 'print', '""****', 'Processing', 'SKU', 'Packs""', '#', 'Load', 'SKU', 'packs', 'from', 'GutHub', 'subprocess.call(""rm', '-rf', 'temp.sku;', 'rm', '-rf', 'on-skupack"",', 'shell=True)', 'os.mkdir(""on-skupack"")', '#', 'download', 'all', 'SKU', 'repos', 'and', 'merge', 'into', 'on-skupack', 'for', 'url', 'in', ""fit_common.GLOBAL_CONFIG['repos']['skupack']:"", 'print', '""****', 'Cloning', 'SKU', 'Packs', 'from', '""', '+', 'url', 'subprocess.call(""git', 'clone', '""', '+', 'url', '+', '""', 'temp.sku"",', 'shell=True)', ""subprocess.call('cp"", '-R', 'temp.sku/*', 'on-skupack;', 'rm', '-rf', ""temp.sku',"", 'shell=True)', '#', 'build', 'build', 'SKU', 'packs', 'for', 'subdir,', 'dirs,', 'files', 'in', ""os.walk('on-skupack'):"", 'for', 'skus', 'in', 'dirs:', 'if', 'skus', 'not', 'in', '[""debianstatic"",', '"".git""]', 'and', ""os.path.isfile('on-skupack/'"", '+', 'skus', '+', ""'/config.json'):"", 'subprocess.call(""cd', 'on-skupack;mkdir', '-p', '""', '+', 'skus', '+', '""/tasks', '""', '+', 'skus', '+', '""/static', '""', '+', 'skus', '+', '""/workflows', '""', '+', 'skus', '+', '""/templates"",', 'shell=True)', 'subprocess.call(""cd', 'on-skupack;', './build-package.bash', '""', '+', 'skus', '+', '""', '""', '+', 'skus', '+', '""', '>/dev/null', '2>&1"",', 'shell=True)', 'break', '#', 'upload', 'SKU', 'packs', 'to', 'ORA', 'print', '""****', 'Loading', 'SKU', 'Packs', 'to', 'server""', 'for', 'subdir,', 'dirs,', 'files', 'in', ""os.walk('on-skupack/tarballs'):"", 'for', 'skupacks', 'in', 'files:', 'print', '""\\n****', 'Loading', 'SKU', 'Pack', 'for', '""', '+', 'skupacks', 'fit_common.rackhdapi(""/api/1.1/skus/pack"",', 'action=""binary-post"",', 'payload=file(fit_common.TEST_PATH', '+', '""on-skupack/tarballs/""', '+', 'skupacks).read())', 'break', 'print', '""\\n""', '#', 'check', 'SKU', 'directory', 'against', 'source', 'files', 'errorcount', '=', '0', 'skulist', '=', 'fit_common.json.dumps(fit_common.rackhdapi(""/api/2.0/skus"")[\'json\'])', 'for', 'subdir,', 'dirs,', 'files', 'in', ""os.walk('on-skupack'):"", 'for', 'skus', 'in', 'dirs:', 'if', 'skus', 'not', 'in', '[""debianstatic"",', '"".git"",', '""packagebuild"",', '""tarballs""]', 'and', ""os.path.isfile('on-skupack/'"", '+', 'skus', '+', ""'/config.json'):"", 'configfile', '=', 'fit_common.json.loads(open(""on-skupack/""', '+', 'skus', '+', '""/config.json"").read())', 'if', ""configfile['name']"", 'not', 'in', 'skulist:', 'print', '""FAILURE', '-', 'Missing', 'SKU:', '""', '+', ""configfile['name']"", 'errorcount', '+=', '1', 'break', 'self.assertEqual(errorcount,', '0,', '""SKU', 'pack', 'install', 'error."")', 'def', 'test02_preload_default_sku(self):', '#', 'Load', 'default', 'SKU', 'for', 'unsupported', 'compute', 'nodes', 'print', ""'****"", 'Installing', 'default', ""SKU'"", 'payload', '=', '{', '""name"":', '""Unsupported-Compute"",', '""rules"":', '[', '{', '""path"":', '""bmc.IP', 'Address""', '}', ']', '}', 'api_data', '=', 'fit_common.rackhdapi(""/api/2.0/skus"",', ""action='post',"", 'payload=payload)', 'if', '__name__', '==', ""'__main__':"", 'fit_common.unittest.main()```']",challenge not surrounded by ''': ,
"/*******************************************************************************
 * Copyright (c) 2014 Mrbrutal. All rights reserved.
 * 
 * @name Traincraft
 * @author Mrbrutal
 ******************************************************************************/

package train.client.render.models.blocks;

import cpw.mods.fml.client.FMLClientHandler;
import net.minecraft.client.model.ModelBase;
import net.minecraft.util.ResourceLocation;
import net.minecraftforge.client.model.AdvancedModelLoader;
import net.minecraftforge.client.model.IModelCustom;
import org.lwjgl.opengl.GL11;
import train.common.library.Info;
import train.common.tile.TileBridgePillar;

public class ModelBridgePillar extends ModelBase {
	private IModelCustom bridgePillar;

	public ModelBridgePillar() {
		bridgePillar = new AdvancedModelLoader().loadModel(new ResourceLocation(Info.modelPrefix + ""bridge_block.obj""));
	}
	
	public void render() {
		bridgePillar.renderAll();
	}
	
	public void render(TileBridgePillar pillar, double x, double y, double z) {
		GL11.glPushMatrix();

		GL11.glTranslatef((float) x + 0.5f, (float) y, (float) z + 0.5f);

		FMLClientHandler.instance().getClient().renderEngine.bindTexture(new ResourceLocation(Info.resourceLocation, Info.modelTexPrefix + ""track_slope.png""));
		GL11.glColor3f(1, 1, 1);
		int facing = pillar.getWorldObj().getBlockMetadata((int) pillar.xCoord, (int) pillar.yCoord, (int) pillar.zCoord);
		if(facing == 2){
			GL11.glRotatef(90, 0, 1, 0);
		}
		if(facing == 0){
			GL11.glRotatef(90, 0, 1, 0);
		}
		render();
		GL11.glPopMatrix();
	}
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*******************************************************************************', '*', 'Copyright', '(c)', '2014', 'Mrbrutal.', 'All', 'rights', 'reserved.', '*', '*', '@name', 'Traincraft', '*', '@author', 'Mrbrutal', '******************************************************************************/', 'package', 'train.client.render.models.blocks;', 'import', 'cpw.mods.fml.client.FMLClientHandler;', 'import', 'net.minecraft.client.model.ModelBase;', 'import', 'net.minecraft.util.ResourceLocation;', 'import', 'net.minecraftforge.client.model.AdvancedModelLoader;', 'import', 'net.minecraftforge.client.model.IModelCustom;', 'import', 'org.lwjgl.opengl.GL11;', 'import', 'train.common.library.Info;', 'import', 'train.common.tile.TileBridgePillar;', 'public', 'class', 'ModelBridgePillar', 'extends', 'ModelBase', '{', 'private', 'IModelCustom', 'bridgePillar;', 'public', 'ModelBridgePillar()', '{', 'bridgePillar', '=', 'new', 'AdvancedModelLoader().loadModel(new', 'ResourceLocation(Info.modelPrefix', '+', '""bridge_block.obj""));', '}', 'public', 'void', 'render()', '{', 'bridgePillar.renderAll();', '}', 'public', 'void', 'render(TileBridgePillar', 'pillar,', 'double', 'x,', 'double', 'y,', 'double', 'z)', '{', 'GL11.glPushMatrix();', 'GL11.glTranslatef((float)', 'x', '+', '0.5f,', '(float)', 'y,', '(float)', 'z', '+', '0.5f);', 'FMLClientHandler.instance().getClient().renderEngine.bindTexture(new', 'ResourceLocation(Info.resourceLocation,', 'Info.modelTexPrefix', '+', '""track_slope.png""));', 'GL11.glColor3f(1,', '1,', '1);', 'int', 'facing', '=', 'pillar.getWorldObj().getBlockMetadata((int)', 'pillar.xCoord,', '(int)', 'pillar.yCoord,', '(int)', 'pillar.zCoord);', 'if(facing', '==', '2){', 'GL11.glRotatef(90,', '0,', '1,', '0);', '}', 'if(facing', '==', '0){', 'GL11.glRotatef(90,', '0,', '1,', '0);', '}', 'render();', 'GL11.glPopMatrix();', '}', '}', '```']",challenge not surrounded by ''': ,
"/**
 * https://leetcode.com/problems/remove-all-occurrences-of-a-substring/
 * @param {string} s
 * @param {string} part
 * @return {string}
 */
var removeOccurrences = function (s, part) {
    while (s.includes(part)) {
        s = s.replace(part, """");
    }

    return s;
};
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', 'https://leetcode.com/problems/remove-all-occurrences-of-a-substring/', '*', '@param', '{string}', 's', '*', '@param', '{string}', 'part', '*', '@return', '{string}', '*/', 'var', 'removeOccurrences', '=', 'function', '(s,', 'part)', '{', 'while', '(s.includes(part))', '{', 's', '=', 's.replace(part,', '"""");', '}', 'return', 's;', '};', '```']",challenge not surrounded by ''': ,
"package org.burroloco.donkey.glue.block;

import au.net.netstorm.boost.sniper.lifecycle.BoostTestLifecycleBlocks;
import au.net.netstorm.boost.sniper.lifecycle.TestLifecycleBlocks;

public class DonkeyTestLifecycleBlocks implements TestLifecycleBlocks {
    TestLifecycleBlocks delegate = new BoostTestLifecycleBlocks();

    public Class[] pre() {
        return delegate.pre();
    }

    public Class[] post() {
        return delegate.post();
    }

    public Class[] cleanup() {
        return delegate.cleanup();
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'org.burroloco.donkey.glue.block;', 'import', 'au.net.netstorm.boost.sniper.lifecycle.BoostTestLifecycleBlocks;', 'import', 'au.net.netstorm.boost.sniper.lifecycle.TestLifecycleBlocks;', 'public', 'class', 'DonkeyTestLifecycleBlocks', 'implements', 'TestLifecycleBlocks', '{', 'TestLifecycleBlocks', 'delegate', '=', 'new', 'BoostTestLifecycleBlocks();', 'public', 'Class[]', 'pre()', '{', 'return', 'delegate.pre();', '}', 'public', 'Class[]', 'post()', '{', 'return', 'delegate.post();', '}', 'public', 'Class[]', 'cleanup()', '{', 'return', 'delegate.cleanup();', '}', '}', '```']",challenge not surrounded by ''': ,
"const conjunction = new Intl.ListFormat('en', { type: 'conjunction' });
const disjunction = new Intl.ListFormat('en', { type: 'disjunction' });

const formatter = {
  format(iterable, { type }) {
    if (type === 'conjunction') {
      return conjunction.format(iterable);
    }

    return disjunction.format(iterable);
  },
};

module.exports = {
  formatList(list, { type = 'conjunction' } = {}) {
    return formatter.format(list.map((w) => `'${w}'`), { type });
  },
  pluralize(word, count) {
    if (count === 1) {
      return word;
    }

    return `${word}s`;
  },
};
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```const', 'conjunction', '=', 'new', ""Intl.ListFormat('en',"", '{', 'type:', ""'conjunction'"", '});', 'const', 'disjunction', '=', 'new', ""Intl.ListFormat('en',"", '{', 'type:', ""'disjunction'"", '});', 'const', 'formatter', '=', '{', 'format(iterable,', '{', 'type', '})', '{', 'if', '(type', '===', ""'conjunction')"", '{', 'return', 'conjunction.format(iterable);', '}', 'return', 'disjunction.format(iterable);', '},', '};', 'module.exports', '=', '{', 'formatList(list,', '{', 'type', '=', ""'conjunction'"", '}', '=', '{})', '{', 'return', 'formatter.format(list.map((w)', '=>', ""`'${w}'`),"", '{', 'type', '});', '},', 'pluralize(word,', 'count)', '{', 'if', '(count', '===', '1)', '{', 'return', 'word;', '}', 'return', '`${word}s`;', '},', '};', '```']",challenge not surrounded by ''': ,
"package org.graphwalker.core.model;

/*
 * #%L
 * GraphWalker Core
 * %%
 * Copyright (C) 2005 - 2014 GraphWalker
 * %%
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the ""Software""), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * #L%
 */

import java.util.Map;
import java.util.Set;

import static org.graphwalker.core.common.Objects.isNull;

/**
 * @author Nils Olsson
 */
public abstract class CachedBuilder<B, T> extends BuilderBase<B, T> {

  private T cache;

  protected void invalidateCache() {
    cache = null;
  }

  protected abstract T createCache();

  @Override
  public T build() {
    if (isNull(cache)) {
      cache = createCache();
    }
    return cache;
  }

  @Override
  public B setId(String id) {
    invalidateCache();
    return super.setId(id);
  }

  @Override
  public B setName(String name) {
    invalidateCache();
    return super.setName(name);
  }

  @Override
  public B addRequirement(Requirement requirement) {
    invalidateCache();
    return super.addRequirement(requirement);
  }

  @Override
  public B setRequirements(Set<Requirement> requirements) {
    invalidateCache();
    return super.setRequirements(requirements);
  }

  @Override
  public B setProperties(Map<String, Object> properties) {
    invalidateCache();
    return super.setProperties(properties);
  }

  @Override
  public B setProperty(String key, Object value) {
    invalidateCache();
    return super.setProperty(key, value);
  }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'org.graphwalker.core.model;', '/*', '*', '#%L', '*', 'GraphWalker', 'Core', '*', '%%', '*', 'Copyright', '(C)', '2005', '-', '2014', 'GraphWalker', '*', '%%', '*', 'Permission', 'is', 'hereby', 'granted,', 'free', 'of', 'charge,', 'to', 'any', 'person', 'obtaining', 'a', 'copy', '*', 'of', 'this', 'software', 'and', 'associated', 'documentation', 'files', '(the', '""Software""),', 'to', 'deal', '*', 'in', 'the', 'Software', 'without', 'restriction,', 'including', 'without', 'limitation', 'the', 'rights', '*', 'to', 'use,', 'copy,', 'modify,', 'merge,', 'publish,', 'distribute,', 'sublicense,', 'and/or', 'sell', '*', 'copies', 'of', 'the', 'Software,', 'and', 'to', 'permit', 'persons', 'to', 'whom', 'the', 'Software', 'is', '*', 'furnished', 'to', 'do', 'so,', 'subject', 'to', 'the', 'following', 'conditions:', '*', '*', 'The', 'above', 'copyright', 'notice', 'and', 'this', 'permission', 'notice', 'shall', 'be', 'included', 'in', '*', 'all', 'copies', 'or', 'substantial', 'portions', 'of', 'the', 'Software.', '*', '*', 'THE', 'SOFTWARE', 'IS', 'PROVIDED', '""AS', 'IS"",', 'WITHOUT', 'WARRANTY', 'OF', 'ANY', 'KIND,', 'EXPRESS', 'OR', '*', 'IMPLIED,', 'INCLUDING', 'BUT', 'NOT', 'LIMITED', 'TO', 'THE', 'WARRANTIES', 'OF', 'MERCHANTABILITY,', '*', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE', 'AND', 'NONINFRINGEMENT.', 'IN', 'NO', 'EVENT', 'SHALL', 'THE', '*', 'AUTHORS', 'OR', 'COPYRIGHT', 'HOLDERS', 'BE', 'LIABLE', 'FOR', 'ANY', 'CLAIM,', 'DAMAGES', 'OR', 'OTHER', '*', 'LIABILITY,', 'WHETHER', 'IN', 'AN', 'ACTION', 'OF', 'CONTRACT,', 'TORT', 'OR', 'OTHERWISE,', 'ARISING', 'FROM,', '*', 'OUT', 'OF', 'OR', 'IN', 'CONNECTION', 'WITH', 'THE', 'SOFTWARE', 'OR', 'THE', 'USE', 'OR', 'OTHER', 'DEALINGS', 'IN', '*', 'THE', 'SOFTWARE.', '*', '#L%', '*/', 'import', 'java.util.Map;', 'import', 'java.util.Set;', 'import', 'static', 'org.graphwalker.core.common.Objects.isNull;', '/**', '*', '@author', 'Nils', 'Olsson', '*/', 'public', 'abstract', 'class', 'CachedBuilder<B,', 'T>', 'extends', 'BuilderBase<B,', 'T>', '{', 'private', 'T', 'cache;', 'protected', 'void', 'invalidateCache()', '{', 'cache', '=', 'null;', '}', 'protected', 'abstract', 'T', 'createCache();', '@Override', 'public', 'T', 'build()', '{', 'if', '(isNull(cache))', '{', 'cache', '=', 'createCache();', '}', 'return', 'cache;', '}', '@Override', 'public', 'B', 'setId(String', 'id)', '{', 'invalidateCache();', 'return', 'super.setId(id);', '}', '@Override', 'public', 'B', 'setName(String', 'name)', '{', 'invalidateCache();', 'return', 'super.setName(name);', '}', '@Override', 'public', 'B', 'addRequirement(Requirement', 'requirement)', '{', 'invalidateCache();', 'return', 'super.addRequirement(requirement);', '}', '@Override', 'public', 'B', 'setRequirements(Set<Requirement>', 'requirements)', '{', 'invalidateCache();', 'return', 'super.setRequirements(requirements);', '}', '@Override', 'public', 'B', 'setProperties(Map<String,', 'Object>', 'properties)', '{', 'invalidateCache();', 'return', 'super.setProperties(properties);', '}', '@Override', 'public', 'B', 'setProperty(String', 'key,', 'Object', 'value)', '{', 'invalidateCache();', 'return', 'super.setProperty(key,', 'value);', '}', '}', '```']",challenge not surrounded by ''': ,
"/**
 * Copyright (C) 2012-2016 52°North Initiative for Geospatial Open Source
 * Software GmbH
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 as published
 * by the Free Software Foundation.
 *
 * If the program is linked with libraries which are licensed under one of
 * the following licenses, the combination of the program with the linked
 * library is not considered a ""derivative work"" of the program:
 *
 *     - Apache License, version 2.0
 *     - Apache Software License, version 1.0
 *     - GNU Lesser General Public License, version 3
 *     - Mozilla Public License, versions 1.0, 1.1 and 2.0
 *     - Common Development and Distribution License (CDDL), version 1.0
 *
 * Therefore the distribution of the program linked with libraries licensed
 * under the aforementioned licenses, is permitted by the copyright holders
 * if the distribution is compliant with both the GNU General Public
 * License version 2 and the aforementioned licenses.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
 * Public License for more details.
 */
package org.n52.sos.ogc.ows;

import java.util.Collections;
import java.util.List;

import com.google.common.base.Objects;

/**
 * TODO JavaDoc
 * 
 * @author Christian Autermann <c.autermann@52north.org>
 * 
 * @since 4.0.0
 */
public class Constraint implements Comparable<Constraint> {
    private final String name;

    private final List<OwsParameterValue> values;

    public Constraint(String name, List<OwsParameterValue> values) {
        if (name == null) {
            throw new NullPointerException();
        }
        if (values == null) {
            throw new NullPointerException();
        }
        this.name = name;
        this.values = values;
    }

    public Constraint(String name, OwsParameterValue value) {
        this(name, Collections.singletonList(value));
    }

    public String getName() {
        return name;
    }

    public List<OwsParameterValue> getValues() {
        return Collections.unmodifiableList(values);
    }

    @Override
    public int hashCode() {
        return Objects.hashCode(getName(), getValues());
    }

    @Override
    public boolean equals(Object obj) {
        if (obj instanceof Constraint) {
            Constraint c = (Constraint) obj;
            return Objects.equal(getName(), c.getName()) && Objects.equal(getValues(), c.getValues());
        }
        return false;
    }

    @Override
    public String toString() {
        return String.format(""Constraint[name=%s, values=%s]"", getName(), getValues());
    }

    @Override
    public int compareTo(Constraint o) {
        return getName().compareTo(o.getName());
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', 'Copyright', '(C)', '2012-2016', '52°North', 'Initiative', 'for', 'Geospatial', 'Open', 'Source', '*', 'Software', 'GmbH', '*', '*', 'This', 'program', 'is', 'free', 'software;', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', 'it', '*', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'version', '2', 'as', 'published', '*', 'by', 'the', 'Free', 'Software', 'Foundation.', '*', '*', 'If', 'the', 'program', 'is', 'linked', 'with', 'libraries', 'which', 'are', 'licensed', 'under', 'one', 'of', '*', 'the', 'following', 'licenses,', 'the', 'combination', 'of', 'the', 'program', 'with', 'the', 'linked', '*', 'library', 'is', 'not', 'considered', 'a', '""derivative', 'work""', 'of', 'the', 'program:', '*', '*', '-', 'Apache', 'License,', 'version', '2.0', '*', '-', 'Apache', 'Software', 'License,', 'version', '1.0', '*', '-', 'GNU', 'Lesser', 'General', 'Public', 'License,', 'version', '3', '*', '-', 'Mozilla', 'Public', 'License,', 'versions', '1.0,', '1.1', 'and', '2.0', '*', '-', 'Common', 'Development', 'and', 'Distribution', 'License', '(CDDL),', 'version', '1.0', '*', '*', 'Therefore', 'the', 'distribution', 'of', 'the', 'program', 'linked', 'with', 'libraries', 'licensed', '*', 'under', 'the', 'aforementioned', 'licenses,', 'is', 'permitted', 'by', 'the', 'copyright', 'holders', '*', 'if', 'the', 'distribution', 'is', 'compliant', 'with', 'both', 'the', 'GNU', 'General', 'Public', '*', 'License', 'version', '2', 'and', 'the', 'aforementioned', 'licenses.', '*', '*', 'This', 'program', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', 'but', '*', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', '*', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', 'GNU', 'General', '*', 'Public', 'License', 'for', 'more', 'details.', '*/', 'package', 'org.n52.sos.ogc.ows;', 'import', 'java.util.Collections;', 'import', 'java.util.List;', 'import', 'com.google.common.base.Objects;', '/**', '*', 'TODO', 'JavaDoc', '*', '*', '@author', 'Christian', 'Autermann', '<c.autermann@52north.org>', '*', '*', '@since', '4.0.0', '*/', 'public', 'class', 'Constraint', 'implements', 'Comparable<Constraint>', '{', 'private', 'final', 'String', 'name;', 'private', 'final', 'List<OwsParameterValue>', 'values;', 'public', 'Constraint(String', 'name,', 'List<OwsParameterValue>', 'values)', '{', 'if', '(name', '==', 'null)', '{', 'throw', 'new', 'NullPointerException();', '}', 'if', '(values', '==', 'null)', '{', 'throw', 'new', 'NullPointerException();', '}', 'this.name', '=', 'name;', 'this.values', '=', 'values;', '}', 'public', 'Constraint(String', 'name,', 'OwsParameterValue', 'value)', '{', 'this(name,', 'Collections.singletonList(value));', '}', 'public', 'String', 'getName()', '{', 'return', 'name;', '}', 'public', 'List<OwsParameterValue>', 'getValues()', '{', 'return', 'Collections.unmodifiableList(values);', '}', '@Override', 'public', 'int', 'hashCode()', '{', 'return', 'Objects.hashCode(getName(),', 'getValues());', '}', '@Override', 'public', 'boolean', 'equals(Object', 'obj)', '{', 'if', '(obj', 'instanceof', 'Constraint)', '{', 'Constraint', 'c', '=', '(Constraint)', 'obj;', 'return', 'Objects.equal(getName(),', 'c.getName())', '&&', 'Objects.equal(getValues(),', 'c.getValues());', '}', 'return', 'false;', '}', '@Override', 'public', 'String', 'toString()', '{', 'return', 'String.format(""Constraint[name=%s,', 'values=%s]"",', 'getName(),', 'getValues());', '}', '@Override', 'public', 'int', 'compareTo(Constraint', 'o)', '{', 'return', 'getName().compareTo(o.getName());', '}', '}', '```']",challenge not surrounded by ''': ,
"angular.module('decisionMatrixApp')
  .factory('Auth', ['$firebaseAuth','FBURL', function($firebaseAuth, FBURL) {
    var ref = new Firebase(FBURL);
    return $firebaseAuth(ref);
  }]);
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', ""```angular.module('decisionMatrixApp')"", "".factory('Auth',"", ""['$firebaseAuth','FBURL',"", 'function($firebaseAuth,', 'FBURL)', '{', 'var', 'ref', '=', 'new', 'Firebase(FBURL);', 'return', '$firebaseAuth(ref);', '}]);', '```']",challenge not surrounded by ''': ,
"var assert = require('assert');
var common = require('../../common');

common.getTestConnection({multipleStatements: true}, function (err, connection) {
  assert.ifError(err);

  connection.query('SELECT 1; SELECT 2; SELECT 3', function (err, results) {
    assert.ifError(err);
    assert.equal(results.length, 3);
    assert.deepEqual(results[0], [{1: 1}]);
    assert.deepEqual(results[1], [{2: 2}]);
    assert.deepEqual(results[2], [{3: 3}]);

    connection.end(assert.ifError);
  });
});
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```var', 'assert', '=', ""require('assert');"", 'var', 'common', '=', ""require('../../common');"", 'common.getTestConnection({multipleStatements:', 'true},', 'function', '(err,', 'connection)', '{', 'assert.ifError(err);', ""connection.query('SELECT"", '1;', 'SELECT', '2;', 'SELECT', ""3',"", 'function', '(err,', 'results)', '{', 'assert.ifError(err);', 'assert.equal(results.length,', '3);', 'assert.deepEqual(results[0],', '[{1:', '1}]);', 'assert.deepEqual(results[1],', '[{2:', '2}]);', 'assert.deepEqual(results[2],', '[{3:', '3}]);', 'connection.end(assert.ifError);', '});', '});', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE html>
<html>
    <head>
        <meta charset=""utf-8"">
        <meta http-equiv=""X-UA-Compatible"" content=""chrome=1"">
        <meta name=""viewport"" content=""width=device-width, initial-scale=1, user-scalable=no"">
        <link rel=""stylesheet"" href=""../resources/css/base.css"" />
        <link rel=""stylesheet"" href=""../common/css/style.css"" />
    </head>
    <body>
        <div class=""instructions"">Resize the page to see the Tether flip.</div>

        <div class=""element""></div>
        <div class=""target""></div>

        <script src=""../../tether.js""></script>
        <script>
            new Tether({
                element: '.element',
                target: '.target',
                attachment: 'top left',
                targetAttachment: 'top right',
                constraints: [{
                    to: 'window',
                    attachment: 'together'
                }]
            });
        </script>
    </body>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'html>', '<html>', '<head>', '<meta', 'charset=""utf-8"">', '<meta', 'http-equiv=""X-UA-Compatible""', 'content=""chrome=1"">', '<meta', 'name=""viewport""', 'content=""width=device-width,', 'initial-scale=1,', 'user-scalable=no"">', '<link', 'rel=""stylesheet""', 'href=""../resources/css/base.css""', '/>', '<link', 'rel=""stylesheet""', 'href=""../common/css/style.css""', '/>', '</head>', '<body>', '<div', 'class=""instructions"">Resize', 'the', 'page', 'to', 'see', 'the', 'Tether', 'flip.</div>', '<div', 'class=""element""></div>', '<div', 'class=""target""></div>', '<script', 'src=""../../tether.js""></script>', '<script>', 'new', 'Tether({', 'element:', ""'.element',"", 'target:', ""'.target',"", 'attachment:', ""'top"", ""left',"", 'targetAttachment:', ""'top"", ""right',"", 'constraints:', '[{', 'to:', ""'window',"", 'attachment:', ""'together'"", '}]', '});', '</script>', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"// All code points in the `Tifinagh` script as per Unicode v4.1.0:
[
	0x2D30,
	0x2D31,
	0x2D32,
	0x2D33,
	0x2D34,
	0x2D35,
	0x2D36,
	0x2D37,
	0x2D38,
	0x2D39,
	0x2D3A,
	0x2D3B,
	0x2D3C,
	0x2D3D,
	0x2D3E,
	0x2D3F,
	0x2D40,
	0x2D41,
	0x2D42,
	0x2D43,
	0x2D44,
	0x2D45,
	0x2D46,
	0x2D47,
	0x2D48,
	0x2D49,
	0x2D4A,
	0x2D4B,
	0x2D4C,
	0x2D4D,
	0x2D4E,
	0x2D4F,
	0x2D50,
	0x2D51,
	0x2D52,
	0x2D53,
	0x2D54,
	0x2D55,
	0x2D56,
	0x2D57,
	0x2D58,
	0x2D59,
	0x2D5A,
	0x2D5B,
	0x2D5C,
	0x2D5D,
	0x2D5E,
	0x2D5F,
	0x2D60,
	0x2D61,
	0x2D62,
	0x2D63,
	0x2D64,
	0x2D65,
	0x2D6F
];","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//', 'All', 'code', 'points', 'in', 'the', '`Tifinagh`', 'script', 'as', 'per', 'Unicode', 'v4.1.0:', '[', '0x2D30,', '0x2D31,', '0x2D32,', '0x2D33,', '0x2D34,', '0x2D35,', '0x2D36,', '0x2D37,', '0x2D38,', '0x2D39,', '0x2D3A,', '0x2D3B,', '0x2D3C,', '0x2D3D,', '0x2D3E,', '0x2D3F,', '0x2D40,', '0x2D41,', '0x2D42,', '0x2D43,', '0x2D44,', '0x2D45,', '0x2D46,', '0x2D47,', '0x2D48,', '0x2D49,', '0x2D4A,', '0x2D4B,', '0x2D4C,', '0x2D4D,', '0x2D4E,', '0x2D4F,', '0x2D50,', '0x2D51,', '0x2D52,', '0x2D53,', '0x2D54,', '0x2D55,', '0x2D56,', '0x2D57,', '0x2D58,', '0x2D59,', '0x2D5A,', '0x2D5B,', '0x2D5C,', '0x2D5D,', '0x2D5E,', '0x2D5F,', '0x2D60,', '0x2D61,', '0x2D62,', '0x2D63,', '0x2D64,', '0x2D65,', '0x2D6F', '];```']",challenge not surrounded by ''': ,
"-- where5.test
-- 
-- execsql {
--     SELECT * FROM t3 WHERE x<>0
-- }
SELECT * FROM t3 WHERE x<>0","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```--', 'where5.test', '--', '--', 'execsql', '{', '--', 'SELECT', '*', 'FROM', 't3', 'WHERE', 'x<>0', '--', '}', 'SELECT', '*', 'FROM', 't3', 'WHERE', 'x<>0```']",challenge not surrounded by ''': ,
"
<link rel=""stylesheet"" href=""../stylesheets/iframe.css"" /> <link rel=""stylesheet"" href=""../stylesheets/monokai.css"" /> <script src=""../javascripts/prettify.js""></script> <script src=""../javascripts/lang-basic.js""></script> <h1 class=""title"">ex_audio_listener_get_orientation_up_x</h1>
<h2 class=""subtitle"">Gets the X up vector of the listener in the 3D space</h2>

<h3 class=""section"">Syntax</h3>
<code class=""syntax"">
	ex_audio_listener_get_orientation_up_x()
</code>

<small class=""returns""><strong>Returns</strong> the listener X up vector</small>

<h3 class=""section"">Description</h3>
<p class=""description"">Gets the X up vector of the listener in the 3D space.</p>

<h3 class=""section"">Example</h3>
<pre class=""prettyprint lang-c"">
//Get the X up vector of the listener and store it in the variable _value
_value = ex_audio_listener_get_orientation_up_x();
</pre>

<h3 class=""section"">Minimum Supported Version</h3>
<small class=""min-version"">exAudio 0.5.0</small> <script>prettyPrint();</script>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```', '<link', 'rel=""stylesheet""', 'href=""../stylesheets/iframe.css""', '/>', '<link', 'rel=""stylesheet""', 'href=""../stylesheets/monokai.css""', '/>', '<script', 'src=""../javascripts/prettify.js""></script>', '<script', 'src=""../javascripts/lang-basic.js""></script>', '<h1', 'class=""title"">ex_audio_listener_get_orientation_up_x</h1>', '<h2', 'class=""subtitle"">Gets', 'the', 'X', 'up', 'vector', 'of', 'the', 'listener', 'in', 'the', '3D', 'space</h2>', '<h3', 'class=""section"">Syntax</h3>', '<code', 'class=""syntax"">', 'ex_audio_listener_get_orientation_up_x()', '</code>', '<small', 'class=""returns""><strong>Returns</strong>', 'the', 'listener', 'X', 'up', 'vector</small>', '<h3', 'class=""section"">Description</h3>', '<p', 'class=""description"">Gets', 'the', 'X', 'up', 'vector', 'of', 'the', 'listener', 'in', 'the', '3D', 'space.</p>', '<h3', 'class=""section"">Example</h3>', '<pre', 'class=""prettyprint', 'lang-c"">', '//Get', 'the', 'X', 'up', 'vector', 'of', 'the', 'listener', 'and', 'store', 'it', 'in', 'the', 'variable', '_value', '_value', '=', 'ex_audio_listener_get_orientation_up_x();', '</pre>', '<h3', 'class=""section"">Minimum', 'Supported', 'Version</h3>', '<small', 'class=""min-version"">exAudio', '0.5.0</small>', '<script>prettyPrint();</script>', '```']",challenge not surrounded by ''': ,
"module.exports = {
  // configureWebpack: {
  //   output: {
  //     libraryExport: 'default'
  //   }
  // }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```module.exports', '=', '{', '//', 'configureWebpack:', '{', '//', 'output:', '{', '//', 'libraryExport:', ""'default'"", '//', '}', '//', '}', '}', '```']",challenge not surrounded by ''': ,
"{% extends ""contamination/base.html"" %}
{% load i18n %}

{% block title %}
  {% trans ""Server error (500)"" %}
{% endblock %}

{% block header %}
  <div class=""title"">
    <h1>
      {% trans ""Server error (500)"" %}
    </h1>
  </div>
  <div class=""clear""></div>
{% endblock %}

{% block main %}
  <h2>
    {% trans ""There's been an error. It's been reported to the site administrators via e-mail and should be fixed shortly. Thanks for your patience."" %}
  </h2>
  <div><a href=""/"">{% trans ""Home"" %}</a></div>
{% endblock %}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```{%', 'extends', '""contamination/base.html""', '%}', '{%', 'load', 'i18n', '%}', '{%', 'block', 'title', '%}', '{%', 'trans', '""Server', 'error', '(500)""', '%}', '{%', 'endblock', '%}', '{%', 'block', 'header', '%}', '<div', 'class=""title"">', '<h1>', '{%', 'trans', '""Server', 'error', '(500)""', '%}', '</h1>', '</div>', '<div', 'class=""clear""></div>', '{%', 'endblock', '%}', '{%', 'block', 'main', '%}', '<h2>', '{%', 'trans', '""There\'s', 'been', 'an', 'error.', ""It's"", 'been', 'reported', 'to', 'the', 'site', 'administrators', 'via', 'e-mail', 'and', 'should', 'be', 'fixed', 'shortly.', 'Thanks', 'for', 'your', 'patience.""', '%}', '</h2>', '<div><a', 'href=""/"">{%', 'trans', '""Home""', '%}</a></div>', '{%', 'endblock', '%}```']",challenge not surrounded by ''': ,
"/**
* Copyright 2012-2016, Plotly, Inc.
* All rights reserved.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*/

'use strict';

var Registry = require('../../registry');
var Axes = require('../../plots/cartesian/axes');
var Lib = require('../../lib');


module.exports = function setPositions(gd, plotinfo) {
    var fullLayout = gd._fullLayout,
        xa = plotinfo.xaxis,
        ya = plotinfo.yaxis,
        orientations = ['v', 'h'];
    var posAxis, i, j, k;

    for(i = 0; i < orientations.length; ++i) {
        var orientation = orientations[i],
            boxlist = [],
            boxpointlist = [],
            minPad = 0,
            maxPad = 0,
            cd,
            t,
            trace;

        // set axis via orientation
        if(orientation === 'h') posAxis = ya;
        else posAxis = xa;

        // make list of boxes
        for(j = 0; j < gd.calcdata.length; ++j) {
            cd = gd.calcdata[j];
            t = cd[0].t;
            trace = cd[0].trace;

            if(trace.visible === true && Registry.traceIs(trace, 'box') &&
                    !t.emptybox &&
                    trace.orientation === orientation &&
                    trace.xaxis === xa._id &&
                    trace.yaxis === ya._id) {
                boxlist.push(j);
                if(trace.boxpoints !== false) {
                    minPad = Math.max(minPad, trace.jitter - trace.pointpos - 1);
                    maxPad = Math.max(maxPad, trace.jitter + trace.pointpos - 1);
                }
            }
        }

        // make list of box points
        for(j = 0; j < boxlist.length; j++) {
            cd = gd.calcdata[boxlist[j]];
            for(k = 0; k < cd.length; k++) boxpointlist.push(cd[k].pos);
        }
        if(!boxpointlist.length) continue;

        // box plots - update dPos based on multiple traces
        // and then use for posAxis autorange

        var boxdv = Lib.distinctVals(boxpointlist),
            dPos = boxdv.minDiff / 2;

        // if there's no duplication of x points,
        // disable 'group' mode by setting numboxes=1
        if(boxpointlist.length === boxdv.vals.length) gd.numboxes = 1;

        // check for forced minimum dtick
        Axes.minDtick(posAxis, boxdv.minDiff, boxdv.vals[0], true);

        // set the width of all boxes
        for(i = 0; i < boxlist.length; i++) {
            var boxListIndex = boxlist[i];
            gd.calcdata[boxListIndex][0].t.dPos = dPos;
        }

        // autoscale the x axis - including space for points if they're off the side
        // TODO: this will overdo it if the outermost boxes don't have
        // their points as far out as the other boxes
        var padfactor = (1 - fullLayout.boxgap) * (1 - fullLayout.boxgroupgap) *
                dPos / gd.numboxes;
        Axes.expand(posAxis, boxdv.vals, {
            vpadminus: dPos + minPad * padfactor,
            vpadplus: dPos + maxPad * padfactor
        });
    }
};
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', 'Copyright', '2012-2016,', 'Plotly,', 'Inc.', '*', 'All', 'rights', 'reserved.', '*', '*', 'This', 'source', 'code', 'is', 'licensed', 'under', 'the', 'MIT', 'license', 'found', 'in', 'the', '*', 'LICENSE', 'file', 'in', 'the', 'root', 'directory', 'of', 'this', 'source', 'tree.', '*/', ""'use"", ""strict';"", 'var', 'Registry', '=', ""require('../../registry');"", 'var', 'Axes', '=', ""require('../../plots/cartesian/axes');"", 'var', 'Lib', '=', ""require('../../lib');"", 'module.exports', '=', 'function', 'setPositions(gd,', 'plotinfo)', '{', 'var', 'fullLayout', '=', 'gd._fullLayout,', 'xa', '=', 'plotinfo.xaxis,', 'ya', '=', 'plotinfo.yaxis,', 'orientations', '=', ""['v',"", ""'h'];"", 'var', 'posAxis,', 'i,', 'j,', 'k;', 'for(i', '=', '0;', 'i', '<', 'orientations.length;', '++i)', '{', 'var', 'orientation', '=', 'orientations[i],', 'boxlist', '=', '[],', 'boxpointlist', '=', '[],', 'minPad', '=', '0,', 'maxPad', '=', '0,', 'cd,', 't,', 'trace;', '//', 'set', 'axis', 'via', 'orientation', 'if(orientation', '===', ""'h')"", 'posAxis', '=', 'ya;', 'else', 'posAxis', '=', 'xa;', '//', 'make', 'list', 'of', 'boxes', 'for(j', '=', '0;', 'j', '<', 'gd.calcdata.length;', '++j)', '{', 'cd', '=', 'gd.calcdata[j];', 't', '=', 'cd[0].t;', 'trace', '=', 'cd[0].trace;', 'if(trace.visible', '===', 'true', '&&', 'Registry.traceIs(trace,', ""'box')"", '&&', '!t.emptybox', '&&', 'trace.orientation', '===', 'orientation', '&&', 'trace.xaxis', '===', 'xa._id', '&&', 'trace.yaxis', '===', 'ya._id)', '{', 'boxlist.push(j);', 'if(trace.boxpoints', '!==', 'false)', '{', 'minPad', '=', 'Math.max(minPad,', 'trace.jitter', '-', 'trace.pointpos', '-', '1);', 'maxPad', '=', 'Math.max(maxPad,', 'trace.jitter', '+', 'trace.pointpos', '-', '1);', '}', '}', '}', '//', 'make', 'list', 'of', 'box', 'points', 'for(j', '=', '0;', 'j', '<', 'boxlist.length;', 'j++)', '{', 'cd', '=', 'gd.calcdata[boxlist[j]];', 'for(k', '=', '0;', 'k', '<', 'cd.length;', 'k++)', 'boxpointlist.push(cd[k].pos);', '}', 'if(!boxpointlist.length)', 'continue;', '//', 'box', 'plots', '-', 'update', 'dPos', 'based', 'on', 'multiple', 'traces', '//', 'and', 'then', 'use', 'for', 'posAxis', 'autorange', 'var', 'boxdv', '=', 'Lib.distinctVals(boxpointlist),', 'dPos', '=', 'boxdv.minDiff', '/', '2;', '//', 'if', ""there's"", 'no', 'duplication', 'of', 'x', 'points,', '//', 'disable', ""'group'"", 'mode', 'by', 'setting', 'numboxes=1', 'if(boxpointlist.length', '===', 'boxdv.vals.length)', 'gd.numboxes', '=', '1;', '//', 'check', 'for', 'forced', 'minimum', 'dtick', 'Axes.minDtick(posAxis,', 'boxdv.minDiff,', 'boxdv.vals[0],', 'true);', '//', 'set', 'the', 'width', 'of', 'all', 'boxes', 'for(i', '=', '0;', 'i', '<', 'boxlist.length;', 'i++)', '{', 'var', 'boxListIndex', '=', 'boxlist[i];', 'gd.calcdata[boxListIndex][0].t.dPos', '=', 'dPos;', '}', '//', 'autoscale', 'the', 'x', 'axis', '-', 'including', 'space', 'for', 'points', 'if', ""they're"", 'off', 'the', 'side', '//', 'TODO:', 'this', 'will', 'overdo', 'it', 'if', 'the', 'outermost', 'boxes', ""don't"", 'have', '//', 'their', 'points', 'as', 'far', 'out', 'as', 'the', 'other', 'boxes', 'var', 'padfactor', '=', '(1', '-', 'fullLayout.boxgap)', '*', '(1', '-', 'fullLayout.boxgroupgap)', '*', 'dPos', '/', 'gd.numboxes;', 'Axes.expand(posAxis,', 'boxdv.vals,', '{', 'vpadminus:', 'dPos', '+', 'minPad', '*', 'padfactor,', 'vpadplus:', 'dPos', '+', 'maxPad', '*', 'padfactor', '});', '}', '};', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *   WSO2 Inc. licenses this file to you under the Apache License,
 *   Version 2.0 (the ""License""); you may not use this file except
 *   in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing,
 *  software distributed under the License is distributed on an
 *  ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *  KIND, either express or implied.  See the License for the
 *  specific language governing permissions and limitations
 *  under the License.
 */

package org.wso2.carbon.mss.example.service;

import org.wso2.carbon.metrics.annotation.Counted;
import org.wso2.carbon.metrics.annotation.Metered;
import org.wso2.carbon.metrics.annotation.Timed;
import org.wso2.carbon.mss.httpmonitoring.HTTPMonitoring;

import java.util.Collection;
import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;

import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;

/**
 * StudentService class.
 */
@Path(""/student"")
public class StudentService {

    private Map<String, Student> students = new ConcurrentHashMap<>();

    public StudentService() {
        Student student = new Student();
        student.setNic(""910760234V"");
        student.setFirstName(""Joseph"");
        student.setLastName(""Rodgers"");
        student.setAge(14);
        addStudent(student);
    }

    @GET
    @Path(""/{nic}"")
    @Produces(""application/json"")
    @Timed
    @HTTPMonitoring
    public Student getStudent(@PathParam(""nic"") String nic) {
        return students.get(nic);
    }

    @POST
    @Consumes(""application/json"")
    @Metered
    @HTTPMonitoring
    public void addStudent(Student student) {
        students.put(student.getNic(), student);
    }

    @GET
    @Produces(""application/json"")
    @Counted
    @HTTPMonitoring
    public Collection<Student> getAll() {
        return students.values();
    }

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '(c)', '2015,', 'WSO2', 'Inc.', '(http://www.wso2.org)', 'All', 'Rights', 'Reserved.', '*', '*', 'WSO2', 'Inc.', 'licenses', 'this', 'file', 'to', 'you', 'under', 'the', 'Apache', 'License,', '*', 'Version', '2.0', '(the', '""License"");', 'you', 'may', 'not', 'use', 'this', 'file', 'except', '*', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', '*', 'software', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '*', '""AS', 'IS""', 'BASIS,', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', '*', 'KIND,', 'either', 'express', 'or', 'implied.', 'See', 'the', 'License', 'for', 'the', '*', 'specific', 'language', 'governing', 'permissions', 'and', 'limitations', '*', 'under', 'the', 'License.', '*/', 'package', 'org.wso2.carbon.mss.example.service;', 'import', 'org.wso2.carbon.metrics.annotation.Counted;', 'import', 'org.wso2.carbon.metrics.annotation.Metered;', 'import', 'org.wso2.carbon.metrics.annotation.Timed;', 'import', 'org.wso2.carbon.mss.httpmonitoring.HTTPMonitoring;', 'import', 'java.util.Collection;', 'import', 'java.util.Map;', 'import', 'java.util.concurrent.ConcurrentHashMap;', 'import', 'javax.ws.rs.Consumes;', 'import', 'javax.ws.rs.GET;', 'import', 'javax.ws.rs.POST;', 'import', 'javax.ws.rs.Path;', 'import', 'javax.ws.rs.PathParam;', 'import', 'javax.ws.rs.Produces;', '/**', '*', 'StudentService', 'class.', '*/', '@Path(""/student"")', 'public', 'class', 'StudentService', '{', 'private', 'Map<String,', 'Student>', 'students', '=', 'new', 'ConcurrentHashMap<>();', 'public', 'StudentService()', '{', 'Student', 'student', '=', 'new', 'Student();', 'student.setNic(""910760234V"");', 'student.setFirstName(""Joseph"");', 'student.setLastName(""Rodgers"");', 'student.setAge(14);', 'addStudent(student);', '}', '@GET', '@Path(""/{nic}"")', '@Produces(""application/json"")', '@Timed', '@HTTPMonitoring', 'public', 'Student', 'getStudent(@PathParam(""nic"")', 'String', 'nic)', '{', 'return', 'students.get(nic);', '}', '@POST', '@Consumes(""application/json"")', '@Metered', '@HTTPMonitoring', 'public', 'void', 'addStudent(Student', 'student)', '{', 'students.put(student.getNic(),', 'student);', '}', '@GET', '@Produces(""application/json"")', '@Counted', '@HTTPMonitoring', 'public', 'Collection<Student>', 'getAll()', '{', 'return', 'students.values();', '}', '}', '```']",challenge not surrounded by ''': ,
"#include ""Simulation.h""
#include ""TimeManager.h""
#include ""Utils/Timing.h""
#include ""TimeStep.h""
#include ""TimeStepController.h""

using namespace PBD;
using namespace std;
using namespace GenParam;

Simulation* Simulation::current = nullptr;
int Simulation::GRAVITATION = -1;

Simulation::Simulation () 
{
	m_gravitation = Vector3r(0.0, -9.81, 0.0);

	m_timeStep = nullptr;
}

Simulation::~Simulation () 
{
	delete m_timeStep;
	delete TimeManager::getCurrent();

	current = nullptr;
}

Simulation* Simulation::getCurrent ()
{
	if (current == nullptr)
	{
		current = new Simulation ();
		current->init();
	}
	return current;
}

void Simulation::setCurrent (Simulation* tm)
{
	current = tm;
}

bool Simulation::hasCurrent()
{
	return (current != nullptr);
}

void Simulation::init()
{
	initParameters();
	
	m_timeStep = new TimeStepController();
	m_timeStep->init();
	TimeManager::getCurrent()->setTimeStepSize(static_cast<Real>(0.005));
}

void Simulation::initParameters()
{
	ParameterObject::initParameters();

 	GRAVITATION = createVectorParameter(""gravitation"", ""Gravitation"", 3u, m_gravitation.data());
 	setGroup(GRAVITATION, ""Simulation"");
 	setDescription(GRAVITATION, ""Vector to define the gravitational acceleration."");
}

void Simulation::reset()
{
	m_model->reset();
	if (m_timeStep)
		m_timeStep->reset();

	TimeManager::getCurrent()->setTime(static_cast<Real>(0.0));
}

","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#include', '""Simulation.h""', '#include', '""TimeManager.h""', '#include', '""Utils/Timing.h""', '#include', '""TimeStep.h""', '#include', '""TimeStepController.h""', 'using', 'namespace', 'PBD;', 'using', 'namespace', 'std;', 'using', 'namespace', 'GenParam;', 'Simulation*', 'Simulation::current', '=', 'nullptr;', 'int', 'Simulation::GRAVITATION', '=', '-1;', 'Simulation::Simulation', '()', '{', 'm_gravitation', '=', 'Vector3r(0.0,', '-9.81,', '0.0);', 'm_timeStep', '=', 'nullptr;', '}', 'Simulation::~Simulation', '()', '{', 'delete', 'm_timeStep;', 'delete', 'TimeManager::getCurrent();', 'current', '=', 'nullptr;', '}', 'Simulation*', 'Simulation::getCurrent', '()', '{', 'if', '(current', '==', 'nullptr)', '{', 'current', '=', 'new', 'Simulation', '();', 'current->init();', '}', 'return', 'current;', '}', 'void', 'Simulation::setCurrent', '(Simulation*', 'tm)', '{', 'current', '=', 'tm;', '}', 'bool', 'Simulation::hasCurrent()', '{', 'return', '(current', '!=', 'nullptr);', '}', 'void', 'Simulation::init()', '{', 'initParameters();', 'm_timeStep', '=', 'new', 'TimeStepController();', 'm_timeStep->init();', 'TimeManager::getCurrent()->setTimeStepSize(static_cast<Real>(0.005));', '}', 'void', 'Simulation::initParameters()', '{', 'ParameterObject::initParameters();', 'GRAVITATION', '=', 'createVectorParameter(""gravitation"",', '""Gravitation"",', '3u,', 'm_gravitation.data());', 'setGroup(GRAVITATION,', '""Simulation"");', 'setDescription(GRAVITATION,', '""Vector', 'to', 'define', 'the', 'gravitational', 'acceleration."");', '}', 'void', 'Simulation::reset()', '{', 'm_model->reset();', 'if', '(m_timeStep)', 'm_timeStep->reset();', 'TimeManager::getCurrent()->setTime(static_cast<Real>(0.0));', '}', '```']",challenge not surrounded by ''': ,
"--
UPDATE `areatrigger_teleport` SET `VerifiedBuild` = 15882 WHERE `ID` IN (4917,4919,4921,4922,4923,4924,4925,4927,4928,4929,4930,4931,4932,4933,4934,4935,4936,4941,4944,5127,5128,5129,5130,5131,5132,5133,5134,5135,5136,5137,5138,5148,5326,5328,5329,5330,5331,5740,4304,4233,4267,2406,2407,2408,2409,2410,2411);

UPDATE `areatrigger_teleport` SET /*Scholomance Instance*/ `target_position_x`=1273.91, `target_position_y`=-2553.09, `target_position_z`=91.8393, `target_orientation`=3.57792, `VerifiedBuild`=15882 WHERE `ID`=2568; -- WSL 4012
UPDATE `areatrigger_teleport` SET /*Pit of Saron (Exit)*/ `target_position_x`=5595.78, `target_position_y`=2013.27, `target_position_z`=798.041, `target_orientation`=0.78539, `VerifiedBuild`=15882 WHERE `ID`=5683; -- WSL 3924
UPDATE `areatrigger_teleport` SET /*Forge of Souls (Exit)*/ `target_position_x`=5667.65, `target_position_y`=2007.45, `target_position_z`=798.041, `target_orientation`=2.35619, `VerifiedBuild`=15882 WHERE `ID`=5688; -- WSL 3923

-- There's 3 areatriggers, not only one
UPDATE `areatrigger_teleport` SET `Name` = ""Thousand Needles - Test of Faith (Target)"" WHERE `ID` = 943;
DELETE FROM `areatrigger_teleport` WHERE `ID` IN (942,944);
INSERT INTO `areatrigger_teleport` (`ID`,`Name`,`target_map`,`target_position_x`,`target_position_y`,`target_position_z`,`target_orientation`,`VerifiedBuild`) VALUES
(942,""Thousand Needles - Test of Faith (Target)"",1,-5191.27,-2802.59,-7.21111,5.67232,15882),
(944,""Thousand Needles - Test of Faith (Target)"",1,-5191.27,-2802.59,-7.21111,5.67232,15882);
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```--', 'UPDATE', '`areatrigger_teleport`', 'SET', '`VerifiedBuild`', '=', '15882', 'WHERE', '`ID`', 'IN', '(4917,4919,4921,4922,4923,4924,4925,4927,4928,4929,4930,4931,4932,4933,4934,4935,4936,4941,4944,5127,5128,5129,5130,5131,5132,5133,5134,5135,5136,5137,5138,5148,5326,5328,5329,5330,5331,5740,4304,4233,4267,2406,2407,2408,2409,2410,2411);', 'UPDATE', '`areatrigger_teleport`', 'SET', '/*Scholomance', 'Instance*/', '`target_position_x`=1273.91,', '`target_position_y`=-2553.09,', '`target_position_z`=91.8393,', '`target_orientation`=3.57792,', '`VerifiedBuild`=15882', 'WHERE', '`ID`=2568;', '--', 'WSL', '4012', 'UPDATE', '`areatrigger_teleport`', 'SET', '/*Pit', 'of', 'Saron', '(Exit)*/', '`target_position_x`=5595.78,', '`target_position_y`=2013.27,', '`target_position_z`=798.041,', '`target_orientation`=0.78539,', '`VerifiedBuild`=15882', 'WHERE', '`ID`=5683;', '--', 'WSL', '3924', 'UPDATE', '`areatrigger_teleport`', 'SET', '/*Forge', 'of', 'Souls', '(Exit)*/', '`target_position_x`=5667.65,', '`target_position_y`=2007.45,', '`target_position_z`=798.041,', '`target_orientation`=2.35619,', '`VerifiedBuild`=15882', 'WHERE', '`ID`=5688;', '--', 'WSL', '3923', '--', ""There's"", '3', 'areatriggers,', 'not', 'only', 'one', 'UPDATE', '`areatrigger_teleport`', 'SET', '`Name`', '=', '""Thousand', 'Needles', '-', 'Test', 'of', 'Faith', '(Target)""', 'WHERE', '`ID`', '=', '943;', 'DELETE', 'FROM', '`areatrigger_teleport`', 'WHERE', '`ID`', 'IN', '(942,944);', 'INSERT', 'INTO', '`areatrigger_teleport`', '(`ID`,`Name`,`target_map`,`target_position_x`,`target_position_y`,`target_position_z`,`target_orientation`,`VerifiedBuild`)', 'VALUES', '(942,""Thousand', 'Needles', '-', 'Test', 'of', 'Faith', '(Target)"",1,-5191.27,-2802.59,-7.21111,5.67232,15882),', '(944,""Thousand', 'Needles', '-', 'Test', 'of', 'Faith', '(Target)"",1,-5191.27,-2802.59,-7.21111,5.67232,15882);', '```']",challenge not surrounded by ''': ,
"package com.example.bodyguard;

import java.util.ArrayList;

import android.content.Context;
import android.widget.ArrayAdapter;
import android.widget.Filter;
import android.widget.Filterable;

class PlacesAutoCompleteAdapter extends ArrayAdapter<String> implements Filterable {
    static ArrayList<String> resultList;

    public PlacesAutoCompleteAdapter(Context context, int textViewResourceId) {
        super(context, textViewResourceId);
    }

    @Override
    public int getCount() {
        return resultList.size();
    }

    @Override
    public String getItem(int index) {
        return resultList.get(index);
    }

    @Override
    public Filter getFilter() {
        Filter filter = new Filter() {
            @Override
            protected FilterResults performFiltering(CharSequence constraint) {
                FilterResults filterResults = new FilterResults();
                if (constraint != null) {
                    // Retrieve the autocomplete results.
                	PlaceAutoComplete places= new PlaceAutoComplete();
                    resultList = places.autocomplete(constraint.toString());

                    // Assign the data to the FilterResults
                    filterResults.values = resultList;
                    filterResults.count = resultList.size();
                }
                return filterResults;
            }

            @Override
            protected void publishResults(CharSequence constraint, FilterResults results) {
                if (results != null && results.count > 0) {
                    notifyDataSetChanged();
                }
                else {
                    notifyDataSetInvalidated();
                }
            }};
        return filter;
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.example.bodyguard;', 'import', 'java.util.ArrayList;', 'import', 'android.content.Context;', 'import', 'android.widget.ArrayAdapter;', 'import', 'android.widget.Filter;', 'import', 'android.widget.Filterable;', 'class', 'PlacesAutoCompleteAdapter', 'extends', 'ArrayAdapter<String>', 'implements', 'Filterable', '{', 'static', 'ArrayList<String>', 'resultList;', 'public', 'PlacesAutoCompleteAdapter(Context', 'context,', 'int', 'textViewResourceId)', '{', 'super(context,', 'textViewResourceId);', '}', '@Override', 'public', 'int', 'getCount()', '{', 'return', 'resultList.size();', '}', '@Override', 'public', 'String', 'getItem(int', 'index)', '{', 'return', 'resultList.get(index);', '}', '@Override', 'public', 'Filter', 'getFilter()', '{', 'Filter', 'filter', '=', 'new', 'Filter()', '{', '@Override', 'protected', 'FilterResults', 'performFiltering(CharSequence', 'constraint)', '{', 'FilterResults', 'filterResults', '=', 'new', 'FilterResults();', 'if', '(constraint', '!=', 'null)', '{', '//', 'Retrieve', 'the', 'autocomplete', 'results.', 'PlaceAutoComplete', 'places=', 'new', 'PlaceAutoComplete();', 'resultList', '=', 'places.autocomplete(constraint.toString());', '//', 'Assign', 'the', 'data', 'to', 'the', 'FilterResults', 'filterResults.values', '=', 'resultList;', 'filterResults.count', '=', 'resultList.size();', '}', 'return', 'filterResults;', '}', '@Override', 'protected', 'void', 'publishResults(CharSequence', 'constraint,', 'FilterResults', 'results)', '{', 'if', '(results', '!=', 'null', '&&', 'results.count', '>', '0)', '{', 'notifyDataSetChanged();', '}', 'else', '{', 'notifyDataSetInvalidated();', '}', '}};', 'return', 'filter;', '}', '}', '```']",challenge not surrounded by ''': ,
"var protodef = require(__dirname + '/protodef.js');

function ReqlRuntimeError(msg, frames) {
  Error.captureStackTrace(this, ReqlRuntimeError);
  this.type = protodef.Response.ResponseType.RUNTIME_ERROR;
  this.message = msg;
  this.frames = frames || [];
}
ReqlRuntimeError.prototype = new Error();
//ReqlRuntimeError.prototype.name = ""ReqlRuntimeError""


function ReqlClientError(msg, frames) {
  Error.captureStackTrace(this, ReqlClientError);
  this.type = protodef.Response.ResponseType.CLIENT_ERROR;
  this.message = msg;
  this.frames = frames || [];
}
ReqlClientError.prototype = new Error();
//ReqlClientError.prototype.name = ""ReqlClientError""

function ReqlCompileError(msg, frames) {
  Error.captureStackTrace(this, ReqlCompileError);
  this.type = protodef.Response.ResponseType.COMPILE_ERROR;
  this.message = msg;
  this.frames = frames || [];
}
ReqlCompileError.prototype = new Error();
ReqlCompileError.prototype.name = 'ReqlCompileError';


Err = {};
Err.ReqlRuntimeError = ReqlRuntimeError;
Err.ReqlCompileError = ReqlCompileError;
Err.ReqLClientError = ReqlClientError;



module.exports = Err;
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```var', 'protodef', '=', 'require(__dirname', '+', ""'/protodef.js');"", 'function', 'ReqlRuntimeError(msg,', 'frames)', '{', 'Error.captureStackTrace(this,', 'ReqlRuntimeError);', 'this.type', '=', 'protodef.Response.ResponseType.RUNTIME_ERROR;', 'this.message', '=', 'msg;', 'this.frames', '=', 'frames', '||', '[];', '}', 'ReqlRuntimeError.prototype', '=', 'new', 'Error();', '//ReqlRuntimeError.prototype.name', '=', '""ReqlRuntimeError""', 'function', 'ReqlClientError(msg,', 'frames)', '{', 'Error.captureStackTrace(this,', 'ReqlClientError);', 'this.type', '=', 'protodef.Response.ResponseType.CLIENT_ERROR;', 'this.message', '=', 'msg;', 'this.frames', '=', 'frames', '||', '[];', '}', 'ReqlClientError.prototype', '=', 'new', 'Error();', '//ReqlClientError.prototype.name', '=', '""ReqlClientError""', 'function', 'ReqlCompileError(msg,', 'frames)', '{', 'Error.captureStackTrace(this,', 'ReqlCompileError);', 'this.type', '=', 'protodef.Response.ResponseType.COMPILE_ERROR;', 'this.message', '=', 'msg;', 'this.frames', '=', 'frames', '||', '[];', '}', 'ReqlCompileError.prototype', '=', 'new', 'Error();', 'ReqlCompileError.prototype.name', '=', ""'ReqlCompileError';"", 'Err', '=', '{};', 'Err.ReqlRuntimeError', '=', 'ReqlRuntimeError;', 'Err.ReqlCompileError', '=', 'ReqlCompileError;', 'Err.ReqLClientError', '=', 'ReqlClientError;', 'module.exports', '=', 'Err;', '```']",challenge not surrounded by ''': ,
"package know.how.designpatterns.prototype;

import java.util.HashMap;
import java.util.Map;

public class AccountCache {
	
	private static Map<String, AbstractAccount> accountsMap = new HashMap<String, AbstractAccount>(); 
	
	public static AbstractAccount cloneAccount(String accountType) { 
		AbstractAccount cachedAccount = accountsMap.get(accountType); 
		return (AbstractAccount) cachedAccount.clone(); 
	}
	
	public static void loadCache() { 
		CheckingAccount checkingAccount = new CheckingAccount(0.0, 0.0); 
		accountsMap.put(""Checking account"", checkingAccount); 
		
		SavingAccount savingAccount = new SavingAccount(0.0);
		accountsMap.put(""Saving account"", savingAccount);
		
	}
	
	public static void main(String[] args) { 
		AccountCache.loadCache(); 
		AbstractAccount clonedAccount = AccountCache.cloneAccount(""Checking account""); 
		clonedAccount.verifyAccount(); 
		
		AbstractAccount clonedAccount2 = AccountCache.cloneAccount(""Saving account""); 
		clonedAccount2.verifyAccount(); 
    }

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'know.how.designpatterns.prototype;', 'import', 'java.util.HashMap;', 'import', 'java.util.Map;', 'public', 'class', 'AccountCache', '{', 'private', 'static', 'Map<String,', 'AbstractAccount>', 'accountsMap', '=', 'new', 'HashMap<String,', 'AbstractAccount>();', 'public', 'static', 'AbstractAccount', 'cloneAccount(String', 'accountType)', '{', 'AbstractAccount', 'cachedAccount', '=', 'accountsMap.get(accountType);', 'return', '(AbstractAccount)', 'cachedAccount.clone();', '}', 'public', 'static', 'void', 'loadCache()', '{', 'CheckingAccount', 'checkingAccount', '=', 'new', 'CheckingAccount(0.0,', '0.0);', 'accountsMap.put(""Checking', 'account"",', 'checkingAccount);', 'SavingAccount', 'savingAccount', '=', 'new', 'SavingAccount(0.0);', 'accountsMap.put(""Saving', 'account"",', 'savingAccount);', '}', 'public', 'static', 'void', 'main(String[]', 'args)', '{', 'AccountCache.loadCache();', 'AbstractAccount', 'clonedAccount', '=', 'AccountCache.cloneAccount(""Checking', 'account"");', 'clonedAccount.verifyAccount();', 'AbstractAccount', 'clonedAccount2', '=', 'AccountCache.cloneAccount(""Saving', 'account"");', 'clonedAccount2.verifyAccount();', '}', '}', '```']",challenge not surrounded by ''': ,
"# -*- coding: utf-8 -*-
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

from __future__ import absolute_import

import os
import backend_common
import releng_archiver.config


def create_app(config=None):
    app = backend_common.create_app(
        name=releng_archiver.config.PROJECT_NAME,
        config=config,
        extensions=[
            'log',
            'security',
            'cors',
            'api',
            'auth',
            'db',
        ],
    )
    # TODO: add predefined api.yml
    app.api.register(os.path.join(os.path.dirname(__file__), 'api.yml'))
    return app
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', '-*-', 'coding:', 'utf-8', '-*-', '#', 'This', 'Source', 'Code', 'Form', 'is', 'subject', 'to', 'the', 'terms', 'of', 'the', 'Mozilla', 'Public', '#', 'License,', 'v.', '2.0.', 'If', 'a', 'copy', 'of', 'the', 'MPL', 'was', 'not', 'distributed', 'with', 'this', '#', 'file,', 'You', 'can', 'obtain', 'one', 'at', 'http://mozilla.org/MPL/2.0/.', 'from', '__future__', 'import', 'absolute_import', 'import', 'os', 'import', 'backend_common', 'import', 'releng_archiver.config', 'def', 'create_app(config=None):', 'app', '=', 'backend_common.create_app(', 'name=releng_archiver.config.PROJECT_NAME,', 'config=config,', 'extensions=[', ""'log',"", ""'security',"", ""'cors',"", ""'api',"", ""'auth',"", ""'db',"", '],', ')', '#', 'TODO:', 'add', 'predefined', 'api.yml', 'app.api.register(os.path.join(os.path.dirname(__file__),', ""'api.yml'))"", 'return', 'app', '```']",challenge not surrounded by ''': ,
"/*
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.prestosql.spi.type;

import com.fasterxml.jackson.annotation.JsonValue;

import java.time.LocalDate;
import java.util.Objects;

public final class SqlDate
{
    private final int days;

    // TODO accept long
    public SqlDate(int days)
    {
        this.days = days;
    }

    public int getDays()
    {
        return days;
    }

    @Override
    public int hashCode()
    {
        return days;
    }

    @Override
    public boolean equals(Object obj)
    {
        if (this == obj) {
            return true;
        }
        if (obj == null || getClass() != obj.getClass()) {
            return false;
        }
        SqlDate other = (SqlDate) obj;
        return Objects.equals(days, other.days);
    }

    @JsonValue
    @Override
    public String toString()
    {
        return LocalDate.ofEpochDay(days).toString();
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'io.prestosql.spi.type;', 'import', 'com.fasterxml.jackson.annotation.JsonValue;', 'import', 'java.time.LocalDate;', 'import', 'java.util.Objects;', 'public', 'final', 'class', 'SqlDate', '{', 'private', 'final', 'int', 'days;', '//', 'TODO', 'accept', 'long', 'public', 'SqlDate(int', 'days)', '{', 'this.days', '=', 'days;', '}', 'public', 'int', 'getDays()', '{', 'return', 'days;', '}', '@Override', 'public', 'int', 'hashCode()', '{', 'return', 'days;', '}', '@Override', 'public', 'boolean', 'equals(Object', 'obj)', '{', 'if', '(this', '==', 'obj)', '{', 'return', 'true;', '}', 'if', '(obj', '==', 'null', '||', 'getClass()', '!=', 'obj.getClass())', '{', 'return', 'false;', '}', 'SqlDate', 'other', '=', '(SqlDate)', 'obj;', 'return', 'Objects.equals(days,', 'other.days);', '}', '@JsonValue', '@Override', 'public', 'String', 'toString()', '{', 'return', 'LocalDate.ofEpochDay(days).toString();', '}', '}', '```']",challenge not surrounded by ''': ,
"from optparse import make_option

from django.conf import settings
from django.core.management.base import BaseCommand, CommandError

from landfill.generators import generate_themes


class Command(BaseCommand):
    """"""
    Generate example themes for development/testing purpose.

    Themes will have 1 preview image + header & footer, 2 translations
    (French and Spanish) and 5 ratings. If you don't provide any --owner
    email address, all created add-ons will have 'nobody@mozilla.org'
    as owner.

    Categories from production (Abstract, Causes, Fashion, etc)
    will be created and randomly populated with generated themes.

    Usage:

        python manage.py generate_themes <num_themes> [--owner <email>]

    """"""

    help = __doc__
    option_list = BaseCommand.option_list + (
        make_option('--owner', action='store', dest='email',
                    default='nobody@mozilla.org',
                    help=""Specific owner's email to be created.""),
    )

    def handle(self, *args, **kwargs):
        if not settings.DEBUG:
            raise CommandError('You can only run this command with your '
                               'DEBUG setting set to True.')
        num = int(args[0])
        email = kwargs.get('email')
        generate_themes(num, email)
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```from', 'optparse', 'import', 'make_option', 'from', 'django.conf', 'import', 'settings', 'from', 'django.core.management.base', 'import', 'BaseCommand,', 'CommandError', 'from', 'landfill.generators', 'import', 'generate_themes', 'class', 'Command(BaseCommand):', '""""""', 'Generate', 'example', 'themes', 'for', 'development/testing', 'purpose.', 'Themes', 'will', 'have', '1', 'preview', 'image', '+', 'header', '&', 'footer,', '2', 'translations', '(French', 'and', 'Spanish)', 'and', '5', 'ratings.', 'If', 'you', ""don't"", 'provide', 'any', '--owner', 'email', 'address,', 'all', 'created', 'add-ons', 'will', 'have', ""'nobody@mozilla.org'"", 'as', 'owner.', 'Categories', 'from', 'production', '(Abstract,', 'Causes,', 'Fashion,', 'etc)', 'will', 'be', 'created', 'and', 'randomly', 'populated', 'with', 'generated', 'themes.', 'Usage:', 'python', 'manage.py', 'generate_themes', '<num_themes>', '[--owner', '<email>]', '""""""', 'help', '=', '__doc__', 'option_list', '=', 'BaseCommand.option_list', '+', '(', ""make_option('--owner',"", ""action='store',"", ""dest='email',"", ""default='nobody@mozilla.org',"", 'help=""Specific', ""owner's"", 'email', 'to', 'be', 'created.""),', ')', 'def', 'handle(self,', '*args,', '**kwargs):', 'if', 'not', 'settings.DEBUG:', 'raise', ""CommandError('You"", 'can', 'only', 'run', 'this', 'command', 'with', 'your', ""'"", ""'DEBUG"", 'setting', 'set', 'to', ""True.')"", 'num', '=', 'int(args[0])', 'email', '=', ""kwargs.get('email')"", 'generate_themes(num,', 'email)', '```']",challenge not surrounded by ''': ,
"# -*- coding: utf-8 -*-
##############################################################################
#
#    Copyright (C) 2015  ADHOC SA  (http://www.adhoc.com.ar)
#    All Rights Reserved.
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as
#    published by the Free Software Foundation, either version 3 of the
#    License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
##############################################################################
{
    ""name"": ""Account Move Chatter"",
    ""version"": ""8.0.0.0.0"",
    'author': 'ADHOC SA',
    'website': 'www.adhoc.com.ar',
    'license': 'AGPL-3',
    ""category"": ""Accounting"",
    ""description"": """""" 
Account Move Chatter
====================
    """""",
    'depends': [
                'account',
    ],
    'data': [
        'view/account_view.xml',
    ],
    'demo': [],
    'test': [],
    'installable': True,
    'auto_install': False,
    'application': False,
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', '-*-', 'coding:', 'utf-8', '-*-', '##############################################################################', '#', '#', 'Copyright', '(C)', '2015', 'ADHOC', 'SA', '(http://www.adhoc.com.ar)', '#', 'All', 'Rights', 'Reserved.', '#', '#', 'This', 'program', 'is', 'free', 'software:', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', '#', 'it', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'Affero', 'General', 'Public', 'License', 'as', '#', 'published', 'by', 'the', 'Free', 'Software', 'Foundation,', 'either', 'version', '3', 'of', 'the', '#', 'License,', 'or', '(at', 'your', 'option)', 'any', 'later', 'version.', '#', '#', 'This', 'program', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', '#', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', '#', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', '#', 'GNU', 'Affero', 'General', 'Public', 'License', 'for', 'more', 'details.', '#', '#', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'Affero', 'General', 'Public', 'License', '#', 'along', 'with', 'this', 'program.', 'If', 'not,', 'see', '<http://www.gnu.org/licenses/>.', '#', '##############################################################################', '{', '""name"":', '""Account', 'Move', 'Chatter"",', '""version"":', '""8.0.0.0.0"",', ""'author':"", ""'ADHOC"", ""SA',"", ""'website':"", ""'www.adhoc.com.ar',"", ""'license':"", ""'AGPL-3',"", '""category"":', '""Accounting"",', '""description"":', '""""""', 'Account', 'Move', 'Chatter', '====================', '"""""",', ""'depends':"", '[', ""'account',"", '],', ""'data':"", '[', ""'view/account_view.xml',"", '],', ""'demo':"", '[],', ""'test':"", '[],', ""'installable':"", 'True,', ""'auto_install':"", 'False,', ""'application':"", 'False,', '}', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright (c) 2013, 2019, Oracle and/or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 */

import com.sun.tools.classfile.*;

/**
 * Trivial {@code Attribute.Visitor} implementation, to make it easy to
 * write visitors for specific attributes.
 */
class AttributeVisitor<R, P> implements Attribute.Visitor<R, P> {
    public R visitBootstrapMethods(BootstrapMethods_attribute attr, P p) { return null; }
    public R visitDefault(DefaultAttribute attr, P p) { return null; }
    public R visitAnnotationDefault(AnnotationDefault_attribute attr, P p) { return null; }
    public R visitCharacterRangeTable(CharacterRangeTable_attribute attr, P p) { return null; }
    public R visitCode(Code_attribute attr, P p) { return null; }
    public R visitCompilationID(CompilationID_attribute attr, P p) { return null; }
    public R visitConstantValue(ConstantValue_attribute attr, P p) { return null; }
    public R visitDeprecated(Deprecated_attribute attr, P p) { return null; }
    public R visitEnclosingMethod(EnclosingMethod_attribute attr, P p) { return null; }
    public R visitExceptions(Exceptions_attribute attr, P p) { return null; }
    public R visitInnerClasses(InnerClasses_attribute attr, P p) { return null; }
    public R visitLineNumberTable(LineNumberTable_attribute attr, P p) { return null; }
    public R visitLocalVariableTable(LocalVariableTable_attribute attr, P p) { return null; }
    public R visitLocalVariableTypeTable(LocalVariableTypeTable_attribute attr, P p) { return null; }
    public R visitNestHost(NestHost_attribute attr, P p) { return null; }
    public R visitMethodParameters(MethodParameters_attribute attr, P p) { return null; }
    public R visitModule(Module_attribute attr, P p) { return null; }
    public R visitModuleHashes(ModuleHashes_attribute attr, P p) { return null; }
    public R visitModuleMainClass(ModuleMainClass_attribute attr, P p) { return null; }
    public R visitModulePackages(ModulePackages_attribute attr, P p) { return null; }
    public R visitModuleResolution(ModuleResolution_attribute attr, P p) { return null; }
    public R visitModuleTarget(ModuleTarget_attribute attr, P p) { return null; }
    public R visitNestMembers(NestMembers_attribute attr, P p) { return null; }
    public R visitRuntimeVisibleAnnotations(RuntimeVisibleAnnotations_attribute attr, P p) { return null; }
    public R visitRuntimeInvisibleAnnotations(RuntimeInvisibleAnnotations_attribute attr, P p) { return null; }
    public R visitRuntimeVisibleParameterAnnotations(RuntimeVisibleParameterAnnotations_attribute attr, P p) { return null; }
    public R visitRuntimeInvisibleParameterAnnotations(RuntimeInvisibleParameterAnnotations_attribute attr, P p) { return null; }
    public R visitRuntimeVisibleTypeAnnotations(RuntimeVisibleTypeAnnotations_attribute attr, P p) { return null; }
    public R visitRuntimeInvisibleTypeAnnotations(RuntimeInvisibleTypeAnnotations_attribute attr, P p) { return null; }
    public R visitSignature(Signature_attribute attr, P p) { return null; }
    public R visitSourceDebugExtension(SourceDebugExtension_attribute attr, P p) { return null; }
    public R visitSourceFile(SourceFile_attribute attr, P p) { return null; }
    public R visitSourceID(SourceID_attribute attr, P p) { return null; }
    public R visitStackMap(StackMap_attribute attr, P p) { return null; }
    public R visitStackMapTable(StackMapTable_attribute attr, P p) { return null; }
    public R visitSynthetic(Synthetic_attribute attr, P p) { return null; }
    public R visitRecord(Record_attribute attr, P p) { return null; }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '(c)', '2013,', '2019,', 'Oracle', 'and/or', 'its', 'affiliates.', 'All', 'rights', 'reserved.', '*', 'DO', 'NOT', 'ALTER', 'OR', 'REMOVE', 'COPYRIGHT', 'NOTICES', 'OR', 'THIS', 'FILE', 'HEADER.', '*', '*', 'This', 'code', 'is', 'free', 'software;', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', 'it', '*', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'version', '2', 'only,', 'as', '*', 'published', 'by', 'the', 'Free', 'Software', 'Foundation.', '*', '*', 'This', 'code', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', 'but', 'WITHOUT', '*', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', 'MERCHANTABILITY', 'or', '*', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', 'GNU', 'General', 'Public', 'License', '*', 'version', '2', 'for', 'more', 'details', '(a', 'copy', 'is', 'included', 'in', 'the', 'LICENSE', 'file', 'that', '*', 'accompanied', 'this', 'code).', '*', '*', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'version', '*', '2', 'along', 'with', 'this', 'work;', 'if', 'not,', 'write', 'to', 'the', 'Free', 'Software', 'Foundation,', '*', 'Inc.,', '51', 'Franklin', 'St,', 'Fifth', 'Floor,', 'Boston,', 'MA', '02110-1301', 'USA.', '*', '*', 'Please', 'contact', 'Oracle,', '500', 'Oracle', 'Parkway,', 'Redwood', 'Shores,', 'CA', '94065', 'USA', '*', 'or', 'visit', 'www.oracle.com', 'if', 'you', 'need', 'additional', 'information', 'or', 'have', 'any', '*', 'questions.', '*/', 'import', 'com.sun.tools.classfile.*;', '/**', '*', 'Trivial', '{@code', 'Attribute.Visitor}', 'implementation,', 'to', 'make', 'it', 'easy', 'to', '*', 'write', 'visitors', 'for', 'specific', 'attributes.', '*/', 'class', 'AttributeVisitor<R,', 'P>', 'implements', 'Attribute.Visitor<R,', 'P>', '{', 'public', 'R', 'visitBootstrapMethods(BootstrapMethods_attribute', 'attr,', 'P', 'p)', '{', 'return', 'null;', '}', 'public', 'R', 'visitDefault(DefaultAttribute', 'attr,', 'P', 'p)', '{', 'return', 'null;', '}', 'public', 'R', 'visitAnnotationDefault(AnnotationDefault_attribute', 'attr,', 'P', 'p)', '{', 'return', 'null;', '}', 'public', 'R', 'visitCharacterRangeTable(CharacterRangeTable_attribute', 'attr,', 'P', 'p)', '{', 'return', 'null;', '}', 'public', 'R', 'visitCode(Code_attribute', 'attr,', 'P', 'p)', '{', 'return', 'null;', '}', 'public', 'R', 'visitCompilationID(CompilationID_attribute', 'attr,', 'P', 'p)', '{', 'return', 'null;', '}', 'public', 'R', 'visitConstantValue(ConstantValue_attribute', 'attr,', 'P', 'p)', '{', 'return', 'null;', '}', 'public', 'R', 'visitDeprecated(Deprecated_attribute', 'attr,', 'P', 'p)', '{', 'return', 'null;', '}', 'public', 'R', 'visitEnclosingMethod(EnclosingMethod_attribute', 'attr,', 'P', 'p)', '{', 'return', 'null;', '}', 'public', 'R', 'visitExceptions(Exceptions_attribute', 'attr,', 'P', 'p)', '{', 'return', 'null;', '}', 'public', 'R', 'visitInnerClasses(InnerClasses_attribute', 'attr,', 'P', 'p)', '{', 'return', 'null;', '}', 'public', 'R', 'visitLineNumberTable(LineNumberTable_attribute', 'attr,', 'P', 'p)', '{', 'return', 'null;', '}', 'public', 'R', 'visitLocalVariableTable(LocalVariableTable_attribute', 'attr,', 'P', 'p)', '{', 'return', 'null;', '}', 'public', 'R', 'visitLocalVariableTypeTable(LocalVariableTypeTable_attribute', 'attr,', 'P', 'p)', '{', 'return', 'null;', '}', 'public', 'R', 'visitNestHost(NestHost_attribute', 'attr,', 'P', 'p)', '{', 'return', 'null;', '}', 'public', 'R', 'visitMethodParameters(MethodParameters_attribute', 'attr,', 'P', 'p)', '{', 'return', 'null;', '}', 'public', 'R', 'visitModule(Module_attribute', 'attr,', 'P', 'p)', '{', 'return', 'null;', '}', 'public', 'R', 'visitModuleHashes(ModuleHashes_attribute', 'attr,', 'P', 'p)', '{', 'return', 'null;', '}', 'public', 'R', 'visitModuleMainClass(ModuleMainClass_attribute', 'attr,', 'P', 'p)', '{', 'return', 'null;', '}', 'public', 'R', 'visitModulePackages(ModulePackages_attribute', 'attr,', 'P', 'p)', '{', 'return', 'null;', '}', 'public', 'R', 'visitModuleResolution(ModuleResolution_attribute', 'attr,', 'P', 'p)', '{', 'return', 'null;', '}', 'public', 'R', 'visitModuleTarget(ModuleTarget_attribute', 'attr,', 'P', 'p)', '{', 'return', 'null;', '}', 'public', 'R', 'visitNestMembers(NestMembers_attribute', 'attr,', 'P', 'p)', '{', 'return', 'null;', '}', 'public', 'R', 'visitRuntimeVisibleAnnotations(RuntimeVisibleAnnotations_attribute', 'attr,', 'P', 'p)', '{', 'return', 'null;', '}', 'public', 'R', 'visitRuntimeInvisibleAnnotations(RuntimeInvisibleAnnotations_attribute', 'attr,', 'P', 'p)', '{', 'return', 'null;', '}', 'public', 'R', 'visitRuntimeVisibleParameterAnnotations(RuntimeVisibleParameterAnnotations_attribute', 'attr,', 'P', 'p)', '{', 'return', 'null;', '}', 'public', 'R', 'visitRuntimeInvisibleParameterAnnotations(RuntimeInvisibleParameterAnnotations_attribute', 'attr,', 'P', 'p)', '{', 'return', 'null;', '}', 'public', 'R', 'visitRuntimeVisibleTypeAnnotations(RuntimeVisibleTypeAnnotations_attribute', 'attr,', 'P', 'p)', '{', 'return', 'null;', '}', 'public', 'R', 'visitRuntimeInvisibleTypeAnnotations(RuntimeInvisibleTypeAnnotations_attribute', 'attr,', 'P', 'p)', '{', 'return', 'null;', '}', 'public', 'R', 'visitSignature(Signature_attribute', 'attr,', 'P', 'p)', '{', 'return', 'null;', '}', 'public', 'R', 'visitSourceDebugExtension(SourceDebugExtension_attribute', 'attr,', 'P', 'p)', '{', 'return', 'null;', '}', 'public', 'R', 'visitSourceFile(SourceFile_attribute', 'attr,', 'P', 'p)', '{', 'return', 'null;', '}', 'public', 'R', 'visitSourceID(SourceID_attribute', 'attr,', 'P', 'p)', '{', 'return', 'null;', '}', 'public', 'R', 'visitStackMap(StackMap_attribute', 'attr,', 'P', 'p)', '{', 'return', 'null;', '}', 'public', 'R', 'visitStackMapTable(StackMapTable_attribute', 'attr,', 'P', 'p)', '{', 'return', 'null;', '}', 'public', 'R', 'visitSynthetic(Synthetic_attribute', 'attr,', 'P', 'p)', '{', 'return', 'null;', '}', 'public', 'R', 'visitRecord(Record_attribute', 'attr,', 'P', 'p)', '{', 'return', 'null;', '}', '}', '```']",challenge not surrounded by ''': ,
"// Karma configuration
// Generated on Sun Oct 20 2013 07:28:56 GMT+0200 (CEST)

module.exports = function(config) {
    config.set({

        // base path, that will be used to resolve files and exclude
        basePath: '../',


        // frameworks to use
        frameworks: ['mocha', 'expect'],


        // list of files / patterns to load in the browser
        files: [

            ""test/Browser.js"",

            //""src/Query-dom.js"",
            //""src/events/BaseEvent.js"",
            //""src/events/Touch.js"",
            //""src/events/Tap.js"",
            //""src/events/Move.js"",
            //""src/events/MultiTouch.js"",
            //""src/events/Swipe.js"",
            //""src/Query-events.js"",

            ""build/query.js"",
            //""build/Query.js"",

            ""test/query-dom.test.js"",
            ""test/query-events.test.js""
        ],


        // web server port
        port: 9876,

        browsers: ['Chrome'],

        client: {
            mocha: {
                reporter: 'html', // change Karma's debug.html to the mocha web reporter
                ui: 'bdd'
            }
        }
    });
};
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//', 'Karma', 'configuration', '//', 'Generated', 'on', 'Sun', 'Oct', '20', '2013', '07:28:56', 'GMT+0200', '(CEST)', 'module.exports', '=', 'function(config)', '{', 'config.set({', '//', 'base', 'path,', 'that', 'will', 'be', 'used', 'to', 'resolve', 'files', 'and', 'exclude', 'basePath:', ""'../',"", '//', 'frameworks', 'to', 'use', 'frameworks:', ""['mocha',"", ""'expect'],"", '//', 'list', 'of', 'files', '/', 'patterns', 'to', 'load', 'in', 'the', 'browser', 'files:', '[', '""test/Browser.js"",', '//""src/Query-dom.js"",', '//""src/events/BaseEvent.js"",', '//""src/events/Touch.js"",', '//""src/events/Tap.js"",', '//""src/events/Move.js"",', '//""src/events/MultiTouch.js"",', '//""src/events/Swipe.js"",', '//""src/Query-events.js"",', '""build/query.js"",', '//""build/Query.js"",', '""test/query-dom.test.js"",', '""test/query-events.test.js""', '],', '//', 'web', 'server', 'port', 'port:', '9876,', 'browsers:', ""['Chrome'],"", 'client:', '{', 'mocha:', '{', 'reporter:', ""'html',"", '//', 'change', ""Karma's"", 'debug.html', 'to', 'the', 'mocha', 'web', 'reporter', 'ui:', ""'bdd'"", '}', '}', '});', '};', '```']",challenge not surrounded by ''': ,
"package com.echopen.asso.echopen.model.Data;

/**
 * Created by lecoucl on 15/04/17.
 */
public class DeviceConfiguration {

    private double mR0; // measure initial depth in m
    private double mRf; // measure final depth in m
    private float mProbeSectorAngle; // measure sector angle in degree
    private double mSamplingFrequency; // sampling frequency in Hz
    private int mNbLinesPerImage;
    private int mNbSamplesPerLine;

    public DeviceConfiguration(double iR0, double iRf, float iProbeSectorAngle, double iSamplingFrequency, int iNbLinePerImage, int iNbSamplesPerLine) {
        mR0 = iR0;
        mRf = iRf;
        mProbeSectorAngle = iProbeSectorAngle;
        mSamplingFrequency = iSamplingFrequency;
        mNbLinesPerImage = iNbLinePerImage;
        mNbSamplesPerLine = iNbSamplesPerLine;
    }

    public double getR0(){
        return mR0;
    }

    public double getRf(){
        return mRf;
    }

    public float getProbeSectorAngle(){
        return mProbeSectorAngle;
    }

    public double getSamplingFrequency(){
        return mSamplingFrequency;
    }

    public int getNbSamplesPerLine(){
        return mNbSamplesPerLine;
    }

    public int getNbLinesPerImage(){
        return mNbLinesPerImage;
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.echopen.asso.echopen.model.Data;', '/**', '*', 'Created', 'by', 'lecoucl', 'on', '15/04/17.', '*/', 'public', 'class', 'DeviceConfiguration', '{', 'private', 'double', 'mR0;', '//', 'measure', 'initial', 'depth', 'in', 'm', 'private', 'double', 'mRf;', '//', 'measure', 'final', 'depth', 'in', 'm', 'private', 'float', 'mProbeSectorAngle;', '//', 'measure', 'sector', 'angle', 'in', 'degree', 'private', 'double', 'mSamplingFrequency;', '//', 'sampling', 'frequency', 'in', 'Hz', 'private', 'int', 'mNbLinesPerImage;', 'private', 'int', 'mNbSamplesPerLine;', 'public', 'DeviceConfiguration(double', 'iR0,', 'double', 'iRf,', 'float', 'iProbeSectorAngle,', 'double', 'iSamplingFrequency,', 'int', 'iNbLinePerImage,', 'int', 'iNbSamplesPerLine)', '{', 'mR0', '=', 'iR0;', 'mRf', '=', 'iRf;', 'mProbeSectorAngle', '=', 'iProbeSectorAngle;', 'mSamplingFrequency', '=', 'iSamplingFrequency;', 'mNbLinesPerImage', '=', 'iNbLinePerImage;', 'mNbSamplesPerLine', '=', 'iNbSamplesPerLine;', '}', 'public', 'double', 'getR0(){', 'return', 'mR0;', '}', 'public', 'double', 'getRf(){', 'return', 'mRf;', '}', 'public', 'float', 'getProbeSectorAngle(){', 'return', 'mProbeSectorAngle;', '}', 'public', 'double', 'getSamplingFrequency(){', 'return', 'mSamplingFrequency;', '}', 'public', 'int', 'getNbSamplesPerLine(){', 'return', 'mNbSamplesPerLine;', '}', 'public', 'int', 'getNbLinesPerImage(){', 'return', 'mNbLinesPerImage;', '}', '}', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE html>
<html>
<head>
    <title>Feathers real-time Todos</title>
    <link href=""//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css"" rel=""stylesheet"">
</head>
<body>
    <style type=""text/css"">
        .done {
            text-decoration: line-through;
        }
    </style>

    <div class=""container"" id=""todos"">
        <h1>Feathers real-time Todos</h1>

        <ul class=""todos list-unstyled""></ul>
        <form role=""form"" class=""create-todo"">
            <div class=""form-group"">
                <input type=""text"" class=""form-control"" name=""description"" placeholder=""Add a new Todo"">
            </div>
            <button type=""submit"" class=""btn btn-info col-md-12"">Add Todo</button>
        </form>
    </div>

    <script src=""//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js""></script>
    <script src=""/static/js/external/feathers.js""></script>
    <script src=""/socket.io/socket.io.js""></script>
    <!--<script src=""todo-client.js""></script>-->
</body>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'html>', '<html>', '<head>', '<title>Feathers', 'real-time', 'Todos</title>', '<link', 'href=""//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css""', 'rel=""stylesheet"">', '</head>', '<body>', '<style', 'type=""text/css"">', '.done', '{', 'text-decoration:', 'line-through;', '}', '</style>', '<div', 'class=""container""', 'id=""todos"">', '<h1>Feathers', 'real-time', 'Todos</h1>', '<ul', 'class=""todos', 'list-unstyled""></ul>', '<form', 'role=""form""', 'class=""create-todo"">', '<div', 'class=""form-group"">', '<input', 'type=""text""', 'class=""form-control""', 'name=""description""', 'placeholder=""Add', 'a', 'new', 'Todo"">', '</div>', '<button', 'type=""submit""', 'class=""btn', 'btn-info', 'col-md-12"">Add', 'Todo</button>', '</form>', '</div>', '<script', 'src=""//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js""></script>', '<script', 'src=""/static/js/external/feathers.js""></script>', '<script', 'src=""/socket.io/socket.io.js""></script>', '<!--<script', 'src=""todo-client.js""></script>-->', '</body>', '```']",challenge not surrounded by ''': ,
"package sp2014f.sukopro;

import android.app.Activity;
import android.app.ActionBar;
import android.app.Fragment;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.os.Build;

//Ueno Comment@2014/12/4

public class MainActivity extends Activity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        if (savedInstanceState == null) {
            getFragmentManager().beginTransaction()
                    .add(R.id.container, new PlaceholderFragment())
                    .commit();
        }
    }


    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();
        if (id == R.id.action_settings) {
            return true;
        }
        return super.onOptionsItemSelected(item);
    }

    /**
     * A placeholder fragment containing a simple view.
     */
    public static class PlaceholderFragment extends Fragment {

        public PlaceholderFragment() {
        }

        @Override
        public View onCreateView(LayoutInflater inflater, ViewGroup container,
                Bundle savedInstanceState) {
            View rootView = inflater.inflate(R.layout.fragment_main, container, false);
            return rootView;
        }
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'sp2014f.sukopro;', 'import', 'android.app.Activity;', 'import', 'android.app.ActionBar;', 'import', 'android.app.Fragment;', 'import', 'android.os.Bundle;', 'import', 'android.view.LayoutInflater;', 'import', 'android.view.Menu;', 'import', 'android.view.MenuItem;', 'import', 'android.view.View;', 'import', 'android.view.ViewGroup;', 'import', 'android.os.Build;', '//Ueno', 'Comment\x81@2014/12/4', 'public', 'class', 'MainActivity', 'extends', 'Activity', '{', '@Override', 'protected', 'void', 'onCreate(Bundle', 'savedInstanceState)', '{', 'super.onCreate(savedInstanceState);', 'setContentView(R.layout.activity_main);', 'if', '(savedInstanceState', '==', 'null)', '{', 'getFragmentManager().beginTransaction()', '.add(R.id.container,', 'new', 'PlaceholderFragment())', '.commit();', '}', '}', '@Override', 'public', 'boolean', 'onCreateOptionsMenu(Menu', 'menu)', '{', '//', 'Inflate', 'the', 'menu;', 'this', 'adds', 'items', 'to', 'the', 'action', 'bar', 'if', 'it', 'is', 'present.', 'getMenuInflater().inflate(R.menu.main,', 'menu);', 'return', 'true;', '}', '@Override', 'public', 'boolean', 'onOptionsItemSelected(MenuItem', 'item)', '{', '//', 'Handle', 'action', 'bar', 'item', 'clicks', 'here.', 'The', 'action', 'bar', 'will', '//', 'automatically', 'handle', 'clicks', 'on', 'the', 'Home/Up', 'button,', 'so', 'long', '//', 'as', 'you', 'specify', 'a', 'parent', 'activity', 'in', 'AndroidManifest.xml.', 'int', 'id', '=', 'item.getItemId();', 'if', '(id', '==', 'R.id.action_settings)', '{', 'return', 'true;', '}', 'return', 'super.onOptionsItemSelected(item);', '}', '/**', '*', 'A', 'placeholder', 'fragment', 'containing', 'a', 'simple', 'view.', '*/', 'public', 'static', 'class', 'PlaceholderFragment', 'extends', 'Fragment', '{', 'public', 'PlaceholderFragment()', '{', '}', '@Override', 'public', 'View', 'onCreateView(LayoutInflater', 'inflater,', 'ViewGroup', 'container,', 'Bundle', 'savedInstanceState)', '{', 'View', 'rootView', '=', 'inflater.inflate(R.layout.fragment_main,', 'container,', 'false);', 'return', 'rootView;', '}', '}', '}', '```']",challenge not surrounded by ''': ,
"""""""List hosts with access to block volume.""""""
# :license: MIT, see LICENSE for more details.

import click
import SoftLayer
from SoftLayer.CLI import columns as column_helper
from SoftLayer.CLI import environment
from SoftLayer.CLI import formatting
from SoftLayer.CLI import helpers
from SoftLayer.CLI import storage_utils


@click.command()
@click.argument('volume_id')
@click.option('--sortby', help='Column to sort by', default='name')
@click.option('--columns',
              callback=column_helper.get_formatter(storage_utils.COLUMNS),
              help='Columns to display. Options: {0}'.format(
                  ', '.join(column.name for column in storage_utils.COLUMNS)),
              default=','.join(storage_utils.DEFAULT_COLUMNS))
@environment.pass_env
def cli(env, columns, sortby, volume_id):
    """"""List ACLs.""""""
    block_manager = SoftLayer.BlockStorageManager(env.client)
    resolved_id = helpers.resolve_id(block_manager.resolve_ids, volume_id, 'Volume Id')
    access_list = block_manager.get_block_volume_access_list(
        volume_id=resolved_id)
    table = formatting.Table(columns.columns)
    table.sortby = sortby

    for key, type_name in [('allowedVirtualGuests', 'VIRTUAL'),
                           ('allowedHardware', 'HARDWARE'),
                           ('allowedSubnets', 'SUBNET'),
                           ('allowedIpAddresses', 'IP')]:
        for obj in access_list.get(key, []):
            obj['type'] = type_name
            table.add_row([value or formatting.blank()
                           for value in columns.row(obj)])

    env.fout(table)
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```""""""List', 'hosts', 'with', 'access', 'to', 'block', 'volume.""""""', '#', ':license:', 'MIT,', 'see', 'LICENSE', 'for', 'more', 'details.', 'import', 'click', 'import', 'SoftLayer', 'from', 'SoftLayer.CLI', 'import', 'columns', 'as', 'column_helper', 'from', 'SoftLayer.CLI', 'import', 'environment', 'from', 'SoftLayer.CLI', 'import', 'formatting', 'from', 'SoftLayer.CLI', 'import', 'helpers', 'from', 'SoftLayer.CLI', 'import', 'storage_utils', '@click.command()', ""@click.argument('volume_id')"", ""@click.option('--sortby',"", ""help='Column"", 'to', 'sort', ""by',"", ""default='name')"", ""@click.option('--columns',"", 'callback=column_helper.get_formatter(storage_utils.COLUMNS),', ""help='Columns"", 'to', 'display.', 'Options:', ""{0}'.format("", ""',"", ""'.join(column.name"", 'for', 'column', 'in', 'storage_utils.COLUMNS)),', ""default=','.join(storage_utils.DEFAULT_COLUMNS))"", '@environment.pass_env', 'def', 'cli(env,', 'columns,', 'sortby,', 'volume_id):', '""""""List', 'ACLs.""""""', 'block_manager', '=', 'SoftLayer.BlockStorageManager(env.client)', 'resolved_id', '=', 'helpers.resolve_id(block_manager.resolve_ids,', 'volume_id,', ""'Volume"", ""Id')"", 'access_list', '=', 'block_manager.get_block_volume_access_list(', 'volume_id=resolved_id)', 'table', '=', 'formatting.Table(columns.columns)', 'table.sortby', '=', 'sortby', 'for', 'key,', 'type_name', 'in', ""[('allowedVirtualGuests',"", ""'VIRTUAL'),"", ""('allowedHardware',"", ""'HARDWARE'),"", ""('allowedSubnets',"", ""'SUBNET'),"", ""('allowedIpAddresses',"", ""'IP')]:"", 'for', 'obj', 'in', 'access_list.get(key,', '[]):', ""obj['type']"", '=', 'type_name', 'table.add_row([value', 'or', 'formatting.blank()', 'for', 'value', 'in', 'columns.row(obj)])', 'env.fout(table)', '```']",challenge not surrounded by ''': ,
"# -*- coding: utf-8 -*-
from django.conf.urls import include, url
from django.contrib import admin
from django.core.urlresolvers import reverse
from django.shortcuts import render, redirect

from safety.models import PasswordChange


def home(request):
    return render(request, 'home.html')


def update_password(request):
    if request.user.is_authenticated():
        pr, created = PasswordChange.objects.get_or_create_for_user(request.user)
        pr.required = True
        pr.save()
    return redirect(reverse('home'))


urlpatterns = [
    url(r'^admin/', include(admin.site.urls)),
    url(r'^account/', include('django.contrib.auth.urls')),
    url(r'^security/', include('safety.urls', namespace='safety')),
    url(r'^update-password/$', update_password, name='update-password'),
    url(r'^$', home, name='home'),
]
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', '-*-', 'coding:', 'utf-8', '-*-', 'from', 'django.conf.urls', 'import', 'include,', 'url', 'from', 'django.contrib', 'import', 'admin', 'from', 'django.core.urlresolvers', 'import', 'reverse', 'from', 'django.shortcuts', 'import', 'render,', 'redirect', 'from', 'safety.models', 'import', 'PasswordChange', 'def', 'home(request):', 'return', 'render(request,', ""'home.html')"", 'def', 'update_password(request):', 'if', 'request.user.is_authenticated():', 'pr,', 'created', '=', 'PasswordChange.objects.get_or_create_for_user(request.user)', 'pr.required', '=', 'True', 'pr.save()', 'return', ""redirect(reverse('home'))"", 'urlpatterns', '=', '[', ""url(r'^admin/',"", 'include(admin.site.urls)),', ""url(r'^account/',"", ""include('django.contrib.auth.urls')),"", ""url(r'^security/',"", ""include('safety.urls',"", ""namespace='safety')),"", ""url(r'^update-password/$',"", 'update_password,', ""name='update-password'),"", ""url(r'^$',"", 'home,', ""name='home'),"", ']', '```']",challenge not surrounded by ''': ,
"#include <iostream>
#include <fstream>
#include <algorithm>
using namespace std;
#define fin cin
#define fout cout
int main()
{
    ios_base::sync_with_stdio(0);
    int t;
    ifstream fin(""D-large.in"");
    ofstream fout(""D-large.out"");
    fin>>t;
    for(int k=1;k<=t;++k)
    {
        int n, cnt1=0, cnt2=0;
        double a[1001], b[1001];
        fin>>n;
        for(int i=0;i<n;++i)fin>>a[i];
        for(int i=0;i<n;++i)fin>>b[i];
        sort(a,a+n);
        sort(b,b+n);
        int chk[1001]={};
        for(int i=0;i<n;++i)
            for(int j=0;j<n;++j)
                if(a[i]>b[j]&&chk[j]==0){cnt1++,chk[j]=1;break;}
        int chk2[1001]={};
        for(int i=0;i<n;++i)
            for(int j=0;j<n;++j)
                if(b[i]>a[j]&&chk2[j]==0){cnt2++,chk2[j]=1;break;}
        fout<<""Case #""<<k<<"": ""<<cnt1<<"" ""<<n-cnt2<<endl;
    }
    return 0;
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#include', '<iostream>', '#include', '<fstream>', '#include', '<algorithm>', 'using', 'namespace', 'std;', '#define', 'fin', 'cin', '#define', 'fout', 'cout', 'int', 'main()', '{', 'ios_base::sync_with_stdio(0);', 'int', 't;', 'ifstream', 'fin(""D-large.in"");', 'ofstream', 'fout(""D-large.out"");', 'fin>>t;', 'for(int', 'k=1;k<=t;++k)', '{', 'int', 'n,', 'cnt1=0,', 'cnt2=0;', 'double', 'a[1001],', 'b[1001];', 'fin>>n;', 'for(int', 'i=0;i<n;++i)fin>>a[i];', 'for(int', 'i=0;i<n;++i)fin>>b[i];', 'sort(a,a+n);', 'sort(b,b+n);', 'int', 'chk[1001]={};', 'for(int', 'i=0;i<n;++i)', 'for(int', 'j=0;j<n;++j)', 'if(a[i]>b[j]&&chk[j]==0){cnt1++,chk[j]=1;break;}', 'int', 'chk2[1001]={};', 'for(int', 'i=0;i<n;++i)', 'for(int', 'j=0;j<n;++j)', 'if(b[i]>a[j]&&chk2[j]==0){cnt2++,chk2[j]=1;break;}', 'fout<<""Case', '#""<<k<<"":', '""<<cnt1<<""', '""<<n-cnt2<<endl;', '}', 'return', '0;', '}', '```']",challenge not surrounded by ''': ,
"package de.ids_mannheim.korap.index;

import org.apache.lucene.analysis.Analyzer;
import org.apache.lucene.analysis.TokenStream;
import org.apache.lucene.analysis.core.LowerCaseFilter;
import org.apache.lucene.analysis.standard.StandardTokenizer;
import org.apache.lucene.analysis.Tokenizer;
import org.apache.lucene.analysis.Analyzer.TokenStreamComponents;
import org.apache.commons.io.IOUtils;
import java.io.IOException;
import java.io.Reader;

public class TextAnalyzer extends Analyzer {
    @Override
    protected TokenStreamComponents createComponents (final String fieldName) {
		final Tokenizer source = new StandardTokenizer();
        TokenStream sink = new LowerCaseFilter(source);
		return new TokenStreamComponents(source, sink);
    };
};
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'de.ids_mannheim.korap.index;', 'import', 'org.apache.lucene.analysis.Analyzer;', 'import', 'org.apache.lucene.analysis.TokenStream;', 'import', 'org.apache.lucene.analysis.core.LowerCaseFilter;', 'import', 'org.apache.lucene.analysis.standard.StandardTokenizer;', 'import', 'org.apache.lucene.analysis.Tokenizer;', 'import', 'org.apache.lucene.analysis.Analyzer.TokenStreamComponents;', 'import', 'org.apache.commons.io.IOUtils;', 'import', 'java.io.IOException;', 'import', 'java.io.Reader;', 'public', 'class', 'TextAnalyzer', 'extends', 'Analyzer', '{', '@Override', 'protected', 'TokenStreamComponents', 'createComponents', '(final', 'String', 'fieldName)', '{', 'final', 'Tokenizer', 'source', '=', 'new', 'StandardTokenizer();', 'TokenStream', 'sink', '=', 'new', 'LowerCaseFilter(source);', 'return', 'new', 'TokenStreamComponents(source,', 'sink);', '};', '};', '```']",challenge not surrounded by ''': ,
"// @flow

import { call, fork, takeLatest } from 'redux-saga/effects';
import navigationSaga from '../sagas/navigationSagas';

let task;

export function* handleNavigation() {
  if (task) {
    task.cancel(); 
  }
  task = yield fork(navigationSaga);
}

export function* rootSaga() {
  yield [
    takeLatest('LOCATION_CHANGE', handleNavigation),
    call(handleNavigation),
  ]
}

export default rootSaga;","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//', '@flow', 'import', '{', 'call,', 'fork,', 'takeLatest', '}', 'from', ""'redux-saga/effects';"", 'import', 'navigationSaga', 'from', ""'../sagas/navigationSagas';"", 'let', 'task;', 'export', 'function*', 'handleNavigation()', '{', 'if', '(task)', '{', 'task.cancel();', '}', 'task', '=', 'yield', 'fork(navigationSaga);', '}', 'export', 'function*', 'rootSaga()', '{', 'yield', '[', ""takeLatest('LOCATION_CHANGE',"", 'handleNavigation),', 'call(handleNavigation),', ']', '}', 'export', 'default', 'rootSaga;```']",challenge not surrounded by ''': ,
"#ifndef LEVELCOMPLETETASK_HPP
#define LEVELCOMPLETETASK_HPP

#include <vector>
#include <SFML/System/Vector2.hpp>
#include ""../Task/Task.hpp""
#include ""../Base/Math.hpp""

typedef std::vector<sf::Vector2f> VectorStack;

class PlayerEntity;

class LevelCompleteTask : public sb::Task
{
public:
	LevelCompleteTask(PlayerEntity* playerEntity, const VectorStack& path);

	virtual void start();
	virtual bool doTask(sf::Time deltaTime);
	virtual void end();

private:
	PlayerEntity* m_playerEntity;
	VectorStack m_path;

	float m_totalTime;
	sb::Spline m_xSpline;
	sb::Spline m_ySpline;

	enum
	{
		kLevelComplete_Spline,
		kLevelComplete_Arrived
	} m_currentState;
};

#endif","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#ifndef', 'LEVELCOMPLETETASK_HPP', '#define', 'LEVELCOMPLETETASK_HPP', '#include', '<vector>', '#include', '<SFML/System/Vector2.hpp>', '#include', '""../Task/Task.hpp""', '#include', '""../Base/Math.hpp""', 'typedef', 'std::vector<sf::Vector2f>', 'VectorStack;', 'class', 'PlayerEntity;', 'class', 'LevelCompleteTask', ':', 'public', 'sb::Task', '{', 'public:', 'LevelCompleteTask(PlayerEntity*', 'playerEntity,', 'const', 'VectorStack&', 'path);', 'virtual', 'void', 'start();', 'virtual', 'bool', 'doTask(sf::Time', 'deltaTime);', 'virtual', 'void', 'end();', 'private:', 'PlayerEntity*', 'm_playerEntity;', 'VectorStack', 'm_path;', 'float', 'm_totalTime;', 'sb::Spline', 'm_xSpline;', 'sb::Spline', 'm_ySpline;', 'enum', '{', 'kLevelComplete_Spline,', 'kLevelComplete_Arrived', '}', 'm_currentState;', '};', '#endif```']",challenge not surrounded by ''': ,
"package info.nightscout.androidaps.plugins.pump.insight.utils;

import java.math.BigInteger;

public class Nonce {

    private BigInteger bigInteger;

    public Nonce() {
        bigInteger = BigInteger.ZERO;
    }

    public Nonce(byte[] storageValue) {
        bigInteger = new BigInteger(storageValue);
    }

    public byte[] getStorageValue() {
        return bigInteger.toByteArray();
    }

    public ByteBuf getProductionalBytes() {
        ByteBuf byteBuf = new ByteBuf(13);
        byteBuf.putBytesLE(bigInteger.toByteArray());
        byteBuf.putBytes((byte) 0x00, 13 - byteBuf.getSize());
        return byteBuf;
    }

    public static Nonce fromProductionalBytes(byte[] bytes) {
        ByteBuf byteBuf = new ByteBuf(14);
        byteBuf.putByte((byte) 0x00);
        byteBuf.putBytesLE(bytes);
        return new Nonce(byteBuf.getBytes());
    }

    public void increment() {
        bigInteger = bigInteger.add(BigInteger.ONE);
    }

    public void increment(int count) {
        bigInteger = bigInteger.add(BigInteger.valueOf(count));
    }

    public boolean isSmallerThan(Nonce greater) {
        return bigInteger.compareTo(greater.bigInteger) < 0;
    }

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'info.nightscout.androidaps.plugins.pump.insight.utils;', 'import', 'java.math.BigInteger;', 'public', 'class', 'Nonce', '{', 'private', 'BigInteger', 'bigInteger;', 'public', 'Nonce()', '{', 'bigInteger', '=', 'BigInteger.ZERO;', '}', 'public', 'Nonce(byte[]', 'storageValue)', '{', 'bigInteger', '=', 'new', 'BigInteger(storageValue);', '}', 'public', 'byte[]', 'getStorageValue()', '{', 'return', 'bigInteger.toByteArray();', '}', 'public', 'ByteBuf', 'getProductionalBytes()', '{', 'ByteBuf', 'byteBuf', '=', 'new', 'ByteBuf(13);', 'byteBuf.putBytesLE(bigInteger.toByteArray());', 'byteBuf.putBytes((byte)', '0x00,', '13', '-', 'byteBuf.getSize());', 'return', 'byteBuf;', '}', 'public', 'static', 'Nonce', 'fromProductionalBytes(byte[]', 'bytes)', '{', 'ByteBuf', 'byteBuf', '=', 'new', 'ByteBuf(14);', 'byteBuf.putByte((byte)', '0x00);', 'byteBuf.putBytesLE(bytes);', 'return', 'new', 'Nonce(byteBuf.getBytes());', '}', 'public', 'void', 'increment()', '{', 'bigInteger', '=', 'bigInteger.add(BigInteger.ONE);', '}', 'public', 'void', 'increment(int', 'count)', '{', 'bigInteger', '=', 'bigInteger.add(BigInteger.valueOf(count));', '}', 'public', 'boolean', 'isSmallerThan(Nonce', 'greater)', '{', 'return', 'bigInteger.compareTo(greater.bigInteger)', '<', '0;', '}', '}', '```']",challenge not surrounded by ''': ,
"'use strict';

define(""search/search"", ['core/app'], function (app) {


    angular.module('boondockr.search', ['ngRoute'])

        .config(['$routeProvider', function ($routeProvider) {
            $routeProvider.when('/search', {
                templateUrl: 'search/search.html',
                controller: 'SearchCtrl'
            });
        }])


        .controller('SearchCtrl', ['$scope', function ($scope) {
            $(function () {
                $('[data-toggle=""tooltip""]').tooltip()
            })

            $scope.toggleAdvancedPane = function(){
                if($scope.displayAdvancedPane){
                    $scope.displayAdvancedPane = false;
                    return;
                }

                $scope.displayAdvancedPane = true;
                return;

            };
        }]);
});
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', ""```'use"", ""strict';"", 'define(""search/search"",', ""['core/app'],"", 'function', '(app)', '{', ""angular.module('boondockr.search',"", ""['ngRoute'])"", "".config(['$routeProvider',"", 'function', '($routeProvider)', '{', ""$routeProvider.when('/search',"", '{', 'templateUrl:', ""'search/search.html',"", 'controller:', ""'SearchCtrl'"", '});', '}])', "".controller('SearchCtrl',"", ""['$scope',"", 'function', '($scope)', '{', '$(function', '()', '{', '$(\'[data-toggle=""tooltip""]\').tooltip()', '})', '$scope.toggleAdvancedPane', '=', 'function(){', 'if($scope.displayAdvancedPane){', '$scope.displayAdvancedPane', '=', 'false;', 'return;', '}', '$scope.displayAdvancedPane', '=', 'true;', 'return;', '};', '}]);', '});', '```']",challenge not surrounded by ''': ,
"Ext.define('CarListings.Application', {
    name: 'CarListings',

    extend: 'Ext.app.Application',

    views: [
        // TODO: add views here
    ],

    controllers: [
        // TODO: add controllers here
    ],

    stores: [
        // TODO: add stores here
    ]
});
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', ""```Ext.define('CarListings.Application',"", '{', 'name:', ""'CarListings',"", 'extend:', ""'Ext.app.Application',"", 'views:', '[', '//', 'TODO:', 'add', 'views', 'here', '],', 'controllers:', '[', '//', 'TODO:', 'add', 'controllers', 'here', '],', 'stores:', '[', '//', 'TODO:', 'add', 'stores', 'here', ']', '});', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright 2016 Red Hat, Inc. and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

package org.kie.server.services.api;

import org.kie.server.api.model.KieContainerResource;
import org.kie.server.api.model.KieContainerResourceFilter;
import org.kie.server.api.model.KieContainerResourceList;
import org.kie.server.api.model.KieScannerResource;
import org.kie.server.api.model.KieServerInfo;
import org.kie.server.api.model.KieServerStateInfo;
import org.kie.server.api.model.Message;
import org.kie.server.api.model.ReleaseId;
import org.kie.server.api.model.ServiceResponse;

public interface KieServer {

    ServiceResponse<KieServerInfo> getInfo();

    ServiceResponse<KieContainerResource> createContainer(String containerId, KieContainerResource container);

    ServiceResponse<KieContainerResourceList> listContainers(KieContainerResourceFilter containerFilter);

    ServiceResponse<KieContainerResource> getContainerInfo(String id);

    ServiceResponse<Void> disposeContainer(String containerId);

    ServiceResponse<KieScannerResource> getScannerInfo(String id);

    ServiceResponse<KieScannerResource> updateScanner(String id, KieScannerResource resource);

    ServiceResponse<ReleaseId> getContainerReleaseId(String id);

    ServiceResponse<ReleaseId> updateContainerReleaseId(String id, ReleaseId releaseId);

    ServiceResponse<KieServerStateInfo> getServerState();

    void addServerMessage(Message message);

    void addContainerMessage(String containerId, Message message);
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '2016', 'Red', 'Hat,', 'Inc.', 'and/or', 'its', 'affiliates.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'org.kie.server.services.api;', 'import', 'org.kie.server.api.model.KieContainerResource;', 'import', 'org.kie.server.api.model.KieContainerResourceFilter;', 'import', 'org.kie.server.api.model.KieContainerResourceList;', 'import', 'org.kie.server.api.model.KieScannerResource;', 'import', 'org.kie.server.api.model.KieServerInfo;', 'import', 'org.kie.server.api.model.KieServerStateInfo;', 'import', 'org.kie.server.api.model.Message;', 'import', 'org.kie.server.api.model.ReleaseId;', 'import', 'org.kie.server.api.model.ServiceResponse;', 'public', 'interface', 'KieServer', '{', 'ServiceResponse<KieServerInfo>', 'getInfo();', 'ServiceResponse<KieContainerResource>', 'createContainer(String', 'containerId,', 'KieContainerResource', 'container);', 'ServiceResponse<KieContainerResourceList>', 'listContainers(KieContainerResourceFilter', 'containerFilter);', 'ServiceResponse<KieContainerResource>', 'getContainerInfo(String', 'id);', 'ServiceResponse<Void>', 'disposeContainer(String', 'containerId);', 'ServiceResponse<KieScannerResource>', 'getScannerInfo(String', 'id);', 'ServiceResponse<KieScannerResource>', 'updateScanner(String', 'id,', 'KieScannerResource', 'resource);', 'ServiceResponse<ReleaseId>', 'getContainerReleaseId(String', 'id);', 'ServiceResponse<ReleaseId>', 'updateContainerReleaseId(String', 'id,', 'ReleaseId', 'releaseId);', 'ServiceResponse<KieServerStateInfo>', 'getServerState();', 'void', 'addServerMessage(Message', 'message);', 'void', 'addContainerMessage(String', 'containerId,', 'Message', 'message);', '}', '```']",challenge not surrounded by ''': ,
"#include <cppunit/plugin/TestPlugIn.h>


// Implements all the plug-in stuffs, WinMain...
CPPUNIT_PLUGIN_IMPLEMENT();
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#include', '<cppunit/plugin/TestPlugIn.h>', '//', 'Implements', 'all', 'the', 'plug-in', 'stuffs,', 'WinMain...', 'CPPUNIT_PLUGIN_IMPLEMENT();', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright 2012-2019 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package sample.cache;

import org.springframework.cache.annotation.CacheConfig;
import org.springframework.cache.annotation.Cacheable;
import org.springframework.stereotype.Component;

@Component
@CacheConfig(cacheNames = ""countries"")
public class CountryRepository {

	@Cacheable
	public Country findByCode(String code) {
		System.out.println(""---> Loading country with code '"" + code + ""'"");
		return new Country(code);
	}

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '2012-2019', 'the', 'original', 'author', 'or', 'authors.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'https://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'sample.cache;', 'import', 'org.springframework.cache.annotation.CacheConfig;', 'import', 'org.springframework.cache.annotation.Cacheable;', 'import', 'org.springframework.stereotype.Component;', '@Component', '@CacheConfig(cacheNames', '=', '""countries"")', 'public', 'class', 'CountryRepository', '{', '@Cacheable', 'public', 'Country', 'findByCode(String', 'code)', '{', 'System.out.println(""--->', 'Loading', 'country', 'with', 'code', '\'""', '+', 'code', '+', '""\'"");', 'return', 'new', 'Country(code);', '}', '}', '```']",challenge not surrounded by ''': ,
"import salt.modules.win_psget as win_psget
from tests.support.mixins import LoaderModuleMockMixin
from tests.support.mock import MagicMock, patch
from tests.support.unit import TestCase

BOOTSTRAP_PS_STR = """"""<?xml version=""1.0"" encoding=""utf-8""?>
<Objects>
  <Object Type=""System.Management.Automation.PSCustomObject"">
    <Property Name=""Name"" Type=""System.String"">NuGet</Property>
    <Property Name=""Version"" Type=""Microsoft.PackageManagement.Internal.Utility.Versions.FourPartVersion"">
      <Property Name=""Major"" Type=""System.UInt16"">2</Property>
      <Property Name=""Minor"" Type=""System.UInt16"">8</Property>
      <Property Name=""Build"" Type=""System.UInt16"">5</Property>
      <Property Name=""Revision"" Type=""System.UInt16"">208</Property>
    </Property>
    <Property Name=""ProviderPath"" Type=""System.String"">C:\\Program Files\\PackageManagement\\ProviderAssemblies\\nuget\\2.8.5
.208\\Microsoft.PackageManagement.NuGetProvider.dll</Property>
  </Object>
</Objects>""""""

AVAIL_MODULES_PS_STR = """"""<?xml version=""1.0"" encoding=""utf-8""?>
<Objects>
  <Object Type=""System.Management.Automation.PSCustomObject"">
    <Property Name=""Name"" Type=""System.String"">ActOnCmdlets</Property>
    <Property Name=""Description"" Type=""System.String"">CData Cmdlets for Act-On</Property>
  </Object>
  <Object Type=""System.Management.Automation.PSCustomObject"">
    <Property Name=""Name"" Type=""System.String"">FinancialEdgeNXTCmdlets</Property>
    <Property Name=""Description"" Type=""System.String"">CData Cmdlets for Blackbaud Financial Edge NXT</Property>
  </Object>
  <Object Type=""System.Management.Automation.PSCustomObject"">
    <Property Name=""Name"" Type=""System.String"">GoogleCMCmdlets</Property>
    <Property Name=""Description"" Type=""System.String"">CData Cmdlets for Google Campaign Manager</Property>
  </Object>
  <Object Type=""System.Management.Automation.PSCustomObject"">
    <Property Name=""Name"" Type=""System.String"">DHCPMigration</Property>
    <Property Name=""Description"" Type=""System.String"">A module to copy various DHCP information from 1 server to another.</Property>
  </Object>
</Objects>""""""


class WinPsgetCase(TestCase, LoaderModuleMockMixin):
    """"""
    Test cases for salt.modules.win_psget
    """"""

    def setup_loader_modules(self):
        return {win_psget: {}}

    def test_bootstrap(self):
        mock_read_ok = MagicMock(
            return_value={
                ""pid"": 78,
                ""retcode"": 0,
                ""stderr"": """",
                ""stdout"": BOOTSTRAP_PS_STR,
            }
        )

        with patch.dict(win_psget.__salt__, {""cmd.run_all"": mock_read_ok}):
            self.assertTrue(""NuGet"" in win_psget.bootstrap())

    def test_avail_modules(self):
        mock_read_ok = MagicMock(
            return_value={
                ""pid"": 78,
                ""retcode"": 0,
                ""stderr"": """",
                ""stdout"": AVAIL_MODULES_PS_STR,
            }
        )

        with patch.dict(win_psget.__salt__, {""cmd.run_all"": mock_read_ok}):
            self.assertTrue(""DHCPMigration"" in win_psget.avail_modules(False))
            self.assertTrue(""DHCPMigration"" in win_psget.avail_modules(True))
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'salt.modules.win_psget', 'as', 'win_psget', 'from', 'tests.support.mixins', 'import', 'LoaderModuleMockMixin', 'from', 'tests.support.mock', 'import', 'MagicMock,', 'patch', 'from', 'tests.support.unit', 'import', 'TestCase', 'BOOTSTRAP_PS_STR', '=', '""""""<?xml', 'version=""1.0""', 'encoding=""utf-8""?>', '<Objects>', '<Object', 'Type=""System.Management.Automation.PSCustomObject"">', '<Property', 'Name=""Name""', 'Type=""System.String"">NuGet</Property>', '<Property', 'Name=""Version""', 'Type=""Microsoft.PackageManagement.Internal.Utility.Versions.FourPartVersion"">', '<Property', 'Name=""Major""', 'Type=""System.UInt16"">2</Property>', '<Property', 'Name=""Minor""', 'Type=""System.UInt16"">8</Property>', '<Property', 'Name=""Build""', 'Type=""System.UInt16"">5</Property>', '<Property', 'Name=""Revision""', 'Type=""System.UInt16"">208</Property>', '</Property>', '<Property', 'Name=""ProviderPath""', 'Type=""System.String"">C:\\\\Program', 'Files\\\\PackageManagement\\\\ProviderAssemblies\\\\nuget\\\\2.8.5', '.208\\\\Microsoft.PackageManagement.NuGetProvider.dll</Property>', '</Object>', '</Objects>""""""', 'AVAIL_MODULES_PS_STR', '=', '""""""<?xml', 'version=""1.0""', 'encoding=""utf-8""?>', '<Objects>', '<Object', 'Type=""System.Management.Automation.PSCustomObject"">', '<Property', 'Name=""Name""', 'Type=""System.String"">ActOnCmdlets</Property>', '<Property', 'Name=""Description""', 'Type=""System.String"">CData', 'Cmdlets', 'for', 'Act-On</Property>', '</Object>', '<Object', 'Type=""System.Management.Automation.PSCustomObject"">', '<Property', 'Name=""Name""', 'Type=""System.String"">FinancialEdgeNXTCmdlets</Property>', '<Property', 'Name=""Description""', 'Type=""System.String"">CData', 'Cmdlets', 'for', 'Blackbaud', 'Financial', 'Edge', 'NXT</Property>', '</Object>', '<Object', 'Type=""System.Management.Automation.PSCustomObject"">', '<Property', 'Name=""Name""', 'Type=""System.String"">GoogleCMCmdlets</Property>', '<Property', 'Name=""Description""', 'Type=""System.String"">CData', 'Cmdlets', 'for', 'Google', 'Campaign', 'Manager</Property>', '</Object>', '<Object', 'Type=""System.Management.Automation.PSCustomObject"">', '<Property', 'Name=""Name""', 'Type=""System.String"">DHCPMigration</Property>', '<Property', 'Name=""Description""', 'Type=""System.String"">A', 'module', 'to', 'copy', 'various', 'DHCP', 'information', 'from', '1', 'server', 'to', 'another.</Property>', '</Object>', '</Objects>""""""', 'class', 'WinPsgetCase(TestCase,', 'LoaderModuleMockMixin):', '""""""', 'Test', 'cases', 'for', 'salt.modules.win_psget', '""""""', 'def', 'setup_loader_modules(self):', 'return', '{win_psget:', '{}}', 'def', 'test_bootstrap(self):', 'mock_read_ok', '=', 'MagicMock(', 'return_value={', '""pid"":', '78,', '""retcode"":', '0,', '""stderr"":', '"""",', '""stdout"":', 'BOOTSTRAP_PS_STR,', '}', ')', 'with', 'patch.dict(win_psget.__salt__,', '{""cmd.run_all"":', 'mock_read_ok}):', 'self.assertTrue(""NuGet""', 'in', 'win_psget.bootstrap())', 'def', 'test_avail_modules(self):', 'mock_read_ok', '=', 'MagicMock(', 'return_value={', '""pid"":', '78,', '""retcode"":', '0,', '""stderr"":', '"""",', '""stdout"":', 'AVAIL_MODULES_PS_STR,', '}', ')', 'with', 'patch.dict(win_psget.__salt__,', '{""cmd.run_all"":', 'mock_read_ok}):', 'self.assertTrue(""DHCPMigration""', 'in', 'win_psget.avail_modules(False))', 'self.assertTrue(""DHCPMigration""', 'in', 'win_psget.avail_modules(True))', '```']",challenge not surrounded by ''': ,
"""use strict"";

!function() //displayCarouselData()
{
	w3DisplayData(""carousel-repeat"", carouselData);
	w3DisplayData(""cIndicator-repeat"", carouselData);
	
	$(function()
	{
		$("".carousel-indicators li:first"").addClass(""active"");
		$("".carousel-inner .item:first"").addClass(""active"");
	});
}();
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```""use', 'strict"";', '!function()', '//displayCarouselData()', '{', 'w3DisplayData(""carousel-repeat"",', 'carouselData);', 'w3DisplayData(""cIndicator-repeat"",', 'carouselData);', '$(function()', '{', '$("".carousel-indicators', 'li:first"").addClass(""active"");', '$("".carousel-inner', '.item:first"").addClass(""active"");', '});', '}();', '```']",challenge not surrounded by ''': ,
"/**
 * Copyright Notice
 *
 * This is a work of the U.S. Government and is not subject to copyright
 * protection in the United States. Foreign copyrights may apply.
 * 
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package gov.va.oia.terminology.converters.sharedUtils.propertyTypes;

import org.ihtsdo.etypes.EConcept;

/**
 * 
 * {@link ConceptCreationNotificationListener}
 *
 * A callback interface for loaders to use when then need to add things to a concept that 
 * won't be created until later in the conversion process 
 * 
 * @author <a href=""mailto:daniel.armbrust.list@gmail.com"">Dan Armbrust</a>
 */
public interface ConceptCreationNotificationListener
{
	public void conceptCreated(Property property, EConcept concept);
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', 'Copyright', 'Notice', '*', '*', 'This', 'is', 'a', 'work', 'of', 'the', 'U.S.', 'Government', 'and', 'is', 'not', 'subject', 'to', 'copyright', '*', 'protection', 'in', 'the', 'United', 'States.', 'Foreign', 'copyrights', 'may', 'apply.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'gov.va.oia.terminology.converters.sharedUtils.propertyTypes;', 'import', 'org.ihtsdo.etypes.EConcept;', '/**', '*', '*', '{@link', 'ConceptCreationNotificationListener}', '*', '*', 'A', 'callback', 'interface', 'for', 'loaders', 'to', 'use', 'when', 'then', 'need', 'to', 'add', 'things', 'to', 'a', 'concept', 'that', '*', ""won't"", 'be', 'created', 'until', 'later', 'in', 'the', 'conversion', 'process', '*', '*', '@author', '<a', 'href=""mailto:daniel.armbrust.list@gmail.com"">Dan', 'Armbrust</a>', '*/', 'public', 'interface', 'ConceptCreationNotificationListener', '{', 'public', 'void', 'conceptCreated(Property', 'property,', 'EConcept', 'concept);', '}', '```']",challenge not surrounded by ''': ,
"/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.unapec.nomina.controllers;

import edu.unapec.nomina.dao.IRepositorio;
import edu.unapec.nomina.modelos.Departamentos;
import edu.unapec.nomina.modelos.Empleados;
import edu.unapec.nomina.modelos.Nominas;
import edu.unapec.nomina.modelos.Puestos;
import java.util.HashMap;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

/**
 *
 * @author phenom
 */
@Controller
@RequestMapping(value = ""/empleados"")
public class EmpleadoController extends CRUDController<Empleados> {

    IRepositorio<Puestos> repoPuestos;
    IRepositorio<Departamentos> repoDepartamentos;
    IRepositorio<Nominas> repoNominas;

    @Autowired
    public EmpleadoController(IRepositorio<Empleados> repositorio,
            IRepositorio<Puestos> repoPuestos,
            IRepositorio<Departamentos> repoDepartamentos,
            IRepositorio<Nominas> repoNominas) {
        super(repositorio);
        this.repoPuestos = repoPuestos;
        this.repoDepartamentos = repoDepartamentos;
        this.repoNominas = repoNominas;
    }

    @RequestMapping(value = {""/"", ""/listar""})
    public ModelAndView listar() {
        ModelAndView mv = new ModelAndView();
        mv.addObject(""empleados"", repositorio.ObtenerTodos());
        mv.setViewName(""empleados/listar"");
        return mv;
    }

    @RequestMapping(value = ""/guardar"")
    public ModelAndView guardar() {
        ModelAndView mv = new ModelAndView();
        mv.addObject(""empleado"", new Empleados());
        mv.addObject(""puestos"", repoPuestos.ObtenerTodos());
        mv.addObject(""departamentos"", repoDepartamentos.ObtenerTodos());
        mv.addObject(""nominas"", repoNominas.ObtenerTodos());
        mv.setViewName(""empleados/guardar"");
        return mv;
    }

    @RequestMapping(value = ""/guardar"", method = RequestMethod.POST)
    public String guardar(Empleados empleado) {
        repositorio.Guardar(empleado);
        return ""redirect:listar"";
    }

    @RequestMapping(value = ""/editar/{id}"")
    public ModelAndView editar(@PathVariable int id) {
        ModelAndView mv = new ModelAndView();
        mv.addObject(""empleado"", repositorio.ObtenerUno(id));
        mv.addObject(""puestos"", repoPuestos.ObtenerTodos());
        mv.addObject(""departamentos"", repoDepartamentos.ObtenerTodos());
        mv.addObject(""nominas"", repoNominas.ObtenerTodos());
        mv.setViewName(""empleados/editar"");
        return mv;
    }

    @RequestMapping(value = ""/editar"", method = RequestMethod.POST)
    public String editar(Empleados empleados) {
        repositorio.Editar(empleados);
        return ""redirect:listar"";
    }

    @RequestMapping(value = ""/eliminar/{id}"")
    public String eliminar(@PathVariable int id) {
        repositorio.Eliminar(repositorio.ObtenerUno(id));
        return ""redirect:/empleados/listar"";
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'To', 'change', 'this', 'license', 'header,', 'choose', 'License', 'Headers', 'in', 'Project', 'Properties.', '*', 'To', 'change', 'this', 'template', 'file,', 'choose', 'Tools', '|', 'Templates', '*', 'and', 'open', 'the', 'template', 'in', 'the', 'editor.', '*/', 'package', 'edu.unapec.nomina.controllers;', 'import', 'edu.unapec.nomina.dao.IRepositorio;', 'import', 'edu.unapec.nomina.modelos.Departamentos;', 'import', 'edu.unapec.nomina.modelos.Empleados;', 'import', 'edu.unapec.nomina.modelos.Nominas;', 'import', 'edu.unapec.nomina.modelos.Puestos;', 'import', 'java.util.HashMap;', 'import', 'org.springframework.beans.factory.annotation.Autowired;', 'import', 'org.springframework.stereotype.Controller;', 'import', 'org.springframework.validation.BindingResult;', 'import', 'org.springframework.web.bind.annotation.ModelAttribute;', 'import', 'org.springframework.web.bind.annotation.PathVariable;', 'import', 'org.springframework.web.bind.annotation.RequestMapping;', 'import', 'org.springframework.web.bind.annotation.RequestMethod;', 'import', 'org.springframework.web.servlet.ModelAndView;', '/**', '*', '*', '@author', 'phenom', '*/', '@Controller', '@RequestMapping(value', '=', '""/empleados"")', 'public', 'class', 'EmpleadoController', 'extends', 'CRUDController<Empleados>', '{', 'IRepositorio<Puestos>', 'repoPuestos;', 'IRepositorio<Departamentos>', 'repoDepartamentos;', 'IRepositorio<Nominas>', 'repoNominas;', '@Autowired', 'public', 'EmpleadoController(IRepositorio<Empleados>', 'repositorio,', 'IRepositorio<Puestos>', 'repoPuestos,', 'IRepositorio<Departamentos>', 'repoDepartamentos,', 'IRepositorio<Nominas>', 'repoNominas)', '{', 'super(repositorio);', 'this.repoPuestos', '=', 'repoPuestos;', 'this.repoDepartamentos', '=', 'repoDepartamentos;', 'this.repoNominas', '=', 'repoNominas;', '}', '@RequestMapping(value', '=', '{""/"",', '""/listar""})', 'public', 'ModelAndView', 'listar()', '{', 'ModelAndView', 'mv', '=', 'new', 'ModelAndView();', 'mv.addObject(""empleados"",', 'repositorio.ObtenerTodos());', 'mv.setViewName(""empleados/listar"");', 'return', 'mv;', '}', '@RequestMapping(value', '=', '""/guardar"")', 'public', 'ModelAndView', 'guardar()', '{', 'ModelAndView', 'mv', '=', 'new', 'ModelAndView();', 'mv.addObject(""empleado"",', 'new', 'Empleados());', 'mv.addObject(""puestos"",', 'repoPuestos.ObtenerTodos());', 'mv.addObject(""departamentos"",', 'repoDepartamentos.ObtenerTodos());', 'mv.addObject(""nominas"",', 'repoNominas.ObtenerTodos());', 'mv.setViewName(""empleados/guardar"");', 'return', 'mv;', '}', '@RequestMapping(value', '=', '""/guardar"",', 'method', '=', 'RequestMethod.POST)', 'public', 'String', 'guardar(Empleados', 'empleado)', '{', 'repositorio.Guardar(empleado);', 'return', '""redirect:listar"";', '}', '@RequestMapping(value', '=', '""/editar/{id}"")', 'public', 'ModelAndView', 'editar(@PathVariable', 'int', 'id)', '{', 'ModelAndView', 'mv', '=', 'new', 'ModelAndView();', 'mv.addObject(""empleado"",', 'repositorio.ObtenerUno(id));', 'mv.addObject(""puestos"",', 'repoPuestos.ObtenerTodos());', 'mv.addObject(""departamentos"",', 'repoDepartamentos.ObtenerTodos());', 'mv.addObject(""nominas"",', 'repoNominas.ObtenerTodos());', 'mv.setViewName(""empleados/editar"");', 'return', 'mv;', '}', '@RequestMapping(value', '=', '""/editar"",', 'method', '=', 'RequestMethod.POST)', 'public', 'String', 'editar(Empleados', 'empleados)', '{', 'repositorio.Editar(empleados);', 'return', '""redirect:listar"";', '}', '@RequestMapping(value', '=', '""/eliminar/{id}"")', 'public', 'String', 'eliminar(@PathVariable', 'int', 'id)', '{', 'repositorio.Eliminar(repositorio.ObtenerUno(id));', 'return', '""redirect:/empleados/listar"";', '}', '}', '```']",challenge not surrounded by ''': ,
"from django.contrib.auth import authenticate, login
from django.contrib.auth.models import User
from django.shortcuts import redirect, render

from spark.authentication.forms import SignUpForm
from spark.feeds.models import Feed


def signup(request):
    if request.method == 'POST':
        form = SignUpForm(request.POST)
        if not form.is_valid():
            ctx = {'form': form}
            return render(request, 'authentication/signup.html', ctx)
        else:
            username = form.cleaned_data.get('username')
            email = form.cleaned_data.get('email')
            password = form.cleaned_data.get('password')
            User.objects.create_user(username=username, password=password,
                                     email=email)
            user = authenticate(username=username, password=password)
            login(request, user)
            welcome_post = '{0} juntou-se a rede.'.format(
                user.username, user.username)
            feed = Feed(user=user, post=welcome_post)
            feed.save()
            return redirect('/')

    else:
        ctx = {'form': SignUpForm()}
        return render(request, 'authentication/signup.html', ctx)
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```from', 'django.contrib.auth', 'import', 'authenticate,', 'login', 'from', 'django.contrib.auth.models', 'import', 'User', 'from', 'django.shortcuts', 'import', 'redirect,', 'render', 'from', 'spark.authentication.forms', 'import', 'SignUpForm', 'from', 'spark.feeds.models', 'import', 'Feed', 'def', 'signup(request):', 'if', 'request.method', '==', ""'POST':"", 'form', '=', 'SignUpForm(request.POST)', 'if', 'not', 'form.is_valid():', 'ctx', '=', ""{'form':"", 'form}', 'return', 'render(request,', ""'authentication/signup.html',"", 'ctx)', 'else:', 'username', '=', ""form.cleaned_data.get('username')"", 'email', '=', ""form.cleaned_data.get('email')"", 'password', '=', ""form.cleaned_data.get('password')"", 'User.objects.create_user(username=username,', 'password=password,', 'email=email)', 'user', '=', 'authenticate(username=username,', 'password=password)', 'login(request,', 'user)', 'welcome_post', '=', ""'{0}"", 'juntou-se', 'a', ""rede.'.format("", 'user.username,', 'user.username)', 'feed', '=', 'Feed(user=user,', 'post=welcome_post)', 'feed.save()', 'return', ""redirect('/')"", 'else:', 'ctx', '=', ""{'form':"", 'SignUpForm()}', 'return', 'render(request,', ""'authentication/signup.html',"", 'ctx)', '```']",challenge not surrounded by ''': ,
"<!--$Id: env_set_tx_max.html,v 1.1.1.1 2003/11/20 22:14:29 toshok Exp $-->
<!--Copyright 1997-2002 by Sleepycat Software, Inc.-->
<!--All rights reserved.-->
<!--See the file LICENSE for redistribution information.-->
<html>
<head>
<title>Berkeley DB: DbEnv::set_tx_max</title>
<meta name=""description"" content=""Berkeley DB: An embedded database programmatic toolkit."">
<meta name=""keywords"" content=""embedded,database,programmatic,toolkit,b+tree,btree,hash,hashing,transaction,transactions,locking,logging,access method,access methods,java,C,C++"">
</head>
<body bgcolor=white>
<a name=""2""><!--meow--></a>
<table width=""100%""><tr valign=top>
<td>
<h1>DbEnv::set_tx_max</h1>
</td>
<td align=right>
<a href=""../api_cxx/c_index.html""><img src=""../images/api.gif"" alt=""API""></a><a href=""../reftoc.html""><img src=""../images/ref.gif"" alt=""Ref""></a>
</td></tr></table>
<hr size=1 noshade>
<tt>
<h3><pre>
#include &lt;db_cxx.h&gt;
<p>
int
DbEnv::set_tx_max(u_int32_t tx_max);
</pre></h3>
<h1>Description</h1>
<p>Set the maximum number of active transactions that are supported by the
environment.  This value bounds the size of backing shared memory regions.
Note that child transactions must be counted as active until their
ultimate parent commits or aborts.
<p>When there are more than the specified number of concurrent transactions,
calls to <a href=""../api_cxx/txn_begin.html"">DbEnv::txn_begin</a> will fail (until some active transactions
complete).  If no value is specified, a default value of 20 is used.
<p>The DbEnv::set_tx_max method configures a database environment, not only operations
performed using the specified <a href=""../api_cxx/env_class.html"">DbEnv</a> handle.
<p>The DbEnv::set_tx_max interface may not be called after the <a href=""../api_cxx/env_open.html"">DbEnv::open</a>
interface is called.
If the database environment already exists when
<a href=""../api_cxx/env_open.html"">DbEnv::open</a> is called, the information specified to DbEnv::set_tx_max
will be ignored.
<p>The DbEnv::set_tx_max method either returns a non-zero error value or throws an exception that
encapsulates a non-zero error value on failure, and returns 0 on success.
<p>The database environment's maximum number of active transactions may also be set using the environment's
<b>DB_CONFIG</b> file.  The syntax of the entry in that file is a
single line with the string ""set_tx_max"", one or more whitespace characters,
and the number of transactions.  Because the <b>DB_CONFIG</b> file is read when the database
environment is opened, it will silently overrule configuration done
before that time.
<h1>Errors</h1>
<p>The DbEnv::set_tx_max method may fail and throw an exception or return a non-zero error for the following conditions:
<p><dl compact>
<p><dt>EINVAL<dd>An invalid flag value or parameter was specified.
<p>Called after <a href=""../api_cxx/env_open.html"">DbEnv::open</a> was called.
</dl>
<p>The DbEnv::set_tx_max method may fail and throw an exception or return a non-zero error for errors specified for other Berkeley DB and C library or system methods.
If a catastrophic error has occurred, the DbEnv::set_tx_max method may fail and
either return <a href=""../ref/program/errorret.html#DB_RUNRECOVERY"">DB_RUNRECOVERY</a> or throw a
<a href=""../api_cxx/runrec_class.html"">DbRunRecoveryException</a>,
in which case all subsequent Berkeley DB calls will fail in the same way.
<h1>Class</h1>
<a href=""../api_cxx/env_class.html"">DbEnv</a>, <a href=""../api_cxx/txn_class.html"">DbTxn</a>
<h1>See Also</h1>
<a href=""../api_cxx/txn_list.html"">Transaction Subsystem and Related Methods</a>
</tt>
<table width=""100%""><tr><td><br></td><td align=right>
<a href=""../api_cxx/c_index.html""><img src=""../images/api.gif"" alt=""API""></a><a href=""../reftoc.html""><img src=""../images/ref.gif"" alt=""Ref""></a>
</td></tr></table>
<p><font size=1><a href=""http://www.sleepycat.com"">Copyright Sleepycat Software</a></font>
</body>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!--$Id:', 'env_set_tx_max.html,v', '1.1.1.1', '2003/11/20', '22:14:29', 'toshok', 'Exp', '$-->', '<!--Copyright', '1997-2002', 'by', 'Sleepycat', 'Software,', 'Inc.-->', '<!--All', 'rights', 'reserved.-->', '<!--See', 'the', 'file', 'LICENSE', 'for', 'redistribution', 'information.-->', '<html>', '<head>', '<title>Berkeley', 'DB:', 'DbEnv::set_tx_max</title>', '<meta', 'name=""description""', 'content=""Berkeley', 'DB:', 'An', 'embedded', 'database', 'programmatic', 'toolkit."">', '<meta', 'name=""keywords""', 'content=""embedded,database,programmatic,toolkit,b+tree,btree,hash,hashing,transaction,transactions,locking,logging,access', 'method,access', 'methods,java,C,C++"">', '</head>', '<body', 'bgcolor=white>', '<a', 'name=""2""><!--meow--></a>', '<table', 'width=""100%""><tr', 'valign=top>', '<td>', '<h1>DbEnv::set_tx_max</h1>', '</td>', '<td', 'align=right>', '<a', 'href=""../api_cxx/c_index.html""><img', 'src=""../images/api.gif""', 'alt=""API""></a><a', 'href=""../reftoc.html""><img', 'src=""../images/ref.gif""', 'alt=""Ref""></a>', '</td></tr></table>', '<hr', 'size=1', 'noshade>', '<tt>', '<h3><pre>', '#include', '&lt;db_cxx.h&gt;', '<p>', 'int', 'DbEnv::set_tx_max(u_int32_t', 'tx_max);', '</pre></h3>', '<h1>Description</h1>', '<p>Set', 'the', 'maximum', 'number', 'of', 'active', 'transactions', 'that', 'are', 'supported', 'by', 'the', 'environment.', 'This', 'value', 'bounds', 'the', 'size', 'of', 'backing', 'shared', 'memory', 'regions.', 'Note', 'that', 'child', 'transactions', 'must', 'be', 'counted', 'as', 'active', 'until', 'their', 'ultimate', 'parent', 'commits', 'or', 'aborts.', '<p>When', 'there', 'are', 'more', 'than', 'the', 'specified', 'number', 'of', 'concurrent', 'transactions,', 'calls', 'to', '<a', 'href=""../api_cxx/txn_begin.html"">DbEnv::txn_begin</a>', 'will', 'fail', '(until', 'some', 'active', 'transactions', 'complete).', 'If', 'no', 'value', 'is', 'specified,', 'a', 'default', 'value', 'of', '20', 'is', 'used.', '<p>The', 'DbEnv::set_tx_max', 'method', 'configures', 'a', 'database', 'environment,', 'not', 'only', 'operations', 'performed', 'using', 'the', 'specified', '<a', 'href=""../api_cxx/env_class.html"">DbEnv</a>', 'handle.', '<p>The', 'DbEnv::set_tx_max', 'interface', 'may', 'not', 'be', 'called', 'after', 'the', '<a', 'href=""../api_cxx/env_open.html"">DbEnv::open</a>', 'interface', 'is', 'called.', 'If', 'the', 'database', 'environment', 'already', 'exists', 'when', '<a', 'href=""../api_cxx/env_open.html"">DbEnv::open</a>', 'is', 'called,', 'the', 'information', 'specified', 'to', 'DbEnv::set_tx_max', 'will', 'be', 'ignored.', '<p>The', 'DbEnv::set_tx_max', 'method', 'either', 'returns', 'a', 'non-zero', 'error', 'value', 'or', 'throws', 'an', 'exception', 'that', 'encapsulates', 'a', 'non-zero', 'error', 'value', 'on', 'failure,', 'and', 'returns', '0', 'on', 'success.', '<p>The', 'database', ""environment's"", 'maximum', 'number', 'of', 'active', 'transactions', 'may', 'also', 'be', 'set', 'using', 'the', ""environment's"", '<b>DB_CONFIG</b>', 'file.', 'The', 'syntax', 'of', 'the', 'entry', 'in', 'that', 'file', 'is', 'a', 'single', 'line', 'with', 'the', 'string', '""set_tx_max"",', 'one', 'or', 'more', 'whitespace', 'characters,', 'and', 'the', 'number', 'of', 'transactions.', 'Because', 'the', '<b>DB_CONFIG</b>', 'file', 'is', 'read', 'when', 'the', 'database', 'environment', 'is', 'opened,', 'it', 'will', 'silently', 'overrule', 'configuration', 'done', 'before', 'that', 'time.', '<h1>Errors</h1>', '<p>The', 'DbEnv::set_tx_max', 'method', 'may', 'fail', 'and', 'throw', 'an', 'exception', 'or', 'return', 'a', 'non-zero', 'error', 'for', 'the', 'following', 'conditions:', '<p><dl', 'compact>', '<p><dt>EINVAL<dd>An', 'invalid', 'flag', 'value', 'or', 'parameter', 'was', 'specified.', '<p>Called', 'after', '<a', 'href=""../api_cxx/env_open.html"">DbEnv::open</a>', 'was', 'called.', '</dl>', '<p>The', 'DbEnv::set_tx_max', 'method', 'may', 'fail', 'and', 'throw', 'an', 'exception', 'or', 'return', 'a', 'non-zero', 'error', 'for', 'errors', 'specified', 'for', 'other', 'Berkeley', 'DB', 'and', 'C', 'library', 'or', 'system', 'methods.', 'If', 'a', 'catastrophic', 'error', 'has', 'occurred,', 'the', 'DbEnv::set_tx_max', 'method', 'may', 'fail', 'and', 'either', 'return', '<a', 'href=""../ref/program/errorret.html#DB_RUNRECOVERY"">DB_RUNRECOVERY</a>', 'or', 'throw', 'a', '<a', 'href=""../api_cxx/runrec_class.html"">DbRunRecoveryException</a>,', 'in', 'which', 'case', 'all', 'subsequent', 'Berkeley', 'DB', 'calls', 'will', 'fail', 'in', 'the', 'same', 'way.', '<h1>Class</h1>', '<a', 'href=""../api_cxx/env_class.html"">DbEnv</a>,', '<a', 'href=""../api_cxx/txn_class.html"">DbTxn</a>', '<h1>See', 'Also</h1>', '<a', 'href=""../api_cxx/txn_list.html"">Transaction', 'Subsystem', 'and', 'Related', 'Methods</a>', '</tt>', '<table', 'width=""100%""><tr><td><br></td><td', 'align=right>', '<a', 'href=""../api_cxx/c_index.html""><img', 'src=""../images/api.gif""', 'alt=""API""></a><a', 'href=""../reftoc.html""><img', 'src=""../images/ref.gif""', 'alt=""Ref""></a>', '</td></tr></table>', '<p><font', 'size=1><a', 'href=""http://www.sleepycat.com"">Copyright', 'Sleepycat', 'Software</a></font>', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"<html>
<head>
<title></title>
</head>
<body text=""#000000"" link=""#0000ff"" vlink=""#551a8b"" alink=""#ff0000"" bgcolor=""#c0c0c0"">

<p>/PROG_HDR/

<br wp=""br1""><br wp=""br2"">
<p>Program Description:

<br wp=""br1""><br wp=""br2"">
<p>This program is used to display the usage for a range of group series departures.

<br wp=""br1""><br wp=""br2"">
<p>/SCREEN1/

<br wp=""br1""><br wp=""br2"">
<p>Program Operation:

<br wp=""br1""><br wp=""br2"">
<p>Enter a group series tour code and a starting departure date. All tours departures will display in
departure date order.

<br wp=""br1""><br wp=""br2"">
<p>	Note: This program is very similar to the tour availability display (which can also be used). The difference is
this display also gives you the tour status at each departure, so cancelled or blocked departures will
stand out.
</body>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<html>', '<head>', '<title></title>', '</head>', '<body', 'text=""#000000""', 'link=""#0000ff""', 'vlink=""#551a8b""', 'alink=""#ff0000""', 'bgcolor=""#c0c0c0"">', '<p>/PROG_HDR/', '<br', 'wp=""br1""><br', 'wp=""br2"">', '<p>Program', 'Description:', '<br', 'wp=""br1""><br', 'wp=""br2"">', '<p>This', 'program', 'is', 'used', 'to', 'display', 'the', 'usage', 'for', 'a', 'range', 'of', 'group', 'series', 'departures.', '<br', 'wp=""br1""><br', 'wp=""br2"">', '<p>/SCREEN1/', '<br', 'wp=""br1""><br', 'wp=""br2"">', '<p>Program', 'Operation:', '<br', 'wp=""br1""><br', 'wp=""br2"">', '<p>Enter', 'a', 'group', 'series', 'tour', 'code', 'and', 'a', 'starting', 'departure', 'date.', 'All', 'tours', 'departures', 'will', 'display', 'in', 'departure', 'date', 'order.', '<br', 'wp=""br1""><br', 'wp=""br2"">', '<p>', 'Note:', 'This', 'program', 'is', 'very', 'similar', 'to', 'the', 'tour', 'availability', 'display', '(which', 'can', 'also', 'be', 'used).', 'The', 'difference', 'is', 'this', 'display', 'also', 'gives', 'you', 'the', 'tour', 'status', 'at', 'each', 'departure,', 'so', 'cancelled', 'or', 'blocked', 'departures', 'will', 'stand', 'out.', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"#!/bin/sh
DEBROOT=""./debian-pkg/raspyplayer-lite""
SRCROOT=""../src""
ARTROOT=""../art""

echo ""Creating Debian's package...""
nano $DEBROOT/DEBIAN/control
cp $SRCROOT/raspyplayer-lite.py $DEBROOT/usr/bin/raspyplayer-lite
cp $ARTROOT/raspyplayer-lite.png $DEBROOT/usr/share/pixmaps/raspyplayer-lite.png
cp $SRCROOT/raspyplayer-lite.desktop $DEBROOT/usr/share/applications/raspyplayer-lite.desktop
chmod a+x $DEBROOT/usr/bin/raspyplayer-lite
dpkg-deb -b debian-pkg/raspyplayer-lite

echo ""Done !!!""
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/bin/sh', 'DEBROOT=""./debian-pkg/raspyplayer-lite""', 'SRCROOT=""../src""', 'ARTROOT=""../art""', 'echo', '""Creating', ""Debian's"", 'package...""', 'nano', '$DEBROOT/DEBIAN/control', 'cp', '$SRCROOT/raspyplayer-lite.py', '$DEBROOT/usr/bin/raspyplayer-lite', 'cp', '$ARTROOT/raspyplayer-lite.png', '$DEBROOT/usr/share/pixmaps/raspyplayer-lite.png', 'cp', '$SRCROOT/raspyplayer-lite.desktop', '$DEBROOT/usr/share/applications/raspyplayer-lite.desktop', 'chmod', 'a+x', '$DEBROOT/usr/bin/raspyplayer-lite', 'dpkg-deb', '-b', 'debian-pkg/raspyplayer-lite', 'echo', '""Done', '!!!""', '```']",challenge not surrounded by ''': ,
"--
-- Copyright 2010-2015 Axel Fontaine
--
-- Licensed under the Apache License, Version 2.0 (the ""License"");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--         http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an ""AS IS"" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

-- State transition function:
CREATE  FUNCTION create_select(acc text, instr text) RETURNS text AS $$
  BEGIN
    IF acc IS NULL OR acc = '' THEN
      RETURN replace(instr,'.','_') ;
    ELSE
      RETURN acc || ', ' || replace(instr,'.','_') ;
    END IF;
  END;
$$ LANGUAGE plpgsql;

-- Aggregate function
CREATE AGGREGATE textcat_all(
  basetype    = text,
  sfunc       = create_select,
  stype       = text,
  initcond    = ''
);","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```--', '--', 'Copyright', '2010-2015', 'Axel', 'Fontaine', '--', '--', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '--', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '--', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '--', '--', 'http://www.apache.org/licenses/LICENSE-2.0', '--', '--', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '--', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '--', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '--', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '--', 'limitations', 'under', 'the', 'License.', '--', '--', 'State', 'transition', 'function:', 'CREATE', 'FUNCTION', 'create_select(acc', 'text,', 'instr', 'text)', 'RETURNS', 'text', 'AS', '$$', 'BEGIN', 'IF', 'acc', 'IS', 'NULL', 'OR', 'acc', '=', ""''"", 'THEN', 'RETURN', ""replace(instr,'.','_')"", ';', 'ELSE', 'RETURN', 'acc', '||', ""',"", ""'"", '||', ""replace(instr,'.','_')"", ';', 'END', 'IF;', 'END;', '$$', 'LANGUAGE', 'plpgsql;', '--', 'Aggregate', 'function', 'CREATE', 'AGGREGATE', 'textcat_all(', 'basetype', '=', 'text,', 'sfunc', '=', 'create_select,', 'stype', '=', 'text,', 'initcond', '=', ""''"", ');```']",challenge not surrounded by ''': ,
"var mongoose = require('mongoose'),
    Schema = mongoose.Schema;

var userProfileSchema = new Schema({
  userId: Schema.ObjectId,
  email: {
    type: String,
    required: true,
    unique: true
  },
  fullname: String,
  username: {
    type: String,
    required: true,
    unique: true
  },
  approved: {
    type: Boolean,
    default: true
  },
  role: {
    type: Schema.ObjectId,
    ref: 'userrole',
    default: ""558c1e12f947a1a8d63b1396""
  },
  image: String,
  thumbnail: String,
  company: String, //Company name
  bio: String,
  title: String,
  city: String,
  state: String,
  country: String,
  avatar: Buffer,
  profilepicture: Buffer,
  github_user: String,
  unsubscribed: Boolean,
  branch_firstaccess: {
    type: Boolean,
    default: false
  },
  playground_firstaccess: {
    type: Boolean,
    default: false
  },
  linked_to_github: {
    type: Boolean,
    default: false
  },
  facebook: String,
  twitter: String,
  website: String,
  createdate: {
    type: Date,
    default: Date.now
  },
  createdate_num: Number,
  lastvisit: Date,
  lastvisit_num: Number,
  reset_hash: String,
  reset_hash_time: Number
});

module.exports = mongoose.model('userprofiles', userProfileSchema);
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```var', 'mongoose', '=', ""require('mongoose'),"", 'Schema', '=', 'mongoose.Schema;', 'var', 'userProfileSchema', '=', 'new', 'Schema({', 'userId:', 'Schema.ObjectId,', 'email:', '{', 'type:', 'String,', 'required:', 'true,', 'unique:', 'true', '},', 'fullname:', 'String,', 'username:', '{', 'type:', 'String,', 'required:', 'true,', 'unique:', 'true', '},', 'approved:', '{', 'type:', 'Boolean,', 'default:', 'true', '},', 'role:', '{', 'type:', 'Schema.ObjectId,', 'ref:', ""'userrole',"", 'default:', '""558c1e12f947a1a8d63b1396""', '},', 'image:', 'String,', 'thumbnail:', 'String,', 'company:', 'String,', '//Company', 'name', 'bio:', 'String,', 'title:', 'String,', 'city:', 'String,', 'state:', 'String,', 'country:', 'String,', 'avatar:', 'Buffer,', 'profilepicture:', 'Buffer,', 'github_user:', 'String,', 'unsubscribed:', 'Boolean,', 'branch_firstaccess:', '{', 'type:', 'Boolean,', 'default:', 'false', '},', 'playground_firstaccess:', '{', 'type:', 'Boolean,', 'default:', 'false', '},', 'linked_to_github:', '{', 'type:', 'Boolean,', 'default:', 'false', '},', 'facebook:', 'String,', 'twitter:', 'String,', 'website:', 'String,', 'createdate:', '{', 'type:', 'Date,', 'default:', 'Date.now', '},', 'createdate_num:', 'Number,', 'lastvisit:', 'Date,', 'lastvisit_num:', 'Number,', 'reset_hash:', 'String,', 'reset_hash_time:', 'Number', '});', 'module.exports', '=', ""mongoose.model('userprofiles',"", 'userProfileSchema);', '```']",challenge not surrounded by ''': ,
"package models;

import modules.preloader.DatabasePreloader;
import utils.RandomUtils;
import utils.SimpleQuery;

import javax.persistence.*;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.concurrent.ThreadLocalRandom;

import static org.apache.commons.lang3.RandomStringUtils.randomAlphabetic;
import static org.apache.commons.lang3.text.WordUtils.capitalizeFully;

@Entity
@DiscriminatorValue(""conversation"")
public class ConversationGroup extends Group {
    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(
            name = ""conversation_members"",
            joinColumns = {@JoinColumn(name = ""group_id"")},
            inverseJoinColumns = {@JoinColumn(name = ""person_id"")}
    )
    private List<Person> members = new ArrayList<>();

    @Override
    public List<Person> getMembers() {
        return members;
    }

    static {
        DatabasePreloader.addTest((em -> {
            for (int i = 0; i < 100; i++) {
                ConversationGroup group = new ConversationGroup();
                Random randomLength = new Random();
                group.setName(capitalizeFully(randomAlphabetic(randomLength.nextInt(10) + 4)));
                group.setDescription(capitalizeFully(randomAlphabetic(randomLength.nextInt(15) + 5)));
                List<Person> people = (new SimpleQuery<>(em, Person.class)).getResultList();
                int random = new Random().nextInt(people.size() - 1);
                ThreadLocalRandom.current().ints(0, people.size())
                        .distinct().limit(random + 1).forEach(index -> group.members.add(people.get(index)));
                FileMeta pic = FileManager.createFile(group.getName() + "".jpg"", ""image/jpeg"", em);
                try {
                    RandomUtils.randomImage(200, 800, FileManager.getFile(pic));
                } catch (IOException e) {
                    assert false;
                }
                group.setPhoto(pic);
                group.getFiles().add(pic);
                em.persist(group);
            }
        }), 30);
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'models;', 'import', 'modules.preloader.DatabasePreloader;', 'import', 'utils.RandomUtils;', 'import', 'utils.SimpleQuery;', 'import', 'javax.persistence.*;', 'import', 'java.io.IOException;', 'import', 'java.util.ArrayList;', 'import', 'java.util.List;', 'import', 'java.util.Random;', 'import', 'java.util.concurrent.ThreadLocalRandom;', 'import', 'static', 'org.apache.commons.lang3.RandomStringUtils.randomAlphabetic;', 'import', 'static', 'org.apache.commons.lang3.text.WordUtils.capitalizeFully;', '@Entity', '@DiscriminatorValue(""conversation"")', 'public', 'class', 'ConversationGroup', 'extends', 'Group', '{', '@ManyToMany(fetch', '=', 'FetchType.LAZY)', '@JoinTable(', 'name', '=', '""conversation_members"",', 'joinColumns', '=', '{@JoinColumn(name', '=', '""group_id"")},', 'inverseJoinColumns', '=', '{@JoinColumn(name', '=', '""person_id"")}', ')', 'private', 'List<Person>', 'members', '=', 'new', 'ArrayList<>();', '@Override', 'public', 'List<Person>', 'getMembers()', '{', 'return', 'members;', '}', 'static', '{', 'DatabasePreloader.addTest((em', '->', '{', 'for', '(int', 'i', '=', '0;', 'i', '<', '100;', 'i++)', '{', 'ConversationGroup', 'group', '=', 'new', 'ConversationGroup();', 'Random', 'randomLength', '=', 'new', 'Random();', 'group.setName(capitalizeFully(randomAlphabetic(randomLength.nextInt(10)', '+', '4)));', 'group.setDescription(capitalizeFully(randomAlphabetic(randomLength.nextInt(15)', '+', '5)));', 'List<Person>', 'people', '=', '(new', 'SimpleQuery<>(em,', 'Person.class)).getResultList();', 'int', 'random', '=', 'new', 'Random().nextInt(people.size()', '-', '1);', 'ThreadLocalRandom.current().ints(0,', 'people.size())', '.distinct().limit(random', '+', '1).forEach(index', '->', 'group.members.add(people.get(index)));', 'FileMeta', 'pic', '=', 'FileManager.createFile(group.getName()', '+', '"".jpg"",', '""image/jpeg"",', 'em);', 'try', '{', 'RandomUtils.randomImage(200,', '800,', 'FileManager.getFile(pic));', '}', 'catch', '(IOException', 'e)', '{', 'assert', 'false;', '}', 'group.setPhoto(pic);', 'group.getFiles().add(pic);', 'em.persist(group);', '}', '}),', '30);', '}', '}', '```']",challenge not surrounded by ''': ,
"#!/usr/bin/env python3

########################################################################
#
# Restart TBB recording on a bunch of stations
#
########################################################################

import argparse
import logging
import time
import subprocess
import logging
from lofar.mac.tbb.tbb_config import supported_modes, lcurun_command, tbb_command
from lofar.common.lcu_utils import translate_user_station_string_into_station_list, stationname2hostname


def restart_tbb_recording(stations):
    stations = translate_user_station_string_into_station_list(stations)
    station_hostname_csv_string = ','.join(stationname2hostname(s) for s in stations)

    logging.info(""Restarting TBB recording on stations %s"", stations)

    relay = lcurun_command + [station_hostname_csv_string]
    cmd = relay + [tbb_command, ""--record""]
    logging.info(""Executing %s"" % "" "".join(cmd))
    subprocess.check_call(cmd)
    time.sleep(2)

def parse_args():
    parser = argparse.ArgumentParser(""This script will restart TBB recording on a bunch of stations."")
    parser.add_argument(""-s"", ""--stations"", dest=""stations"", help=""comma-separated list of station LCUs (e.g. cs030c,cs031c; also accepts lcurun aliases like 'today', 'nl', ...)"", default=None)
    return parser.parse_args()

def main():
    args = parse_args()
    restart_tbb_recording(args.stations)

if __name__ == '__main__':
    logging.basicConfig(format='%(asctime)s %(levelname)s %(message)s', level=logging.INFO)
    main()","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/usr/bin/env', 'python3', '########################################################################', '#', '#', 'Restart', 'TBB', 'recording', 'on', 'a', 'bunch', 'of', 'stations', '#', '########################################################################', 'import', 'argparse', 'import', 'logging', 'import', 'time', 'import', 'subprocess', 'import', 'logging', 'from', 'lofar.mac.tbb.tbb_config', 'import', 'supported_modes,', 'lcurun_command,', 'tbb_command', 'from', 'lofar.common.lcu_utils', 'import', 'translate_user_station_string_into_station_list,', 'stationname2hostname', 'def', 'restart_tbb_recording(stations):', 'stations', '=', 'translate_user_station_string_into_station_list(stations)', 'station_hostname_csv_string', '=', ""','.join(stationname2hostname(s)"", 'for', 's', 'in', 'stations)', 'logging.info(""Restarting', 'TBB', 'recording', 'on', 'stations', '%s"",', 'stations)', 'relay', '=', 'lcurun_command', '+', '[station_hostname_csv_string]', 'cmd', '=', 'relay', '+', '[tbb_command,', '""--record""]', 'logging.info(""Executing', '%s""', '%', '""', '"".join(cmd))', 'subprocess.check_call(cmd)', 'time.sleep(2)', 'def', 'parse_args():', 'parser', '=', 'argparse.ArgumentParser(""This', 'script', 'will', 'restart', 'TBB', 'recording', 'on', 'a', 'bunch', 'of', 'stations."")', 'parser.add_argument(""-s"",', '""--stations"",', 'dest=""stations"",', 'help=""comma-separated', 'list', 'of', 'station', 'LCUs', '(e.g.', 'cs030c,cs031c;', 'also', 'accepts', 'lcurun', 'aliases', 'like', ""'today',"", ""'nl',"", '...)"",', 'default=None)', 'return', 'parser.parse_args()', 'def', 'main():', 'args', '=', 'parse_args()', 'restart_tbb_recording(args.stations)', 'if', '__name__', '==', ""'__main__':"", ""logging.basicConfig(format='%(asctime)s"", '%(levelname)s', ""%(message)s',"", 'level=logging.INFO)', 'main()```']",challenge not surrounded by ''': ,
"package org.aries.util.collection;

import java.util.Map;


public class MapUtil {

	public static <K, V> void replaceElements(Map<K, V> destinationMap, Map<K, V> sourceMap) {
		if (destinationMap != null && sourceMap != null) {
			destinationMap.clear();
			destinationMap.putAll(sourceMap);
		}
	}
	
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'org.aries.util.collection;', 'import', 'java.util.Map;', 'public', 'class', 'MapUtil', '{', 'public', 'static', '<K,', 'V>', 'void', 'replaceElements(Map<K,', 'V>', 'destinationMap,', 'Map<K,', 'V>', 'sourceMap)', '{', 'if', '(destinationMap', '!=', 'null', '&&', 'sourceMap', '!=', 'null)', '{', 'destinationMap.clear();', 'destinationMap.putAll(sourceMap);', '}', '}', '}', '```']",challenge not surrounded by ''': ,
"package com.one.action_user;

import java.io.IOException;
import java.util.ArrayList;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.one.dao.UserDao;
import com.one.vo.User;

@WebServlet(""/SearchUserAction"")
public class SearchUserAction extends HttpServlet {
	private static final long serialVersionUID = 1L;
	private UserDao userDao = new UserDao();

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		HttpSession session = request.getSession();
		String uname = (String) session.getAttribute(""uname"");
		String uunm = (String) session.getAttribute(""uunm"");
		String ustate = (String) session.getAttribute(""ustate"");
		if ((int)session.getAttribute(""state_u"") == 0) {
			uname = request.getParameter(""uname"");
			uunm = request.getParameter(""uunm"");
			ustate = request.getParameter(""ustate"");
		}
		session.setAttribute(""state_u"", 0);
		ArrayList<User> list = new ArrayList<>();
		list = userDao.select(uname, uunm, Integer.parseInt(ustate));
		session.setAttribute(""uname"", uname);
		session.setAttribute(""uunm"", uunm);
		session.setAttribute(""ustate"", ustate);
		session.setAttribute(""userList"", list);
		session.setAttribute(""state_s"", 0);
		session.setAttribute(""selectPage"", 1);
		response.sendRedirect(""SelectPageAction"");
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		doGet(request, response);
	}

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.one.action_user;', 'import', 'java.io.IOException;', 'import', 'java.util.ArrayList;', 'import', 'javax.servlet.ServletException;', 'import', 'javax.servlet.annotation.WebServlet;', 'import', 'javax.servlet.http.HttpServlet;', 'import', 'javax.servlet.http.HttpServletRequest;', 'import', 'javax.servlet.http.HttpServletResponse;', 'import', 'javax.servlet.http.HttpSession;', 'import', 'com.one.dao.UserDao;', 'import', 'com.one.vo.User;', '@WebServlet(""/SearchUserAction"")', 'public', 'class', 'SearchUserAction', 'extends', 'HttpServlet', '{', 'private', 'static', 'final', 'long', 'serialVersionUID', '=', '1L;', 'private', 'UserDao', 'userDao', '=', 'new', 'UserDao();', 'protected', 'void', 'doGet(HttpServletRequest', 'request,', 'HttpServletResponse', 'response)', 'throws', 'ServletException,', 'IOException', '{', 'HttpSession', 'session', '=', 'request.getSession();', 'String', 'uname', '=', '(String)', 'session.getAttribute(""uname"");', 'String', 'uunm', '=', '(String)', 'session.getAttribute(""uunm"");', 'String', 'ustate', '=', '(String)', 'session.getAttribute(""ustate"");', 'if', '((int)session.getAttribute(""state_u"")', '==', '0)', '{', 'uname', '=', 'request.getParameter(""uname"");', 'uunm', '=', 'request.getParameter(""uunm"");', 'ustate', '=', 'request.getParameter(""ustate"");', '}', 'session.setAttribute(""state_u"",', '0);', 'ArrayList<User>', 'list', '=', 'new', 'ArrayList<>();', 'list', '=', 'userDao.select(uname,', 'uunm,', 'Integer.parseInt(ustate));', 'session.setAttribute(""uname"",', 'uname);', 'session.setAttribute(""uunm"",', 'uunm);', 'session.setAttribute(""ustate"",', 'ustate);', 'session.setAttribute(""userList"",', 'list);', 'session.setAttribute(""state_s"",', '0);', 'session.setAttribute(""selectPage"",', '1);', 'response.sendRedirect(""SelectPageAction"");', '}', 'protected', 'void', 'doPost(HttpServletRequest', 'request,', 'HttpServletResponse', 'response)', 'throws', 'ServletException,', 'IOException', '{', 'doGet(request,', 'response);', '}', '}', '```']",challenge not surrounded by ''': ,
"//=================================================================================================
/*!
//  \file src/mathtest/smatsvecmult/LCaVCa.cpp
//  \brief Source file for the LCaVCa sparse matrix/sparse vector multiplication math test
//
//  Copyright (C) 2013 Klaus Iglberger - All Rights Reserved
//
//  This file is part of the Blaze library. You can redistribute it and/or modify it under
//  the terms of the New (Revised) BSD License. Redistribution and use in source and binary
//  forms, with or without modification, are permitted provided that the following conditions
//  are met:
//
//  1. Redistributions of source code must retain the above copyright notice, this list of
//     conditions and the following disclaimer.
//  2. Redistributions in binary form must reproduce the above copyright notice, this list
//     of conditions and the following disclaimer in the documentation and/or other materials
//     provided with the distribution.
//  3. Neither the names of the Blaze development group nor the names of its contributors
//     may be used to endorse or promote products derived from this software without specific
//     prior written permission.
//
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" AND ANY
//  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
//  SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
//  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
//  TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
//  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
//  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
//  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
//  DAMAGE.
*/
//=================================================================================================


//*************************************************************************************************
// Includes
//*************************************************************************************************

#include <cstdlib>
#include <iostream>
#include <blaze/math/CompressedMatrix.h>
#include <blaze/math/CompressedVector.h>
#include <blaze/math/LowerMatrix.h>
#include <blazetest/mathtest/Creator.h>
#include <blazetest/mathtest/smatsvecmult/OperationTest.h>
#include <blazetest/system/MathTest.h>


//=================================================================================================
//
//  MAIN FUNCTION
//
//=================================================================================================

//*************************************************************************************************
int main()
{
   std::cout << ""   Running 'LCaVCa'..."" << std::endl;

   using blazetest::mathtest::TypeA;

   try
   {
      // Matrix type definitions
      typedef blaze::LowerMatrix< blaze::CompressedMatrix<TypeA> >  LCa;
      typedef blaze::CompressedVector<TypeA>                        VCa;

      // Creator type definitions
      typedef blazetest::Creator<LCa>  CLCa;
      typedef blazetest::Creator<VCa>  CVCa;

      // Running tests with small matrices and vectors
      for( size_t i=0UL; i<=6UL; ++i ) {
         for( size_t j=0UL; j<=LCa::maxNonZeros( i ); ++j ) {
            for( size_t k=0UL; k<=i; ++k ) {
               RUN_SMATSVECMULT_OPERATION_TEST( CLCa( i, j ), CVCa( i, k ) );
            }
         }
      }

      // Running tests with large matrices and vectors
      RUN_SMATSVECMULT_OPERATION_TEST( CLCa(  67UL,  7UL ), CVCa(  67UL,  7UL ) );
      RUN_SMATSVECMULT_OPERATION_TEST( CLCa( 127UL, 13UL ), CVCa( 127UL, 13UL ) );
      RUN_SMATSVECMULT_OPERATION_TEST( CLCa(  64UL,  8UL ), CVCa(  64UL,  8UL ) );
      RUN_SMATSVECMULT_OPERATION_TEST( CLCa( 128UL, 16UL ), CVCa( 128UL, 16UL ) );
   }
   catch( std::exception& ex ) {
      std::cerr << ""\n\n ERROR DETECTED during sparse matrix/sparse vector multiplication:\n""
                << ex.what() << ""\n"";
      return EXIT_FAILURE;
   }

   return EXIT_SUCCESS;
}
//*************************************************************************************************
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//=================================================================================================', '/*!', '//', '\\file', 'src/mathtest/smatsvecmult/LCaVCa.cpp', '//', '\\brief', 'Source', 'file', 'for', 'the', 'LCaVCa', 'sparse', 'matrix/sparse', 'vector', 'multiplication', 'math', 'test', '//', '//', 'Copyright', '(C)', '2013', 'Klaus', 'Iglberger', '-', 'All', 'Rights', 'Reserved', '//', '//', 'This', 'file', 'is', 'part', 'of', 'the', 'Blaze', 'library.', 'You', 'can', 'redistribute', 'it', 'and/or', 'modify', 'it', 'under', '//', 'the', 'terms', 'of', 'the', 'New', '(Revised)', 'BSD', 'License.', 'Redistribution', 'and', 'use', 'in', 'source', 'and', 'binary', '//', 'forms,', 'with', 'or', 'without', 'modification,', 'are', 'permitted', 'provided', 'that', 'the', 'following', 'conditions', '//', 'are', 'met:', '//', '//', '1.', 'Redistributions', 'of', 'source', 'code', 'must', 'retain', 'the', 'above', 'copyright', 'notice,', 'this', 'list', 'of', '//', 'conditions', 'and', 'the', 'following', 'disclaimer.', '//', '2.', 'Redistributions', 'in', 'binary', 'form', 'must', 'reproduce', 'the', 'above', 'copyright', 'notice,', 'this', 'list', '//', 'of', 'conditions', 'and', 'the', 'following', 'disclaimer', 'in', 'the', 'documentation', 'and/or', 'other', 'materials', '//', 'provided', 'with', 'the', 'distribution.', '//', '3.', 'Neither', 'the', 'names', 'of', 'the', 'Blaze', 'development', 'group', 'nor', 'the', 'names', 'of', 'its', 'contributors', '//', 'may', 'be', 'used', 'to', 'endorse', 'or', 'promote', 'products', 'derived', 'from', 'this', 'software', 'without', 'specific', '//', 'prior', 'written', 'permission.', '//', '//', 'THIS', 'SOFTWARE', 'IS', 'PROVIDED', 'BY', 'THE', 'COPYRIGHT', 'HOLDERS', 'AND', 'CONTRIBUTORS', '""AS', 'IS""', 'AND', 'ANY', '//', 'EXPRESS', 'OR', 'IMPLIED', 'WARRANTIES,', 'INCLUDING,', 'BUT', 'NOT', 'LIMITED', 'TO,', 'THE', 'IMPLIED', 'WARRANTIES', '//', 'OF', 'MERCHANTABILITY', 'AND', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE', 'ARE', 'DISCLAIMED.', 'IN', 'NO', 'EVENT', '//', 'SHALL', 'THE', 'COPYRIGHT', 'HOLDER', 'OR', 'CONTRIBUTORS', 'BE', 'LIABLE', 'FOR', 'ANY', 'DIRECT,', 'INDIRECT,', '//', 'INCIDENTAL,', 'SPECIAL,', 'EXEMPLARY,', 'OR', 'CONSEQUENTIAL', 'DAMAGES', '(INCLUDING,', 'BUT', 'NOT', 'LIMITED', '//', 'TO,', 'PROCUREMENT', 'OF', 'SUBSTITUTE', 'GOODS', 'OR', 'SERVICES;', 'LOSS', 'OF', 'USE,', 'DATA,', 'OR', 'PROFITS;', 'OR', '//', 'BUSINESS', 'INTERRUPTION)', 'HOWEVER', 'CAUSED', 'AND', 'ON', 'ANY', 'THEORY', 'OF', 'LIABILITY,', 'WHETHER', 'IN', '//', 'CONTRACT,', 'STRICT', 'LIABILITY,', 'OR', 'TORT', '(INCLUDING', 'NEGLIGENCE', 'OR', 'OTHERWISE)', 'ARISING', 'IN', '//', 'ANY', 'WAY', 'OUT', 'OF', 'THE', 'USE', 'OF', 'THIS', 'SOFTWARE,', 'EVEN', 'IF', 'ADVISED', 'OF', 'THE', 'POSSIBILITY', 'OF', 'SUCH', '//', 'DAMAGE.', '*/', '//=================================================================================================', '//*************************************************************************************************', '//', 'Includes', '//*************************************************************************************************', '#include', '<cstdlib>', '#include', '<iostream>', '#include', '<blaze/math/CompressedMatrix.h>', '#include', '<blaze/math/CompressedVector.h>', '#include', '<blaze/math/LowerMatrix.h>', '#include', '<blazetest/mathtest/Creator.h>', '#include', '<blazetest/mathtest/smatsvecmult/OperationTest.h>', '#include', '<blazetest/system/MathTest.h>', '//=================================================================================================', '//', '//', 'MAIN', 'FUNCTION', '//', '//=================================================================================================', '//*************************************************************************************************', 'int', 'main()', '{', 'std::cout', '<<', '""', 'Running', '\'LCaVCa\'...""', '<<', 'std::endl;', 'using', 'blazetest::mathtest::TypeA;', 'try', '{', '//', 'Matrix', 'type', 'definitions', 'typedef', 'blaze::LowerMatrix<', 'blaze::CompressedMatrix<TypeA>', '>', 'LCa;', 'typedef', 'blaze::CompressedVector<TypeA>', 'VCa;', '//', 'Creator', 'type', 'definitions', 'typedef', 'blazetest::Creator<LCa>', 'CLCa;', 'typedef', 'blazetest::Creator<VCa>', 'CVCa;', '//', 'Running', 'tests', 'with', 'small', 'matrices', 'and', 'vectors', 'for(', 'size_t', 'i=0UL;', 'i<=6UL;', '++i', ')', '{', 'for(', 'size_t', 'j=0UL;', 'j<=LCa::maxNonZeros(', 'i', ');', '++j', ')', '{', 'for(', 'size_t', 'k=0UL;', 'k<=i;', '++k', ')', '{', 'RUN_SMATSVECMULT_OPERATION_TEST(', 'CLCa(', 'i,', 'j', '),', 'CVCa(', 'i,', 'k', ')', ');', '}', '}', '}', '//', 'Running', 'tests', 'with', 'large', 'matrices', 'and', 'vectors', 'RUN_SMATSVECMULT_OPERATION_TEST(', 'CLCa(', '67UL,', '7UL', '),', 'CVCa(', '67UL,', '7UL', ')', ');', 'RUN_SMATSVECMULT_OPERATION_TEST(', 'CLCa(', '127UL,', '13UL', '),', 'CVCa(', '127UL,', '13UL', ')', ');', 'RUN_SMATSVECMULT_OPERATION_TEST(', 'CLCa(', '64UL,', '8UL', '),', 'CVCa(', '64UL,', '8UL', ')', ');', 'RUN_SMATSVECMULT_OPERATION_TEST(', 'CLCa(', '128UL,', '16UL', '),', 'CVCa(', '128UL,', '16UL', ')', ');', '}', 'catch(', 'std::exception&', 'ex', ')', '{', 'std::cerr', '<<', '""\\n\\n', 'ERROR', 'DETECTED', 'during', 'sparse', 'matrix/sparse', 'vector', 'multiplication:\\n""', '<<', 'ex.what()', '<<', '""\\n"";', 'return', 'EXIT_FAILURE;', '}', 'return', 'EXIT_SUCCESS;', '}', '//*************************************************************************************************', '```']",challenge not surrounded by ''': ,
"import sys
from pymongo import MongoClient
from flask_restful import Resource

class MongoIO(Resource):
    def __init__(self):
        self.result = None


    def insert_into_db(self, dct_inputs_outputs):
        try:
            client = MongoClient(""mongodb://127.0.0.1:27017"")
            db = client.primer
            self.result = db.models.insert_one(dct_inputs_outputs)
        except:
            print(""Unexpected error:"", sys.exc_info()[0])



","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'sys', 'from', 'pymongo', 'import', 'MongoClient', 'from', 'flask_restful', 'import', 'Resource', 'class', 'MongoIO(Resource):', 'def', '__init__(self):', 'self.result', '=', 'None', 'def', 'insert_into_db(self,', 'dct_inputs_outputs):', 'try:', 'client', '=', 'MongoClient(""mongodb://127.0.0.1:27017"")', 'db', '=', 'client.primer', 'self.result', '=', 'db.models.insert_one(dct_inputs_outputs)', 'except:', 'print(""Unexpected', 'error:"",', 'sys.exc_info()[0])', '```']",challenge not surrounded by ''': ,
"# AUTOGENERATED FILE
FROM balenalib/n510-tx2-debian:bullseye-run

RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        ca-certificates \
        curl \
        \
# .NET Core dependencies
        libc6 \
        libgcc1 \
        libgssapi-krb5-2 \
        libicu63 \
        libssl1.1 \
        libstdc++6 \
        zlib1g \
    && rm -rf /var/lib/apt/lists/*

# Configure web servers to bind to port 80 when present
ENV ASPNETCORE_URLS=http://+:80 \
    # Enable detection of running in a container
    DOTNET_RUNNING_IN_CONTAINER=true

# Install .NET Core SDK
ENV DOTNET_SDK_VERSION 3.1.406

RUN curl -SL --output dotnet.tar.gz ""https://dotnetcli.blob.core.windows.net/dotnet/Sdk/$DOTNET_SDK_VERSION/dotnet-sdk-$DOTNET_SDK_VERSION-linux-arm64.tar.gz"" \
    && dotnet_sha512='e460ac35329e572dbf4005254129b9799c897f19261d01ea77a0aa196b9e0fecf804996b1157cea92731e30e08b5827ccb0c2d280ea9ab2b04b46492ed5e12a3' \
    && echo ""$dotnet_sha512 dotnet.tar.gz"" | sha512sum -c - \
    && mkdir -p /usr/share/dotnet \
    && tar -zxf dotnet.tar.gz -C /usr/share/dotnet \
    && rm dotnet.tar.gz \
    && ln -s /usr/share/dotnet/dotnet /usr/bin/dotnet

# Configure web servers to bind to port 80 when present
# Enable correct mode for dotnet watch (only mode supported in a container)
ENV DOTNET_USE_POLLING_FILE_WATCHER=true \
    # Skip extraction of XML docs - generally not useful within an image/container - helps performance
    NUGET_XMLDOC_MODE=skip

# Trigger first run experience by running arbitrary cmd to populate local package cache
RUN dotnet help

CMD [""echo"",""'No CMD command was set in Dockerfile! Details about CMD command could be found in Dockerfile Guide section in our Docs. Here's the link: https://balena.io/docs""]

 RUN curl -SLO ""https://raw.githubusercontent.com/balena-io-library/base-images/8accad6af708fca7271c5c65f18a86782e19f877/scripts/assets/tests/test-stack@dotnet.sh"" \
  && echo ""Running test-stack@dotnet"" \
  && chmod +x test-stack@dotnet.sh \
  && bash test-stack@dotnet.sh \
  && rm -rf test-stack@dotnet.sh 

RUN [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \nArchitecture: ARM v8 \nOS: Debian Bullseye \nVariant: run variant \nDefault variable(s): UDEV=off \nThe following software stack is preinstalled: \ndotnet 3.1-sdk \nExtra features: \n- Easy way to install packages with `install_packages <package-name>` command \n- Run anywhere with cross-build feature  (for ARM only) \n- Keep the container idling with `balena-idle` command \n- Show base image details with `balena-info` command' > /.balena/messages/image-info

RUN echo '#!/bin/sh.real\nbalena-info\nrm -f /bin/sh\ncp /bin/sh.real /bin/sh\n/bin/sh ""$@""' > /bin/sh-shim \
	&& chmod +x /bin/sh-shim \
	&& cp /bin/sh /bin/sh.real \
	&& mv /bin/sh-shim /bin/sh","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', 'AUTOGENERATED', 'FILE', 'FROM', 'balenalib/n510-tx2-debian:bullseye-run', 'RUN', 'apt-get', 'update', '\\', '&&', 'apt-get', 'install', '-y', '--no-install-recommends', '\\', 'ca-certificates', '\\', 'curl', '\\', '\\', '#', '.NET', 'Core', 'dependencies', 'libc6', '\\', 'libgcc1', '\\', 'libgssapi-krb5-2', '\\', 'libicu63', '\\', 'libssl1.1', '\\', 'libstdc++6', '\\', 'zlib1g', '\\', '&&', 'rm', '-rf', '/var/lib/apt/lists/*', '#', 'Configure', 'web', 'servers', 'to', 'bind', 'to', 'port', '80', 'when', 'present', 'ENV', 'ASPNETCORE_URLS=http://+:80', '\\', '#', 'Enable', 'detection', 'of', 'running', 'in', 'a', 'container', 'DOTNET_RUNNING_IN_CONTAINER=true', '#', 'Install', '.NET', 'Core', 'SDK', 'ENV', 'DOTNET_SDK_VERSION', '3.1.406', 'RUN', 'curl', '-SL', '--output', 'dotnet.tar.gz', '""https://dotnetcli.blob.core.windows.net/dotnet/Sdk/$DOTNET_SDK_VERSION/dotnet-sdk-$DOTNET_SDK_VERSION-linux-arm64.tar.gz""', '\\', '&&', ""dotnet_sha512='e460ac35329e572dbf4005254129b9799c897f19261d01ea77a0aa196b9e0fecf804996b1157cea92731e30e08b5827ccb0c2d280ea9ab2b04b46492ed5e12a3'"", '\\', '&&', 'echo', '""$dotnet_sha512', 'dotnet.tar.gz""', '|', 'sha512sum', '-c', '-', '\\', '&&', 'mkdir', '-p', '/usr/share/dotnet', '\\', '&&', 'tar', '-zxf', 'dotnet.tar.gz', '-C', '/usr/share/dotnet', '\\', '&&', 'rm', 'dotnet.tar.gz', '\\', '&&', 'ln', '-s', '/usr/share/dotnet/dotnet', '/usr/bin/dotnet', '#', 'Configure', 'web', 'servers', 'to', 'bind', 'to', 'port', '80', 'when', 'present', '#', 'Enable', 'correct', 'mode', 'for', 'dotnet', 'watch', '(only', 'mode', 'supported', 'in', 'a', 'container)', 'ENV', 'DOTNET_USE_POLLING_FILE_WATCHER=true', '\\', '#', 'Skip', 'extraction', 'of', 'XML', 'docs', '-', 'generally', 'not', 'useful', 'within', 'an', 'image/container', '-', 'helps', 'performance', 'NUGET_XMLDOC_MODE=skip', '#', 'Trigger', 'first', 'run', 'experience', 'by', 'running', 'arbitrary', 'cmd', 'to', 'populate', 'local', 'package', 'cache', 'RUN', 'dotnet', 'help', 'CMD', '[""echo"",""\'No', 'CMD', 'command', 'was', 'set', 'in', 'Dockerfile!', 'Details', 'about', 'CMD', 'command', 'could', 'be', 'found', 'in', 'Dockerfile', 'Guide', 'section', 'in', 'our', 'Docs.', ""Here's"", 'the', 'link:', 'https://balena.io/docs""]', 'RUN', 'curl', '-SLO', '""https://raw.githubusercontent.com/balena-io-library/base-images/8accad6af708fca7271c5c65f18a86782e19f877/scripts/assets/tests/test-stack@dotnet.sh""', '\\', '&&', 'echo', '""Running', 'test-stack@dotnet""', '\\', '&&', 'chmod', '+x', 'test-stack@dotnet.sh', '\\', '&&', 'bash', 'test-stack@dotnet.sh', '\\', '&&', 'rm', '-rf', 'test-stack@dotnet.sh', 'RUN', '[', '!', '-d', '/.balena/messages', ']', '&&', 'mkdir', '-p', '/.balena/messages;', 'echo', ""'Here"", 'are', 'a', 'few', 'details', 'about', 'this', 'Docker', 'image', '(For', 'more', 'information', 'please', 'visit', 'https://www.balena.io/docs/reference/base-images/base-images/):', '\\nArchitecture:', 'ARM', 'v8', '\\nOS:', 'Debian', 'Bullseye', '\\nVariant:', 'run', 'variant', '\\nDefault', 'variable(s):', 'UDEV=off', '\\nThe', 'following', 'software', 'stack', 'is', 'preinstalled:', '\\ndotnet', '3.1-sdk', '\\nExtra', 'features:', '\\n-', 'Easy', 'way', 'to', 'install', 'packages', 'with', '`install_packages', '<package-name>`', 'command', '\\n-', 'Run', 'anywhere', 'with', 'cross-build', 'feature', '(for', 'ARM', 'only)', '\\n-', 'Keep', 'the', 'container', 'idling', 'with', '`balena-idle`', 'command', '\\n-', 'Show', 'base', 'image', 'details', 'with', '`balena-info`', ""command'"", '>', '/.balena/messages/image-info', 'RUN', 'echo', ""'#!/bin/sh.real\\nbalena-info\\nrm"", '-f', '/bin/sh\\ncp', '/bin/sh.real', '/bin/sh\\n/bin/sh', '""$@""\'', '>', '/bin/sh-shim', '\\', '&&', 'chmod', '+x', '/bin/sh-shim', '\\', '&&', 'cp', '/bin/sh', '/bin/sh.real', '\\', '&&', 'mv', '/bin/sh-shim', '/bin/sh```']",challenge not surrounded by ''': ,
"// Copyright (c) 2021 ASMlover. All rights reserved.
//
//  ______             __                  ___
// /\__  _\           /\ \                /\_ \
// \/_/\ \/    __     \_\ \  _____     ___\//\ \      __
//    \ \ \  /'__`\   /'_` \/\ '__`\  / __`\\ \ \   /'__`\
//     \ \ \/\ \L\.\_/\ \L\ \ \ \L\ \/\ \L\ \\_\ \_/\  __/
//      \ \_\ \__/.\_\ \___,_\ \ ,__/\ \____//\____\ \____\
//       \/_/\/__/\/_/\/__,_ /\ \ \/  \/___/ \/____/\/____/
//                             \ \_\
//                              \/_/
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
//  * Redistributions of source code must retain the above copyright
//    notice, this list ofconditions and the following disclaimer.
//
//  * Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in
//    the documentation and/or other materialsprovided with the
//    distribution.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
// FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
// COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
// BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
// CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
// LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
// ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.
#include ""lexer.hh""
#include ""vm.hh""
#include ""parser.hh""
#include ""compiler.hh""

namespace tadpole {

GlobalCompiler::~GlobalCompiler() {
  if (gparser_ != nullptr)
    delete gparser_;
}

FunctionObject* GlobalCompiler::compile(TadpoleVM& vm, const str_t& source_bytes) {
  Lexer lex(source_bytes);

  if (gparser_ = new GlobalParser(vm, lex); gparser_ != nullptr) {
    FunctionObject* fn = gparser_->compile();
    delete gparser_;
    gparser_ = nullptr;

    return fn;
  }
  return nullptr;
}

void GlobalCompiler::iter_objects(ObjectVisitor&& visitor) {
  if (gparser_ != nullptr)
    gparser_->iter_objects(std::move(visitor));
}

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//', 'Copyright', '(c)', '2021', 'ASMlover.', 'All', 'rights', 'reserved.', '//', '//', '______', '__', '___', '//', '/\\__', '_\\', '/\\', '\\', '/\\_', '\\', '//', '\\/_/\\', '\\/', '__', '\\_\\', '\\', '_____', '___\\//\\', '\\', '__', '//', '\\', '\\', '\\', ""/'__`\\"", ""/'_`"", '\\/\\', ""'__`\\"", '/', '__`\\\\', '\\', '\\', ""/'__`\\"", '//', '\\', '\\', '\\/\\', '\\L\\.\\_/\\', '\\L\\', '\\', '\\', '\\L\\', '\\/\\', '\\L\\', '\\\\_\\', '\\_/\\', '__/', '//', '\\', '\\_\\', '\\__/.\\_\\', '\\___,_\\', '\\', ',__/\\', '\\____//\\____\\', '\\____\\', '//', '\\/_/\\/__/\\/_/\\/__,_', '/\\', '\\', '\\/', '\\/___/', '\\/____/\\/____/', '//', '\\', '\\_\\', '//', '\\/_/', '//', '//', 'Redistribution', 'and', 'use', 'in', 'source', 'and', 'binary', 'forms,', 'with', 'or', 'without', '//', 'modification,', 'are', 'permitted', 'provided', 'that', 'the', 'following', 'conditions', '//', 'are', 'met:', '//', '//', '*', 'Redistributions', 'of', 'source', 'code', 'must', 'retain', 'the', 'above', 'copyright', '//', 'notice,', 'this', 'list', 'ofconditions', 'and', 'the', 'following', 'disclaimer.', '//', '//', '*', 'Redistributions', 'in', 'binary', 'form', 'must', 'reproduce', 'the', 'above', 'copyright', '//', 'notice,', 'this', 'list', 'of', 'conditions', 'and', 'the', 'following', 'disclaimer', 'in', '//', 'the', 'documentation', 'and/or', 'other', 'materialsprovided', 'with', 'the', '//', 'distribution.', '//', '//', 'THIS', 'SOFTWARE', 'IS', 'PROVIDED', 'BY', 'THE', 'COPYRIGHT', 'HOLDERS', 'AND', 'CONTRIBUTORS', '//', '""AS', 'IS""', 'AND', 'ANY', 'EXPRESS', 'OR', 'IMPLIED', 'WARRANTIES,', 'INCLUDING,', 'BUT', 'NOT', '//', 'LIMITED', 'TO,', 'THE', 'IMPLIED', 'WARRANTIES', 'OF', 'MERCHANTABILITY', 'AND', 'FITNESS', '//', 'FOR', 'A', 'PARTICULAR', 'PURPOSE', 'ARE', 'DISCLAIMED.', 'IN', 'NO', 'EVENT', 'SHALL', 'THE', '//', 'COPYRIGHT', 'HOLDER', 'OR', 'CONTRIBUTORS', 'BE', 'LIABLE', 'FOR', 'ANY', 'DIRECT,', 'INDIRECT,', '//', 'INCIDENTAL,', 'SPECIAL,', 'EXEMPLARY,', 'OR', 'CONSEQUENTIAL', 'DAMAGES', '(INCLUDING,', '//', 'BUT', 'NOT', 'LIMITED', 'TO,', 'PROCUREMENT', 'OF', 'SUBSTITUTE', 'GOODS', 'OR', 'SERVICES;', '//', 'LOSS', 'OF', 'USE,', 'DATA,', 'OR', 'PROFITS;', 'OR', 'BUSINESS', 'INTERRUPTION)', 'HOWEVER', '//', 'CAUSED', 'AND', 'ON', 'ANY', 'THEORY', 'OF', 'LIABILITY,', 'WHETHER', 'IN', 'CONTRACT,', 'STRICT', '//', 'LIABILITY,', 'OR', 'TORT', '(INCLUDING', 'NEGLIGENCE', 'OR', 'OTHERWISE)', 'ARISING', 'IN', '//', 'ANY', 'WAY', 'OUT', 'OF', 'THE', 'USE', 'OF', 'THIS', 'SOFTWARE,', 'EVEN', 'IF', 'ADVISED', 'OF', 'THE', '//', 'POSSIBILITY', 'OF', 'SUCH', 'DAMAGE.', '#include', '""lexer.hh""', '#include', '""vm.hh""', '#include', '""parser.hh""', '#include', '""compiler.hh""', 'namespace', 'tadpole', '{', 'GlobalCompiler::~GlobalCompiler()', '{', 'if', '(gparser_', '!=', 'nullptr)', 'delete', 'gparser_;', '}', 'FunctionObject*', 'GlobalCompiler::compile(TadpoleVM&', 'vm,', 'const', 'str_t&', 'source_bytes)', '{', 'Lexer', 'lex(source_bytes);', 'if', '(gparser_', '=', 'new', 'GlobalParser(vm,', 'lex);', 'gparser_', '!=', 'nullptr)', '{', 'FunctionObject*', 'fn', '=', 'gparser_->compile();', 'delete', 'gparser_;', 'gparser_', '=', 'nullptr;', 'return', 'fn;', '}', 'return', 'nullptr;', '}', 'void', 'GlobalCompiler::iter_objects(ObjectVisitor&&', 'visitor)', '{', 'if', '(gparser_', '!=', 'nullptr)', 'gparser_->iter_objects(std::move(visitor));', '}', '}', '```']",challenge not surrounded by ''': ,
"#!/bin/sh

export PATH=/projects/hnd/tools/linux/hndtools-mipsel-linux-uclibc-4.2.3/bin:$PATH
#export
#KERNEL_DIR=/home/perry/project/WNDR4500/2011_04_14_WNDR4500_Alpha/src/linux/linux-2.6

export TARGETDIR=""../../../src/router""
export TOP=""/home/perry/project/WNDR4500/2011_04_14_WNDR4500_Alpha/src/router""

export CROSS_COMPILE=""mipsel-uclibc-linux26-""
export CPPFLAGS=""-I\$(TOP)../../ap/gpl/openssl/tmp/usr/local/ssl/include""
export LDFLAGS=""-L\$(TOP)../../ap/gpl/openssl/tmp/usr/local/ssl/lib""
export PKG_CONFIG_PATH=""\$(TOP)../../ap/gpl/openssl/tmp/usr/local/ssl/lib/pkgconfig""
#export CC=""mipsel-uclibc-linux26-gcc""
#export AR=""mipsel-uclibc-linux26-ar""
#export AS=""mipsel-uclibc-linux26-as""
#export LD=""mipsel-uclibc-linux26-ld""
#export NM=""mipsel-uclibc-linux26-nm""
#export RANLIB=""mipsel-uclibc-linux26-ranlib""
export bindir=""/BIN""


#CPPFLAGS=""-I/path/to/ssl/include"" LDFLAGS=""-L/path/to/ssl/lib""

# for curl
#cd curl-7.23.1
./configure --target=mipsel-linux --host=mipsel-linux --build=i386-pc-linux-gnu --prefix='$(shell pwd)/tmp' --with-ssl=$TOP../../ap/gpl/openssl/tmp/usr/local/ssl \
            --exec-prefix='$(TARGETDIR)' --disable-manual --disable-proxy --without-zlib --disable-cookies --disable-ipv6 --disable-shared \
            --disable-dict --disable-file --disable-ftp --disable-gopher --disable-imap --disable-pop3 \
            --disable-smtp --disable-telnet --disable-tftp --disable-rtsp  
#make
#make install
#cd -
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/bin/sh', 'export', 'PATH=/projects/hnd/tools/linux/hndtools-mipsel-linux-uclibc-4.2.3/bin:$PATH', '#export', '#KERNEL_DIR=/home/perry/project/WNDR4500/2011_04_14_WNDR4500_Alpha/src/linux/linux-2.6', 'export', 'TARGETDIR=""../../../src/router""', 'export', 'TOP=""/home/perry/project/WNDR4500/2011_04_14_WNDR4500_Alpha/src/router""', 'export', 'CROSS_COMPILE=""mipsel-uclibc-linux26-""', 'export', 'CPPFLAGS=""-I\\$(TOP)../../ap/gpl/openssl/tmp/usr/local/ssl/include""', 'export', 'LDFLAGS=""-L\\$(TOP)../../ap/gpl/openssl/tmp/usr/local/ssl/lib""', 'export', 'PKG_CONFIG_PATH=""\\$(TOP)../../ap/gpl/openssl/tmp/usr/local/ssl/lib/pkgconfig""', '#export', 'CC=""mipsel-uclibc-linux26-gcc""', '#export', 'AR=""mipsel-uclibc-linux26-ar""', '#export', 'AS=""mipsel-uclibc-linux26-as""', '#export', 'LD=""mipsel-uclibc-linux26-ld""', '#export', 'NM=""mipsel-uclibc-linux26-nm""', '#export', 'RANLIB=""mipsel-uclibc-linux26-ranlib""', 'export', 'bindir=""/BIN""', '#CPPFLAGS=""-I/path/to/ssl/include""', 'LDFLAGS=""-L/path/to/ssl/lib""', '#', 'for', 'curl', '#cd', 'curl-7.23.1', './configure', '--target=mipsel-linux', '--host=mipsel-linux', '--build=i386-pc-linux-gnu', ""--prefix='$(shell"", ""pwd)/tmp'"", '--with-ssl=$TOP../../ap/gpl/openssl/tmp/usr/local/ssl', '\\', ""--exec-prefix='$(TARGETDIR)'"", '--disable-manual', '--disable-proxy', '--without-zlib', '--disable-cookies', '--disable-ipv6', '--disable-shared', '\\', '--disable-dict', '--disable-file', '--disable-ftp', '--disable-gopher', '--disable-imap', '--disable-pop3', '\\', '--disable-smtp', '--disable-telnet', '--disable-tftp', '--disable-rtsp', '#make', '#make', 'install', '#cd', '-', '```']",challenge not surrounded by ''': ,
"#
# Copyright (c) 2001, 2002, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

#

if [ ""${TESTSRC}"" = """" ]
then
  echo ""TESTSRC not set.  Test cannot execute.  Failed.""
  exit 1
fi
echo ""TESTSRC=${TESTSRC}""
if [ ""${TESTJAVA}"" = """" ]
then
  echo ""TESTJAVA not set.  Test cannot execute.  Failed.""
  exit 1
fi
echo ""TESTJAVA=${TESTJAVA}""
if [ ""${TESTCLASSES}"" = """" ]
then
  echo ""TESTCLASSES not set.  Test cannot execute.  Failed.""
  exit 1
fi
echo ""TESTCLASSES=${TESTCLASSES}""
echo ""CLASSPATH=${CLASSPATH}""

cp ${TESTSRC}/Assert.java .
cp -R ${TESTSRC}/package1 .
cp -R ${TESTSRC}/package2 .

${TESTJAVA}/bin/javac -source 1.4 Assert.java 

${TESTJAVA}/bin/java Assert

result=$?
if [ $result -eq 0 ]
then
  echo ""Passed""
else
  echo ""Failed""
fi
exit $result


","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', '#', 'Copyright', '(c)', '2001,', '2002,', 'Oracle', 'and/or', 'its', 'affiliates.', 'All', 'rights', 'reserved.', '#', 'DO', 'NOT', 'ALTER', 'OR', 'REMOVE', 'COPYRIGHT', 'NOTICES', 'OR', 'THIS', 'FILE', 'HEADER.', '#', '#', 'This', 'code', 'is', 'free', 'software;', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', 'it', '#', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'version', '2', 'only,', 'as', '#', 'published', 'by', 'the', 'Free', 'Software', 'Foundation.', '#', '#', 'This', 'code', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', 'but', 'WITHOUT', '#', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', 'MERCHANTABILITY', 'or', '#', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', 'GNU', 'General', 'Public', 'License', '#', 'version', '2', 'for', 'more', 'details', '(a', 'copy', 'is', 'included', 'in', 'the', 'LICENSE', 'file', 'that', '#', 'accompanied', 'this', 'code).', '#', '#', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'version', '#', '2', 'along', 'with', 'this', 'work;', 'if', 'not,', 'write', 'to', 'the', 'Free', 'Software', 'Foundation,', '#', 'Inc.,', '51', 'Franklin', 'St,', 'Fifth', 'Floor,', 'Boston,', 'MA', '02110-1301', 'USA.', '#', '#', 'Please', 'contact', 'Oracle,', '500', 'Oracle', 'Parkway,', 'Redwood', 'Shores,', 'CA', '94065', 'USA', '#', 'or', 'visit', 'www.oracle.com', 'if', 'you', 'need', 'additional', 'information', 'or', 'have', 'any', '#', 'questions.', '#', '#', 'if', '[', '""${TESTSRC}""', '=', '""""', ']', 'then', 'echo', '""TESTSRC', 'not', 'set.', 'Test', 'cannot', 'execute.', 'Failed.""', 'exit', '1', 'fi', 'echo', '""TESTSRC=${TESTSRC}""', 'if', '[', '""${TESTJAVA}""', '=', '""""', ']', 'then', 'echo', '""TESTJAVA', 'not', 'set.', 'Test', 'cannot', 'execute.', 'Failed.""', 'exit', '1', 'fi', 'echo', '""TESTJAVA=${TESTJAVA}""', 'if', '[', '""${TESTCLASSES}""', '=', '""""', ']', 'then', 'echo', '""TESTCLASSES', 'not', 'set.', 'Test', 'cannot', 'execute.', 'Failed.""', 'exit', '1', 'fi', 'echo', '""TESTCLASSES=${TESTCLASSES}""', 'echo', '""CLASSPATH=${CLASSPATH}""', 'cp', '${TESTSRC}/Assert.java', '.', 'cp', '-R', '${TESTSRC}/package1', '.', 'cp', '-R', '${TESTSRC}/package2', '.', '${TESTJAVA}/bin/javac', '-source', '1.4', 'Assert.java', '${TESTJAVA}/bin/java', 'Assert', 'result=$?', 'if', '[', '$result', '-eq', '0', ']', 'then', 'echo', '""Passed""', 'else', 'echo', '""Failed""', 'fi', 'exit', '$result', '```']",challenge not surrounded by ''': ,
"package utils;

import java.io.UnsupportedEncodingException;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URISyntaxException;
import java.net.URL;
import java.net.URLEncoder;

public class UrlUtils
{
	public static URI toURI(String url)
	{
		try
		{
			return new URI(url);
		}
		catch (URISyntaxException e)
		{
			return null;
		}
	}

	public static URI toURI(URL url)
	{
		try
		{
			return new URI(url.toString());
		}
		catch (URISyntaxException e)
		{
			return null;
		}
	}

	public static URL toURL(String url)
	{
		try
		{
			return new URL(url);
		}
		catch (MalformedURLException e)
		{
			return null;
		}
	}

	public static URL removeInvalidCharacters(URL u) throws UnsupportedEncodingException, MalformedURLException
	{
		String[] paths = u.getPath().split(""/"");
		for (int i = 0; i < paths.length; i++)
			paths[i] = URLEncoder.encode(paths[i], ""UTF-8"").replace(""+"", ""%20"");

		URL url = new URL(u.getProtocol() + ""://"" + u.getHost() + String.join(""/"", paths));

		return url;
	}
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'utils;', 'import', 'java.io.UnsupportedEncodingException;', 'import', 'java.net.MalformedURLException;', 'import', 'java.net.URI;', 'import', 'java.net.URISyntaxException;', 'import', 'java.net.URL;', 'import', 'java.net.URLEncoder;', 'public', 'class', 'UrlUtils', '{', 'public', 'static', 'URI', 'toURI(String', 'url)', '{', 'try', '{', 'return', 'new', 'URI(url);', '}', 'catch', '(URISyntaxException', 'e)', '{', 'return', 'null;', '}', '}', 'public', 'static', 'URI', 'toURI(URL', 'url)', '{', 'try', '{', 'return', 'new', 'URI(url.toString());', '}', 'catch', '(URISyntaxException', 'e)', '{', 'return', 'null;', '}', '}', 'public', 'static', 'URL', 'toURL(String', 'url)', '{', 'try', '{', 'return', 'new', 'URL(url);', '}', 'catch', '(MalformedURLException', 'e)', '{', 'return', 'null;', '}', '}', 'public', 'static', 'URL', 'removeInvalidCharacters(URL', 'u)', 'throws', 'UnsupportedEncodingException,', 'MalformedURLException', '{', 'String[]', 'paths', '=', 'u.getPath().split(""/"");', 'for', '(int', 'i', '=', '0;', 'i', '<', 'paths.length;', 'i++)', 'paths[i]', '=', 'URLEncoder.encode(paths[i],', '""UTF-8"").replace(""+"",', '""%20"");', 'URL', 'url', '=', 'new', 'URL(u.getProtocol()', '+', '""://""', '+', 'u.getHost()', '+', 'String.join(""/"",', 'paths));', 'return', 'url;', '}', '}', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright (C) 2005 - 2014 Jaspersoft Corporation. All rights  reserved.
 * http://www.jaspersoft.com.
 *
 * Unless you have purchased  a commercial license agreement from Jaspersoft,
 * the following license terms  apply:
 *
 * This program is free software: you can redistribute it and/or  modify
 * it under the terms of the GNU Affero General Public License  as
 * published by the Free Software Foundation, either version 3 of  the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Affero  General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public  License
 * along with this program.&nbsp; If not, see <http://www.gnu.org/licenses/>.
 */
package com.jaspersoft.jasperserver.jaxrs.client.apiadapters.attributes;

import com.jaspersoft.jasperserver.jaxrs.client.apiadapters.AbstractAdapter;
import com.jaspersoft.jasperserver.jaxrs.client.core.SessionStorage;

import java.util.Collection;

/**
 * @author Alex Krasnyanskiy
 * @since 6.0.1-ALPHA
 */
public class ServerAttributesService extends AbstractAdapter {

    public ServerAttributesService(SessionStorage sessionStorage) {
        super(sessionStorage);
    }

    public ServerSingleAttributeAdapter attribute() {
        return new ServerSingleAttributeAdapter(sessionStorage);
    }

    public ServerSingleAttributeAdapter attribute(String attributeName) {
        return new ServerSingleAttributeAdapter(sessionStorage, attributeName);
    }

    public ServerBatchAttributeAdapter attributes() {
        return new ServerBatchAttributeAdapter(sessionStorage);
    }

    public ServerBatchAttributeAdapter attributes(Collection<String> attributesNames) {
        return new ServerBatchAttributeAdapter(sessionStorage, attributesNames);
    }

    public ServerBatchAttributeAdapter attributes(String... attributesNames) {
        return new ServerBatchAttributeAdapter(sessionStorage, attributesNames);
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '(C)', '2005', '-', '2014', 'Jaspersoft', 'Corporation.', 'All', 'rights', 'reserved.', '*', 'http://www.jaspersoft.com.', '*', '*', 'Unless', 'you', 'have', 'purchased', 'a', 'commercial', 'license', 'agreement', 'from', 'Jaspersoft,', '*', 'the', 'following', 'license', 'terms', 'apply:', '*', '*', 'This', 'program', 'is', 'free', 'software:', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', '*', 'it', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'Affero', 'General', 'Public', 'License', 'as', '*', 'published', 'by', 'the', 'Free', 'Software', 'Foundation,', 'either', 'version', '3', 'of', 'the', '*', 'License,', 'or', '(at', 'your', 'option)', 'any', 'later', 'version.', '*', '*', 'This', 'program', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', '*', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', '*', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', '*', 'GNU', 'Affero', 'General', 'Public', 'License', 'for', 'more', 'details.', '*', '*', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'Affero', 'General', 'Public', 'License', '*', 'along', 'with', 'this', 'program.&nbsp;', 'If', 'not,', 'see', '<http://www.gnu.org/licenses/>.', '*/', 'package', 'com.jaspersoft.jasperserver.jaxrs.client.apiadapters.attributes;', 'import', 'com.jaspersoft.jasperserver.jaxrs.client.apiadapters.AbstractAdapter;', 'import', 'com.jaspersoft.jasperserver.jaxrs.client.core.SessionStorage;', 'import', 'java.util.Collection;', '/**', '*', '@author', 'Alex', 'Krasnyanskiy', '*', '@since', '6.0.1-ALPHA', '*/', 'public', 'class', 'ServerAttributesService', 'extends', 'AbstractAdapter', '{', 'public', 'ServerAttributesService(SessionStorage', 'sessionStorage)', '{', 'super(sessionStorage);', '}', 'public', 'ServerSingleAttributeAdapter', 'attribute()', '{', 'return', 'new', 'ServerSingleAttributeAdapter(sessionStorage);', '}', 'public', 'ServerSingleAttributeAdapter', 'attribute(String', 'attributeName)', '{', 'return', 'new', 'ServerSingleAttributeAdapter(sessionStorage,', 'attributeName);', '}', 'public', 'ServerBatchAttributeAdapter', 'attributes()', '{', 'return', 'new', 'ServerBatchAttributeAdapter(sessionStorage);', '}', 'public', 'ServerBatchAttributeAdapter', 'attributes(Collection<String>', 'attributesNames)', '{', 'return', 'new', 'ServerBatchAttributeAdapter(sessionStorage,', 'attributesNames);', '}', 'public', 'ServerBatchAttributeAdapter', 'attributes(String...', 'attributesNames)', '{', 'return', 'new', 'ServerBatchAttributeAdapter(sessionStorage,', 'attributesNames);', '}', '}', '```']",challenge not surrounded by ''': ,
"/*
 [The ""BSD licence""]
 Copyright (c) 2005-2008 Terence Parr
 All rights reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions
 are met:
 1. Redistributions of source code must retain the above copyright
    notice, this list of conditions and the following disclaimer.
 2. Redistributions in binary form must reproduce the above copyright
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
 3. The name of the author may not be used to endorse or promote products
    derived from this software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/
package org.antlr.runtime;

public interface Token {
	public static final int EOR_TOKEN_TYPE = 1;

	/** imaginary tree navigation type; traverse ""get child"" link */
	public static final int DOWN = 2;
	/** imaginary tree navigation type; finish with a child list */
	public static final int UP = 3;

	public static final int MIN_TOKEN_TYPE = UP+1;

	/** All tokens go to the parser (unless skip() is called in that rule)
	 *  on a particular ""channel"".  The parser tunes to a particular channel
	 *  so that whitespace etc... can go to the parser on a ""hidden"" channel.
	 */
	public static final int DEFAULT_CHANNEL = 0;
	
	/** Anything on different channel than DEFAULT_CHANNEL is not parsed
	 *  by parser.
	 */
	public static final int HIDDEN_CHANNEL = 99;

    public static final int EOF = CharStream.EOF;
	public static final Token EOF_TOKEN = new CommonToken(EOF);
	
	public static final int INVALID_TOKEN_TYPE = 0;
	public static final Token INVALID_TOKEN = new CommonToken(INVALID_TOKEN_TYPE);

	/** In an action, a lexer rule can set token to this SKIP_TOKEN and ANTLR
	 *  will avoid creating a token for this symbol and try to fetch another.
	 */
	public static final Token SKIP_TOKEN = new CommonToken(INVALID_TOKEN_TYPE);

	/** Get the text of the token */
	public String getText();
	public void setText(String text);

	public int getType();
	public void setType(int ttype);
	/**  The line number on which this token was matched; line=1..n */
	public int getLine();
    public void setLine(int line);

	/** The index of the first character relative to the beginning of the line 0..n-1 */
	public int getCharPositionInLine();
	public void setCharPositionInLine(int pos);

	public int getChannel();
	public void setChannel(int channel);

	/** An index from 0..n-1 of the token object in the input stream.
	 *  This must be valid in order to use the ANTLRWorks debugger.
	 */
	public int getTokenIndex();
	public void setTokenIndex(int index);

	/** From what character stream was this token created?  You don't have to
	 *  implement but it's nice to know where a Token comes from if you have
	 *  include files etc... on the input.
	 */
	public CharStream getInputStream();
	public void setInputStream(CharStream input);
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '[The', '""BSD', 'licence""]', 'Copyright', '(c)', '2005-2008', 'Terence', 'Parr', 'All', 'rights', 'reserved.', 'Redistribution', 'and', 'use', 'in', 'source', 'and', 'binary', 'forms,', 'with', 'or', 'without', 'modification,', 'are', 'permitted', 'provided', 'that', 'the', 'following', 'conditions', 'are', 'met:', '1.', 'Redistributions', 'of', 'source', 'code', 'must', 'retain', 'the', 'above', 'copyright', 'notice,', 'this', 'list', 'of', 'conditions', 'and', 'the', 'following', 'disclaimer.', '2.', 'Redistributions', 'in', 'binary', 'form', 'must', 'reproduce', 'the', 'above', 'copyright', 'notice,', 'this', 'list', 'of', 'conditions', 'and', 'the', 'following', 'disclaimer', 'in', 'the', 'documentation', 'and/or', 'other', 'materials', 'provided', 'with', 'the', 'distribution.', '3.', 'The', 'name', 'of', 'the', 'author', 'may', 'not', 'be', 'used', 'to', 'endorse', 'or', 'promote', 'products', 'derived', 'from', 'this', 'software', 'without', 'specific', 'prior', 'written', 'permission.', 'THIS', 'SOFTWARE', 'IS', 'PROVIDED', 'BY', 'THE', 'AUTHOR', '``AS', ""IS''"", 'AND', 'ANY', 'EXPRESS', 'OR', 'IMPLIED', 'WARRANTIES,', 'INCLUDING,', 'BUT', 'NOT', 'LIMITED', 'TO,', 'THE', 'IMPLIED', 'WARRANTIES', 'OF', 'MERCHANTABILITY', 'AND', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE', 'ARE', 'DISCLAIMED.', 'IN', 'NO', 'EVENT', 'SHALL', 'THE', 'AUTHOR', 'BE', 'LIABLE', 'FOR', 'ANY', 'DIRECT,', 'INDIRECT,', 'INCIDENTAL,', 'SPECIAL,', 'EXEMPLARY,', 'OR', 'CONSEQUENTIAL', 'DAMAGES', '(INCLUDING,', 'BUT', 'NOT', 'LIMITED', 'TO,', 'PROCUREMENT', 'OF', 'SUBSTITUTE', 'GOODS', 'OR', 'SERVICES;', 'LOSS', 'OF', 'USE,', 'DATA,', 'OR', 'PROFITS;', 'OR', 'BUSINESS', 'INTERRUPTION)', 'HOWEVER', 'CAUSED', 'AND', 'ON', 'ANY', 'THEORY', 'OF', 'LIABILITY,', 'WHETHER', 'IN', 'CONTRACT,', 'STRICT', 'LIABILITY,', 'OR', 'TORT', '(INCLUDING', 'NEGLIGENCE', 'OR', 'OTHERWISE)', 'ARISING', 'IN', 'ANY', 'WAY', 'OUT', 'OF', 'THE', 'USE', 'OF', 'THIS', 'SOFTWARE,', 'EVEN', 'IF', 'ADVISED', 'OF', 'THE', 'POSSIBILITY', 'OF', 'SUCH', 'DAMAGE.', '*/', 'package', 'org.antlr.runtime;', 'public', 'interface', 'Token', '{', 'public', 'static', 'final', 'int', 'EOR_TOKEN_TYPE', '=', '1;', '/**', 'imaginary', 'tree', 'navigation', 'type;', 'traverse', '""get', 'child""', 'link', '*/', 'public', 'static', 'final', 'int', 'DOWN', '=', '2;', '/**', 'imaginary', 'tree', 'navigation', 'type;', 'finish', 'with', 'a', 'child', 'list', '*/', 'public', 'static', 'final', 'int', 'UP', '=', '3;', 'public', 'static', 'final', 'int', 'MIN_TOKEN_TYPE', '=', 'UP+1;', '/**', 'All', 'tokens', 'go', 'to', 'the', 'parser', '(unless', 'skip()', 'is', 'called', 'in', 'that', 'rule)', '*', 'on', 'a', 'particular', '""channel"".', 'The', 'parser', 'tunes', 'to', 'a', 'particular', 'channel', '*', 'so', 'that', 'whitespace', 'etc...', 'can', 'go', 'to', 'the', 'parser', 'on', 'a', '""hidden""', 'channel.', '*/', 'public', 'static', 'final', 'int', 'DEFAULT_CHANNEL', '=', '0;', '/**', 'Anything', 'on', 'different', 'channel', 'than', 'DEFAULT_CHANNEL', 'is', 'not', 'parsed', '*', 'by', 'parser.', '*/', 'public', 'static', 'final', 'int', 'HIDDEN_CHANNEL', '=', '99;', 'public', 'static', 'final', 'int', 'EOF', '=', 'CharStream.EOF;', 'public', 'static', 'final', 'Token', 'EOF_TOKEN', '=', 'new', 'CommonToken(EOF);', 'public', 'static', 'final', 'int', 'INVALID_TOKEN_TYPE', '=', '0;', 'public', 'static', 'final', 'Token', 'INVALID_TOKEN', '=', 'new', 'CommonToken(INVALID_TOKEN_TYPE);', '/**', 'In', 'an', 'action,', 'a', 'lexer', 'rule', 'can', 'set', 'token', 'to', 'this', 'SKIP_TOKEN', 'and', 'ANTLR', '*', 'will', 'avoid', 'creating', 'a', 'token', 'for', 'this', 'symbol', 'and', 'try', 'to', 'fetch', 'another.', '*/', 'public', 'static', 'final', 'Token', 'SKIP_TOKEN', '=', 'new', 'CommonToken(INVALID_TOKEN_TYPE);', '/**', 'Get', 'the', 'text', 'of', 'the', 'token', '*/', 'public', 'String', 'getText();', 'public', 'void', 'setText(String', 'text);', 'public', 'int', 'getType();', 'public', 'void', 'setType(int', 'ttype);', '/**', 'The', 'line', 'number', 'on', 'which', 'this', 'token', 'was', 'matched;', 'line=1..n', '*/', 'public', 'int', 'getLine();', 'public', 'void', 'setLine(int', 'line);', '/**', 'The', 'index', 'of', 'the', 'first', 'character', 'relative', 'to', 'the', 'beginning', 'of', 'the', 'line', '0..n-1', '*/', 'public', 'int', 'getCharPositionInLine();', 'public', 'void', 'setCharPositionInLine(int', 'pos);', 'public', 'int', 'getChannel();', 'public', 'void', 'setChannel(int', 'channel);', '/**', 'An', 'index', 'from', '0..n-1', 'of', 'the', 'token', 'object', 'in', 'the', 'input', 'stream.', '*', 'This', 'must', 'be', 'valid', 'in', 'order', 'to', 'use', 'the', 'ANTLRWorks', 'debugger.', '*/', 'public', 'int', 'getTokenIndex();', 'public', 'void', 'setTokenIndex(int', 'index);', '/**', 'From', 'what', 'character', 'stream', 'was', 'this', 'token', 'created?', 'You', ""don't"", 'have', 'to', '*', 'implement', 'but', ""it's"", 'nice', 'to', 'know', 'where', 'a', 'Token', 'comes', 'from', 'if', 'you', 'have', '*', 'include', 'files', 'etc...', 'on', 'the', 'input.', '*/', 'public', 'CharStream', 'getInputStream();', 'public', 'void', 'setInputStream(CharStream', 'input);', '}', '```']",challenge not surrounded by ''': ,
"import React from 'react';
import IconBase from 'react-icon-base';

export default class FaExchange extends React.Component {
    render() {
        return (
            <IconBase viewBox=""0 0 40 40"" {...this.props}>
                <g><path d=""m40 26.4v4.3q0 0.3-0.2 0.5t-0.5 0.2h-30.7v4.3q0 0.3-0.2 0.5t-0.5 0.2q-0.3 0-0.6-0.2l-7.1-7.1q-0.2-0.2-0.2-0.5 0-0.3 0.2-0.5l7.1-7.2q0.2-0.2 0.6-0.2 0.2 0 0.5 0.2t0.2 0.5v4.3h30.7q0.3 0 0.5 0.2t0.2 0.5z m0-12.1q0 0.3-0.2 0.5l-7.1 7.1q-0.2 0.2-0.6 0.2-0.2 0-0.5-0.2t-0.2-0.5v-4.3h-30.7q-0.3 0-0.5-0.2t-0.2-0.5v-4.3q0-0.2 0.2-0.5t0.5-0.2h30.7v-4.3q0-0.3 0.2-0.5t0.5-0.2q0.3 0 0.6 0.3l7.1 7.1q0.2 0.2 0.2 0.5z""/></g>
            </IconBase>
        );
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'React', 'from', ""'react';"", 'import', 'IconBase', 'from', ""'react-icon-base';"", 'export', 'default', 'class', 'FaExchange', 'extends', 'React.Component', '{', 'render()', '{', 'return', '(', '<IconBase', 'viewBox=""0', '0', '40', '40""', '{...this.props}>', '<g><path', 'd=""m40', '26.4v4.3q0', '0.3-0.2', '0.5t-0.5', '0.2h-30.7v4.3q0', '0.3-0.2', '0.5t-0.5', '0.2q-0.3', '0-0.6-0.2l-7.1-7.1q-0.2-0.2-0.2-0.5', '0-0.3', '0.2-0.5l7.1-7.2q0.2-0.2', '0.6-0.2', '0.2', '0', '0.5', '0.2t0.2', '0.5v4.3h30.7q0.3', '0', '0.5', '0.2t0.2', '0.5z', 'm0-12.1q0', '0.3-0.2', '0.5l-7.1', '7.1q-0.2', '0.2-0.6', '0.2-0.2', '0-0.5-0.2t-0.2-0.5v-4.3h-30.7q-0.3', '0-0.5-0.2t-0.2-0.5v-4.3q0-0.2', '0.2-0.5t0.5-0.2h30.7v-4.3q0-0.3', '0.2-0.5t0.5-0.2q0.3', '0', '0.6', '0.3l7.1', '7.1q0.2', '0.2', '0.2', '0.5z""/></g>', '</IconBase>', ');', '}', '}', '```']",challenge not surrounded by ''': ,
"def primitive_triplets(number_in_triplet):
    pass


def triplets_in_range(range_start, range_end):
    pass


def is_triplet(triplet):
    pass
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```def', 'primitive_triplets(number_in_triplet):', 'pass', 'def', 'triplets_in_range(range_start,', 'range_end):', 'pass', 'def', 'is_triplet(triplet):', 'pass', '```']",challenge not surrounded by ''': ,
"/**
 * Copyright (c) 2013-2019 Contributors to the Eclipse Foundation
 *
 * <p> See the NOTICE file distributed with this work for additional information regarding copyright
 * ownership. All rights reserved. This program and the accompanying materials are made available
 * under the terms of the Apache License, Version 2.0 which accompanies this distribution and is
 * available at http://www.apache.org/licenses/LICENSE-2.0.txt
 */
package org.locationtech.geowave.format.tdrive;

import java.net.URL;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Scanner;
import org.geotools.feature.AttributeTypeBuilder;
import org.geotools.feature.simple.SimpleFeatureTypeBuilder;
import org.locationtech.geowave.core.index.StringUtils;
import org.locationtech.jts.geom.Geometry;
import org.mortbay.log.Log;
import org.opengis.feature.simple.SimpleFeatureType;

/**
 * This is a convenience class for performing common GPX static utility methods such as schema
 * validation, file parsing, and SimpleFeatureType definition.
 */
public class TdriveUtils {
  public static final String TDRIVE_POINT_FEATURE = ""tdrivepoint"";

  private static final ThreadLocal<DateFormat> dateFormat = new ThreadLocal<DateFormat>() {
    @Override
    protected DateFormat initialValue() {
      return new SimpleDateFormat(""yyyy-MM-dd HH:mm:ss"");
    }
  };

  public static Date parseDate(final String source) throws ParseException {
    return dateFormat.get().parse(source);
  }

  public static SimpleFeatureType createTdrivePointDataType() {

    final SimpleFeatureTypeBuilder simpleFeatureTypeBuilder = new SimpleFeatureTypeBuilder();
    simpleFeatureTypeBuilder.setName(TDRIVE_POINT_FEATURE);

    final AttributeTypeBuilder attributeTypeBuilder = new AttributeTypeBuilder();

    simpleFeatureTypeBuilder.add(
        attributeTypeBuilder.binding(Geometry.class).nillable(false).buildDescriptor(""geometry""));
    simpleFeatureTypeBuilder.add(
        attributeTypeBuilder.binding(Double.class).nillable(false).buildDescriptor(""taxiid""));
    simpleFeatureTypeBuilder.add(
        attributeTypeBuilder.binding(Double.class).nillable(true).buildDescriptor(""pointinstance""));
    simpleFeatureTypeBuilder.add(
        attributeTypeBuilder.binding(Date.class).nillable(true).buildDescriptor(""Timestamp""));
    simpleFeatureTypeBuilder.add(
        attributeTypeBuilder.binding(Double.class).nillable(true).buildDescriptor(""Latitude""));
    simpleFeatureTypeBuilder.add(
        attributeTypeBuilder.binding(Double.class).nillable(true).buildDescriptor(""Longitude""));

    return simpleFeatureTypeBuilder.buildFeatureType();
  }

  public static boolean validate(final URL file) {
    try (Scanner scanner =
        new Scanner(file.openStream(), StringUtils.getGeoWaveCharset().toString())) {
      if (scanner.hasNextLine()) {
        final String line = scanner.nextLine();
        return line.split("","").length == 4;
      }
    } catch (final Exception e) {
      Log.warn(""Error validating file: "" + file.getPath(), e);
      return false;
    }
    return false;
  }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/**', '*', 'Copyright', '(c)', '2013-2019', 'Contributors', 'to', 'the', 'Eclipse', 'Foundation', '*', '*', '<p>', 'See', 'the', 'NOTICE', 'file', 'distributed', 'with', 'this', 'work', 'for', 'additional', 'information', 'regarding', 'copyright', '*', 'ownership.', 'All', 'rights', 'reserved.', 'This', 'program', 'and', 'the', 'accompanying', 'materials', 'are', 'made', 'available', '*', 'under', 'the', 'terms', 'of', 'the', 'Apache', 'License,', 'Version', '2.0', 'which', 'accompanies', 'this', 'distribution', 'and', 'is', '*', 'available', 'at', 'http://www.apache.org/licenses/LICENSE-2.0.txt', '*/', 'package', 'org.locationtech.geowave.format.tdrive;', 'import', 'java.net.URL;', 'import', 'java.text.DateFormat;', 'import', 'java.text.ParseException;', 'import', 'java.text.SimpleDateFormat;', 'import', 'java.util.Date;', 'import', 'java.util.Scanner;', 'import', 'org.geotools.feature.AttributeTypeBuilder;', 'import', 'org.geotools.feature.simple.SimpleFeatureTypeBuilder;', 'import', 'org.locationtech.geowave.core.index.StringUtils;', 'import', 'org.locationtech.jts.geom.Geometry;', 'import', 'org.mortbay.log.Log;', 'import', 'org.opengis.feature.simple.SimpleFeatureType;', '/**', '*', 'This', 'is', 'a', 'convenience', 'class', 'for', 'performing', 'common', 'GPX', 'static', 'utility', 'methods', 'such', 'as', 'schema', '*', 'validation,', 'file', 'parsing,', 'and', 'SimpleFeatureType', 'definition.', '*/', 'public', 'class', 'TdriveUtils', '{', 'public', 'static', 'final', 'String', 'TDRIVE_POINT_FEATURE', '=', '""tdrivepoint"";', 'private', 'static', 'final', 'ThreadLocal<DateFormat>', 'dateFormat', '=', 'new', 'ThreadLocal<DateFormat>()', '{', '@Override', 'protected', 'DateFormat', 'initialValue()', '{', 'return', 'new', 'SimpleDateFormat(""yyyy-MM-dd', 'HH:mm:ss"");', '}', '};', 'public', 'static', 'Date', 'parseDate(final', 'String', 'source)', 'throws', 'ParseException', '{', 'return', 'dateFormat.get().parse(source);', '}', 'public', 'static', 'SimpleFeatureType', 'createTdrivePointDataType()', '{', 'final', 'SimpleFeatureTypeBuilder', 'simpleFeatureTypeBuilder', '=', 'new', 'SimpleFeatureTypeBuilder();', 'simpleFeatureTypeBuilder.setName(TDRIVE_POINT_FEATURE);', 'final', 'AttributeTypeBuilder', 'attributeTypeBuilder', '=', 'new', 'AttributeTypeBuilder();', 'simpleFeatureTypeBuilder.add(', 'attributeTypeBuilder.binding(Geometry.class).nillable(false).buildDescriptor(""geometry""));', 'simpleFeatureTypeBuilder.add(', 'attributeTypeBuilder.binding(Double.class).nillable(false).buildDescriptor(""taxiid""));', 'simpleFeatureTypeBuilder.add(', 'attributeTypeBuilder.binding(Double.class).nillable(true).buildDescriptor(""pointinstance""));', 'simpleFeatureTypeBuilder.add(', 'attributeTypeBuilder.binding(Date.class).nillable(true).buildDescriptor(""Timestamp""));', 'simpleFeatureTypeBuilder.add(', 'attributeTypeBuilder.binding(Double.class).nillable(true).buildDescriptor(""Latitude""));', 'simpleFeatureTypeBuilder.add(', 'attributeTypeBuilder.binding(Double.class).nillable(true).buildDescriptor(""Longitude""));', 'return', 'simpleFeatureTypeBuilder.buildFeatureType();', '}', 'public', 'static', 'boolean', 'validate(final', 'URL', 'file)', '{', 'try', '(Scanner', 'scanner', '=', 'new', 'Scanner(file.openStream(),', 'StringUtils.getGeoWaveCharset().toString()))', '{', 'if', '(scanner.hasNextLine())', '{', 'final', 'String', 'line', '=', 'scanner.nextLine();', 'return', 'line.split("","").length', '==', '4;', '}', '}', 'catch', '(final', 'Exception', 'e)', '{', 'Log.warn(""Error', 'validating', 'file:', '""', '+', 'file.getPath(),', 'e);', 'return', 'false;', '}', 'return', 'false;', '}', '}', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright 2000-2016 Vaadin Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License""); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

package com.vaadin.tests.application;

import java.util.ArrayList;
import java.util.List;

import com.vaadin.server.VaadinRequest;
import com.vaadin.tests.components.AbstractTestUIWithLog;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Label;

public class DetachOldUIOnReload extends AbstractTestUIWithLog {
    private static final String PERSISTENT_MESSAGES_ATTRIBUTE = DetachOldUIOnReload.class
            .getName() + "".sessionMessages"";

    @Override
    protected void setup(VaadinRequest request) {
        addComponent(new Label(""This is UI "" + getUIId()));
        addComponent(new Button(""Reload page"", new Button.ClickListener() {
            @Override
            public void buttonClick(ClickEvent event) {
                getPage().reload();
            }
        }));
        addComponent(new Button(""Read log messages from session"",
                new Button.ClickListener() {
                    @Override
                    public void buttonClick(ClickEvent event) {
                        for (String message : getSessionMessages(false)) {
                            log(message);
                        }
                    }
                }));
    }

    private List<String> getSessionMessages(boolean storeIfNeeded) {
        @SuppressWarnings(""unchecked"")
        List<String> messages = (List<String>) getSession()
                .getAttribute(PERSISTENT_MESSAGES_ATTRIBUTE);
        if (messages == null) {
            messages = new ArrayList<>();
            if (storeIfNeeded) {
                getSession().setAttribute(PERSISTENT_MESSAGES_ATTRIBUTE,
                        messages);
            }
        }
        return messages;
    }

    private void logToSession(String message) {
        getSessionMessages(true).add(message);
    }

    @Override
    public void detach() {
        super.detach();
        logToSession(""UI "" + getUIId() + "" has been detached"");
    }

    @Override
    protected String getTestDescription() {
        return ""Tests that the previous UI gets cleaned immediately when refreshing."";
    }

    @Override
    protected Integer getTicketNumber() {
        return Integer.valueOf(10338);
    }

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '2000-2016', 'Vaadin', 'Ltd.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', 'you', 'may', 'not', '*', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', 'You', 'may', 'obtain', 'a', 'copy', 'of', '*', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', 'WITHOUT', '*', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', 'See', 'the', '*', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', 'limitations', 'under', '*', 'the', 'License.', '*/', 'package', 'com.vaadin.tests.application;', 'import', 'java.util.ArrayList;', 'import', 'java.util.List;', 'import', 'com.vaadin.server.VaadinRequest;', 'import', 'com.vaadin.tests.components.AbstractTestUIWithLog;', 'import', 'com.vaadin.ui.Button;', 'import', 'com.vaadin.ui.Button.ClickEvent;', 'import', 'com.vaadin.ui.Label;', 'public', 'class', 'DetachOldUIOnReload', 'extends', 'AbstractTestUIWithLog', '{', 'private', 'static', 'final', 'String', 'PERSISTENT_MESSAGES_ATTRIBUTE', '=', 'DetachOldUIOnReload.class', '.getName()', '+', '"".sessionMessages"";', '@Override', 'protected', 'void', 'setup(VaadinRequest', 'request)', '{', 'addComponent(new', 'Label(""This', 'is', 'UI', '""', '+', 'getUIId()));', 'addComponent(new', 'Button(""Reload', 'page"",', 'new', 'Button.ClickListener()', '{', '@Override', 'public', 'void', 'buttonClick(ClickEvent', 'event)', '{', 'getPage().reload();', '}', '}));', 'addComponent(new', 'Button(""Read', 'log', 'messages', 'from', 'session"",', 'new', 'Button.ClickListener()', '{', '@Override', 'public', 'void', 'buttonClick(ClickEvent', 'event)', '{', 'for', '(String', 'message', ':', 'getSessionMessages(false))', '{', 'log(message);', '}', '}', '}));', '}', 'private', 'List<String>', 'getSessionMessages(boolean', 'storeIfNeeded)', '{', '@SuppressWarnings(""unchecked"")', 'List<String>', 'messages', '=', '(List<String>)', 'getSession()', '.getAttribute(PERSISTENT_MESSAGES_ATTRIBUTE);', 'if', '(messages', '==', 'null)', '{', 'messages', '=', 'new', 'ArrayList<>();', 'if', '(storeIfNeeded)', '{', 'getSession().setAttribute(PERSISTENT_MESSAGES_ATTRIBUTE,', 'messages);', '}', '}', 'return', 'messages;', '}', 'private', 'void', 'logToSession(String', 'message)', '{', 'getSessionMessages(true).add(message);', '}', '@Override', 'public', 'void', 'detach()', '{', 'super.detach();', 'logToSession(""UI', '""', '+', 'getUIId()', '+', '""', 'has', 'been', 'detached"");', '}', '@Override', 'protected', 'String', 'getTestDescription()', '{', 'return', '""Tests', 'that', 'the', 'previous', 'UI', 'gets', 'cleaned', 'immediately', 'when', 'refreshing."";', '}', '@Override', 'protected', 'Integer', 'getTicketNumber()', '{', 'return', 'Integer.valueOf(10338);', '}', '}', '```']",challenge not surrounded by ''': ,
"// Copyright (c) 2012 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

var expectedText = 'def';

function truncateAndWriteToFile(writableEntry, callback) {
  writableEntry.createWriter(function(fileWriter) {
    fileWriter.onerror = function(e) {
      console.error(""Couldn't write file: "" + e.toString());
    };
    fileWriter.onwriteend = function(e) {
      fileWriter.onwriteend = function(e) {
        callback();
      };
      var blob = new Blob([expectedText], {type: 'text/plain'});
      fileWriter.write(blob);
    };
    fileWriter.truncate(0);
  });
}

chrome.app.runtime.onLaunched.addListener(function() {
  chrome.app.window.create('index.html', {width: 100, height: 100},
      function(win) {
    var fs = win.contentWindow.chrome.fileSystem;
    fs.chooseEntry({type: 'openFile'}, function(entry) {
      fs.getWritableEntry(entry, function(writableEntry) {
        var id = fs.retainEntry(entry);
        chrome.storage.local.set({id:id}, function() {
          truncateAndWriteToFile(writableEntry, function() {
            chrome.test.sendMessage('fileWritten');
            win.close();
          });
        });
      });
    });
  });
});

chrome.app.runtime.onRestarted.addListener(function() {
  chrome.storage.local.get(null, function(data) {
    chrome.fileSystem.restoreEntry(data.id, function(entry) {
      if (!entry) {
        console.error(""couldn't get file entry "" + data.id);
        return;
      }
      entry.file(function(file) {
        var fr = new FileReader();
        fr.onload = function(e) {
          if (e.target.result != expectedText) {
            console.error(""expected '"" + expectedText + ""', got '"" +
              e.target.result + ""'"");
            return;
          }
          entry.createWriter(function(fileWriter) {
            fileWriter.onwriteend = function(e) {
              chrome.test.sendMessage('restartedFileAccessOK');
              win.close();
            };
            fileWriter.onerror = function(e) {
              console.error('Write failed: ' + e.toString());
            };
            var blob = new Blob([""doesn't matter""], {type: 'text/plain'});
            fileWriter.write(blob);
          });
        };
        fr.onerror = function(e) {
          chrome.test.fail(""error reading file"");
        };
        fr.readAsText(file);
      });
    });
  });
});
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//', 'Copyright', '(c)', '2012', 'The', 'Chromium', 'Authors.', 'All', 'rights', 'reserved.', '//', 'Use', 'of', 'this', 'source', 'code', 'is', 'governed', 'by', 'a', 'BSD-style', 'license', 'that', 'can', 'be', '//', 'found', 'in', 'the', 'LICENSE', 'file.', 'var', 'expectedText', '=', ""'def';"", 'function', 'truncateAndWriteToFile(writableEntry,', 'callback)', '{', 'writableEntry.createWriter(function(fileWriter)', '{', 'fileWriter.onerror', '=', 'function(e)', '{', 'console.error(""Couldn\'t', 'write', 'file:', '""', '+', 'e.toString());', '};', 'fileWriter.onwriteend', '=', 'function(e)', '{', 'fileWriter.onwriteend', '=', 'function(e)', '{', 'callback();', '};', 'var', 'blob', '=', 'new', 'Blob([expectedText],', '{type:', ""'text/plain'});"", 'fileWriter.write(blob);', '};', 'fileWriter.truncate(0);', '});', '}', 'chrome.app.runtime.onLaunched.addListener(function()', '{', ""chrome.app.window.create('index.html',"", '{width:', '100,', 'height:', '100},', 'function(win)', '{', 'var', 'fs', '=', 'win.contentWindow.chrome.fileSystem;', 'fs.chooseEntry({type:', ""'openFile'},"", 'function(entry)', '{', 'fs.getWritableEntry(entry,', 'function(writableEntry)', '{', 'var', 'id', '=', 'fs.retainEntry(entry);', 'chrome.storage.local.set({id:id},', 'function()', '{', 'truncateAndWriteToFile(writableEntry,', 'function()', '{', ""chrome.test.sendMessage('fileWritten');"", 'win.close();', '});', '});', '});', '});', '});', '});', 'chrome.app.runtime.onRestarted.addListener(function()', '{', 'chrome.storage.local.get(null,', 'function(data)', '{', 'chrome.fileSystem.restoreEntry(data.id,', 'function(entry)', '{', 'if', '(!entry)', '{', 'console.error(""couldn\'t', 'get', 'file', 'entry', '""', '+', 'data.id);', 'return;', '}', 'entry.file(function(file)', '{', 'var', 'fr', '=', 'new', 'FileReader();', 'fr.onload', '=', 'function(e)', '{', 'if', '(e.target.result', '!=', 'expectedText)', '{', 'console.error(""expected', '\'""', '+', 'expectedText', '+', '""\',', 'got', '\'""', '+', 'e.target.result', '+', '""\'"");', 'return;', '}', 'entry.createWriter(function(fileWriter)', '{', 'fileWriter.onwriteend', '=', 'function(e)', '{', ""chrome.test.sendMessage('restartedFileAccessOK');"", 'win.close();', '};', 'fileWriter.onerror', '=', 'function(e)', '{', ""console.error('Write"", 'failed:', ""'"", '+', 'e.toString());', '};', 'var', 'blob', '=', 'new', 'Blob([""doesn\'t', 'matter""],', '{type:', ""'text/plain'});"", 'fileWriter.write(blob);', '});', '};', 'fr.onerror', '=', 'function(e)', '{', 'chrome.test.fail(""error', 'reading', 'file"");', '};', 'fr.readAsText(file);', '});', '});', '});', '});', '```']",challenge not surrounded by ''': ,
"source_sh ${srcdir}/emulparams/elf32ltsmipn32.sh
source_sh ${srcdir}/emulparams/elf_fbsd.sh
OUTPUT_FORMAT=""elf32-ntradbigmips-freebsd""
BIG_OUTPUT_FORMAT=""elf32-ntradbigmips-freebsd""
LITTLE_OUTPUT_FORMAT=""elf32-ntradlittlemips-freebsd""
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```source_sh', '${srcdir}/emulparams/elf32ltsmipn32.sh', 'source_sh', '${srcdir}/emulparams/elf_fbsd.sh', 'OUTPUT_FORMAT=""elf32-ntradbigmips-freebsd""', 'BIG_OUTPUT_FORMAT=""elf32-ntradbigmips-freebsd""', 'LITTLE_OUTPUT_FORMAT=""elf32-ntradlittlemips-freebsd""', '```']",challenge not surrounded by ''': ,
"const debug = require('ghost-ignition').debug('api:v2:utils:serializers:output:images');
const mapper = require('./utils/mapper');

module.exports = {
    upload(path, apiConfig, frame) {
        debug('upload');

        return frame.response = {
            images: [{
                url: mapper.mapImage(path),
                ref: frame.data.ref || null
            }]
        };
    }
};
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```const', 'debug', '=', ""require('ghost-ignition').debug('api:v2:utils:serializers:output:images');"", 'const', 'mapper', '=', ""require('./utils/mapper');"", 'module.exports', '=', '{', 'upload(path,', 'apiConfig,', 'frame)', '{', ""debug('upload');"", 'return', 'frame.response', '=', '{', 'images:', '[{', 'url:', 'mapper.mapImage(path),', 'ref:', 'frame.data.ref', '||', 'null', '}]', '};', '}', '};', '```']",challenge not surrounded by ''': ,
"/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * ""License""); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.apache.flink.sql.parser;

import org.apache.calcite.sql.SqlLiteral;
import org.apache.calcite.sql.SqlNode;
import org.apache.calcite.sql.SqlNodeList;
import org.apache.calcite.util.NlsString;

import java.util.LinkedHashMap;

/** Utils methods for partition DDLs. */
public class SqlPartitionUtils {

    private SqlPartitionUtils() {}

    /**
     * Get static partition key value pair as strings.
     *
     * <p>For character literals we return the unquoted and unescaped values. For other types we use
     * {@link SqlLiteral#toString()} to get the string format of the value literal.
     *
     * @return the mapping of column names to values of partition specifications, returns an empty
     *     map if there is no partition specifications.
     */
    public static LinkedHashMap<String, String> getPartitionKVs(SqlNodeList partitionSpec) {
        if (partitionSpec == null) {
            return null;
        }
        LinkedHashMap<String, String> ret = new LinkedHashMap<>();
        if (partitionSpec.size() == 0) {
            return ret;
        }
        for (SqlNode node : partitionSpec.getList()) {
            SqlProperty sqlProperty = (SqlProperty) node;
            Comparable comparable = SqlLiteral.value(sqlProperty.getValue());
            String value =
                    comparable instanceof NlsString
                            ? ((NlsString) comparable).getValue()
                            : comparable.toString();
            ret.put(sqlProperty.getKey().getSimple(), value);
        }
        return ret;
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Licensed', 'to', 'the', 'Apache', 'Software', 'Foundation', '(ASF)', 'under', 'one', '*', 'or', 'more', 'contributor', 'license', 'agreements.', 'See', 'the', 'NOTICE', 'file', '*', 'distributed', 'with', 'this', 'work', 'for', 'additional', 'information', '*', 'regarding', 'copyright', 'ownership.', 'The', 'ASF', 'licenses', 'this', 'file', '*', 'to', 'you', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '*', '""License"");', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', '*', 'with', 'the', 'License.', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'org.apache.flink.sql.parser;', 'import', 'org.apache.calcite.sql.SqlLiteral;', 'import', 'org.apache.calcite.sql.SqlNode;', 'import', 'org.apache.calcite.sql.SqlNodeList;', 'import', 'org.apache.calcite.util.NlsString;', 'import', 'java.util.LinkedHashMap;', '/**', 'Utils', 'methods', 'for', 'partition', 'DDLs.', '*/', 'public', 'class', 'SqlPartitionUtils', '{', 'private', 'SqlPartitionUtils()', '{}', '/**', '*', 'Get', 'static', 'partition', 'key', 'value', 'pair', 'as', 'strings.', '*', '*', '<p>For', 'character', 'literals', 'we', 'return', 'the', 'unquoted', 'and', 'unescaped', 'values.', 'For', 'other', 'types', 'we', 'use', '*', '{@link', 'SqlLiteral#toString()}', 'to', 'get', 'the', 'string', 'format', 'of', 'the', 'value', 'literal.', '*', '*', '@return', 'the', 'mapping', 'of', 'column', 'names', 'to', 'values', 'of', 'partition', 'specifications,', 'returns', 'an', 'empty', '*', 'map', 'if', 'there', 'is', 'no', 'partition', 'specifications.', '*/', 'public', 'static', 'LinkedHashMap<String,', 'String>', 'getPartitionKVs(SqlNodeList', 'partitionSpec)', '{', 'if', '(partitionSpec', '==', 'null)', '{', 'return', 'null;', '}', 'LinkedHashMap<String,', 'String>', 'ret', '=', 'new', 'LinkedHashMap<>();', 'if', '(partitionSpec.size()', '==', '0)', '{', 'return', 'ret;', '}', 'for', '(SqlNode', 'node', ':', 'partitionSpec.getList())', '{', 'SqlProperty', 'sqlProperty', '=', '(SqlProperty)', 'node;', 'Comparable', 'comparable', '=', 'SqlLiteral.value(sqlProperty.getValue());', 'String', 'value', '=', 'comparable', 'instanceof', 'NlsString', '?', '((NlsString)', 'comparable).getValue()', ':', 'comparable.toString();', 'ret.put(sqlProperty.getKey().getSimple(),', 'value);', '}', 'return', 'ret;', '}', '}', '```']",challenge not surrounded by ''': ,
"/*
 * Zed Attack Proxy (ZAP) and its related class files.
 *
 * ZAP is an HTTP/HTTPS proxy for assessing web application security.
 *
 * Copyright 2012 The ZAP Development Team
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.zaproxy.zap.extension.httppanel.view.impl.models.http.request;

import org.zaproxy.zap.extension.httppanel.view.impl.models.http.AbstractHttpStringHttpPanelViewModel;

public class RequestBodyStringHttpPanelViewModel extends AbstractHttpStringHttpPanelViewModel {

    @Override
    public String getData() {
        if (httpMessage == null) {
            return """";
        }

        return httpMessage.getRequestBody().toString();
    }

    @Override
    public void setData(String data) {
        if (httpMessage == null) {
            return;
        }

        httpMessage.getRequestBody().setBody(data);
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Zed', 'Attack', 'Proxy', '(ZAP)', 'and', 'its', 'related', 'class', 'files.', '*', '*', 'ZAP', 'is', 'an', 'HTTP/HTTPS', 'proxy', 'for', 'assessing', 'web', 'application', 'security.', '*', '*', 'Copyright', '2012', 'The', 'ZAP', 'Development', 'Team', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'org.zaproxy.zap.extension.httppanel.view.impl.models.http.request;', 'import', 'org.zaproxy.zap.extension.httppanel.view.impl.models.http.AbstractHttpStringHttpPanelViewModel;', 'public', 'class', 'RequestBodyStringHttpPanelViewModel', 'extends', 'AbstractHttpStringHttpPanelViewModel', '{', '@Override', 'public', 'String', 'getData()', '{', 'if', '(httpMessage', '==', 'null)', '{', 'return', '"""";', '}', 'return', 'httpMessage.getRequestBody().toString();', '}', '@Override', 'public', 'void', 'setData(String', 'data)', '{', 'if', '(httpMessage', '==', 'null)', '{', 'return;', '}', 'httpMessage.getRequestBody().setBody(data);', '}', '}', '```']",challenge not surrounded by ''': ,
"class Solution {
public:
    int maximumGap(vector<int>& nums) {
        if(nums.size()<2) return 0;
        int ans=INT_MIN,minn=nums[0],maxn=nums[0];
        for(int i=1;i<nums.size();i++){
            minn=min(minn,nums[i]);
            maxn=max(maxn,nums[i]);
        }
        int buc_size=max(1,(maxn-minn)/(int(nums.size())-1));
        int buc_num=(maxn-minn)/buc_size+1;
        vector<int> bucmin(buc_num,INT_MAX);
        vector<int> bucmax(buc_num,INT_MIN);
        vector<int> buccount(buc_num,0);
        for(int i=0;i<nums.size();i++){
            int bucid=(nums[i]-minn)/buc_size;
            buccount[bucid]++;
            bucmin[bucid]=min(bucmin[bucid],nums[i]);
            bucmax[bucid]=max(bucmax[bucid],nums[i]);
        }
        int pre=minn;
        for(int i=0;i<buc_num;i++){
            if(buccount[i]==0) continue;
            ans=max(ans,bucmin[i]-pre);
            pre=bucmax[i];
        }
        return ans;
    }
};
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```class', 'Solution', '{', 'public:', 'int', 'maximumGap(vector<int>&', 'nums)', '{', 'if(nums.size()<2)', 'return', '0;', 'int', 'ans=INT_MIN,minn=nums[0],maxn=nums[0];', 'for(int', 'i=1;i<nums.size();i++){', 'minn=min(minn,nums[i]);', 'maxn=max(maxn,nums[i]);', '}', 'int', 'buc_size=max(1,(maxn-minn)/(int(nums.size())-1));', 'int', 'buc_num=(maxn-minn)/buc_size+1;', 'vector<int>', 'bucmin(buc_num,INT_MAX);', 'vector<int>', 'bucmax(buc_num,INT_MIN);', 'vector<int>', 'buccount(buc_num,0);', 'for(int', 'i=0;i<nums.size();i++){', 'int', 'bucid=(nums[i]-minn)/buc_size;', 'buccount[bucid]++;', 'bucmin[bucid]=min(bucmin[bucid],nums[i]);', 'bucmax[bucid]=max(bucmax[bucid],nums[i]);', '}', 'int', 'pre=minn;', 'for(int', 'i=0;i<buc_num;i++){', 'if(buccount[i]==0)', 'continue;', 'ans=max(ans,bucmin[i]-pre);', 'pre=bucmax[i];', '}', 'return', 'ans;', '}', '};', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE html>
<html
	lang=""{{ site.lang | default: 'en' }}""
	dir=""{{ site.dir | default: 'ltr' }}""
	class=""no-js scroll-smooth""
	itemtype=""{{ page.itemtype | default: 'http://schema.org/WebPage' }}""
	itemscope=""""
	{% if site.service_worker %}data-service-worker=""{{site.service_worker | absolute_url }}""{% endif %}
	data-support-test=""details, dialog, cssvars""
	{% if site.google-analytics %}data-google-analytics=""{{ site.google-analytics }}""{% endif %}
	{% if page.ads %}data-ad-sense-id=""{{ site.ad-sense }}""{% endif %}
	{% if page.pageLevelAds %}data-page-level-ads=""{{ page.pageLevelAds }}""{% endif %}
>
	{% include head.html %}
	<body
		id=""top""
		class=""layout-{{ page.layout }} {{ site.body-class }}""
		contextmenu=""{{ page.contextmenu | default: site.contextmenu }}""
		{% if page.itemprop and page.itemtype %}
			itemprop=""{{ page.itemprop }}""
			itemtype=""{{ page.itemtype }}""
			itemscope=""""
		{% endif %}
	>
		{% include share-button.html %}
		{% include header.html %}
		{% include nav.html %}
		<main class=""color-default font-article card shadow-dark"" role=""main"" itemprop=""mainContentOfPage"">
			{{ content }}
			{% if page.ads %}{% include ad.html %}{% endif %}
		</main>
		{% include pinned-posts.html count=5 %}
		{% include calendar.html %}
		{% include footer.html %}
		{% include nav-menu.html %}
		{% include about-dialog.html %}
	</body>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'html>', '<html', 'lang=""{{', 'site.lang', '|', 'default:', ""'en'"", '}}""', 'dir=""{{', 'site.dir', '|', 'default:', ""'ltr'"", '}}""', 'class=""no-js', 'scroll-smooth""', 'itemtype=""{{', 'page.itemtype', '|', 'default:', ""'http://schema.org/WebPage'"", '}}""', 'itemscope=""""', '{%', 'if', 'site.service_worker', '%}data-service-worker=""{{site.service_worker', '|', 'absolute_url', '}}""{%', 'endif', '%}', 'data-support-test=""details,', 'dialog,', 'cssvars""', '{%', 'if', 'site.google-analytics', '%}data-google-analytics=""{{', 'site.google-analytics', '}}""{%', 'endif', '%}', '{%', 'if', 'page.ads', '%}data-ad-sense-id=""{{', 'site.ad-sense', '}}""{%', 'endif', '%}', '{%', 'if', 'page.pageLevelAds', '%}data-page-level-ads=""{{', 'page.pageLevelAds', '}}""{%', 'endif', '%}', '>', '{%', 'include', 'head.html', '%}', '<body', 'id=""top""', 'class=""layout-{{', 'page.layout', '}}', '{{', 'site.body-class', '}}""', 'contextmenu=""{{', 'page.contextmenu', '|', 'default:', 'site.contextmenu', '}}""', '{%', 'if', 'page.itemprop', 'and', 'page.itemtype', '%}', 'itemprop=""{{', 'page.itemprop', '}}""', 'itemtype=""{{', 'page.itemtype', '}}""', 'itemscope=""""', '{%', 'endif', '%}', '>', '{%', 'include', 'share-button.html', '%}', '{%', 'include', 'header.html', '%}', '{%', 'include', 'nav.html', '%}', '<main', 'class=""color-default', 'font-article', 'card', 'shadow-dark""', 'role=""main""', 'itemprop=""mainContentOfPage"">', '{{', 'content', '}}', '{%', 'if', 'page.ads', '%}{%', 'include', 'ad.html', '%}{%', 'endif', '%}', '</main>', '{%', 'include', 'pinned-posts.html', 'count=5', '%}', '{%', 'include', 'calendar.html', '%}', '{%', 'include', 'footer.html', '%}', '{%', 'include', 'nav-menu.html', '%}', '{%', 'include', 'about-dialog.html', '%}', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"package net.linkedbuildingdata.common.digest;

import java.security.InvalidParameterException;

import net.linkedbuildingdata.common.string.RegexUtils;

import org.apache.commons.codec.digest.DigestUtils;


public enum EncoderTypeEnum {
	None,
	MD5,
	Base64,
	Base64SafeUrl,
	SafeUrl;
	
	public static String encode(EncoderTypeEnum encoderType, String s) {
		if (encoderType == None) {
			return s;
		} else if (encoderType == MD5) {
			return DigestUtils.md5Hex(s);
		} else if (encoderType == Base64) {
			return org.apache.commons.codec.binary.Base64.encodeBase64String(s.getBytes());
		} else if (encoderType == Base64SafeUrl) {
			return org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString(s.getBytes());			
		} else if (encoderType == SafeUrl) {
			return RegexUtils.getHtmlSafeName(s);
		}
		throw new InvalidParameterException(""encoderType"");
	}
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'net.linkedbuildingdata.common.digest;', 'import', 'java.security.InvalidParameterException;', 'import', 'net.linkedbuildingdata.common.string.RegexUtils;', 'import', 'org.apache.commons.codec.digest.DigestUtils;', 'public', 'enum', 'EncoderTypeEnum', '{', 'None,', 'MD5,', 'Base64,', 'Base64SafeUrl,', 'SafeUrl;', 'public', 'static', 'String', 'encode(EncoderTypeEnum', 'encoderType,', 'String', 's)', '{', 'if', '(encoderType', '==', 'None)', '{', 'return', 's;', '}', 'else', 'if', '(encoderType', '==', 'MD5)', '{', 'return', 'DigestUtils.md5Hex(s);', '}', 'else', 'if', '(encoderType', '==', 'Base64)', '{', 'return', 'org.apache.commons.codec.binary.Base64.encodeBase64String(s.getBytes());', '}', 'else', 'if', '(encoderType', '==', 'Base64SafeUrl)', '{', 'return', 'org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString(s.getBytes());', '}', 'else', 'if', '(encoderType', '==', 'SafeUrl)', '{', 'return', 'RegexUtils.getHtmlSafeName(s);', '}', 'throw', 'new', 'InvalidParameterException(""encoderType"");', '}', '}', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright 2017-present Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License""); you may
 * not use this file except in compliance with the License. You may obtain
 * a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */

package com.facebook.buck.jvm.java;

import com.facebook.buck.core.rulekey.AddToRuleKey;
import com.facebook.buck.core.rulekey.AddsToRuleKey;
import com.facebook.buck.core.rules.BuildRule;
import com.facebook.buck.core.rules.SourcePathRuleFinder;
import com.facebook.buck.core.sourcepath.SourcePath;
import com.facebook.buck.jvm.core.JavaLibrary;
import com.google.common.collect.ImmutableSortedSet;
import java.util.Optional;
import javax.annotation.Nullable;

public class JarBackedJavacProvider implements JavacProvider, AddsToRuleKey {
  @AddToRuleKey private final SourcePath javacJarPath;
  @AddToRuleKey private final String compilerClassName;
  @AddToRuleKey private final Javac.Location javacLocation;

  // This is just used to cache the Javac derived from the other fields.
  @Nullable private Javac javac;

  public JarBackedJavacProvider(
      SourcePath javacJarPath, String compilerClassName, Javac.Location javacLocation) {
    this.javacJarPath = javacJarPath;
    this.compilerClassName = compilerClassName;
    this.javacLocation = javacLocation;
  }

  @Override
  public Javac resolve(SourcePathRuleFinder ruleFinder) {
    if (javac == null) {
      ImmutableSortedSet.Builder<SourcePath> builder = ImmutableSortedSet.naturalOrder();
      builder.add(javacJarPath);

      // Add transitive deps if any exist so that everything needed is available
      Optional<BuildRule> possibleRule = ruleFinder.getRule(javacJarPath);
      if (possibleRule.isPresent() && possibleRule.get() instanceof JavaLibrary) {
        JavaLibrary compilerLibrary = (JavaLibrary) possibleRule.get();
        builder.addAll(compilerLibrary.getTransitiveClasspaths());
      }

      ImmutableSortedSet<SourcePath> fullJavacClasspath = builder.build();

      switch (javacLocation) {
        case IN_PROCESS:
          javac = new JarBackedJavac(compilerClassName, fullJavacClasspath);
          break;
        default:
          throw new AssertionError(""Unknown javac location: "" + javacLocation);
      }
    }

    return javac;
  }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '2017-present', 'Facebook,', 'Inc.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', 'you', 'may', '*', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', 'You', 'may', 'obtain', '*', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', 'WITHOUT', '*', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', 'See', 'the', '*', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', 'limitations', '*', 'under', 'the', 'License.', '*/', 'package', 'com.facebook.buck.jvm.java;', 'import', 'com.facebook.buck.core.rulekey.AddToRuleKey;', 'import', 'com.facebook.buck.core.rulekey.AddsToRuleKey;', 'import', 'com.facebook.buck.core.rules.BuildRule;', 'import', 'com.facebook.buck.core.rules.SourcePathRuleFinder;', 'import', 'com.facebook.buck.core.sourcepath.SourcePath;', 'import', 'com.facebook.buck.jvm.core.JavaLibrary;', 'import', 'com.google.common.collect.ImmutableSortedSet;', 'import', 'java.util.Optional;', 'import', 'javax.annotation.Nullable;', 'public', 'class', 'JarBackedJavacProvider', 'implements', 'JavacProvider,', 'AddsToRuleKey', '{', '@AddToRuleKey', 'private', 'final', 'SourcePath', 'javacJarPath;', '@AddToRuleKey', 'private', 'final', 'String', 'compilerClassName;', '@AddToRuleKey', 'private', 'final', 'Javac.Location', 'javacLocation;', '//', 'This', 'is', 'just', 'used', 'to', 'cache', 'the', 'Javac', 'derived', 'from', 'the', 'other', 'fields.', '@Nullable', 'private', 'Javac', 'javac;', 'public', 'JarBackedJavacProvider(', 'SourcePath', 'javacJarPath,', 'String', 'compilerClassName,', 'Javac.Location', 'javacLocation)', '{', 'this.javacJarPath', '=', 'javacJarPath;', 'this.compilerClassName', '=', 'compilerClassName;', 'this.javacLocation', '=', 'javacLocation;', '}', '@Override', 'public', 'Javac', 'resolve(SourcePathRuleFinder', 'ruleFinder)', '{', 'if', '(javac', '==', 'null)', '{', 'ImmutableSortedSet.Builder<SourcePath>', 'builder', '=', 'ImmutableSortedSet.naturalOrder();', 'builder.add(javacJarPath);', '//', 'Add', 'transitive', 'deps', 'if', 'any', 'exist', 'so', 'that', 'everything', 'needed', 'is', 'available', 'Optional<BuildRule>', 'possibleRule', '=', 'ruleFinder.getRule(javacJarPath);', 'if', '(possibleRule.isPresent()', '&&', 'possibleRule.get()', 'instanceof', 'JavaLibrary)', '{', 'JavaLibrary', 'compilerLibrary', '=', '(JavaLibrary)', 'possibleRule.get();', 'builder.addAll(compilerLibrary.getTransitiveClasspaths());', '}', 'ImmutableSortedSet<SourcePath>', 'fullJavacClasspath', '=', 'builder.build();', 'switch', '(javacLocation)', '{', 'case', 'IN_PROCESS:', 'javac', '=', 'new', 'JarBackedJavac(compilerClassName,', 'fullJavacClasspath);', 'break;', 'default:', 'throw', 'new', 'AssertionError(""Unknown', 'javac', 'location:', '""', '+', 'javacLocation);', '}', '}', 'return', 'javac;', '}', '}', '```']",challenge not surrounded by ''': ,
"const uuidV1 = require('uuid/v1');
const {checkToken} = require(""./helpers/auth"")
const config = require('./helpers/config.js') 

const Cryptr = require('cryptr'),
    cryptr = new Cryptr(config.auth.secret);


class Users {

  constructor() {
    this.assignFields = this.assignFields.bind(this);
  }

  assignFields(app, pg) {


    app.get('/users', async (req, res, next) => {

      if(req.headers.authorization) {
        checkToken('777', pg, req.headers.authorization, async (user) => {

          const list = await pg.select(['roles', 'status', 'mail', 'uuid', 'mail']).table('users').where({'organisation': user.organisation.uuid});
          const roles = await pg.select().table('roles').where({'organisationID': user.organisation.uuid});
          const searchable = {}
          for(let i = 0; i < roles.length; i++) {
            searchable[roles[i].uuid] = roles[i].type;
          }
          list.map((index, key) => {

            const cur = index[""roles""][""roles""]
            index['roles'] = [];
            for(let j = 0; j<cur.length; j++) {
              index['roles'].push(searchable[cur[j].uuid])
            }
            return index
          })
          res.send(list)
        }, res)
      } else {
        res.send(400)
      }
    })


    app.get('/users/all', async (req, res, next) => {
      await pg.select().table(""users"").then(function(r) {
        res.send(r)
      })
    })



    app.delete('/users', async (req, res, next) => {
      await pg(""users"").where({uuid: req.body.uuid}).del().then(function(r) {
        res.send(200)
      })
    })

    app.post('/users/list', async (req, res, next) => {
      const request = req.body;

      request[""uuid""] = uuidV1();
      await pg(""users"").insert(request).then(function() {
        res.send({ uuid: request['uuid']})
      })
    })

    app.post('/users', async (req, res, next) => {
      const request = req.body;
      request[""uuid""] = uuidV1();
      const userRole = await pg(""roles"").select(""uuid"").where({ type: ""USER"", organisationID: req.body.organisation});
      request[""roles""] = { roles: userRole }

      request[""password""] = cryptr.encrypt(req.body.password);

      await pg(""users"").insert(request).then(function() {
        res.send({ uuid: request['uuid']})
      })
    })



    app.put('/users/:uuid/:organisationID', async (req, res, next) => {
      await pg(""users"").where({uuid: req.params.uuid}).update({organisation: req.params.organisationID}).then(function() {
        res.send({ uuid: req.params.uuid })
      })
    })

  }

}

module.exports = Users;
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```const', 'uuidV1', '=', ""require('uuid/v1');"", 'const', '{checkToken}', '=', 'require(""./helpers/auth"")', 'const', 'config', '=', ""require('./helpers/config.js')"", 'const', 'Cryptr', '=', ""require('cryptr'),"", 'cryptr', '=', 'new', 'Cryptr(config.auth.secret);', 'class', 'Users', '{', 'constructor()', '{', 'this.assignFields', '=', 'this.assignFields.bind(this);', '}', 'assignFields(app,', 'pg)', '{', ""app.get('/users',"", 'async', '(req,', 'res,', 'next)', '=>', '{', 'if(req.headers.authorization)', '{', ""checkToken('777',"", 'pg,', 'req.headers.authorization,', 'async', '(user)', '=>', '{', 'const', 'list', '=', 'await', ""pg.select(['roles',"", ""'status',"", ""'mail',"", ""'uuid',"", ""'mail']).table('users').where({'organisation':"", 'user.organisation.uuid});', 'const', 'roles', '=', 'await', ""pg.select().table('roles').where({'organisationID':"", 'user.organisation.uuid});', 'const', 'searchable', '=', '{}', 'for(let', 'i', '=', '0;', 'i', '<', 'roles.length;', 'i++)', '{', 'searchable[roles[i].uuid]', '=', 'roles[i].type;', '}', 'list.map((index,', 'key)', '=>', '{', 'const', 'cur', '=', 'index[""roles""][""roles""]', ""index['roles']"", '=', '[];', 'for(let', 'j', '=', '0;', 'j<cur.length;', 'j++)', '{', ""index['roles'].push(searchable[cur[j].uuid])"", '}', 'return', 'index', '})', 'res.send(list)', '},', 'res)', '}', 'else', '{', 'res.send(400)', '}', '})', ""app.get('/users/all',"", 'async', '(req,', 'res,', 'next)', '=>', '{', 'await', 'pg.select().table(""users"").then(function(r)', '{', 'res.send(r)', '})', '})', ""app.delete('/users',"", 'async', '(req,', 'res,', 'next)', '=>', '{', 'await', 'pg(""users"").where({uuid:', 'req.body.uuid}).del().then(function(r)', '{', 'res.send(200)', '})', '})', ""app.post('/users/list',"", 'async', '(req,', 'res,', 'next)', '=>', '{', 'const', 'request', '=', 'req.body;', 'request[""uuid""]', '=', 'uuidV1();', 'await', 'pg(""users"").insert(request).then(function()', '{', 'res.send({', 'uuid:', ""request['uuid']})"", '})', '})', ""app.post('/users',"", 'async', '(req,', 'res,', 'next)', '=>', '{', 'const', 'request', '=', 'req.body;', 'request[""uuid""]', '=', 'uuidV1();', 'const', 'userRole', '=', 'await', 'pg(""roles"").select(""uuid"").where({', 'type:', '""USER"",', 'organisationID:', 'req.body.organisation});', 'request[""roles""]', '=', '{', 'roles:', 'userRole', '}', 'request[""password""]', '=', 'cryptr.encrypt(req.body.password);', 'await', 'pg(""users"").insert(request).then(function()', '{', 'res.send({', 'uuid:', ""request['uuid']})"", '})', '})', ""app.put('/users/:uuid/:organisationID',"", 'async', '(req,', 'res,', 'next)', '=>', '{', 'await', 'pg(""users"").where({uuid:', 'req.params.uuid}).update({organisation:', 'req.params.organisationID}).then(function()', '{', 'res.send({', 'uuid:', 'req.params.uuid', '})', '})', '})', '}', '}', 'module.exports', '=', 'Users;', '```']",challenge not surrounded by ''': ,
"package org.slieb.soy.meta;

import javax.annotation.concurrent.Immutable;
import java.util.Map;
import java.util.function.Function;

@Immutable
public class MetaClassInformation extends MetaValueConvertableInformation {

    private final Map<String, MetaMemberInformation> membersInformation;

    private final Boolean useOriginalToString;

    public MetaClassInformation(Boolean dynamic,
                                Class<?> type,
                                Function<Object, ?> valueConverter,
                                Map<String, MetaMemberInformation> membersInformation,
                                Boolean useOriginalToString) {
        super(dynamic, type, valueConverter);
        this.membersInformation = membersInformation;
        this.useOriginalToString = useOriginalToString;
    }

    public final Map<String, MetaMemberInformation> getMembersInformation() {
        return membersInformation;
    }

    public final Boolean getUseOriginalToString() {
        return useOriginalToString;
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'org.slieb.soy.meta;', 'import', 'javax.annotation.concurrent.Immutable;', 'import', 'java.util.Map;', 'import', 'java.util.function.Function;', '@Immutable', 'public', 'class', 'MetaClassInformation', 'extends', 'MetaValueConvertableInformation', '{', 'private', 'final', 'Map<String,', 'MetaMemberInformation>', 'membersInformation;', 'private', 'final', 'Boolean', 'useOriginalToString;', 'public', 'MetaClassInformation(Boolean', 'dynamic,', 'Class<?>', 'type,', 'Function<Object,', '?>', 'valueConverter,', 'Map<String,', 'MetaMemberInformation>', 'membersInformation,', 'Boolean', 'useOriginalToString)', '{', 'super(dynamic,', 'type,', 'valueConverter);', 'this.membersInformation', '=', 'membersInformation;', 'this.useOriginalToString', '=', 'useOriginalToString;', '}', 'public', 'final', 'Map<String,', 'MetaMemberInformation>', 'getMembersInformation()', '{', 'return', 'membersInformation;', '}', 'public', 'final', 'Boolean', 'getUseOriginalToString()', '{', 'return', 'useOriginalToString;', '}', '}', '```']",challenge not surrounded by ''': ,
"'use strict';

exports.port = process.env.PORT || 3000;
exports.mongodb = {
  uri: process.env.MONGOLAB_URI || process.env.MONGOHQ_URL || 'mongodb://fjcarb:aardvark@ds017231.mlab.com:17231/carbajaleventsapp'
};
exports.companyName = 'Acme, Inc.';
exports.projectName = 'comevents';
exports.systemEmail = 'fjcarb@gmail.com';
exports.cryptoKey = 'k3yb0ardc4t';
exports.loginAttempts = {
  forIp: 50,
  forIpAndUser: 7,
  logExpiration: '20m'
};
exports.requireAccountVerification = false;
exports.smtp = {
  from: {
    name: process.env.SMTP_FROM_NAME || exports.projectName +' comevents',
    address: process.env.SMTP_FROM_ADDRESS || 'fjcarb@gmail.com'
  },
  credentials: {
    user: process.env.SMTP_USERNAME || 'fjcarb@gmail.com',
    password: process.env.SMTP_PASSWORD || 'jwai fpie oubw epdx',
    host: process.env.SMTP_HOST || 'smtp.gmail.com',
    tls: true
  }
};
exports.oauth = {
  twitter: {
    key: process.env.TWITTER_OAUTH_KEY || '',
    secret: process.env.TWITTER_OAUTH_SECRET || ''
  },
  facebook: {
    key: process.env.FACEBOOK_OAUTH_KEY || '',
    secret: process.env.FACEBOOK_OAUTH_SECRET || ''
  },
  github: {
    key: process.env.GITHUB_OAUTH_KEY || '',
    secret: process.env.GITHUB_OAUTH_SECRET || ''
  },
  google: {
    key: process.env.GOOGLE_OAUTH_KEY || '',
    secret: process.env.GOOGLE_OAUTH_SECRET || ''
  },
  tumblr: {
    key: process.env.TUMBLR_OAUTH_KEY || '',
    secret: process.env.TUMBLR_OAUTH_SECRET || ''
  }
};
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', ""```'use"", ""strict';"", 'exports.port', '=', 'process.env.PORT', '||', '3000;', 'exports.mongodb', '=', '{', 'uri:', 'process.env.MONGOLAB_URI', '||', 'process.env.MONGOHQ_URL', '||', ""'mongodb://fjcarb:aardvark@ds017231.mlab.com:17231/carbajaleventsapp'"", '};', 'exports.companyName', '=', ""'Acme,"", ""Inc.';"", 'exports.projectName', '=', ""'comevents';"", 'exports.systemEmail', '=', ""'fjcarb@gmail.com';"", 'exports.cryptoKey', '=', ""'k3yb0ardc4t';"", 'exports.loginAttempts', '=', '{', 'forIp:', '50,', 'forIpAndUser:', '7,', 'logExpiration:', ""'20m'"", '};', 'exports.requireAccountVerification', '=', 'false;', 'exports.smtp', '=', '{', 'from:', '{', 'name:', 'process.env.SMTP_FROM_NAME', '||', 'exports.projectName', ""+'"", ""comevents',"", 'address:', 'process.env.SMTP_FROM_ADDRESS', '||', ""'fjcarb@gmail.com'"", '},', 'credentials:', '{', 'user:', 'process.env.SMTP_USERNAME', '||', ""'fjcarb@gmail.com',"", 'password:', 'process.env.SMTP_PASSWORD', '||', ""'jwai"", 'fpie', 'oubw', ""epdx',"", 'host:', 'process.env.SMTP_HOST', '||', ""'smtp.gmail.com',"", 'tls:', 'true', '}', '};', 'exports.oauth', '=', '{', 'twitter:', '{', 'key:', 'process.env.TWITTER_OAUTH_KEY', '||', ""'',"", 'secret:', 'process.env.TWITTER_OAUTH_SECRET', '||', ""''"", '},', 'facebook:', '{', 'key:', 'process.env.FACEBOOK_OAUTH_KEY', '||', ""'',"", 'secret:', 'process.env.FACEBOOK_OAUTH_SECRET', '||', ""''"", '},', 'github:', '{', 'key:', 'process.env.GITHUB_OAUTH_KEY', '||', ""'',"", 'secret:', 'process.env.GITHUB_OAUTH_SECRET', '||', ""''"", '},', 'google:', '{', 'key:', 'process.env.GOOGLE_OAUTH_KEY', '||', ""'',"", 'secret:', 'process.env.GOOGLE_OAUTH_SECRET', '||', ""''"", '},', 'tumblr:', '{', 'key:', 'process.env.TUMBLR_OAUTH_KEY', '||', ""'',"", 'secret:', 'process.env.TUMBLR_OAUTH_SECRET', '||', ""''"", '}', '};', '```']",challenge not surrounded by ''': ,
"<HTML><HEAD><TITLE>DansGuardian - Acceso Denegado</TITLE></HEAD>
<BODY>
<CENTER><H2>EL ACCESO HA SIDO DENEGADO -USER-</H2>
<br>EL ACCESO A LA PAGINA: <P>
<strong><a href=""-URL-"">-URL-</a></strong>
<P>... ha sido denegado por la siguiente raz&oacute;n:<P>
<strong><font color=""#ff0000"">-REASONGIVEN-</font></strong>
<p><table border=1 bgcolor=""#FFEE00""><tr><td>Ud. esta viendo este mensaje de error porque la p&aacute;gina a la que<br>
intenta acceder contiene, o esta clasificada como conteniendo,<br>
material que se considera inapropiado.</td></tr></table>
<P><table border=1 bgcolor=""#44dd44""><tr><td>Si lo desea contacte al Administrador de Sistemas.</td></tr></table>

<P><font size=-3>Powered by <a href=""http://dansguardian.org"" target=""_blank"">DansGuardian</a></font>
</center>
</BODY>
</HTML>
<!--

Translated by Roberto Quiroga

The available variables are as follows:
- URL- gives the URL the user was trying to get to.
- REASONGIVEN- gives the nice reason (i.e. not quoting the banned phrase).
- REASONLOGGED- gives the reason that gets logged including full details.
- USER- gives the username if known.
- IP- gives the originating IP.
- FILTERGROUP- gives the group number.
- BYPASS- gives URL which allows temporary bypass of denied page


You need to remove the space between the - and the variable to use them
in your HTML.  They are there above so extra processing is not required.

More example templates are likely to be found on the DansGuardian web site
on the Extras page.

Daniel Barron 2002-03-27
--!>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<HTML><HEAD><TITLE>DansGuardian', '-', 'Acceso', 'Denegado</TITLE></HEAD>', '<BODY>', '<CENTER><H2>EL', 'ACCESO', 'HA', 'SIDO', 'DENEGADO', '-USER-</H2>', '<br>EL', 'ACCESO', 'A', 'LA', 'PAGINA:', '<P>', '<strong><a', 'href=""-URL-"">-URL-</a></strong>', '<P>...', 'ha', 'sido', 'denegado', 'por', 'la', 'siguiente', 'raz&oacute;n:<P>', '<strong><font', 'color=""#ff0000"">-REASONGIVEN-</font></strong>', '<p><table', 'border=1', 'bgcolor=""#FFEE00""><tr><td>Ud.', 'esta', 'viendo', 'este', 'mensaje', 'de', 'error', 'porque', 'la', 'p&aacute;gina', 'a', 'la', 'que<br>', 'intenta', 'acceder', 'contiene,', 'o', 'esta', 'clasificada', 'como', 'conteniendo,<br>', 'material', 'que', 'se', 'considera', 'inapropiado.</td></tr></table>', '<P><table', 'border=1', 'bgcolor=""#44dd44""><tr><td>Si', 'lo', 'desea', 'contacte', 'al', 'Administrador', 'de', 'Sistemas.</td></tr></table>', '<P><font', 'size=-3>Powered', 'by', '<a', 'href=""http://dansguardian.org""', 'target=""_blank"">DansGuardian</a></font>', '</center>', '</BODY>', '</HTML>', '<!--', 'Translated', 'by', 'Roberto', 'Quiroga', 'The', 'available', 'variables', 'are', 'as', 'follows:', '-', 'URL-', 'gives', 'the', 'URL', 'the', 'user', 'was', 'trying', 'to', 'get', 'to.', '-', 'REASONGIVEN-', 'gives', 'the', 'nice', 'reason', '(i.e.', 'not', 'quoting', 'the', 'banned', 'phrase).', '-', 'REASONLOGGED-', 'gives', 'the', 'reason', 'that', 'gets', 'logged', 'including', 'full', 'details.', '-', 'USER-', 'gives', 'the', 'username', 'if', 'known.', '-', 'IP-', 'gives', 'the', 'originating', 'IP.', '-', 'FILTERGROUP-', 'gives', 'the', 'group', 'number.', '-', 'BYPASS-', 'gives', 'URL', 'which', 'allows', 'temporary', 'bypass', 'of', 'denied', 'page', 'You', 'need', 'to', 'remove', 'the', 'space', 'between', 'the', '-', 'and', 'the', 'variable', 'to', 'use', 'them', 'in', 'your', 'HTML.', 'They', 'are', 'there', 'above', 'so', 'extra', 'processing', 'is', 'not', 'required.', 'More', 'example', 'templates', 'are', 'likely', 'to', 'be', 'found', 'on', 'the', 'DansGuardian', 'web', 'site', 'on', 'the', 'Extras', 'page.', 'Daniel', 'Barron', '2002-03-27', '--!>', '```']",challenge not surrounded by ''': ,
"<html><body>
<h4>Windows 10 x64 (18363.476)</h4><br>
<h2>_SECTION_IMAGE_INFORMATION</h2>
<font face=""arial"">   +0x000 TransferAddress  : Ptr64 Void<br>
   +0x008 ZeroBits         : Uint4B<br>
   +0x010 MaximumStackSize : Uint8B<br>
   +0x018 CommittedStackSize : Uint8B<br>
   +0x020 SubSystemType    : Uint4B<br>
   +0x024 SubSystemMinorVersion : Uint2B<br>
   +0x026 SubSystemMajorVersion : Uint2B<br>
   +0x024 SubSystemVersion : Uint4B<br>
   +0x028 MajorOperatingSystemVersion : Uint2B<br>
   +0x02a MinorOperatingSystemVersion : Uint2B<br>
   +0x028 OperatingSystemVersion : Uint4B<br>
   +0x02c ImageCharacteristics : Uint2B<br>
   +0x02e DllCharacteristics : Uint2B<br>
   +0x030 Machine          : Uint2B<br>
   +0x032 ImageContainsCode : UChar<br>
   +0x033 ImageFlags       : UChar<br>
   +0x033 ComPlusNativeReady : Pos 0, 1 Bit<br>
   +0x033 ComPlusILOnly    : Pos 1, 1 Bit<br>
   +0x033 ImageDynamicallyRelocated : Pos 2, 1 Bit<br>
   +0x033 ImageMappedFlat  : Pos 3, 1 Bit<br>
   +0x033 BaseBelow4gb     : Pos 4, 1 Bit<br>
   +0x033 ComPlusPrefer32bit : Pos 5, 1 Bit<br>
   +0x033 Reserved         : Pos 6, 2 Bits<br>
   +0x034 LoaderFlags      : Uint4B<br>
   +0x038 ImageFileSize    : Uint4B<br>
   +0x03c CheckSum         : Uint4B<br>
</font></body></html>","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<html><body>', '<h4>Windows', '10', 'x64', '(18363.476)</h4><br>', '<h2>_SECTION_IMAGE_INFORMATION</h2>', '<font', 'face=""arial"">', '+0x000', 'TransferAddress', ':', 'Ptr64', 'Void<br>', '+0x008', 'ZeroBits', ':', 'Uint4B<br>', '+0x010', 'MaximumStackSize', ':', 'Uint8B<br>', '+0x018', 'CommittedStackSize', ':', 'Uint8B<br>', '+0x020', 'SubSystemType', ':', 'Uint4B<br>', '+0x024', 'SubSystemMinorVersion', ':', 'Uint2B<br>', '+0x026', 'SubSystemMajorVersion', ':', 'Uint2B<br>', '+0x024', 'SubSystemVersion', ':', 'Uint4B<br>', '+0x028', 'MajorOperatingSystemVersion', ':', 'Uint2B<br>', '+0x02a', 'MinorOperatingSystemVersion', ':', 'Uint2B<br>', '+0x028', 'OperatingSystemVersion', ':', 'Uint4B<br>', '+0x02c', 'ImageCharacteristics', ':', 'Uint2B<br>', '+0x02e', 'DllCharacteristics', ':', 'Uint2B<br>', '+0x030', 'Machine', ':', 'Uint2B<br>', '+0x032', 'ImageContainsCode', ':', 'UChar<br>', '+0x033', 'ImageFlags', ':', 'UChar<br>', '+0x033', 'ComPlusNativeReady', ':', 'Pos', '0,', '1', 'Bit<br>', '+0x033', 'ComPlusILOnly', ':', 'Pos', '1,', '1', 'Bit<br>', '+0x033', 'ImageDynamicallyRelocated', ':', 'Pos', '2,', '1', 'Bit<br>', '+0x033', 'ImageMappedFlat', ':', 'Pos', '3,', '1', 'Bit<br>', '+0x033', 'BaseBelow4gb', ':', 'Pos', '4,', '1', 'Bit<br>', '+0x033', 'ComPlusPrefer32bit', ':', 'Pos', '5,', '1', 'Bit<br>', '+0x033', 'Reserved', ':', 'Pos', '6,', '2', 'Bits<br>', '+0x034', 'LoaderFlags', ':', 'Uint4B<br>', '+0x038', 'ImageFileSize', ':', 'Uint4B<br>', '+0x03c', 'CheckSum', ':', 'Uint4B<br>', '</font></body></html>```']",challenge not surrounded by ''': ,
"#!/usr/bin/env node
/**
 * @author David Spreekmeester <david@grrr.nl>
 */

const shell = require('shelljs')
const path  = require('path')
const spawn = require('child_process').spawn
const _     = require('lodash')

var dock = {

    /**
     * @param string    args        The arguments passed to the 'dock' subcommand
     * @param bool      execute     Whether to execute the command, or to return it
     *                              (for unit testing)
     */
    dock: function(args, execute = true) {
        /**
         * Strip off 'dock' subcommand
         */
        if (_.startsWith(args, 'dock ')) {
            args = args.substring(5)
        }

        var cmd = 'docker exec -it '
            + dock._stripDashes(dock._getDirName())
            + '_web_1 '
            + args

        if (execute) {
            return spawn('sh', ['-c', cmd], { stdio: 'inherit' })
        }

        return cmd
    },

    _stripDashes: function(str) {
        return str.replace('-', '')
    },

    _getDirName: function() {
        var pwd = shell.pwd().toString()
        var els = pwd.split(path.sep) 
        var dir = els[els.length - 1]
        return dir
    }
}

module.exports = dock.dock
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/usr/bin/env', 'node', '/**', '*', '@author', 'David', 'Spreekmeester', '<david@grrr.nl>', '*/', 'const', 'shell', '=', ""require('shelljs')"", 'const', 'path', '=', ""require('path')"", 'const', 'spawn', '=', ""require('child_process').spawn"", 'const', '_', '=', ""require('lodash')"", 'var', 'dock', '=', '{', '/**', '*', '@param', 'string', 'args', 'The', 'arguments', 'passed', 'to', 'the', ""'dock'"", 'subcommand', '*', '@param', 'bool', 'execute', 'Whether', 'to', 'execute', 'the', 'command,', 'or', 'to', 'return', 'it', '*', '(for', 'unit', 'testing)', '*/', 'dock:', 'function(args,', 'execute', '=', 'true)', '{', '/**', '*', 'Strip', 'off', ""'dock'"", 'subcommand', '*/', 'if', '(_.startsWith(args,', ""'dock"", ""'))"", '{', 'args', '=', 'args.substring(5)', '}', 'var', 'cmd', '=', ""'docker"", 'exec', '-it', ""'"", '+', 'dock._stripDashes(dock._getDirName())', '+', ""'_web_1"", ""'"", '+', 'args', 'if', '(execute)', '{', 'return', ""spawn('sh',"", ""['-c',"", 'cmd],', '{', 'stdio:', ""'inherit'"", '})', '}', 'return', 'cmd', '},', '_stripDashes:', 'function(str)', '{', 'return', ""str.replace('-',"", ""'')"", '},', '_getDirName:', 'function()', '{', 'var', 'pwd', '=', 'shell.pwd().toString()', 'var', 'els', '=', 'pwd.split(path.sep)', 'var', 'dir', '=', 'els[els.length', '-', '1]', 'return', 'dir', '}', '}', 'module.exports', '=', 'dock.dock', '```']",challenge not surrounded by ''': ,
"import Ember from 'ember';

export default Ember.Route.extend({
  projects: Ember.inject.service(),

  beforeModel() {
    this._super(...arguments);
    return this.get('projects').updateOrchestrationState();
  },
});
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'Ember', 'from', ""'ember';"", 'export', 'default', 'Ember.Route.extend({', 'projects:', 'Ember.inject.service(),', 'beforeModel()', '{', 'this._super(...arguments);', 'return', ""this.get('projects').updateOrchestrationState();"", '},', '});', '```']",challenge not surrounded by ''': ,
"package de.helfenkannjeder.come2help.server.security;

public final class Authorities {

    private Authorities() {
    }

    public static final String GUEST = ""ROLE_GUEST"";
    public static final String USER = ""ROLE_USER"";
    public static final String VOLUNTEER = ""ROLE_VOLUNTEER"";
    public static final String ORGANISATION_ADMIN = ""ROLE_ORGANISATION_ADMIN"";
    public static final String C2H_ADMIN = ""ROLE_C2H_ADMIN"";
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'de.helfenkannjeder.come2help.server.security;', 'public', 'final', 'class', 'Authorities', '{', 'private', 'Authorities()', '{', '}', 'public', 'static', 'final', 'String', 'GUEST', '=', '""ROLE_GUEST"";', 'public', 'static', 'final', 'String', 'USER', '=', '""ROLE_USER"";', 'public', 'static', 'final', 'String', 'VOLUNTEER', '=', '""ROLE_VOLUNTEER"";', 'public', 'static', 'final', 'String', 'ORGANISATION_ADMIN', '=', '""ROLE_ORGANISATION_ADMIN"";', 'public', 'static', 'final', 'String', 'C2H_ADMIN', '=', '""ROLE_C2H_ADMIN"";', '}', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright (c) 2011-2017 Pivotal Software Inc, All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package reactor.core.publisher;

import reactor.core.CoreSubscriber;
import reactor.core.Fuseable;
import reactor.util.context.Context;

/**
 * Materialize current {@link Context} from the subscribing flow
 */
final class MonoCurrentContext extends Mono<Context> implements Fuseable {

	static final MonoCurrentContext INSTANCE = new MonoCurrentContext();

	@SuppressWarnings(""unchecked"")
	public void subscribe(CoreSubscriber<? super Context> actual) {
		Context ctx = actual.currentContext();
		actual.onSubscribe(Operators.scalarSubscription(actual, ctx));
	}
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '(c)', '2011-2017', 'Pivotal', 'Software', 'Inc,', 'All', 'Rights', 'Reserved.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'reactor.core.publisher;', 'import', 'reactor.core.CoreSubscriber;', 'import', 'reactor.core.Fuseable;', 'import', 'reactor.util.context.Context;', '/**', '*', 'Materialize', 'current', '{@link', 'Context}', 'from', 'the', 'subscribing', 'flow', '*/', 'final', 'class', 'MonoCurrentContext', 'extends', 'Mono<Context>', 'implements', 'Fuseable', '{', 'static', 'final', 'MonoCurrentContext', 'INSTANCE', '=', 'new', 'MonoCurrentContext();', '@SuppressWarnings(""unchecked"")', 'public', 'void', 'subscribe(CoreSubscriber<?', 'super', 'Context>', 'actual)', '{', 'Context', 'ctx', '=', 'actual.currentContext();', 'actual.onSubscribe(Operators.scalarSubscription(actual,', 'ctx));', '}', '}', '```']",challenge not surrounded by ''': ,
"""use strict"";
const fs = require(""fs"");
const jsdom = require(""../.."");
const toFileUrl = require(""../util"").toFileUrl(__dirname);

exports[""Getting a file URL should work (from the same file URL)""] = t => {
  // From https://github.com/tmpvar/jsdom/pull/1180
  const window = jsdom.jsdom(undefined, { url: toFileUrl(__filename) }).defaultView;

  const xhr = new window.XMLHttpRequest();
  xhr.onload = () => {
    t.strictEqual(xhr.responseText, fs.readFileSync(__filename, { encoding: ""utf-8"" }));
    t.done();
  };

  xhr.open(""GET"", toFileUrl(__filename), true);
  xhr.send();
};

exports[""Getting a file URL should have valid default response without setting responseType""] = t => {
  // From https://github.com/tmpvar/jsdom/pull/1183
  const window = jsdom.jsdom(undefined, { url: toFileUrl(__filename) }).defaultView;

  const xhr = new window.XMLHttpRequest();
  xhr.onload = () => {
    t.strictEqual(xhr.response, fs.readFileSync(__filename, { encoding: ""utf-8"" }));
    t.done();
  };

  xhr.open(""GET"", toFileUrl(__filename), true);
  xhr.send();
};

exports[""Getting a file URL should not throw for getResponseHeader""] = t => {
  // From https://github.com/tmpvar/jsdom/pull/1180
  const window = jsdom.jsdom(undefined, { url: toFileUrl(__filename) }).defaultView;

  const xhr = new window.XMLHttpRequest();
  xhr.onload = () => {
    t.doesNotThrow(() => {
      t.strictEqual(xhr.getResponseHeader(""Blahblahblah""), null);
    });
    t.done();
  };

  xhr.open(""GET"", toFileUrl(__filename), true);
  xhr.send();
};

exports[""Getting a file URL should not throw for getAllResponseHeaders""] = t => {
  // From https://github.com/tmpvar/jsdom/pull/1183
  const window = jsdom.jsdom(undefined, { url: toFileUrl(__filename) }).defaultView;

  const xhr = new window.XMLHttpRequest();
  xhr.onload = () => {
    t.doesNotThrow(() => {
      t.strictEqual(xhr.getAllResponseHeaders(), null);
    });
    t.done();
  };

  xhr.open(""GET"", toFileUrl(__filename), true);
  xhr.send();
};
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```""use', 'strict"";', 'const', 'fs', '=', 'require(""fs"");', 'const', 'jsdom', '=', 'require(""../.."");', 'const', 'toFileUrl', '=', 'require(""../util"").toFileUrl(__dirname);', 'exports[""Getting', 'a', 'file', 'URL', 'should', 'work', '(from', 'the', 'same', 'file', 'URL)""]', '=', 't', '=>', '{', '//', 'From', 'https://github.com/tmpvar/jsdom/pull/1180', 'const', 'window', '=', 'jsdom.jsdom(undefined,', '{', 'url:', 'toFileUrl(__filename)', '}).defaultView;', 'const', 'xhr', '=', 'new', 'window.XMLHttpRequest();', 'xhr.onload', '=', '()', '=>', '{', 't.strictEqual(xhr.responseText,', 'fs.readFileSync(__filename,', '{', 'encoding:', '""utf-8""', '}));', 't.done();', '};', 'xhr.open(""GET"",', 'toFileUrl(__filename),', 'true);', 'xhr.send();', '};', 'exports[""Getting', 'a', 'file', 'URL', 'should', 'have', 'valid', 'default', 'response', 'without', 'setting', 'responseType""]', '=', 't', '=>', '{', '//', 'From', 'https://github.com/tmpvar/jsdom/pull/1183', 'const', 'window', '=', 'jsdom.jsdom(undefined,', '{', 'url:', 'toFileUrl(__filename)', '}).defaultView;', 'const', 'xhr', '=', 'new', 'window.XMLHttpRequest();', 'xhr.onload', '=', '()', '=>', '{', 't.strictEqual(xhr.response,', 'fs.readFileSync(__filename,', '{', 'encoding:', '""utf-8""', '}));', 't.done();', '};', 'xhr.open(""GET"",', 'toFileUrl(__filename),', 'true);', 'xhr.send();', '};', 'exports[""Getting', 'a', 'file', 'URL', 'should', 'not', 'throw', 'for', 'getResponseHeader""]', '=', 't', '=>', '{', '//', 'From', 'https://github.com/tmpvar/jsdom/pull/1180', 'const', 'window', '=', 'jsdom.jsdom(undefined,', '{', 'url:', 'toFileUrl(__filename)', '}).defaultView;', 'const', 'xhr', '=', 'new', 'window.XMLHttpRequest();', 'xhr.onload', '=', '()', '=>', '{', 't.doesNotThrow(()', '=>', '{', 't.strictEqual(xhr.getResponseHeader(""Blahblahblah""),', 'null);', '});', 't.done();', '};', 'xhr.open(""GET"",', 'toFileUrl(__filename),', 'true);', 'xhr.send();', '};', 'exports[""Getting', 'a', 'file', 'URL', 'should', 'not', 'throw', 'for', 'getAllResponseHeaders""]', '=', 't', '=>', '{', '//', 'From', 'https://github.com/tmpvar/jsdom/pull/1183', 'const', 'window', '=', 'jsdom.jsdom(undefined,', '{', 'url:', 'toFileUrl(__filename)', '}).defaultView;', 'const', 'xhr', '=', 'new', 'window.XMLHttpRequest();', 'xhr.onload', '=', '()', '=>', '{', 't.doesNotThrow(()', '=>', '{', 't.strictEqual(xhr.getAllResponseHeaders(),', 'null);', '});', 't.done();', '};', 'xhr.open(""GET"",', 'toFileUrl(__filename),', 'true);', 'xhr.send();', '};', '```']",challenge not surrounded by ''': ,
"angular.module(""leaflet-directive"")
.factory('leafletGeoJsonEvents', function ($rootScope, $q, leafletLogger, leafletHelpers,
  leafletEventsHelpersFactory, leafletData) {
    var safeApply = leafletHelpers.safeApply,
        EventsHelper = leafletEventsHelpersFactory;
        // $log = leafletLogger;

    var GeoJsonEvents = function(){
      EventsHelper.call(this,'leafletDirectiveGeoJson', 'geojson');
    };

    GeoJsonEvents.prototype =  new EventsHelper();

    GeoJsonEvents.prototype.genDispatchEvent = function(maybeMapId, eventName, logic, leafletScope, lObject, name, model, layerName, extra) {
        var base = EventsHelper.prototype.genDispatchEvent.call(this, maybeMapId, eventName, logic, leafletScope, lObject, name, model, layerName),
        _this = this;

        return function(e){
            if (eventName === 'mouseout') {
                if (extra.resetStyleOnMouseout) {
                    leafletData.getGeoJSON(extra.mapId)
                    .then(function(leafletGeoJSON){
                        //this is broken on nested needs to traverse or user layerName (nested)
                        var lobj = layerName? leafletGeoJSON[layerName]: leafletGeoJSON;
                        lobj.resetStyle(e.target);
                    });

                }
                safeApply(leafletScope, function() {
                    $rootScope.$broadcast(_this.rootBroadcastName + '.mouseout', e);
                });
            }
            base(e); //common
        };
    };

    GeoJsonEvents.prototype.getAvailableEvents = function(){ return [
        'click',
        'dblclick',
        'mouseover',
        'mouseout',
        ];
    };

    return new GeoJsonEvents();
});
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```angular.module(""leaflet-directive"")', "".factory('leafletGeoJsonEvents',"", 'function', '($rootScope,', '$q,', 'leafletLogger,', 'leafletHelpers,', 'leafletEventsHelpersFactory,', 'leafletData)', '{', 'var', 'safeApply', '=', 'leafletHelpers.safeApply,', 'EventsHelper', '=', 'leafletEventsHelpersFactory;', '//', '$log', '=', 'leafletLogger;', 'var', 'GeoJsonEvents', '=', 'function(){', ""EventsHelper.call(this,'leafletDirectiveGeoJson',"", ""'geojson');"", '};', 'GeoJsonEvents.prototype', '=', 'new', 'EventsHelper();', 'GeoJsonEvents.prototype.genDispatchEvent', '=', 'function(maybeMapId,', 'eventName,', 'logic,', 'leafletScope,', 'lObject,', 'name,', 'model,', 'layerName,', 'extra)', '{', 'var', 'base', '=', 'EventsHelper.prototype.genDispatchEvent.call(this,', 'maybeMapId,', 'eventName,', 'logic,', 'leafletScope,', 'lObject,', 'name,', 'model,', 'layerName),', '_this', '=', 'this;', 'return', 'function(e){', 'if', '(eventName', '===', ""'mouseout')"", '{', 'if', '(extra.resetStyleOnMouseout)', '{', 'leafletData.getGeoJSON(extra.mapId)', '.then(function(leafletGeoJSON){', '//this', 'is', 'broken', 'on', 'nested', 'needs', 'to', 'traverse', 'or', 'user', 'layerName', '(nested)', 'var', 'lobj', '=', 'layerName?', 'leafletGeoJSON[layerName]:', 'leafletGeoJSON;', 'lobj.resetStyle(e.target);', '});', '}', 'safeApply(leafletScope,', 'function()', '{', '$rootScope.$broadcast(_this.rootBroadcastName', '+', ""'.mouseout',"", 'e);', '});', '}', 'base(e);', '//common', '};', '};', 'GeoJsonEvents.prototype.getAvailableEvents', '=', 'function(){', 'return', '[', ""'click',"", ""'dblclick',"", ""'mouseover',"", ""'mouseout',"", '];', '};', 'return', 'new', 'GeoJsonEvents();', '});', '```']",challenge not surrounded by ''': ,
"var ContentProvider = require('../../models/content');

function getContentMW(req, res) {
  ContentProvider.findContents(req.user._id, function(err, contents){
    if(err){ return res.status(401).json(err); }
    res.status(200).json({contents: contents}); 
  });
}

module.exports = getContentMW;","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```var', 'ContentProvider', '=', ""require('../../models/content');"", 'function', 'getContentMW(req,', 'res)', '{', 'ContentProvider.findContents(req.user._id,', 'function(err,', 'contents){', 'if(err){', 'return', 'res.status(401).json(err);', '}', 'res.status(200).json({contents:', 'contents});', '});', '}', 'module.exports', '=', 'getContentMW;```']",challenge not surrounded by ''': ,
"// Copyright 2018 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the ""License"");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an ""AS IS"" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/**
 * @param {ClientRect} clientRect
 * @param {LH.Artifacts.ViewportDimensions} viewport
 * @return {boolean}
 */
function isBoxInViewport(clientRect, viewport) {
  const {innerWidth, innerHeight} = viewport;
  const {left, top, right, bottom} = clientRect;

  return left < right && top < bottom && // Non-zero area
    left < innerWidth && top < innerHeight && 0 < right && 0 < bottom;
}

/**
 * @param {ClientRect} clientRect
 * @param {LH.Artifacts.ViewportDimensions} viewport
 * @return {number}
 */
function boxViewableArea(clientRect, viewport) {
  if (!isBoxInViewport(clientRect, viewport)) return 0;

  const {innerWidth, innerHeight} = viewport;
  const {left, top, right, bottom} = clientRect;

  return (Math.min(right, innerWidth) - Math.max(left, 0)) *
    (Math.min(bottom, innerHeight) - Math.max(top, 0));
}

/**
 * Converts points (from a TraceEvent) to a ClientRect.
 * @param {number[]} points
 * @return {ClientRect}
 */
function toClientRect([left, top, width, height]) {
  return {
    left,
    top,
    width,
    height,
    right: left + width,
    bottom: top + height,
  };
}

/**
 * Checks ClientRect a overlaps ClientRect b. Note that this returns true for
 * overlapping perimeters.
 * @param {ClientRect} a
 * @param {ClientRect} b
 * @return {boolean}
 */
function overlaps(a, b) {
  const overlapX = !(a.right < b.left || b.right < a.left);
  const overlapY = !(a.bottom < b.top || b.bottom < a.top);
  return overlapX && overlapY;
}

module.exports = {
  boxViewableArea,
  isBoxInViewport,
  overlaps,
  toClientRect,
};

","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```//', 'Copyright', '2018', 'Google', 'LLC', '//', '//', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '//', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '//', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '//', '//', 'http://www.apache.org/licenses/LICENSE-2.0', '//', '//', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '//', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '//', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '//', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '//', 'limitations', 'under', 'the', 'License.', '/**', '*', '@param', '{ClientRect}', 'clientRect', '*', '@param', '{LH.Artifacts.ViewportDimensions}', 'viewport', '*', '@return', '{boolean}', '*/', 'function', 'isBoxInViewport(clientRect,', 'viewport)', '{', 'const', '{innerWidth,', 'innerHeight}', '=', 'viewport;', 'const', '{left,', 'top,', 'right,', 'bottom}', '=', 'clientRect;', 'return', 'left', '<', 'right', '&&', 'top', '<', 'bottom', '&&', '//', 'Non-zero', 'area', 'left', '<', 'innerWidth', '&&', 'top', '<', 'innerHeight', '&&', '0', '<', 'right', '&&', '0', '<', 'bottom;', '}', '/**', '*', '@param', '{ClientRect}', 'clientRect', '*', '@param', '{LH.Artifacts.ViewportDimensions}', 'viewport', '*', '@return', '{number}', '*/', 'function', 'boxViewableArea(clientRect,', 'viewport)', '{', 'if', '(!isBoxInViewport(clientRect,', 'viewport))', 'return', '0;', 'const', '{innerWidth,', 'innerHeight}', '=', 'viewport;', 'const', '{left,', 'top,', 'right,', 'bottom}', '=', 'clientRect;', 'return', '(Math.min(right,', 'innerWidth)', '-', 'Math.max(left,', '0))', '*', '(Math.min(bottom,', 'innerHeight)', '-', 'Math.max(top,', '0));', '}', '/**', '*', 'Converts', 'points', '(from', 'a', 'TraceEvent)', 'to', 'a', 'ClientRect.', '*', '@param', '{number[]}', 'points', '*', '@return', '{ClientRect}', '*/', 'function', 'toClientRect([left,', 'top,', 'width,', 'height])', '{', 'return', '{', 'left,', 'top,', 'width,', 'height,', 'right:', 'left', '+', 'width,', 'bottom:', 'top', '+', 'height,', '};', '}', '/**', '*', 'Checks', 'ClientRect', 'a', 'overlaps', 'ClientRect', 'b.', 'Note', 'that', 'this', 'returns', 'true', 'for', '*', 'overlapping', 'perimeters.', '*', '@param', '{ClientRect}', 'a', '*', '@param', '{ClientRect}', 'b', '*', '@return', '{boolean}', '*/', 'function', 'overlaps(a,', 'b)', '{', 'const', 'overlapX', '=', '!(a.right', '<', 'b.left', '||', 'b.right', '<', 'a.left);', 'const', 'overlapY', '=', '!(a.bottom', '<', 'b.top', '||', 'b.bottom', '<', 'a.top);', 'return', 'overlapX', '&&', 'overlapY;', '}', 'module.exports', '=', '{', 'boxViewableArea,', 'isBoxInViewport,', 'overlaps,', 'toClientRect,', '};', '```']",challenge not surrounded by ''': ,
"
package ru.lanbilling.webservice.wsdl;

import javax.annotation.Generated;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base=""{http://www.w3.org/2001/XMLSchema}anyType""&gt;
 *       &lt;sequence&gt;
 *         &lt;element name=""isInsert"" type=""{http://www.w3.org/2001/XMLSchema}long""/&gt;
 *         &lt;element name=""val"" type=""{urn:api3}soapAgentFull""/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = """", propOrder = {
    ""isInsert"",
    ""val""
})
@XmlRootElement(name = ""insupdAgent"")
@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2015-10-25T05:29:34+06:00"", comments = ""JAXB RI v2.2.11"")
public class InsupdAgent {

    @Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2015-10-25T05:29:34+06:00"", comments = ""JAXB RI v2.2.11"")
    protected long isInsert;
    @XmlElement(required = true)
    @Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2015-10-25T05:29:34+06:00"", comments = ""JAXB RI v2.2.11"")
    protected SoapAgentFull val;

    /**
     * Gets the value of the isInsert property.
     * 
     */
    @Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2015-10-25T05:29:34+06:00"", comments = ""JAXB RI v2.2.11"")
    public long getIsInsert() {
        return isInsert;
    }

    /**
     * Sets the value of the isInsert property.
     * 
     */
    @Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2015-10-25T05:29:34+06:00"", comments = ""JAXB RI v2.2.11"")
    public void setIsInsert(long value) {
        this.isInsert = value;
    }

    /**
     * Gets the value of the val property.
     * 
     * @return
     *     possible object is
     *     {@link SoapAgentFull }
     *     
     */
    @Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2015-10-25T05:29:34+06:00"", comments = ""JAXB RI v2.2.11"")
    public SoapAgentFull getVal() {
        return val;
    }

    /**
     * Sets the value of the val property.
     * 
     * @param value
     *     allowed object is
     *     {@link SoapAgentFull }
     *     
     */
    @Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2015-10-25T05:29:34+06:00"", comments = ""JAXB RI v2.2.11"")
    public void setVal(SoapAgentFull value) {
        this.val = value;
    }

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```', 'package', 'ru.lanbilling.webservice.wsdl;', 'import', 'javax.annotation.Generated;', 'import', 'javax.xml.bind.annotation.XmlAccessType;', 'import', 'javax.xml.bind.annotation.XmlAccessorType;', 'import', 'javax.xml.bind.annotation.XmlElement;', 'import', 'javax.xml.bind.annotation.XmlRootElement;', 'import', 'javax.xml.bind.annotation.XmlType;', '/**', '*', '<p>Java', 'class', 'for', 'anonymous', 'complex', 'type.', '*', '*', '<p>The', 'following', 'schema', 'fragment', 'specifies', 'the', 'expected', 'content', 'contained', 'within', 'this', 'class.', '*', '*', '<pre>', '*', '&lt;complexType&gt;', '*', '&lt;complexContent&gt;', '*', '&lt;restriction', 'base=""{http://www.w3.org/2001/XMLSchema}anyType""&gt;', '*', '&lt;sequence&gt;', '*', '&lt;element', 'name=""isInsert""', 'type=""{http://www.w3.org/2001/XMLSchema}long""/&gt;', '*', '&lt;element', 'name=""val""', 'type=""{urn:api3}soapAgentFull""/&gt;', '*', '&lt;/sequence&gt;', '*', '&lt;/restriction&gt;', '*', '&lt;/complexContent&gt;', '*', '&lt;/complexType&gt;', '*', '</pre>', '*', '*', '*/', '@XmlAccessorType(XmlAccessType.FIELD)', '@XmlType(name', '=', '"""",', 'propOrder', '=', '{', '""isInsert"",', '""val""', '})', '@XmlRootElement(name', '=', '""insupdAgent"")', '@Generated(value', '=', '""com.sun.tools.xjc.Driver"",', 'date', '=', '""2015-10-25T05:29:34+06:00"",', 'comments', '=', '""JAXB', 'RI', 'v2.2.11"")', 'public', 'class', 'InsupdAgent', '{', '@Generated(value', '=', '""com.sun.tools.xjc.Driver"",', 'date', '=', '""2015-10-25T05:29:34+06:00"",', 'comments', '=', '""JAXB', 'RI', 'v2.2.11"")', 'protected', 'long', 'isInsert;', '@XmlElement(required', '=', 'true)', '@Generated(value', '=', '""com.sun.tools.xjc.Driver"",', 'date', '=', '""2015-10-25T05:29:34+06:00"",', 'comments', '=', '""JAXB', 'RI', 'v2.2.11"")', 'protected', 'SoapAgentFull', 'val;', '/**', '*', 'Gets', 'the', 'value', 'of', 'the', 'isInsert', 'property.', '*', '*/', '@Generated(value', '=', '""com.sun.tools.xjc.Driver"",', 'date', '=', '""2015-10-25T05:29:34+06:00"",', 'comments', '=', '""JAXB', 'RI', 'v2.2.11"")', 'public', 'long', 'getIsInsert()', '{', 'return', 'isInsert;', '}', '/**', '*', 'Sets', 'the', 'value', 'of', 'the', 'isInsert', 'property.', '*', '*/', '@Generated(value', '=', '""com.sun.tools.xjc.Driver"",', 'date', '=', '""2015-10-25T05:29:34+06:00"",', 'comments', '=', '""JAXB', 'RI', 'v2.2.11"")', 'public', 'void', 'setIsInsert(long', 'value)', '{', 'this.isInsert', '=', 'value;', '}', '/**', '*', 'Gets', 'the', 'value', 'of', 'the', 'val', 'property.', '*', '*', '@return', '*', 'possible', 'object', 'is', '*', '{@link', 'SoapAgentFull', '}', '*', '*/', '@Generated(value', '=', '""com.sun.tools.xjc.Driver"",', 'date', '=', '""2015-10-25T05:29:34+06:00"",', 'comments', '=', '""JAXB', 'RI', 'v2.2.11"")', 'public', 'SoapAgentFull', 'getVal()', '{', 'return', 'val;', '}', '/**', '*', 'Sets', 'the', 'value', 'of', 'the', 'val', 'property.', '*', '*', '@param', 'value', '*', 'allowed', 'object', 'is', '*', '{@link', 'SoapAgentFull', '}', '*', '*/', '@Generated(value', '=', '""com.sun.tools.xjc.Driver"",', 'date', '=', '""2015-10-25T05:29:34+06:00"",', 'comments', '=', '""JAXB', 'RI', 'v2.2.11"")', 'public', 'void', 'setVal(SoapAgentFull', 'value)', '{', 'this.val', '=', 'value;', '}', '}', '```']",challenge not surrounded by ''': ,
"﻿/// <reference path=""../../js/_references.js"" />
(function () {
    ""use strict"";

    WinJS.UI.Pages.define('./demos/settings/whatsnew/whatsnew.html', {
        ready: function (element, options) {
            var that = this;
            that.readNews();

            $('#rateButton').tap(function () {
                var uri = new Windows.Foundation.Uri(""ms-windows-store:REVIEW?PFN="" + Windows.ApplicationModel.Package.current.id.familyName);
                Windows.System.Launcher.launchUriAsync(uri)
                var roamingSettings = Windows.Storage.ApplicationData.current.roamingSettings;
                roamingSettings.values[""rateok""] = true;
                roamingSettings.values[""version""] = Windows.ApplicationModel.Package.current.id.version.major + ""."" + Windows.ApplicationModel.Package.current.id.version.minor + ""."" + Windows.ApplicationModel.Package.current.id.version.revision;
                // that.element.winControl.hide();
            });
        },

        readNews: function () {
            var that = this;
            var template_news = that.element.querySelector('#templatenews').winControl;
            var listnews = that.element.querySelector('#listnews');
            Windows.ApplicationModel.Package.current.installedLocation.getFileAsync(""demos\\settings\\whatsnew\\whatsnew.json"").then(function (file) {
                return Windows.Storage.FileIO.readTextAsync(file).then(function (data) {
                    var programsdata = JSON.parse(data);
                    programsdata.data.forEach(function (version) {
                        var ver = document.createElement('div');
                        ver.className = ""version"";
                        ver.innerHTML = ""Version "" + version.version;
                        listnews.appendChild(ver);
                        version.news.forEach(function (textnews) {
                            template_news.render(textnews).done(function (elt) {
                                var children = elt.children[0];
                                listnews.appendChild(children);
                            });
                        });
                    });
                });
            });
        },

        updateLayout: function (element, viewState, lastViewState) {
        },

        unload: function () {
        }
    });
})();
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```\ufeff///', '<reference', 'path=""../../js/_references.js""', '/>', '(function', '()', '{', '""use', 'strict"";', ""WinJS.UI.Pages.define('./demos/settings/whatsnew/whatsnew.html',"", '{', 'ready:', 'function', '(element,', 'options)', '{', 'var', 'that', '=', 'this;', 'that.readNews();', ""$('#rateButton').tap(function"", '()', '{', 'var', 'uri', '=', 'new', 'Windows.Foundation.Uri(""ms-windows-store:REVIEW?PFN=""', '+', 'Windows.ApplicationModel.Package.current.id.familyName);', 'Windows.System.Launcher.launchUriAsync(uri)', 'var', 'roamingSettings', '=', 'Windows.Storage.ApplicationData.current.roamingSettings;', 'roamingSettings.values[""rateok""]', '=', 'true;', 'roamingSettings.values[""version""]', '=', 'Windows.ApplicationModel.Package.current.id.version.major', '+', '"".""', '+', 'Windows.ApplicationModel.Package.current.id.version.minor', '+', '"".""', '+', 'Windows.ApplicationModel.Package.current.id.version.revision;', '//', 'that.element.winControl.hide();', '});', '},', 'readNews:', 'function', '()', '{', 'var', 'that', '=', 'this;', 'var', 'template_news', '=', ""that.element.querySelector('#templatenews').winControl;"", 'var', 'listnews', '=', ""that.element.querySelector('#listnews');"", 'Windows.ApplicationModel.Package.current.installedLocation.getFileAsync(""demos\\\\settings\\\\whatsnew\\\\whatsnew.json"").then(function', '(file)', '{', 'return', 'Windows.Storage.FileIO.readTextAsync(file).then(function', '(data)', '{', 'var', 'programsdata', '=', 'JSON.parse(data);', 'programsdata.data.forEach(function', '(version)', '{', 'var', 'ver', '=', ""document.createElement('div');"", 'ver.className', '=', '""version"";', 'ver.innerHTML', '=', '""Version', '""', '+', 'version.version;', 'listnews.appendChild(ver);', 'version.news.forEach(function', '(textnews)', '{', 'template_news.render(textnews).done(function', '(elt)', '{', 'var', 'children', '=', 'elt.children[0];', 'listnews.appendChild(children);', '});', '});', '});', '});', '});', '},', 'updateLayout:', 'function', '(element,', 'viewState,', 'lastViewState)', '{', '},', 'unload:', 'function', '()', '{', '}', '});', '})();', '```']",challenge not surrounded by ''': ,
"""use strict"";

var _interopRequireDefault = require(""@babel/runtime/helpers/interopRequireDefault"");

Object.defineProperty(exports, ""__esModule"", {
  value: true
});
exports.default = void 0;

var _createSvgIcon = _interopRequireDefault(require(""./utils/createSvgIcon""));

var _jsxRuntime = require(""react/jsx-runtime"");

var _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(""path"", {
  d: ""M16 14.14V9.86L12.97 12z"",
  opacity: "".3""
}, ""0""), /*#__PURE__*/(0, _jsxRuntime.jsx)(""path"", {
  d: ""M6 6h2v12H6zm12 12V6l-8.5 6 8.5 6zm-2-3.86L12.97 12 16 9.86v4.28z""
}, ""1"")], 'SkipPreviousTwoTone');

exports.default = _default;","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```""use', 'strict"";', 'var', '_interopRequireDefault', '=', 'require(""@babel/runtime/helpers/interopRequireDefault"");', 'Object.defineProperty(exports,', '""__esModule"",', '{', 'value:', 'true', '});', 'exports.default', '=', 'void', '0;', 'var', '_createSvgIcon', '=', '_interopRequireDefault(require(""./utils/createSvgIcon""));', 'var', '_jsxRuntime', '=', 'require(""react/jsx-runtime"");', 'var', '_default', '=', '(0,', '_createSvgIcon.default)([/*#__PURE__*/(0,', '_jsxRuntime.jsx)(""path"",', '{', 'd:', '""M16', '14.14V9.86L12.97', '12z"",', 'opacity:', '"".3""', '},', '""0""),', '/*#__PURE__*/(0,', '_jsxRuntime.jsx)(""path"",', '{', 'd:', '""M6', '6h2v12H6zm12', '12V6l-8.5', '6', '8.5', '6zm-2-3.86L12.97', '12', '16', '9.86v4.28z""', '},', '""1"")],', ""'SkipPreviousTwoTone');"", 'exports.default', '=', '_default;```']",challenge not surrounded by ''': ,
"Date: Tue, 10 Dec 1996 21:15:44 GMT
Server: NCSA/1.4.2
Content-type: text/html
Last-modified: Mon, 20 Mar 1995 21:47:18 GMT
Content-length: 94

<title> Interdisciplinary cognitive science programs in the UW CS dept</title>

<h1> Ha. </h1>","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```Date:', 'Tue,', '10', 'Dec', '1996', '21:15:44', 'GMT', 'Server:', 'NCSA/1.4.2', 'Content-type:', 'text/html', 'Last-modified:', 'Mon,', '20', 'Mar', '1995', '21:47:18', 'GMT', 'Content-length:', '94', '<title>', 'Interdisciplinary', 'cognitive', 'science', 'programs', 'in', 'the', 'UW', 'CS', 'dept</title>', '<h1>', 'Ha.', '</h1>```']",challenge not surrounded by ''': ,
"<!DOCTYPE html>
<html>

  <head>
    <meta charset=""utf-8"">
    <title>Your Band Sucks</title>
    <link rel=""stylesheet"" type=""text/css"" href=""http://cdnjs.cloudflare.com/ajax/libs/normalize/3.0.1/normalize.min.css"">
    <link rel=""stylesheet"" href=""style.css"">
    <link href=""https://fonts.googleapis.com/css?family=Roboto|Codystar|Work+Sans:100"" rel=""stylesheet"">
    <link href=""https://afeld.github.io/emoji-css/emoji.css"" rel=""stylesheet"">
    <script src=""https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js""></script>
  </head>

  <header id=""top"">
    <div class=""mainHeader"">
      <h1 class=""mainTitle"">
          <span class= ""mainTitle1"">YOUR</span>
          <span class=""mainTitle2"">BAND</span>
          <span class=""mainTitle3"">S<span class=""mainTitle4"">U</span>CKS</span>
        </h1>
      <div class=""mainNav"">
        <nav>
          <ul class=""navItems"">
            <li><a href=""index.html"">Home</a></li>
            <li><a href=""50s.html"">50's</a></li>
            <li><a href=""60s.html"">60's</a></li>
            <li><a href=""70s.html"">70's</a></li>
            <li><a href=""80s.html"">80's</a></li>
            <li><a href=""90s.html"">90's</a></li>
            <li><a href=""2000s.html"">2000s</a></li>
          </ul>
        </nav>
      </div>
    </div>
  </header>

  <main>
    <h1 class=""welcome"">70's</h1>
    <div class=""album"">
      <img class=""bandImg"" src=""https://i.pinimg.com/564x/9e/3e/ac/9e3eacce0dad89bf4de1e4f074b6d34e.jpg"" alt="""">
      <img class=""bandImg"" src=""https://img.discogs.com/XQR03PRbRM8gY-wo8wvU9N4S1uM=/fit-in/300x300/filters:strip_icc():format(jpeg):mode_rgb():quality(40)/discogs-images/R-5515764-1395387586-8353.jpeg.jpg"" alt="""">
      <img class=""bandImg"" src=""https://i.pinimg.com/564x/de/fb/3c/defb3c0f99159369c71e8262c774c44a.jpg"" alt="""">
      <img class=""bandImg"" src=""http://cdn77.sadanduseless.com/wp-content/uploads/2016/01/christian4.jpg"" alt="""">
      <img class=""bandImg"" src=""http://cdn77.sadanduseless.com/wp-content/uploads/2016/01/christian6.jpg"" alt="""">
      <img class=""bandImg"" src=""http://cdn77.sadanduseless.com/wp-content/uploads/2016/01/christian7.jpg"" alt="""">
      <img class=""bandImg"" src=""https://img.discogs.com/xGt7fenh_fNIrY6rKZ1DUSYjrII=/fit-in/600x600/filters:strip_icc():format(jpeg):mode_rgb():quality(90)/discogs-images/R-6551187-1491200768-5158.jpeg.jpg"" alt="""">
      <img class=""bandImg"" src=""http://cdn77.sadanduseless.com/wp-content/uploads/2016/01/christian9.jpg"" alt="""">
      <img class=""bandImg"" src=""https://img.discogs.com/EitgA-IfDUf6jIvlz3SPUrWh4zw=/fit-in/600x599/filters:strip_icc():format(jpeg):mode_rgb():quality(90)/discogs-images/R-2739410-1473580859-6483.jpeg.jpg"" alt="""">
      <img class=""bandImg"" src=""http://cdn77.sadanduseless.com/wp-content/uploads/2016/01/christian10.jpg"" alt="""">
      <img class=""bandImg"" src=""http://cdn77.sadanduseless.com/wp-content/uploads/2016/01/christian11.jpg"" alt="""">
      <img class=""bandImg"" src=""http://cdn77.sadanduseless.com/wp-content/uploads/2016/01/christian12.jpg"" alt="""">
      <img class=""bandImg"" src=""http://cdn77.sadanduseless.com/wp-content/uploads/2016/01/christian16.jpg"" alt="""">
      <img class=""bandImg"" src=""http://cdn77.sadanduseless.com/wp-content/uploads/2016/01/christian18.jpg"" alt="""">
      <img class=""bandImg"" src=""https://images.sobadsogood.com/21-most-tragic-and-cringeworthy-christian-music-covers-youll-ever-see/3.jpg"" alt="""">
      <img class=""bandImg"" src=""https://img.discogs.com/8NEZ_yp1ZA1gDlhJUcfIUszYMIA=/fit-in/350x358/filters:strip_icc():format(jpeg):mode_rgb():quality(90)/discogs-images/R-6547327-1425770451-2692.jpeg.jpg"" alt="""">
      <img class=""bandImg"" src=""https://images.sobadsogood.com/21-most-tragic-and-cringeworthy-christian-music-covers-youll-ever-see/19.jpg"" alt="""">
      <img class=""bandImg"" src=""http://i.dailymail.co.uk/i/pix/2016/12/27/13/3BA92A2200000578-4068256-image-a-22_1482843675772.jpg"" alt="""">
      <img class=""bandImg"" src=""http://i.dailymail.co.uk/i/pix/2016/12/27/14/3BA92A9700000578-4068256-It_s_a_family_affair_The_Singing_Ledbetters_put_on_their_Sunday_-a-40_1482849547133.jpg"" alt="""">
      <img class=""bandImg"" src=""http://i.dailymail.co.uk/i/pix/2016/12/27/14/3BA92AA400000578-4068256-image-m-31_1482848553938.jpg"" alt="""">
      <img class=""bandImg"" src=""https://i.pinimg.com/564x/72/c8/13/72c813ea75de38863593f16ce0cbb04b.jpg"" alt="""">
      <img class=""bandImg"" src=""https://i.pinimg.com/564x/21/c8/5a/21c85a7f67d798509cde4cb2d2f82c0a.jpg"" alt="""">
      <img class=""bandImg"" src=""http://i.dailymail.co.uk/i/pix/2016/12/27/13/3BA92A6400000578-4068256-image-a-16_1482843644006.jpg"" alt="""">
      <img class=""bandImg"" src=""https://img.discogs.com/GDZ-z90U15IJL5cVNY5H7WzyRiI=/fit-in/593x596/filters:strip_icc():format(jpeg):mode_rgb():quality(90)/discogs-images/R-2358930-1279365425.jpeg.jpg"" alt="""">
      <img class=""bandImg"" src=""https://i.pinimg.com/564x/cb/5f/66/cb5f661fdf240140f1bedd8483616873.jpg"" alt="""">
      <img class=""bandImg"" src=""https://i.pinimg.com/564x/b7/7f/f9/b77ff90b00a6073a5a2a7f15a9de351f.jpg"" alt="""">
      <img class=""bandImg"" src=""https://i.pinimg.com/564x/a0/8d/e9/a08de94b1bb4fd2b1268d8d52e90b078.jpg"" alt="""">
      <img class=""bandImg"" src=""https://i.pinimg.com/564x/a3/f3/3a/a3f33a90e13f27922786593e6b4594eb.jpg"" alt="""">
      <img class=""bandImg"" src=""https://i.pinimg.com/564x/db/ab/f6/dbabf608d01a5e20493b1ed95e3506fd.jpg"" alt="""">
      <img class=""bandImg"" src=""https://i.pinimg.com/564x/eb/cf/4e/ebcf4e8f5e62dd162b24907e061940da.jpg"" alt="""">
      <img class=""bandImg"" src=""https://i.pinimg.com/564x/cc/49/6d/cc496d37e64c95b1c66172bf4a4726db.jpg"" alt="""">
      <img class=""bandImg"" src=""https://i.pinimg.com/564x/36/ad/9a/36ad9aec4ca27d157c018a8000dea48d.jpg"" alt="""">
      <img class=""bandImg"" src=""https://i.pinimg.com/564x/72/84/49/728449fae2cd78266f3b047b9237351e.jpg"" alt="""">
      <img class=""bandImg"" src=""https://i.pinimg.com/564x/9c/64/a7/9c64a7f91b30c12fbac0bf415cad36af.jpg"" alt="""">
      <img class=""bandImg"" src=""https://i.pinimg.com/564x/64/01/a4/6401a429af2c9e5f618fdf0b73d4a8f0.jpg"" alt="""">
      <img class=""bandImg"" src=""https://i.pinimg.com/564x/e2/45/dd/e245dd69ae76306bd016d8a5de3b4ef5.jpg"" alt="""">
      <img class=""bandImg"" src=""https://usercontent1.hubstatic.com/4642992_f496.jpg"" alt="""">
      <img class=""bandImg"" src=""https://thechive.files.wordpress.com/2016/07/these-heavy-metal-band-album-covers-are-the-worst-6.jpg?quality=85&strip=info&w=600"" alt="""">
    </div>
  </main>

  <footer>
    <a href=""#top"">Back to Top</a>
    <h6>Created by Coleman Imhoff</h6>
  </footer>

</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'html>', '<html>', '<head>', '<meta', 'charset=""utf-8"">', '<title>Your', 'Band', 'Sucks</title>', '<link', 'rel=""stylesheet""', 'type=""text/css""', 'href=""http://cdnjs.cloudflare.com/ajax/libs/normalize/3.0.1/normalize.min.css"">', '<link', 'rel=""stylesheet""', 'href=""style.css"">', '<link', 'href=""https://fonts.googleapis.com/css?family=Roboto|Codystar|Work+Sans:100""', 'rel=""stylesheet"">', '<link', 'href=""https://afeld.github.io/emoji-css/emoji.css""', 'rel=""stylesheet"">', '<script', 'src=""https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js""></script>', '</head>', '<header', 'id=""top"">', '<div', 'class=""mainHeader"">', '<h1', 'class=""mainTitle"">', '<span', 'class=', '""mainTitle1"">YOUR</span>', '<span', 'class=""mainTitle2"">BAND</span>', '<span', 'class=""mainTitle3"">S<span', 'class=""mainTitle4"">U</span>CKS</span>', '</h1>', '<div', 'class=""mainNav"">', '<nav>', '<ul', 'class=""navItems"">', '<li><a', 'href=""index.html"">Home</a></li>', '<li><a', 'href=""50s.html"">50\'s</a></li>', '<li><a', 'href=""60s.html"">60\'s</a></li>', '<li><a', 'href=""70s.html"">70\'s</a></li>', '<li><a', 'href=""80s.html"">80\'s</a></li>', '<li><a', 'href=""90s.html"">90\'s</a></li>', '<li><a', 'href=""2000s.html"">2000s</a></li>', '</ul>', '</nav>', '</div>', '</div>', '</header>', '<main>', '<h1', 'class=""welcome"">70\'s</h1>', '<div', 'class=""album"">', '<img', 'class=""bandImg""', 'src=""https://i.pinimg.com/564x/9e/3e/ac/9e3eacce0dad89bf4de1e4f074b6d34e.jpg""', 'alt="""">', '<img', 'class=""bandImg""', 'src=""https://img.discogs.com/XQR03PRbRM8gY-wo8wvU9N4S1uM=/fit-in/300x300/filters:strip_icc():format(jpeg):mode_rgb():quality(40)/discogs-images/R-5515764-1395387586-8353.jpeg.jpg""', 'alt="""">', '<img', 'class=""bandImg""', 'src=""https://i.pinimg.com/564x/de/fb/3c/defb3c0f99159369c71e8262c774c44a.jpg""', 'alt="""">', '<img', 'class=""bandImg""', 'src=""http://cdn77.sadanduseless.com/wp-content/uploads/2016/01/christian4.jpg""', 'alt="""">', '<img', 'class=""bandImg""', 'src=""http://cdn77.sadanduseless.com/wp-content/uploads/2016/01/christian6.jpg""', 'alt="""">', '<img', 'class=""bandImg""', 'src=""http://cdn77.sadanduseless.com/wp-content/uploads/2016/01/christian7.jpg""', 'alt="""">', '<img', 'class=""bandImg""', 'src=""https://img.discogs.com/xGt7fenh_fNIrY6rKZ1DUSYjrII=/fit-in/600x600/filters:strip_icc():format(jpeg):mode_rgb():quality(90)/discogs-images/R-6551187-1491200768-5158.jpeg.jpg""', 'alt="""">', '<img', 'class=""bandImg""', 'src=""http://cdn77.sadanduseless.com/wp-content/uploads/2016/01/christian9.jpg""', 'alt="""">', '<img', 'class=""bandImg""', 'src=""https://img.discogs.com/EitgA-IfDUf6jIvlz3SPUrWh4zw=/fit-in/600x599/filters:strip_icc():format(jpeg):mode_rgb():quality(90)/discogs-images/R-2739410-1473580859-6483.jpeg.jpg""', 'alt="""">', '<img', 'class=""bandImg""', 'src=""http://cdn77.sadanduseless.com/wp-content/uploads/2016/01/christian10.jpg""', 'alt="""">', '<img', 'class=""bandImg""', 'src=""http://cdn77.sadanduseless.com/wp-content/uploads/2016/01/christian11.jpg""', 'alt="""">', '<img', 'class=""bandImg""', 'src=""http://cdn77.sadanduseless.com/wp-content/uploads/2016/01/christian12.jpg""', 'alt="""">', '<img', 'class=""bandImg""', 'src=""http://cdn77.sadanduseless.com/wp-content/uploads/2016/01/christian16.jpg""', 'alt="""">', '<img', 'class=""bandImg""', 'src=""http://cdn77.sadanduseless.com/wp-content/uploads/2016/01/christian18.jpg""', 'alt="""">', '<img', 'class=""bandImg""', 'src=""https://images.sobadsogood.com/21-most-tragic-and-cringeworthy-christian-music-covers-youll-ever-see/3.jpg""', 'alt="""">', '<img', 'class=""bandImg""', 'src=""https://img.discogs.com/8NEZ_yp1ZA1gDlhJUcfIUszYMIA=/fit-in/350x358/filters:strip_icc():format(jpeg):mode_rgb():quality(90)/discogs-images/R-6547327-1425770451-2692.jpeg.jpg""', 'alt="""">', '<img', 'class=""bandImg""', 'src=""https://images.sobadsogood.com/21-most-tragic-and-cringeworthy-christian-music-covers-youll-ever-see/19.jpg""', 'alt="""">', '<img', 'class=""bandImg""', 'src=""http://i.dailymail.co.uk/i/pix/2016/12/27/13/3BA92A2200000578-4068256-image-a-22_1482843675772.jpg""', 'alt="""">', '<img', 'class=""bandImg""', 'src=""http://i.dailymail.co.uk/i/pix/2016/12/27/14/3BA92A9700000578-4068256-It_s_a_family_affair_The_Singing_Ledbetters_put_on_their_Sunday_-a-40_1482849547133.jpg""', 'alt="""">', '<img', 'class=""bandImg""', 'src=""http://i.dailymail.co.uk/i/pix/2016/12/27/14/3BA92AA400000578-4068256-image-m-31_1482848553938.jpg""', 'alt="""">', '<img', 'class=""bandImg""', 'src=""https://i.pinimg.com/564x/72/c8/13/72c813ea75de38863593f16ce0cbb04b.jpg""', 'alt="""">', '<img', 'class=""bandImg""', 'src=""https://i.pinimg.com/564x/21/c8/5a/21c85a7f67d798509cde4cb2d2f82c0a.jpg""', 'alt="""">', '<img', 'class=""bandImg""', 'src=""http://i.dailymail.co.uk/i/pix/2016/12/27/13/3BA92A6400000578-4068256-image-a-16_1482843644006.jpg""', 'alt="""">', '<img', 'class=""bandImg""', 'src=""https://img.discogs.com/GDZ-z90U15IJL5cVNY5H7WzyRiI=/fit-in/593x596/filters:strip_icc():format(jpeg):mode_rgb():quality(90)/discogs-images/R-2358930-1279365425.jpeg.jpg""', 'alt="""">', '<img', 'class=""bandImg""', 'src=""https://i.pinimg.com/564x/cb/5f/66/cb5f661fdf240140f1bedd8483616873.jpg""', 'alt="""">', '<img', 'class=""bandImg""', 'src=""https://i.pinimg.com/564x/b7/7f/f9/b77ff90b00a6073a5a2a7f15a9de351f.jpg""', 'alt="""">', '<img', 'class=""bandImg""', 'src=""https://i.pinimg.com/564x/a0/8d/e9/a08de94b1bb4fd2b1268d8d52e90b078.jpg""', 'alt="""">', '<img', 'class=""bandImg""', 'src=""https://i.pinimg.com/564x/a3/f3/3a/a3f33a90e13f27922786593e6b4594eb.jpg""', 'alt="""">', '<img', 'class=""bandImg""', 'src=""https://i.pinimg.com/564x/db/ab/f6/dbabf608d01a5e20493b1ed95e3506fd.jpg""', 'alt="""">', '<img', 'class=""bandImg""', 'src=""https://i.pinimg.com/564x/eb/cf/4e/ebcf4e8f5e62dd162b24907e061940da.jpg""', 'alt="""">', '<img', 'class=""bandImg""', 'src=""https://i.pinimg.com/564x/cc/49/6d/cc496d37e64c95b1c66172bf4a4726db.jpg""', 'alt="""">', '<img', 'class=""bandImg""', 'src=""https://i.pinimg.com/564x/36/ad/9a/36ad9aec4ca27d157c018a8000dea48d.jpg""', 'alt="""">', '<img', 'class=""bandImg""', 'src=""https://i.pinimg.com/564x/72/84/49/728449fae2cd78266f3b047b9237351e.jpg""', 'alt="""">', '<img', 'class=""bandImg""', 'src=""https://i.pinimg.com/564x/9c/64/a7/9c64a7f91b30c12fbac0bf415cad36af.jpg""', 'alt="""">', '<img', 'class=""bandImg""', 'src=""https://i.pinimg.com/564x/64/01/a4/6401a429af2c9e5f618fdf0b73d4a8f0.jpg""', 'alt="""">', '<img', 'class=""bandImg""', 'src=""https://i.pinimg.com/564x/e2/45/dd/e245dd69ae76306bd016d8a5de3b4ef5.jpg""', 'alt="""">', '<img', 'class=""bandImg""', 'src=""https://usercontent1.hubstatic.com/4642992_f496.jpg""', 'alt="""">', '<img', 'class=""bandImg""', 'src=""https://thechive.files.wordpress.com/2016/07/these-heavy-metal-band-album-covers-are-the-worst-6.jpg?quality=85&strip=info&w=600""', 'alt="""">', '</div>', '</main>', '<footer>', '<a', 'href=""#top"">Back', 'to', 'Top</a>', '<h6>Created', 'by', 'Coleman', 'Imhoff</h6>', '</footer>', '</html>', '```']",challenge not surrounded by ''': ,
"package com.fmtech.fmdianping.main.guide;

import android.os.Bundle;

import com.fmtech.fmdianping.R;
import com.fmtech.fmdianping.app.BaseActivity;

/**
 * ==================================================================
 * Copyright (C) 2015 FMTech All Rights Reserved.
 *
 * @author Drew.Chiang
 * @version v1.0.0
 * @email chiangchuna@gmail.com
 * @create_date 2015/11/12 18:09
 * @description ${todo}
 * <p/>
 * Modification History:
 * Date            Author            Version         Description
 * -----------------------------------------------------------------
 * 2015/11/12 18:09  Drew.Chiang       v1.0.0          create
 * <p/>
 * ==================================================================
 */

public class MainActivity extends BaseActivity{

    @Override
    public void onCreate(Bundle savedInstanceState){
        super.onCreate(savedInstanceState);
        setContentView(R.layout.content_main);
    }

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.fmtech.fmdianping.main.guide;', 'import', 'android.os.Bundle;', 'import', 'com.fmtech.fmdianping.R;', 'import', 'com.fmtech.fmdianping.app.BaseActivity;', '/**', '*', '==================================================================', '*', 'Copyright', '(C)', '2015', 'FMTech', 'All', 'Rights', 'Reserved.', '*', '*', '@author', 'Drew.Chiang', '*', '@version', 'v1.0.0', '*', '@email', 'chiangchuna@gmail.com', '*', '@create_date', '2015/11/12', '18:09', '*', '@description', '${todo}', '*', '<p/>', '*', 'Modification', 'History:', '*', 'Date', 'Author', 'Version', 'Description', '*', '-----------------------------------------------------------------', '*', '2015/11/12', '18:09', 'Drew.Chiang', 'v1.0.0', 'create', '*', '<p/>', '*', '==================================================================', '*/', 'public', 'class', 'MainActivity', 'extends', 'BaseActivity{', '@Override', 'public', 'void', 'onCreate(Bundle', 'savedInstanceState){', 'super.onCreate(savedInstanceState);', 'setContentView(R.layout.content_main);', '}', '}', '```']",challenge not surrounded by ''': ,
"package main;

import java.awt.*;

/**
 * Created by henne on 14.05.16.
 */
public class GenericDeck extends Deck {

    public GenericDeck(DeckType type) {
        super(type);
        maxCardsX = 1;
        maxCardsY = 1;
    }

    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g);
        if (!isEmpty()) {
            for (int i = 0; i < cards.size(); i++) {
                cards.get(i).setFaceUp(false);
                cards.get(i).setLocation(border, border);
            }
        }
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'main;', 'import', 'java.awt.*;', '/**', '*', 'Created', 'by', 'henne', 'on', '14.05.16.', '*/', 'public', 'class', 'GenericDeck', 'extends', 'Deck', '{', 'public', 'GenericDeck(DeckType', 'type)', '{', 'super(type);', 'maxCardsX', '=', '1;', 'maxCardsY', '=', '1;', '}', '@Override', 'public', 'void', 'paintComponent(Graphics', 'g)', '{', 'super.paintComponent(g);', 'if', '(!isEmpty())', '{', 'for', '(int', 'i', '=', '0;', 'i', '<', 'cards.size();', 'i++)', '{', 'cards.get(i).setFaceUp(false);', 'cards.get(i).setLocation(border,', 'border);', '}', '}', '}', '}', '```']",challenge not surrounded by ''': ,
"# -*- coding: utf-8 -*-

#    Copyright 2016 Mirantis, Inc.
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License along
#    with this program; if not, write to the Free Software Foundation, Inc.,
#    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

import os

jimmy_dir = os.path.dirname(os.path.dirname(__file__))


class TestCase(object):

    """"""Test case base class for all unit tests.""""""
    def setup(self):
        with open(os.path.join(jimmy_dir, 'lib', 'schema.yaml'), 'r') as f:
            self.jimmy_schema = f.read()
        with open(os.path.join(jimmy_dir, 'jimmy.yaml'), 'r') as f:
            self.jimmy_yaml = f.read()
            self.mock_jimmy_yaml = self.jimmy_yaml.replace(
                ""jenkins_cli_path: /var/cache/jenkins/war/WEB-INF/jenkins-cli.jar"",
                ""jenkins_cli_path: << path to jenkins-cli.jar >>"")
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', '-*-', 'coding:', 'utf-8', '-*-', '#', 'Copyright', '2016', 'Mirantis,', 'Inc.', '#', '#', 'This', 'program', 'is', 'free', 'software;', 'you', 'can', 'redistribute', 'it', 'and/or', 'modify', '#', 'it', 'under', 'the', 'terms', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'as', 'published', 'by', '#', 'the', 'Free', 'Software', 'Foundation;', 'either', 'version', '2', 'of', 'the', 'License,', 'or', '#', '(at', 'your', 'option)', 'any', 'later', 'version.', '#', '#', 'This', 'program', 'is', 'distributed', 'in', 'the', 'hope', 'that', 'it', 'will', 'be', 'useful,', '#', 'but', 'WITHOUT', 'ANY', 'WARRANTY;', 'without', 'even', 'the', 'implied', 'warranty', 'of', '#', 'MERCHANTABILITY', 'or', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE.', 'See', 'the', '#', 'GNU', 'General', 'Public', 'License', 'for', 'more', 'details.', '#', '#', 'You', 'should', 'have', 'received', 'a', 'copy', 'of', 'the', 'GNU', 'General', 'Public', 'License', 'along', '#', 'with', 'this', 'program;', 'if', 'not,', 'write', 'to', 'the', 'Free', 'Software', 'Foundation,', 'Inc.,', '#', '51', 'Franklin', 'Street,', 'Fifth', 'Floor,', 'Boston,', 'MA', '02110-1301', 'USA.', 'import', 'os', 'jimmy_dir', '=', 'os.path.dirname(os.path.dirname(__file__))', 'class', 'TestCase(object):', '""""""Test', 'case', 'base', 'class', 'for', 'all', 'unit', 'tests.""""""', 'def', 'setup(self):', 'with', 'open(os.path.join(jimmy_dir,', ""'lib',"", ""'schema.yaml'),"", ""'r')"", 'as', 'f:', 'self.jimmy_schema', '=', 'f.read()', 'with', 'open(os.path.join(jimmy_dir,', ""'jimmy.yaml'),"", ""'r')"", 'as', 'f:', 'self.jimmy_yaml', '=', 'f.read()', 'self.mock_jimmy_yaml', '=', 'self.jimmy_yaml.replace(', '""jenkins_cli_path:', '/var/cache/jenkins/war/WEB-INF/jenkins-cli.jar"",', '""jenkins_cli_path:', '<<', 'path', 'to', 'jenkins-cli.jar', '>>"")', '```']",challenge not surrounded by ''': ,
"<div class=""text-left"" ng-controller=""CatalogEntryController as catalogEntryCtrl"">
    <form name=""catalogItemForm""
          ng-submit=""catalogItemForm.$valid && catalogEntryCtrl.createOrEdit()"" novalidate>

        <div common-catalog-form-fields></div>

        <div class=""row"">
            <div catalog-relationships-form resource=""skus"" relationships-title=""Child SKUs"" relationships-property=""childSKUsIds""></div>
            <div catalog-relationships-form resource=""discounts"" relationships-title=""Product discounts"" relationships-property=""discountsIds""></div>
        </div>
        <input type=""submit"" class=""btn btn-primary"" value=""Save"" ng-disabled=""catalogItemForm.$invalid""/>
    </form>

</div>","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<div', 'class=""text-left""', 'ng-controller=""CatalogEntryController', 'as', 'catalogEntryCtrl"">', '<form', 'name=""catalogItemForm""', 'ng-submit=""catalogItemForm.$valid', '&&', 'catalogEntryCtrl.createOrEdit()""', 'novalidate>', '<div', 'common-catalog-form-fields></div>', '<div', 'class=""row"">', '<div', 'catalog-relationships-form', 'resource=""skus""', 'relationships-title=""Child', 'SKUs""', 'relationships-property=""childSKUsIds""></div>', '<div', 'catalog-relationships-form', 'resource=""discounts""', 'relationships-title=""Product', 'discounts""', 'relationships-property=""discountsIds""></div>', '</div>', '<input', 'type=""submit""', 'class=""btn', 'btn-primary""', 'value=""Save""', 'ng-disabled=""catalogItemForm.$invalid""/>', '</form>', '</div>```']",challenge not surrounded by ''': ,
"""""""
Tools for managing ``CloudRecoService.query``'s ``include_target_data``.
""""""

from enum import Enum


class CloudRecoIncludeTargetData(Enum):
    """"""
    Options for the ``include_target_data`` parameter of
    ``CloudRecoService.query``.
    """"""

    TOP = 'top'
    NONE = 'none'
    ALL = 'all'
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```""""""', 'Tools', 'for', 'managing', ""``CloudRecoService.query``'s"", '``include_target_data``.', '""""""', 'from', 'enum', 'import', 'Enum', 'class', 'CloudRecoIncludeTargetData(Enum):', '""""""', 'Options', 'for', 'the', '``include_target_data``', 'parameter', 'of', '``CloudRecoService.query``.', '""""""', 'TOP', '=', ""'top'"", 'NONE', '=', ""'none'"", 'ALL', '=', ""'all'"", '```']",challenge not surrounded by ''': ,
"/*
 * Copyright 2015-2018 Canoo Engineering AG.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.canoo.dp.impl.validation;

import org.apiguardian.api.API;

import javax.validation.ConstraintValidatorContext;
import javax.validation.constraints.AssertFalse;

import static org.apiguardian.api.API.Status.INTERNAL;

/**
 * Validator that adds Dolphin Platform property support for the {@link AssertFalse} annotation.
 */
@API(since = ""0.19.0"", status = INTERNAL)
public final class AssertFalsePropertyValidator extends AbstractPropertyValidator<AssertFalse, Boolean> {

    /**
     * constructor
     */
    public AssertFalsePropertyValidator() {
        super(Boolean.class);
    }

    @Override
    protected boolean checkValid(Boolean property, ConstraintValidatorContext context) {
        return !property;
    }

}

","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '2015-2018', 'Canoo', 'Engineering', 'AG.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'com.canoo.dp.impl.validation;', 'import', 'org.apiguardian.api.API;', 'import', 'javax.validation.ConstraintValidatorContext;', 'import', 'javax.validation.constraints.AssertFalse;', 'import', 'static', 'org.apiguardian.api.API.Status.INTERNAL;', '/**', '*', 'Validator', 'that', 'adds', 'Dolphin', 'Platform', 'property', 'support', 'for', 'the', '{@link', 'AssertFalse}', 'annotation.', '*/', '@API(since', '=', '""0.19.0"",', 'status', '=', 'INTERNAL)', 'public', 'final', 'class', 'AssertFalsePropertyValidator', 'extends', 'AbstractPropertyValidator<AssertFalse,', 'Boolean>', '{', '/**', '*', 'constructor', '*/', 'public', 'AssertFalsePropertyValidator()', '{', 'super(Boolean.class);', '}', '@Override', 'protected', 'boolean', 'checkValid(Boolean', 'property,', 'ConstraintValidatorContext', 'context)', '{', 'return', '!property;', '}', '}', '```']",challenge not surrounded by ''': ,
"package com.lyncode.sushicounter.util;

import org.junit.Test;

import javax.xml.datatype.XMLGregorianCalendar;

import java.util.Date;

import static org.hamcrest.CoreMatchers.nullValue;
import static org.hamcrest.core.Is.is;
import static org.junit.Assert.*;

public class XMLGregorianCalenderUtilsTest {
    @Test
    public void fromDateShouldBeNullSafe() throws Exception {
        XMLGregorianCalendar result = XMLGregorianCalenderUtils.fromDate().apply(null);

        assertThat(result, is(nullValue()));
    }

    @Test
    public void toDateShouldBeNullSafe() throws Exception {
        Date result = XMLGregorianCalenderUtils.toDate().apply(null);
        assertThat(result, is(nullValue()));
    }
}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.lyncode.sushicounter.util;', 'import', 'org.junit.Test;', 'import', 'javax.xml.datatype.XMLGregorianCalendar;', 'import', 'java.util.Date;', 'import', 'static', 'org.hamcrest.CoreMatchers.nullValue;', 'import', 'static', 'org.hamcrest.core.Is.is;', 'import', 'static', 'org.junit.Assert.*;', 'public', 'class', 'XMLGregorianCalenderUtilsTest', '{', '@Test', 'public', 'void', 'fromDateShouldBeNullSafe()', 'throws', 'Exception', '{', 'XMLGregorianCalendar', 'result', '=', 'XMLGregorianCalenderUtils.fromDate().apply(null);', 'assertThat(result,', 'is(nullValue()));', '}', '@Test', 'public', 'void', 'toDateShouldBeNullSafe()', 'throws', 'Exception', '{', 'Date', 'result', '=', 'XMLGregorianCalenderUtils.toDate().apply(null);', 'assertThat(result,', 'is(nullValue()));', '}', '}```']",challenge not surrounded by ''': ,
"import org.apache.hadoop.io.ArrayWritable;
import org.apache.hadoop.io.FloatWritable;
import org.apache.hadoop.io.Writable;

public class FloatArrayWritable extends ArrayWritable {

	public FloatArrayWritable(Writable[] values) {
		super(FloatWritable.class, values);
	}

	public FloatArrayWritable() {
		super(FloatWritable.class);
	}

	public FloatArrayWritable(Class valueClass, Writable[] values) {
		super(FloatWritable.class, values);
	}

	public FloatArrayWritable(Class valueClass) {
		super(FloatWritable.class);
	}

	public FloatArrayWritable(String[] strings) {
		super(strings);
	}

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'org.apache.hadoop.io.ArrayWritable;', 'import', 'org.apache.hadoop.io.FloatWritable;', 'import', 'org.apache.hadoop.io.Writable;', 'public', 'class', 'FloatArrayWritable', 'extends', 'ArrayWritable', '{', 'public', 'FloatArrayWritable(Writable[]', 'values)', '{', 'super(FloatWritable.class,', 'values);', '}', 'public', 'FloatArrayWritable()', '{', 'super(FloatWritable.class);', '}', 'public', 'FloatArrayWritable(Class', 'valueClass,', 'Writable[]', 'values)', '{', 'super(FloatWritable.class,', 'values);', '}', 'public', 'FloatArrayWritable(Class', 'valueClass)', '{', 'super(FloatWritable.class);', '}', 'public', 'FloatArrayWritable(String[]', 'strings)', '{', 'super(strings);', '}', '}', '```']",challenge not surrounded by ''': ,
"/*******************************************************************************
 * Copyright (c) 1998, 2012 Oracle and/or its affiliates. All rights reserved.
 * This program and the accompanying materials are made available under the 
 * terms of the Eclipse Public License v1.0 and Eclipse Distribution License v. 1.0 
 * which accompanies this distribution. 
 * The Eclipse Public License is available at http://www.eclipse.org/legal/epl-v10.html
 * and the Eclipse Distribution License is available at 
 * http://www.eclipse.org/org/documents/edl-v10.php.
 *
 * Contributors:
 *     Oracle - initial API and implementation from Oracle TopLink
******************************************************************************/
package org.eclipse.persistence.tools.workbench.test.scplugin.ui.session.basic;

import org.eclipse.persistence.tools.workbench.test.scplugin.ui.SCAbstractPanelTest;

import org.eclipse.persistence.tools.workbench.framework.app.ApplicationNode;
import org.eclipse.persistence.tools.workbench.scplugin.model.adapter.SCAdapter;
import org.eclipse.persistence.tools.workbench.scplugin.model.adapter.SessionAdapter;
import org.eclipse.persistence.tools.workbench.uitools.app.PropertyValueModel;
import org.eclipse.persistence.tools.workbench.uitools.app.SimplePropertyValueModel;


/**
 * @author Tran Le
 * @version 1.0a
 */
public abstract class AbstractSessionPanelTest extends SCAbstractPanelTest {

	private SessionAdapter selection;

	public AbstractSessionPanelTest(String name) {

		super(name);
	}

	protected PropertyValueModel buildNodeHolder( ApplicationNode projectNode) {

		SCAdapter session = getTopLinkSessions().sessionNamed(""SC-EmployeeTest"");
		return new SimplePropertyValueModel(retrieveNode(projectNode, session));
	}

	protected SCAdapter buildSelection() {

		this.selection = getTopLinkSessions().sessionNamed( ""SC-EmployeeTest"");
		return this.selection;
	}

	protected void clearModel() {

		getSelectionHolder().setValue( null);
	}

	protected SessionAdapter getSession() {

		return (SessionAdapter) getSelection();
	}

	protected void printModel() {

		System.out.println( this.selection);
	}

	protected void resetProperty() {

		this.selection = getTopLinkSessions().sessionNamed( ""SC-EmployeeTest"");
		this.restoreModel();
	}

	protected void restoreModel() {

		getSelectionHolder().setValue( this.selection);
	}

	protected void tearDown() throws Exception {

		super.tearDown();
		this.selection = null;
	}
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*******************************************************************************', '*', 'Copyright', '(c)', '1998,', '2012', 'Oracle', 'and/or', 'its', 'affiliates.', 'All', 'rights', 'reserved.', '*', 'This', 'program', 'and', 'the', 'accompanying', 'materials', 'are', 'made', 'available', 'under', 'the', '*', 'terms', 'of', 'the', 'Eclipse', 'Public', 'License', 'v1.0', 'and', 'Eclipse', 'Distribution', 'License', 'v.', '1.0', '*', 'which', 'accompanies', 'this', 'distribution.', '*', 'The', 'Eclipse', 'Public', 'License', 'is', 'available', 'at', 'http://www.eclipse.org/legal/epl-v10.html', '*', 'and', 'the', 'Eclipse', 'Distribution', 'License', 'is', 'available', 'at', '*', 'http://www.eclipse.org/org/documents/edl-v10.php.', '*', '*', 'Contributors:', '*', 'Oracle', '-', 'initial', 'API', 'and', 'implementation', 'from', 'Oracle', 'TopLink', '******************************************************************************/', 'package', 'org.eclipse.persistence.tools.workbench.test.scplugin.ui.session.basic;', 'import', 'org.eclipse.persistence.tools.workbench.test.scplugin.ui.SCAbstractPanelTest;', 'import', 'org.eclipse.persistence.tools.workbench.framework.app.ApplicationNode;', 'import', 'org.eclipse.persistence.tools.workbench.scplugin.model.adapter.SCAdapter;', 'import', 'org.eclipse.persistence.tools.workbench.scplugin.model.adapter.SessionAdapter;', 'import', 'org.eclipse.persistence.tools.workbench.uitools.app.PropertyValueModel;', 'import', 'org.eclipse.persistence.tools.workbench.uitools.app.SimplePropertyValueModel;', '/**', '*', '@author', 'Tran', 'Le', '*', '@version', '1.0a', '*/', 'public', 'abstract', 'class', 'AbstractSessionPanelTest', 'extends', 'SCAbstractPanelTest', '{', 'private', 'SessionAdapter', 'selection;', 'public', 'AbstractSessionPanelTest(String', 'name)', '{', 'super(name);', '}', 'protected', 'PropertyValueModel', 'buildNodeHolder(', 'ApplicationNode', 'projectNode)', '{', 'SCAdapter', 'session', '=', 'getTopLinkSessions().sessionNamed(""SC-EmployeeTest"");', 'return', 'new', 'SimplePropertyValueModel(retrieveNode(projectNode,', 'session));', '}', 'protected', 'SCAdapter', 'buildSelection()', '{', 'this.selection', '=', 'getTopLinkSessions().sessionNamed(', '""SC-EmployeeTest"");', 'return', 'this.selection;', '}', 'protected', 'void', 'clearModel()', '{', 'getSelectionHolder().setValue(', 'null);', '}', 'protected', 'SessionAdapter', 'getSession()', '{', 'return', '(SessionAdapter)', 'getSelection();', '}', 'protected', 'void', 'printModel()', '{', 'System.out.println(', 'this.selection);', '}', 'protected', 'void', 'resetProperty()', '{', 'this.selection', '=', 'getTopLinkSessions().sessionNamed(', '""SC-EmployeeTest"");', 'this.restoreModel();', '}', 'protected', 'void', 'restoreModel()', '{', 'getSelectionHolder().setValue(', 'this.selection);', '}', 'protected', 'void', 'tearDown()', 'throws', 'Exception', '{', 'super.tearDown();', 'this.selection', '=', 'null;', '}', '}', '```']",challenge not surrounded by ''': ,
"<html>
<head>
<title>Link Share App</title>
<style>

</style>
</head>
<body>
<h2>Ami Example App</h2>
<form method='post' action='<% (p *baseurl*) %>/newLink'>
Link Name: <input name='name'> Url: <input name='url' value='http://'> <input type='submit' value='Go!'>
</form>


<table>
<tr>
<th>Score</th>
<th>Vote</th>
<th>Link</th>
</tr>

<% (for-each format-link (sort-data *data*)) %>
</table>
<body>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<html>', '<head>', '<title>Link', 'Share', 'App</title>', '<style>', '</style>', '</head>', '<body>', '<h2>Ami', 'Example', 'App</h2>', '<form', ""method='post'"", ""action='<%"", '(p', '*baseurl*)', ""%>/newLink'>"", 'Link', 'Name:', '<input', ""name='name'>"", 'Url:', '<input', ""name='url'"", ""value='http://'>"", '<input', ""type='submit'"", ""value='Go!'>"", '</form>', '<table>', '<tr>', '<th>Score</th>', '<th>Vote</th>', '<th>Link</th>', '</tr>', '<%', '(for-each', 'format-link', '(sort-data', '*data*))', '%>', '</table>', '<body>', '</html>', '```']",challenge not surrounded by ''': ,
"package app.tan.lib.util;

/**
 * SystemUtils
 *
 */
public class SystemUtils {

    /**
     * recommend default thread pool size according to system available processors, {@link #getDefaultThreadPoolSize()} *
     */
    public static final int DEFAULT_THREAD_POOL_SIZE = getDefaultThreadPoolSize();

    /**
     * get recommend default thread pool size
     *
     * @return if 2 * availableProcessors + 1 less than 8, return it, else return 8;
     * @see {@link #getDefaultThreadPoolSize(int)} max is 8
     */
    public static int getDefaultThreadPoolSize() {
        return getDefaultThreadPoolSize(8);
    }

    /**
     * get recommend default thread pool size
     *
     * @param max
     * @return if 2 * availableProcessors + 1 less than max, return it, else return max;
     */
    public static int getDefaultThreadPoolSize(int max) {
        int availableProcessors = 2 * Runtime.getRuntime().availableProcessors() + 1;
        return availableProcessors > max ? max : availableProcessors;
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'app.tan.lib.util;', '/**', '*', 'SystemUtils', '*', '*/', 'public', 'class', 'SystemUtils', '{', '/**', '*', 'recommend', 'default', 'thread', 'pool', 'size', 'according', 'to', 'system', 'available', 'processors,', '{@link', '#getDefaultThreadPoolSize()}', '*', '*/', 'public', 'static', 'final', 'int', 'DEFAULT_THREAD_POOL_SIZE', '=', 'getDefaultThreadPoolSize();', '/**', '*', 'get', 'recommend', 'default', 'thread', 'pool', 'size', '*', '*', '@return', 'if', '2', '*', 'availableProcessors', '+', '1', 'less', 'than', '8,', 'return', 'it,', 'else', 'return', '8;', '*', '@see', '{@link', '#getDefaultThreadPoolSize(int)}', 'max', 'is', '8', '*/', 'public', 'static', 'int', 'getDefaultThreadPoolSize()', '{', 'return', 'getDefaultThreadPoolSize(8);', '}', '/**', '*', 'get', 'recommend', 'default', 'thread', 'pool', 'size', '*', '*', '@param', 'max', '*', '@return', 'if', '2', '*', 'availableProcessors', '+', '1', 'less', 'than', 'max,', 'return', 'it,', 'else', 'return', 'max;', '*/', 'public', 'static', 'int', 'getDefaultThreadPoolSize(int', 'max)', '{', 'int', 'availableProcessors', '=', '2', '*', 'Runtime.getRuntime().availableProcessors()', '+', '1;', 'return', 'availableProcessors', '>', 'max', '?', 'max', ':', 'availableProcessors;', '}', '}', '```']",challenge not surrounded by ''': ,
"import React from 'react'
import HeaderContainer from '../containers/HeaderContainer.js'

const styles = {
  divStyle: {
    fontFamily: 'Arial'
  },
  textStyle: {
    height: '80vh',
    display: 'flex',
    justifyContent: 'center',
    flexDirection: 'column',
    textAlign: 'center'
  }
}

export default function NoMangaComponent () {
  return (
    <div style={styles.divStyle}>
      <HeaderContainer />
      <div style={styles.textStyle}>
        <p>You don't have any manga yet. Try adding some by clicking the upper right button!</p>
      </div>
    </div>
  )
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'React', 'from', ""'react'"", 'import', 'HeaderContainer', 'from', ""'../containers/HeaderContainer.js'"", 'const', 'styles', '=', '{', 'divStyle:', '{', 'fontFamily:', ""'Arial'"", '},', 'textStyle:', '{', 'height:', ""'80vh',"", 'display:', ""'flex',"", 'justifyContent:', ""'center',"", 'flexDirection:', ""'column',"", 'textAlign:', ""'center'"", '}', '}', 'export', 'default', 'function', 'NoMangaComponent', '()', '{', 'return', '(', '<div', 'style={styles.divStyle}>', '<HeaderContainer', '/>', '<div', 'style={styles.textStyle}>', '<p>You', ""don't"", 'have', 'any', 'manga', 'yet.', 'Try', 'adding', 'some', 'by', 'clicking', 'the', 'upper', 'right', 'button!</p>', '</div>', '</div>', ')', '}', '```']",challenge not surrounded by ''': ,
"package com.yl.mvvmdemo.ui;

import android.app.ProgressDialog;
import android.databinding.DataBindingUtil;
import android.databinding.Observable;
import android.os.Bundle;
import android.view.View;
import android.widget.Toast;

import com.yl.mvvmdemo.R;
import com.yl.mvvmdemo.databinding.ActivityMainBinding;
import com.yl.mvvmdemo.viewmodel.ExpressViewModel;

/**
 * 主页
 * Created by yangle on 2017/7/26.
 * <p>
 * Website：http://www.yangle.tech
 * GitHub：https://github.com/alidili
 * CSDN：http://blog.csdn.net/kong_gu_you_lan
 * JianShu：http://www.jianshu.com/u/34ece31cd6eb
 */

public class MainActivity extends BaseActivity {

    private ProgressDialog progressDialog;
    private ExpressViewModel expressViewModel;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        ActivityMainBinding binding = DataBindingUtil.setContentView(this, R.layout.activity_main);

        expressViewModel = new ExpressViewModel(this, binding);
        binding.setClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                expressViewModel.getExpressInfo(""yuantong"", ""11111111111"");
            }
        });

        // 显示Loading
        progressDialog = new ProgressDialog(this);
        progressDialog.setMessage(""正在获取快递信息..."");
        expressViewModel.isShowLoading.addOnPropertyChangedCallback(new Observable.OnPropertyChangedCallback() {
            @Override
            public void onPropertyChanged(Observable observable, int i) {
                if (expressViewModel.isShowLoading.get()) {
                    progressDialog.show();
                } else {
                    progressDialog.dismiss();
                }
            }
        });

        // 显示错误信息
        expressViewModel.errorMessage.addOnPropertyChangedCallback(new Observable.OnPropertyChangedCallback() {
            @Override
            public void onPropertyChanged(Observable observable, int i) {
                Toast.makeText(MainActivity.this, expressViewModel.errorMessage.get(), Toast.LENGTH_SHORT).show();
            }
        });
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.yl.mvvmdemo.ui;', 'import', 'android.app.ProgressDialog;', 'import', 'android.databinding.DataBindingUtil;', 'import', 'android.databinding.Observable;', 'import', 'android.os.Bundle;', 'import', 'android.view.View;', 'import', 'android.widget.Toast;', 'import', 'com.yl.mvvmdemo.R;', 'import', 'com.yl.mvvmdemo.databinding.ActivityMainBinding;', 'import', 'com.yl.mvvmdemo.viewmodel.ExpressViewModel;', '/**', '*', '主页', '*', 'Created', 'by', 'yangle', 'on', '2017/7/26.', '*', '<p>', '*', 'Website：http://www.yangle.tech', '*', 'GitHub：https://github.com/alidili', '*', 'CSDN：http://blog.csdn.net/kong_gu_you_lan', '*', 'JianShu：http://www.jianshu.com/u/34ece31cd6eb', '*/', 'public', 'class', 'MainActivity', 'extends', 'BaseActivity', '{', 'private', 'ProgressDialog', 'progressDialog;', 'private', 'ExpressViewModel', 'expressViewModel;', '@Override', 'protected', 'void', 'onCreate(Bundle', 'savedInstanceState)', '{', 'super.onCreate(savedInstanceState);', 'setContentView(R.layout.activity_main);', 'ActivityMainBinding', 'binding', '=', 'DataBindingUtil.setContentView(this,', 'R.layout.activity_main);', 'expressViewModel', '=', 'new', 'ExpressViewModel(this,', 'binding);', 'binding.setClickListener(new', 'View.OnClickListener()', '{', '@Override', 'public', 'void', 'onClick(View', 'v)', '{', 'expressViewModel.getExpressInfo(""yuantong"",', '""11111111111"");', '}', '});', '//', '显示Loading', 'progressDialog', '=', 'new', 'ProgressDialog(this);', 'progressDialog.setMessage(""正在获取快递信息..."");', 'expressViewModel.isShowLoading.addOnPropertyChangedCallback(new', 'Observable.OnPropertyChangedCallback()', '{', '@Override', 'public', 'void', 'onPropertyChanged(Observable', 'observable,', 'int', 'i)', '{', 'if', '(expressViewModel.isShowLoading.get())', '{', 'progressDialog.show();', '}', 'else', '{', 'progressDialog.dismiss();', '}', '}', '});', '//', '显示错误信息', 'expressViewModel.errorMessage.addOnPropertyChangedCallback(new', 'Observable.OnPropertyChangedCallback()', '{', '@Override', 'public', 'void', 'onPropertyChanged(Observable', 'observable,', 'int', 'i)', '{', 'Toast.makeText(MainActivity.this,', 'expressViewModel.errorMessage.get(),', 'Toast.LENGTH_SHORT).show();', '}', '});', '}', '}', '```']",challenge not surrounded by ''': ,
"<!DOCTYPE html
  PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN""
  ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
<html xmlns=""http://www.w3.org/1999/xhtml"" lang=""fr-FR"" xml:lang=""fr-FR"">

  <head>
    <meta http-equiv=""content-type"" content=""text/html; charset=UTF-8"">
    <title>LightZone: Envoyer des Photos</title><!--[if lt IE 7]>
    <script defer type=""text/javascript"" src=""IE_PNG.js""></script>
    <link rel=""stylesheet"" type=""text/css"" href=""IE.css"" media=""all""/>
    <![endif]-->
    <meta name=""description""
      content=""Comment envoyer des photos vers d'autres dossiers.""/>
    <link rel=""stylesheet"" type=""text/css"" href=""Help.css"" media=""all""/>
    <link rel=""stylesheet"" type=""text/css"" href=""Platform.css"" media=""all""/>
    
  </head>

  <body>
    <div id=""banner"">
      <div id=""banner_left"">
        <a href=""index.html"">Aide de LightZone</a>
      </div>
      <div id=""banner_right"">
        <a href=""index/index.html"">Index</a>
      </div>
    </div><!-- LC_Index: photos > sending --><!-- LC_Index: Photo Browser > sending photos using --><!-- LC_Index: sending photos -->

    
    
    
    <a name=""Photos-Sending""></a>
    <img src=""images/app_icon-32.png"" width=""32"" height=""32""
      class=""title_icon""/>
    <h1>Envoyer des photos</h1>

    <p>
      Vous pouvez envoyer des copies de photos sélectionnées vers d'autres dossiers en utilisant le <a href=""Anatomy-Browser.html"">Navigateur Photo</a>. C'est utile si vous souhaitez regrouper en un traitement un lot de photos dans un seul dossier pour d'éventuels e-mailing ou pour l'envoi vers un site web.
    </p>

    <div class=""task_box"">
      <h2>Pour envoyer les photos sélectionnées :</h2>
      <ol>
        <li>
          <img src=""images/Button-Select_Recent.png"" width=""32"" height=""32""
            class=""inline_right""/>
          Sélectionnez une ou plusieurs vignettes des photos que vous voulez envoyer dans le navigateur. (Utilisez la touche Maj pour sélectionner plusieurs vignettes consécutives ou la touche <span class=""Mac_only"">Commande</span> <span class=""Not_Mac"">Contrôle</span> pour sélectionner plusieurs vignettes non contigues; ou utilisez les boutons Sélectionner Récent.)
        </li>
        <li>
          Choisissez Fichier &gt; Envoyer...
        </li>
        <li>
          Utilisez le bouton Choisir pour choisir le dossier de destination.
        </li>
        <li>
          Choisissez la taille de sortie pour les photos copiées.
        </li>
        <li>
          Cliquez Envoyer (ou appuyer sur Entrée).
        </li>
      </ol>
    </div>

    <div>
      <h3>Voir aussi :</h3>
      <ul>
        <li>
          <a href=""Converting-Batch.html"">Conversion par lot d'Images</a>
        </li>
        <li>
          <a href=""Saving.html"">Enregistrer votre travail</a>
        </li>
      </ul>
    </div>

  </body>
</html><!-- vim:set et sw=2 ts=2: -->

","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'html', 'PUBLIC', '""-//W3C//DTD', 'XHTML', '1.0', 'Transitional//EN""', '""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">', '<html', 'xmlns=""http://www.w3.org/1999/xhtml""', 'lang=""fr-FR""', 'xml:lang=""fr-FR"">', '<head>', '<meta', 'http-equiv=""content-type""', 'content=""text/html;', 'charset=UTF-8"">', '<title>LightZone:', 'Envoyer', 'des', 'Photos</title><!--[if', 'lt', 'IE', '7]>', '<script', 'defer', 'type=""text/javascript""', 'src=""IE_PNG.js""></script>', '<link', 'rel=""stylesheet""', 'type=""text/css""', 'href=""IE.css""', 'media=""all""/>', '<![endif]-->', '<meta', 'name=""description""', 'content=""Comment', 'envoyer', 'des', 'photos', 'vers', ""d'autres"", 'dossiers.""/>', '<link', 'rel=""stylesheet""', 'type=""text/css""', 'href=""Help.css""', 'media=""all""/>', '<link', 'rel=""stylesheet""', 'type=""text/css""', 'href=""Platform.css""', 'media=""all""/>', '</head>', '<body>', '<div', 'id=""banner"">', '<div', 'id=""banner_left"">', '<a', 'href=""index.html"">Aide', 'de', 'LightZone</a>', '</div>', '<div', 'id=""banner_right"">', '<a', 'href=""index/index.html"">Index</a>', '</div>', '</div><!--', 'LC_Index:', 'photos', '>', 'sending', '--><!--', 'LC_Index:', 'Photo', 'Browser', '>', 'sending', 'photos', 'using', '--><!--', 'LC_Index:', 'sending', 'photos', '-->', '<a', 'name=""Photos-Sending""></a>', '<img', 'src=""images/app_icon-32.png""', 'width=""32""', 'height=""32""', 'class=""title_icon""/>', '<h1>Envoyer', 'des', 'photos</h1>', '<p>', 'Vous', 'pouvez', 'envoyer', 'des', 'copies', 'de', 'photos', 'sélectionnées', 'vers', ""d'autres"", 'dossiers', 'en', 'utilisant', 'le', '<a', 'href=""Anatomy-Browser.html"">Navigateur', 'Photo</a>.', ""C'est"", 'utile', 'si', 'vous', 'souhaitez', 'regrouper', 'en', 'un', 'traitement', 'un', 'lot', 'de', 'photos', 'dans', 'un', 'seul', 'dossier', 'pour', ""d'éventuels"", 'e-mailing', 'ou', 'pour', ""l'envoi"", 'vers', 'un', 'site', 'web.', '</p>', '<div', 'class=""task_box"">', '<h2>Pour', 'envoyer', 'les', 'photos', 'sélectionnées', ':</h2>', '<ol>', '<li>', '<img', 'src=""images/Button-Select_Recent.png""', 'width=""32""', 'height=""32""', 'class=""inline_right""/>', 'Sélectionnez', 'une', 'ou', 'plusieurs', 'vignettes', 'des', 'photos', 'que', 'vous', 'voulez', 'envoyer', 'dans', 'le', 'navigateur.', '(Utilisez', 'la', 'touche', 'Maj', 'pour', 'sélectionner', 'plusieurs', 'vignettes', 'consécutives', 'ou', 'la', 'touche', '<span', 'class=""Mac_only"">Commande</span>', '<span', 'class=""Not_Mac"">Contrôle</span>', 'pour', 'sélectionner', 'plusieurs', 'vignettes', 'non', 'contigues;', 'ou', 'utilisez', 'les', 'boutons', 'Sélectionner', 'Récent.)', '</li>', '<li>', 'Choisissez', 'Fichier', '&gt;', 'Envoyer...', '</li>', '<li>', 'Utilisez', 'le', 'bouton', 'Choisir', 'pour', 'choisir', 'le', 'dossier', 'de', 'destination.', '</li>', '<li>', 'Choisissez', 'la', 'taille', 'de', 'sortie', 'pour', 'les', 'photos', 'copiées.', '</li>', '<li>', 'Cliquez', 'Envoyer', '(ou', 'appuyer', 'sur', 'Entrée).', '</li>', '</ol>', '</div>', '<div>', '<h3>Voir', 'aussi', ':</h3>', '<ul>', '<li>', '<a', 'href=""Converting-Batch.html"">Conversion', 'par', 'lot', ""d'Images</a>"", '</li>', '<li>', '<a', 'href=""Saving.html"">Enregistrer', 'votre', 'travail</a>', '</li>', '</ul>', '</div>', '</body>', '</html><!--', 'vim:set', 'et', 'sw=2', 'ts=2:', '-->', '```']",challenge not surrounded by ''': ,
"import redis from '../../lib/redis'

export default async function upvote(req, res) {
  const { title, id } = req.body
  const ip =
    req.headers['x-forwarded-for'] || req.headers['Remote_Addr'] || 'NA'
  const count = ip === 'NA' ? 1 : await redis.sadd('s:' + title, ip)

  if (count === 0) {
    res.status(400).json({
      error: 'You can not vote an item multiple times',
    })
  } else {
    const entry = JSON.parse((await redis.hget('features', id)) || 'null')
    const updated = {
      ...entry,
      score: entry.score + 1,
      ip,
    }

    await redis.hset('features', id, JSON.stringify(updated))
    return res.status(201).json(updated)
  }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```import', 'redis', 'from', ""'../../lib/redis'"", 'export', 'default', 'async', 'function', 'upvote(req,', 'res)', '{', 'const', '{', 'title,', 'id', '}', '=', 'req.body', 'const', 'ip', '=', ""req.headers['x-forwarded-for']"", '||', ""req.headers['Remote_Addr']"", '||', ""'NA'"", 'const', 'count', '=', 'ip', '===', ""'NA'"", '?', '1', ':', 'await', ""redis.sadd('s:'"", '+', 'title,', 'ip)', 'if', '(count', '===', '0)', '{', 'res.status(400).json({', 'error:', ""'You"", 'can', 'not', 'vote', 'an', 'item', 'multiple', ""times',"", '})', '}', 'else', '{', 'const', 'entry', '=', 'JSON.parse((await', ""redis.hget('features',"", 'id))', '||', ""'null')"", 'const', 'updated', '=', '{', '...entry,', 'score:', 'entry.score', '+', '1,', 'ip,', '}', 'await', ""redis.hset('features',"", 'id,', 'JSON.stringify(updated))', 'return', 'res.status(201).json(updated)', '}', '}', '```']",challenge not surrounded by ''': ,
"/*
 * Copyright 2000-2009 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.intellij.openapi.vcs.changes.ui;

public class ChangeListRemoteState {
  // true -> isUpToDate
  private final boolean[] myChangeStates;

  public ChangeListRemoteState(int size) {
    myChangeStates = new boolean[size];
    for (int i = 0; i < myChangeStates.length; i++) {
      myChangeStates[i] = true;
    }
  }

  public void report(int idx, boolean isUpToDate) {
    myChangeStates[idx] = isUpToDate;
  }

  public boolean allUpToDate() {
    boolean result = true;
    for (boolean state : myChangeStates) {
      result &= state;
    }
    return result;
  }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Copyright', '2000-2009', 'JetBrains', 's.r.o.', '*', '*', 'Licensed', 'under', 'the', 'Apache', 'License,', 'Version', '2.0', '(the', '""License"");', '*', 'you', 'may', 'not', 'use', 'this', 'file', 'except', 'in', 'compliance', 'with', 'the', 'License.', '*', 'You', 'may', 'obtain', 'a', 'copy', 'of', 'the', 'License', 'at', '*', '*', 'http://www.apache.org/licenses/LICENSE-2.0', '*', '*', 'Unless', 'required', 'by', 'applicable', 'law', 'or', 'agreed', 'to', 'in', 'writing,', 'software', '*', 'distributed', 'under', 'the', 'License', 'is', 'distributed', 'on', 'an', '""AS', 'IS""', 'BASIS,', '*', 'WITHOUT', 'WARRANTIES', 'OR', 'CONDITIONS', 'OF', 'ANY', 'KIND,', 'either', 'express', 'or', 'implied.', '*', 'See', 'the', 'License', 'for', 'the', 'specific', 'language', 'governing', 'permissions', 'and', '*', 'limitations', 'under', 'the', 'License.', '*/', 'package', 'com.intellij.openapi.vcs.changes.ui;', 'public', 'class', 'ChangeListRemoteState', '{', '//', 'true', '->', 'isUpToDate', 'private', 'final', 'boolean[]', 'myChangeStates;', 'public', 'ChangeListRemoteState(int', 'size)', '{', 'myChangeStates', '=', 'new', 'boolean[size];', 'for', '(int', 'i', '=', '0;', 'i', '<', 'myChangeStates.length;', 'i++)', '{', 'myChangeStates[i]', '=', 'true;', '}', '}', 'public', 'void', 'report(int', 'idx,', 'boolean', 'isUpToDate)', '{', 'myChangeStates[idx]', '=', 'isUpToDate;', '}', 'public', 'boolean', 'allUpToDate()', '{', 'boolean', 'result', '=', 'true;', 'for', '(boolean', 'state', ':', 'myChangeStates)', '{', 'result', '&=', 'state;', '}', 'return', 'result;', '}', '}', '```']",challenge not surrounded by ''': ,
"package erepnikov.products_storage.models;

import java.util.Date;

/**
 * Abstract Class FoodRF.
 *
 * !!! RF is Reproduct-Frozen !!!
 *
 * @author Egor Repnikov
 * @version 0.0.1
 * @since 05.11.2017
 */
public abstract class FoodRF extends Food {

    /**
     * Food's condition of frozen.
     */
    private boolean isFrozen;

    /**
     * Food's condition of reproduct
     */
    private boolean canReproduct;

    /**
     * Empty construct.
     */
    public FoodRF() {
    }

    /**
     * Initialize all fields.
     * @param name
     * @param expiryDate
     * @param createDate
     * @param price
     * @param discount
     * @param isFrozen
     * @param canReproduct
     */
    public FoodRF(String name, Date expiryDate, Date createDate, int price, double discount, boolean isFrozen, boolean canReproduct) {
        super(name, expiryDate, createDate, price, discount);
        this.isFrozen = isFrozen;
        this.canReproduct = canReproduct;
    }

    /**
     * Getter of FoodRF's frozen condition.
     * @return FoodRF's frozen condition
     */
    public boolean isFrozen() {
        return isFrozen;
    }

    /**
     * Setter of FoodRF's frozen condition.
     * @param frozen boolean
     */
    public void setFrozen(boolean frozen) {
        isFrozen = frozen;
    }

    /**
     * Getter of FoodRF's reproduction condition.
     * @return
     */
    public boolean isCanReproduct() {
        return canReproduct;
    }

    /**
     * Setter of FoodRF's reproduction condition.
     * @param canReproduct boolean
     */
    public void setCanReproduct(boolean canReproduct) {
        this.canReproduct = canReproduct;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        if (!super.equals(o)) return false;

        FoodRF foodRF = (FoodRF) o;

        if (isFrozen != foodRF.isFrozen) return false;
        return canReproduct == foodRF.canReproduct;
    }

    @Override
    public int hashCode() {
        int result = super.hashCode();
        result = 31 * result + (isFrozen ? 1 : 0);
        result = 31 * result + (canReproduct ? 1 : 0);
        return result;
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'erepnikov.products_storage.models;', 'import', 'java.util.Date;', '/**', '*', 'Abstract', 'Class', 'FoodRF.', '*', '*', '!!!', 'RF', 'is', 'Reproduct-Frozen', '!!!', '*', '*', '@author', 'Egor', 'Repnikov', '*', '@version', '0.0.1', '*', '@since', '05.11.2017', '*/', 'public', 'abstract', 'class', 'FoodRF', 'extends', 'Food', '{', '/**', '*', ""Food's"", 'condition', 'of', 'frozen.', '*/', 'private', 'boolean', 'isFrozen;', '/**', '*', ""Food's"", 'condition', 'of', 'reproduct', '*/', 'private', 'boolean', 'canReproduct;', '/**', '*', 'Empty', 'construct.', '*/', 'public', 'FoodRF()', '{', '}', '/**', '*', 'Initialize', 'all', 'fields.', '*', '@param', 'name', '*', '@param', 'expiryDate', '*', '@param', 'createDate', '*', '@param', 'price', '*', '@param', 'discount', '*', '@param', 'isFrozen', '*', '@param', 'canReproduct', '*/', 'public', 'FoodRF(String', 'name,', 'Date', 'expiryDate,', 'Date', 'createDate,', 'int', 'price,', 'double', 'discount,', 'boolean', 'isFrozen,', 'boolean', 'canReproduct)', '{', 'super(name,', 'expiryDate,', 'createDate,', 'price,', 'discount);', 'this.isFrozen', '=', 'isFrozen;', 'this.canReproduct', '=', 'canReproduct;', '}', '/**', '*', 'Getter', 'of', ""FoodRF's"", 'frozen', 'condition.', '*', '@return', ""FoodRF's"", 'frozen', 'condition', '*/', 'public', 'boolean', 'isFrozen()', '{', 'return', 'isFrozen;', '}', '/**', '*', 'Setter', 'of', ""FoodRF's"", 'frozen', 'condition.', '*', '@param', 'frozen', 'boolean', '*/', 'public', 'void', 'setFrozen(boolean', 'frozen)', '{', 'isFrozen', '=', 'frozen;', '}', '/**', '*', 'Getter', 'of', ""FoodRF's"", 'reproduction', 'condition.', '*', '@return', '*/', 'public', 'boolean', 'isCanReproduct()', '{', 'return', 'canReproduct;', '}', '/**', '*', 'Setter', 'of', ""FoodRF's"", 'reproduction', 'condition.', '*', '@param', 'canReproduct', 'boolean', '*/', 'public', 'void', 'setCanReproduct(boolean', 'canReproduct)', '{', 'this.canReproduct', '=', 'canReproduct;', '}', '@Override', 'public', 'boolean', 'equals(Object', 'o)', '{', 'if', '(this', '==', 'o)', 'return', 'true;', 'if', '(o', '==', 'null', '||', 'getClass()', '!=', 'o.getClass())', 'return', 'false;', 'if', '(!super.equals(o))', 'return', 'false;', 'FoodRF', 'foodRF', '=', '(FoodRF)', 'o;', 'if', '(isFrozen', '!=', 'foodRF.isFrozen)', 'return', 'false;', 'return', 'canReproduct', '==', 'foodRF.canReproduct;', '}', '@Override', 'public', 'int', 'hashCode()', '{', 'int', 'result', '=', 'super.hashCode();', 'result', '=', '31', '*', 'result', '+', '(isFrozen', '?', '1', ':', '0);', 'result', '=', '31', '*', 'result', '+', '(canReproduct', '?', '1', ':', '0);', 'return', 'result;', '}', '}', '```']",challenge not surrounded by ''': ,
"package org.cy3sbml;

import org.cy3sbml.util.NetworkUtil;
import org.cytoscape.model.CyNetwork;
import org.cytoscape.model.CyNode;
import org.cytoscape.model.CyRow;
import org.junit.Test;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

/**
 * Testing fbc models.
 */
public class SBMLFbcTest {
    public static final String TEST_MODEL_FBC = TestUtils.UNITTESTS_RESOURCE_PATH + ""/"" + ""fbc_01.xml"";


    /** Test fbc species attributes. */
    @Test
    public void testFbcSpecies() throws Exception {
        CyNetwork[] networks = new TestUtils().readNetwork(TEST_MODEL_FBC);
        CyNetwork network = NetworkUtil.getNetworkBySubNetworkPrefix(networks, SBML.PREFIX_SUBNETWORK_BASE);
        assertNotNull(network);
        assertEquals(358, network.getNodeCount());
        assertEquals(588, network.getEdgeCount());

        // Test species node
        // <species boundaryCondition=""false"" constant=""false"" metaid=""M_13dpg_c"" hasOnlySubstanceUnits=""false"" sboTerm=""SBO:0000247"" compartment=""c"" name=""3-Phospho-D-glyceroyl phosphate""
        // fbc:chemicalFormula=""C3H4O10P2"" id=""M_13dpg_c"">

        CyNode node = TestUtils.findNodeById(""M_13dpg_c"", network);
        assertNotNull(node);
        CyRow attributes = network.getRow(node);
        assertEquals(""M_13dpg_c"", attributes.get(SBML.ATTR_ID, String.class));

        assertEquals(false, attributes.get(SBML.ATTR_BOUNDARY_CONDITION, Boolean.class));
        assertEquals(false, attributes.get(SBML.ATTR_CONSTANT, Boolean.class));
        assertEquals(false, attributes.get(SBML.ATTR_HAS_ONLY_SUBSTANCE_UNITS, Boolean.class));
        assertEquals(""SBO:0000247"", attributes.get(SBML.ATTR_SBOTERM, String.class));
        assertEquals(""c"", attributes.get(SBML.ATTR_COMPARTMENT, String.class));
        assertEquals(""C3H4O10P2"", attributes.get(SBML.ATTR_FBC_CHEMICAL_FORMULA, String.class));
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'org.cy3sbml;', 'import', 'org.cy3sbml.util.NetworkUtil;', 'import', 'org.cytoscape.model.CyNetwork;', 'import', 'org.cytoscape.model.CyNode;', 'import', 'org.cytoscape.model.CyRow;', 'import', 'org.junit.Test;', 'import', 'static', 'org.junit.Assert.assertEquals;', 'import', 'static', 'org.junit.Assert.assertNotNull;', '/**', '*', 'Testing', 'fbc', 'models.', '*/', 'public', 'class', 'SBMLFbcTest', '{', 'public', 'static', 'final', 'String', 'TEST_MODEL_FBC', '=', 'TestUtils.UNITTESTS_RESOURCE_PATH', '+', '""/""', '+', '""fbc_01.xml"";', '/**', 'Test', 'fbc', 'species', 'attributes.', '*/', '@Test', 'public', 'void', 'testFbcSpecies()', 'throws', 'Exception', '{', 'CyNetwork[]', 'networks', '=', 'new', 'TestUtils().readNetwork(TEST_MODEL_FBC);', 'CyNetwork', 'network', '=', 'NetworkUtil.getNetworkBySubNetworkPrefix(networks,', 'SBML.PREFIX_SUBNETWORK_BASE);', 'assertNotNull(network);', 'assertEquals(358,', 'network.getNodeCount());', 'assertEquals(588,', 'network.getEdgeCount());', '//', 'Test', 'species', 'node', '//', '<species', 'boundaryCondition=""false""', 'constant=""false""', 'metaid=""M_13dpg_c""', 'hasOnlySubstanceUnits=""false""', 'sboTerm=""SBO:0000247""', 'compartment=""c""', 'name=""3-Phospho-D-glyceroyl', 'phosphate""', '//', 'fbc:chemicalFormula=""C3H4O10P2""', 'id=""M_13dpg_c"">', 'CyNode', 'node', '=', 'TestUtils.findNodeById(""M_13dpg_c"",', 'network);', 'assertNotNull(node);', 'CyRow', 'attributes', '=', 'network.getRow(node);', 'assertEquals(""M_13dpg_c"",', 'attributes.get(SBML.ATTR_ID,', 'String.class));', 'assertEquals(false,', 'attributes.get(SBML.ATTR_BOUNDARY_CONDITION,', 'Boolean.class));', 'assertEquals(false,', 'attributes.get(SBML.ATTR_CONSTANT,', 'Boolean.class));', 'assertEquals(false,', 'attributes.get(SBML.ATTR_HAS_ONLY_SUBSTANCE_UNITS,', 'Boolean.class));', 'assertEquals(""SBO:0000247"",', 'attributes.get(SBML.ATTR_SBOTERM,', 'String.class));', 'assertEquals(""c"",', 'attributes.get(SBML.ATTR_COMPARTMENT,', 'String.class));', 'assertEquals(""C3H4O10P2"",', 'attributes.get(SBML.ATTR_FBC_CHEMICAL_FORMULA,', 'String.class));', '}', '}', '```']",challenge not surrounded by ''': ,
"<ion-pane>
	<ion-content class=""login_bg bg_app"">
		<div class=""logo"">
		</div>
		<div class=""txt"">
			<h2 class=""txt-logo"">utanger's</h2>
		</div>

		<form name=""user"" ng-submit=""submitActivate(user)"" novalidate>
			<div class=""dta_ipt"">

				<span class=""item item-input item-email"">
					<input type=""text"" ng-model=""user.code"" placeholder=""Activation Code"" required>
				</span>
				
			</div>
			<div class=""log_btn btn_i"">
				<button type=""submit"" class=""btn login_u"" ng-disabled=""user.$invalid || loading.status"">{{ loading.name }}</button>
			</div>
		</form>

		<div class=""ques"">
			<p>Don’t have account? <a ui-sref=""home.register"">Sign up</a></p>
		</div>
	</ion-content>
</ion-pane>","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<ion-pane>', '<ion-content', 'class=""login_bg', 'bg_app"">', '<div', 'class=""logo"">', '</div>', '<div', 'class=""txt"">', '<h2', 'class=""txt-logo"">utanger\'s</h2>', '</div>', '<form', 'name=""user""', 'ng-submit=""submitActivate(user)""', 'novalidate>', '<div', 'class=""dta_ipt"">', '<span', 'class=""item', 'item-input', 'item-email"">', '<input', 'type=""text""', 'ng-model=""user.code""', 'placeholder=""Activation', 'Code""', 'required>', '</span>', '</div>', '<div', 'class=""log_btn', 'btn_i"">', '<button', 'type=""submit""', 'class=""btn', 'login_u""', 'ng-disabled=""user.$invalid', '||', 'loading.status"">{{', 'loading.name', '}}</button>', '</div>', '</form>', '<div', 'class=""ques"">', '<p>Don’t', 'have', 'account?', '<a', 'ui-sref=""home.register"">Sign', 'up</a></p>', '</div>', '</ion-content>', '</ion-pane>```']",challenge not surrounded by ''': ,
"<!DOCTYPE html>
<html lang=""en"">
<head>
  <title>TourHelper</title>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
  <link rel=""stylesheet"" href=""css/bootstrap.min.css"">
  <script src=""https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js""></script>
  <script src=""js/bootstrap.min.js""></script>
</head>
<body>

<div class=""jumbotron text-center"">
  <a href=""""><img src=""vector.png"" class=""img-fluid"" alt=""Feedback Box"" width=""500""></a>
</div>
  
<div class=""container"">
  <!--form --> 
  
  <form method=""post"" action=""php/feedbackProcessor.php"">
    
    <div class=""form-group"">
    <label for=""departingid"">Departing </label>
    <input type = ""text"" id = ""departingid"" name=""departingid"" value = ""14/12/2015"" disabled/><br/>
    </div>
    
    <div class=""form-group"">
    <label for=""returning-id"">Returning </label>
    <input type = ""text"" id = ""returningid"" name = ""returningid"" value = ""16/12/2015"" disabled/><br/>
    </div>
    
    <div class=""form-group"">
    <label for=""duration-id"">Duration </label>
    <input type = ""text"" id = ""durationid"" name = ""durationid"" value = ""3 Days"" disabled/><br/>
    </div>
    
    <div class=""form-group"">
      <label for=""hotel"">Hotel </label>
      <select class=""custom-select"" id=""hotel"" name=""hotel"">
          <option value = ""ibis"">Ibis Amsterdam Centre: €119 pp</option>
          <option value = ""radisson"">Radisson Blu Hotel: €228 pp</option>
	        <option value = ""novotel"">Novotel Amsterdam City: €178 pp</option>
      </select>
     </div>
    
    <div class=""form-group"">
      <label for=""rooms"">Rooms </label>
      <label class=""radio""><input type=""radio"" name=""rooms"" value=""1"">1 room</label>
      <label class=""radio""><input type=""radio"" name=""rooms"" value=""2"">2 rooms</label>
      
     </div>
    
    <div class=""form-group"">
      <label for=""beds"">Beds </label>
      <label class=""radio""><input type=""radio"" name=""beds"" value=""1"">1 bed</label>
      <label class=""radio""><input type=""radio"" name=""beds"" value=""2"">2 beds</label>
      
     </div>
    
     <div class=""form-group"">
      <label for=""airline"">Airline </label>
        <select class=""custom-select"" id=""airline"" name=""airline"">
          <option value=""AL_2999"">Aer Lingus: €29.99 pp</option>
          <option value=""R_1999"">Ryanair: €19.99 pp</option>
      </select>
      </div>
    
   
    <div class=""form-group"">
      <label for=""passengers"">Passengers </label>
      <select class=""custom-select"" id=""passengers"" name=""passengers"">
          <option value = ""one"">1</option>
          <option value = ""two"">2</option>
	        <option value = ""three"">3</option>
          <option value = ""four"">4</option>
      </select>
     </div>
    
    <input id=""submit"" name=""submit"" type=""submit"" value=""Process Booking"" class=""btn btn-primary"">
</form>
</div>

</body>
</html>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<!DOCTYPE', 'html>', '<html', 'lang=""en"">', '<head>', '<title>TourHelper</title>', '<meta', 'charset=""utf-8"">', '<meta', 'name=""viewport""', 'content=""width=device-width,', 'initial-scale=1"">', '<link', 'rel=""stylesheet""', 'href=""css/bootstrap.min.css"">', '<script', 'src=""https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js""></script>', '<script', 'src=""js/bootstrap.min.js""></script>', '</head>', '<body>', '<div', 'class=""jumbotron', 'text-center"">', '<a', 'href=""""><img', 'src=""vector.png""', 'class=""img-fluid""', 'alt=""Feedback', 'Box""', 'width=""500""></a>', '</div>', '<div', 'class=""container"">', '<!--form', '-->', '<form', 'method=""post""', 'action=""php/feedbackProcessor.php"">', '<div', 'class=""form-group"">', '<label', 'for=""departingid"">Departing', '</label>', '<input', 'type', '=', '""text""', 'id', '=', '""departingid""', 'name=""departingid""', 'value', '=', '""14/12/2015""', 'disabled/><br/>', '</div>', '<div', 'class=""form-group"">', '<label', 'for=""returning-id"">Returning', '</label>', '<input', 'type', '=', '""text""', 'id', '=', '""returningid""', 'name', '=', '""returningid""', 'value', '=', '""16/12/2015""', 'disabled/><br/>', '</div>', '<div', 'class=""form-group"">', '<label', 'for=""duration-id"">Duration', '</label>', '<input', 'type', '=', '""text""', 'id', '=', '""durationid""', 'name', '=', '""durationid""', 'value', '=', '""3', 'Days""', 'disabled/><br/>', '</div>', '<div', 'class=""form-group"">', '<label', 'for=""hotel"">Hotel', '</label>', '<select', 'class=""custom-select""', 'id=""hotel""', 'name=""hotel"">', '<option', 'value', '=', '""ibis"">Ibis', 'Amsterdam', 'Centre:', '€119', 'pp</option>', '<option', 'value', '=', '""radisson"">Radisson', 'Blu', 'Hotel:', '€228', 'pp</option>', '<option', 'value', '=', '""novotel"">Novotel', 'Amsterdam', 'City:', '€178', 'pp</option>', '</select>', '</div>', '<div', 'class=""form-group"">', '<label', 'for=""rooms"">Rooms', '</label>', '<label', 'class=""radio""><input', 'type=""radio""', 'name=""rooms""', 'value=""1"">1', 'room</label>', '<label', 'class=""radio""><input', 'type=""radio""', 'name=""rooms""', 'value=""2"">2', 'rooms</label>', '</div>', '<div', 'class=""form-group"">', '<label', 'for=""beds"">Beds', '</label>', '<label', 'class=""radio""><input', 'type=""radio""', 'name=""beds""', 'value=""1"">1', 'bed</label>', '<label', 'class=""radio""><input', 'type=""radio""', 'name=""beds""', 'value=""2"">2', 'beds</label>', '</div>', '<div', 'class=""form-group"">', '<label', 'for=""airline"">Airline', '</label>', '<select', 'class=""custom-select""', 'id=""airline""', 'name=""airline"">', '<option', 'value=""AL_2999"">Aer', 'Lingus:', '€29.99', 'pp</option>', '<option', 'value=""R_1999"">Ryanair:', '€19.99', 'pp</option>', '</select>', '</div>', '<div', 'class=""form-group"">', '<label', 'for=""passengers"">Passengers', '</label>', '<select', 'class=""custom-select""', 'id=""passengers""', 'name=""passengers"">', '<option', 'value', '=', '""one"">1</option>', '<option', 'value', '=', '""two"">2</option>', '<option', 'value', '=', '""three"">3</option>', '<option', 'value', '=', '""four"">4</option>', '</select>', '</div>', '<input', 'id=""submit""', 'name=""submit""', 'type=""submit""', 'value=""Process', 'Booking""', 'class=""btn', 'btn-primary"">', '</form>', '</div>', '</body>', '</html>', '```']",challenge not surrounded by ''': ,
"package at.or.vogt.oe1downloader.cli;

import org.apache.commons.cli.Option;
import org.apache.commons.cli.Options;

/**
 * Option on the command line.
 */
public enum CliOption {

    /** Option to show help. */
    HELP(""h"", false, ""help""),
    /** Option with target directory. */
    TARGET_DIR(""d"", true, ""target directory to use"");

    /** option name. */
    private final String optionName;
    /** flag if it has arguments. */
    private final boolean hasArguments;
    /** description. */
    private final String description;

    /**
     * Command line option.
     * 
     * @param optionName
     *            option name
     * @param hasArguments
     *            flag if it has arguments
     * @param description
     *            description
     */
    private CliOption(final String optionName, final boolean hasArguments, final String description) {
	this.optionName = optionName;
	this.hasArguments = hasArguments;
	this.description = description;
    }

    /**
     * Get the optionName.
     * 
     * @return the optionName
     */
    public String getOptionName() {
	return optionName;
    }

    /**
     * Get the hasArguments.
     * 
     * @return the hasArguments
     */
    public boolean isHasArguments() {
	return hasArguments;
    }

    /**
     * Get the description.
     * 
     * @return the description
     */
    public String getDescription() {
	return description;
    }

    /**
     * Get the optionName.
     * 
     * @return Option
     */
    public Option getOption() {
	return new Option(optionName, hasArguments, description);
    }

    /**
     * Get all options.
     * 
     * @return all options
     */
    public static Options getOptions() {

	final Options result = new Options();

	for (final CliOption option : values()) {
	    result.addOption(option.getOption());
	}
	return result;
    }

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'at.or.vogt.oe1downloader.cli;', 'import', 'org.apache.commons.cli.Option;', 'import', 'org.apache.commons.cli.Options;', '/**', '*', 'Option', 'on', 'the', 'command', 'line.', '*/', 'public', 'enum', 'CliOption', '{', '/**', 'Option', 'to', 'show', 'help.', '*/', 'HELP(""h"",', 'false,', '""help""),', '/**', 'Option', 'with', 'target', 'directory.', '*/', 'TARGET_DIR(""d"",', 'true,', '""target', 'directory', 'to', 'use"");', '/**', 'option', 'name.', '*/', 'private', 'final', 'String', 'optionName;', '/**', 'flag', 'if', 'it', 'has', 'arguments.', '*/', 'private', 'final', 'boolean', 'hasArguments;', '/**', 'description.', '*/', 'private', 'final', 'String', 'description;', '/**', '*', 'Command', 'line', 'option.', '*', '*', '@param', 'optionName', '*', 'option', 'name', '*', '@param', 'hasArguments', '*', 'flag', 'if', 'it', 'has', 'arguments', '*', '@param', 'description', '*', 'description', '*/', 'private', 'CliOption(final', 'String', 'optionName,', 'final', 'boolean', 'hasArguments,', 'final', 'String', 'description)', '{', 'this.optionName', '=', 'optionName;', 'this.hasArguments', '=', 'hasArguments;', 'this.description', '=', 'description;', '}', '/**', '*', 'Get', 'the', 'optionName.', '*', '*', '@return', 'the', 'optionName', '*/', 'public', 'String', 'getOptionName()', '{', 'return', 'optionName;', '}', '/**', '*', 'Get', 'the', 'hasArguments.', '*', '*', '@return', 'the', 'hasArguments', '*/', 'public', 'boolean', 'isHasArguments()', '{', 'return', 'hasArguments;', '}', '/**', '*', 'Get', 'the', 'description.', '*', '*', '@return', 'the', 'description', '*/', 'public', 'String', 'getDescription()', '{', 'return', 'description;', '}', '/**', '*', 'Get', 'the', 'optionName.', '*', '*', '@return', 'Option', '*/', 'public', 'Option', 'getOption()', '{', 'return', 'new', 'Option(optionName,', 'hasArguments,', 'description);', '}', '/**', '*', 'Get', 'all', 'options.', '*', '*', '@return', 'all', 'options', '*/', 'public', 'static', 'Options', 'getOptions()', '{', 'final', 'Options', 'result', '=', 'new', 'Options();', 'for', '(final', 'CliOption', 'option', ':', 'values())', '{', 'result.addOption(option.getOption());', '}', 'return', 'result;', '}', '}', '```']",challenge not surrounded by ''': ,
"$().ready(function(){
	$('#example6').jqRevolve({autoSize: true});
	
	$('#updateExample6').click(function(){
		
		// Grab random images from Flickr.com
		$.getJSON(""http://api.flickr.com/services/feeds/photos_public.gne?tags=""+getTag()+""&format=json&jsoncallback=?"",
        function(data){
          
		  // create new content placeholder
		  var newContent = '';
		  
		  $.each(data.items, function(i,item){
			newContent += '<img src=""'+item.media.m+'"" /> &nbsp;'
            if ( i == 5 ) return false;
          });
		  
		  // update example 6 carousel with newContent
		  $('#example6').jqrRefresh(newContent);
		  
        });

	});
	
	// random tags for Flickr Service
	var tags = ['kitten','goldfish','puppy'],i=0;
	function getTag(){
		if(i == 3)
			i = 0;
		return tags[i++];
	}
});






","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```$().ready(function(){', ""$('#example6').jqRevolve({autoSize:"", 'true});', ""$('#updateExample6').click(function(){"", '//', 'Grab', 'random', 'images', 'from', 'Flickr.com', '$.getJSON(""http://api.flickr.com/services/feeds/photos_public.gne?tags=""+getTag()+""&format=json&jsoncallback=?"",', 'function(data){', '//', 'create', 'new', 'content', 'placeholder', 'var', 'newContent', '=', ""'';"", '$.each(data.items,', 'function(i,item){', 'newContent', '+=', ""'<img"", 'src=""\'+item.media.m+\'""', '/>', ""&nbsp;'"", 'if', '(', 'i', '==', '5', ')', 'return', 'false;', '});', '//', 'update', 'example', '6', 'carousel', 'with', 'newContent', ""$('#example6').jqrRefresh(newContent);"", '});', '});', '//', 'random', 'tags', 'for', 'Flickr', 'Service', 'var', 'tags', '=', ""['kitten','goldfish','puppy'],i=0;"", 'function', 'getTag(){', 'if(i', '==', '3)', 'i', '=', '0;', 'return', 'tags[i++];', '}', '});', '```']",challenge not surrounded by ''': ,
"from concurrent import futures
import time
import math
import random
import grpc
import device_pb2


temperature_db = {}

class TemperatureService(device_pb2.TemperatureServiceServicer):
    def set_temperature(self, request, context):
	temperature_db[request.device] = request.celcius
        return device_pb2.Empty()

    def get_temperature(self, request, context):
	while True:
		temperature = temperature_db[request.device] if request.device in temperature_db else 10.0
		yield device_pb2.Temperature(device=request.device, celcius=temperature + random.random() - 0.5)
		time.sleep(2)

class UsageService(device_pb2.UsageServiceServicer):
    def latest_electricity_usage(self, request, context):
	print request
        return device_pb2.Empty()

    def latest_gas_usage(self, request, context):
	print request
        return device_pb2.Empty()



def serve():
  server = grpc.server(futures.ThreadPoolExecutor(max_workers=10))
  device_pb2.add_TemperatureServiceServicer_to_server(TemperatureService(), server)
  device_pb2.add_UsageServiceServicer_to_server(UsageService(), server)
  server.add_insecure_port('[::]:50051')
  server.start()
  print 'server running on port %s' % '50051'
  try:
    while True:
      time.sleep(24 * 2600)
  except KeyboardInterrupt:
    server.stop(0)


if __name__ == '__main__':
  serve()
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```from', 'concurrent', 'import', 'futures', 'import', 'time', 'import', 'math', 'import', 'random', 'import', 'grpc', 'import', 'device_pb2', 'temperature_db', '=', '{}', 'class', 'TemperatureService(device_pb2.TemperatureServiceServicer):', 'def', 'set_temperature(self,', 'request,', 'context):', 'temperature_db[request.device]', '=', 'request.celcius', 'return', 'device_pb2.Empty()', 'def', 'get_temperature(self,', 'request,', 'context):', 'while', 'True:', 'temperature', '=', 'temperature_db[request.device]', 'if', 'request.device', 'in', 'temperature_db', 'else', '10.0', 'yield', 'device_pb2.Temperature(device=request.device,', 'celcius=temperature', '+', 'random.random()', '-', '0.5)', 'time.sleep(2)', 'class', 'UsageService(device_pb2.UsageServiceServicer):', 'def', 'latest_electricity_usage(self,', 'request,', 'context):', 'print', 'request', 'return', 'device_pb2.Empty()', 'def', 'latest_gas_usage(self,', 'request,', 'context):', 'print', 'request', 'return', 'device_pb2.Empty()', 'def', 'serve():', 'server', '=', 'grpc.server(futures.ThreadPoolExecutor(max_workers=10))', 'device_pb2.add_TemperatureServiceServicer_to_server(TemperatureService(),', 'server)', 'device_pb2.add_UsageServiceServicer_to_server(UsageService(),', 'server)', ""server.add_insecure_port('[::]:50051')"", 'server.start()', 'print', ""'server"", 'running', 'on', 'port', ""%s'"", '%', ""'50051'"", 'try:', 'while', 'True:', 'time.sleep(24', '*', '2600)', 'except', 'KeyboardInterrupt:', 'server.stop(0)', 'if', '__name__', '==', ""'__main__':"", 'serve()', '```']",challenge not surrounded by ''': ,
"package com.sas.brd.service;

import java.io.Serializable;
import java.util.List;

/**
 * Generic Manager that talks to GenericDao to CRUD POJOs.
 *
 * <p>Extend this interface if you want typesafe (no casting necessary) managers
 * for your domain objects.
 *
 * @author <a href=""mailto:matt@raibledesigns.com"">Matt Raible</a>
 *  Updated by jgarcia: added full text search + reindexing
 * @param <T> a type variable
 * @param <PK> the primary key for that type
 */
public interface GenericManager<T, PK extends Serializable> {

    /**
     * Generic method used to get all objects of a particular type. This
     * is the same as lookup up all rows in a table.
     * @return List of populated objects
     */
    List<T> getAll();

    /**
     * Generic method to get an object based on class and identifier. An
     * ObjectRetrievalFailureException Runtime Exception is thrown if
     * nothing is found.
     *
     * @param id the identifier (primary key) of the object to get
     * @return a populated object
     * @see org.springframework.orm.ObjectRetrievalFailureException
     */
    T get(PK id);

    /**
     * Checks for existence of an object of type T using the id arg.
     * @param id the identifier (primary key) of the object to get
     * @return - true if it exists, false if it doesn't
     */
    boolean exists(PK id);

    /**
     * Generic method to save an object - handles both update and insert.
     * @param object the object to save
     * @return the updated object
     */
    T save(T object);

    /**
     * Generic method to delete an object
     * @param object the object to remove
     */
    void remove(T object);

    /**
     * Generic method to delete an object based on class and id
     * @param id the identifier (primary key) of the object to remove
     */
    void remove(PK id);

    /**
     * Generic method to search for an object.
     * @param searchTerm the search term
     * @param clazz type of class to search for.
     * @return a list of matched objects
     */
    List<T> search(String searchTerm, Class clazz);
    /**
     * Generic method to regenerate full text index of the persistent class T
     */
    void reindex();

    /**
     * Generic method to regenerate full text index of all indexed classes
     *
     * @param async
     *            true to perform the reindexing asynchronously
     */
    void reindexAll(boolean async);
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.sas.brd.service;', 'import', 'java.io.Serializable;', 'import', 'java.util.List;', '/**', '*', 'Generic', 'Manager', 'that', 'talks', 'to', 'GenericDao', 'to', 'CRUD', 'POJOs.', '*', '*', '<p>Extend', 'this', 'interface', 'if', 'you', 'want', 'typesafe', '(no', 'casting', 'necessary)', 'managers', '*', 'for', 'your', 'domain', 'objects.', '*', '*', '@author', '<a', 'href=""mailto:matt@raibledesigns.com"">Matt', 'Raible</a>', '*', 'Updated', 'by', 'jgarcia:', 'added', 'full', 'text', 'search', '+', 'reindexing', '*', '@param', '<T>', 'a', 'type', 'variable', '*', '@param', '<PK>', 'the', 'primary', 'key', 'for', 'that', 'type', '*/', 'public', 'interface', 'GenericManager<T,', 'PK', 'extends', 'Serializable>', '{', '/**', '*', 'Generic', 'method', 'used', 'to', 'get', 'all', 'objects', 'of', 'a', 'particular', 'type.', 'This', '*', 'is', 'the', 'same', 'as', 'lookup', 'up', 'all', 'rows', 'in', 'a', 'table.', '*', '@return', 'List', 'of', 'populated', 'objects', '*/', 'List<T>', 'getAll();', '/**', '*', 'Generic', 'method', 'to', 'get', 'an', 'object', 'based', 'on', 'class', 'and', 'identifier.', 'An', '*', 'ObjectRetrievalFailureException', 'Runtime', 'Exception', 'is', 'thrown', 'if', '*', 'nothing', 'is', 'found.', '*', '*', '@param', 'id', 'the', 'identifier', '(primary', 'key)', 'of', 'the', 'object', 'to', 'get', '*', '@return', 'a', 'populated', 'object', '*', '@see', 'org.springframework.orm.ObjectRetrievalFailureException', '*/', 'T', 'get(PK', 'id);', '/**', '*', 'Checks', 'for', 'existence', 'of', 'an', 'object', 'of', 'type', 'T', 'using', 'the', 'id', 'arg.', '*', '@param', 'id', 'the', 'identifier', '(primary', 'key)', 'of', 'the', 'object', 'to', 'get', '*', '@return', '-', 'true', 'if', 'it', 'exists,', 'false', 'if', 'it', ""doesn't"", '*/', 'boolean', 'exists(PK', 'id);', '/**', '*', 'Generic', 'method', 'to', 'save', 'an', 'object', '-', 'handles', 'both', 'update', 'and', 'insert.', '*', '@param', 'object', 'the', 'object', 'to', 'save', '*', '@return', 'the', 'updated', 'object', '*/', 'T', 'save(T', 'object);', '/**', '*', 'Generic', 'method', 'to', 'delete', 'an', 'object', '*', '@param', 'object', 'the', 'object', 'to', 'remove', '*/', 'void', 'remove(T', 'object);', '/**', '*', 'Generic', 'method', 'to', 'delete', 'an', 'object', 'based', 'on', 'class', 'and', 'id', '*', '@param', 'id', 'the', 'identifier', '(primary', 'key)', 'of', 'the', 'object', 'to', 'remove', '*/', 'void', 'remove(PK', 'id);', '/**', '*', 'Generic', 'method', 'to', 'search', 'for', 'an', 'object.', '*', '@param', 'searchTerm', 'the', 'search', 'term', '*', '@param', 'clazz', 'type', 'of', 'class', 'to', 'search', 'for.', '*', '@return', 'a', 'list', 'of', 'matched', 'objects', '*/', 'List<T>', 'search(String', 'searchTerm,', 'Class', 'clazz);', '/**', '*', 'Generic', 'method', 'to', 'regenerate', 'full', 'text', 'index', 'of', 'the', 'persistent', 'class', 'T', '*/', 'void', 'reindex();', '/**', '*', 'Generic', 'method', 'to', 'regenerate', 'full', 'text', 'index', 'of', 'all', 'indexed', 'classes', '*', '*', '@param', 'async', '*', 'true', 'to', 'perform', 'the', 'reindexing', 'asynchronously', '*/', 'void', 'reindexAll(boolean', 'async);', '}', '```']",challenge not surrounded by ''': ,
"package gccc;

import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.TimeUnit;

public class ThreadPool implements AutoCloseable {


	public static class Task implements Runnable {
		
		public Task(Runnable r) {
			this.r = r;
		}
		
		@Override
		public void run() {
			synchronized(this) {
				if (stop)
					return;
				thread=Thread.currentThread();
			}
			try {
				r.run();
			}
			finally {
				synchronized(this) {
					thread=null;
				}
			}
		}
		
		public void interrupt() {
			synchronized(this) {
				if (thread!=null)
					thread.interrupt();
				stop=true;
			}
		}

		private Thread thread;
		private boolean stop=false;
		private Runnable r;
	}
	
	public Task execute(Runnable r) {
		Task task = new Task(r);
		threadPool.execute(task);
		return task;
	}
	
	@Override
	public void close() throws Exception {
		// Prevent new tasks from starting:
		threadPool.shutdown(); 
		try {
			// Wait a while for existing tasks to terminate
			if (threadPool.awaitTermination(5, TimeUnit.SECONDS))
				return;
			threadPool.shutdownNow(); 
			// Wait a while for tasks to respond to being cancelled
			if (threadPool.awaitTermination(5, TimeUnit.SECONDS))
				return;
		} 
		catch (InterruptedException ie) {
			// (Re-)Cancel if current thread also interrupted
			threadPool.shutdownNow();
			// Preserve interrupt status
			Thread.currentThread().interrupt();
		}
	}

	private ExecutorService threadPool=Executors.newCachedThreadPool();

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'gccc;', 'import', 'java.util.concurrent.ExecutorService;', 'import', 'java.util.concurrent.Executors;', 'import', 'java.util.concurrent.TimeUnit;', 'public', 'class', 'ThreadPool', 'implements', 'AutoCloseable', '{', 'public', 'static', 'class', 'Task', 'implements', 'Runnable', '{', 'public', 'Task(Runnable', 'r)', '{', 'this.r', '=', 'r;', '}', '@Override', 'public', 'void', 'run()', '{', 'synchronized(this)', '{', 'if', '(stop)', 'return;', 'thread=Thread.currentThread();', '}', 'try', '{', 'r.run();', '}', 'finally', '{', 'synchronized(this)', '{', 'thread=null;', '}', '}', '}', 'public', 'void', 'interrupt()', '{', 'synchronized(this)', '{', 'if', '(thread!=null)', 'thread.interrupt();', 'stop=true;', '}', '}', 'private', 'Thread', 'thread;', 'private', 'boolean', 'stop=false;', 'private', 'Runnable', 'r;', '}', 'public', 'Task', 'execute(Runnable', 'r)', '{', 'Task', 'task', '=', 'new', 'Task(r);', 'threadPool.execute(task);', 'return', 'task;', '}', '@Override', 'public', 'void', 'close()', 'throws', 'Exception', '{', '//', 'Prevent', 'new', 'tasks', 'from', 'starting:', 'threadPool.shutdown();', 'try', '{', '//', 'Wait', 'a', 'while', 'for', 'existing', 'tasks', 'to', 'terminate', 'if', '(threadPool.awaitTermination(5,', 'TimeUnit.SECONDS))', 'return;', 'threadPool.shutdownNow();', '//', 'Wait', 'a', 'while', 'for', 'tasks', 'to', 'respond', 'to', 'being', 'cancelled', 'if', '(threadPool.awaitTermination(5,', 'TimeUnit.SECONDS))', 'return;', '}', 'catch', '(InterruptedException', 'ie)', '{', '//', '(Re-)Cancel', 'if', 'current', 'thread', 'also', 'interrupted', 'threadPool.shutdownNow();', '//', 'Preserve', 'interrupt', 'status', 'Thread.currentThread().interrupt();', '}', '}', 'private', 'ExecutorService', 'threadPool=Executors.newCachedThreadPool();', '}', '```']",challenge not surrounded by ''': ,
"#include ""stdafx.h""
#include ""Loop.h""


CLoop::CLoop(const size_t count, HANDLE event, CRITICAL_SECTION* pSynchronizer) :
	m_count(count), m_event(event), m_synchronizer(pSynchronizer), m_thread(), m_duration()
{
}
CLoop::~CLoop()
{
	if (nullptr != m_thread)
	{
		CloseHandle(m_thread);
		m_thread = nullptr;
	}
}
void CLoop::Construct()
{
	if (nullptr != m_thread)
	{
		throw runtime_error(""This instance is constructed already"");
	}
	m_thread = CreateThread(nullptr, 0, &CLoop::ThreadFunction, this, 0, nullptr);
	if (nullptr == m_thread)
	{
		throw runtime_error(""Couldn't create a new thread"");
	}
}
void CLoop::WaitFor() const
{
	WaitForSingleObject(m_thread, INFINITE);
}
size_t CLoop::GetDuration() const
{
	return m_duration;
}
DWORD __stdcall CLoop::ThreadFunction(void* arg)
{
	CLoop* pThis = reinterpret_cast<CLoop*>(arg);
	pThis->Loop();
	return 0;
}
void CLoop::Loop()
{
	const size_t count = m_count;
	CRITICAL_SECTION* pSynchronizer = m_synchronizer;

	const ULONGLONG start = GetTickCount64();

	for (size_t index = 0; index < count; ++index)
	{
		EnterCriticalSection(pSynchronizer);
		LeaveCriticalSection(pSynchronizer);
	}

	const ULONGLONG finish = GetTickCount64();

	m_duration = static_cast<size_t>(finish - start);
}

ostream& operator << (ostream& stream, const CLoop& loop)
{
	const size_t duration = loop.GetDuration();
	double speed = loop.m_count * 1000.0 / duration;
	stream<<'\t'<<duration<<'\t'<<speed;
	return stream;
}","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#include', '""stdafx.h""', '#include', '""Loop.h""', 'CLoop::CLoop(const', 'size_t', 'count,', 'HANDLE', 'event,', 'CRITICAL_SECTION*', 'pSynchronizer)', ':', 'm_count(count),', 'm_event(event),', 'm_synchronizer(pSynchronizer),', 'm_thread(),', 'm_duration()', '{', '}', 'CLoop::~CLoop()', '{', 'if', '(nullptr', '!=', 'm_thread)', '{', 'CloseHandle(m_thread);', 'm_thread', '=', 'nullptr;', '}', '}', 'void', 'CLoop::Construct()', '{', 'if', '(nullptr', '!=', 'm_thread)', '{', 'throw', 'runtime_error(""This', 'instance', 'is', 'constructed', 'already"");', '}', 'm_thread', '=', 'CreateThread(nullptr,', '0,', '&CLoop::ThreadFunction,', 'this,', '0,', 'nullptr);', 'if', '(nullptr', '==', 'm_thread)', '{', 'throw', 'runtime_error(""Couldn\'t', 'create', 'a', 'new', 'thread"");', '}', '}', 'void', 'CLoop::WaitFor()', 'const', '{', 'WaitForSingleObject(m_thread,', 'INFINITE);', '}', 'size_t', 'CLoop::GetDuration()', 'const', '{', 'return', 'm_duration;', '}', 'DWORD', '__stdcall', 'CLoop::ThreadFunction(void*', 'arg)', '{', 'CLoop*', 'pThis', '=', 'reinterpret_cast<CLoop*>(arg);', 'pThis->Loop();', 'return', '0;', '}', 'void', 'CLoop::Loop()', '{', 'const', 'size_t', 'count', '=', 'm_count;', 'CRITICAL_SECTION*', 'pSynchronizer', '=', 'm_synchronizer;', 'const', 'ULONGLONG', 'start', '=', 'GetTickCount64();', 'for', '(size_t', 'index', '=', '0;', 'index', '<', 'count;', '++index)', '{', 'EnterCriticalSection(pSynchronizer);', 'LeaveCriticalSection(pSynchronizer);', '}', 'const', 'ULONGLONG', 'finish', '=', 'GetTickCount64();', 'm_duration', '=', 'static_cast<size_t>(finish', '-', 'start);', '}', 'ostream&', 'operator', '<<', '(ostream&', 'stream,', 'const', 'CLoop&', 'loop)', '{', 'const', 'size_t', 'duration', '=', 'loop.GetDuration();', 'double', 'speed', '=', 'loop.m_count', '*', '1000.0', '/', 'duration;', ""stream<<'\\t'<<duration<<'\\t'<<speed;"", 'return', 'stream;', '}```']",challenge not surrounded by ''': ,
"/*******************************************************************************
 * Copyright (c) 1998, 2013 Oracle and/or its affiliates. All rights reserved.
 * This program and the accompanying materials are made available under the 
 * terms of the Eclipse Public License v1.0 and Eclipse Distribution License v. 1.0 
 * which accompanies this distribution. 
 * The Eclipse Public License is available at http://www.eclipse.org/legal/epl-v10.html
 * and the Eclipse Distribution License is available at 
 * http://www.eclipse.org/org/documents/edl-v10.php.
 *
 * Contributors:
 *     Tom Ware - Oracle
 ******************************************************************************/  
package org.eclipse.persistence.testing.models.jpa.xml.composite.advanced.member_1;

import java.io.Serializable;

public class AddressType implements Serializable{

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*******************************************************************************', '*', 'Copyright', '(c)', '1998,', '2013', 'Oracle', 'and/or', 'its', 'affiliates.', 'All', 'rights', 'reserved.', '*', 'This', 'program', 'and', 'the', 'accompanying', 'materials', 'are', 'made', 'available', 'under', 'the', '*', 'terms', 'of', 'the', 'Eclipse', 'Public', 'License', 'v1.0', 'and', 'Eclipse', 'Distribution', 'License', 'v.', '1.0', '*', 'which', 'accompanies', 'this', 'distribution.', '*', 'The', 'Eclipse', 'Public', 'License', 'is', 'available', 'at', 'http://www.eclipse.org/legal/epl-v10.html', '*', 'and', 'the', 'Eclipse', 'Distribution', 'License', 'is', 'available', 'at', '*', 'http://www.eclipse.org/org/documents/edl-v10.php.', '*', '*', 'Contributors:', '*', 'Tom', 'Ware', '-', 'Oracle', '******************************************************************************/', 'package', 'org.eclipse.persistence.testing.models.jpa.xml.composite.advanced.member_1;', 'import', 'java.io.Serializable;', 'public', 'class', 'AddressType', 'implements', 'Serializable{', '}', '```']",challenge not surrounded by ''': ,
"#ifndef GAME_CORE_WORLD_CONSTANT_HPP
#define GAME_CORE_WORLD_CONSTANT_HPP

#include <cmath>

#include ""PlayRho/Common/Vector2D.hpp""

#include ""GameConstant.hpp""

namespace World {

const float kPixelScale = static_cast<float>(kTileSize) / 2.f;
const float kWorldScale = 2.f / static_cast<float>(kTileSize);

const float kGravity = 0; // 9.81f;
const int kVelocityIt = 6;
const int kPositionIt = 2;

const playrho::Length2D kBodyCenter{ 1, 1 };

const float pi = std::acos(-1);
const float rad = pi / 180.f;
const float deg = 180.f / pi;

} /* namespace World */

#endif
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#ifndef', 'GAME_CORE_WORLD_CONSTANT_HPP', '#define', 'GAME_CORE_WORLD_CONSTANT_HPP', '#include', '<cmath>', '#include', '""PlayRho/Common/Vector2D.hpp""', '#include', '""GameConstant.hpp""', 'namespace', 'World', '{', 'const', 'float', 'kPixelScale', '=', 'static_cast<float>(kTileSize)', '/', '2.f;', 'const', 'float', 'kWorldScale', '=', '2.f', '/', 'static_cast<float>(kTileSize);', 'const', 'float', 'kGravity', '=', '0;', '//', '9.81f;', 'const', 'int', 'kVelocityIt', '=', '6;', 'const', 'int', 'kPositionIt', '=', '2;', 'const', 'playrho::Length2D', 'kBodyCenter{', '1,', '1', '};', 'const', 'float', 'pi', '=', 'std::acos(-1);', 'const', 'float', 'rad', '=', 'pi', '/', '180.f;', 'const', 'float', 'deg', '=', '180.f', '/', 'pi;', '}', '/*', 'namespace', 'World', '*/', '#endif', '```']",challenge not surrounded by ''': ,
"# oxy.io
# File: oxyio/includes/web/csrf.py
# Desc: csrf protection!

from uuid import uuid4

from flask import session, abort, request, Markup

from oxyio.app import web_app


# Check all POST/PUT/DELETE's
# 403 on failure
@web_app.before_request
def csrf_check():
    # TODO: Check referrer matches us

    # Check a valid csrf_token was presented
    if request.method in ['POST', 'PUT', 'DELETE']:
        token = session.pop('csrf_token', None)
        if not token or token != str(request.form.get('csrf_token')):
            abort(401)


# Generate/store CSRF tokens
def generate_csrf():
    if 'csrf_token' not in session:
        session['csrf_token'] = str(uuid4())

    return session['csrf_token']

web_app.jinja_env.globals['csrf_token'] = generate_csrf


# Template shortcut
def generate_csrf_input():
    token = generate_csrf()
    return Markup('<input type=""hidden"" name=""csrf_token"" value=""{0}"" />'.format(token))

web_app.jinja_env.globals['csrf_input'] = generate_csrf_input
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#', 'oxy.io', '#', 'File:', 'oxyio/includes/web/csrf.py', '#', 'Desc:', 'csrf', 'protection!', 'from', 'uuid', 'import', 'uuid4', 'from', 'flask', 'import', 'session,', 'abort,', 'request,', 'Markup', 'from', 'oxyio.app', 'import', 'web_app', '#', 'Check', 'all', ""POST/PUT/DELETE's"", '#', '403', 'on', 'failure', '@web_app.before_request', 'def', 'csrf_check():', '#', 'TODO:', 'Check', 'referrer', 'matches', 'us', '#', 'Check', 'a', 'valid', 'csrf_token', 'was', 'presented', 'if', 'request.method', 'in', ""['POST',"", ""'PUT',"", ""'DELETE']:"", 'token', '=', ""session.pop('csrf_token',"", 'None)', 'if', 'not', 'token', 'or', 'token', '!=', ""str(request.form.get('csrf_token')):"", 'abort(401)', '#', 'Generate/store', 'CSRF', 'tokens', 'def', 'generate_csrf():', 'if', ""'csrf_token'"", 'not', 'in', 'session:', ""session['csrf_token']"", '=', 'str(uuid4())', 'return', ""session['csrf_token']"", ""web_app.jinja_env.globals['csrf_token']"", '=', 'generate_csrf', '#', 'Template', 'shortcut', 'def', 'generate_csrf_input():', 'token', '=', 'generate_csrf()', 'return', ""Markup('<input"", 'type=""hidden""', 'name=""csrf_token""', 'value=""{0}""', ""/>'.format(token))"", ""web_app.jinja_env.globals['csrf_input']"", '=', 'generate_csrf_input', '```']",challenge not surrounded by ''': ,
"
export const FINISHED_UPLOAD = 'FINISHED_UPLOAD'

export default function finishUpload(gallery, file) {
  return dispatch => dispatch({
    type: FINISHED_UPLOAD,
    file,
    gallery,
  })
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```', 'export', 'const', 'FINISHED_UPLOAD', '=', ""'FINISHED_UPLOAD'"", 'export', 'default', 'function', 'finishUpload(gallery,', 'file)', '{', 'return', 'dispatch', '=>', 'dispatch({', 'type:', 'FINISHED_UPLOAD,', 'file,', 'gallery,', '})', '}', '```']",challenge not surrounded by ''': ,
"#!/usr/bin/env python
# Copyright 2010-2014 RethinkDB, all rights reserved.

from __future__ import print_function

import sys, os, time

startTime = time.time()

sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), os.path.pardir, 'common')))
import driver, rdb_workload_common, scenario_common, utils, vcoptparse

op = vcoptparse.OptParser()
scenario_common.prepare_option_parser_mode_flags(op)
_, command_prefix, serve_options = scenario_common.parse_mode_flags(op.parse(sys.argv))

numNodes = 2

r = utils.import_python_driver()
dbName, tableName = utils.get_test_db_table()

print(""Starting cluster of %d servers (%.2fs)"" % (numNodes, time.time() - startTime))
with driver.Cluster(initial_servers=numNodes, output_folder='.', wait_until_ready=True, command_prefix=command_prefix, extra_options=serve_options) as cluster:
    
    server1 = cluster[0]
    server2 = cluster[1]
    conn = r.connect(host=server1.host, port=server1.driver_port)
    
    print(""Creating db/table %s/%s (%.2fs)"" % (dbName, tableName, time.time() - startTime))
    
    if dbName not in r.db_list().run(conn):
        r.db_create(dbName).run(conn)
    
    if tableName in r.db(dbName).table_list().run(conn):
        r.db(dbName).table_drop(tableName).run(conn)
    r.db(dbName).table_create(tableName).run(conn)

    print(""Inserting some data (%.2fs)"" % (time.time() - startTime))
    rdb_workload_common.insert_many(host=server1.host, port=server1.driver_port, database=dbName, table=tableName, count=10000)
    cluster.check()
    
    print(""Splitting into two shards (%.2fs)"" % (time.time() - startTime))
    shards = [
        {'primary_replica':server1.name, 'replicas':[server1.name, server2.name]},
        {'primary_replica':server2.name, 'replicas':[server2.name, server1.name]}
    ]
    res = r.db(dbName).table_config(tableName).update({'shards':shards}).run(conn)
    assert res['errors'] == 0, 'Errors after splitting into two shards: %s' % repr(res)
    r.db(dbName).table_wait().run(conn)
    cluster.check()

    print(""Changing the primary replica (%.2fs)"" % (time.time() - startTime))
    shards = [
        {'primary_replica':server2.name, 'replicas':[server2.name, server1.name]},
        {'primary_replica':server1.name, 'replicas':[server1.name, server2.name]}
    ]
    assert r.db(dbName).table_config(tableName).update({'shards':shards}).run(conn)['errors'] == 0
    r.db(dbName).table_wait().run(conn)
    cluster.check()

    print(""Changing it back (%.2fs)"" % (time.time() - startTime))
    shards = [
        {'primary_replica':server2.name, 'replicas':[server2.name, server1.name]},
        {'primary_replica':server1.name, 'replicas':[server1.name, server2.name]}
    ]
    assert r.db(dbName).table_config(tableName).update({'shards':shards}).run(conn)['errors'] == 0

    print(""Waiting for it to take effect (%.2fs)"" % (time.time() - startTime))
    r.db(dbName).table_wait().run(conn)
    cluster.check()

    assert len(list(r.db('rethinkdb').table('issues').run(conn))) == 0
    
    print(""Cleaning up (%.2fs)"" % (time.time() - startTime))
print(""Done. (%.2fs)"" % (time.time() - startTime))
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/usr/bin/env', 'python', '#', 'Copyright', '2010-2014', 'RethinkDB,', 'all', 'rights', 'reserved.', 'from', '__future__', 'import', 'print_function', 'import', 'sys,', 'os,', 'time', 'startTime', '=', 'time.time()', 'sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__),', 'os.path.pardir,', ""'common')))"", 'import', 'driver,', 'rdb_workload_common,', 'scenario_common,', 'utils,', 'vcoptparse', 'op', '=', 'vcoptparse.OptParser()', 'scenario_common.prepare_option_parser_mode_flags(op)', '_,', 'command_prefix,', 'serve_options', '=', 'scenario_common.parse_mode_flags(op.parse(sys.argv))', 'numNodes', '=', '2', 'r', '=', 'utils.import_python_driver()', 'dbName,', 'tableName', '=', 'utils.get_test_db_table()', 'print(""Starting', 'cluster', 'of', '%d', 'servers', '(%.2fs)""', '%', '(numNodes,', 'time.time()', '-', 'startTime))', 'with', 'driver.Cluster(initial_servers=numNodes,', ""output_folder='.',"", 'wait_until_ready=True,', 'command_prefix=command_prefix,', 'extra_options=serve_options)', 'as', 'cluster:', 'server1', '=', 'cluster[0]', 'server2', '=', 'cluster[1]', 'conn', '=', 'r.connect(host=server1.host,', 'port=server1.driver_port)', 'print(""Creating', 'db/table', '%s/%s', '(%.2fs)""', '%', '(dbName,', 'tableName,', 'time.time()', '-', 'startTime))', 'if', 'dbName', 'not', 'in', 'r.db_list().run(conn):', 'r.db_create(dbName).run(conn)', 'if', 'tableName', 'in', 'r.db(dbName).table_list().run(conn):', 'r.db(dbName).table_drop(tableName).run(conn)', 'r.db(dbName).table_create(tableName).run(conn)', 'print(""Inserting', 'some', 'data', '(%.2fs)""', '%', '(time.time()', '-', 'startTime))', 'rdb_workload_common.insert_many(host=server1.host,', 'port=server1.driver_port,', 'database=dbName,', 'table=tableName,', 'count=10000)', 'cluster.check()', 'print(""Splitting', 'into', 'two', 'shards', '(%.2fs)""', '%', '(time.time()', '-', 'startTime))', 'shards', '=', '[', ""{'primary_replica':server1.name,"", ""'replicas':[server1.name,"", 'server2.name]},', ""{'primary_replica':server2.name,"", ""'replicas':[server2.name,"", 'server1.name]}', ']', 'res', '=', ""r.db(dbName).table_config(tableName).update({'shards':shards}).run(conn)"", 'assert', ""res['errors']"", '==', '0,', ""'Errors"", 'after', 'splitting', 'into', 'two', 'shards:', ""%s'"", '%', 'repr(res)', 'r.db(dbName).table_wait().run(conn)', 'cluster.check()', 'print(""Changing', 'the', 'primary', 'replica', '(%.2fs)""', '%', '(time.time()', '-', 'startTime))', 'shards', '=', '[', ""{'primary_replica':server2.name,"", ""'replicas':[server2.name,"", 'server1.name]},', ""{'primary_replica':server1.name,"", ""'replicas':[server1.name,"", 'server2.name]}', ']', 'assert', ""r.db(dbName).table_config(tableName).update({'shards':shards}).run(conn)['errors']"", '==', '0', 'r.db(dbName).table_wait().run(conn)', 'cluster.check()', 'print(""Changing', 'it', 'back', '(%.2fs)""', '%', '(time.time()', '-', 'startTime))', 'shards', '=', '[', ""{'primary_replica':server2.name,"", ""'replicas':[server2.name,"", 'server1.name]},', ""{'primary_replica':server1.name,"", ""'replicas':[server1.name,"", 'server2.name]}', ']', 'assert', ""r.db(dbName).table_config(tableName).update({'shards':shards}).run(conn)['errors']"", '==', '0', 'print(""Waiting', 'for', 'it', 'to', 'take', 'effect', '(%.2fs)""', '%', '(time.time()', '-', 'startTime))', 'r.db(dbName).table_wait().run(conn)', 'cluster.check()', 'assert', ""len(list(r.db('rethinkdb').table('issues').run(conn)))"", '==', '0', 'print(""Cleaning', 'up', '(%.2fs)""', '%', '(time.time()', '-', 'startTime))', 'print(""Done.', '(%.2fs)""', '%', '(time.time()', '-', 'startTime))', '```']",challenge not surrounded by ''': ,
"/*
 * Policies are simply Express middleware functions which run before your controllers.
 * You can apply one or more policies for a given controller or action.
 *
 * Any policy file (e.g. `authenticated.js`) can be dropped into the `/policies` folder,
 * at which point it can be accessed below by its filename, minus the extension, (e.g. `authenticated`)
 *
 * For more information on policies, check out:
 * http://sailsjs.org/#documentation
 */


module.exports.policies = {

    // Default policy for all controllers and actions
    // (`true` allows public access) 

    '*': ""authenticated"",

    'authController': {
        '*': ""alreadyAuth"",
        ""logout"": ""authenticated"",
    },

    //with rest: true enabled on user we can post to /user which will automatically bind to 'create'
    //This is allowed without authentication
    'userController': {
        'create': true
    },

    //TODO: See: https://github.com/ichabodcole/Sails.js_ChatApp_v0.9.3/blob/backbone-modular/api/policies/MessagesPolicy.js
    // for a policy that also adds in req.body.userid = req.session.user.id; for each CUD method
    // This would be an easy way to avoid users wanting to ask info from other user.
    // From there, we can do Role-base access etc.


    /*
	// Here's an example of adding some policies to a controller
	RabbitController: {

		// Apply the `false` policy as the default for all of RabbitController's actions
		// (`false` prevents all access, which ensures that nothing bad happens to our rabbits)
		'*': false,

		// For the action `nurture`, apply the 'isRabbitMother' policy 
		// (this overrides `false` above)
		nurture	: 'isRabbitMother',

		// Apply the `isNiceToAnimals` AND `hasRabbitFood` policies
		// before letting any users feed our rabbits
		feed : ['isNiceToAnimals', 'hasRabbitFood']
	}
	*/
};


/**
 * Here's what the `isNiceToAnimals` policy from above might look like:
 * (this file would be located at `policies/isNiceToAnimals.js`)
 *
 * We'll make some educated guesses about whether our system will
 * consider this user someone who is nice to animals.
 *
 * Besides protecting rabbits (while a noble cause, no doubt),
 * here are a few other example use cases for policies:
 *
 *	+ cookie-based authentication
 *	+ role-based access control
 *	+ limiting file uploads based on MB quotas
 *	+ OAuth
 *	+ BasicAuth
 *	+ or any other kind of authentication scheme you can imagine
 *
 */

/*
module.exports = function isNiceToAnimals (req, res, next) {
	
	// `req.session` contains a set of data specific to the user making this request.
	// It's kind of like our app's ""memory"" of the current user.
	
	// If our user has a history of animal cruelty, not only will we 
	// prevent her from going even one step further (`return`), 
	// we'll go ahead and redirect her to PETA (`res.redirect`).
	if ( req.session.user.hasHistoryOfAnimalCruelty ) {
		return res.redirect('http://PETA.org');
	}

	// If the user has been seen frowning at puppies, we have to assume that
	// they might end up being mean to them, so we'll 
	if ( req.session.user.frownsAtPuppies ) {
		return res.redirect('http://www.dailypuppy.com/');
	}

	// Finally, if the user has a clean record, we'll call the `next()` function
	// to let them through to the next policy or our controller
	next();
};
*/","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```/*', '*', 'Policies', 'are', 'simply', 'Express', 'middleware', 'functions', 'which', 'run', 'before', 'your', 'controllers.', '*', 'You', 'can', 'apply', 'one', 'or', 'more', 'policies', 'for', 'a', 'given', 'controller', 'or', 'action.', '*', '*', 'Any', 'policy', 'file', '(e.g.', '`authenticated.js`)', 'can', 'be', 'dropped', 'into', 'the', '`/policies`', 'folder,', '*', 'at', 'which', 'point', 'it', 'can', 'be', 'accessed', 'below', 'by', 'its', 'filename,', 'minus', 'the', 'extension,', '(e.g.', '`authenticated`)', '*', '*', 'For', 'more', 'information', 'on', 'policies,', 'check', 'out:', '*', 'http://sailsjs.org/#documentation', '*/', 'module.exports.policies', '=', '{', '//', 'Default', 'policy', 'for', 'all', 'controllers', 'and', 'actions', '//', '(`true`', 'allows', 'public', 'access)', ""'*':"", '""authenticated"",', ""'authController':"", '{', ""'*':"", '""alreadyAuth"",', '""logout"":', '""authenticated"",', '},', '//with', 'rest:', 'true', 'enabled', 'on', 'user', 'we', 'can', 'post', 'to', '/user', 'which', 'will', 'automatically', 'bind', 'to', ""'create'"", '//This', 'is', 'allowed', 'without', 'authentication', ""'userController':"", '{', ""'create':"", 'true', '},', '//TODO:', 'See:', 'https://github.com/ichabodcole/Sails.js_ChatApp_v0.9.3/blob/backbone-modular/api/policies/MessagesPolicy.js', '//', 'for', 'a', 'policy', 'that', 'also', 'adds', 'in', 'req.body.userid', '=', 'req.session.user.id;', 'for', 'each', 'CUD', 'method', '//', 'This', 'would', 'be', 'an', 'easy', 'way', 'to', 'avoid', 'users', 'wanting', 'to', 'ask', 'info', 'from', 'other', 'user.', '//', 'From', 'there,', 'we', 'can', 'do', 'Role-base', 'access', 'etc.', '/*', '//', ""Here's"", 'an', 'example', 'of', 'adding', 'some', 'policies', 'to', 'a', 'controller', 'RabbitController:', '{', '//', 'Apply', 'the', '`false`', 'policy', 'as', 'the', 'default', 'for', 'all', 'of', ""RabbitController's"", 'actions', '//', '(`false`', 'prevents', 'all', 'access,', 'which', 'ensures', 'that', 'nothing', 'bad', 'happens', 'to', 'our', 'rabbits)', ""'*':"", 'false,', '//', 'For', 'the', 'action', '`nurture`,', 'apply', 'the', ""'isRabbitMother'"", 'policy', '//', '(this', 'overrides', '`false`', 'above)', 'nurture', ':', ""'isRabbitMother',"", '//', 'Apply', 'the', '`isNiceToAnimals`', 'AND', '`hasRabbitFood`', 'policies', '//', 'before', 'letting', 'any', 'users', 'feed', 'our', 'rabbits', 'feed', ':', ""['isNiceToAnimals',"", ""'hasRabbitFood']"", '}', '*/', '};', '/**', '*', ""Here's"", 'what', 'the', '`isNiceToAnimals`', 'policy', 'from', 'above', 'might', 'look', 'like:', '*', '(this', 'file', 'would', 'be', 'located', 'at', '`policies/isNiceToAnimals.js`)', '*', '*', ""We'll"", 'make', 'some', 'educated', 'guesses', 'about', 'whether', 'our', 'system', 'will', '*', 'consider', 'this', 'user', 'someone', 'who', 'is', 'nice', 'to', 'animals.', '*', '*', 'Besides', 'protecting', 'rabbits', '(while', 'a', 'noble', 'cause,', 'no', 'doubt),', '*', 'here', 'are', 'a', 'few', 'other', 'example', 'use', 'cases', 'for', 'policies:', '*', '*', '+', 'cookie-based', 'authentication', '*', '+', 'role-based', 'access', 'control', '*', '+', 'limiting', 'file', 'uploads', 'based', 'on', 'MB', 'quotas', '*', '+', 'OAuth', '*', '+', 'BasicAuth', '*', '+', 'or', 'any', 'other', 'kind', 'of', 'authentication', 'scheme', 'you', 'can', 'imagine', '*', '*/', '/*', 'module.exports', '=', 'function', 'isNiceToAnimals', '(req,', 'res,', 'next)', '{', '//', '`req.session`', 'contains', 'a', 'set', 'of', 'data', 'specific', 'to', 'the', 'user', 'making', 'this', 'request.', '//', ""It's"", 'kind', 'of', 'like', 'our', ""app's"", '""memory""', 'of', 'the', 'current', 'user.', '//', 'If', 'our', 'user', 'has', 'a', 'history', 'of', 'animal', 'cruelty,', 'not', 'only', 'will', 'we', '//', 'prevent', 'her', 'from', 'going', 'even', 'one', 'step', 'further', '(`return`),', '//', ""we'll"", 'go', 'ahead', 'and', 'redirect', 'her', 'to', 'PETA', '(`res.redirect`).', 'if', '(', 'req.session.user.hasHistoryOfAnimalCruelty', ')', '{', 'return', ""res.redirect('http://PETA.org');"", '}', '//', 'If', 'the', 'user', 'has', 'been', 'seen', 'frowning', 'at', 'puppies,', 'we', 'have', 'to', 'assume', 'that', '//', 'they', 'might', 'end', 'up', 'being', 'mean', 'to', 'them,', 'so', ""we'll"", 'if', '(', 'req.session.user.frownsAtPuppies', ')', '{', 'return', ""res.redirect('http://www.dailypuppy.com/');"", '}', '//', 'Finally,', 'if', 'the', 'user', 'has', 'a', 'clean', 'record,', ""we'll"", 'call', 'the', '`next()`', 'function', '//', 'to', 'let', 'them', 'through', 'to', 'the', 'next', 'policy', 'or', 'our', 'controller', 'next();', '};', '*/```']",challenge not surrounded by ''': ,
"#!/usr/bin/env python

import argparse
import os
from cinderclient.v1 import client
from sqlalchemy import create_engine, distinct, select, MetaData, Table

parser = argparse.ArgumentParser(description='Cinder Quota Sync')
tenant_group = parser.add_mutually_exclusive_group(required=True)
tenant_group.add_argument('--tenant', action='append', default=[], help='Tenant(s) to work on')
tenant_group.add_argument('--all', action='store_true', default=False, help='Work on ALL tenants')
parser.add_argument('--verbose', '-v', action='count', default=0, help='Verbose')
args = parser.parse_args()

cinder_db_conn = os.getenv('CINDER_DB_CONNECTION')

if args.verbose >= 2:
  sql_echo = True
else:
  sql_echo = False

engine = create_engine(cinder_db_conn, echo=sql_echo)
conn = engine.connect()
metadata = MetaData()
quota_usages = Table(
    'quota_usages',
     metadata,
     autoload=True,
     autoload_with=engine
)


cc = client.Client(os.getenv('OS_USERNAME'), os.getenv('OS_PASSWORD'), os.getenv('OS_TENANT_NAME'), os.getenv('OS_AUTH_URL'), service_type='volume')
usage = dict()

if args.all:
  init_select = select([quota_usages.c.project_id]).distinct()
  projects = conn.execute(init_select)
  for project in projects:
    for p in project.items():
      usage[p[1]] = {'size': 0, 'volumes': 0}
else:
  for t in args.tenant:
    usage[t] = {'size': 0, 'volumes': 0}

volumes = []

if args.all:
  volumes = cc.volumes.list(True, {'all_tenants': '1'})
else:
  for t in args.tenant:
    for v in cc.volumes.list(True, {'all_tenants': '1', 'project_id': t}):
      volumes.append(v)

for vol in volumes:
  project_id = getattr(vol,'os-vol-tenant-attr:tenant_id')
  if project_id not in usage:
    usage[project_id] = {'size': 0, 'volumes': 0}
  if vol.status in ('available', 'in-use', 'creating'):
    usage[project_id]['size'] += vol.size
    usage[project_id]['volumes'] += 1

for project in usage:
  print ""project {} using {} gigs in {} volumes"".format(project, usage[project]['size'], usage[project]['volumes'])
  update = quota_usages.update().\
            where(quota_usages.c.project_id == project).\
            where(quota_usages.c.resource == 'volumes').\
            values(in_use=usage[project]['volumes'])
  conn.execute(update)
  update = quota_usages.update().\
            where(quota_usages.c.project_id == project).\
            where(quota_usages.c.resource == 'gigabytes').\
            values(in_use=usage[project]['size'])
  conn.execute(update)
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#!/usr/bin/env', 'python', 'import', 'argparse', 'import', 'os', 'from', 'cinderclient.v1', 'import', 'client', 'from', 'sqlalchemy', 'import', 'create_engine,', 'distinct,', 'select,', 'MetaData,', 'Table', 'parser', '=', ""argparse.ArgumentParser(description='Cinder"", 'Quota', ""Sync')"", 'tenant_group', '=', 'parser.add_mutually_exclusive_group(required=True)', ""tenant_group.add_argument('--tenant',"", ""action='append',"", 'default=[],', ""help='Tenant(s)"", 'to', 'work', ""on')"", ""tenant_group.add_argument('--all',"", ""action='store_true',"", 'default=False,', ""help='Work"", 'on', 'ALL', ""tenants')"", ""parser.add_argument('--verbose',"", ""'-v',"", ""action='count',"", 'default=0,', ""help='Verbose')"", 'args', '=', 'parser.parse_args()', 'cinder_db_conn', '=', ""os.getenv('CINDER_DB_CONNECTION')"", 'if', 'args.verbose', '>=', '2:', 'sql_echo', '=', 'True', 'else:', 'sql_echo', '=', 'False', 'engine', '=', 'create_engine(cinder_db_conn,', 'echo=sql_echo)', 'conn', '=', 'engine.connect()', 'metadata', '=', 'MetaData()', 'quota_usages', '=', 'Table(', ""'quota_usages',"", 'metadata,', 'autoload=True,', 'autoload_with=engine', ')', 'cc', '=', ""client.Client(os.getenv('OS_USERNAME'),"", ""os.getenv('OS_PASSWORD'),"", ""os.getenv('OS_TENANT_NAME'),"", ""os.getenv('OS_AUTH_URL'),"", ""service_type='volume')"", 'usage', '=', 'dict()', 'if', 'args.all:', 'init_select', '=', 'select([quota_usages.c.project_id]).distinct()', 'projects', '=', 'conn.execute(init_select)', 'for', 'project', 'in', 'projects:', 'for', 'p', 'in', 'project.items():', 'usage[p[1]]', '=', ""{'size':"", '0,', ""'volumes':"", '0}', 'else:', 'for', 't', 'in', 'args.tenant:', 'usage[t]', '=', ""{'size':"", '0,', ""'volumes':"", '0}', 'volumes', '=', '[]', 'if', 'args.all:', 'volumes', '=', 'cc.volumes.list(True,', ""{'all_tenants':"", ""'1'})"", 'else:', 'for', 't', 'in', 'args.tenant:', 'for', 'v', 'in', 'cc.volumes.list(True,', ""{'all_tenants':"", ""'1',"", ""'project_id':"", 't}):', 'volumes.append(v)', 'for', 'vol', 'in', 'volumes:', 'project_id', '=', ""getattr(vol,'os-vol-tenant-attr:tenant_id')"", 'if', 'project_id', 'not', 'in', 'usage:', 'usage[project_id]', '=', ""{'size':"", '0,', ""'volumes':"", '0}', 'if', 'vol.status', 'in', ""('available',"", ""'in-use',"", ""'creating'):"", ""usage[project_id]['size']"", '+=', 'vol.size', ""usage[project_id]['volumes']"", '+=', '1', 'for', 'project', 'in', 'usage:', 'print', '""project', '{}', 'using', '{}', 'gigs', 'in', '{}', 'volumes"".format(project,', ""usage[project]['size'],"", ""usage[project]['volumes'])"", 'update', '=', 'quota_usages.update().\\', 'where(quota_usages.c.project_id', '==', 'project).\\', 'where(quota_usages.c.resource', '==', ""'volumes').\\"", ""values(in_use=usage[project]['volumes'])"", 'conn.execute(update)', 'update', '=', 'quota_usages.update().\\', 'where(quota_usages.c.project_id', '==', 'project).\\', 'where(quota_usages.c.resource', '==', ""'gigabytes').\\"", ""values(in_use=usage[project]['size'])"", 'conn.execute(update)', '```']",challenge not surrounded by ''': ,
"(function (app) {
    var helper = app('helper');

    app('bb-co')('ui-tabs', {
        tpl: 'scripts/ui-controllers/components/ui-controls/ui-tabs',
        init: function () {
            this._onItemClickCbs = app('on-callbacks')();
            this.defineScope({
                active: 0,
                tabItems: []
            });
        },
        setTabs: function (tabItems) {
            var scopeItems = this.getScope().tabItems;
            scopeItems.clear();
            for (var i = 0, l = tabItems.length; i < l; i++){
                var item = tabItems[i];
                var type = typeof item;
                var scopeItem = {
                    active: false,
                    title: type == ""object"" ? item.title : item,
                    data: item
                };
                scopeItems.push(scopeItem);
            }
            scopeItems[0] && (scopeItems[0].active = true);
        },
        onItemClick: function (cb) {
            this._onItemClickCbs.push(cb);
        },
        processContent: function (content) {

            var self = this;
            content.on('jrclick', {handleWhenDown: true}, function (ev) {
                var target = $(ev.target).closest('.tab-item');
                if (target.length) {
                    // menu item click
                    var scope = self.getScope();
                    var pos = target.index();
                    var tabItems = scope.tabItems;
                    var item = tabItems[pos];
                    if (item){
                        helper.arrayWalk(tabItems, function (node) {
                            node.active = false;
                        });
                        item.active = true;
                        self._onItemClickCbs.callCbs(item.data, pos);
                    }
                }
            });
        }
    });

})(window.app);
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```(function', '(app)', '{', 'var', 'helper', '=', ""app('helper');"", ""app('bb-co')('ui-tabs',"", '{', 'tpl:', ""'scripts/ui-controllers/components/ui-controls/ui-tabs',"", 'init:', 'function', '()', '{', 'this._onItemClickCbs', '=', ""app('on-callbacks')();"", 'this.defineScope({', 'active:', '0,', 'tabItems:', '[]', '});', '},', 'setTabs:', 'function', '(tabItems)', '{', 'var', 'scopeItems', '=', 'this.getScope().tabItems;', 'scopeItems.clear();', 'for', '(var', 'i', '=', '0,', 'l', '=', 'tabItems.length;', 'i', '<', 'l;', 'i++){', 'var', 'item', '=', 'tabItems[i];', 'var', 'type', '=', 'typeof', 'item;', 'var', 'scopeItem', '=', '{', 'active:', 'false,', 'title:', 'type', '==', '""object""', '?', 'item.title', ':', 'item,', 'data:', 'item', '};', 'scopeItems.push(scopeItem);', '}', 'scopeItems[0]', '&&', '(scopeItems[0].active', '=', 'true);', '},', 'onItemClick:', 'function', '(cb)', '{', 'this._onItemClickCbs.push(cb);', '},', 'processContent:', 'function', '(content)', '{', 'var', 'self', '=', 'this;', ""content.on('jrclick',"", '{handleWhenDown:', 'true},', 'function', '(ev)', '{', 'var', 'target', '=', ""$(ev.target).closest('.tab-item');"", 'if', '(target.length)', '{', '//', 'menu', 'item', 'click', 'var', 'scope', '=', 'self.getScope();', 'var', 'pos', '=', 'target.index();', 'var', 'tabItems', '=', 'scope.tabItems;', 'var', 'item', '=', 'tabItems[pos];', 'if', '(item){', 'helper.arrayWalk(tabItems,', 'function', '(node)', '{', 'node.active', '=', 'false;', '});', 'item.active', '=', 'true;', 'self._onItemClickCbs.callCbs(item.data,', 'pos);', '}', '}', '});', '}', '});', '})(window.app);', '```']",challenge not surrounded by ''': ,
"{% set active_page='pc'%}{% extends ""layout.html"" %}
{% block title %}{{pc.id}} &raquo; Organisation Conditions{% endblock %}
{% block content %}

<div id=""template-target"">
</div>

{% raw %}
<script type=""text/template"" id=""template-source"">


  {{#pc}}
	<h1>Condition {{id}}</h1>
    <table class=""table"" id=""pc"">
    <tbody>
    <tr>
	<td>ID</td><td>{{id}}</td>
    </tr>
    <tr>
	<td>Description</td><td>{{description}}</td>
    </tr>    
    <tr>
	<td>Organisation</td>
	<td><a href=""{{org_url}}"">
		{{organisation_name}}</a>
	</td>
    </tr>  
    <tr>
	<td>Test</td>
	<td><a href=""{{test_url}}"">{{test_name}}</a></td>
    </tr>  
    <tr>
	<td>Operation</td>
	<td>{{^operation}}Hide{{/operation}}{{#operation}}Display{{/operation}}</td>
    </tr>  
    <tr>
	<td>Condition</td><td>{{condition}}</td>
    </tr> 
    <tr>
	<td>Condition value</td><td>{{condition_value}}</td>
    </tr>   
    <tr>
	<td colspan=""2"">
	  <a class=""btn"" href=""{{org_cond_edit_url}}"">Edit</a>
	</td>
    </tr>
    </tbody>
    </table>
	{{/pc}}
</script>
{% endraw %}
{% endblock %}
{% block final_scripts %}
   <script src=""static/jquery.tablesorter.min.js""></script>
{% endblock %}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```{%', 'set', ""active_page='pc'%}{%"", 'extends', '""layout.html""', '%}', '{%', 'block', 'title', '%}{{pc.id}}', '&raquo;', 'Organisation', 'Conditions{%', 'endblock', '%}', '{%', 'block', 'content', '%}', '<div', 'id=""template-target"">', '</div>', '{%', 'raw', '%}', '<script', 'type=""text/template""', 'id=""template-source"">', '{{#pc}}', '<h1>Condition', '{{id}}</h1>', '<table', 'class=""table""', 'id=""pc"">', '<tbody>', '<tr>', '<td>ID</td><td>{{id}}</td>', '</tr>', '<tr>', '<td>Description</td><td>{{description}}</td>', '</tr>', '<tr>', '<td>Organisation</td>', '<td><a', 'href=""{{org_url}}"">', '{{organisation_name}}</a>', '</td>', '</tr>', '<tr>', '<td>Test</td>', '<td><a', 'href=""{{test_url}}"">{{test_name}}</a></td>', '</tr>', '<tr>', '<td>Operation</td>', '<td>{{^operation}}Hide{{/operation}}{{#operation}}Display{{/operation}}</td>', '</tr>', '<tr>', '<td>Condition</td><td>{{condition}}</td>', '</tr>', '<tr>', '<td>Condition', 'value</td><td>{{condition_value}}</td>', '</tr>', '<tr>', '<td', 'colspan=""2"">', '<a', 'class=""btn""', 'href=""{{org_cond_edit_url}}"">Edit</a>', '</td>', '</tr>', '</tbody>', '</table>', '{{/pc}}', '</script>', '{%', 'endraw', '%}', '{%', 'endblock', '%}', '{%', 'block', 'final_scripts', '%}', '<script', 'src=""static/jquery.tablesorter.min.js""></script>', '{%', 'endblock', '%}', '```']",challenge not surrounded by ''': ,
"package com.nisovin.magicspells.events;

import org.bukkit.event.Event;
import org.bukkit.entity.Player;
import org.bukkit.event.Cancellable;
import org.bukkit.event.HandlerList;

public class MagicSpellsGenericPlayerEvent extends Event implements Cancellable {

	private static final HandlerList handlers = new HandlerList();

	private boolean cancelled = false;

	private final Player player;

	public MagicSpellsGenericPlayerEvent(Player player) {
		this.player = player;
	}

	public Player getPlayer() {
		return player;
	}

	@Override
	public boolean isCancelled() {
		return cancelled;
	}

	@Override
	public void setCancelled(boolean cancelled) {
		this.cancelled = cancelled;
	}

	@Override
	public HandlerList getHandlers() {
		return handlers;
	}

	public static HandlerList getHandlerList() {
		return handlers;
	}

}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'com.nisovin.magicspells.events;', 'import', 'org.bukkit.event.Event;', 'import', 'org.bukkit.entity.Player;', 'import', 'org.bukkit.event.Cancellable;', 'import', 'org.bukkit.event.HandlerList;', 'public', 'class', 'MagicSpellsGenericPlayerEvent', 'extends', 'Event', 'implements', 'Cancellable', '{', 'private', 'static', 'final', 'HandlerList', 'handlers', '=', 'new', 'HandlerList();', 'private', 'boolean', 'cancelled', '=', 'false;', 'private', 'final', 'Player', 'player;', 'public', 'MagicSpellsGenericPlayerEvent(Player', 'player)', '{', 'this.player', '=', 'player;', '}', 'public', 'Player', 'getPlayer()', '{', 'return', 'player;', '}', '@Override', 'public', 'boolean', 'isCancelled()', '{', 'return', 'cancelled;', '}', '@Override', 'public', 'void', 'setCancelled(boolean', 'cancelled)', '{', 'this.cancelled', '=', 'cancelled;', '}', '@Override', 'public', 'HandlerList', 'getHandlers()', '{', 'return', 'handlers;', '}', 'public', 'static', 'HandlerList', 'getHandlerList()', '{', 'return', 'handlers;', '}', '}', '```']",challenge not surrounded by ''': ,
"package io.github.izzyleung.zhihudailypurify.support;

import android.content.Intent;
import android.content.pm.PackageManager;

import io.github.izzyleung.zhihudailypurify.ZhihuDailyPurifyApplication;

public final class Check {
    private Check() {

    }

    public static boolean isZhihuClientInstalled() {
        try {
            return preparePackageManager().getPackageInfo(Constants.Information.ZHIHU_PACKAGE_ID, PackageManager.GET_ACTIVITIES) != null;
        } catch (PackageManager.NameNotFoundException ignored) {
            return false;
        }
    }

    public static boolean isIntentSafe(Intent intent) {
        return preparePackageManager().queryIntentActivities(intent, 0).size() > 0;
    }

    private static PackageManager preparePackageManager() {
        return ZhihuDailyPurifyApplication.getInstance().getPackageManager();
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'io.github.izzyleung.zhihudailypurify.support;', 'import', 'android.content.Intent;', 'import', 'android.content.pm.PackageManager;', 'import', 'io.github.izzyleung.zhihudailypurify.ZhihuDailyPurifyApplication;', 'public', 'final', 'class', 'Check', '{', 'private', 'Check()', '{', '}', 'public', 'static', 'boolean', 'isZhihuClientInstalled()', '{', 'try', '{', 'return', 'preparePackageManager().getPackageInfo(Constants.Information.ZHIHU_PACKAGE_ID,', 'PackageManager.GET_ACTIVITIES)', '!=', 'null;', '}', 'catch', '(PackageManager.NameNotFoundException', 'ignored)', '{', 'return', 'false;', '}', '}', 'public', 'static', 'boolean', 'isIntentSafe(Intent', 'intent)', '{', 'return', 'preparePackageManager().queryIntentActivities(intent,', '0).size()', '>', '0;', '}', 'private', 'static', 'PackageManager', 'preparePackageManager()', '{', 'return', 'ZhihuDailyPurifyApplication.getInstance().getPackageManager();', '}', '}', '```']",challenge not surrounded by ''': ,
"package pbgAssignment_wrapperForJBox2D;

import java.awt.BorderLayout;
import java.awt.Component;

import javax.swing.JFrame;

public class JEasyFrame extends JFrame {
    /* Author: Norbert Voelker
     */

    public Component comp;

    public JEasyFrame(Component comp, String title) {
        super(title);
        this.comp = comp;
        getContentPane().add(BorderLayout.CENTER, comp);
        pack();
        this.setVisible(true);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        repaint();
    }
}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```package', 'pbgAssignment_wrapperForJBox2D;', 'import', 'java.awt.BorderLayout;', 'import', 'java.awt.Component;', 'import', 'javax.swing.JFrame;', 'public', 'class', 'JEasyFrame', 'extends', 'JFrame', '{', '/*', 'Author:', 'Norbert', 'Voelker', '*/', 'public', 'Component', 'comp;', 'public', 'JEasyFrame(Component', 'comp,', 'String', 'title)', '{', 'super(title);', 'this.comp', '=', 'comp;', 'getContentPane().add(BorderLayout.CENTER,', 'comp);', 'pack();', 'this.setVisible(true);', 'setDefaultCloseOperation(EXIT_ON_CLOSE);', 'repaint();', '}', '}', '```']",challenge not surrounded by ''': ,
"<div class=""header"">
  <div class=""btns"">
    <icon-button
      icon=""cogwheel""
      (click)=""toggleSettings()""
      [active]=""settingsExpanded""
      class=""btn""
    ></icon-button>
    <!--utton.btn.waves-circle.waves-light-->
    <!--  +icon('clock-history')-->
  </div>
  <status-area></status-area>
</div>
<div class=""control-bar"">
  <div class=""control"">
    <temp-control></temp-control>
  </div>
  <div class=""content"">{{ zoneTitle ? zoneTitle : 'Во всех комнатах' }}</div>
</div>
<settings-panel [hidden]=""!settingsExpanded""></settings-panel>

<div class=""floor-plan"">
  <floor-plan></floor-plan>
  <!--include /misc/plan.svg-->
  <zone-control *ngFor=""let zone of zones"" [zone]=""zone""></zone-control>
</div>

<div class=""schedule-progress""></div>
<reconnect-overlay></reconnect-overlay>
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```<div', 'class=""header"">', '<div', 'class=""btns"">', '<icon-button', 'icon=""cogwheel""', '(click)=""toggleSettings()""', '[active]=""settingsExpanded""', 'class=""btn""', '></icon-button>', '<!--utton.btn.waves-circle.waves-light-->', '<!--', ""+icon('clock-history')-->"", '</div>', '<status-area></status-area>', '</div>', '<div', 'class=""control-bar"">', '<div', 'class=""control"">', '<temp-control></temp-control>', '</div>', '<div', 'class=""content"">{{', 'zoneTitle', '?', 'zoneTitle', ':', ""'Во"", 'всех', ""комнатах'"", '}}</div>', '</div>', '<settings-panel', '[hidden]=""!settingsExpanded""></settings-panel>', '<div', 'class=""floor-plan"">', '<floor-plan></floor-plan>', '<!--include', '/misc/plan.svg-->', '<zone-control', '*ngFor=""let', 'zone', 'of', 'zones""', '[zone]=""zone""></zone-control>', '</div>', '<div', 'class=""schedule-progress""></div>', '<reconnect-overlay></reconnect-overlay>', '```']",challenge not surrounded by ''': ,
"#pragma once

#include ""terminalpp/detail/ascii.hpp""

//* =========================================================================
/// \namespace terminalpp::ansi::osc
/// \brief Constants for commands that begin with the Operating System
/// Control sequence.
//* =========================================================================
namespace terminalpp { namespace ansi { namespace osc {

static constexpr byte set_window_title = terminalpp::detail::ascii::two;

}}}
","['Add', 'a', 'bug', 'to', 'the', 'following', 'code:', '```#pragma', 'once', '#include', '""terminalpp/detail/ascii.hpp""', '//*', '=========================================================================', '///', '\\namespace', 'terminalpp::ansi::osc', '///', '\\brief', 'Constants', 'for', 'commands', 'that', 'begin', 'with', 'the', 'Operating', 'System', '///', 'Control', 'sequence.', '//*', '=========================================================================', 'namespace', 'terminalpp', '{', 'namespace', 'ansi', '{', 'namespace', 'osc', '{', 'static', 'constexpr', 'byte', 'set_window_title', '=', 'terminalpp::detail::ascii::two;', '}}}', '```']",challenge not surrounded by ''': ,
